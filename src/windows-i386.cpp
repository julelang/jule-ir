// Auto generated by JuleC.
// JuleC version: jule0.0.16 @master
// Date: 3/9/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <winsock2.h>
#include <ws2ipdef.h>
#include <windows.h>
#include <fcntl.h>
#include <io.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _209d2db9b_acceptRange;
struct _209e0d4d9_StrBuilder;
struct _20b09587e_Range16;
struct _20b095dac_Range32;
struct _20b096330_RangeTable;
struct _20b0e3789_lazyBuff;
struct _209c238a4_DirEntry;
struct _209c23b3a_Directory;
struct _209c24d39_File;
struct _209c26e6d_Status;
struct _20b19c04b_cmdAttrs;
struct _1eb22e132_Log;
struct _1b9a81587_floatInfo;
struct _1b9a82214_decimalSlice;
struct _1b9a992b4_leftCheat;
struct _1b9a99ccb_decimal;
struct _1b9aac4c5_Const;
struct _1abd0a38a_Token;
struct _1abd10b21_File;
struct _1abd12c77_kindPair;
struct _1abd18c5b_lex;
struct _1abd1d931_Ast;
struct _1abd1e844_Node;
struct _1abd1ec62_Directive;
struct _1abd20845_TypeDecl;
struct _1abd20e50_IdentTypeDecl;
struct _1abd21219_SubIdentTypeDecl;
struct _1abd215e3_NamespaceTypeDecl;
struct _1abd218e0_SptrTypeDecl;
struct _1abd21c75_SlcTypeDecl;
struct _1abd22072_TupleTypeDecl;
struct _1abd2236e_PtrTypeDecl;
struct _1abd22b11_ArrTypeDecl;
struct _1abd2335e_MapTypeDecl;
struct _1abd23738_RetTypeDecl;
struct _1abd24b79_Expr;
struct _1abd24e43_RangeExpr;
struct _1abd2554d_UseExpr;
struct _1abd2576d_TupleExpr;
struct _1abd25b14_LitExpr;
struct _1abd25edd_UnsafeExpr;
struct _1abd26494_IdentExpr;
struct _1abd26c36_UnaryExpr;
struct _1abd27110_VariadicExpr;
struct _1abd274d9_CastExpr;
struct _1abd278b3_NsSelectionExpr;
struct _1abd27c8c_SubIdentExpr;
struct _1abd28243_BinaryExpr;
struct _1abd288a3_FnCallExpr;
struct _1abd29398_FieldExprPair;
struct _1abd29bc3_StructLit;
struct _1abd2a179_BraceLit;
struct _1abd2a9a4_KeyValPair;
struct _1abd2b1d0_SliceExpr;
struct _1abd2bb3c_IndexingExpr;
struct _1abd2c29c_SlicingExpr;
struct _1abd2c599_Constraint;
struct _1abd2ca50_GenericDecl;
struct _1abd2ce29_LabelSt;
struct _1abd2d303_GotoSt;
struct _1abd2d600_FallSt;
struct _1abd2dc60_AssignLeft;
struct _1abd2e2e3_AssignSt;
struct _1abd30206_Stmt;
struct _1abd30866_ScopeTree;
struct _1abd310a3_ParamDecl;
struct _1abd32505_FnDecl;
struct _1abd336b0_VarDecl;
struct _1abd33a89_RetSt;
struct _1abd34309_Iter;
struct _1abd34b34_WhileKind;
struct _1abd3553b_RangeKind;
struct _1abd35915_BreakSt;
struct _1abd35cde_ContSt;
struct _1abd36295_If;
struct _1abd3666e_Else;
struct _1abd36b25_Conditional;
struct _1abd37362_TypeAliasDecl;
struct _1abd37818_Case;
struct _1abd38132_MatchCase;
struct _1abd3894b_UseDecl;
struct _1abd38e02_EnumItemDecl;
struct _1abd399b3_EnumDecl;
struct _1abd3a2dd_TypeEnumItemDecl;
struct _1abd3a94d_TypeEnumDecl;
struct _1abd3ac17_FieldDecl;
struct _1abd3b60d_StructDecl;
struct _1abd3bd4a_TraitDecl;
struct _1abd3c4aa_Impl;
struct _1abd3d7a8_Field;
struct _1abd407bb_Operators;
struct _1abd416ce_Struct;
struct _1abd438ac_FieldIns;
struct _1abd48362_OperandExprModel;
struct _1abd4885c_BinaryExprModel;
struct _1abd48c36_UnaryExprModel;
struct _1abd49264_StructArgExprModel;
struct _1abd4960a_StructLitExprModel;
struct _1abd49907_AllocStructLitExprModel;
struct _1abd49e8a_CastingExprModel;
struct _1abd4a83c_FnCallExprModel;
struct _1abd4ac16_SliceExprModel;
struct _1abd4b1bc_IndexingExprModel;
struct _1abd4b673_AnonFnExprModel;
struct _1abd4ba4c_KeyValPairExprModel;
struct _1abd4c003_MapExprModel;
struct _1abd4c586_SlicingExprModel;
struct _1abd4cb19_TraitSubIdentExprModel;
struct _1abd4d4aa_StructSubIdentExprModel;
struct _1abd4d851_StructStaticIdentExprModel;
struct _1abd4dc2a_ArrayExprModel;
struct _1abd4e027_TupleExprModel;
struct _1abd4e401_BuiltinOutCallExprModel;
struct _1abd4e7ca_BuiltinOutlnCallExprModel;
struct _1abd4eba4_BuiltinNewCallExprModel;
struct _1abd5007d_BuiltinPanicCallExprModel;
struct _1abd50534_BuiltinAssertCallExprModel;
struct _1abd509da_BuiltinMakeCallExprModel;
struct _1abd50db4_BuiltinAppendCallExprModel;
struct _1abd511b1_BuiltinLenCallExprModel;
struct _1abd514ad_BuiltinCapCallExprModel;
struct _1abd51887_BuiltinDeleteCallExprModel;
struct _1abd51c61_BuiltinCopyCallExprModel;
struct _1abd5213a_BuiltinErrorCallExprModel;
struct _1abd527de_SizeofExprModel;
struct _1abd529cb_AlignofExprModel;
struct _1abd52c73_RuneExprModel;
struct _1abd53070_IntegratedToStrExprModel;
struct _1abd53449_BackendEmitExprModel;
struct _1abd53746_FreeExprModel;
struct _1abd5444a_RetType;
struct _1abd54bcb_Param;
struct _1abd566a0_Fn;
struct _1abd58608_ParamIns;
struct _1abd59681_FnIns;
struct _1abd5c860_ReferenceStack;
struct _1abd5dd6c_Pass;
struct _1abd63822_symbolBuilder;
struct _1abd69a59_Trait;
struct _1abd6b6e8_EnumItem;
struct _1abd6c265_Enum;
struct _1abd6d398_TypeEnumItem;
struct _1abd6d970_TypeEnum;
struct _1abd71ac7_comptimeRange;
struct _1abd7259a_comptimeStructField;
struct _1abd7425b_comptimeStructFields;
struct _1abd75856_comptimeStatic;
struct _1abd77517_comptimeStatics;
struct _1abd78b12_comptimeEnumField;
struct _1abd79ea9_comptimeEnumFields;
struct _1abd7b5a4_comptimeParam;
struct _1abd7d73d_comptimeParams;
struct _1abd7ed05_comptimeTypeInfos;
struct _1abd81400_comptimeTypeInfo;
struct _1ab64460e_comptimeValue;
struct _1ab646e5d_comptimeFiles;
struct _1ab648558_comptimeFile;
struct _1ab64ccbb_constraintChecker;
struct _1ab650120_Impl;
struct _1ab655576_Scope;
struct _1ab655994_If;
struct _1ab655c91_Else;
struct _1ab6561ae_Conditional;
struct _1ab6564ab_InfIter;
struct _1ab656962_WhileIter;
struct _1ab6573ad_RangeIter;
struct _1ab657743_ContSt;
struct _1ab657b1c_BreakSt;
struct _1ab657e19_Label;
struct _1ab6582e3_GotoSt;
struct _1ab6586bc_Postfix;
struct _1ab658b73_Assign;
struct _1ab659129_MultiAssign;
struct _1ab659789_Match;
struct _1ab65a2b2_Case;
struct _1ab65a9aa_FallSt;
struct _1ab65ad51_RetSt;
struct _1ab65b4b1_scopeLabel;
struct _1ab65ba44_scopeGoto;
struct _1ab65ca34_scopeChecker;
struct _1ab671163_directiveChecker;
struct _1ab67760e_ImportInfo;
struct _1ab67a535_Package;
struct _1ab696d9d_commonSemaMeta;
struct _1ab6979a3_Sema;
struct _1ab6b7671_missingRetChecker;
struct _1abda8d2e_Var;
struct _1abda9ba9_FuncPattern;
struct _1abde85ee_typeCompatibilityChecker;
struct _1abdea39d_assignTypeChecker;
struct _1abdebc73_dynamicTypeAnnotation;
struct _1abe01ad0_fnCallArgChecker;
struct _1abe04a17_structLitChecker;
struct _1abe067e9_rangeChecker;
struct _1abe0905a_retTypeChecker;
struct _1abe0b5bd_SymbolTable;
struct _1abe11936_Data;
struct _1abe12aad_Value;
struct _1abe1365d_Eval;
struct _1abe31d85_unaryEval;
struct _1abe33d21_binaryEval;
struct _1abe41449_InsGeneric;
struct _1abe4203d_TypeAlias;
struct _1abe42d30_TypeKind;
struct _1abe4a002_TypeSymbol;
struct _1abe4a909_Prim;
struct _1abe4e435_Sptr;
struct _1abe4ee08_Slc;
struct _1abe509ec_Tuple;
struct _1abe5159c_Map;
struct _1abe52229_Arr;
struct _1abe52bec_Ptr;
struct _1abe53bed_referencer;
struct _1abe54bdd_typeChecker;
struct _1abe5c894_identTypeLookup;
struct _1ac899764_FileInfo;
struct _1ac8e2aed_stmt;
struct _1ac8e348e_scopeParser;
struct _1ac900db4_exprBuilder;
struct _1ac90d61e_assignInfo;
struct _1ac911a1d_parser;
struct _1ac923b40_typeBuilder;
struct _1ac17be37_CompileInfo;
struct _1ac17d411_directiveEval;
struct _1ac927b33_JuleImporter;
struct _1ac937ec8_OrderedDefines;
struct _1aca7a58d_liveTable;
struct _1acaae2a3_scopeDeadCode;
struct _1acab353d_exprDeadCode;
struct _1ac03b467_ExceptionalForwardingExprModel;
struct _1ac03b7db_SwapExprModel;
struct _1ac03bbb5_EmptyCompareExprModel;
struct _1ac03c039_RefExprModel;
struct _1ac03c4ac_StrCompExprModel;
struct _1ac03ca40_MutSlicingExprModel;
struct _1ac03cd3c_UnsafeBinaryExprModel;
struct _1ac03d1c2_UnsafeIndexingExprModel;
struct _1ac03d59b_PushToSliceExprModel;
struct _1ac03d975_AppendToSliceExprModel;
struct _1ac03dd4e_StrRuneIter;
struct _1ac03e14b_UnsafeDerefExprModel;
struct _1ac03e448_UnsafeCastingExprModel;
struct _1ac04012a_nilVar;
struct _1ac04046b_nils;
struct _1ac939639_scopeOptimizer;
struct _1ac940cb1_exprOptimizer;
struct _1ac94a837_dynamicVar;
struct _1ac94ab78_dynamic;
struct _1ac94d807_data;
struct _1ac94edad_boundaryVar;
struct _1ac9501ee_boundary;
struct _1acaba589_Optimizer;
struct _1ac608c65_AnsiEscape;
struct _1ac60a64b_Logger;
struct _1ad423e25_AbsTime;
struct _1ad4245eb_Time;
struct _1ad353d00_scopeCoder;
struct _1ad35e437_exprCoder;
struct _1ad36ec3e_TestCoder;
struct _1ad372bba_identCoder;
struct _1ad42cdc9_SerializationInfo;
struct _1ad42d2e7_traitCast;
struct _1ad42d6c1_anonHash;
struct _1ad43dd0d_customType;
struct _1ad43e946_typeCoder;
struct _1ad447531_resultCoder;
struct _1b20ec6cc_Flag;
struct _1b294a2e3_Flag;
struct _1b294d956_Flag;
struct _1b295210d_Flag;
struct _1b2955771_Flag;
struct _1ad4b7c33_FlagSet;
struct _1ad4ba6e7_argParser;
struct _1ad42eb78_ObjectCoder;
struct _1ac94d30c_dataCheckpoint;
struct _1aca7a9ab_ObjectDeadCode;
struct _1ac92a43d_IR;
struct _1abd4445c_StructIns;
struct _1eb2db310_Cmd;
struct _209d2db9b_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_209d2db9b_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_209d2db9b_acceptRange _other) { return !this->operator==(_other); }


};
struct _209e0d4d9_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _20b09587e_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_20b09587e_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20b09587e_Range16 _other) { return !this->operator==(_other); }


};
struct _20b095dac_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_20b095dac_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_20b095dac_Range32 _other) { return !this->operator==(_other); }


};
struct _20b096330_RangeTable {
	jule::Slice<_20b09587e_Range16> _field_R16;
	jule::Slice<_20b095dac_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _20b0e3789_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _209c238a4_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_209c26e6d_Status> _field_Stat;
	

	inline bool operator==(_209c238a4_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_209c238a4_DirEntry _other) { return !this->operator==(_other); }


};
struct _209c23b3a_Directory {
	

	inline bool operator==(_209c23b3a_Directory _other) { return true; }

	inline bool operator!=(_209c23b3a_Directory _other) { return !this->operator==(_other); }


};
struct _209c24d39_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_209c24d39_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_209c24d39_File _other) { return !this->operator==(_other); }


};
struct _209c26e6d_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_209c26e6d_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_209c26e6d_Status _other) { return !this->operator==(_other); }


};
struct _20b19c04b_cmdAttrs {
	HANDLE _field_hProcess = nullptr;
	HANDLE _field_hThread = nullptr;
	

	inline bool operator==(_20b19c04b_cmdAttrs _other) {
		return 
			this->_field_hProcess == _other._field_hProcess &&
			this->_field_hThread == _other._field_hThread;
	}

	inline bool operator!=(_20b19c04b_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1eb22e132_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1eb22e132_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1eb22e132_Log _other) { return !this->operator==(_other); }


};
struct _1b9a81587_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_1b9a81587_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1b9a81587_floatInfo _other) { return !this->operator==(_other); }


};
struct _1b9a82214_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1b9a992b4_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1b9a992b4_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1b9a992b4_leftCheat _other) { return !this->operator==(_other); }


};
struct _1b9a99ccb_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1b9a99ccb_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1b9a99ccb_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b9ab307a_Eq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _26017_x);
inline jule::Bool _1b9ab33bb_Lt(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _28717_x);
inline jule::Bool _1b9ab370c_LtEq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _31019_x);
inline jule::Bool _1b9ab3a4d_Gt(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _33317_x);
inline jule::Bool _1b9ab3d8e_GtEq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _35619_x);
struct _1b9aac4c5_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1b9aac4c5_Const _other) { return _1b9ab307a_Eq(this, _other); }

	inline bool operator!=(_1b9aac4c5_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1b9aac4c5_Const _other) { return _1b9ab3a4d_Gt(this, _other); }

	inline jule::Bool operator>=(_1b9aac4c5_Const _other) { return _1b9ab3d8e_GtEq(this, _other); }

	inline jule::Bool operator<(_1b9aac4c5_Const _other) { return _1b9ab33bb_Lt(this, _other); }

	inline jule::Bool operator<=(_1b9aac4c5_Const _other) { return _1b9ab370c_LtEq(this, _other); }


};
struct _1abd0a38a_Token {
	jule::Ptr<_1abd10b21_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1abd0a38a_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1abd0a38a_Token _other) { return !this->operator==(_other); }


};
struct _1abd10b21_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Tokens;
	


};
struct _1abd12c77_kindPair {
	jule::Str _field_kind = jule::Str::lit("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1abd12c77_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1abd12c77_kindPair _other) { return !this->operator==(_other); }


};
struct _1abd18c5b_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_tokens;
	jule::Ptr<_1abd10b21_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_1eb22e132_Log> _field_errors;
	


};
struct _1abd1d931_Ast {
	jule::Ptr<_1abd10b21_File> _field_File;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1abd3894b_UseDecl>> _field_UseDecls;
	jule::Slice<_1abd1e844_Node> _field_Nodes;
	


};
struct _1abd1e844_Node {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1abd1e844_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1abd1e844_Node _other) { return !this->operator==(_other); }


};
struct _1abd1ec62_Directive {
	jule::Ptr<_1abd0a38a_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Args;
	


};
struct _1abd20845_TypeDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1abd20845_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd20845_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd20e50_IdentTypeDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _field_Generics;
	


};
struct _1abd21219_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>> _field_Idents;
	


};
struct _1abd215e3_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Idents;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	


};
struct _1abd218e0_SptrTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Elem;
	

	inline bool operator==(_1abd218e0_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd218e0_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd21c75_SlcTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Elem;
	

	inline bool operator==(_1abd21c75_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd21c75_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd22072_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _field_Types;
	


};
struct _1abd2236e_PtrTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Elem;
	

	inline bool operator==(_1abd2236e_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abd2236e_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd22b11_ArrTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Elem;
	jule::Ptr<_1abd24b79_Expr> _field_Size;
	

	inline bool operator==(_1abd22b11_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1abd22b11_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd2335e_MapTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Key;
	jule::Ptr<_1abd20845_TypeDecl> _field_Val;
	

	inline bool operator==(_1abd2335e_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1abd2335e_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1abd23738_RetTypeDecl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Idents;
	


};
struct _1abd24b79_Expr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1abd24b79_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd24b79_Expr _other) { return !this->operator==(_other); }


};
struct _1abd24e43_RangeExpr {
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd24e43_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd24e43_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1abd2554d_UseExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd2554d_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd2554d_UseExpr _other) { return !this->operator==(_other); }


};
struct _1abd2576d_TupleExpr {
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Expr;
	


};
struct _1abd25b14_LitExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1abd25b14_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1abd25b14_LitExpr _other) { return !this->operator==(_other); }


};
struct _1abd25edd_UnsafeExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd25edd_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd25edd_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1abd26494_IdentExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1abd26494_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1abd26494_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1abd26c36_UnaryExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Op;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd26c36_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd26c36_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1abd27110_VariadicExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd27110_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd27110_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1abd274d9_CastExpr {
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd274d9_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd274d9_CastExpr _other) { return !this->operator==(_other); }


};
struct _1abd278b3_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Ns;
	jule::Ptr<_1abd0a38a_Token> _field_Ident;
	


};
struct _1abd27c8c_SubIdentExpr {
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abd0a38a_Token> _field_Ident;
	

	inline bool operator==(_1abd27c8c_SubIdentExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abd27c8c_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1abd28243_BinaryExpr {
	jule::Ptr<_1abd24b79_Expr> _field_Left;
	jule::Ptr<_1abd24b79_Expr> _field_Right;
	jule::Ptr<_1abd0a38a_Token> _field_Op;
	

	inline bool operator==(_1abd28243_BinaryExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abd28243_BinaryExpr _other) { return !this->operator==(_other); }


};
struct _1abd288a3_FnCallExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Args;
	jule::Ptr<_1abd30866_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1abd29398_FieldExprPair {
	jule::Ptr<_1abd0a38a_Token> _field_Field;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd29398_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd29398_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1abd29bc3_StructLit {
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Exprs;
	


};
struct _1abd2a179_BraceLit {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Exprs;
	


};
struct _1abd2a9a4_KeyValPair {
	jule::Ptr<_1abd24b79_Expr> _field_Key;
	jule::Ptr<_1abd24b79_Expr> _field_Val;
	jule::Ptr<_1abd0a38a_Token> _field_Colon;
	

	inline bool operator==(_1abd2a9a4_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1abd2a9a4_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1abd2b1d0_SliceExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Exprs;
	


};
struct _1abd2bb3c_IndexingExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abd24b79_Expr> _field_Index;
	

	inline bool operator==(_1abd2bb3c_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1abd2bb3c_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1abd2c29c_SlicingExpr {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abd24b79_Expr> _field_Start;
	jule::Ptr<_1abd24b79_Expr> _field_To;
	

	inline bool operator==(_1abd2c29c_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1abd2c29c_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1abd2c599_Constraint {
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _field_Mask;
	


};
struct _1abd2ca50_GenericDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abd2c599_Constraint> _field_Constraint;
	

	inline bool operator==(_1abd2ca50_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1abd2ca50_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1abd2ce29_LabelSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1abd2ce29_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abd2ce29_LabelSt _other) { return !this->operator==(_other); }


};
struct _1abd2d303_GotoSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_Label;
	

	inline bool operator==(_1abd2d303_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1abd2d303_GotoSt _other) { return !this->operator==(_other); }


};
struct _1abd2d600_FallSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	

	inline bool operator==(_1abd2d600_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1abd2d600_FallSt _other) { return !this->operator==(_other); }


};
struct _1abd2dc60_AssignLeft {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd2dc60_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd2dc60_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1abd2e2e3_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1abd0a38a_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> _field_Left;
	jule::Ptr<_1abd24b79_Expr> _field_Right;
	


};
struct _1abd30206_Stmt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1abd30206_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1abd30206_Stmt _other) { return !this->operator==(_other); }


};
struct _1abd30866_ScopeTree {
	jule::Ptr<_1abd30866_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1abd30206_Stmt> _field_Stmts;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	


};
struct _1abd310a3_ParamDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1abd310a3_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abd310a3_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1abd32505_FnDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_Generics;
	jule::Ptr<_1abd23738_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> _field_Params;
	


};
struct _1abd336b0_VarDecl {
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	


};
struct _1abd33a89_RetSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd33a89_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd33a89_RetSt _other) { return !this->operator==(_other); }


};
struct _1abd34309_Iter {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	

	inline bool operator==(_1abd34309_Iter _other) {
		return 
			this->_field_Comptime == _other._field_Comptime &&
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abd34309_Iter _other) { return !this->operator==(_other); }


};
struct _1abd34b34_WhileKind {
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1abd0a38a_Token> _field_NextToken;
	

	inline bool operator==(_1abd34b34_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1abd34b34_WhileKind _other) { return !this->operator==(_other); }


};
struct _1abd3553b_RangeKind {
	jule::Ptr<_1abd0a38a_Token> _field_InToken;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abd336b0_VarDecl> _field_KeyA;
	jule::Ptr<_1abd336b0_VarDecl> _field_KeyB;
	

	inline bool operator==(_1abd3553b_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1abd3553b_RangeKind _other) { return !this->operator==(_other); }


};
struct _1abd35915_BreakSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_Label;
	

	inline bool operator==(_1abd35915_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1abd35915_BreakSt _other) { return !this->operator==(_other); }


};
struct _1abd35cde_ContSt {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_Label;
	

	inline bool operator==(_1abd35cde_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1abd35cde_ContSt _other) { return !this->operator==(_other); }


};
struct _1abd36295_If {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	

	inline bool operator==(_1abd36295_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abd36295_If _other) { return !this->operator==(_other); }


};
struct _1abd3666e_Else {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	

	inline bool operator==(_1abd3666e_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1abd3666e_Else _other) { return !this->operator==(_other); }


};
struct _1abd36b25_Conditional {
	jule::Ptr<_1abd36295_If> _field_Head;
	jule::Slice<jule::Ptr<_1abd36295_If>> _field_Tail;
	jule::Ptr<_1abd3666e_Else> _field_Default;
	


};
struct _1abd37362_TypeAliasDecl {
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	

	inline bool operator==(_1abd37362_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd37362_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1abd37818_Case {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_Exprs;
	


};
struct _1abd38132_MatchCase {
	jule::Bool _field_Comptime = false;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1abd37818_Case>> _field_Cases;
	jule::Ptr<_1abd3666e_Else> _field_Default;
	


};
struct _1abd3894b_UseDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1abd38e02_EnumItemDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	

	inline bool operator==(_1abd38e02_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd38e02_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1abd399b3_EnumDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> _field_Items;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	


};
struct _1abd3a2dd_TypeEnumItemDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	

	inline bool operator==(_1abd3a2dd_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd3a2dd_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1abd3a94d_TypeEnumDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	


};
struct _1abd3ac17_FieldDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abd20845_TypeDecl> _field_Kind;
	jule::Ptr<_1abd24b79_Expr> _field_Default;
	

	inline bool operator==(_1abd3ac17_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1abd3ac17_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1abd3b60d_StructDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_Generics;
	


};
struct _1abd3bd4a_TraitDecl {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1abd32505_FnDecl>> _field_Methods;
	


};
struct _1abd3c4aa_Impl {
	jule::Ptr<_1abd0a38a_Token> _field_End;
	jule::Ptr<_1abd20845_TypeDecl> _field_Base;
	jule::Ptr<_1abd20845_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1abd32505_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _field_Statics;
	


};
struct _1abd3d7a8_Field {
	jule::Ptr<_1abd416ce_Struct> _field_Owner;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Ptr<_1abd24b79_Expr> _field_Default;
	

	inline bool operator==(_1abd3d7a8_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1abd3d7a8_Field _other) { return !this->operator==(_other); }


};
struct _1abd407bb_Operators {
	jule::Ptr<_1abd59681_FnIns> _field_Eq;
	jule::Ptr<_1abd59681_FnIns> _field_Gt;
	jule::Ptr<_1abd59681_FnIns> _field_GtEq;
	jule::Ptr<_1abd59681_FnIns> _field_Lt;
	jule::Ptr<_1abd59681_FnIns> _field_LtEq;
	jule::Ptr<_1abd59681_FnIns> _field_Shl;
	jule::Ptr<_1abd59681_FnIns> _field_Shr;
	jule::Ptr<_1abd59681_FnIns> _field_Add;
	jule::Ptr<_1abd59681_FnIns> _field_Sub;
	jule::Ptr<_1abd59681_FnIns> _field_Div;
	jule::Ptr<_1abd59681_FnIns> _field_Mul;
	jule::Ptr<_1abd59681_FnIns> _field_Mod;
	jule::Ptr<_1abd59681_FnIns> _field_BitAnd;
	jule::Ptr<_1abd59681_FnIns> _field_BitOr;
	jule::Ptr<_1abd59681_FnIns> _field_BitXor;
	jule::Ptr<_1abd59681_FnIns> _field_Neg;
	jule::Ptr<_1abd59681_FnIns> _field_Pos;
	jule::Ptr<_1abd59681_FnIns> _field_BitNot;
	jule::Ptr<_1abd59681_FnIns> _field_AddAssign;
	jule::Ptr<_1abd59681_FnIns> _field_SubAssign;
	jule::Ptr<_1abd59681_FnIns> _field_DivAssign;
	jule::Ptr<_1abd59681_FnIns> _field_MulAssign;
	jule::Ptr<_1abd59681_FnIns> _field_ModAssign;
	jule::Ptr<_1abd59681_FnIns> _field_ShlAssign;
	jule::Ptr<_1abd59681_FnIns> _field_ShrAssign;
	jule::Ptr<_1abd59681_FnIns> _field_BitOrAssign;
	jule::Ptr<_1abd59681_FnIns> _field_BitAndAssign;
	jule::Ptr<_1abd59681_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1abd407bb_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1abd407bb_Operators _other) { return !this->operator==(_other); }


};
struct _1abd416ce_Struct {
	jule::Ptr<_1ab6979a3_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _field_Uses;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd3d7a8_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1abd69a59_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1abd4445c_StructIns>> _field_Instances;
	


};
struct _1abd438ac_FieldIns {
	jule::Ptr<_1abd3d7a8_Field> _field_Decl;
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Ptr<_1abe11936_Data> _field_Default;
	

	inline bool operator==(_1abd438ac_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1abd438ac_FieldIns _other) { return !this->operator==(_other); }


};
struct _1abd48362_OperandExprModel {
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1abd48362_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1abd48362_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4885c_BinaryExprModel {
	jule::Ptr<_1abd48362_OperandExprModel> _field_Left;
	jule::Ptr<_1abd48362_OperandExprModel> _field_Right;
	jule::Ptr<_1abd0a38a_Token> _field_Op;
	

	inline bool operator==(_1abd4885c_BinaryExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abd4885c_BinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1abd48c36_UnaryExprModel {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1abd0a38a_Token> _field_Op;
	

	inline bool operator==(_1abd48c36_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1abd48c36_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1abd49264_StructArgExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd438ac_FieldIns> _field_Field;
	jule::Ptr<_1abe11936_Data> _field_Expr;
	

	inline bool operator==(_1abd49264_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd49264_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4960a_StructLitExprModel {
	jule::Ptr<_1abd4445c_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1abd49264_StructArgExprModel>> _field_Args;
	


};
struct _1abd49907_AllocStructLitExprModel {
	jule::Ptr<_1abd4960a_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1abd49907_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1abd49907_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1abd49e8a_CastingExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Ptr<_1abe42d30_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1abd49e8a_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1abd49e8a_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4a83c_FnCallExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abd59681_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ab655576_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1abd4ac16_SliceExprModel {
	jule::Ptr<_1abe42d30_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1abd4b1bc_IndexingExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1abe11936_Data> _field_Index;
	

	inline bool operator==(_1abd4b1bc_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1abd4b1bc_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4b673_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Captured;
	jule::Ptr<_1abd59681_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	


};
struct _1abd4ba4c_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1abd4ba4c_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1abd4ba4c_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4c003_MapExprModel {
	jule::Ptr<_1abe42d30_TypeKind> _field_KeyKind;
	jule::Ptr<_1abe42d30_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1abd4ba4c_KeyValPairExprModel>> _field_Entries;
	


};
struct _1abd4c586_SlicingExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1abd4c586_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1abd4c586_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4cb19_TraitSubIdentExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1abd566a0_Fn> _field_Method;
	jule::Ptr<_1abd69a59_Trait> _field_Trt;
	

	inline bool operator==(_1abd4cb19_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1abd4cb19_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4d4aa_StructSubIdentExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1abd59681_FnIns> _field_Method;
	jule::Ptr<_1abd438ac_FieldIns> _field_Field;
	jule::Ptr<_1abd4445c_StructIns> _field_Owner;
	

	inline bool operator==(_1abd4d4aa_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1abd4d4aa_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4d851_StructStaticIdentExprModel {
	jule::Ptr<_1abd4445c_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1abd59681_FnIns> _field_Method;
	

	inline bool operator==(_1abd4d851_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1abd4d851_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4dc2a_ArrayExprModel {
	jule::Ptr<_1abe52229_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1abd4e027_TupleExprModel {
	jule::Slice<jule::Ptr<_1abe11936_Data>> _field_Datas;
	


};
struct _1abd4e401_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1abd4e401_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1abd4e401_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4e7ca_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1abd4e7ca_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1abd4e7ca_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd4eba4_BuiltinNewCallExprModel {
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1abd4eba4_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1abd4eba4_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd5007d_BuiltinPanicCallExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abd5007d_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd5007d_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd50534_BuiltinAssertCallExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1abd50534_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1abd50534_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd509da_BuiltinMakeCallExprModel {
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1abd509da_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1abd509da_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd50db4_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1abd50db4_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1abd50db4_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd511b1_BuiltinLenCallExprModel {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	

	inline bool operator==(_1abd511b1_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd511b1_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd514ad_BuiltinCapCallExprModel {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	

	inline bool operator==(_1abd514ad_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd514ad_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd51887_BuiltinDeleteCallExprModel {
	jule::Ptr<_1abe11936_Data> _field_Dest;
	jule::Ptr<_1abe11936_Data> _field_Key;
	

	inline bool operator==(_1abd51887_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1abd51887_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd51c61_BuiltinCopyCallExprModel {
	jule::Ptr<_1abe11936_Data> _field_Dest;
	jule::Ptr<_1abe11936_Data> _field_Src;
	

	inline bool operator==(_1abd51c61_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1abd51c61_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd5213a_BuiltinErrorCallExprModel {
	jule::Ptr<_1abd59681_FnIns> _field_Func;
	jule::Ptr<_1abe11936_Data> _field_Err;
	

	inline bool operator==(_1abd5213a_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1abd5213a_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1abd527de_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abd527de_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd527de_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1abd529cb_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abd529cb_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd529cb_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1abd52c73_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1abd52c73_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1abd52c73_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1abd53070_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abd53070_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd53070_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1abd53449_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1abd53746_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1abd53746_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1abd53746_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1abd5444a_RetType {
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Idents;
	


};
struct _1abd54bcb_Param {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1abd54bcb_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1abd54bcb_Param _other) { return !this->operator==(_other); }


};
struct _1abd566a0_Fn {
	jule::Ptr<_1ab6979a3_Sema> _field_sema;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_Generics;
	jule::Ptr<_1abd5444a_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1abd54bcb_Param>> _field_Params;
	jule::Ptr<_1abd416ce_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1abd59681_FnIns>> _field_Instances;
	


};
struct _1abd58608_ParamIns {
	jule::Ptr<_1abd54bcb_Param> _field_Decl;
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	

	inline bool operator==(_1abd58608_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd58608_ParamIns _other) { return !this->operator==(_other); }


};
struct _1abd59681_FnIns {
	jule::Ptr<_1abd4445c_StructIns> _field_Owner;
	jule::Ptr<_1abd566a0_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1abe41449_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _field_Params;
	jule::Ptr<_1abe42d30_TypeKind> _field_Result;
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	jule::Ptr<_1abd5c860_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Bool _field_AsAnon = false;
	jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1abd5c860_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1abd5dd6c_Pass {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1abd5dd6c_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1abd5dd6c_Pass _other) { return !this->operator==(_other); }


};
struct _1abd63822_symbolBuilder {
	jule::Ptr<_1abd63822_symbolBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1eb22e132_Log> _field_errors;
	jule::Ptr<_1abd1d931_Ast> _field_ast;
	jule::Ptr<_1abe0b5bd_SymbolTable> _field_table;
	


};
struct _1abd69a59_Trait {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _field_Implemented;
	


};
struct _1abd6b6e8_EnumItem {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abe12aad_Value> _field_Value;
	

	inline bool operator==(_1abd6b6e8_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1abd6b6e8_EnumItem _other) { return !this->operator==(_other); }


};
struct _1abd6c265_Enum {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _field_Items;
	


};
struct _1abd6d398_TypeEnumItem {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1abd6d398_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abd6d398_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1abd6d970_TypeEnum {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _field_Items;
	


};
struct _1abd71ac7_comptimeRange {
	jule::Trait _field_kind;
	

	inline bool operator==(_1abd71ac7_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1abd71ac7_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1abd7259a_comptimeStructField {
	jule::Ptr<_1abd438ac_FieldIns> _field_field;
	

	inline bool operator==(_1abd7259a_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1abd7259a_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1abd7425b_comptimeStructFields {
	jule::Slice<jule::Ptr<_1abd438ac_FieldIns>> _field_fields;
	


};
struct _1abd75856_comptimeStatic {
	jule::Ptr<_1abda8d2e_Var> _field_field;
	

	inline bool operator==(_1abd75856_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1abd75856_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1abd77517_comptimeStatics {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_fields;
	


};
struct _1abd78b12_comptimeEnumField {
	jule::Ptr<_1abd6b6e8_EnumItem> _field_field;
	

	inline bool operator==(_1abd78b12_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1abd78b12_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1abd79ea9_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _field_fields;
	


};
struct _1abd7b5a4_comptimeParam {
	jule::Ptr<_1abd58608_ParamIns> _field_param;
	

	inline bool operator==(_1abd7b5a4_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1abd7b5a4_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1abd7d73d_comptimeParams {
	jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _field_params;
	


};
struct _1abd7ed05_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1abd81400_comptimeTypeInfo>> _field_types;
	


};
struct _1abd81400_comptimeTypeInfo {
	jule::Ptr<_1abe42d30_TypeKind> _field_base;
	

	inline bool operator==(_1abd81400_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1abd81400_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1ab64460e_comptimeValue {
	jule::Ptr<_1abe11936_Data> _field_data;
	

	inline bool operator==(_1ab64460e_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ab64460e_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1ab646e5d_comptimeFiles {
	jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>> _field_files;
	


};
struct _1ab648558_comptimeFile {
	jule::Ptr<_1abe0b5bd_SymbolTable> _field_file;
	

	inline bool operator==(_1ab648558_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1ab648558_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1ab64ccbb_constraintChecker {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1abe41449_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _field_genericsA;
	jule::Ptr<_1abd59681_FnIns> _field_fi;
	jule::Ptr<_1abd4445c_StructIns> _field_si;
	jule::Ptr<_1abd0a38a_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1ab650120_Impl {
	jule::Ptr<_1abd20845_TypeDecl> _field_Base;
	jule::Ptr<_1abd20845_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Statics;
	


};
struct _1ab655576_Scope {
	jule::Ptr<_1ab655576_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1ab655994_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	

	inline bool operator==(_1ab655994_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab655994_If _other) { return !this->operator==(_other); }


};
struct _1ab655c91_Else {
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	

	inline bool operator==(_1ab655c91_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab655c91_Else _other) { return !this->operator==(_other); }


};
struct _1ab6561ae_Conditional {
	jule::Slice<jule::Ptr<_1ab655994_If>> _field_Elifs;
	jule::Ptr<_1ab655c91_Else> _field_Default;
	


};
struct _1ab6564ab_InfIter {
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	

	inline bool operator==(_1ab6564ab_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab6564ab_InfIter _other) { return !this->operator==(_other); }


};
struct _1ab656962_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	

	inline bool operator==(_1ab656962_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1ab656962_WhileIter _other) { return !this->operator==(_other); }


};
struct _1ab6573ad_RangeIter {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	jule::Ptr<_1abda8d2e_Var> _field_KeyA;
	jule::Ptr<_1abda8d2e_Var> _field_KeyB;
	

	inline bool operator==(_1ab6573ad_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1ab6573ad_RangeIter _other) { return !this->operator==(_other); }


};
struct _1ab657743_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1ab657743_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1ab657743_ContSt _other) { return !this->operator==(_other); }


};
struct _1ab657b1c_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1ab657b1c_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1ab657b1c_BreakSt _other) { return !this->operator==(_other); }


};
struct _1ab657e19_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1ab657e19_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1ab657e19_Label _other) { return !this->operator==(_other); }


};
struct _1ab6582e3_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1ab657e19_Label> _field_Label;
	

	inline bool operator==(_1ab6582e3_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1ab6582e3_GotoSt _other) { return !this->operator==(_other); }


};
struct _1ab6586bc_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1ab6586bc_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab6586bc_Postfix _other) { return !this->operator==(_other); }


};
struct _1ab658b73_Assign {
	jule::Ptr<_1abd48362_OperandExprModel> _field_Left;
	jule::Ptr<_1abd48362_OperandExprModel> _field_Right;
	jule::Ptr<_1abd0a38a_Token> _field_Op;
	

	inline bool operator==(_1ab658b73_Assign _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1ab658b73_Assign _other) { return !this->operator==(_other); }


};
struct _1ab659129_MultiAssign {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1abe11936_Data>> _field_Left;
	jule::Any _field_Right = jule::Any(nullptr);
	


};
struct _1ab659789_Match {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1ab65a2b2_Case>> _field_Cases;
	jule::Ptr<_1ab65a2b2_Case> _field_Default;
	


};
struct _1ab65a2b2_Case {
	jule::Ptr<_1ab659789_Match> _field_Owner;
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1abe11936_Data>> _field_Exprs;
	jule::Ptr<_1ab65a2b2_Case> _field_Next;
	


};
struct _1ab65a9aa_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1ab65a9aa_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1ab65a9aa_FallSt _other) { return !this->operator==(_other); }


};
struct _1ab65ad51_RetSt {
	jule::Ptr<_1abd59681_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1ab65ad51_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ab65ad51_RetSt _other) { return !this->operator==(_other); }


};
struct _1ab65b4b1_scopeLabel {
	jule::Ptr<_1abd0a38a_Token> _field_token;
	jule::Ptr<_1ab657e19_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1ab65ca34_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1ab65b4b1_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1ab65b4b1_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1ab65ba44_scopeGoto {
	jule::Ptr<_1ab6582e3_GotoSt> _field_st;
	jule::Ptr<_1abd2d303_GotoSt> _field_gt;
	jule::Ptr<_1ab65ca34_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_1ab65ba44_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1ab65ba44_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1ab65ca34_scopeChecker {
	jule::Ptr<_1abd0a38a_Token> _field_calledFrom;
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Ptr<_1abd59681_FnIns> _field_owner;
	jule::Ptr<_1ab65ca34_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1abe0b5bd_SymbolTable> _field_table;
	jule::Ptr<_1ab655576_Scope> _field_scope;
	jule::Ptr<_1abd30866_ScopeTree> _field_tree;
	jule::Ptr<_1abd59681_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1abda8d2e_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab65b4b1_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab65ba44_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1ab65ca34_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_captured == _other._field_captured &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1ab65ca34_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1ab671163_directiveChecker {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1abd1ec62_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1ab671163_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1ab671163_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1ab67760e_ImportInfo {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_Selected;
	jule::Ptr<_1ab67a535_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _1ab67a535_Package {
	jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>> _field_Files;
	


};
struct _1ab696d9d_commonSemaMeta {
	jule::Slice<jule::Ptr<_1abd81400_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1ab6979a3_Sema {
	jule::Slice<_1eb22e132_Log> _field_errors;
	jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>> _field_files;
	jule::Ptr<_1abe0b5bd_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_1ab696d9d_commonSemaMeta> _field_meta;
	


};
struct _1ab6b7671_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1abda8d2e_Var {
	jule::Ptr<_1ab655576_Scope> _field_Scope;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Ptr<_1abe12aad_Value> _field_Value;
	jule::Ptr<_1abd5c860_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_Directives;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Depends;
	


};
struct _1abda9ba9_FuncPattern {
	


};
struct _1abde85ee_typeCompatibilityChecker {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Ptr<_1abe42d30_TypeKind> _field_dest;
	jule::Ptr<_1abe42d30_TypeKind> _field_src;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	

	inline bool operator==(_1abde85ee_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abde85ee_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1abdea39d_assignTypeChecker {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Ptr<_1abe42d30_TypeKind> _field_dest;
	jule::Ptr<_1abe11936_Data> _field_d;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	

	inline bool operator==(_1abdea39d_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1abdea39d_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1abdebc73_dynamicTypeAnnotation {
	jule::Ptr<_1abe1365d_Eval> _field_e;
	jule::Ptr<_1abd59681_FnIns> _field_f;
	jule::Ptr<_1abd58608_ParamIns> _field_p;
	jule::Ptr<_1abe11936_Data> _field_a;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	jule::Ptr<_1abe42d30_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1abd20845_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_ignored;
	


};
struct _1abe01ad0_fnCallArgChecker {
	jule::Ptr<_1abe1365d_Eval> _field_e;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_args;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	jule::Ptr<_1abd59681_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_ignored;
	


};
struct _1abe04a17_structLitChecker {
	jule::Ptr<_1abe1365d_Eval> _field_e;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	jule::Ptr<_1abd4445c_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1abd49264_StructArgExprModel>> _field_args;
	


};
struct _1abe067e9_rangeChecker {
	jule::Ptr<_1ab65ca34_scopeChecker> _field_sc;
	jule::Ptr<_1abd3553b_RangeKind> _field_rang;
	jule::Ptr<_1ab6573ad_RangeIter> _field_Kind;
	jule::Ptr<_1abe11936_Data> _field_d;
	

	inline bool operator==(_1abe067e9_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1abe067e9_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1abe0905a_retTypeChecker {
	jule::Ptr<_1ab65ca34_scopeChecker> _field_sc;
	jule::Ptr<_1abd59681_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _field_exprs;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1abe0b5bd_SymbolTable {
	jule::Ptr<_1abd10b21_File> _field_File;
	jule::Slice<_1abd5dd6c_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1abd69a59_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1abd6c265_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1abd6d970_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ab650120_Impl>> _field_Impls;
	


};
struct _1abe11936_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1b9aac4c5_Const> _field_Constant;
	

	inline bool operator==(_1abe11936_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1abe11936_Data _other) { return !this->operator==(_other); }


};
struct _1abe12aad_Value {
	jule::Ptr<_1abd24b79_Expr> _field_Expr;
	jule::Ptr<_1abe11936_Data> _field_Data;
	

	inline bool operator==(_1abe12aad_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1abe12aad_Value _other) { return !this->operator==(_other); }


};
struct _1abe1365d_Eval {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1abe42d30_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1abda8d2e_Var> _field_owner;
	jule::Ptr<_1abd438ac_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1abe1365d_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1abe1365d_Eval _other) { return !this->operator==(_other); }


};
struct _1abe31d85_unaryEval {
	jule::Ptr<_1abe1365d_Eval> _field_e;
	jule::Ptr<_1abe11936_Data> _field_d;
	jule::Ptr<_1abd26c36_UnaryExpr> _field_u;
	

	inline bool operator==(_1abe31d85_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1abe31d85_unaryEval _other) { return !this->operator==(_other); }


};
struct _1abe33d21_binaryEval {
	jule::Ptr<_1abe1365d_Eval> _field_e;
	jule::Ptr<_1abe11936_Data> _field_l;
	jule::Ptr<_1abe11936_Data> _field_r;
	jule::Ptr<_1abd0a38a_Token> _field_op;
	

	inline bool operator==(_1abe33d21_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1abe33d21_binaryEval _other) { return !this->operator==(_other); }


};
struct _1abe41449_InsGeneric {
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_Constraint;
	


};
struct _1abe4203d_TypeAlias {
	jule::Ptr<_1abd30866_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abe4a002_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _field_Generics;
	


};
struct _1abe42d30_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait _field_Kind;
	

	inline bool operator==(_1abe42d30_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abe42d30_TypeKind _other) { return !this->operator==(_other); }


};
struct _1abe4a002_TypeSymbol {
	jule::Ptr<_1abd20845_TypeDecl> _field_Decl;
	jule::Ptr<_1abe42d30_TypeKind> _field_Kind;
	

	inline bool operator==(_1abe4a002_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abe4a002_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1abe4a909_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1abe4a909_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1abe4a909_Prim _other) { return !this->operator==(_other); }


};
struct _1abe4e435_Sptr {
	jule::Ptr<_1abe42d30_TypeKind> _field_Elem;
	

	inline bool operator==(_1abe4e435_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abe4e435_Sptr _other) { return !this->operator==(_other); }


};
struct _1abe4ee08_Slc {
	jule::Ptr<_1abe42d30_TypeKind> _field_Elem;
	

	inline bool operator==(_1abe4ee08_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abe4ee08_Slc _other) { return !this->operator==(_other); }


};
struct _1abe509ec_Tuple {
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_Types;
	


};
struct _1abe5159c_Map {
	jule::Ptr<_1abe42d30_TypeKind> _field_Key;
	jule::Ptr<_1abe42d30_TypeKind> _field_Val;
	

	inline bool operator==(_1abe5159c_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1abe5159c_Map _other) { return !this->operator==(_other); }


};
struct _1abe52229_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1abe42d30_TypeKind> _field_Elem;
	

	inline bool operator==(_1abe52229_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abe52229_Arr _other) { return !this->operator==(_other); }


};
struct _1abe52bec_Ptr {
	jule::Ptr<_1abe42d30_TypeKind> _field_Elem;
	

	inline bool operator==(_1abe52bec_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1abe52bec_Ptr _other) { return !this->operator==(_other); }


};
struct _1abe53bed_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1abe53bed_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1abe53bed_referencer _other) { return !this->operator==(_other); }


};
struct _1abe54bdd_typeChecker {
	jule::Ptr<_1ab6979a3_Sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1abe53bed_referencer> _field_referencer;
	jule::Ptr<_1abd5c860_ReferenceStack> _field_refers;
	jule::Ptr<_1abd0a38a_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1abe4203d_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1abe5c894_identTypeLookup {
	

	inline bool operator==(_1abe5c894_identTypeLookup _other) { return true; }

	inline bool operator!=(_1abe5c894_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ac899764_FileInfo {
	jule::Ptr<_1abd1d931_Ast> _field_Ast;
	jule::Slice<_1eb22e132_Log> _field_Errors;
	


};
struct _1ac8e2aed_stmt {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1ac8e348e_scopeParser {
	jule::Ptr<_1ac911a1d_parser> _field_p;
	jule::Ptr<_1abd30866_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _1ac900db4_exprBuilder {
	jule::Ptr<_1ac911a1d_parser> _field_p;
	

	inline bool operator==(_1ac900db4_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ac900db4_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ac90d61e_assignInfo {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_l;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_r;
	jule::Ptr<_1abd0a38a_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1ac911a1d_parser {
	jule::Ptr<_1abd1d931_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1abd1ec62_Directive>> _field_directives;
	jule::Slice<_1eb22e132_Log> _field_errors;
	jule::Ptr<_1ac900db4_exprBuilder> _field_ep;
	


};
struct _1ac923b40_typeBuilder {
	jule::Ptr<_1ac911a1d_parser> _field_p;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1ac17be37_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str::lit("clang", 5);
	jule::Str _field_CppStd = jule::Str::lit("cpp14", 5);
	

	inline bool operator==(_1ac17be37_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1ac17be37_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1ac17d411_directiveEval {
	jule::Slice<_1eb22e132_Log> _field_logs;
	jule::Ptr<_1abd1ec62_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ac927b33_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ac937ec8_OrderedDefines {
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Globals;
	


};
struct _1aca7a58d_liveTable {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1abd59681_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1abd4445c_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1abd69a59_Trait>> _field_traits;
	


};
struct _1acaae2a3_scopeDeadCode {
	jule::Ptr<_1acaae2a3_scopeDeadCode> _field_parent;
	jule::Ptr<_1ab655576_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab657e19_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ab6582e3_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1acaae2a3_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1acaae2a3_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1acab353d_exprDeadCode {
	jule::Ptr<_1acaae2a3_scopeDeadCode> _field_s;
	

	inline bool operator==(_1acab353d_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1acab353d_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1ac03b467_ExceptionalForwardingExprModel {
	jule::Ptr<_1abd4a83c_FnCallExprModel> _field_Expr;
	

	inline bool operator==(_1ac03b467_ExceptionalForwardingExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1ac03b467_ExceptionalForwardingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03b7db_SwapExprModel {
	jule::Ptr<_1abe11936_Data> _field_Left;
	jule::Ptr<_1abe11936_Data> _field_Right;
	

	inline bool operator==(_1ac03b7db_SwapExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac03b7db_SwapExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03bbb5_EmptyCompareExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Neg = false;
	

	inline bool operator==(_1ac03bbb5_EmptyCompareExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Neg == _other._field_Neg;
	}

	inline bool operator!=(_1ac03bbb5_EmptyCompareExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03c039_RefExprModel {
	jule::Ptr<_1abda8d2e_Var> _field_Var;
	

	inline bool operator==(_1ac03c039_RefExprModel _other) {
		return 
			this->_field_Var == _other._field_Var;
	}

	inline bool operator!=(_1ac03c039_RefExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03c4ac_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1b9aac4c5_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1ac03c4ac_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1ac03c4ac_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03ca40_MutSlicingExprModel {
	jule::Ptr<_1abd0a38a_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1ac03ca40_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1ac03ca40_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03cd3c_UnsafeBinaryExprModel {
	jule::Ptr<_1abd4885c_BinaryExprModel> _field_Node;
	

	inline bool operator==(_1ac03cd3c_UnsafeBinaryExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ac03cd3c_UnsafeBinaryExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03d1c2_UnsafeIndexingExprModel {
	jule::Ptr<_1abd4b1bc_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1ac03d1c2_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1ac03d1c2_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03d59b_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1abd4ac16_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1ac03d59b_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1ac03d59b_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03d975_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1ac03d975_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1ac03d975_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03dd4e_StrRuneIter {
	jule::Ptr<_1abe11936_Data> _field_Expr;
	jule::Ptr<_1ab6573ad_RangeIter> _field_Base;
	

	inline bool operator==(_1ac03dd4e_StrRuneIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ac03dd4e_StrRuneIter _other) { return !this->operator==(_other); }


};
struct _1ac03e14b_UnsafeDerefExprModel {
	jule::Ptr<_1abd48c36_UnaryExprModel> _field_Base;
	

	inline bool operator==(_1ac03e14b_UnsafeDerefExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ac03e14b_UnsafeDerefExprModel _other) { return !this->operator==(_other); }


};
struct _1ac03e448_UnsafeCastingExprModel {
	jule::Ptr<_1abd49e8a_CastingExprModel> _field_Base;
	

	inline bool operator==(_1ac03e448_UnsafeCastingExprModel _other) {
		return 
			this->_field_Base == _other._field_Base;
	}

	inline bool operator!=(_1ac03e448_UnsafeCastingExprModel _other) { return !this->operator==(_other); }


};
struct _1ac04012a_nilVar {
	jule::Uintptr _field_var = 0;
	jule::Bool _field_safe = false;
	

	inline bool operator==(_1ac04012a_nilVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_safe == _other._field_safe;
	}

	inline bool operator!=(_1ac04012a_nilVar _other) { return !this->operator==(_other); }


};
struct _1ac04046b_nils {
	jule::Slice<_1ac04012a_nilVar> _field_vars;
	


};
struct _1ac939639_scopeOptimizer {
	jule::Ptr<_1ac939639_scopeOptimizer> _field_parent;
	jule::I32 _field_i = 0;
	jule::Ptr<_1ab655576_Scope> _field_scope;
	jule::Ptr<_1ac94d807_data> _field_data;
	

	inline bool operator==(_1ac939639_scopeOptimizer _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac939639_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1ac940cb1_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1ac94d807_data> _field_data;
	

	inline bool operator==(_1ac940cb1_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1ac940cb1_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1ac94a837_dynamicVar {
	jule::Uintptr _field_var = 0;
	jule::Ptr<_1abe42d30_TypeKind> _field_kind;
	

	inline bool operator==(_1ac94a837_dynamicVar _other) {
		return 
			this->_field_var == _other._field_var &&
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ac94a837_dynamicVar _other) { return !this->operator==(_other); }


};
struct _1ac94ab78_dynamic {
	jule::Slice<_1ac94a837_dynamicVar> _field_vars;
	


};
struct _1ac94d807_data {
	jule::Ptr<_1ac9501ee_boundary> _field_boundary;
	jule::Ptr<_1ac04046b_nils> _field_nils;
	jule::Ptr<_1ac94ab78_dynamic> _field_dynamic;
	

	inline bool operator==(_1ac94d807_data _other) {
		return 
			this->_field_boundary == _other._field_boundary &&
			this->_field_nils == _other._field_nils &&
			this->_field_dynamic == _other._field_dynamic;
	}

	inline bool operator!=(_1ac94d807_data _other) { return !this->operator==(_other); }


};
struct _1ac94edad_boundaryVar {
	jule::Uintptr _field_var = 0;
	jule::Slice<jule::Any> _field_maxSize;
	


};
struct _1ac9501ee_boundary {
	jule::Slice<_1ac94edad_boundaryVar> _field_vars;
	


};
struct _1acaba589_Optimizer {
	jule::Ptr<_1ac92a43d_IR> _field_ir;
	

	inline bool operator==(_1acaba589_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1acaba589_Optimizer _other) { return !this->operator==(_other); }


};
struct _1ac608c65_AnsiEscape {
	

	inline bool operator==(_1ac608c65_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ac608c65_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1ac60a64b_Logger {
	

	inline bool operator==(_1ac60a64b_Logger _other) { return true; }

	inline bool operator!=(_1ac60a64b_Logger _other) { return !this->operator==(_other); }


};
struct _1ad423e25_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1ad423e25_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1ad423e25_AbsTime _other) { return !this->operator==(_other); }


};
struct _1ad4245eb_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1ad4245eb_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1ad4245eb_Time _other) { return !this->operator==(_other); }


};
struct _1ad353d00_scopeCoder {
	jule::Ptr<_1ad42eb78_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad353d00_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad353d00_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1ad35e437_exprCoder {
	jule::Ptr<_1ad42eb78_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1abda8d2e_Var>>> _field_varPrefixes;
	


};
struct _1ad36ec3e_TestCoder {
	jule::Ptr<_1abd4445c_StructIns> _field_t;
	jule::Ptr<_1abd566a0_Fn> _field_tmReset;
	jule::Ptr<_1abd566a0_Fn> _field_tmFailed;
	jule::Ptr<_1abd566a0_Fn> _field_tmSkipped;
	jule::Ptr<_1ad42eb78_ObjectCoder> _field_oc;
	

	inline bool operator==(_1ad36ec3e_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1ad36ec3e_TestCoder _other) { return !this->operator==(_other); }


};
struct _1ad372bba_identCoder {
	

	inline bool operator==(_1ad372bba_identCoder _other) { return true; }

	inline bool operator!=(_1ad372bba_identCoder _other) { return !this->operator==(_other); }


};
struct _1ad42cdc9_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1ad42cdc9_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1ad42cdc9_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1ad42d2e7_traitCast {
	jule::Ptr<_1abd69a59_Trait> _field_t1;
	jule::Ptr<_1abd69a59_Trait> _field_t2;
	

	inline bool operator==(_1ad42d2e7_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1ad42d2e7_traitCast _other) { return !this->operator==(_other); }


};
struct _1ad42d6c1_anonHash {
	jule::Ptr<_1abd4b673_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
	

	inline bool operator==(_1ad42d6c1_anonHash _other) {
		return 
			this->_field_expr == _other._field_expr &&
			this->_field_ident == _other._field_ident;
	}

	inline bool operator!=(_1ad42d6c1_anonHash _other) { return !this->operator==(_other); }


};
struct _1ad43dd0d_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1ad43dd0d_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1ad43dd0d_customType _other) { return !this->operator==(_other); }


};
struct _1ad43e946_typeCoder {
	jule::Ptr<_1ad42eb78_ObjectCoder> _field_oc;
	jule::Ptr<_1ad447531_resultCoder> _field_rc;
	

	inline bool operator==(_1ad43e946_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1ad43e946_typeCoder _other) { return !this->operator==(_other); }


};
struct _1ad447531_resultCoder {
	jule::Ptr<_1ad43e946_typeCoder> _field_tc;
	

	inline bool operator==(_1ad447531_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1ad447531_resultCoder _other) { return !this->operator==(_other); }


};
struct _1b20ec6cc_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1b20ec6cc_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b20ec6cc_Flag _other) { return !this->operator==(_other); }


};struct _1b294a2e3_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1b294a2e3_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b294a2e3_Flag _other) { return !this->operator==(_other); }


};struct _1b294d956_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1b294d956_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b294d956_Flag _other) { return !this->operator==(_other); }


};struct _1b295210d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1b295210d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b295210d_Flag _other) { return !this->operator==(_other); }


};struct _1b2955771_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1b2955771_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b2955771_Flag _other) { return !this->operator==(_other); }


};
struct _1ad4b7c33_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
	


};
struct _1ad4ba6e7_argParser {
	_1ad4b7c33_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _1ad42eb78_ObjectCoder {
	_209e0d4d9_StrBuilder _field_Buf;
	_209e0d4d9_StrBuilder _field_resultDecls;
	_209e0d4d9_StrBuilder _field_anyObj;
	_209e0d4d9_StrBuilder _field_anonObj;
	_209e0d4d9_StrBuilder _field_deallocObj;
	jule::Ptr<_1ac92a43d_IR> _field_ir;
	_1ad42cdc9_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ad42d6c1_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1ad42d2e7_traitCast> _field_traitCastMap;
	jule::Map<jule::Ptr<_1abd59681_FnIns>,jule::Slice<jule::Uintptr>> _field_traitMetMap;
	jule::Ptr<_1ad35e437_exprCoder> _field_ec;
	jule::Ptr<_1ad353d00_scopeCoder> _field_sc;
	jule::Ptr<_1ad43e946_typeCoder> _field_tc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	jule::I32 _field_wrapPos = 0;
	


};
struct _1ac94d30c_dataCheckpoint {
	_1ac9501ee_boundary _field_boundary;
	_1ac04046b_nils _field_nils;
	_1ac94ab78_dynamic _field_dynamic;
	


};
struct _1aca7a9ab_ObjectDeadCode {
	_1aca7a58d_liveTable _field_live;
	jule::Ptr<_1ac92a43d_IR> _field_ir;
	


};
struct _1ac92a43d_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ab67a535_Package> _field_Main;
	jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _field_Used;
	_1ac937ec8_OrderedDefines _field_Ordered;
	


};
struct _1abd4445c_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1abd416ce_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1abe41449_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1abd438ac_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1abd5c860_ReferenceStack> _field_Refers;
	_1abd407bb_Operators _field_Operators;
	


};
struct _1eb2db310_Cmd {
	_20b19c04b_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abe11936_Data__jule_tuple_x_1abe11936_Data {
	jule::Ptr<_1abe11936_Data> __jule_result_arg0;
	jule::Ptr<_1abe11936_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1abe11936_Data__jule_tuple_bool {
	jule::Ptr<_1abe11936_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abd24b79_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd37818_Case__jule_tuple_bool {
	jule::Ptr<_1abd37818_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abd37818_Case__jule_tuple_x_1abd3666e_Else {
	jule::Slice<jule::Ptr<_1abd37818_Case>> __jule_result_arg0;
	jule::Ptr<_1abd3666e_Else> __jule_result_arg1;
};
struct __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd2e2e3_AssignSt__jule_tuple_bool {
	jule::Ptr<_1abd2e2e3_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1abd20845_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1abd23738_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log {
	jule::Slice<jule::Ptr<_1abd1d931_Ast>> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1eb22e132_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abd59681_FnIns__jule_tuple_bool {
	jule::Ptr<_1abd59681_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac92a43d_IR__jule_tuple_s_1eb22e132_Log {
	jule::Ptr<_1ac92a43d_IR> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1b921c273_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1b921c273_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1b921c273_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log {
	jule::Ptr<_1abe0b5bd_SymbolTable> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log {
	jule::Ptr<_1ab67a535_Package> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log {
	jule::Ptr<_1abd1d931_Ast> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1abd0a38a_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> __jule_result_arg0;
	jule::Slice<_1eb22e132_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _209e0d4d9_StrBuilder static__209e0d918_New(jule::I32 _1519_cap);
inline void _209e0dbc1_Write(_209e0d4d9_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b);
inline void _209e0de79_WriteStr(_209e0d4d9_StrBuilder* _self_, jule::Str _3027_s);
inline void _209e0e232_WriteByte(_209e0d4d9_StrBuilder* _self_, jule::U8 _3528_b);
inline jule::Str _209e0e771_Str(_209e0d4d9_StrBuilder* _self_);
inline void _209e0e96e_Clear(_209e0d4d9_StrBuilder* _self_);
inline jule::I32 _209e0ec05_Len(_209e0d4d9_StrBuilder* _self_);
inline jule::Slice<jule::U8> _209e10222_Buf(_209e0d4d9_StrBuilder* _self_);
inline void _209e104ca_SetBuf(_209e0d4d9_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf);
inline jule::U8 _20b0e3bda_index(_20b0e3789_lazyBuff* _self_, jule::I32 _5524_i);
inline void _20b0e3e93_append(_20b0e3789_lazyBuff* _self_, jule::U8 _6225_c);
inline jule::Str _20b0e4229_string(_20b0e3789_lazyBuff* _self_);
inline jule::Exceptional<jule::Slice<jule::Ptr<_209c238a4_DirEntry>>> static__20b0e64c3_Read(jule::Str _1520_path);
inline jule::VoidExceptional static__20b0e6704_Create(jule::Str _3922_path);
inline jule::VoidExceptional static__20b0e6935_Remove(jule::Str _5322_path);
inline jule::Ptr<_209c24d39_File> static__209c25257_New(jule::Uintptr _4519_handle);
inline jule::Exceptional<jule::Ptr<_209c24d39_File>> static__209c25521_Create(jule::Str _5522_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__209c257da_Read(jule::Str _6720_path);
inline jule::VoidExceptional static__209c25b81_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I32 _10546_perm);
inline jule::VoidExceptional _209c263bd_Close(_209c24d39_File* _self_);
inline jule::Exceptional<jule::Ptr<_209c24d39_File>> static__209d398bb_Open(jule::Str _2220_path, jule::I32 _2231_flag, jule::I32 _2244_mode);
inline jule::VoidExceptional static__209d39aec_Remove(jule::Str _3522_path);
inline jule::Exceptional<jule::I32> _209d39e71_Write(_209c24d39_File* _self_, jule::Slice<jule::U8> _5024_buf);
inline jule::Exceptional<jule::I32> _209d3a2b2_Read(_209c24d39_File* _self_, jule::Slice<jule::U8> _8127_buf);
inline jule::Bool _209c27347_IsDir(_209c26e6d_Status* _self_);
inline jule::Bool _209c275cd_IsReg(_209c26e6d_Status* _self_);
inline jule::U32 _209c27864_Size(_209c26e6d_Status* _self_);
inline jule::Exceptional<jule::Ptr<_209c26e6d_Status>> static__20b0e72e8_Of(jule::Str _1218_path);
inline jule::Bool _1b9a8b8a0_set(_1b9a99ccb_decimal* _self_, jule::Slice<jule::U8> _23822_s);
inline __jule_tuple_u64__jule_tuple_bool _1b9a8bbe1_floatBits(_1b9a99ccb_decimal* _self_, _1b9a81587_floatInfo* _33229_flt);
inline void _1b9a9a183_assign(_1b9a99ccb_decimal* _self_, jule::U64 _15129_v);
inline void _1b9a9a43b_shift(_1b9a99ccb_decimal* _self_, jule::I32 _17628_k);
inline void _1b9a9a6e4_roundDown(_1b9a99ccb_decimal* _self_, jule::I32 _19628_nd);
inline void _1b9a9a99c_roundUp(_1b9a99ccb_decimal* _self_, jule::I32 _20526_nd);
inline void _1b9a9ac55_round(_1b9a99ccb_decimal* _self_, jule::I32 _23224_nd);
inline jule::U64 _1b9a9aedb_roundedInteger(_1b9a99ccb_decimal* _self_);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aac915_NewI64(jule::I64 _1622_x);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aacbce_NewU64(jule::U64 _1922_x);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aace98_NewBool(jule::Bool _2223_x);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad262_NewStr(jule::Str _2522_x);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad52b_NewF64(jule::F64 _2822_x);
inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad73a_NewNil(void);
inline jule::I64 _1b9aadd9a_ReadI64(_1b9aac4c5_Const* _self_);
inline jule::U64 _1b9aae131_ReadU64(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9aae3b7_ReadBool(_1b9aac4c5_Const* _self_);
inline jule::Str _1b9aae64d_ReadStr(_1b9aac4c5_Const* _self_);
inline jule::F64 _1b9aae8d4_ReadF64(_1b9aac4c5_Const* _self_);
inline jule::I64 _1b9aaeb6a_AsI64(_1b9aac4c5_Const* _self_);
inline jule::U64 _1b9aaee01_AsU64(_1b9aac4c5_Const* _self_);
inline jule::F64 _1b9ab0187_AsF64(_1b9aac4c5_Const* _self_);
inline void _1b9ab0440_SetI64(_1b9aac4c5_Const* _self_, jule::I64 _13825_x);
inline void _1b9ab06e8_SetU64(_1b9aac4c5_Const* _self_, jule::U64 _14125_x);
inline void _1b9ab09a1_SetBool(_1b9aac4c5_Const* _self_, jule::Bool _14426_x);
inline void _1b9ab0c59_SetStr(_1b9aac4c5_Const* _self_, jule::Str _14725_x);
inline void _1b9ab1012_SetF64(_1b9aac4c5_Const* _self_, jule::F64 _15025_x);
inline jule::Bool _1b9ab1496_IsI64(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab172c_IsU64(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab19b3_IsBool(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab1c49_IsStr(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab1ed0_IsF64(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab2266_IsNil(_1b9aac4c5_Const* _self_);
inline jule::Bool _1b9ab28e8_And(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _23818_x);
inline jule::Bool _1b9ab2c39_Or(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _24917_x);
inline jule::Bool _1b9ab41d0_Add(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _37722_x);
inline jule::Bool _1b9ab4521_Sub(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _40622_x);
inline jule::Bool _1b9ab4862_Mul(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _43022_x);
inline jule::Bool _1b9ab4ba3_Div(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _45822_x);
inline jule::Bool _1b9ab4ee4_Mod(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _48722_x);
inline jule::Bool _1b9ab5335_BitwiseAnd(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _50929_x);
inline jule::Bool _1b9ab5676_BitwiseOr(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _52328_x);
inline jule::Bool _1b9ab59b7_Xor(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _53722_x);
inline jule::Bool _1b9ab5d08_Lshift(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _55125_x);
inline jule::Bool _1b9ab6149_Rshift(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _57125_x);
inline jule::U8 _1abd0a70e_Prec(_1abd0a38a_Token* _self_);
inline void _1abd1103e_Fill(_1abd10b21_File* _self_, jule::Slice<jule::U8> _1727_data);
inline jule::Str _1abd112c5_Dir(_1abd10b21_File* _self_);
inline jule::Str _1abd1155b_Name(_1abd10b21_File* _self_);
inline jule::Str _1abd11b33_GetRow(_1abd10b21_File* _self_, jule::I32 _3821_row);
inline void _1abd192de_pushErr(_1abd18c5b_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args);
inline void _1abd19850_lex(_1abd18c5b_lex* _self_);
inline jule::Str _1abd19b91_id(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _47122_ln);
inline jule::Slice<jule::U8> _1abd19e27_resume(_1abd18c5b_lex* _self_);
inline void _1abd1a1d0_lexLineComment(_1abd18c5b_lex* _self_, jule::Ptr<_1abd0a38a_Token>* _52438_token);
inline void _1abd1a488_lexRangeComment(_1abd18c5b_lex* _self_, jule::Ptr<_1abd0a38a_Token>* _53939_token);
inline jule::Str _1abd1a7c9_num(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _56723_txt);
inline jule::Str _1abd1ab1a_escapeSeq(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _58929_txt);
inline jule::Str _1abd1b016_getRune(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw);
inline jule::Str _1abd1b357_lexRune(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _62827_txt);
inline jule::Str _1abd1b5dd_lexStr(_1abd18c5b_lex* _self_);
inline void _1abd1ba72_newLine(_1abd18c5b_lex* _self_);
inline jule::Bool _1abd1c0d3_isOp(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1abd0a38a_Token>* _71066_t);
inline jule::Bool _1abd1c4ce_lexBasicOps(_1abd18c5b_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1abd0a38a_Token>* _72048_tok);
inline jule::Bool _1abd1c8ca_lexId(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1abd0a38a_Token>* _72943_t);
inline jule::Bool _1abd1ccc6_lexNum(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1abd0a38a_Token>* _73944_t);
inline jule::Ptr<_1abd0a38a_Token> _1abd1d05c_token(_1abd18c5b_lex* _self_);
inline jule::Bool _1abd226d2_IsUnsafe(_1abd2236e_PtrTypeDecl* _self_);
inline jule::Bool _1abd22e74_AutoSized(_1abd22b11_ArrTypeDecl* _self_);
inline jule::Bool _1abd28c27_Unhandled(_1abd288a3_FnCallExpr* _self_);
inline jule::Bool _1abd28ead_Ignored(_1abd288a3_FnCallExpr* _self_);
inline jule::Bool _1abd31427_IsSelf(_1abd310a3_ParamDecl* _self_);
inline jule::Bool _1abd32868_IsAnon(_1abd32505_FnDecl* _self_);
inline jule::Bool _1abd3466c_IsInf(_1abd34309_Iter* _self_);
inline jule::Bool _1abd34e97_IsWhileNext(_1abd34b34_WhileKind* _self_);
inline jule::Ptr<_1abd438ac_FieldIns> _1abd3db60_instance(jule::Ptr<_1abd3d7a8_Field> _self_);
inline jule::Ptr<_1abd4445c_StructIns> _1abd41b41_instance(jule::Ptr<_1abd416ce_Struct> _self_);
inline jule::Ptr<_1abd4445c_StructIns> _1abd41e4e_appendInstance(_1abd416ce_Struct* _self_, jule::Ptr<_1abd4445c_StructIns>* _13438_ins);
inline jule::Ptr<_1abd566a0_Fn> _1abd4234a_FindMethod(_1abd416ce_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically);
inline jule::Ptr<_1abda8d2e_Var> _1abd4268b_FindStatic(_1abd416ce_Struct* _self_, jule::Str _16329_ident);
inline jule::Ptr<_1abd3d7a8_Field> _1abd429cc_FindField(_1abd416ce_Struct* _self_, jule::Str _17428_ident);
inline jule::Bool _1abd42d1d_IsImplements(_1abd416ce_Struct* _self_, jule::Ptr<_1abd69a59_Trait> _18427_t);
inline jule::Bool _1abd4315e_IsUses(_1abd416ce_Struct* _self_, jule::Ptr<_1abd416ce_Struct> _19421_s);
inline jule::Ptr<_1abd58608_ParamIns> _1abd55061_instance(jule::Ptr<_1abd54bcb_Param> _self_);
inline jule::Bool _1abd552e7_IsSelf(_1abd54bcb_Param* _self_);
inline jule::Bool _1abd5557d_IsRef(_1abd54bcb_Param* _self_);
inline jule::Bool _1abd56b23_IsVoid(_1abd566a0_Fn* _self_);
inline jule::Bool _1abd56da9_IsMethod(_1abd566a0_Fn* _self_);
inline jule::Bool _1abd57140_IsEntryPoint(_1abd566a0_Fn* _self_);
inline jule::Bool _1abd573c6_IsInit(_1abd566a0_Fn* _self_);
inline jule::Bool _1abd5765c_IsAnon(_1abd566a0_Fn* _self_);
inline jule::Bool _1abd578e3_AnyVar(_1abd566a0_Fn* _self_);
inline jule::Ptr<_1abd59681_FnIns> _1abd57b79_instanceForce(jule::Ptr<_1abd566a0_Fn> _self_);
inline jule::Ptr<_1abd59681_FnIns> _1abd57e10_instance(jule::Ptr<_1abd566a0_Fn> _self_);
inline jule::Ptr<_1abd59681_FnIns> _1abd5821d_appendInstance(_1abd566a0_Fn* _self_, jule::Ptr<_1abd59681_FnIns>* _12938_ins);
inline jule::Str _1abd5896b_Str(_1abd58608_ParamIns* _self_);
inline jule::Str _1abd599c2_Str(_1abd59681_FnIns* _self_);
inline jule::Bool _1abd59d13_Equal(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abe42d30_TypeKind> _21921_other);
inline jule::Bool _1abd5a2a8_EqualFn(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abd59681_FnIns>* _23024_f);
inline jule::Bool _1abd5a5e9_equalTrait(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abd59681_FnIns>* _28927_other);
inline jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _1abd5a880_Types(_1abd59681_FnIns* _self_);
inline jule::Bool _1abd5ab16_IsBuiltin(_1abd59681_FnIns* _self_);
inline jule::Bool _1abd5ad9c_IsAnon(_1abd59681_FnIns* _self_);
inline jule::Bool _1abd5b1dd_Same(_1abd59681_FnIns* _self_, jule::Ptr<_1abd59681_FnIns> _33219_f);
inline jule::Str _1abd5b52e_GetKindStr(_1abd59681_FnIns* _self_, jule::Bool _34925_ident);
inline jule::Ptr<_1abd5c860_ReferenceStack> static__1abd5cb4b_new(void);
inline jule::I32 _1abd5d047_Len(_1abd5c860_ReferenceStack* _self_);
inline jule::Any _1abd5d388_At(_1abd5c860_ReferenceStack* _self_, jule::I32 _6821_i);
inline void _1abd5d641_Push(_1abd5c860_ReferenceStack* _self_, jule::Any _7327_ref);
inline jule::Bool _1b15aa053_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd59681_FnIns> _7823_t);
inline jule::Bool _1b15c0e37_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abda8d2e_Var> _7823_t);
inline jule::Bool _1ae7a5b9b_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd4445c_StructIns> _7823_t);
inline jule::Bool _1b17c2aea_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd69a59_Trait> _7823_t);
inline void _1abd642c3_pushErr(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd0a38a_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args);
inline void _1abd64a54_pushSuggestion(_1abd63822_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args);
inline jule::Bool _1abd64e50_checkCppUseDeclPath(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _34539_decl, jule::Str* _34556_path);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abd6525d_buildCppHeaderImport(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _36544_decl);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abd6559e_buildStdImport(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _39338_decl);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abd658e0_buildIdentImport(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _43341_decl);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abd65c31_buildImport(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _48736_decl);
inline jule::Bool _1abd66072_checkDuplicateUseDecl(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _49841_pkg);
inline void _1abd663d5_implImportSelections(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _51244_imp, jule::Ptr<_1abd3894b_UseDecl>* _51267_decl);
inline jule::Str _1abd66726_getAsLinkPath(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Str _52737_path);
inline void _1abd66b44_pushCycleError(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd63822_symbolBuilder>* _54135_sb, jule::Str _54155_path, _209e0d4d9_StrBuilder* _54171_message);
inline void _1abd67062_pushCrossCycleError(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd63822_symbolBuilder>* _55440_target, jule::Ptr<_1ab67760e_ImportInfo>* _55465_imp, jule::Ptr<_1abd0a38a_Token>* _55484_errorToken);
inline jule::Bool _1abd6745d_checkImportCycles(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1ab67760e_ImportInfo> _57737_imp, jule::Ptr<_1abd3894b_UseDecl>* _57756_decl);
inline void _1abd6787b_checkPackageAccessibility(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path);
inline jule::Bool _1abd67c77_importPackage(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1ab67760e_ImportInfo>* _61438_imp, jule::Ptr<_1abd3894b_UseDecl>* _61461_decl);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abd680b8_importUseDecl(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _66138_decl);
inline void _1abd682b6_importUseDecls(jule::Ptr<_1abd63822_symbolBuilder> _self_);
inline void _1abd6856e_appendNode(_1abd63822_symbolBuilder* _self_, _1abd1e844_Node* _69234_node);
inline void _1abd6876c_appendNodes(_1abd63822_symbolBuilder* _self_);
inline void _1abd68a25_pushDirectivePass(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd1ec62_Directive>* _72841_d);
inline void _1abd68c23_appendTopDirectives(_1abd63822_symbolBuilder* _self_);
inline void _1abd68e21_build(jule::Ptr<_1abd63822_symbolBuilder> _self_);
inline jule::Str _1abd69e22_Str(_1abd69a59_Trait* _self_);
inline jule::Bool _1abd6a263_Equal(jule::Ptr<_1abd69a59_Trait> _self_, jule::Ptr<_1abe42d30_TypeKind> _2521_other);
inline jule::Ptr<_1abd566a0_Fn> _1abd6a708_FindMethod(_1abd69a59_Trait* _self_, jule::Str _3429_ident);
inline jule::Ptr<_1abd566a0_Fn> _1abd6ad8a_findMethodInherit(_1abd69a59_Trait* _self_, jule::Str* _5537_ident);
inline jule::Bool _1abd6baa0_AutoExpr(_1abd6b6e8_EnumItem* _self_);
inline jule::Str _1abd6c5d9_Str(_1abd6c265_Enum* _self_);
inline jule::Bool _1abd6c92a_Equal(jule::Ptr<_1abd6c265_Enum> _self_, jule::Ptr<_1abe42d30_TypeKind> _3821_other);
inline jule::Ptr<_1abd6b6e8_EnumItem> _1abd6cd59_FindItem(_1abd6c265_Enum* _self_, jule::Str _4727_ident);
inline jule::Str _1abd6dcb1_Str(_1abd6d970_TypeEnum* _self_);
inline jule::Bool _1abd6e102_Equal(jule::Ptr<_1abd6d970_TypeEnum> _self_, jule::Ptr<_1abe42d30_TypeKind> _8021_other);
inline jule::Ptr<_1abd6d398_TypeEnumItem> _1abd6e531_FindItem(_1abd6d970_TypeEnum* _self_, jule::Str _8927_ident);
inline jule::Str _1abd71e4b_Str(_1abd71ac7_comptimeRange* _self_);
inline jule::Bool _1abd7228c_Equal(jule::Ptr<_1abd71ac7_comptimeRange> _self_, jule::Ptr<_1abe42d30_TypeKind> _3621_other);
inline jule::Str _1abd72963_Str(_1abd7259a_comptimeStructField* _self_);
inline jule::Bool _1abd72ca4_Equal(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe42d30_TypeKind> _4621_other);
inline jule::Ptr<_1abe11936_Data> _1abd73348__Name(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _5026_e, jule::Ptr<_1abd288a3_FnCallExpr>* _5041_fc);
inline jule::Ptr<_1abe11936_Data> _1abd73744__Type(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _6330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _6345_fc);
inline jule::Ptr<_1abe11936_Data> _1abd73b40__Public(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _7132_e, jule::Ptr<_1abd288a3_FnCallExpr>* _7147_fc);
inline jule::Ptr<_1abe11936_Data> _1abd73e4d_subIdent(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Str* _8429_ident);
inline jule::Str _1abd745d0_Str(_1abd7425b_comptimeStructFields* _self_);
inline jule::Bool _1abd74921_Equal(jule::Ptr<_1abd7425b_comptimeStructFields> _self_, jule::Ptr<_1abe42d30_TypeKind> _12021_other);
inline void _1abd74d94_ready(_1abd7425b_comptimeStructFields* _self_, jule::Ptr<_1abda8d2e_Var>* _12429_keyA, jule::Ptr<_1abda8d2e_Var>* _12446_keyB);
inline void _1abd752b2_step(_1abd7425b_comptimeStructFields* _self_, jule::I32 _14523_i, jule::Ptr<_1abda8d2e_Var>* _14536_keyA, jule::Ptr<_1abda8d2e_Var>* _14553_keyB);
inline jule::I32 _1abd75548_len(_1abd7425b_comptimeStructFields* _self_);
inline jule::Str _1abd75bca_Str(_1abd75856_comptimeStatic* _self_);
inline jule::Bool _1abd7601b_Equal(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe42d30_TypeKind> _16921_other);
inline jule::Ptr<_1abe11936_Data> _1abd76648__Name(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _17326_e, jule::Ptr<_1abd288a3_FnCallExpr>* _17341_fc);
inline jule::Ptr<_1abe11936_Data> _1abd76a44__Type(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _18630_e, jule::Ptr<_1abd288a3_FnCallExpr>* _18645_fc);
inline jule::Ptr<_1abe11936_Data> _1abd76e40__Public(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _19432_e, jule::Ptr<_1abd288a3_FnCallExpr>* _19447_fc);
inline jule::Ptr<_1abe11936_Data> _1abd77281_subIdent(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Str* _20729_ident);
inline jule::Str _1abd7788b_Str(_1abd77517_comptimeStatics* _self_);
inline jule::Bool _1abd77bcc_Equal(jule::Ptr<_1abd77517_comptimeStatics> _self_, jule::Ptr<_1abe42d30_TypeKind> _24321_other);
inline void _1abd78150_ready(_1abd77517_comptimeStatics* _self_, jule::Ptr<_1abda8d2e_Var>* _24729_keyA, jule::Ptr<_1abda8d2e_Var>* _24746_keyB);
inline void _1abd7856d_step(_1abd77517_comptimeStatics* _self_, jule::I32 _26823_i, jule::Ptr<_1abda8d2e_Var>* _26836_keyA, jule::Ptr<_1abda8d2e_Var>* _26853_keyB);
inline jule::I32 _1abd78804_len(_1abd77517_comptimeStatics* _self_);
inline jule::Str _1abd79096_Str(_1abd78b12_comptimeEnumField* _self_);
inline jule::Bool _1abd793d7_Equal(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Ptr<_1abe42d30_TypeKind> _29221_other);
inline jule::Ptr<_1abe11936_Data> _1abd7985a__Name(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Ptr<_1abe1365d_Eval>* _29626_e, jule::Ptr<_1abd288a3_FnCallExpr>* _29641_fc);
inline jule::Ptr<_1abe11936_Data> _1abd79b9b_subIdent(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Str* _30929_ident);
inline jule::Str _1abd7a32d_Str(_1abd79ea9_comptimeEnumFields* _self_);
inline jule::Bool _1abd7a66e_Equal(jule::Ptr<_1abd79ea9_comptimeEnumFields> _self_, jule::Ptr<_1abe42d30_TypeKind> _33121_other);
inline void _1abd7aae2_ready(_1abd79ea9_comptimeEnumFields* _self_, jule::Ptr<_1abda8d2e_Var>* _33529_keyA, jule::Ptr<_1abda8d2e_Var>* _33546_keyB);
inline void _1abd7b010_step(_1abd79ea9_comptimeEnumFields* _self_, jule::I32 _35623_i, jule::Ptr<_1abda8d2e_Var>* _35636_keyA, jule::Ptr<_1abda8d2e_Var>* _35653_keyB);
inline jule::I32 _1abd7b296_len(_1abd79ea9_comptimeEnumFields* _self_);
inline jule::Str _1abd7b928_Str(_1abd7b5a4_comptimeParam* _self_);
inline jule::Bool _1abd7bc69_Equal(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe42d30_TypeKind> _38021_other);
inline jule::Ptr<_1abe11936_Data> _1abd7c4c8__Name(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _38426_e, jule::Ptr<_1abd288a3_FnCallExpr>* _38441_fc);
inline jule::Ptr<_1abe11936_Data> _1abd7c8c4__Type(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _39730_e, jule::Ptr<_1abd288a3_FnCallExpr>* _39745_fc);
inline jule::Ptr<_1abe11936_Data> _1abd7ccc0__Variadic(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _40534_e, jule::Ptr<_1abd288a3_FnCallExpr>* _40549_fc);
inline jule::Ptr<_1abe11936_Data> _1abd7d1bb__Reference(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _41835_e, jule::Ptr<_1abd288a3_FnCallExpr>* _41850_fc);
inline jule::Ptr<_1abe11936_Data> _1abd7d50c_subIdent(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Str* _43129_ident);
inline jule::Str _1abd7da7e_Str(_1abd7d73d_comptimeParams* _self_);
inline jule::Bool _1abd7ddc0_Equal(jule::Ptr<_1abd7d73d_comptimeParams> _self_, jule::Ptr<_1abe42d30_TypeKind> _47421_other);
inline void _1abd7e343_ready(_1abd7d73d_comptimeParams* _self_, jule::Ptr<_1abda8d2e_Var>* _47829_keyA, jule::Ptr<_1abda8d2e_Var>* _47846_keyB);
inline void _1abd7e761_step(_1abd7d73d_comptimeParams* _self_, jule::I32 _49923_i, jule::Ptr<_1abda8d2e_Var>* _49936_keyA, jule::Ptr<_1abda8d2e_Var>* _49953_keyB);
inline jule::I32 _1abd7e9e7_len(_1abd7d73d_comptimeParams* _self_);
inline jule::Str _1abd80179_Str(_1abd7ed05_comptimeTypeInfos* _self_);
inline jule::Bool _1abd804ba_Equal(jule::Ptr<_1abd7ed05_comptimeTypeInfos> _self_, jule::Ptr<_1abe42d30_TypeKind> _52321_other);
inline void _1abd8093d_ready(_1abd7ed05_comptimeTypeInfos* _self_, jule::Ptr<_1abda8d2e_Var>* _52729_keyA, jule::Ptr<_1abda8d2e_Var>* _52746_keyB);
inline void _1abd80d5b_step(_1abd7ed05_comptimeTypeInfos* _self_, jule::I32 _54823_i, jule::Ptr<_1abda8d2e_Var>* _54836_keyA, jule::Ptr<_1abda8d2e_Var>* _54853_keyB);
inline jule::I32 _1abd810e2_len(_1abd7ed05_comptimeTypeInfos* _self_);
inline jule::Str _1abd81774_Str(_1abd81400_comptimeTypeInfo* _self_);
inline jule::Bool _1abd81ab5_Equal(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe42d30_TypeKind> _57221_other);
inline jule::Ptr<_1abe11936_Data> _1abd82214__Str(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _57625_e, jule::Ptr<_1abd288a3_FnCallExpr>* _57640_fc);
inline jule::Ptr<_1abe11936_Data> _1abd82610__Kind(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _58930_e, jule::Ptr<_1abd288a3_FnCallExpr>* _58945_fc);
inline jule::Ptr<_1abe11936_Data> _1abd82a0b__Bits(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _66730_e, jule::Ptr<_1abd288a3_FnCallExpr>* _66745_fc);
inline jule::Ptr<_1abe11936_Data> _1ab63eb04__Elem(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _69030_e, jule::Ptr<_1abd288a3_FnCallExpr>* _69045_fc);
inline jule::Ptr<_1abe11936_Data> _1ab640000__Size(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _72330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _72345_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6403eb__Key(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _74129_e, jule::Ptr<_1abd288a3_FnCallExpr>* _74144_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6407e7__Value(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _75431_e, jule::Ptr<_1abd288a3_FnCallExpr>* _75446_fc);
inline jule::Ptr<_1abe11936_Data> _1ab640be3__Fields(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _76732_e, jule::Ptr<_1abd288a3_FnCallExpr>* _76747_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6410de__Statics(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _79633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _79648_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6414da__Public(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _81532_e, jule::Ptr<_1abd288a3_FnCallExpr>* _81547_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6418d6__Binded(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _84232_e, jule::Ptr<_1abd288a3_FnCallExpr>* _84247_fc);
inline jule::Ptr<_1abe11936_Data> _1ab641cd2__Ordered(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _85529_e, jule::Ptr<_1abd288a3_FnCallExpr>* _85544_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6421cd__Comparable(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _86832_e, jule::Ptr<_1abd288a3_FnCallExpr>* _86847_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6425c9__Mutable(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _88129_e, jule::Ptr<_1abd288a3_FnCallExpr>* _88144_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6429c5__Types(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _89431_e, jule::Ptr<_1abd288a3_FnCallExpr>* _89446_fc);
inline jule::Ptr<_1abe11936_Data> _1ab642dc1__Exceptional(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _91737_e, jule::Ptr<_1abd288a3_FnCallExpr>* _91752_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6432bc__CanNil(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _93532_e, jule::Ptr<_1abd288a3_FnCallExpr>* _93547_fc);
inline jule::Ptr<_1abe11936_Data> _1ab6436b8__RC(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _94828_e, jule::Ptr<_1abd288a3_FnCallExpr>* _94843_fc);
inline jule::Ptr<_1abe11936_Data> _1ab643ab4__Result(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _96132_e, jule::Ptr<_1abd288a3_FnCallExpr>* _96147_fc);
inline jule::Ptr<_1abe11936_Data> _1ab643eb0__Params(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _97732_e, jule::Ptr<_1abd288a3_FnCallExpr>* _97747_fc);
inline jule::Ptr<_1abe11936_Data> _1ab644301_subIdent(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Str* _99429_ident);
inline jule::Str _1ab644983_Str(_1ab64460e_comptimeValue* _self_);
inline jule::Bool _1ab644cc4_Equal(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe42d30_TypeKind> _114921_other);
inline jule::Ptr<_1abe11936_Data> _1ab645324__Unwrap(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _115332_e, jule::Ptr<_1abd288a3_FnCallExpr>* _115347_fc);
inline jule::Ptr<_1abe11936_Data> _1ab645720__Type(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _116130_e, jule::Ptr<_1abd288a3_FnCallExpr>* _116145_fc);
inline jule::Ptr<_1abe11936_Data> _1ab645b1b__Lvalue(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _116932_e, jule::Ptr<_1abd288a3_FnCallExpr>* _116947_fc);
inline jule::Ptr<_1abe11936_Data> _1ab646017__Mutable(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _118233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _118248_fc);
inline jule::Ptr<_1abe11936_Data> _1ab646413__Const(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _119531_e, jule::Ptr<_1abd288a3_FnCallExpr>* _119546_fc);
inline jule::Ptr<_1abe11936_Data> _1ab64680e__Field(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _120831_e, jule::Ptr<_1abd288a3_FnCallExpr>* _120846_fc);
inline jule::Ptr<_1abe11936_Data> _1ab646b50_subIdent(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Str* _124329_ident);
inline jule::Str _1ab6472d2_Str(_1ab646e5d_comptimeFiles* _self_);
inline jule::Bool _1ab647623_Equal(jule::Ptr<_1ab646e5d_comptimeFiles> _self_, jule::Ptr<_1abe42d30_TypeKind> _130021_other);
inline void _1ab647a96_ready(_1ab646e5d_comptimeFiles* _self_, jule::Ptr<_1abda8d2e_Var>* _130429_keyA, jule::Ptr<_1abda8d2e_Var>* _130446_keyB);
inline void _1ab647eb4_step(_1ab646e5d_comptimeFiles* _self_, jule::I32 _132523_i, jule::Ptr<_1abda8d2e_Var>* _132536_keyA, jule::Ptr<_1abda8d2e_Var>* _132553_keyB);
inline jule::I32 _1ab64824a_len(_1ab646e5d_comptimeFiles* _self_);
inline jule::Str _1ab648b1e_Str(_1ab648558_comptimeFile* _self_);
inline jule::Bool _1ab648e60_Equal(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe42d30_TypeKind> _134921_other);
inline jule::Ptr<_1abe11936_Data> _1ab64947c__Path(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _135330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _135345_fc);
inline jule::Ptr<_1abe11936_Data> _1ab649878__Name(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _136630_e, jule::Ptr<_1abd288a3_FnCallExpr>* _136645_fc);
inline jule::Ptr<_1abe11936_Data> _1ab649c74__Dir(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _137929_e, jule::Ptr<_1abd288a3_FnCallExpr>* _137944_fc);
inline jule::Ptr<_1abe11936_Data> _1ab64a0b5_subIdent(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Str* _139229_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*> _1ab64d1b7_readyFn(jule::Ptr<_1ab64ccbb_constraintChecker> _self_);
inline jule::Bool _1ab64d44d_readyFi(jule::Ptr<_1ab64ccbb_constraintChecker> _self_);
inline jule::Bool _1ab64d6d4_readySi(jule::Ptr<_1ab64ccbb_constraintChecker> _self_);
inline jule::Bool _1ab64d96a_ready(jule::Ptr<_1ab64ccbb_constraintChecker> _self_);
inline jule::Bool _1ab64dc01_check(jule::Ptr<_1ab64ccbb_constraintChecker> _self_);
inline jule::Bool _1ab6504d8_IsTraitImpl(_1ab650120_Impl* _self_);
inline jule::Bool _1ab65076e_IsStructImpl(_1ab650120_Impl* _self_);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ab65cec9_SelectPackage(_1ab65ca34_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _46032_selector);
inline jule::Ptr<_1abda8d2e_Var> _1ab65d3c5_FindVar(_1ab65ca34_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ab65d7c1_FindTypeAlias(_1ab65ca34_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded);
inline jule::Ptr<_1abd416ce_Struct> _1ab65dbbc_FindStruct(_1ab65ca34_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded);
inline jule::Ptr<_1abd566a0_Fn> _1ab65e0b8_FindFn(_1ab65ca34_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded);
inline jule::Ptr<_1abd69a59_Trait> _1ab65e409_FindTrait(_1ab65ca34_scopeChecker* _self_, jule::Str _53128_ident);
inline jule::Ptr<_1abd6c265_Enum> _1ab65e74a_FindEnum(_1ab65ca34_scopeChecker* _self_, jule::Str _54027_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1ab65ea8b_FindTypeEnum(_1ab65ca34_scopeChecker* _self_, jule::Str _54931_ident);
inline jule::Bool _1ab65eddd_isUnsafe(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline jule::Bool _1ab660174_isRoot(_1ab65ca34_scopeChecker* _self_);
inline void _1ab660372_stop(_1ab65ca34_scopeChecker* _self_);
inline jule::Bool _1ab660608_stopped(_1ab65ca34_scopeChecker* _self_);
inline jule::Bool _1ab66088e_isDeferred(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline void _1ab660b47_pushCaptured(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abda8d2e_Var>* _61137_v);
inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab660dcd_getRoot(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab661164_getHardRoot(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline jule::Ptr<_1abda8d2e_Var> _1ab6614a5_findVar(_1ab65ca34_scopeChecker* _self_, jule::Str _65426_ident);
inline jule::Ptr<_1ab657e19_Label> _1ab6617e6_findLabel(_1ab65ca34_scopeChecker* _self_, jule::Str* _67529_ident);
inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab661b37_findLabelScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Str* _69135_ident);
inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab661e78_findLabelAll(_1ab65ca34_scopeChecker* _self_, jule::Str* _70332_ident);
inline jule::Bool _1ab662374_isDuplicatedIdent(_1ab65ca34_scopeChecker* _self_, jule::Uintptr _71536_itself, jule::Str* _71554_ident);
inline void _1ab66262c_checkVarDecl(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd336b0_VarDecl> _73536_decl);
inline void _1ab6628d5_checkTypeAlias(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _76639_ta);
inline void _1ab662b8d_checkTypeAliasDecl(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd37362_TypeAliasDecl> _78242_decl);
inline jule::Ptr<_1ab655576_Scope> _1ab662e24_getChild(_1ab65ca34_scopeChecker* _self_);
inline void _1ab663342_checkChildSsc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _79338_tree, jule::Ptr<_1ab655576_Scope>* _79361_s, jule::Ptr<_1ab65ca34_scopeChecker>* _79377_ssc);
inline jule::Ptr<_1ab655576_Scope> _1ab66373d_checkChildSc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _79837_tree, jule::Ptr<_1ab65ca34_scopeChecker>* _79860_ssc);
inline jule::Ptr<_1ab655576_Scope> _1ab663a7e_checkChild(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _80435_tree);
inline void _1ab663d37_checkAnonScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree> _80938_tree);
inline void _1ab66419a_processErrorCall(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel>* _81441_m, jule::Ptr<_1abd0a38a_Token> _81472_err);
inline void _1ab664453_checkExpr(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd24b79_Expr> _82733_expr);
inline jule::Ptr<_1ab655994_If> _1ab664794_checkIf(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd36295_If> _85831_i);
inline jule::Ptr<_1ab655c91_Else> _1ab664ad5_checkElse(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd3666e_Else> _87833_e);
inline void _1ab664d8d_checkConditional(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd36b25_Conditional> _88440_conditional);
inline void _1ab665366_checkIterScopeSsc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _90037_it, jule::Ptr<_1abd30866_ScopeTree> _90054_tree, jule::Ptr<_1ab655576_Scope>* _90077_s, jule::Ptr<_1ab65ca34_scopeChecker> _90092_ssc);
inline jule::Ptr<_1ab655576_Scope> _1ab66581c_checkIterScopeSc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _90536_it, jule::Ptr<_1abd30866_ScopeTree> _90553_tree, jule::Ptr<_1ab65ca34_scopeChecker> _90575_ssc);
inline jule::Ptr<_1ab655576_Scope> _1ab665c18_checkIterScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _91134_it, jule::Ptr<_1abd30866_ScopeTree>* _91152_tree);
inline void _1ab665ec1_checkInfIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _91637_it);
inline void _1ab666279_checkWhileIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _92239_it);
inline void _1ab666697_checkComptimeRangeIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _97247_it, jule::Ptr<_1ab6573ad_RangeIter>* _97263_kind, jule::Ptr<_1abe11936_Data>* _97286_d);
inline void _1ab666950_checkRangeIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _102939_it);
inline void _1ab666c08_checkIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter> _108933_it);
inline jule::Bool _1ab667049_checkValidContLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _111339_it);
inline jule::Bool _1ab66738a_checkValidBreakLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _112940_ptr);
inline jule::Ptr<_1ab657743_ContSt> _1ab6676cb_checkContValidScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35cde_ContSt> _115239_c);
inline void _1ab667984_checkCont(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35cde_ContSt> _117629_c);
inline void _1ab667c3c_checkLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2ce29_LabelSt> _122334_l);
inline void _1ab667ee5_pushGoto(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2d303_GotoSt> _124232_gt);
inline void _1ab66829d_checkPostfix(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt> _125636_a);
inline jule::Bool _1ab6685de_isNewAssignIdent(_1ab65ca34_scopeChecker* _self_, jule::Str _128935_ident);
inline void _1ab668897_removeInteriorMutRisk(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abe11936_Data>* _130246_d);
inline jule::Bool _1ab668d4d_checkStructureAssignOp(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd4445c_StructIns>* _131647_s, jule::Ptr<_1abd2e2e3_AssignSt>* _131667_a, jule::Ptr<_1abe11936_Data>* _131686_r);
inline void _1ab669106_checkSingleAssign(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt>* _135542_a);
inline void _1ab669689_processEndPartOfMultiAssign(_1ab65ca34_scopeChecker* _self_, jule::Ptr<_1ab659129_MultiAssign>* _143351_st, jule::Ptr<_1abd2e2e3_AssignSt>* _143414_a, jule::Ptr<_1abd2dc60_AssignLeft>* _143433_lexpr, jule::Ptr<_1abe11936_Data>* _143458_l, jule::Ptr<_1abe11936_Data>* _143473_r);
inline void _1ab669942_checkMultiAssign(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt>* _150341_a);
inline void _1ab669bea_checkAssignSt(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt> _155137_a);
inline jule::Ptr<_1ab655576_Scope> _1ab66a0e6_checkCaseScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab65a2b2_Case>* _156235_c, jule::Ptr<_1abd30866_ScopeTree>* _156250_tree);
inline jule::Ptr<_1ab65a2b2_Case> _1ab66a657_checkCase(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match> _156833_m, jule::I32 _156844_i, jule::Ptr<_1abd37818_Case> _156856_c, jule::Ptr<_1abe11936_Data> _156875_expr);
inline void _1ab66aa75_checkCases(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _164335_m, jule::Ptr<_1ab659789_Match> _164354_rm, jule::Ptr<_1abe11936_Data> _164370_expr);
inline jule::Ptr<_1ab65a2b2_Case> _1ab66ae71_checkDefault(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match> _166436_m, jule::Ptr<_1abd3666e_Else> _166451_d);
inline void _1ab66b2d4_checkComptimePanic(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd0a38a_Token> _167242_callToken, jule::Ptr<_1ab655576_Scope>* _167262_s);
inline void _1ab66b647_processConstMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match>* _170442_tm, jule::Ptr<_1abd38132_MatchCase>* _170459_m);
inline void _1ab66b900_checkTypeMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _173339_m);
inline void _1ab66bba8_checkCommonMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _177541_m);
inline void _1ab66be61_checkMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase> _182534_m);
inline void _1ab66c219_checkFall(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2d600_FallSt> _183329_f);
inline jule::Ptr<_1ab657b1c_BreakSt> _1ab66c55a_checkBreakWithLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _185639_b);
inline jule::Ptr<_1ab657b1c_BreakSt> _1ab66c89b_checkPlainBreak(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _191435_b);
inline void _1ab66cb54_checkBreak(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _193630_b);
inline void _1ab66ce0c_checkRet(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd33a89_RetSt> _194732_r);
inline void _1ab66d1b5_checkUseExpr(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2554d_UseExpr> _197232_ue);
inline void _1ab66d46d_checkNode(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Any* _198834_node);
inline void _1ab66d66b_checkResult(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline void _1ab66d869_checkTree(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline void _1ab66dbcc_checkGoto(_1ab65ca34_scopeChecker* _self_, jule::Ptr<_1ab65ba44_scopeGoto>* _209033_gt, jule::Ptr<_1ab65b4b1_scopeLabel>* _209054_label);
inline void _1ab66ddca_checkGotos(_1ab65ca34_scopeChecker* _self_);
inline void _1ab66e0c8_checkLabels(_1ab65ca34_scopeChecker* _self_);
inline void _1ab66e2c6_checkVars(_1ab65ca34_scopeChecker* _self_);
inline void _1ab66e4c4_checkAliases(_1ab65ca34_scopeChecker* _self_);
inline void _1ab66e837_check(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _216830_tree, jule::Ptr<_1ab655576_Scope>* _216853_s);
inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab66eabd_newChildChecker(jule::Ptr<_1ab65ca34_scopeChecker> _self_);
inline void _1ab671570_checkCdef(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _1629_d);
inline void _1ab671828_checkTypedef(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _3232_d);
inline void _1ab671ad1_checkNamespace(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _4838_d);
inline void _1ab671d89_checkDeprecated(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _9939_d);
inline void _1ab672142_checkTest(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _13929_d);
inline void _1ab6723ea_checkDirective(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _16038_d);
inline void _1ab6725e8_check(_1ab671163_directiveChecker* _self_);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ab677ae8_SelectPackage(_1ab67760e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> );
inline jule::Ptr<_1abda8d2e_Var> _1ab677ee4_FindVar(_1ab67760e_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool );
inline jule::Ptr<_1abe4203d_TypeAlias> _1ab6783e0_FindTypeAlias(_1ab67760e_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool );
inline jule::Ptr<_1abd416ce_Struct> _1ab6787db_FindStruct(_1ab67760e_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool );
inline jule::Ptr<_1abd566a0_Fn> _1ab678bd7_FindFn(_1ab67760e_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool );
inline jule::Ptr<_1abd69a59_Trait> _1ab679028_FindTrait(_1ab67760e_ImportInfo* _self_, jule::Str _23628_ident);
inline jule::Ptr<_1abd6c265_Enum> _1ab679369_FindEnum(_1ab67760e_ImportInfo* _self_, jule::Str _24727_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1ab6796aa_FindTypeEnum(_1ab67760e_ImportInfo* _self_, jule::Str _25831_ident);
inline jule::Bool _1ab679b50_isLookupable(_1ab67760e_ImportInfo* _self_, jule::Str* _26728_ident);
inline jule::Bool _1ab679e91_existIdent(_1ab67760e_ImportInfo* _self_, jule::Str _28725_ident);
inline jule::Bool _1ab67a227_isAccessibleViaSelection(_1ab67760e_ImportInfo* _self_);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ab67a9ca_SelectPackage(_1ab67a535_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> );
inline jule::Ptr<_1abda8d2e_Var> _1ab67adc6_FindVar(_1ab67a535_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ab67b2c2_FindTypeAlias(_1ab67a535_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded);
inline jule::Ptr<_1abd416ce_Struct> _1ab67b6bd_FindStruct(_1ab67a535_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded);
inline jule::Ptr<_1abd566a0_Fn> _1ab67bab9_FindFn(_1ab67a535_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded);
inline jule::Ptr<_1abd69a59_Trait> _1ab67be0a_FindTrait(_1ab67a535_Package* _self_, jule::Str _33828_ident);
inline jule::Ptr<_1abd6c265_Enum> _1ab67c24b_FindEnum(_1ab67a535_Package* _self_, jule::Str _34427_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1ab67c58c_FindTypeEnum(_1ab67a535_Package* _self_, jule::Str _35031_ident);
inline jule::Ptr<_1abd81400_comptimeTypeInfo> _1ab6972dd_pushComptimeTypeInfo(_1ab696d9d_commonSemaMeta* _self_, jule::Ptr<_1abe42d30_TypeKind>* _21444_t);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ab697e48_SelectPackage(_1ab6979a3_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _24332_selector);
inline jule::Ptr<_1abda8d2e_Var> _1ab698344_FindVar(_1ab6979a3_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ab698740_FindTypeAlias(_1ab6979a3_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded);
inline jule::Ptr<_1abd416ce_Struct> _1ab698b3b_FindStruct(_1ab6979a3_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded);
inline jule::Ptr<_1abd566a0_Fn> _1ab699037_FindFn(_1ab6979a3_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded);
inline jule::Ptr<_1abd69a59_Trait> _1ab699378_FindTrait(_1ab6979a3_Sema* _self_, jule::Str _38028_ident);
inline jule::Ptr<_1abd6c265_Enum> _1ab6996b9_FindEnum(_1ab6979a3_Sema* _self_, jule::Str _41227_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1ab699a0a_FindTypeEnum(_1ab6979a3_Sema* _self_, jule::Str _44431_ident);
inline jule::Bool _1ab699e17_isFlag(_1ab6979a3_Sema* _self_, jule::I32 _47321_flags);
inline void _1ab69a1c0_setCurrentFile(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe0b5bd_SymbolTable> _47537_f);
inline void _1ab69a5dd_pushErr(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args);
inline void _1ab69a951_pushSuggestion(_1ab6979a3_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args);
inline jule::Bool _1ab69ad4c_isAccessibleDefine(_1ab6979a3_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1abd0a38a_Token> _48747_token);
inline jule::Bool _1ab69b303_isDuplicatedIdent(_1ab6979a3_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded);
inline void _1ab69b666_checkDirectives(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _51140_d, jule::Any _51166_o);
inline jule::Bool _1ab69bb1c_checkGenericQuantity(_1ab6979a3_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1abd0a38a_Token> _52066_token);
inline jule::Bool _1ab69c018_isDuplicatedImportSelection(_1ab6979a3_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident);
inline jule::Any _1ab69c414_getImportDef(_1ab6979a3_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1ab67760e_ImportInfo>* _55245_imp);
inline jule::Bool _1b11c4d7c_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abda8d2e_Var>* _56759_s);
inline jule::Bool _1b11c914a_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abe4203d_TypeAlias>* _56759_s);
inline jule::Bool _1b11cd3c4_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd416ce_Struct>* _56759_s);
inline jule::Bool _1b11d2939_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd69a59_Trait>* _56759_s);
inline jule::Bool _1b11d6bd5_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd6c265_Enum>* _56759_s);
inline jule::Bool _1b11dae81_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd6d970_TypeEnum>* _56759_s);
inline jule::Bool _1b11e020a_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd566a0_Fn>* _56759_s);
inline jule::Bool _1ab69cb51_checkImportSelectedSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _58153_imp);
inline jule::Bool _1b11e49c3_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1ae32d092_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1aee40665_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1aee42656_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1aee44d40_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd69a59_Trait>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1aee483d7_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6c265_Enum>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1aee4aa7c_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6d970_TypeEnum>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et);
inline jule::Bool _1ab69d38d_checkImportAllSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _64044_imp);
inline jule::Bool _1ab69d6ce_checkImportSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _65445_imp);
inline jule::Bool _1ab69da20_isUseAliasDuplication(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _66341_imp);
inline jule::Bool _1ab69dd61_checkImport(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _67935_imp);
inline void _1ab69e05e_checkImports(_1ab6979a3_Sema* _self_);
inline void _1ab69e25c_implFileImpls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab69e45a_implImpls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab69e658_checkEnums(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab69e856_checkFileInherits(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab69ea54_checkInherits(jule::Ptr<_1ab6979a3_Sema> _self_);
inline _1abe54bdd_typeChecker _1ab6a000a_typeChecker(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _76850_generics, jule::Ptr<_1abe53bed_referencer> _76913_referencer);
inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a056b_buildTypeWithRefers(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _79613_generics, jule::Ptr<_1abe53bed_referencer> _79641_referencer);
inline jule::Bool _1ab6a0acc_checkTypeWithRefers(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a002_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _80313_generics, jule::Ptr<_1abe53bed_referencer> _80341_referencer);
inline jule::Ptr<_1ab64ccbb_constraintChecker> _1ab6a0d63_constraintChecker(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Bool _1ab6a125e_checkType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a002_TypeSymbol>* _81734_t, jule::Trait _81754_l);
inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a1715_buildTypeWithGenerics(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _82413_generics, jule::Ptr<_1abd5c860_ReferenceStack> _82441_refers);
inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a1d97_selectType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _84135_t);
inline jule::Ptr<_1abe1365d_Eval> _1ab6a234d_evalpd(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1abe42d30_TypeKind> _85345_p, jule::Ptr<_1abda8d2e_Var> _85363_owner);
inline jule::Ptr<_1abe1365d_Eval> _1ab6a2749_evalp(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1abe42d30_TypeKind> _86844_p);
inline jule::Ptr<_1abe1365d_Eval> _1ab6a2a8a_eval(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _87328_l);
inline jule::Bool _1ab6a30eb_checkAssignType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1abe42d30_TypeKind>* _87757_dest, jule::Ptr<_1abe11936_Data>* _87814_d, jule::Ptr<_1abd0a38a_Token> _87828_errorToken);
inline jule::Bool _1ab6a35a2__checkTypeCompatibility(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _91948_dest, jule::Ptr<_1abe42d30_TypeKind>* _91970_src, jule::Ptr<_1abd0a38a_Token> _92013_errorToken);
inline jule::Bool _1ab6a3a58_checkTypeCompatibility(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _93747_dest, jule::Ptr<_1abe42d30_TypeKind>* _93814_src, jule::Ptr<_1abd0a38a_Token>* _93835_errorToken);
inline void _1ab6a3e76_pushCompatiblityError(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe42d30_TypeKind>* _94645_dest, jule::Ptr<_1abe11936_Data>* _94667_src, jule::Ptr<_1abd0a38a_Token>* _94714_errorToken);
inline jule::Bool _1ab6a442c_checkTypeCompatibility1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _96448_dest, jule::Ptr<_1abe11936_Data>* _96470_src, jule::Ptr<_1abd0a38a_Token>* _96514_errorToken);
inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a48d3_buildNonGenericTypeKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>* _98050_ignored);
inline jule::Bool _1ab6a4cce_buildFnNonGenericTypeKinds(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>* _99167_ignored);
inline jule::Ptr<_1abd59681_FnIns> _1ab6a5120_getTraitCheckFnKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _101344_f);
inline jule::Bool _1ab6a55c6_checkConstraintsFn(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _103643_f, jule::Ptr<_1abd0a38a_Token>* _103659_et, jule::Ptr<_1abd59681_FnIns> _103675_exist);
inline jule::Bool _1ab6a5a7c_checkConstraintsStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _105047_s, jule::Ptr<_1abd0a38a_Token>* _105067_et, jule::Ptr<_1abd4445c_StructIns> _105083_exist);
inline jule::Bool _1ab6a5e78_fnEnvironment(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*> _106749_algo);
inline void _1ab6a6231_checkFnParamKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd58608_ParamIns>* _109441_p);
inline jule::Bool _1ab6a6572_reloadFnInsTypes(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns> _110140_f);
inline jule::Bool _1ab6a6a28_checkRefValidityForInitExpr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1abe11936_Data>* _113767_d, jule::Ptr<_1abd0a38a_Token>* _113782_errorToken);
inline jule::Bool _1ab6a6d69_isMutRiskyStruct(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd4445c_StructIns>* _115432_s);
inline jule::Bool _1ab6a7485_checkValidityForInitExpr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1abe42d30_TypeKind>* _118210_leftKind, jule::Ptr<_1abe11936_Data>* _118236_d, jule::Ptr<_1abd0a38a_Token>* _118251_errorToken);
inline jule::Bool _1ab6a7881_checkTypeAliasDeclKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _120947_ta, jule::Trait _120967_l);
inline void _1ab6a7be4_checkTypeAliasDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _123243_ta, jule::Trait _123263_l);
inline void _1ab6a7e9c_checkTypeAliasDeclDup(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _124046_ta);
inline jule::Bool _1ab6a8233_checkTypeAliasDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1aeeee14c_checkEnumItemsDup(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _126439_items);
inline void _1b000b324_checkEnumItemsDup(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _126439_items);
inline void _1ab6a8794_checkEnumItemsStr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _128442_e);
inline void _1aeeceabc_checkEnumItemInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe1365d_Eval>* _131046_eval, jule::Ptr<_1abd6c265_Enum>* _131064_e, jule::Ptr<_1abe4a909_Prim>* _131075_prim, jule::Ptr<_1abd6b6e8_EnumItem>* _131093_item, jule::U64* _1310115_n);
inline void _1aeedeb43_checkEnumItemInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe1365d_Eval>* _131046_eval, jule::Ptr<_1abd6c265_Enum>* _131064_e, jule::Ptr<_1abe4a909_Prim>* _131075_prim, jule::Ptr<_1abd6b6e8_EnumItem>* _131093_item, jule::I64* _1310115_n);
inline void _1aeecac3e_checkEnumItemsInt1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a909_Prim>* _134544_prim, jule::Ptr<_1abd6c265_Enum>* _134562_e);
inline void _1aeedb348_checkEnumItemsInt1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a909_Prim>* _134544_prim, jule::Ptr<_1abd6c265_Enum>* _134562_e);
inline void _1ab6a9443_checkEnumItemsInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _138042_e);
inline void _1ab6a96eb_checkEnumDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _139038_e);
inline void _1ab6a99a4_checkTypeEnumDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6d970_TypeEnum>* _143142_e);
inline jule::Bool _1ab6a9c3a_checkEnumDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Bool _1ab6a9ec1_checkTypeEnumDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Bool _1ab6aa312_checkDeclGenerics(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _149437_generics);
inline jule::Bool _1ab6aa653_checkFnDeclParamsDup(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd566a0_Fn>* _152140_f);
inline jule::Bool _1ab6aa994_checkFnDeclResultDup(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd566a0_Fn>* _155840_f);
inline jule::Bool _1ab6aacd5_checkFnVariadicParam(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _160345_f);
inline void _1ab6ab08d_checkFnDeclPrototype(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _161645_f);
inline jule::Bool _1ab6ab544_catchTraitInheritCycle(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait> _163842_t1, jule::Ptr<_1abd69a59_Trait> _163858_t2, _209e0d4d9_StrBuilder* _163875_message);
inline jule::Bool _1ab6ab885__checkTraitDeclInherits(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _165748_t);
inline void _1ab6abb3d_checkTraitDeclInherits(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _169847_t);
inline void _1ab6abde6_checkTraitDeclMethod(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _172345_f);
inline void _1ab6ac19e_checkTraitDeclMethods(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _173746_t);
inline void _1ab6ac457_checkTraitDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _177339_t);
inline jule::Bool _1ab6ac6dd_checkTraitDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Bool _1ab6acad9_checkTraitImplMethods(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd69a59_Trait>* _179745_base, jule::Ptr<_1ab650120_Impl>* _179760_ipl);
inline jule::Bool _1ab6aced5_implToStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _180837_dest, jule::Ptr<_1ab650120_Impl>* _180857_ipl);
inline void _1ab6ad28d_implTrait(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _185034_decl);
inline void _1ab6ad546_implStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _189335_decl);
inline void _1ab6ad7ee_implImpl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _191733_decl);
inline void _1ab6adb62_checkVarDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _192837_decl, jule::Trait _192853_l);
inline void _1ab6ade1a_checkGlobalVarDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _196543_decl);
inline jule::Bool _1ab6ae1a1_checkGlobalDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Bool _1ab6ae59c_checkStructTraitImpl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _199345_strct, jule::Ptr<_1abd69a59_Trait>* _199366_trt);
inline jule::Bool _1ab6ae8dd_checkStructImpls(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _201741_s);
inline jule::Bool _1ab6aec2e_checkStructFields(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _202542_st);
inline void _1ab6aeed7_checkStructDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _204240_s);
inline jule::Bool _1ab6b026d_checkStructDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b0526_checkAnonFuncDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _207242_f);
inline void _1ab6b07ce_checkFuncDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _207738_f);
inline jule::Bool _1ab6b0b20_checkFuncDeclsBy(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _209941_funcs);
inline jule::Bool _1ab6b0da6_checkFuncDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b12c4_pushCycleError(_1ab6979a3_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _209e0d4d9_StrBuilder* _211556_message);
inline void _1ab6b1978_checkPackageDecls(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b1cdb_checkDataForTypeInference(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe11936_Data>* _217545_d, jule::Ptr<_1abd0a38a_Token>* _217556_err_token);
inline void _1ab6b2094_checkVarValue(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _218738_v);
inline void _1ab6b2407_evalVarValue(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _224037_decl, jule::Trait _224053_l);
inline void _1ab6b276a_checkVar(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _225733_decl, jule::Trait _225749_l);
inline void _1ab6b2968_checkGlobals(jule::Ptr<_1ab6979a3_Sema> _self_);
inline jule::Ptr<_1abd59681_FnIns> _1ab6b2d64_readyToCheckFn(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _228139_s, jule::Ptr<_1abd566a0_Fn>* _228159_f);
inline void _1ab6b31c7_checkTypeMethod(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _229540_s, jule::Ptr<_1abd566a0_Fn>* _229560_f);
inline jule::Ptr<_1abd59681_FnIns> _1ab6b367d_checkStructInsOp(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _230841_s, jule::Ptr<_1abd566a0_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1abd566a0_Fn>> _230869_p);
inline jule::Bool _1ab6b3a79_checkStructEnv(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _231839_s, jule::Ptr<_1abd0a38a_Token> _231858_errorToken);
inline jule::Bool _1ab6b3e75_precheckStructIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _241542_s, jule::Ptr<_1abd0a38a_Token> _241561_errorToken);
inline void _1ab6b422d_checkStructIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _243039_s);
inline void _1ab6b44d6_checkTypeStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _243640_s);
inline void _1ab6b46d4_checkStructTypes(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b498c_checkStructInsOperators(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns> _246047_s);
inline void _1ab6b4c45_precheckStructType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _252443_s);
inline void _1ab6b4e43_precheckStructTypes(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b51eb_checkRets(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _255033_f);
inline void _1ab6b555e_checkFnInsSc(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _256136_f, jule::Ptr<_1ab65ca34_scopeChecker>* _256152_sc);
inline void _1ab6b58c2_checkFnInsCaller(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _257441_f, jule::Ptr<_1abd0a38a_Token> _257456_caller);
inline void _1ab6b5b7a_checkFnIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _259635_f);
inline void _1ab6b5e33_checkFunc(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _260034_f);
inline void _1ab6b61db_checkTestFn(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _261535_f);
inline void _1ab6b6494_precheckFunc(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _264837_f);
inline void _1ab6b6692_precheckFuncs(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b6890_checkFuncs(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b6a8d_checkPackageTypes(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b6c8b_setFileSemaFields(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b6e89_setSemaFields(jule::Ptr<_1ab6979a3_Sema> _self_);
inline void _1ab6b7242_check(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _272630_files);
inline _1ab6b7671_missingRetChecker static__1ab6b7a39_new(void);
inline jule::Bool _1ab6b7d47_checkConditional(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab6561ae_Conditional> _277435_c);
inline jule::Bool _1ab6b8188_checkMatch(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab659789_Match> _278629_m);
inline jule::Bool _1abda69db_checkInfIter(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab6564ab_InfIter> _281231_it);
inline jule::Bool _1abda6d2c_checkScope(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab655576_Scope> _283129_s);
inline jule::Bool _1abda716d_check(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab655576_Scope> _287724_s);
inline jule::Bool _1abda9208_IsInitialized(_1abda8d2e_Var* _self_);
inline jule::Bool _1abda948e_IsTypeInferred(_1abda8d2e_Var* _self_);
inline jule::Bool _1abda9725_untypedConstant(_1abda8d2e_Var* _self_);
inline jule::Bool static__1abdaa2c5_Dispose(jule::Ptr<_1abd566a0_Fn> _1023_f);
inline jule::Bool static__1abdaa58e_Str(jule::Ptr<_1abd566a0_Fn> _2419_f);
inline jule::Bool static__1abdaa913_logical(jule::Ptr<_1abd566a0_Fn>* _4624_f, jule::Str _4632_ident);
inline jule::Bool static__1abdaabcc_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _7218_f);
inline jule::Bool static__1abdaae96_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _7718_f);
inline jule::Bool static__1abdab260_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _8220_f);
inline jule::Bool static__1abdab529_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _8718_f);
inline jule::Bool static__1abdab7e3_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _9220_f);
inline jule::Bool static__1abdabb67_result(jule::Ptr<_1abd566a0_Fn>* _9623_f, jule::Str _9631_ident);
inline jule::Bool static__1abdabe31_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _11819_f);
inline jule::Bool static__1abdac1ea_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _12319_f);
inline jule::Bool static__1abdac4b4_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _12819_f);
inline jule::Bool static__1abdac77d_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _13319_f);
inline jule::Bool static__1abdaca47_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _13819_f);
inline jule::Bool static__1abdacd11_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _14319_f);
inline jule::Bool static__1abdad0ca_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _14819_f);
inline jule::Bool static__1abdad394_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _15322_f);
inline jule::Bool static__1abdad65d_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _15821_f);
inline jule::Bool static__1abdad927_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _16322_f);
inline jule::Bool static__1abdadc9b_unary(jule::Ptr<_1abd566a0_Fn>* _16722_f, jule::Str _16730_ident);
inline jule::Bool static__1abdae065_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _18719_f);
inline jule::Bool static__1abdae32e_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _19219_f);
inline jule::Bool static__1abdae5e8_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _19722_f);
inline jule::Bool static__1abdae96c_assign(jule::Ptr<_1abd566a0_Fn>* _20123_f, jule::Str _20131_ident);
inline jule::Bool static__1abdaec36_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _22125_f);
inline jule::Bool static__1abdb0000_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _22625_f);
inline jule::Bool static__1abdb02b9_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _23125_f);
inline jule::Bool static__1abdb0583_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _23625_f);
inline jule::Bool static__1abdb084c_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _24125_f);
inline jule::Bool static__1abdb0b16_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _24625_f);
inline jule::Bool static__1abdb0dd0_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _25125_f);
inline jule::Bool static__1abdb1199_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _25627_f);
inline jule::Bool static__1abdb1463_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _26128_f);
inline jule::Bool static__1abdb172c_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _26628_f);
inline void _1abde8ae9_pushErr(_1abde85ee_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args);
inline jule::Bool _1abde8d80_checkTrait(_1abde85ee_typeCompatibilityChecker* _self_);
inline jule::Bool _1abde9116_checkPtr(_1abde85ee_typeCompatibilityChecker* _self_);
inline jule::Bool _1abde939c_checkPrim(_1abde85ee_typeCompatibilityChecker* _self_);
inline jule::Bool _1abde9798_typeEnum(_1abde85ee_typeCompatibilityChecker* _self_, jule::Ptr<_1abd6d970_TypeEnum>* _19928_e, jule::Ptr<_1abe42d30_TypeKind>* _19947_t2);
inline jule::Bool _1abde9a2e_checkTypeEnum(_1abde85ee_typeCompatibilityChecker* _self_);
inline jule::Bool _1abde9cb5_check(_1abde85ee_typeCompatibilityChecker* _self_);
inline void _1abdea832_pushErr(_1abdea39d_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args);
inline jule::Bool _1abdeaab8_checkValidity(_1abdea39d_assignTypeChecker* _self_);
inline jule::Bool _1abdead4e_checkConst(_1abdea39d_assignTypeChecker* _self_);
inline jule::Bool _1abdeb0d5_checkCompatibility(_1abdea39d_assignTypeChecker* _self_);
inline jule::Bool _1abdeb36b_check(_1abdea39d_assignTypeChecker* _self_);
inline jule::Bool _1b13666b1_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k);
inline jule::Bool _1b1366062_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k);
inline jule::Bool _1b13681b8_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k);
inline jule::Bool _1b13707a8_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k);
inline jule::Bool _1abdec669_annotateConstraintMap(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _37745_k);
inline jule::Bool _1abdec9aa_annotateConstraintTup(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _39245_k);
inline jule::Bool _1abdecceb_annotateConstraintFn(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _40944_k);
inline jule::Bool _1abded13c_annotateConstraintIdent(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _43047_k);
inline jule::Bool _1abded47d_annotateConstraint(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _45942_k);
inline void _1abded7e1_pushGeneric(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _48435_k, jule::I32 _48449_i);
inline jule::Bool _1abdedb32_annotatePrim(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _49943_k);
inline jule::Bool _1abdede73_annotateArr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _50342_k);
inline jule::Bool _1abdee2b4_annotateSlc(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _51342_k);
inline jule::Bool _1abdee6b0_checkMapKey(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _52341_k, jule::Ptr<_1abe42d30_TypeKind>* _52361_ck);
inline jule::Bool _1abdeea01_annotateMap(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _53142_k);
inline jule::Bool _1abdeed42_annotateFn(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _54141_k);
inline jule::Bool _1abe00183_annotatePtr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _57042_k);
inline jule::Bool _1abe004c4_annotateSptr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _58043_k);
inline jule::Bool _1abe00815_annotateStruct(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _59045_k);
inline jule::Bool _1abe00b56_annotateAny(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _61242_k);
inline jule::Bool _1abe00e97_annotateKind(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _63343_k);
inline jule::Bool _1abe0122d_annotate(_1abdebc73_dynamicTypeAnnotation* _self_);
inline void _1abe02141_pushErrToken(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd0a38a_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args);
inline void _1abe024a4_pushErr(_1abe01ad0_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args);
inline jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _1abe0273a_getParams(_1abe01ad0_fnCallArgChecker* _self_);
inline jule::Bool _1abe02a7b_checkCounts(_1abe01ad0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>>* _69531_params);
inline jule::Bool _1abe03032_checkArg(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _72732_p, jule::Ptr<_1abe11936_Data>* _72751_arg, jule::Ptr<_1abd0a38a_Token>* _72768_errorToken);
inline jule::Bool _1abe0342d_push(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _75628_p, jule::Ptr<_1abd24b79_Expr> _75646_arg);
inline jule::Bool _1abe03829_pushVariadic(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _78036_p, jule::I32 _78054_i);
inline jule::Bool _1abe03b6a_checkArgs(_1abe01ad0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>>* _86133_params);
inline jule::Bool _1abe03e01_checkDynamicTypeAnnotation(_1abe01ad0_fnCallArgChecker* _self_);
inline jule::Bool _1abe04187_check(_1abe01ad0_fnCallArgChecker* _self_);
inline void _1abe05067_pushErr(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd0a38a_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args);
inline void _1abe053ca_pushSuggestion(_1abe04a17_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args);
inline void _1abe057e8_pushMatch(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd438ac_FieldIns>* _95033_f, jule::Ptr<_1abe11936_Data>* _95052_d, jule::Ptr<_1abd0a38a_Token>* _95067_errorToken);
inline void _1abe05b5b_checkPair(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd29398_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _96960_exprs);
inline jule::Bool _1abe05e9c_readyExprs(_1abe04a17_structLitChecker* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _100834_exprs);
inline void _1abe06255_check(_1abe04a17_structLitChecker* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _103229_exprs);
inline jule::Ptr<_1abda8d2e_Var> _1abe06cd3_buildVar(_1abe067e9_rangeChecker* _self_, jule::Ptr<_1abd336b0_VarDecl>* _110828_decl);
inline void _1abe06ed1_setSizeKey(_1abe067e9_rangeChecker* _self_);
inline void _1abe073ee_checkRangeExprValidity(_1abe067e9_rangeChecker* _self_, jule::Ptr<_1abe11936_Data>* _112746_d, jule::Ptr<_1abda8d2e_Var>* _112757_key, jule::Ptr<_1abe42d30_TypeKind>* _112773_k);
inline void _1abe075ec_checkSlice(_1abe067e9_rangeChecker* _self_);
inline void _1abe077ea_checkArray(_1abe067e9_rangeChecker* _self_);
inline void _1abe079e8_checkMapKeyA(_1abe067e9_rangeChecker* _self_);
inline void _1abe07be6_checkMapKeyB(_1abe067e9_rangeChecker* _self_);
inline void _1abe07de4_checkMap(_1abe067e9_rangeChecker* _self_);
inline void _1abe080e2_checkStr(_1abe067e9_rangeChecker* _self_);
inline void _1abe082e0_checkComptime(_1abe067e9_rangeChecker* _self_);
inline jule::Bool _1abe08576_checkComptimeRange(_1abe067e9_rangeChecker* _self_);
inline jule::Bool _1abe0880c_check(_1abe067e9_rangeChecker* _self_);
inline void _1abe09489_prepareTypes(_1abe0905a_retTypeChecker* _self_);
inline void _1abe09742_prepareExprs(_1abe0905a_retTypeChecker* _self_, jule::Ptr<_1abd24b79_Expr>* _128536_e);
inline void _1abe09940_checkExprs(_1abe0905a_retTypeChecker* _self_);
inline jule::Bool _1abe09bc6_tryFuncMultiRetForward(_1abe0905a_retTypeChecker* _self_);
inline jule::Bool _1abe0a017_check(_1abe0905a_retTypeChecker* _self_, jule::Ptr<_1abd24b79_Expr>* _138429_e);
inline jule::Ptr<_1ab67760e_ImportInfo> _1abe0baa7_SelectPackage(_1abe0b5bd_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _2732_selector);
inline jule::Ptr<_1abda8d2e_Var> _1abe0bea3_FindVar(_1abe0b5bd_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded);
inline jule::Ptr<_1abe4203d_TypeAlias> _1abe0c39e_FindTypeAlias(_1abe0b5bd_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded);
inline jule::Ptr<_1abd416ce_Struct> _1abe0c79a_FindStruct(_1abe0b5bd_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded);
inline jule::Ptr<_1abd566a0_Fn> _1abe0cb96_FindFn(_1abe0b5bd_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded);
inline jule::Ptr<_1abd69a59_Trait> _1abe0ced7_FindTrait(_1abe0b5bd_SymbolTable* _self_, jule::Str _7528_ident);
inline jule::Ptr<_1abd6c265_Enum> _1abe0d328_FindEnum(_1abe0b5bd_SymbolTable* _self_, jule::Str _8627_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1abe0d669_FindTypeEnum(_1abe0b5bd_SymbolTable* _self_, jule::Str _9731_ident);
inline jule::Ptr<_1abda8d2e_Var> _1abe0dc85_findVar(_1abe0b5bd_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse);
inline jule::Ptr<_1abe4203d_TypeAlias> _1abe0e23b_findTypeAlias(_1abe0b5bd_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse);
inline jule::Any _1abe0e637_defByIdent(_1abe0b5bd_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded);
inline jule::Bool _1abe0eadd_isDuplicatedIdent(_1abe0b5bd_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded);
inline jule::Bool _1abe11d21_IsNil(_1abe11936_Data* _self_);
inline jule::Bool _1abe120a7_IsVoid(_1abe11936_Data* _self_);
inline jule::Bool _1abe1233d_IsConst(_1abe11936_Data* _self_);
inline jule::Bool _1abe1267e_GoodOperand(_1abe11936_Data* _self_, jule::Ptr<_1abe11936_Data>* _10531_other);
inline void _1abe13bad_pushErr(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args);
inline void _1abe14021_pushSuggestion(_1abe1365d_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args);
inline void _1abe1421e_allowBuiltin(_1abe1365d_Eval* _self_);
inline void _1abe1441c_disallowBuiltin(_1abe1365d_Eval* _self_);
inline jule::Bool _1abe146a3_isUnsafe(_1abe1365d_Eval* _self_);
inline jule::Bool _1abe14939_isGlobal(_1abe1365d_Eval* _self_);
inline jule::Bool _1abe14c47_applyNumericPrefix(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _16842_d);
inline jule::Ptr<_1abe11936_Data> _1abe15088_litStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _20322_l);
inline jule::Ptr<_1abe11936_Data> _1abe153c9_litRune(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _22023_l);
inline jule::Ptr<_1abe11936_Data> _1abe1571a_litFloat(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _23924_l);
inline jule::Ptr<_1abe11936_Data> _1abe15a5b_litInt(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _25126_l);
inline jule::Ptr<_1abe11936_Data> _1abe15d9c_litNum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _30626_l);
inline jule::Ptr<_1abe11936_Data> _1abe161dd_evalLit(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr> _31526_lit);
inline jule::Any _1abe1652e_findBuiltins(_1abe1365d_Eval* _self_, jule::Str* _32832_ident);
inline jule::Any _1abe1692a_getDef(_1abe1365d_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded);
inline jule::Ptr<_1abd5c860_ReferenceStack> _1abe16bb1_getOwnerRefers(_1abe1365d_Eval* _self_);
inline void _1b15a7c10_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _41040_ref);
inline void _1b15bdb6b_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _41040_ref);
inline void _1ae7a3803_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns>* _41040_ref);
inline jule::Ptr<_1abe11936_Data> _1abe172aa__evalEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _41728_enm);
inline jule::Ptr<_1abe11936_Data> _1abe176a6_evalEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _42631_enm, jule::Ptr<_1abd0a38a_Token> _42643_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe179e7__evalTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _43532_enm);
inline jule::Ptr<_1abe11936_Data> _1abe17de3_evalTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _44435_enm, jule::Ptr<_1abd0a38a_Token> _44451_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe18234__evalStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _45330_s);
inline jule::Ptr<_1abe11936_Data> _1abe18630_evalStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _46733_s, jule::Ptr<_1abd0a38a_Token> _46748_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe18971_evalFnIns(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns> _47728_f);
inline void _1abe18cd4_checkDeprecated(_1abe1365d_Eval* _self_, jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _48639_directives, jule::Ptr<_1abd0a38a_Token> _48670_tok);
inline jule::Ptr<_1abe11936_Data> _1abe191d0_evalFn(_1abe1365d_Eval* _self_, jule::Ptr<_1abd566a0_Fn> _50229_f, jule::Ptr<_1abd0a38a_Token> _50237_errorToken);
inline void _1abe195ed_pushIllegalCycleError(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _51641_v1, jule::Ptr<_1abda8d2e_Var>* _51652_v2, _209e0d4d9_StrBuilder* _51667_message);
inline jule::Bool _1abe199e9_checkCrossCycle(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _52635_v, _209e0d4d9_StrBuilder* _52649_message);
inline jule::Bool _1abe19de5_checkIllegalCycles(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _54342_v, jule::Ptr<_1abd0a38a_Token> _54351_declToken);
inline jule::Ptr<_1abe11936_Data> _1abe1a2e1_evalVar(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var> _57130_v, jule::Ptr<_1abd0a38a_Token> _57139_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe1a6dc_evalTypeAlias(_1abe1365d_Eval* _self_, jule::Ptr<_1abe4203d_TypeAlias> _67036_ta, jule::Ptr<_1abd0a38a_Token> _67052_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe1aad8_evalDef(_1abe1365d_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1abd0a38a_Token> _70641_ident);
inline jule::Ptr<_1abe11936_Data> _1abe1ae29_evalIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd26494_IdentExpr> _73028_ident);
inline jule::Ptr<_1abe11936_Data> _1abe1b26a_evalUnary(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd26c36_UnaryExpr> _73533_u);
inline jule::Ptr<_1abe11936_Data> _1abe1b5ab_evalVariadic(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27110_VariadicExpr> _74036_v);
inline jule::Ptr<_1abe11936_Data> _1abe1b8ec_evalUnsafe(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd25edd_UnsafeExpr> _76234_u);
inline jule::Ptr<_1abe11936_Data> _1abe1bc3d_evalArr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _77031_s);
inline jule::Ptr<_1abe11936_Data> _1abe1c1e4_evalExpSlc(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _84734_s, jule::Ptr<_1abe42d30_TypeKind> _84753_t, jule::Any _84771_first);
inline jule::Ptr<_1abe11936_Data> _1abe1c535_evalSliceExpr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _88537_s);
inline void _1abe1c898_checkIntegerIndexingByData(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _92050_d, jule::Ptr<_1abd0a38a_Token> _92064_token);
inline void _1abe1ccb6_indexingPtr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _93235_d, jule::Ptr<_1abe11936_Data>* _93250_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _93269_i);
inline void _1abe1d1d4_indexingArr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _94835_d, jule::Ptr<_1abe11936_Data>* _94850_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _94869_i);
inline void _1abe1d602_indexingSlc(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _95835_d, jule::Ptr<_1abe11936_Data>* _95850_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _95869_i);
inline void _1abe1da20_indexingMap(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _98135_d, jule::Ptr<_1abe11936_Data>* _98150_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _98169_i);
inline void _1abe1de3d_indexingStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _99735_d, jule::Ptr<_1abe11936_Data>* _99750_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _99769_i);
inline void _1abe1e35b_toIndexing(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _102634_d, jule::Ptr<_1abe11936_Data>* _102649_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _102668_i);
inline jule::Bool _1abe1e812_pushGenericsFromExprSubIdent(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27c8c_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _105214_generics, jule::Ptr<_1abd24b79_Expr>* _105242_expr);
inline jule::Bool _1abe1ec0d_pushGenericsFromData(jule::Ptr<_1abe1365d_Eval> _self_, jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _106245_generics, jule::Ptr<_1abd24b79_Expr>* _106273_expr);
inline void _1abe20071_evalIdentDeclFromIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe11936_Data>* _113250_d, jule::Ptr<_1abd2bb3c_IndexingExpr>* _113265_i);
inline jule::Bool _1abe20527_checkGenericFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd59681_FnIns>* _117539_f, jule::Ptr<_1abd0a38a_Token>* _117555_et, jule::Any* _117572_model);
inline void _1abe2088a_evalFnGenericFromIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe11936_Data>* _120450_d, jule::Ptr<_1abd2bb3c_IndexingExpr>* _120465_i);
inline jule::Ptr<_1abe11936_Data> _1abe20bcb_evalIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2bb3c_IndexingExpr> _124336_i);
inline __jule_tuple_x_1abe11936_Data__jule_tuple_x_1abe11936_Data _1abe2101c_evalSlicingExprs(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2c29c_SlicingExpr>* _129741_s);
inline void _1abe212c5_slicingArr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _133330_d);
inline void _1abe216e3_slicingStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _134830_d, jule::Ptr<_1abe11936_Data>* _134841_l, jule::Ptr<_1abe11936_Data>* _134852_r);
inline void _1abe21bbb_checkSlicing(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _138636_d, jule::Ptr<_1abe11936_Data>* _138647_l, jule::Ptr<_1abe11936_Data>* _138658_r, jule::Ptr<_1abd2c29c_SlicingExpr>* _138669_s);
inline jule::Ptr<_1abe11936_Data> _1abe2200c_evalSlicing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2c29c_SlicingExpr> _140535_s);
inline void _1abe2242a_castPtr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _144230_t, jule::Ptr<_1abe11936_Data> _144248_d, jule::Ptr<_1abd0a38a_Token> _144258_errorToken);
inline void _1abe22848_castStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _146433_t, jule::Ptr<_1abe11936_Data> _146451_d, jule::Ptr<_1abd0a38a_Token> _146461_errorToken);
inline void _1abe22c66_castRef(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _148130_t, jule::Ptr<_1abe11936_Data> _148148_d, jule::Ptr<_1abd0a38a_Token> _148158_errorToken);
inline void _1abe23184_castSlc(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _150430_t, jule::Ptr<_1abe11936_Data> _150448_d, jule::Ptr<_1abd0a38a_Token> _150458_errorToken);
inline void _1abe234e7_castStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _155930_d, jule::Ptr<_1abd0a38a_Token> _155940_errorToken);
inline void _1abe23915_castInt(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _160630_t, jule::Ptr<_1abe11936_Data> _160648_d, jule::Ptr<_1abd0a38a_Token> _160658_errorToken);
inline void _1abe23d33_castNum(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _165230_t, jule::Ptr<_1abe11936_Data> _165248_d, jule::Ptr<_1abd0a38a_Token> _165258_errorToken);
inline void _1abe24251_castPrim(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _168331_t, jule::Ptr<_1abe11936_Data> _168349_d, jule::Ptr<_1abd0a38a_Token> _168359_errorToken);
inline void _1abe245b4_castConstant(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _170136_t, jule::Ptr<_1abe11936_Data>* _170155_d);
inline void _1abe249d2_castTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _171036_t, jule::Ptr<_1abe11936_Data>* _171055_d, jule::Ptr<_1abd0a38a_Token>* _171070_errorToken);
inline void _1abe24e00_castTypeEnumT(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _172037_t, jule::Ptr<_1abe11936_Data>* _172056_d, jule::Ptr<_1abd0a38a_Token>* _172071_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe253a6_evalCastByTypeNData(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _173042_t, jule::Ptr<_1abe11936_Data> _173060_d, jule::Ptr<_1abd0a38a_Token> _173074_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe2585c_evalCastT(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe42d30_TypeKind>* _180334_t, jule::Ptr<_1abd24b79_Expr>* _180353_e, jule::Ptr<_1abd0a38a_Token>* _180368_et);
inline jule::Ptr<_1abe11936_Data> _1abe25b9d_evalCast(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd274d9_CastExpr> _182032_c);
inline jule::Ptr<_1abe11936_Data> _1abe25ede_evalNsSelection(_1abe1365d_Eval* _self_, jule::Ptr<_1abd278b3_NsSelectionExpr> _182934_s);
inline jule::Ptr<_1abe11936_Data> _1abe26495_evalStructLitExplicit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd4445c_StructIns> _185545_s, jule::Slice<jule::Ptr<_1abd24b79_Expr>> _185613_exprs, jule::Ptr<_1abd0a38a_Token> _185633_errorToken);
inline jule::Ptr<_1abe11936_Data> _1abe267d6_evalStructLit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd29bc3_StructLit> _189337_lit);
inline _1abe54bdd_typeChecker _1abe26a6c_typeChecker(_1abe1365d_Eval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe26dad_evalType(_1abe1365d_Eval* _self_, jule::Ptr<_1abd20845_TypeDecl> _192531_t);
inline void _1abe27221_callTypeFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _193835_fc, jule::Ptr<_1abe11936_Data>* _193857_d);
inline void _1abe27584_callBuiltinFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _196438_fc, jule::Ptr<_1abe11936_Data>* _196460_d);
inline void _1abe278e7_checkFnOfConcurrentCall(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _197643_f, jule::Ptr<_1abd0a38a_Token> _197654_errorToken);
inline void _1abe27d15_processExceptionalHandler(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _199549_f, jule::Ptr<_1abd288a3_FnCallExpr>* _199565_fc, jule::Ptr<_1abe11936_Data>* _199587_d);
inline void _1abe28178_callFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _202231_fc, jule::Ptr<_1abe11936_Data>* _202253_d);
inline jule::Ptr<_1abe11936_Data> _1abe284b9_evalFnCall(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr> _217434_fc);
inline jule::Ptr<_1abe11936_Data> _1abe288b5_evalEnumStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _220737_enm, jule::Ptr<_1abd0a38a_Token> _220753_ident);
inline jule::Ptr<_1abe11936_Data> _1abe28cb1_evalTypeEnumStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _221541_enm, jule::Ptr<_1abd0a38a_Token> _221557_ident);
inline jule::Ptr<_1abe11936_Data> _1abe291ac_evalStructStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _223839_s, jule::Ptr<_1abd0a38a_Token> _223854_ident);
inline jule::Ptr<_1abe11936_Data> _1abe29663_evalTraitSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _227340_d, jule::Ptr<_1abd69a59_Trait> _227354_trt, jule::Ptr<_1abd0a38a_Token> _227371_ident);
inline jule::Ptr<_1abe11936_Data> _1abe29bc4_evalStructSubIdentField(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _229347_d, jule::Ptr<_1abd4445c_StructIns>* _229362_s, jule::Ptr<_1abd0a38a_Token>* _229382_tok, jule::Ptr<_1abd438ac_FieldIns>* _2293100_f);
inline jule::Ptr<_1abe11936_Data> _1abe2a235_evalStructSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _231641_d, jule::Ptr<_1abd4445c_StructIns> _231655_s, jule::Ptr<_1abd27c8c_SubIdentExpr> _231674_si, jule::Bool _231693_ref);
inline jule::Ptr<_1abe11936_Data> _1abe2a576_evalIntTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _235736_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2a8b7_evalUintTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _238437_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2ac08_evalI8TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _240235_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2b049_evalI16TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _243136_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2b38a_evalI32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _246036_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2b6cb_evalI64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _248936_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2ba1c_evalU8TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _251835_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2bd5d_evalU16TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _253736_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2c19e_evalU32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _255636_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2c4e0_evalU64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _257536_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2c831_evalF32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _259436_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2cb72_evalF64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _263336_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2d06d_evalPrimStatic(_1abe1365d_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1abd0a38a_Token> _267244_ident);
inline jule::Ptr<_1abe11936_Data> _1abe2d469_evalTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _270437_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _270451_si);
inline jule::Ptr<_1abe11936_Data> _1b1673d64_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd81400_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b16784d9_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd7259a_comptimeStructField>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b167cae8_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd78b12_comptimeEnumField>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b168224b_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd7b5a4_comptimeParam>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b1686ad0_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd75856_comptimeStatic>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b168b1de_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1ab64460e_comptimeValue>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline jule::Ptr<_1abe11936_Data> _1b16907ed_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1ab648558_comptimeFile>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si);
inline __jule_tuple_x_1abe11936_Data__jule_tuple_bool _1abe2dd1b_tryComptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _272846_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _272860_si);
inline jule::Ptr<_1abe11936_Data> _1abe2e217_evalObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _275638_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _275652_si);
inline jule::Ptr<_1abe11936_Data> _1abe2e558_evalSubIdent(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27c8c_SubIdentExpr> _280036_si);
inline jule::Ptr<_1abe11936_Data> _1abe2e899_evalTuple(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2576d_TupleExpr> _281433_tup);
inline jule::Ptr<_1abe11936_Data> _1abe2ec95_evalMap(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe5159c_Map> _284331_m, jule::Ptr<_1abd2a179_BraceLit> _284344_lit);
inline jule::Ptr<_1abe11936_Data> _1abe300d6_evalBraceLit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2a179_BraceLit> _289236_lit);
inline jule::Ptr<_1abe11936_Data> _1abe30427_evalAnonFunc(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd32505_FnDecl> _290736_decl);
inline jule::Ptr<_1abe11936_Data> _1abe30768_evalBinary(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd28243_BinaryExpr> _294534_op);
inline jule::Ptr<_1abe11936_Data> _1abe30aa9_evalExprKind(jule::Ptr<_1abe1365d_Eval> _self_, jule::Any _296036_kind);
inline jule::Ptr<_1abe11936_Data> _1abe30dea_eval1(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _300829_expr);
inline jule::Ptr<_1abe11936_Data> _1abe3123b_eval(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _303628_expr);
inline jule::Ptr<_1abe11936_Data> _1abe3157c_evalExpr1(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _305133_expr);
inline jule::Ptr<_1abe11936_Data> _1abe318bd_evalExpr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _306732_expr);
inline _1abe31d85_unaryEval static__1abe322c5_new(jule::Ptr<_1abe1365d_Eval> _308823_e);
inline void _1abe324c3_minus(_1abe31d85_unaryEval* _self_);
inline void _1abe326c1_plus(_1abe31d85_unaryEval* _self_);
inline void _1abe328be_caret(_1abe31d85_unaryEval* _self_);
inline void _1abe32abc_excl(_1abe31d85_unaryEval* _self_);
inline void _1abe32cba_star(_1abe31d85_unaryEval* _self_);
inline void _1abe32eb8_amper(_1abe31d85_unaryEval* _self_);
inline void _1abe331b6_typeDecl(_1abe31d85_unaryEval* _self_);
inline void _1abe333b4_evalData(_1abe31d85_unaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe33705_eval(_1abe31d85_unaryEval* _self_, jule::Ptr<_1abd26c36_UnaryExpr> _334827_u);
inline _1abe33d21_binaryEval static__1abe343c6_newPlain(jule::Ptr<_1abe1365d_Eval> _339628_e);
inline _1abe33d21_binaryEval static__1abe3474a_new(jule::Ptr<_1abe1365d_Eval> _340223_e, jule::Ptr<_1abd0a38a_Token> _340237_op);
inline jule::Bool _1abe349d1_checkTypeCompatibility(_1abe33d21_binaryEval* _self_);
inline jule::Bool _1abe34c67_checkStructCommonOperatorCompatibility(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe34eed_evalComptimeTypeInfo(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe35284_evalNil(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe3551a_evalEnum(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe357a1_evalTypeEnum(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe35a37_evalSptr(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe35cbd_evalPtr(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe36054_evalArr(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe362da_evalSlc(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe36571_evalStruct(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe36807_evalTrait(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe36a8d_evalAny(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe36d24_evalBool(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe370aa_evalStr(_1abe33d21_binaryEval* _self_);
inline void _1abe372a8_setTypeToGreater(_1abe33d21_binaryEval* _self_);
inline void _1abe37561_checkModData(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _382336_d);
inline void _1abe3775e_mod(_1abe33d21_binaryEval* _self_);
inline jule::Bool _1abe37b5a_numbersAreCompatibile(_1abe33d21_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk);
inline jule::Ptr<_1abe11936_Data> _1abe37de1_evalFloat(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe38177_evalInt(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe3840d_evalPrim(_1abe33d21_binaryEval* _self_);
inline void _1abe3860b_checkSpecialCases(_1abe33d21_binaryEval* _self_);
inline jule::Ptr<_1abe11936_Data> _1abe38892_evalOp(_1abe33d21_binaryEval* _self_);
inline void _1abe38b4a_evalConst(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _408333_d);
inline void _1abe38e03_checkData(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _416133_d);
inline void _1abe39101_checkDatas(_1abe33d21_binaryEval* _self_);
inline void _1abe393a9_setModel(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _417332_d);
inline void _1abe39662_postEval(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _420032_d);
inline jule::Ptr<_1abe11936_Data> _1abe39a5d_solveExplicit(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _420537_l, jule::Ptr<_1abe11936_Data>* _420552_r);
inline jule::Ptr<_1abe11936_Data> _1abe39d9e_eval(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abd28243_BinaryExpr>* _422528_op);
inline jule::Str _1abe431e8_Str(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe43539_Equal(jule::Ptr<_1abe42d30_TypeKind> _self_, jule::Ptr<_1abe42d30_TypeKind> _9021_other);
inline jule::Bool _1abe43b77_Binded(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe43e0d_IsNil(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe44194_Void(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe4442a_Comparable(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe446b1_Mutable(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe44947_Ordered(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe44bcd_NilCompatible(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe44e64_PerformsRC(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe451ea_Variadicable(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe4a909_Prim> _1abe45481_Prim(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe4e435_Sptr> _1abe45717_Sptr(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe52bec_Ptr> _1abe4599d_Ptr(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd6c265_Enum> _1abe45c34_Enum(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd6d970_TypeEnum> _1abe45eba_TypeEnum(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe52229_Arr> _1abe46251_Arr(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe4ee08_Slc> _1abe464d7_Slc(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd59681_FnIns> _1abe4676d_Fn(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd4445c_StructIns> _1abe46a04_Struct(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd69a59_Trait> _1abe46c8a_Trait(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe5159c_Map> _1abe47021_Map(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abe509ec_Tuple> _1abe472a7_Tup(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe4753d_comptime(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd7425b_comptimeStructFields> _1abe477c4_comptimeStructFields(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd7259a_comptimeStructField> _1abe47a5a_comptimeStructField(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd79ea9_comptimeEnumFields> _1abe47ce1_comptimeEnumFields(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd78b12_comptimeEnumField> _1abe48077_comptimeEnumField(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd7d73d_comptimeParams> _1abe4830d_comptimeParams(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd7b5a4_comptimeParam> _1abe48594_comptimeParam(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd71ac7_comptimeRange> _1abe4882a_comptimeRange(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd7ed05_comptimeTypeInfos> _1abe48ab1_comptimeTypeInfos(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd81400_comptimeTypeInfo> _1abe48d47_comptimeTypeInfo(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd77517_comptimeStatics> _1abe490cd_comptimeStatics(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1abd75856_comptimeStatic> _1abe49364_comptimeStatic(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1ab64460e_comptimeValue> _1abe495ea_comptimeValue(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1ab648558_comptimeFile> _1abe49881_comptimeFile(_1abe42d30_TypeKind* _self_);
inline jule::Ptr<_1ab646e5d_comptimeFiles> _1abe49b17_comptimeFiles(_1abe42d30_TypeKind* _self_);
inline jule::Bool _1abe4a376_checked(_1abe4a002_TypeSymbol* _self_);
inline jule::Str _1abe4ac4a_Str(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4b08b_Equal(jule::Ptr<_1abe4a909_Prim> _self_, jule::Ptr<_1abe42d30_TypeKind> _50821_other);
inline jule::Bool _1abe4b531_IsConstraint(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4b7b7_IsI8(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4ba4d_IsI16(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4bcd4_IsI32(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4c06a_IsI64(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4c301_IsU8(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4c587_IsU16(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4c81d_IsU32(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4caa4_IsU64(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4cd3a_IsF32(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4d0c1_IsF64(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4d357_IsInt(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4d5dd_IsUint(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4d874_IsUintptr(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4db0a_IsBool(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4dd91_IsStr(_1abe4a909_Prim* _self_);
inline jule::Bool _1abe4e127_IsAny(_1abe4a909_Prim* _self_);
inline jule::Str _1abe4e7a9_Str(_1abe4e435_Sptr* _self_);
inline jule::Bool _1abe4eaea_Equal(jule::Ptr<_1abe4e435_Sptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _58521_other);
inline jule::Str _1abe5038c_Str(_1abe4ee08_Slc* _self_);
inline jule::Bool _1abe506cd_Equal(jule::Ptr<_1abe4ee08_Slc> _self_, jule::Ptr<_1abe42d30_TypeKind> _60421_other);
inline jule::Str _1abe50d71_Str(_1abe509ec_Tuple* _self_);
inline jule::Bool _1abe511b2_Equal(jule::Ptr<_1abe509ec_Tuple> _self_, jule::Ptr<_1abe42d30_TypeKind> _63321_other);
inline jule::Str _1abe51921_Str(_1abe5159c_Map* _self_);
inline jule::Bool _1abe51c62_Equal(jule::Ptr<_1abe5159c_Map> _self_, jule::Ptr<_1abe42d30_TypeKind> _67021_other);
inline jule::Str _1abe5259d_Str(_1abe52229_Arr* _self_);
inline jule::Bool _1abe528de_Equal(jule::Ptr<_1abe52229_Arr> _self_, jule::Ptr<_1abe42d30_TypeKind> _69821_other);
inline jule::Str _1abe53071_Str(_1abe52bec_Ptr* _self_);
inline jule::Bool _1abe533b2_Equal(jule::Ptr<_1abe52bec_Ptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _72221_other);
inline jule::Bool _1abe53736_IsUnsafe(_1abe52bec_Ptr* _self_);
inline void _1abe5542a_pushErr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd0a38a_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args);
inline void _1abe55628_allowBuiltin(_1abe54bdd_typeChecker* _self_);
inline void _1abe55826_disallowBuiltin(_1abe54bdd_typeChecker* _self_);
inline void _1b17bd4b9_pushReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd4445c_StructIns>* _82440_t);
inline void _1b17c0db2_pushReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd69a59_Trait>* _82440_t);
inline void _1abe55d87_pushReferenceByKind(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _83443_k);
inline void _1abe562a5_pushCycleError(_1abe54bdd_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _209e0d4d9_StrBuilder* _84556_message);
inline jule::Bool _1abe566a1_checkCrossCycle(_1abe54bdd_typeChecker* _self_, jule::Any _86730_decl, _209e0d4d9_StrBuilder* _86746_message);
inline jule::Bool _1abe56a9c_checkIllegalCycles(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl);
inline jule::Trait _1abe56e98_fromTypeAlias(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _95133_decl, jule::Ptr<_1abe4203d_TypeAlias>* _95160_ta);
inline jule::Ptr<_1abd6c265_Enum> _1abe57394_fromEnum(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _102528_decl, jule::Ptr<_1abd6c265_Enum>* _102555_e);
inline jule::Ptr<_1abd6d970_TypeEnum> _1abe57790_fromTypeEnum(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _103732_decl, jule::Ptr<_1abd6d970_TypeEnum>* _103759_e);
inline jule::Ptr<_1abd69a59_Trait> _1abe57b8b_fromTrait(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _104929_decl, jule::Ptr<_1abd69a59_Trait>* _104956_t);
inline jule::Bool _1abe58087_checkStructIns(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd4445c_StructIns>* _106238_ins, jule::Ptr<_1abd0a38a_Token>* _106260_errorToken);
inline void _1abe58340_appendUsedStructReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd416ce_Struct>* _108349_s);
inline jule::Ptr<_1abd4445c_StructIns> _1abe5873b_buildStructInstance(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _109643_decl, jule::Ptr<_1abd416ce_Struct>* _109670_s);
inline jule::Ptr<_1abd4445c_StructIns> _1abe58b37_fromStruct(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _114434_decl, jule::Ptr<_1abd416ce_Struct>* _114461_s);
inline jule::Trait _1abe58e78_getDef(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _120230_decl);
inline jule::Trait _1abe592b9_buildIdent(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl> _126333_decl);
inline jule::Trait _1abe5960a_buildSubIdent(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd21219_SubIdentTypeDecl> _126736_decl);
inline jule::Ptr<_1abe4e435_Sptr> _1abe5994b_buildSptrFromType(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _130141_elem);
inline jule::Ptr<_1abe4e435_Sptr> _1abe59c8c_buildSptr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd218e0_SptrTypeDecl> _132132_decl);
inline jule::Ptr<_1abe52bec_Ptr> _1abe5a0cd_buildPtrFromType(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _133040_elem);
inline jule::Ptr<_1abe52bec_Ptr> _1abe5a41e_buildPtr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd2236e_PtrTypeDecl> _134531_decl);
inline jule::Ptr<_1abe4ee08_Slc> _1abe5a760_buildSlc(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd21c75_SlcTypeDecl> _136231_decl);
inline jule::Ptr<_1abe52229_Arr> _1abe5aaa1_buildArr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd22b11_ArrTypeDecl> _138331_decl);
inline jule::Ptr<_1abe5159c_Map> _1abe5ade2_buildMap(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd2335e_MapTypeDecl> _143231_decl);
inline jule::Ptr<_1abe509ec_Tuple> _1abe5b233_buildTuple(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd22072_TupleTypeDecl> _145633_decl);
inline jule::Bool _1abe5b574_checkFuncTypes(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd59681_FnIns>* _146938_f);
inline jule::Ptr<_1abd59681_FnIns> _1abe5b8b5_buildFunc(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd32505_FnDecl> _148732_decl);
inline jule::Trait _1abe5bc06_buildByNamespace(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd215e3_NamespaceTypeDecl> _151739_decl);
inline jule::Ptr<_1abe42d30_TypeKind> _1abe5c047_build(_1abe54bdd_typeChecker* _self_, jule::Any* _154129_declKind);
inline jule::Ptr<_1abe42d30_TypeKind> _1abe5c388_checkDecl(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20845_TypeDecl>* _162933_decl);
inline jule::Bool static__1abe5ccd4_prim(jule::Str* _165621_ident, jule::Ptr<_1abe4a909_Prim> _165633_t);
inline jule::Bool static__1abe5d158_exist(jule::Str* _166022_ident, jule::Ptr<_1abe42d30_TypeKind>* _166039_k);
inline void _1ac8e3b10_stop(_1ac8e348e_scopeParser* _self_);
inline jule::Bool _1ac8e3d96_stopped(_1ac8e348e_scopeParser* _self_);
inline jule::Bool _1ac8e412c_finished(_1ac8e348e_scopeParser* _self_);
inline jule::Bool _1ac8e43b3_isLastSt(_1ac8e348e_scopeParser* _self_);
inline void _1ac8e4726_pushErr(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd0a38a_Token> _18826_token, jule::Str _18841_fmt);
inline void _1ac8e4a89_pushSuggestion(_1ac8e348e_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args);
inline void _1ac8e4d42_insertAsNext(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _19736_tokens);
inline jule::Ptr<_1ac8e2aed_stmt> _1ac8e50c8_next(_1ac8e348e_scopeParser* _self_);
inline jule::Ptr<_1abd30866_ScopeTree> _1ac8e54c4_buildScope(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _20734_tokens, jule::Ptr<_1abd0a38a_Token> _20756_end);
inline jule::Ptr<_1abd336b0_VarDecl> _1ac8e5815_buildVarSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _21834_tokens);
inline jule::Ptr<_1abd33a89_RetSt> _1ac8e5b56_buildRetSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _22433_tokens);
inline jule::Ptr<_1abd34309_Iter> _1ac8e5e97_buildWhileNextIter(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _23542_s);
inline jule::Ptr<_1abd34b34_WhileKind> _1ac8e62d8_buildWhileIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28042_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac8e6629_getRangeKindKeysTokens(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28646_toks);
inline jule::Ptr<_1abd336b0_VarDecl> _1ac8e696a_buildRangeKindKey(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _29241_tokens);
inline jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _1ac8e6cab_buildRangeKindKeys(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _31842_parts);
inline void _1ac8e711e_setupRangeKindKeysPlain(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _32669_tokens);
inline void _1ac8e7482_setupRangeKindKeysExplicit(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _34172_tokens);
inline void _1ac8e77e5_setupRangeKindKeys(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35064_tokens);
inline jule::Ptr<_1abd3553b_RangeKind> _1ac8e7c9b_buildRangeIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35914_exprTokens, jule::Ptr<_1abd0a38a_Token>* _35941_inToken);
inline jule::Any _1ac8e8197_buildCommonIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37443_tokens, jule::Ptr<_1abd0a38a_Token>* _37462_err_tok);
inline jule::Ptr<_1abd34309_Iter> _1ac8e84d8_buildCommonIter(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _40138_tokens);
inline jule::Ptr<_1abd34309_Iter> _1ac8e8829_buildIterSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _43135_st);
inline jule::Ptr<_1abd35915_BreakSt> _1ac8e8b6a_buildBreakSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _43836_tokens);
inline jule::Ptr<_1abd35cde_ContSt> _1ac8e8eab_buildContSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _45635_tokens);
inline jule::Ptr<_1abd36295_If> _1ac8e92ec_buildIf(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _47431_tokens);
inline jule::Ptr<_1abd3666e_Else> _1ac8e963d_buildElse(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _50733_tokens);
inline jule::Ptr<_1abd36b25_Conditional> _1ac8e997e_buildIfElseChain(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _53139_tokens);
inline jule::Ptr<_1abd24b79_Expr> _1ac8e9cc0_buildCoCallSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _55436_tokens);
inline jule::Ptr<_1abd2d303_GotoSt> _1ac8ea111_buildGotoSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _57035_tokens);
inline jule::Ptr<_1abd2d600_FallSt> _1ac8ea452_buildFallSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _59035_tokens);
inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac8ea793_buildTypeAliasSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _60040_tokens);
inline void _1ac8eac6b_pushCaseExpr(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _60635_tokens, jule::Ptr<_1abd0a38a_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _60731_exprs);
inline __jule_tuple_sx_1abd24b79_Expr__jule_tuple_bool _1ac8eb222_buildCaseExprs(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _62938_tokens, jule::Ptr<_1abd0a38a_Token>* _62961_colon, jule::Bool _62976_typeMatch);
inline jule::Ptr<_1abd30866_ScopeTree> _1ac8eb563_buildCaseScope(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _67138_tokens);
inline __jule_tuple_x_1abd37818_Case__jule_tuple_bool _1ac8eb95e_buildCase(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _69833_tokens, jule::Bool _69851_typeMatch);
inline __jule_tuple_sx_1abd37818_Case__jule_tuple_x_1abd3666e_Else _1ac8ebd5a_buildCases(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _71333_tokens, jule::Bool _71351_typeMatch);
inline jule::Ptr<_1abd38132_MatchCase> _1ac8ec19b_buildMatchCase(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _74737_tokens);
inline jule::Ptr<_1abd30866_ScopeTree> _1ac8ec4dc_buildScopeSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _78035_tokens);
inline jule::Ptr<_1abd2ce29_LabelSt> _1ac8ec82d_buildLabelSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _82336_tokens);
inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ecb6e_buildIdSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _83833_tokens);
inline jule::Ptr<_1ac90d61e_assignInfo> _1ac8eceb0_buildAssignInfo(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _85239_tokens);
inline jule::Ptr<_1abd2dc60_AssignLeft> _1ac8ed301_buildAssignL(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _89736_tokens);
inline jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> _1ac8ed642_buildAssignLs(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _90837_parts);
inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ed983_buildPlainAssign(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _91740_tokens);
inline jule::Bool _1ac8edd7e_buildDeclAssign1(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _96740_lefts, jule::Ptr<_1abd2e2e3_AssignSt>* _96762_assign);
inline __jule_tuple_x_1abd2e2e3_AssignSt__jule_tuple_bool _1ac8ee1c0_buildDeclAssign(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _101238_tokens);
inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ee511_buildAssignSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _104637_tokens);
inline jule::Ptr<_1abd2554d_UseExpr> _1ac8ee852_buildUseExpr(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _105936_tokens);
inline jule::Any _1ac8eeb93_buildConstSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _107236_st);
inline jule::Any _1ac8eeed4_buildSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _109731_st);
inline void _1ac900347_build(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _116129_tokens, jule::Ptr<_1abd30866_ScopeTree>* _116152_s);
inline void _1ac90169a_pushErr(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args);
inline void _1ac901a0d_pushSuggestion(_1ac900db4_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args);
inline jule::Ptr<_1abd2576d_TupleExpr> _1ac901d4e_buildTuple(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _5434_parts);
inline jule::Ptr<_1abd25b14_LitExpr> _1ac902190_buildLit(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _6427_token);
inline jule::Any _1ac902822_buildSingle(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _7534_token);
inline jule::Ptr<_1abd26494_IdentExpr> _1ac902b63_buildBindIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _9238_tokens);
inline jule::Ptr<_1abd26c36_UnaryExpr> _1ac902ea4_buildUnary(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _11133_tokens);
inline jule::Ptr<_1abd27c8c_SubIdentExpr> _1ac9032e5_buildObjSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _13239_tokens);
inline jule::Ptr<_1abd278b3_NsSelectionExpr> _1ac903636_buildNsSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _14739_tokens);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac903977_buildType(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _17233_tokens);
inline jule::Any _1ac903cb8_buildSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _18637_tokens);
inline jule::Ptr<_1abd27110_VariadicExpr> _1ac904109_buildVariadic(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _20836_tokens);
inline jule::Ptr<_1abd24e43_RangeExpr> _1ac90444a_buildBetweenParentheses(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _21746_tokens);
inline jule::Ptr<_1abd274d9_CastExpr> _1ac90478b_tryBuildCast(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _22936_tokens);
inline void _1ac904ba9_pushArg(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _30350_tokens, jule::Ptr<_1abd0a38a_Token> _30368_err_token);
inline jule::Slice<jule::Ptr<_1abd24b79_Expr>> _1ac904eea_buildArgs(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _31232_tokens);
inline jule::Ptr<_1abd288a3_FnCallExpr> _1ac9057e2_buildFnCall(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token>* _37835_token, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37876_args);
inline jule::Any _1ac905b33_buildParenthesesRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _38645_tokens);
inline jule::Ptr<_1abd25edd_UnsafeExpr> _1ac905e74_buildUnsafeExpr(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _40838_tokens);
inline jule::Ptr<_1abd32505_FnDecl> _1ac9062b5_buildAnonFn(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _42335_tokens);
inline jule::Any _1ac906606_buildUnsafe(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _43235_tokens);
inline void _1ac906a24_pushRangeLitPart(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _44239_part, jule::Ptr<_1abd0a38a_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _44334_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac906d65_getBraceRangeLitExprParts(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _45348_tokens);
inline jule::Ptr<_1abd29398_FieldExprPair> _1ac9071a6_buildFieldExprPair(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _49541_tokens);
inline jule::Ptr<_1abd24b79_Expr> _1ac9074e7_buildStructLitExpr(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _50842_tokens);
inline jule::Slice<jule::Ptr<_1abd24b79_Expr>> _1ac907838_buildStructLitExprs(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _52343_tokens);
inline jule::Ptr<_1abd29bc3_StructLit> _1ac907b79_buildTypedStructLiteral(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _53646_tokens);
inline jule::Ptr<_1abd24b79_Expr> _1ac907eba_buildBraceLitPart(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _56041_tokens);
inline jule::Ptr<_1abd2a179_BraceLit> _1ac90830b_buildBraceLit(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _57737_tokens);
inline jule::Any _1ac90864c_buildBraceRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _59639_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac90898d_getEnumerableParts(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _64841_tokens);
inline jule::Ptr<_1abd2b1d0_SliceExpr> _1ac908cce_buildSlice(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _65533_tokens);
inline jule::Ptr<_1abd2bb3c_IndexingExpr> _1ac909285_buildIndexing(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67813_tokens, jule::Ptr<_1abd0a38a_Token> _67835_errorToken);
inline jule::Ptr<_1abd2c29c_SlicingExpr> _1ac9098a1_buildSlicing(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70163_start, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70214_to, jule::Ptr<_1abd0a38a_Token>* _70233_errorToken, jule::Ptr<_1abd0a38a_Token> _70257_end);
inline jule::Any _1ac909be2_buildBracketRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _71740_tokens);
inline jule::Any _1ac90a033_buildExclRight(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _74238_tokens);
inline jule::Any _1ac90a374_buildData(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _76033_tokens);
inline jule::Any _1ac90a770_buildBinary(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _82935_tokens, jule::I32 _82953_i);
inline jule::Any _1ac90aab1_build(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _85429_tokens);
inline jule::Any _1ac90ae02_buildKind(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _86533_tokens);
inline jule::Ptr<_1abd24b79_Expr> _1ac90b243_buildFromTokens(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _87638_tokens);
inline void _1ac911d1a_stop(_1ac911a1d_parser* _self_);
inline jule::Bool _1ac9120a1_stopped(_1ac911a1d_parser* _self_);
inline void _1ac9124be_pushErr(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args);
inline void _1ac912832_pushSuggestion(_1ac911a1d_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args);
inline jule::Ptr<_1abd24b79_Expr> _1ac912b73_buildExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _21734_tokens);
inline jule::Ptr<_1abd1ec62_Directive> _1ac912eb4_buildDirective(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _22137_tokens);
inline void _1ac91326c_pushDirective(_1ac911a1d_parser* _self_, jule::Ptr<_1abd1ec62_Directive> _23636_d);
inline jule::Ptr<_1abd30866_ScopeTree> _1ac913668_buildScope(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _24935_tokens, jule::Ptr<_1abd0a38a_Token> _24957_end);
inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac913b1e__buildType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _25942_tokens, jule::I32* _26013_i, jule::Bool _26022_err);
inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac9140c5_buildType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _27141_tokens, jule::I32* _27213_i, jule::Bool _27222_err);
inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac914416_buildTypeAliasDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28143_tokens);
inline void _1ac914779_buildVarTypeAndExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd336b0_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _32162_tokens);
inline void _1ac914adc_buildVarCommon(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd336b0_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _35456_tokens);
inline void _1ac914e50_buildVarBegin(_1ac911a1d_parser* _self_, jule::Ptr<_1abd336b0_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37055_tokens);
inline jule::Ptr<_1abd336b0_VarDecl> _1ac915291_buildVar(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39832_tokens);
inline jule::Ptr<_1abd2ca50_GenericDecl> _1ac9155d2_buildGeneric(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _41737_tokens);
inline jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _1ac9159cd_buildGenerics(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _45438_tokens, jule::Ptr<_1abd0a38a_Token>* _45457_errorToken);
inline jule::Ptr<_1abd310a3_ParamDecl> _1ac915d1e_buildSelfParam(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _47437_tokens);
inline void _1ac91623c_paramTypeBegin(_1ac911a1d_parser* _self_, jule::Ptr<_1abd310a3_ParamDecl>* _51438_param, jule::I32* _51462_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _51471_tokens);
inline void _1ac9165a0_buildParamType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd310a3_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _52963_tokens);
inline void _1ac916913_buildParamBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd310a3_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _54262_tokens);
inline jule::Ptr<_1abd310a3_ParamDecl> _1ac916c54_buildParam(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _56234_tokens);
inline void _1ac91700c_checkParams(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>>* _60535_params);
inline jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> _1ac917408_buildParams(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _62536_tokens, jule::Bool _62554_method);
inline __jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool _1ac917804_buildMultiRetType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _65542_tokens, jule::I32* _65565_i);
inline __jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool _1ac917c00_buildRetType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _72637_tokens, jule::I32* _72660_i);
inline jule::Ptr<_1abd32505_FnDecl> _1ac9181a6_buildFnPrototype(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _76541_tokens, jule::I32* _76564_i, jule::Bool _76572_method);
inline jule::Ptr<_1abd32505_FnDecl> _1ac91865c_buildFn(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype);
inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac91899d_getUseDeclSelectors(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _87642_tokens);
inline void _1ac918d11_buildBindUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _90157_tokens);
inline jule::Str _1ac919152_useDeclTokstoa(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _91434_tokens);
inline void _1ac9194b5_buildStdUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _92959_tokens);
inline void _1ac919828_buildIdentUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _98761_tokens);
inline void _1ac919b8b_parseUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _103556_tokens);
inline jule::Ptr<_1abd3894b_UseDecl> _1ac91a087_buildUseDecl(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _106935_tokens, jule::Bool _106953_binded);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac91a483_buildTypeEnumItemKind(jule::Ptr<_1ac911a1d_parser> _self_, jule::I32* _108346_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _108359_tokens);
inline jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>> _1ac91a7c4_buildTypeEnumItems(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _112043_tokens);
inline jule::Ptr<_1abd3a94d_TypeEnumDecl> _1ac91ab15_buildTypeEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _114442_tokens);
inline jule::Ptr<_1abd24b79_Expr> _1ac91b011_buildEnumItemExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::I32* _117142_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _117155_tokens);
inline jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> _1ac91b352_buildEnumItems(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _120339_tokens);
inline jule::Ptr<_1abd399b3_EnumDecl> _1ac91b693_buildEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _124038_tokens);
inline jule::Any _1ac91b9d4_buildNodeEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _128542_tokens);
inline jule::Ptr<_1abd3ac17_FieldDecl> _1ac91bd25_buildField(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _129434_tokens);
inline jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>> _1ac91c166_buildStructDeclFields(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _134345_tokens);
inline jule::Ptr<_1abd3b60d_StructDecl> _1ac91c4a7_buildStructDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _135440_tokens);
inline void _1ac91c760_checkMethodReceiver(_1ac911a1d_parser* _self_, jule::Ptr<_1abd32505_FnDecl>* _140239_f);
inline void _1ac91cac3_buildTraitBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3bd4a_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _142158_tokens);
inline jule::Ptr<_1abd3bd4a_TraitDecl> _1ac91ce14_buildTraitDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _145339_tokens);
inline jule::Ptr<_1abd32505_FnDecl> _1ac91d255_buildBindFn(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _148335_tokens);
inline jule::Ptr<_1abd336b0_VarDecl> _1ac91d596_buildBindVar(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _149336_tokens);
inline jule::Ptr<_1abd3b60d_StructDecl> _1ac91d8d7_buildBindStruct(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _150639_tokens);
inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac91dc28_buildBindTypeAlias(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _152042_tokens);
inline jule::Ptr<_1abd3894b_UseDecl> _1ac91e069_buildBindUse(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _153036_tokens);
inline jule::Any _1ac91e3aa_buildBind(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _154134_tokens);
inline jule::Ptr<_1abd32505_FnDecl> _1ac91e6eb_getMethod(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _156534_tokens);
inline void _1ac91ea5e_parseImplBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3c4aa_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _159455_tokens);
inline jule::Ptr<_1abd3c4aa_Impl> _1ac91eda0_buildImpl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _162733_tokens);
inline jule::Any _1ac9201e1_buildNodeData(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _169838_tokens);
inline void _1ac920499_applyFnMeta(_1ac911a1d_parser* _self_, jule::Ptr<_1abd32505_FnDecl>* _173135_f);
inline void _1ac920752_applyMeta(_1ac911a1d_parser* _self_, _1abd1e844_Node* _173633_node);
inline void _1ac920a0a_pushUseDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3894b_UseDecl>* _176136_decl);
inline jule::Bool _1ac920d4b_pushMetaNodes(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _176938_tokens);
inline _1abd1e844_Node _1ac92118c_parseNode(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _178934_st);
inline void _1ac921445_appendNode(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _181335_st);
inline void _1ac92191d_removeRange(_1ac911a1d_parser* _self_, jule::I32 _182330_i, jule::U32 _182338_id, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _182352_tokens, jule::Slice<jule::I32>* _182375_ranges);
inline void _1ac921d3b_pushWrongOrderCloseErr(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token>* _183542_t, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _183554_tokens, jule::Slice<jule::I32>* _183573_ranges);
inline void _1ac922314_pushRangeClose(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token> _184633_t, jule::U32 _184644_left, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _184660_tokens, jule::Slice<jule::I32>* _184683_ranges);
inline void _1ac9225bc_checkRanges(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _186431_tokens);
inline void _1ac922875_parse(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd10b21_File>* _189530_f);
inline void _1ac9241d4_pushErr(_1ac923b40_typeBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _4126_token, jule::Str _4141_fmt);
inline void _1ac924547_pushSuggestion(_1ac923b40_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac9247cd_buildNamespace(_1ac923b40_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _1ac924a64_buildGenerics(_1ac923b40_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac924cea_identGenerics(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac925081_buildIdent(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac925317_buildCppLink(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac92559d_buildFn(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac925834_buildPtr(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac925aba_buildSptr(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac925d51_buildSlc(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac9260d7_buildArr(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac92636d_buildMap(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac926604_buildEnumerable(_1ac923b40_typeBuilder* _self_);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac92688a_step(_1ac923b40_typeBuilder* _self_);
inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac926b21_build(_1ac923b40_typeBuilder* _self_);
inline void _1ac17d961_pushErr(_1ac17d411_directiveEval* _self_, jule::Ptr<_1abd0a38a_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac17dd5c_splitOperans(_1ac17d411_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _3349_tokens);
inline jule::Bool _1ac17e19d_evalDirectiveIdent(_1ac17d411_directiveEval* _self_, jule::Str _6433_ident);
inline jule::Bool _1ac17e4de_evalDirectivePart(_1ac17d411_directiveEval* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _7840_part);
inline jule::Bool _1ac17e775_eval(_1ac17d411_directiveEval* _self_);
inline jule::Ptr<_1ac927b33_JuleImporter> static__1ac92802e_New(_1ac17be37_CompileInfo _5819_info);
inline jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _1ac9282b5_AllPackages(_1ac927b33_JuleImporter* _self_);
inline void _1ac928705_SetModPath(_1ac927b33_JuleImporter* _self_, jule::Str _7529_path);
inline jule::Str _1ac92898b_GetModPath(_1ac927b33_JuleImporter* _self_);
inline jule::Str _1ac928ccc_ModById(_1ac927b33_JuleImporter* _self_, jule::I32 _8322_id);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ac92911d_GetImport(_1ac927b33_JuleImporter* _self_, jule::Str _8728_path);
inline __jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log _1ac929519_ImportPackage(_1ac927b33_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod);
inline void _1ac9297c2_Imported(_1ac927b33_JuleImporter* _self_, jule::Ptr<_1ab67760e_ImportInfo> _15331_imp);
inline __jule_tuple_bool__jule_tuple_s_1eb22e132_Log _1ac929c01_isPassBuildDirectives(_1ac927b33_JuleImporter* _self_, jule::Ptr<_1abd1d931_Ast>* _17945_file);
inline void _1acaae78c_optimizeChild(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _3938_s);
inline void _1acaaea45_optimizeBodyChildExceptional(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _5053_s);
inline void _1acaaeced_optimizeBodyChild(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _6142_s);
inline void _1acab00a6_optimizeExprModel(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Any* _7142_model);
inline void _1acab02a4_eliminateFollowed(_1acaae2a3_scopeDeadCode* _self_);
inline void _1acab055c_pushGoto(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6582e3_GotoSt> _9232_gt);
inline void _1acab0815_pushLabel(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab657e19_Label> _10233_l);
inline void _1acab0abd_optimizeRangeIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6573ad_RangeIter> _11541_it);
inline void _1acab0d76_optimizeWhileIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab656962_WhileIter> _12041_it);
inline void _1acab112e_optimizeInfIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6564ab_InfIter> _12839_it);
inline void _1acab13d7_optimizeConditional(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6561ae_Conditional> _13243_c);
inline void _1acab1690_optimizeMatch(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab659789_Match> _15037_m);
inline void _1acab1948_optimizeAssign(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab658b73_Assign> _16838_assign);
inline void _1acab1c01_optimizeMultiAssign(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab659129_MultiAssign> _17343_assign);
inline void _1acab1ea9_optimizeStmt(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Any _18236_st);
inline void _1acab21a7_optimizeStmts(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_);
inline _1acab353d_exprDeadCode static__1acab3b7b_new(jule::Ptr<_1acaae2a3_scopeDeadCode>* _4824_s);
inline void _1acab3e34_binary(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _5425_m);
inline void _1acab41dc_unary(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _5924_m);
inline void _1acab4495_structureLit(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _6331_m);
inline void _1acab474d_allocStructure(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _6933_m);
inline void _1acab4a06_casting(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _7326_m);
inline void _1acab4cae_args(_1acab353d_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args);
inline void _1acab5067_funcCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _8327_m);
inline void _1acab5320_slice(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _9124_m);
inline void _1acab55c8_array(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _9524_m);
inline void _1acab5881_indexing(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _10227_m);
inline void _1acab5b39_anonFunc(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _10727_m);
inline void _1acab5de2_mapExpr(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4c003_MapExprModel> _11126_m);
inline void _1acab619a_slicing(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _11826_m);
inline void _1acab6453_traitSub(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _12627_m);
inline void _1acab670b_structureSub(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _13031_m);
inline void _1acab69b4_tuple(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e027_TupleExprModel> _13424_m);
inline void _1acab6c6c_newCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _14026_m);
inline void _1acab7025_outCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _14626_m);
inline void _1acab72cd_outlnCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _15028_m);
inline void _1acab7586_panicCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _15428_m);
inline void _1acab783e_assertCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _15829_m);
inline void _1acab7ae7_errorCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _16228_m);
inline void _1acab7da0_makeCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _16627_m);
inline void _1acab8158_appendCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _17529_m);
inline void _1acab8411_lenCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _18026_m);
inline void _1acab86b9_capCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _18426_m);
inline void _1acab8972_deleteCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _18829_m);
inline void _1acab8c2a_sizeof(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd527de_SizeofExprModel> _19525_m);
inline void _1acab8ed3_alignof(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _19926_m);
inline void _1acab928b_integratedToStr(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _20334_m);
inline void _1acab9544_free(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53746_FreeExprModel> _20723_m);
inline void _1acab97ec_backendEmit(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _21130_m);
inline void _1acab9aa5_optimize(_1acab353d_exprDeadCode* _self_, jule::Any* _21528_model);
inline void _1ac0408cd_pushVar(_1ac04046b_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe);
inline jule::Bool _1ac040c1e_removeVar(_1ac04046b_nils* _self_, jule::Uintptr _5228_var);
inline jule::Bool _1ac041060_isSafe(_1ac04046b_nils* _self_, jule::Uintptr _6625_var);
inline jule::Ptr<_1ac939639_scopeOptimizer> static__1ac939bab_new(jule::Ptr<_1ab655576_Scope> _5123_scope);
inline void _1ac939e64_setCurrentStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Any _6338_stmt);
inline void _1ac93a162_removeCurrent(jule::Ptr<_1ac939639_scopeOptimizer> _self_);
inline jule::Bool _1ac93a3e8_isLastStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_);
inline jule::Bool _1ac93a67e_isIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_);
inline void _1ac93a937_optimizeData(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1abe11936_Data> _9536_d);
inline void _1ac93abe0_optimizeVar(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1abda8d2e_Var> _12135_v);
inline void _1ac93ae98_optimizeConditional(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6561ae_Conditional> _14243_c);
inline void _1ac93b3b6_buildDefaultConstantTrueCase(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab65a2b2_Case> _21652_case, jule::I32* _21670_i, jule::Ptr<_1ab659789_Match>* _21683_m);
inline void _1ac93b66e_optimizeMatch(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659789_Match> _24237_m);
inline void _1ac93b927_optimizeRangeIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6573ad_RangeIter> _32441_it);
inline void _1ac93bbd0_optimizeWhileIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab656962_WhileIter> _36941_it);
inline jule::Bool _1ac93c021_substr(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _37530_a);
inline jule::Bool _1ac93c362_strAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _39533_a);
inline jule::Bool _1ac93c6a3_sliceAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _40635_a);
inline void _1ac93c95b_optimizePostfix(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6586bc_Postfix> _41439_postfix);
inline void _1ac93cc14_optimizeAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _42138_assign);
inline jule::Bool _1ac93d055_tryOptimizeSwap(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659129_MultiAssign>* _52640_assign);
inline void _1ac93d30d_optimizeMultiAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659129_MultiAssign> _56343_assign);
inline void _1ac93d5b6_optimizeRet(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab65ad51_RetSt> _60935_r);
inline void _1ac93d86e_optimizeStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Any _63336_stmt);
inline void _1ac93db27_optimizeChild(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab655576_Scope> _66237_child);
inline void _1ac93dd25_optimize(jule::Ptr<_1ac939639_scopeOptimizer> _self_);
inline void static__1ac941410_optimize(jule::Any* _5829_model);
inline void static__1ac9416eb_optimizeData(jule::Any* _6233_model, jule::Ptr<_1ac94d807_data>* _6256_d);
inline jule::Bool _1ac941a3c_selfCmpCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _7331_m);
inline jule::Bool _1ac941d7d_boolCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _9728_m);
inline jule::Bool _1ac9421be_strCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _15026_m);
inline jule::Bool _1ac942675_tryNeutralElement1(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _20738_m, jule::Ptr<_1b9aac4c5_Const> _20763_c, jule::Ptr<_1abd48362_OperandExprModel>* _20775_nc);
inline jule::Bool _1ac9429b6_tryNeutralElement(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _25137_m);
inline void _1ac942c6e_checkBinaryForBoundary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _26642_m);
inline void _1ac943027_checkBinaryForNil(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _31837_m);
inline void _1ac9432d0_binary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _35025_m);
inline void _1ac943588_unary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _43824_m);
inline void _1ac943841_structureLit(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _48231_m);
inline void _1ac943ae9_allocStructure(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _49933_m);
inline void _1ac943da2_casting(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _50326_m);
inline void _1ac944215_args(_1ac940cb1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args);
inline void _1ac9444bd_scope(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1ab655576_Scope>* _54025_s);
inline void _1ac944776_funcCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _54627_m);
inline void _1ac944a2e_slice(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _55424_m);
inline void _1ac944cd7_array(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _55824_m);
inline void _1ac945090_indexing(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _56727_m);
inline void _1ac945348_anonFunc(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _59327_m);
inline void _1ac945601_mapExpr(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4c003_MapExprModel> _59726_m);
inline void _1ac9458a9_slicing(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _60426_m);
inline void _1ac945b62_traitSub(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _61227_m);
inline void _1ac945e1a_structureSub(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _61631_m);
inline void _1ac9461c3_tuple(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e027_TupleExprModel> _62024_m);
inline void _1ac94647b_newCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _62626_m);
inline void _1ac946734_outCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _63226_m);
inline void _1ac9469dc_outlnCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _63628_m);
inline void _1ac946c95_panicCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _64028_m);
inline void _1ac94704d_assertCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _64429_m);
inline void _1ac947306_errorCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _64828_m);
inline void _1ac9475ae_makeCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _65227_m);
inline void _1ac947867_appendCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _66129_m);
inline void _1ac947b20_lenCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _66626_m);
inline void _1ac947dc8_capCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _67026_m);
inline void _1ac948181_deleteCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _67429_m);
inline void _1ac948439_sizeof(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd527de_SizeofExprModel> _68125_m);
inline void _1ac9486e2_alignof(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _68526_m);
inline void _1ac94899a_integratedToStr(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _68934_m);
inline void _1ac948c53_free(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53746_FreeExprModel> _69323_m);
inline void _1ac94900b_backendEmit(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _69730_m);
inline void _1ac949209_do(_1ac940cb1_exprOptimizer* _self_);
inline void _1ac94b0da_pushVar(jule::Ptr<_1ac94ab78_dynamic> _self_, jule::Uintptr _3227_var, jule::Ptr<_1abe42d30_TypeKind> _3245_kind);
inline jule::Bool _1ac94b42b_removeVar(_1ac94ab78_dynamic* _self_, jule::Uintptr _5528_var);
inline jule::Bool _1ac94b827_isFits(_1ac94ab78_dynamic* _self_, jule::Uintptr _6925_var, jule::Ptr<_1abe42d30_TypeKind> _6939_kind);
inline _1ac94d30c_dataCheckpoint _1ac94db7b_getCheckpoint(_1ac94d807_data* _self_);
inline void _1ac94de34_loadCheckpoint(_1ac94d807_data* _self_, _1ac94d30c_dataCheckpoint* _3538_c);
inline void _1ac950661_pushVar(_1ac9501ee_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize);
inline jule::Bool _1ac950d9d_fitsMaxSize(_1ac9501ee_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr);
inline jule::Ptr<_1acaba589_Optimizer> static__1acabaa0c_New(jule::Ptr<_1ac92a43d_IR>* _2624_ir);
inline void _1acabacb5_optimizeGlobal(_1acaba589_Optimizer* _self_, jule::Ptr<_1abda8d2e_Var>* _3238_v);
inline void _1acabb06d_optimizeFunction(_1acaba589_Optimizer* _self_, jule::Ptr<_1abd566a0_Fn>* _3840_func);
inline void _1acabb326_optimizeStruct(_1acaba589_Optimizer* _self_, jule::Ptr<_1abd416ce_Struct>* _4838_s);
inline void _1acabb5ce_optimizeGlobals(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _6439_p);
inline void _1acabb887_optimizeFunctions(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _7241_p);
inline void _1acabbb40_optimizeStructs(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _8039_p);
inline void _1acabbde8_optimizePackage(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _8839_p);
inline void _1acabc0e6_Optimize(_1acaba589_Optimizer* _self_);
inline void static__1ac607add_Reset(void);
inline void static__1ac60901d_Print(jule::Str _1921_escape, jule::Str _1934_text);
inline void static__1ac60a926_LogFlat(_1eb22e132_Log* _1424_l);
inline void static__1ac60ab57_LogError(_1eb22e132_Log* _1925_l);
inline void static__1ac60ad88_Log(_1eb22e132_Log* _6520_l);
inline void static__1ac60b0b9_PrintLogs(jule::Slice<_1eb22e132_Log>* _7526_logs);
inline _1ad4245eb_Time static__1ad4249a3_Unix(jule::U64 _9120_sec);
inline _1ad4245eb_Time static__1ad424bb2_Now(void);
inline _1ad423e25_AbsTime _1ad42639a_Abs(_1ad4245eb_Time* _self_);
inline jule::Ptr<_1ad353d00_scopeCoder> static__1ad354460_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _7324_oc);
inline void _1b227c7c4_iterHead(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _8032_it, jule::Bool* _8044_ref, jule::Str _8055_begin);
inline void _1ad354b36_rangeIndexIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _12939_it);
inline void _1ad354dde_rangeHashmapIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _19641_it);
inline void _1ad355197_strRuneIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03dd4e_StrRuneIter> _24335_it);
inline void _1ad355450_ifCase(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655994_If> _35130_i);
inline void _1ad355708_conditional(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6561ae_Conditional> _36035_c);
inline void _1ad3559b1_infIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6564ab_InfIter> _38031_it);
inline void _1ad355c69_whileIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab656962_WhileIter> _39733_it);
inline void _1ad356022_rangeIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter> _43633_it);
inline void _1ad3562ca_cont(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657743_ContSt> _44924_c);
inline void _1ad356583_label(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657e19_Label> _45425_l);
inline void _1ad35683b_gotoSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6582e3_GotoSt> _45926_gt);
inline void _1ad356ae4_postfix(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6586bc_Postfix> _46431_p);
inline void _1ad356d9c_assign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab658b73_Assign> _47130_a);
inline void _1ad357155_mapLookupAssign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _47740_a);
inline void _1ad35740d_multiAssignTup(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _50039_a);
inline void _1ad3576b6_multiAssignFn(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _54938_a);
inline void _1ad35796e_multiAssign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign> _60935_a);
inline jule::Fn<void> _1ad357cb0_matchExpr(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _63533_m);
inline void _1ad358123_case(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _64528_m, jule::Ptr<_1ab65a2b2_Case> _64543_c);
inline void _1ad3583cb_matchSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _71531_m);
inline void _1ad358684_fallSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65a9aa_FallSt> _77026_f);
inline void _1ad35893c_breakSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657b1c_BreakSt> _77527_b);
inline void _1ad358be5_setResult(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65ad51_RetSt> _78433_r);
inline void _1ad358e9d_retSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65ad51_RetSt> _81229_r);
inline void _1ad359256_var(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abda8d2e_Var> _84827_v);
inline void _1ad35950e_mutSlicing(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03ca40_MutSlicingExprModel> _85434_m);
inline void _1ad3597b7_swap(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03b7db_SwapExprModel> _87128_m);
inline void _1ad359a70_exceptionalForwarding(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03b467_ExceptionalForwardingExprModel> _87945_m);
inline void _1ad359d28_st(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Any _88526_st);
inline void _1ad35a0d1_scopeStmts(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655576_Scope>* _94135_s);
inline void _1ad35a389_scope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655576_Scope> _95029_s);
inline void _1ad35a642_commonFuncScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _96540_f);
inline void _1ad35a9a5_anonFuncScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _100537_m, jule::Str _100558_ident);
inline void _1ad35ac5d_funcScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd59681_FnIns> _103733_f);
inline jule::Ptr<_1ad35e437_exprCoder> static__1ad35e800_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _11424_oc);
inline void _1ad35eaa8_string(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _12027_c);
inline void _1ad35ed61_boolean(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Bool _13527_b);
inline void _1ad36005e_nilLit(jule::Ptr<_1ad35e437_exprCoder> _self_);
inline jule::Bool _1ad3603a0_ftoaSpecialCases(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::F64* _14737_x);
inline void _1ad360658_float32(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _16128_c);
inline void _1ad360911_float64(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _18028_c);
inline void _1ad360bb9_constant(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const> _19832_c);
inline void _1ad3610d7_divByZeroBinary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd0a38a_Token>* _22236_op, jule::Ptr<_1abd48362_OperandExprModel>* _22253_l, jule::Ptr<_1abd48362_OperandExprModel>* _22280_r);
inline void _1ad361390_unsafeBinary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _24436_m);
inline void _1ad361648_binary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _27530_m);
inline void _1ad361901_var(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abda8d2e_Var> _28727_m);
inline void _1ad361ba9_structureIns(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4445c_StructIns> _30336_m);
inline void _1ad361e62_unary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _30729_m);
inline void _1ad36221a_structureLit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _33136_m);
inline void _1ad3624c3_allocStructure(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _36238_m);
inline void _1ad36277b_possibleRefExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _37035_expr);
inline void _1ad362b99_castTraitFromTrait(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49e8a_CastingExprModel>* _38443_m, jule::Ptr<_1abd69a59_Trait> _38469_t1, jule::Ptr<_1abd69a59_Trait> _38485_t2);
inline void _1ad362e52_casting(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _39731_m);
inline void _1ad36320a_models(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Slice<jule::Any> _51330_args);
inline void _1ad3634b3_args(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _52529_m);
inline void _1ad36376b_modelForCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _55636_expr);
inline void _1ad363a24_pushCallInf(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _57132_m);
inline jule::Bool _1ad363d65_isWrapped(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _59434_m);
inline jule::Bool _1ad3641a6_writeReceiver(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _61837_m);
inline void _1ad36445e_pureFuncCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _63137_m);
inline void _1ad364717_coFuncCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _72135_m);
inline void _1ad364a7a_writeUseExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _77237_f, jule::Ptr<_1abe11936_Data> _77252_d);
inline void _1ad364d33_funcCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _79332_m);
inline void _1ad3650db_slice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _86629_m);
inline void _1ad365394_indexing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _87832_m);
inline void _1ad36564c_unsafeIndexing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d1c2_UnsafeIndexingExprModel> _91838_m);
inline void _1ad365905_anonFunc(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _93532_m);
inline void _1ad365bad_mapExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4c003_MapExprModel> _96631_m);
inline void _1ad365e66_slicing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _98731_m);
inline void _1ad36621e_traitSub(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _100332_m);
inline void _1ad3664c7_structureSub(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _101936_m);
inline void _1ad366780_array(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _102829_m);
inline void _1ad366a38_funcInsCommon(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns> _105137_m);
inline void _1ad366ce1_funcIns(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns> _105831_m);
inline void _1ad367099_tuple(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e027_TupleExprModel> _106929_m);
inline void _1ad367352_newCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _108031_m);
inline void _1ad36760a_outCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _109031_m);
inline void _1ad3678b3_outlnCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _109933_m);
inline void _1ad367b6b_panicCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _110833_m);
inline void _1ad367e24_assertCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _111634_m);
inline void _1ad3681cc_errorCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _112933_m);
inline void _1ad368485_copyCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd51c61_BuiltinCopyCallExprModel> _116132_m);
inline void _1ad36873d_lenCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _116931_m);
inline void _1ad3689e6_capCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _117431_m);
inline void _1ad368c9e_deleteCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _117934_m);
inline void _1ad369057_makeCallSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel>* _119038_m);
inline void _1ad369310_makeCallStr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel>* _120836_m);
inline void _1ad3695b8_makeCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _121932_m);
inline void _1ad369871_pushToSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d59b_PushToSliceExprModel> _122735_m);
inline void _1ad369b29_appendToSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d975_AppendToSliceExprModel> _128737_m);
inline void _1ad369dd2_appendCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _129534_m);
inline void _1ad36a18a_sizeof(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd527de_SizeofExprModel> _130330_m);
inline void _1ad36a443_alignof(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _130931_m);
inline void _1ad36a6eb_runeLit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd52c73_RuneExprModel> _131527_m);
inline void _1ad36a9a4_structureStatic(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4d851_StructStaticIdentExprModel> _132939_m);
inline void _1ad36ac5c_integratedToStr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _133339_m);
inline void _1ad36b015_backendEmit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _133935_m);
inline void _1ad36b2bd_free(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53746_FreeExprModel> _135528_m);
inline void _1ad36b576_strComp(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03c4ac_StrCompExprModel> _136431_m);
inline void _1ad36b82e_emptyCompare(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03bbb5_EmptyCompareExprModel> _138036_m);
inline void _1ad36bad7_unsafeDeref(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03e14b_UnsafeDerefExprModel> _138935_m);
inline void _1ad36bd90_unsafeCasting(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03e448_UnsafeCastingExprModel> _140037_m);
inline void _1ad36c148_model(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _141729_m);
inline void _1ad36c401_initExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _151832_t);
inline jule::Ptr<_1ad36ec3e_TestCoder> static__1ad3701b2_New(jule::Ptr<_1ad42eb78_ObjectCoder>* _2924_oc);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ad370448_findTestingPackage(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void _1ad370701_appendTest(jule::Ptr<_1ad36ec3e_TestCoder> _self_, jule::Ptr<_1abd59681_FnIns> _4434_f);
inline void _1ad3709a9_appendPackageTests(jule::Ptr<_1ad36ec3e_TestCoder> _self_, jule::Ptr<_1ab67a535_Package>* _5943_p);
inline jule::Bool _1ad370c40_readyTestingPackage(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void _1ad370e3d_callTmReset(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void _1ad37113b_callTmFailed(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void _1ad371339_callTmSkipped(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void _1ad371537_Serialize(jule::Ptr<_1ad36ec3e_TestCoder> _self_);
inline void static__1ad3731c6_writeIdentTo(_209e0d4d9_StrBuilder* _3533_buf, jule::Str* _3551_ident);
inline void static__1ad37356c_toOut(_209e0d4d9_StrBuilder* _6326_buf, jule::Str _6343_ident, jule::Uintptr _6355_addr);
inline void static__1ad3739bd_toLocal(_209e0d4d9_StrBuilder* _7828_buf, jule::I32 _7845_row, jule::I32 _7855_col, jule::Str* _7866_ident);
inline void static__1ad373ca9_func(_209e0d4d9_StrBuilder* _8625_buf, jule::Ptr<_1abd566a0_Fn>* _8643_f);
inline void static__1ad374095_funcIns(_209e0d4d9_StrBuilder* _10228_buf, jule::Ptr<_1abd59681_FnIns>* _10246_f);
inline void static__1ad374381_traitDecl(_209e0d4d9_StrBuilder* _11730_buf, jule::Ptr<_1abd69a59_Trait> _11747_t);
inline void static__1ad37466c_param(_209e0d4d9_StrBuilder* _12126_buf, jule::Ptr<_1abd54bcb_Param>* _12144_p);
inline void static__1ad374958_structure(_209e0d4d9_StrBuilder* _13630_buf, jule::Ptr<_1abd416ce_Struct>* _13648_s);
inline void static__1ad374c44_structureIns(_209e0d4d9_StrBuilder* _14733_buf, jule::Ptr<_1abd4445c_StructIns>* _14751_s);
inline void static__1ad375030_field(_209e0d4d9_StrBuilder* _15526_buf, jule::Ptr<_1abd3d7a8_Field>* _15544_f);
inline void static__1ad37531b_var(_209e0d4d9_StrBuilder* _16524_buf, jule::Ptr<_1abda8d2e_Var> _16545_v);
inline void static__1ad375607_iterBegin(_209e0d4d9_StrBuilder* _18730_buf, jule::Uintptr _18747_it);
inline void static__1ad3758e3_iterEnd(_209e0d4d9_StrBuilder* _19228_buf, jule::Uintptr _19245_it);
inline void static__1ad375bce_iterNext(_209e0d4d9_StrBuilder* _19729_buf, jule::Uintptr _19746_it);
inline void static__1ad375eba_label(_209e0d4d9_StrBuilder* _20226_buf, jule::Uintptr _20243_u);
inline void static__1ad3762a6_matchEnd(_209e0d4d9_StrBuilder* _20729_buf, jule::Uintptr _20746_m);
inline void static__1ad376592_caseBegin(_209e0d4d9_StrBuilder* _21230_buf, jule::Uintptr _21247_c);
inline jule::Str _1ad43e1c6_Str(_1ad43dd0d_customType* _self_);
inline jule::Bool _1ad43e517_Equal(jule::Ptr<_1ad43dd0d_customType> _self_, jule::Ptr<_1abe42d30_TypeKind> _4421_k);
inline jule::Ptr<_1ad43e946_typeCoder> static__1ad43ee63_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _6924_oc);
inline void _1ad4402c6_toType(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _7630_buf, jule::Str _7651_id);
inline void _1ad440639_prim(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _9028_buf, jule::Ptr<_1abe4a909_Prim> _9045_p);
inline void _1ad44099c_tuple(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _9529_buf, jule::Ptr<_1abe509ec_Tuple> _9550_t);
inline void _1ad440d10_asSptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _10730_buf, jule::Slice<jule::U8> _10747_elem);
inline void _1ad441173_sptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _11428_buf, jule::Ptr<_1abe4e435_Sptr> _11449_sptr);
inline void _1ad4414d6_ptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _12127_buf, jule::Ptr<_1abe52bec_Ptr> _12148_p);
inline void _1ad441849_enumDecl(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _13232_buf, jule::Ptr<_1abd6c265_Enum> _13253_e);
inline void _1ad441bac_typeEnumDecl(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _13736_buf, jule::Ptr<_1abd6d970_TypeEnum> _13757_e);
inline void _1ad442020_asSlice(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _14131_buf, jule::Ptr<_1abe42d30_TypeKind> _14152_elem);
inline void _1ad442383_slice(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _14829_buf, jule::Ptr<_1abe4ee08_Slc> _14850_s);
inline void _1ad4426e6_mapType(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _15331_buf, jule::Ptr<_1abe5159c_Map> _15352_m);
inline void _1ad442dbc_structureIns(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _16736_buf, jule::Ptr<_1abd4445c_StructIns> _16757_s);
inline void _1ad443230_array(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _19129_buf, jule::Ptr<_1abe52229_Arr> _19150_a);
inline void _1ad443906_paramIns(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _21432_buf, jule::Ptr<_1abd58608_ParamIns>* _21454_p);
inline void _1ad4440cc_funcInsResult(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _24637_s, jule::Ptr<_1abd59681_FnIns>* _24657_f);
inline void _1ad444440_anonFunc(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _26432_buf, jule::Ptr<_1abd59681_FnIns> _26453_f);
inline void _1ad4447a3_func(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _28528_buf, jule::Ptr<_1abd59681_FnIns> _28549_f);
inline void _1ad444b16_kind(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _29228_buf, jule::Ptr<_1abe42d30_TypeKind> _29249_k);
inline jule::Ptr<_1ad447531_resultCoder> static__1ad447a09_new(jule::Ptr<_1ad43e946_typeCoder>* _35924_tc);
inline void _1ad447d6c_ptr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _36327_s, jule::Ptr<_1abe52bec_Ptr> _36346_p);
inline void _1ad4481d0_sptr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _36828_s, jule::Ptr<_1abe4e435_Sptr> _36847_p);
inline void _1ad448543_mapType(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _37331_s, jule::Ptr<_1abe5159c_Map> _37350_p);
inline void _1ad4488a6_slice(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _37929_s, jule::Ptr<_1abe4ee08_Slc> _37948_slc);
inline void _1ad448c19_arr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _38427_s, jule::Ptr<_1abe52229_Arr> _38446_arr);
inline void _1ad44907c_func(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _39028_s, jule::Ptr<_1abd59681_FnIns> _39047_f);
inline void _1ad4493e0_tup(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _40327_s, jule::Ptr<_1abe509ec_Tuple> _40346_tup);
inline void _1ad449753_codeMut(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _41031_s, jule::Ptr<_1abe42d30_TypeKind>* _41051_t);
inline void _1ad449ab6_codeMut1(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _44532_s, jule::Ptr<_1abe42d30_TypeKind>* _44552_t);
inline jule::Slice<jule::U8> _1ad449dc4_code(_1ad447531_resultCoder* _self_, jule::Ptr<_1abe42d30_TypeKind>* _45428_t);
inline jule::Str _1b20ecaea_Name(_1b20ec6cc_Flag* _self_);
inline jule::Str _1b20ecc4e_What(_1b20ec6cc_Flag* _self_);
inline void _1b20ecda3_Reset(_1b20ec6cc_Flag* _self_);
inline jule::I32 _1b20ed007_Short(_1b20ec6cc_Flag* _self_);
inline jule::Str _1b2949e6e_Name(_1b294a2e3_Flag* _self_);
inline jule::Str _1b294a5ce_What(_1b294a2e3_Flag* _self_);
inline void _1b294a722_Reset(_1b294a2e3_Flag* _self_);
inline jule::I32 _1b294a865_Short(_1b294a2e3_Flag* _self_);
inline jule::Str _1b294d5d2_Name(_1b294d956_Flag* _self_);
inline jule::Str _1b294dc42_What(_1b294d956_Flag* _self_);
inline void _1b294dd85_Reset(_1b294d956_Flag* _self_);
inline jule::I32 _1b294dec8_Short(_1b294d956_Flag* _self_);
inline jule::Str _1b2951c89_Name(_1b295210d_Flag* _self_);
inline jule::Str _1b29523e9_What(_1b295210d_Flag* _self_);
inline void _1b295253c_Reset(_1b295210d_Flag* _self_);
inline jule::I32 _1b2952680_Short(_1b295210d_Flag* _self_);
inline jule::Str _1b29553ec_Name(_1b2955771_Flag* _self_);
inline jule::Str _1b2955a5c_What(_1b2955771_Flag* _self_);
inline void _1b2955ba0_Reset(_1b2955771_Flag* _self_);
inline jule::I32 _1b2955ce3_Short(_1b2955771_Flag* _self_);
inline jule::Ptr<_1ad4b7c33_FlagSet> static__1ad4b801e_New(void);
inline jule::Trait _1ad4b84c5_FindFlag(_1ad4b7c33_FlagSet* _self_, jule::Str _7127_name);
inline jule::Trait _1ad4b8816_FindFlagShort(_1ad4b7c33_FlagSet* _self_, jule::I32 _8132_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ad4b8ddd_Parse(_1ad4b7c33_FlagSet* _self_, jule::Slice<jule::Str> _11524_args);
inline jule::Ptr<_1b2955771_Flag> _1b29b875c_addFlagCommon(_1ad4b7c33_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline jule::Ptr<_1b295210d_Flag> _1b29c0a61_addFlagCommon(_1ad4b7c33_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what);
inline void _1b29b602e_AddVar(_1ad4b7c33_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline void _1b29bd377_AddVar(_1ad4b7c33_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what);
inline __jule_tuple_i64__jule_tuple_bool _1b2968454_parseInteger(_1ad4ba6e7_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18539_parser);
inline __jule_tuple_u64__jule_tuple_bool _1b2970dc9_parseInteger(_1ad4ba6e7_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18539_parser);
inline jule::Str _1ad4bb011_getData(_1ad4ba6e7_argParser* _self_);
inline jule::VoidExceptional _1ad4bb286_processFlag(_1ad4ba6e7_argParser* _self_, jule::Trait* _21235_flag);
inline jule::VoidExceptional _1ad4bb53e_singleDash(_1ad4ba6e7_argParser* _self_, jule::Str* _25230_arg);
inline jule::VoidExceptional _1ad4bb7e7_doubleDash(_1ad4ba6e7_argParser* _self_, jule::Str* _26630_arg);
inline jule::VoidExceptional _1ad4bb9e5_tryArg(_1ad4ba6e7_argParser* _self_);
inline jule::VoidExceptional _1ad4bbbe3_parse(_1ad4ba6e7_argParser* _self_);
inline jule::Ptr<_1ad42eb78_ObjectCoder> static__1ad430074_New(jule::Ptr<_1ac92a43d_IR>* _11524_ir, _1ad42cdc9_SerializationInfo _11533_info);
inline void _1ad43032c_write(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Str _12625_s);
inline void _1ad4305d5_writeBytes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _13030_b);
inline void _1ad4307d3_addIndent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad4309d1_doneIndent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad430bce_indent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline jule::I32 _1ad431020_findAnyType(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind>* _14936_t);
inline jule::I32 _1ad431361_pushDealloc(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _15835_t);
inline jule::Str _1ad4316a2_pushAnonFn(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _17435_m);
inline jule::I32 _1ad4319e3_pushAnyType(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _21435_t);
inline void _1ad431c9b_pushResultIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _31338_f);
inline void _1ad432054_pushResult(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _33435_f);
inline void _1ad4323b7_pushAndWriteMaskMapper(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait> _34746_t1, jule::Ptr<_1abd69a59_Trait> _34762_t2);
inline void _1ad432670_locInfo(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd0a38a_Token>* _39828_t);
inline void _1ad43286d_head(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad432a6b_links(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad432d24_prepareStructure(_1ad42eb78_ObjectCoder* _self_, jule::Ptr<_1abd416ce_Struct>* _47940_s);
inline void _1ad433022_prepareStructures(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad4332ca_structurePlainDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _51043_s);
inline void _1ad4334c8_structurePlainDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad433781_fieldDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd438ac_FieldIns>* _52634_f);
inline void _1ad433a39_structureDestructor(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _54444_s);
inline void _1ad433d9c_structureOperatorEq(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _56039_ident, jule::Ptr<_1abd4445c_StructIns>* _56059_s);
inline void _1ad434210_structureOperatorNotEq(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _61742_ident, jule::Ptr<_1abd4445c_StructIns>* _61762_s);
inline void _1ad43462d_structureOperator(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _63137_ident, jule::Ptr<_1abd59681_FnIns>* _63157_f, jule::Str _63168_op);
inline void _1ad4348d6_structureOperators(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _68043_s);
inline void _1ad434b8e_structureInsDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _72141_s);
inline void _1ad434e47_structureDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _75138_s);
inline void _1ad435145_structureDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad435343_structureMethodDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43581b_funcHead(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _78533_buf, jule::Ptr<_1abd59681_FnIns>* _78555_f, jule::Bool _78566_ptr, jule::Str _78577_ident);
inline void _1ad435b7e_funcDeclIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _80436_f, jule::Bool _80447_ptr);
inline void _1ad435ee2_funcDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _81133_f, jule::Bool _81141_ptr);
inline void _1ad43629a_funcDeclTrait(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _81738_f);
inline void _1ad436498_funcDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad436751_traitDataTypeMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _83945_t);
inline void _1ad43694e_traitDataTypes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad436cb2_paramIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _87533_buf, jule::Ptr<_1abd58608_ParamIns>* _87555_p);
inline void _1ad437125_paramsIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _88134_buf, jule::Ptr<_1abd59681_FnIns>* _88156_f);
inline void _1ad437488_varInitExpr(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abda8d2e_Var>* _90236_v, jule::Fn<void> _90245_init);
inline void _1ad437741_var(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abda8d2e_Var> _92027_v);
inline void _1ad437aa4_anonFuncInsDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _95140_m, jule::Str _95161_ident);
inline void _1ad437e17_anonFuncIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _95736_m, jule::Str _95757_ident);
inline void _1ad43827a_funcIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _96732_f, jule::Str _96743_ident);
inline void _1ad438533_func(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _97729_f);
inline void _1ad438896_funcTrait(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _98330_s, jule::Ptr<_1abd59681_FnIns>* _98350_f);
inline __jule_tuple_x_1abd59681_FnIns__jule_tuple_bool _1ad438bd7_findTraitMetMap(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _99840_m);
inline void _1ad43904a_traitWrapper(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _101037_t, jule::Ptr<_1abd566a0_Fn>* _101053_m);
inline void _1ad439248_traitWrappers(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad4395ab_traitDataMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _107641_t, jule::Ptr<_1abd4445c_StructIns> _107652_s);
inline void _1ad4399c9_traitData(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _109334_t, jule::I32 _109345_i, jule::Ptr<_1abd4445c_StructIns>* _109358_s);
inline void _1ad439bc7_traitDatas(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad439dc5_globals(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43a0c3_decls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43a37b_structureMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _115841_s);
inline void _1ad43a634_structureOstream(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _116541_s);
inline void _1ad43a8dc_structureIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _121637_s);
inline void _1ad43ab95_structure(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _122234_s);
inline void _1ad43ad93_structures(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43b091_funcs(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43b349_pushInit(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1ab67a535_Package>* _125433_pkg);
inline void _1ad43b547_anonHashes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43b745_initCaller(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43b943_end(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43bca6_insertBuf(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _131134_buf, jule::I32 _131151_pos);
inline void _1ad43bea4_serializeHead(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline void _1ad43c1a2_Serialize(jule::Ptr<_1ad42eb78_ObjectCoder> _self_);
inline jule::Ptr<_1aca7a9ab_ObjectDeadCode> static__1acaaaac9_new(jule::Ptr<_1ac92a43d_IR>* _3524_ir);
inline jule::Bool _1b1a327e9_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd69a59_Trait>* _4130_t);
inline jule::Bool _1b1a3824a_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd59681_FnIns>* _4130_t);
inline jule::Bool _1b1a3e097_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd4445c_StructIns>* _4130_t);
inline jule::Bool _1b1a462e1_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abda8d2e_Var>* _4130_t);
inline void _1b1a32b90_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd69a59_Trait> _6135_t);
inline void _1b1a385e1_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd59681_FnIns> _6135_t);
inline void _1b1a3e64c_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd4445c_StructIns> _6135_t);
inline void _1b1a46687_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abda8d2e_Var> _6135_t);
inline void _1acaab3c1_setReferencesAsLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd5c860_ReferenceStack>* _7444_rs);
inline void _1acaab679_inits(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _15630_pkg);
inline void _1acaab932_collectLivePackage(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _16843_pkg);
inline void _1acaabb30_collectLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_);
inline void _1acaabdd8_removeDeadGlobals(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _20142_vars);
inline void _1acaac191_removeDeadFns(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _21338_funcs);
inline void _1acaac449_removeDeadStructs(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _23442_structs);
inline void _1acaac702_removeDeadTraits(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd69a59_Trait>>* _25641_traits);
inline void _1acaac9aa_removeDeadsFile(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abe0b5bd_SymbolTable>* _27740_file);
inline void _1acaacc63_removeDeadsPackage(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _28443_pkg);
inline void _1acaace61_removeDeads(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_);
inline void _1acaad15e_elimanate(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_);
inline __jule_tuple_x_1ac92a43d_IR__jule_tuple_s_1eb22e132_Log static__1ac92a8d3_Build(jule::Str _2721_path, jule::I32 _2732_flags);
inline void _1ac92adbc_appendStructs(_1ac92a43d_IR* _self_, jule::Ptr<_1ab67a535_Package>* _5633_p, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _5657_buffer);
inline jule::Slice<jule::Ptr<_1abd416ce_Struct>> _1ac92b153_GetAllStructures(_1ac92a43d_IR* _self_);
inline void _1ac92b4b6_appendGlobals(_1ac92a43d_IR* _self_, jule::Ptr<_1ab67a535_Package>* _7933_p, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _7957_buffer);
inline jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1ac92b74c_GetAllGlobals(_1ac92a43d_IR* _self_);
inline void _1ac92b94a_Order(_1ac92a43d_IR* _self_);
inline jule::Str _1abd447d1_Str(_1abd4445c_StructIns* _self_);
inline jule::Bool _1abd44b22_Equal(jule::Ptr<_1abd4445c_StructIns> _self_, jule::Ptr<_1abe42d30_TypeKind> _25521_other);
inline jule::Bool _1abd450c8_Same(_1abd4445c_StructIns* _self_, jule::Ptr<_1abd4445c_StructIns> _28319_s);
inline jule::Ptr<_1abd566a0_Fn> _1abd454c4_FindMethod(_1abd4445c_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically);
inline jule::Ptr<_1abd438ac_FieldIns> _1abd45815_FindField(_1abd4445c_StructIns* _self_, jule::Str _30928_ident);
inline jule::Ptr<_1abda8d2e_Var> _1abd45b56_FindStatic(_1abd4445c_StructIns* _self_, jule::Str _32029_ident);
inline jule::Ptr<_1eb2db310_Cmd> static__1eb2db70b_New(jule::Str _2619_path);
inline jule::VoidExceptional _1eb2db909_Spawn(_1eb2db310_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1eb2dbd8d_Wait(_1eb2db310_Cmd* _self_);
inline jule::VoidExceptional _20b19c238_spawn(_1eb2db310_Cmd* _self_);
inline jule::Exceptional<jule::I32> _20b19c678_wait(_1eb2db310_Cmd* _self_);
inline jule::I32 _209bd1686_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _209bd1950_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _209bd1c91_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _209bd2027_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _209bd239b_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _209bd25ee_UTF16FromStr(jule::Str _1417_s);
inline jule::Str _209bd290c_UTF16ToStr(jule::Slice<jule::U16> _3415_s);
inline jule::Str _209bd2bc6_U16PtrToStr(jule::U16* _5023_s);
inline jule::I32 _209872c62_GetLastErrno(void);
inline jule::Uintptr _209c0b370_GetStdHandle(jule::Uintptr _6417_stdh);
inline jule::Bool _209c0b639_CloseHandle(jule::Uintptr _6523_stdh);
inline jule::I32 _209c0b9ad_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat);
inline jule::I32 _209c0bddc_Wopen(jule::U16* _7317_path, jule::I32 _7329_flag, jule::I32 _7340_mode);
inline jule::U32 _209c0c0eb_GetLastError(void);
inline jule::U32 _209c0c470_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff);
inline jule::Bool _209c0ca03_DeleteFile(jule::U16* _9322_path);
inline jule::Bool _209c0ccbc_CreateDirectory(jule::U16* _9827_path);
inline jule::Bool _209c0d086_RemoveDirectory(jule::U16* _10327_path);
inline jule::U32 _209c0d570_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname);
inline jule::Bool _209c0d8e4_GetConsoleMode(jule::Uintptr _11419_handle, jule::I32* _11440_mode);
inline jule::Bool _209c0deee_SetConsoleMode(jule::Uintptr _11919_handle, jule::I32 _11935_mode);
inline jule::Bool _209c0e54e_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I32 _12454_toWrite, jule::I32* _12510_written, void* _12524_reserved);
inline jule::Bool _209c0ea38_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I32 _13257_toRead, jule::I32* _13310_readed);
inline jule::Uintptr _209c100bb_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data);
inline jule::I32 _209c10440_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data);
inline jule::I32 _209c10709_FindClose(jule::Uintptr _15414_h);
inline jule::I32 _209c127d8_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _209c12bb2_Close(jule::I32 _2510_handle);
inline jule::I32 _209c13069_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _209c1329a_Exit(jule::I32 _339_code);
inline __jule_tuple_i32__jule_tuple_int _209d2e87d_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _209d2ebbe_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _209d3021e_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _209d304d8_RuneLen(jule::I32 _35212_r);
inline jule::I32 _209d3096c_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _209d30c69_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _209d310dd_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _209d31671_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _209d3193a_RuneStart(jule::U8 _51714_b);
inline void _209d38cb6_handleRW(jule::Slice<jule::U8>* _514_b);
inline void _209d38755_HandleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Str _209e019c7_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1ad5c503d_Slice(jule::U8* _2316_e, jule::I32 _2326_n);
inline jule::Slice<jule::U8> _209e0c76e_StrBytes(jule::Str _4113_s);
inline jule::Str _209e0ca05_BytesStr(jule::Slice<jule::U8> _5013_b);
inline jule::Str _209e0ccbe_StrFromBytes(jule::Slice<jule::U8> _5817_b);
inline jule::I32 _209e3ba34_getLastOsErrorWindows(void);
inline jule::Slice<jule::Str> _209e3d096_Args(void);
inline jule::Exceptional<jule::Str> _209e3d508_WorkingDir(void);
inline jule::Exceptional<jule::Str> _209e3de43_getwd(void);
inline jule::Bool _20b02c272_IsLetter(jule::I32 _7613_r);
inline jule::Bool _20b09761c_is16(jule::Slice<_20b09587e_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _20b097991_is32(jule::Slice<_20b095dac_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _20b098299_isExcludingLatin(jule::Ptr<_20b096330_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _20b0984db_IsUpper(jule::I32 _29512_r);
inline jule::I32 _20b0d8c68_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _20b0d9395_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _20b0d9719_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _20b0d9a16_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _20b0d9dce_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _20b0da253_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _20b0da709_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _20b0daa4a_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _20b0dae79_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _20b0db2ed_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _20b0dcad5_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _20b0dce59_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _20b0dd883_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _20b0de026_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Bool _20b0de39a_Contains(jule::Str _24313_s, jule::Str _24321_sub);
inline jule::Bool _20b0dee17_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes);
inline jule::I32 _20b0e028b_Count(jule::Str _26410_s, jule::Str _26418_sub);
inline jule::Str _20b0e0775_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n);
inline jule::Str _20b0e1501_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset);
inline jule::Str _20b0e1875_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset);
inline jule::Str _20b0e1be9_Trim(jule::Str _3699_s, jule::Str _36917_cutset);
inline jule::Bool _209e11036_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _209e11344_isSlash(jule::U8 _5312_c);
inline jule::U8 _209e1160d_toUpper(jule::U8 _5512_c);
inline jule::I32 _209e11bd5_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _209e11e9e_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _209e12268_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _209e12642_abs(jule::Str _14612_path);
inline jule::Str _209e12884_join(jule::Slice<jule::Str> _16013_elem);
inline jule::Str _20b0e45e2_Clean(jule::Str _10914_path);
inline jule::Str _20b0e4bb9_FromSlash(jule::Str _21214_path);
inline jule::Str _20b0e500a_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _20b0e5291_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _20b0e555a_Abs(jule::Str _2468_path);
inline jule::Str _20b0e5824_Base(jule::Str _25213_path);
inline jule::Str _20b0e5bed_Dir(jule::Str _2838_path);
inline jule::Str _20b0e5e40_VolumeName(jule::Str _30115_path);
inline jule::I32 _209c232ee_getLastFsError(void);
inline jule::Bool _209d3a636_isConsoleHandle(jule::Uintptr _11620_handle);
inline void _20b19ca30_appendEscapeArg(_209e0d4d9_StrBuilder* _10225_s, jule::Str _10240_arg);
inline jule::Str _20b19cce9_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _20b19d1c3_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _20b19e1c4_processErrorFromCode(jule::I32 _1125_code);
inline jule::I32 _20b19e3e4_getLastProcessError(void);
inline void _20b19ec0d_Exit(jule::I32 _129_code);
inline jule::Str _20b19ee1c_Executable(void);
inline jule::Bool _1eb221a1a_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1eb221ce5_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1eb2220ae_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1eb22e594_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args);
inline jule::Str _1eb22e8a2_argToStr(jule::Any _32713_arg);
inline jule::I32 _1eb22eb6b_findNextFmt(jule::Str _34016_fmt);
inline jule::Str _1eb230034_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args);
inline jule::Bool _1eb230d8c_IsTopDirective(jule::Str _2219_directive);
inline jule::Bool _1eb2322ab_IsWindows(jule::Str _3714_os);
inline jule::Bool _1eb2325b9_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1eb232883_IsLinux(jule::Str _4312_os);
inline jule::Bool _1eb232bc4_IsI386(jule::Str _4611_arch);
inline jule::Bool _1eb232e5a_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1eb233224_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1eb2334dd_IsUnix(jule::Str _5511_os);
inline jule::Bool _1eb2338b7_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1eb233b09_Is64Bit(jule::Str _6112_arch);
inline void _20b1a11a4_init(void);
inline jule::I32 _1b9a3b795_LeadingZeros64(jule::U64 _6119_x);
inline jule::I32 _1b9a3c6db_TrailingZeros(jule::U32 _8318_x);
inline jule::I32 _1b9a3d0c1_TrailingZeros32(jule::U32 _10520_x);
inline jule::I32 _1b9a3d38a_TrailingZeros64(jule::U64 _11420_x);
inline jule::I32 _1b9a43d63_Len32(jule::U32 _35214_x);
inline jule::I32 _1b9a4412c_Len64(jule::U64 _36614_x);
inline __jule_tuple_u64__jule_tuple_u64 _1b9a44db9_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1b9a466c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y);
inline jule::U32 _1b994d311_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1b994d61e_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1b994d8d8_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1b994dc29_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1b995128c_Frexp(jule::F64 _4714_f);
inline jule::F64 _1b9a4d80c_NaN(void);
inline jule::Bool _1b9a4db1a_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1b9a4ddd4_Inf(jule::I32 _618_sign);
inline jule::Bool _1b9a4e29c_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1b9a4e566_normalize(jule::F64 _8214_x);
inline jule::F64 _1b9a5103a_Log(jule::F64 _1118_x);
inline jule::F64 _1b9a51920_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1b9a584e8_Modf(jule::F64 _449_f);
inline jule::F64 _1b9a58d01_Log2(jule::F64 _449_x);
inline jule::Str _1b9a82797_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1b9a82d80_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1b9a83589_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I32 _18816_exp, _1b9a81587_floatInfo* _18827_flt);
inline jule::Slice<jule::U8> _1b9a83c60_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b9a82214_decimalSlice _2255_digs, jule::I32 _22529_prec, jule::U8 _22540_fmt);
inline void _1b9a8417d_roundShortest(_1b9a99ccb_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1b9a81587_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1b9a84722_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b9a82214_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1b9a84c0b_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b9a82214_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1b9a853b0_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1b9a81587_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1b9a85a42_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I32 _51224_exp, _1b9a81587_floatInfo* _51235_flt);
inline jule::I32 _1b9a85db6_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1b9a8623a_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1b9a86dc8_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1b921c273_ConvError _1b9a8734b_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1b9a8777a_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1b9a87c31_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1b9a888e1_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b9a88d64_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1b9a8ab46_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b9a8ae54_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b9a8b21d_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1b9a8cc69_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1b9a8d198_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1b921c273_ConvError _1b9a8d73c_atofHex(_1b9a81587_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8db16_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8dd58_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8e1cc_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1b9a8e551_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1b9a8edd1_ryuFtoaFixed32(_1b9a82214_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1b9a90376_ryuFtoaFixed64(_1b9a82214_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1b9a90bb2_formatDecimal(_1b9a82214_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1b9a9118a_ryuFtoaShortest(_1b9a82214_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1b9a81587_floatInfo* _26168_flt);
inline jule::I32 _1b9a91421_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1b9a916da_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b9a91b19_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1b9a81587_floatInfo* _3966_flt);
inline void _1b9a92268_ryuDigits(_1b9a82214_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1b9a97746_ryuDigits32(_1b9a82214_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b9a97b75_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b9a980a4_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1b9a98428_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1b9a986e2_divmod1e9(jule::U64 _60214_x);
inline void _1b9a9b629_trim(_1b9a99ccb_decimal* _27414_a);
inline void _1b9a9b915_rightShift(_1b9a99ccb_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1b9a9bdbb_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1b9a9c174_leftShift(_1b9a99ccb_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1b9a9c4e8_shouldRoundUp(_1b9a99ccb_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1b9a9dc7a_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1b9a9e143_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1b9a9e40c_Itoa(jule::I32 _819_i);
inline jule::Str _1b9a9e74d_small(jule::I32 _8610_i);
inline jule::Bool _1b9a9e9d4_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1b9aa0078_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline jule::Str _1b9aa1574_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1b9aa183d_BitsizeOf(jule::Str _5914_k);
inline jule::Str _1b9aa1b7e_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1b9aa1e15_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1b9aa21ce_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1b9aa2cd4_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1b9aa309d_BitsizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1b9aa3367_BitsizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1b9aa3631_BitsizeOfUint(jule::U64 _19718_x);
inline void _1b9aa37c9_UpdateTarget(void);
inline void _1b9aa3950_init(void);
inline jule::I64 _1b9aa75ad_MinI(jule::Str _6113_k);
inline jule::I64 _1b9aa78bb_MaxI(jule::Str _7913_k);
inline jule::U64 _1b9aa7b85_MaxU(jule::Str _9713_k);
inline jule::F64 _1b9aa7ec6_Min(jule::Str _11512_k);
inline jule::F64 _1b9aa825c_Max(jule::Str _13312_k);
inline jule::Bool _1b9aa8713_IsI16Greater(jule::Str _621_k);
inline jule::Bool _1b9aa8a21_IsI32Greater(jule::Str _1121_k);
inline jule::Bool _1b9aa8cda_IsI64Greater(jule::Str _1621_k);
inline jule::Bool _1b9aa912b_IsU16Greater(jule::Str _2321_k);
inline jule::Bool _1b9aa93b2_IsU32Greater(jule::Str _2821_k);
inline jule::Bool _1b9aa967b_IsU64Greater(jule::Str _3421_k);
inline jule::Bool _1b9aa9945_IsF32Greater(jule::Str _4117_k);
inline jule::Bool _1b9aa9d1e_IsF64Greater(jule::Str _4617_k);
inline jule::Bool _1b9aaa11b_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2);
inline jule::Bool _1b9aab282_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1b9aab590_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1b9aab859_IsInt(jule::Str _4610_k);
inline jule::Bool _1b9aabb9a_IsFloat(jule::Str _5112_k);
inline jule::Bool _1b9aabe31_IsNum(jule::Str _5610_k);
inline jule::Bool _1b9aac1ea_IsSigNum(jule::Str _6113_k);
inline void _1b9ab64e0_lshiftUnsig(_1b9aac4c5_Const* _59021_c, _1b9aac4c5_Const* _59032_x);
inline void _1b9ab6820_rshiftUnsig(_1b9aac4c5_Const* _59621_c, _1b9aac4c5_Const* _59632_x);
inline jule::Bool _1abd0aac7_IsUnaryOp(jule::U32 _33414_id);
inline jule::Bool _1abd0add5_IsBinOp(jule::U32 _34412_id);
inline jule::Bool _1abd0b4e0_IsStr(jule::Str _36410_k);
inline jule::Bool _1abd0b776_IsRawStr(jule::Str _36713_k);
inline jule::Bool _1abd0ba40_IsRune(jule::Str _37111_k);
inline jule::Bool _1abd0c425_IsFloat(jule::Str _38012_k);
inline jule::Bool _1abd0c6de_IsNum(jule::Str _38810_k);
inline jule::Bool _1abd0cc72_IsIgnoreIdent(jule::Str _40318_ident);
inline jule::Bool _1abd0d03b_IsAnonIdent(jule::Str _40616_ident);
inline jule::Bool _1abd0d5be_IsSpace(jule::I32 _41912_r);
inline jule::Bool _1abd0dab9_IsLetter(jule::I32 _42913_r);
inline jule::Bool _1abd0e03c_IsDecimal(jule::U8 _44914_b);
inline jule::Bool _1abd0e306_IsBinary(jule::U8 _45213_b);
inline jule::Bool _1abd0e5c0_IsOctal(jule::U8 _45512_b);
inline jule::Bool _1abd0e889_IsHex(jule::U8 _45810_b);
inline jule::Bool _1abd0eb53_IsAssign(jule::U32 _47313_id);
inline jule::Bool _1abd0ee1c_IsPostfixOp(jule::U32 _48516_id);
inline jule::Bool _1abd101d6_IsAssignOp(jule::U32 _49515_id);
inline jule::Ptr<_1abd10b21_File> _1abd11eeb_NewFileSet(jule::Str _5715_path);
inline _1eb22e132_Log _1abd13a25_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1abd10b21_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args);
inline jule::Bool _1abd13ddd_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix);
inline jule::Str _1abd14262_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i);
inline jule::Str _1abd1462a_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i);
inline jule::Str _1abd1499e_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i);
inline jule::Str _1abd14d23_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i);
inline jule::Str _1abd15197_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i);
inline jule::Str _1abd1562b_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i);
inline jule::Str _1abd1586d_commonNum(jule::Slice<jule::U8>* _21615_txt);
inline jule::Str _1abd15b37_binaryNum(jule::Slice<jule::U8>* _23915_txt);
inline jule::Bool _1abd15eab_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i);
inline jule::Bool _1abd16330_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i);
inline jule::Bool _1abd166a4_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i);
inline jule::Bool _1abd16a28_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i);
inline jule::Bool _1abd16d9c_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i);
inline jule::Str _1abd17397_octalNum(jule::Slice<jule::U8>* _31814_txt);
inline jule::Str _1abd17573_hexNum(jule::Slice<jule::U8>* _36012_txt);
inline jule::Str _1abd178c5_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n);
inline jule::Str _1abd17b8e_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt);
inline jule::Str _1abd17e58_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt);
inline jule::Str _1abd18222_hexByteEscape(jule::Slice<jule::U8>* _42119_txt);
inline jule::Str _1abd184db_byteEscape(jule::Slice<jule::U8>* _42616_txt);
inline jule::Slice<_1eb22e132_Log> _1abd1d4d0_Lex(jule::Ptr<_1abd10b21_File> _80912_f, jule::I32 _80922_mode);
inline jule::Bool _1ab693b9c_FindModuleFile(jule::Slice<jule::Ptr<_209c238a4_DirEntry>>* _1320_dirents);
inline jule::Str _1ab693e55_FindModuleFileDeep(jule::Str _2527_path);
inline jule::Slice<_1eb22e132_Log> _1ab69421e_CheckModuleFile(jule::Str* _4721_path);
inline jule::Bool _1ab694a6b_IsPub(jule::Str _910_ident);
inline jule::Bool _1abdca8de_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1abde591a_ToRune(jule::Str _2015_lit);
inline jule::Str _1abde5b29_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1abde5e6a_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1abde6201_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1abde6575_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1abde691b_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1ac025a5b_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i);
inline jule::Slice<jule::U8> _1ac025d8b_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes);
inline void _1ac026177_FmtByDefault(_209e0d4d9_StrBuilder* _4722_buf, jule::Any* _4740_arg);
inline void _1ac026595_applyFmtByDefault(_209e0d4d9_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args);
inline void _1ac0269b3_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _209e0d4d9_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args);
inline jule::Slice<jule::U8> _1ac026d37_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args);
inline jule::Str _1ac028d5b_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Bool _1abd5b95d_parameterUsesGenerics(jule::Ptr<_1abd58608_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _38546_generics);
inline jule::Ptr<_1abe4a002_TypeSymbol> _1abd5e1d0_buildType(jule::Ptr<_1abd20845_TypeDecl> _9418_t);
inline jule::Ptr<_1abe12aad_Value> _1abd5e4dd_buildExpr(jule::Ptr<_1abd24b79_Expr> _10318_expr);
inline jule::Ptr<_1abe4203d_TypeAlias> _1abd5e7a7_buildTypeAlias(jule::Ptr<_1abd37362_TypeAliasDecl> _11223_decl);
inline jule::Ptr<_1abd3d7a8_Field> _1abd5eae8_buildField(jule::Ptr<_1abd3ac17_FieldDecl> _12319_decl);
inline jule::Slice<jule::Ptr<_1abd3d7a8_Field>> _1abd5ed7e_buildFields(jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>>* _13421_decls);
inline jule::Ptr<_1abd416ce_Struct> _1abd60148_buildStruct(jule::Ptr<_1abd3b60d_StructDecl> _14220_decl);
inline jule::Ptr<_1abd54bcb_Param> _1abd60412_buildParam(jule::Ptr<_1abd310a3_ParamDecl> _15419_decl);
inline jule::Slice<jule::Ptr<_1abd54bcb_Param>> _1abd607db_buildParams(jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>>* _16521_decls);
inline jule::Ptr<_1abd5444a_RetType> _1abd60a2d_buildRetType(jule::Ptr<_1abd23738_RetTypeDecl> _17321_decl);
inline jule::Ptr<_1abd566a0_Fn> _1abd60ce7_buildFunc(jule::Ptr<_1abd32505_FnDecl> _18318_decl);
inline jule::Slice<jule::Ptr<_1abd566a0_Fn>> _1abd610b1_buildMethods(jule::Slice<jule::Ptr<_1abd32505_FnDecl>>* _20122_decls);
inline jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>> _1abd6137a_buildTraitInherits(jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _20928_inherits);
inline jule::Ptr<_1abd69a59_Trait> _1abd61644_buildTrait(jule::Ptr<_1abd3bd4a_TraitDecl> _21719_decl);
inline jule::Ptr<_1abd6b6e8_EnumItem> _1abd6190d_buildEnumItem(jule::Ptr<_1abd38e02_EnumItemDecl> _22722_decl);
inline jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _1abd61bc7_buildEnumItems(jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>>* _23524_decls);
inline jule::Ptr<_1abd6c265_Enum> _1abd621c2_buildEnum(jule::Ptr<_1abd399b3_EnumDecl> _24318_decl);
inline jule::Ptr<_1abd6d398_TypeEnumItem> _1abd6239d_buildTypeEnumItem(jule::Ptr<_1abd3a2dd_TypeEnumItemDecl> _25326_decl);
inline jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _1abd62645_buildTypeEnumItems(jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>>* _26128_decls);
inline jule::Ptr<_1abd6d970_TypeEnum> _1abd6290e_buildTypeEnum(jule::Ptr<_1abd3a94d_TypeEnumDecl> _26922_decl);
inline jule::Ptr<_1abda8d2e_Var> _1abd62bc8_buildVar(jule::Ptr<_1abd336b0_VarDecl> _27817_decl);
inline jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1abd62e92_buildVars(jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _29518_decls);
inline jule::Ptr<_1ab650120_Impl> _1abd6325b_buildImpl(jule::Ptr<_1abd3c4aa_Impl> _30318_decl);
inline jule::Ptr<_1abe11936_Data> _1ab64a439_buildAsComptimeMethodData(jule::Ptr<_1abd59681_FnIns>* _142135_f);
inline jule::Ptr<_1ab67760e_ImportInfo> _1ab64a747_findComptimePackage(jule::Ptr<_1ab6979a3_Sema>* _142929_s);
inline jule::Ptr<_1abe11936_Data> _1ab64aabb_buildComptimeTypeInfoData(jule::Ptr<_1ab6979a3_Sema>* _143535_s, jule::Ptr<_1abe42d30_TypeKind>* _143550_t);
inline jule::Ptr<_1abe11936_Data> _1ab64ae0c_buildComptimeValue(jule::Ptr<_1abe11936_Data>* _144328_d);
inline jule::Str _1ab64e0b9_toStrConstraints(jule::Ptr<_1abe41449_InsGeneric> _14321_g);
inline jule::Bool _1ab64e482_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1abe42d30_TypeKind>* _15434_g);
inline jule::Bool _1ab64e74b_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab652353_newScopeCheckerBase(jule::Ptr<_1ab6979a3_Sema>* _5829_s, jule::Ptr<_1abd59681_FnIns> _5843_owner);
inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab65271b_newScopeChecker(jule::Ptr<_1ab6979a3_Sema>* _6625_s, jule::Ptr<_1abd59681_FnIns> _6639_owner);
inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab652a90_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ab65ca34_scopeChecker> _7637_scope);
inline jule::Bool _1ab652e58_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ab655576_Scope>* _9034_sc);
inline jule::Bool _1ab6532cc_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ab655576_Scope>* _10434_sc);
inline jule::I32 _1ab653651_countMatchType(jule::Ptr<_1ab659789_Match>* _14720_m, jule::Ptr<_1abe42d30_TypeKind>* _14732_t);
inline jule::Slice<jule::Ptr<_1abe11936_Data>> _1ab65391a_getDatasFromTupleData(jule::Ptr<_1abe11936_Data>* _17131_d);
inline jule::Bool _1ab654256_checkMut(jule::Ptr<_1ab6979a3_Sema>* _20618_s, jule::Ptr<_1abe11936_Data>* _20629_left, jule::Ptr<_1abe11936_Data> _20646_right, jule::Ptr<_1abd0a38a_Token> _20660_op);
inline jule::Bool _1ab654740_checkAssign(jule::Ptr<_1ab6979a3_Sema>* _22521_s, jule::Ptr<_1abe11936_Data>* _22536_left, jule::Ptr<_1abe11936_Data> _22553_right, jule::Ptr<_1abd0a38a_Token> _22567_op);
inline jule::Bool _1ab654a09_isValidAstStForNextSt(jule::Any* _24731_n);
inline jule::Bool _1ab654cc3_isValidStForNextSt(jule::Any* _25824_st);
inline jule::Bool _1ab65508c_stmtIsDef(jule::Any* _27615_st);
inline jule::U32 _1ab66ee42_removeEqFromOp(jule::U32 _220119_op);
inline void _1ab670173_makeComptimeRange(jule::Ptr<_1abe11936_Data>* _223027_d);
inline jule::Bool _1ab67066d_canComptimeMatch(jule::Ptr<_1abe11936_Data>* _225126_d);
inline jule::Ptr<_1abda8d2e_Var> _1ab674ae5_findVarInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ab675068_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded);
inline jule::Ptr<_1abd416ce_Struct> _1ab675497_findStructInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded);
inline jule::Ptr<_1abd566a0_Fn> _1ab67594d_findFnInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded);
inline jule::Ptr<_1abd69a59_Trait> _1ab675c8e_findTraitInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _9428_files, jule::Str* _9452_ident);
inline jule::Ptr<_1abd6c265_Enum> _1ab676113_findEnumInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _10627_files, jule::Str* _10651_ident);
inline jule::Ptr<_1abd6d970_TypeEnum> _1ab676487_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _11831_files, jule::Str* _11855_ident);
inline jule::Any _1ab6769c6_defByIdentPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded);
inline jule::Bool _1ab67ca10_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p);
inline jule::Bool _1ab695143_isValidModelForRef(jule::Any* _1328_m);
inline _1eb22e132_Log _1ab6955e9_compilerErr(jule::Ptr<_1abd0a38a_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args);
inline jule::Bool _1ab69596d_impIsLookupable(jule::Ptr<_1ab67760e_ImportInfo>* _5621_i, jule::Str* _5638_ident);
inline void _1ab695c9d_appendRetVars(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _6823_dest, jule::Ptr<_1abd59681_FnIns>* _6842_f);
inline void _1ab696089_appendParamVars(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _9825_dest, jule::Ptr<_1abd59681_FnIns>* _9844_f);
inline void _1ab696375_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _15834_dest, jule::Ptr<_1abd59681_FnIns>* _15859_f);
inline jule::Ptr<_1abe0b5bd_SymbolTable> _1ab6966e9_findFile(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _19618_files, jule::Ptr<_1abd10b21_File>* _19642_handler);
inline void _1ab696ba0_pushSuggestion(_1eb22e132_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args);
inline void _1abda7514_pushImplemented(jule::Ptr<_1abd69a59_Trait> _288224_t, jule::Ptr<_1abd416ce_Struct>* _288240_d);
inline void _1abda7800_pushImplements(jule::Ptr<_1abd416ce_Struct>* _290024_s, jule::Ptr<_1abd69a59_Trait> _290040_t);
inline jule::Bool _1abde719c_traitHasReferenceReceiver(jule::Ptr<_1abd69a59_Trait>* _2831_t);
inline jule::Bool _1abde7554_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1abe11936_Data>* _4333_d);
inline jule::Bool _1abde78c8_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1abe11936_Data>* _4830_d);
inline jule::Bool _1abde7c91_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1abe11936_Data>* _7132_d);
inline jule::Bool _1abde8115_intAssignable(jule::Str _10018_kind, jule::Ptr<_1abe11936_Data>* _10030_d);
inline void _1abe0452d_checkMutRiskOfStructLit(jule::Ptr<_1ab6979a3_Sema>* _92033_s, jule::Ptr<_1abd4960a_StructLitExprModel>* _92044_m);
inline jule::Ptr<_1abe42d30_TypeKind> _1abe0a369_lenKind(void);
inline jule::Bool _1abe0a6bb_isGoodValueToInfer(jule::Ptr<_1abe11936_Data>* _142124_d);
inline jule::Ptr<_1abd1ec62_Directive> _1abe3a2cd_findDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _425923_directives, jule::Str _425954_d);
inline jule::Any _1abe3a696_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1ab67760e_ImportInfo> _426836_imp);
inline void _1abe3a8c7_fitBitsize(jule::Ptr<_1abe11936_Data>* _427720_d);
inline void _1abe3ac07_makeStructLitAlloc(jule::Ptr<_1abe11936_Data>* _430628_d, jule::Ptr<_1abd4960a_StructLitExprModel>* _430643_lit);
inline jule::Ptr<_1abda8d2e_Var> _1abe3b07b_buildErrorVar(jule::Ptr<_1ab655576_Scope>* _431723_s, jule::Ptr<_1abd288a3_FnCallExpr>* _431739_fc);
inline jule::Any _1abe3b400_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1ab6979a3_Sema> _433238_s);
inline jule::Bool _1abe3b6b9_isOkForShifting(jule::Ptr<_1abe11936_Data>* _435725_d);
inline jule::Bool _1abe3ba93_isInstancedStruct(jule::Ptr<_1abd4445c_StructIns> _437422_s);
inline jule::Bool _1abe3bd90_isPtrArithmeticCompatible(jule::Ptr<_1abe11936_Data>* _437835_l, jule::Ptr<_1abe11936_Data>* _437850_r);
inline void _1abe3c236_applyCastKindModel(jule::Ptr<_1abe11936_Data>* _439328_d, jule::Ptr<_1abe42d30_TypeKind>* _439343_t, jule::Ptr<_1abd0a38a_Token>* _439362_token);
inline void _1abe3c5cc_applyCastKind(jule::Ptr<_1abe11936_Data>* _440223_d, jule::Ptr<_1abe42d30_TypeKind>* _440238_t, jule::Ptr<_1abd0a38a_Token>* _440257_token);
inline jule::Ptr<_1abe11936_Data> _1abe3c7db_buildVoidData(void);
inline jule::Str _1abe3cb60_checkDataForIntegerIndexing(jule::Ptr<_1abe11936_Data>* _441337_d, jule::Ptr<_1abd0a38a_Token>* _441352_token);
inline void _1abe3d006_applyCastModelByEnum(jule::Ptr<_1abe11936_Data>* _443830_d, jule::Ptr<_1abd6c265_Enum> _443844_e, jule::Ptr<_1abd0a38a_Token>* _443859_token);
inline void _1abe3d2e2_castConstByType(jule::Str* _444921_t, jule::Ptr<_1abe11936_Data>* _444934_d);
inline void _1abe3d80e_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1abd59681_FnIns>* _448352_f);
inline jule::Bool _1abe3da73_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1abd21219_SubIdentTypeDecl>* _449450_t);
inline jule::Str _1abe3dd3c_constoa(jule::Ptr<_1b9aac4c5_Const>* _451713_c);
inline jule::Ptr<_1abe11936_Data> _1abe3e26b_evalEnumStatic(jule::Ptr<_1abd6c265_Enum>* _452824_enm, jule::Ptr<_1abd6b6e8_EnumItem>* _452841_item, jule::Ptr<_1abd0a38a_Token>* _452863_token);
inline jule::Ptr<_1abd4960a_StructLitExprModel> _1abe3e535_isLitBased(jule::Any* _454520_m);
inline void _1abe3e821_makeImplicitDeref(jule::Ptr<_1abe11936_Data>* _456227_d, jule::Ptr<_1abd0a38a_Token> _456241_baseToken);
inline void _1ae76c49d_updateRefer(jule::Ptr<_1abd5c860_ReferenceStack> _457323_ref, jule::Ptr<_1abd59681_FnIns>* _457346_old, jule::Ptr<_1abd59681_FnIns>* _457359_new);
inline void _1abe3eea3_makeVariadic(jule::Ptr<_1abe11936_Data>* _458122_d, jule::Ptr<_1abe42d30_TypeKind> _458136_elem);
inline jule::Bool _1abe403d2_isVarCaptured(jule::Ptr<_1ab65ca34_scopeChecker> _459518_r, jule::Ptr<_1ab65ca34_scopeChecker> _459540_s, jule::Ptr<_1abda8d2e_Var> _459558_v);
inline jule::Bool _1abe5d587_kindUsesGenerics(jule::Ptr<_1abe42d30_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _171641_generics);
inline jule::Bool _1abe5d950_hasDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _172622_directives, jule::Str _172653_tag);
inline jule::Bool _1abe5dc19_canGetPtr(jule::Ptr<_1abe11936_Data>* _173519_d);
inline jule::Bool _1abe5e05a_isValidForSptrType(jule::Ptr<_1abe42d30_TypeKind>* _174728_t);
inline jule::Bool _1abe5e2e1_isValidForRef(jule::Ptr<_1abe42d30_TypeKind>* _175623_t);
inline jule::Bool _1abe5e5aa_isBuiltinStrConvertable(jule::Ptr<_1abe42d30_TypeKind>* _175933_t);
inline jule::Str _1abe5e874_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _176327_tokens);
inline jule::Ptr<_1abe4a909_Prim> _1abe5ec4d_buildPrimType(jule::Str _178218_kind);
inline void _1abe60336_applyImplicitCast(jule::Ptr<_1abe42d30_TypeKind>* _181027_dest, jule::Ptr<_1abe11936_Data>* _181049_d, jule::Ptr<_1abd0a38a_Token>* _181064_token);
inline jule::Bool _1abe60600_validTypeForXof(jule::Ptr<_1abe42d30_TypeKind>* _183825_t);
inline __jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log _1abe63713_buildSymbols(jule::Ptr<_1abd1d931_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1abd63822_symbolBuilder> _1662_owner);
inline __jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log _1abe63b86_analyzePackage(jule::Slice<jule::Ptr<_1abd1d931_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I32* _3065_flags);
inline __jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log _1abe640b5_AnalyzePackage(jule::Slice<jule::Ptr<_1abd1d931_Ast>> _7423_files, jule::Trait _7442_importer, jule::I32 _7462_flags);
inline jule::Ptr<_1abd59681_FnIns> _1ac0297eb_findBuiltinFunc(jule::Str* _2621_ident);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ac029b09_primTypeAlias(jule::Ptr<_1abe42d30_TypeKind>* _6623_k);
inline jule::Ptr<_1abda8d2e_Var> _1ac02d4ae_findBuiltinVar(jule::Str* _9420_ident);
inline jule::Ptr<_1abe4203d_TypeAlias> _1ac02d800_findBuiltinTypeAlias(jule::Str _14225_ident);
inline jule::Any _1ac02da86_findBuiltinDef(jule::Str* _19720_ident);
inline jule::Any _1ac02dd50_findBuiltinDefStdDebug(jule::Str* _21328_ident);
inline jule::Any _1ac02e119_findBuiltinDefStdMem(jule::Str* _22626_ident);
inline jule::Any _1ac02e4e3_findBuiltinDefStdComptime(jule::Str* _24231_ident);
inline jule::Any _1ac02e735_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident);
inline jule::Any _1ac02eaa9_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident);
inline jule::Ptr<_1abe11936_Data> _1ac02ee2d_builtinCallerError(jule::Ptr<_1abe1365d_Eval>* _30028_e, jule::Ptr<_1abd288a3_FnCallExpr>* _30043_fc);
inline jule::Ptr<_1abe11936_Data> _1ac03035c_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _32226_e, jule::Ptr<_1abd288a3_FnCallExpr>* _32241_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac03078b_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _34628_e, jule::Ptr<_1abd288a3_FnCallExpr>* _34643_fc, jule::Ptr<_1abe11936_Data>* _34665_d);
inline jule::Ptr<_1abe11936_Data> _1ac030bba_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _35826_e, jule::Ptr<_1abd288a3_FnCallExpr>* _35841_fc, jule::Ptr<_1abe11936_Data>* _35863_d);
inline jule::Ptr<_1abe11936_Data> _1ac0310e9_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _42028_e, jule::Ptr<_1abd288a3_FnCallExpr>* _42043_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac031759_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44627_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44642_fc, jule::Ptr<_1abe11936_Data>* _44664_d);
inline jule::Ptr<_1abe11936_Data> _1ac031a78_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _49729_e, jule::Ptr<_1abd288a3_FnCallExpr>* _49744_fc, jule::Ptr<_1abe11936_Data>* _49766_d);
inline jule::Ptr<_1abe11936_Data> _1ac032062_callerCopySlice(jule::Ptr<_1abe11936_Data>* _60625_dest, jule::Ptr<_1abe1365d_Eval>* _60643_e, jule::Ptr<_1abd288a3_FnCallExpr>* _60658_fc, jule::Ptr<_1abe11936_Data>* _60680_d);
inline jule::Ptr<_1abe11936_Data> _1ac032491_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _64027_e, jule::Ptr<_1abd288a3_FnCallExpr>* _64042_fc, jule::Ptr<_1abe11936_Data>* _64064_d);
inline jule::Ptr<_1abe11936_Data> _1ac032815_callerLenSlice(jule::Ptr<_1abe11936_Data>* _66524_expr, jule::Ptr<_1abe11936_Data>* _66542_d);
inline jule::Ptr<_1abe11936_Data> _1ac032b89_callerLenMap(jule::Ptr<_1abe11936_Data>* _67322_expr, jule::Ptr<_1abe11936_Data>* _67340_d);
inline jule::Ptr<_1abe11936_Data> _1ac03300d_callerLenArr(jule::Ptr<_1abe11936_Data>* _68122_expr, jule::Ptr<_1abe11936_Data>* _68140_d);
inline jule::Ptr<_1abe11936_Data> _1ac033382_callerLenStr(jule::Ptr<_1abe11936_Data>* _68822_expr, jule::Ptr<_1abe11936_Data>* _68840_d);
inline jule::Ptr<_1abe11936_Data> _1ac033706_callerLenComptime(jule::Ptr<_1abe11936_Data>* _70127_d, jule::I32 _70137_n);
inline jule::Ptr<_1abe11936_Data> _1ac033b35_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _70826_e, jule::Ptr<_1abd288a3_FnCallExpr>* _70841_fc, jule::Ptr<_1abe11936_Data>* _70863_d);
inline jule::Ptr<_1abe11936_Data> _1ac033ea9_callerCapSlice(jule::Ptr<_1abe11936_Data>* _74624_expr, jule::Ptr<_1abe11936_Data>* _74642_d);
inline jule::Ptr<_1abe11936_Data> _1ac0343d8_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _75426_e, jule::Ptr<_1abd288a3_FnCallExpr>* _75441_fc, jule::Ptr<_1abe11936_Data>* _75463_d);
inline jule::Ptr<_1abe11936_Data> _1ac0348c2_callerDeleteMap(jule::Ptr<_1abe1365d_Eval>* _77725_e, jule::Ptr<_1abd288a3_FnCallExpr>* _77740_fc, jule::Ptr<_1abe11936_Data>* _77762_expr, jule::Ptr<_1abe11936_Data>* _77780_d);
inline jule::Ptr<_1abe11936_Data> _1ac034d01_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _80629_e, jule::Ptr<_1abd288a3_FnCallExpr>* _80644_fc, jule::Ptr<_1abe11936_Data>* _80666_d);
inline jule::Ptr<_1abe11936_Data> _1ac035230_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _82929_e, jule::Ptr<_1abd288a3_FnCallExpr>* _82944_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac03565e_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _87340_e, jule::Ptr<_1abd288a3_FnCallExpr>* _87355_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac035cd0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _90941_e, jule::Ptr<_1abd288a3_FnCallExpr>* _90956_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac03620e_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _92938_e, jule::Ptr<_1abd288a3_FnCallExpr>* _92953_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac03663d_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _94138_e, jule::Ptr<_1abd288a3_FnCallExpr>* _94153_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac036a6c_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _95439_e, jule::Ptr<_1abd288a3_FnCallExpr>* _95454_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac036e9b_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _96743_e, jule::Ptr<_1abd288a3_FnCallExpr>* _96758_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac0373ca_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _102735_e, jule::Ptr<_1abd288a3_FnCallExpr>* _102750_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac037809_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _105236_e, jule::Ptr<_1abd288a3_FnCallExpr>* _105251_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac037c38_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _107733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _107748_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac038167_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _110045_e, jule::Ptr<_1abd288a3_FnCallExpr>* _110060_fc, jule::Ptr<_1abe11936_Data>* );
inline jule::Ptr<_1abe11936_Data> _1ac038596_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _112744_e, jule::Ptr<_1abd288a3_FnCallExpr>* _112759_fc, jule::Ptr<_1abe11936_Data>* _112781_d);
inline jule::Ptr<_1abe11936_Data> _1ac0389c5_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _117834_e, jule::Ptr<_1abd288a3_FnCallExpr>* _117849_fc, jule::Ptr<_1abe11936_Data>* _117871_d);
inline jule::Ptr<_1abe11936_Data> _1ac038e04_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _118736_e, jule::Ptr<_1abd288a3_FnCallExpr>* _118751_fc, jule::Ptr<_1abe11936_Data>* _118773_d);
inline jule::Ptr<_1ac899764_FileInfo> _1ac89c4ae_ParseFile(jule::Ptr<_1abd10b21_File> _2318_f);
inline __jule_tuple_x_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log _1ac8e0dd7_parseFileset(jule::Ptr<_1abd10b21_File> _5521_f);
inline jule::Ptr<_1abd30866_ScopeTree> _1ac8e1877_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ac8e1c0c_isSt(jule::Ptr<_1abd0a38a_Token> _499_current, jule::Ptr<_1abd0a38a_Token> _4926_prev);
inline jule::Bool _1ac8e2081_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _5526_tokens, jule::I32* _5545_i);
inline __jule_tuple_int__jule_tuple_bool _1ac8e2449_nextStPos(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _6815_tokens, jule::I32 _6833_start);
inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool _1ac8e27bd_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _13028_tokens);
inline jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _1ac8e2ea5_splitStmts(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _15120_tokens);
inline jule::Bool _1ac90b60b_isTypeOp(jule::U32* _89314_id);
inline jule::Bool _1ac90b919_isTypeRange(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _90021_tokens);
inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac90bbd3_getBlockExpr(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _93322_tokens);
inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token _1ac90c09b_splitDelim(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _96520_tokens, jule::U32 _96538_delim);
inline jule::I32 _1ac90c365_findLowestPrecOp(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _100422_tokens);
inline jule::Ptr<_1abd26494_IdentExpr> _1ac90c62e_buildIdentExpr(jule::Ptr<_1abd0a38a_Token>* _106924_token);
inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_int _1ac90c8e8_getRangeExprTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _107728_tokens);
inline jule::Bool _1ac90ccc2_isAnonFnHead(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _110018_tokens);
inline jule::Bool _1ac90d9c6_checkAssignTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _1623_tokens);
inline _1eb22e132_Log _1ac90eb92_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1abd10b21_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args);
inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac9101c0_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _6959_tokens);
inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token _1ac910489_rangeLast(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _9919_tokens);
inline __jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log _1ac910940_parts(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust);
inline jule::U32 _1ac910bc6_getCloseOfBrace(jule::U32 _16720_left);
inline _1eb22e132_Log _1ac911105_compilerErr(jule::Ptr<_1abd0a38a_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args);
inline void _1ac91149b_pushSuggestion(_1eb22e132_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args);
inline jule::Ptr<_1abd20845_TypeDecl> _1ac92337b_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1ac15b774_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1ac15b8b7_checkArch(jule::Str _2814_arg);
inline jule::Bool _1ac15ba60_isPassFileAnnotation(jule::Str _5029_p);
inline void _1ac17c256_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1ac17c4cb_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1ac17c7b7_initVars(jule::Slice<jule::Str>* _5518_vars, _1ac17be37_CompileInfo* _5532_info);
inline jule::Slice<jule::U8> _1ac92733b_readBuff(jule::Str _3013_path);
inline _1eb22e132_Log _1ac927649_flatCompilerErr(jule::Str _4120_text);
inline void _1ac92bce1_pushPasses(jule::Ptr<_1ab67a535_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes);
inline jule::Slice<jule::Str> _1ac92c1a9_getAllUniquePasses(jule::Ptr<_1ab67a535_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _12853_uses);
inline _1ac17be37_CompileInfo _1ac92c3b8_buildCompileInfo(void);
inline void _1ac92cad3_IterPackages(jule::Ptr<_1ac92a43d_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ab67a535_Package>*> _731_f);
inline void _1ac92ce13_IterFiles(jule::Ptr<_1ab67a535_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1abe0b5bd_SymbolTable>*> _1634_f);
inline void _1ac92d2a9_iterTraitInheritMethods(jule::Ptr<_1abd69a59_Trait>* _2233_base, jule::Ptr<_1abd69a59_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _2263_f);
inline void _1ac92d6c7_iterTraitInheritMethods1(jule::Ptr<_1abd69a59_Trait>* _3134_base, jule::Ptr<_1abd69a59_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _3164_f);
inline void _1ac92d980_IterTraitMethods(jule::Ptr<_1abd69a59_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _3937_f);
inline jule::Bool _1ac934777_IsForwarded(jule::Ptr<_1ab655576_Scope>* _2317_s);
inline jule::Bool _1ac934a85_IsExprComesFromBind(jule::Ptr<_1abe11936_Data>* _3925_d);
inline jule::Bool _1ac934d4e_IsAny(jule::Ptr<_1abe42d30_TypeKind>* _5115_t);
inline jule::Bool _1ac935190_IsClosure(jule::Ptr<_1abd4b673_AnonFnExprModel>* _6015_m);
inline jule::Bool _1ac935426_IsOpMethod(jule::Ptr<_1abd566a0_Fn>* _6316_m);
inline jule::Bool _1ac93579a_IsTraitMethod(jule::Ptr<_1abd4445c_StructIns>* _7923_owner, jule::Ptr<_1abd59681_FnIns>* _7943_f);
inline jule::Bool _1ac935b1e_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p);
inline jule::Ptr<_1abd1ec62_Directive> _1ac93657b_FindDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1ac936944_HasDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::Bool _1ac936cb8_ContainsTraitMethod(jule::Ptr<_1abd69a59_Trait>* _2429_t, jule::Str* _2441_ident);
inline jule::I32 _1ac93747d_FindTraitTypeOffsetS(jule::Ptr<_1abd69a59_Trait> _3725_t, jule::Ptr<_1abd4445c_StructIns> _3740_s);
inline jule::I32 _1ac937802_FindTraitTypeOffset(jule::Ptr<_1abd69a59_Trait> _6024_t, jule::Ptr<_1abe42d30_TypeKind> _6039_k);
inline jule::Bool _1b19d3503_isOrdered(jule::Ptr<_1abd416ce_Struct>* _1418_t, jule::Slice<jule::Ptr<_1abd416ce_Struct>> _1425_s);
inline jule::Bool _1b19d9a9d_isOrdered(jule::Ptr<_1abda8d2e_Var>* _1418_t, jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1425_s);
inline void _1b19d02d0_order(jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _3718_s);
inline void _1b19d5934_order(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _3718_s);
inline void _1acaad48e_EliminateDefines(jule::Ptr<_1ac92a43d_IR>* _30526_ir);
inline void _1acab24d7_eliminateDeadCodeOfScope(jule::Ptr<_1ab655576_Scope> _24133_s);
inline void _1acab275c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _25433_funcs);
inline void _1acab298d_eliminateFunctionsScopePackage(jule::Ptr<_1ab67a535_Package>* _26240_pkg);
inline void _1acab2c46_eliminateScopePackage(jule::Ptr<_1ab67a535_Package>* _26831_pkg);
inline void _1acab2e44_EliminateScopes(jule::Ptr<_1ac92a43d_IR>* _27325_ir);
inline jule::Uintptr _1ac0391ac_typeData(jule::Any* _1714_m);
inline jule::Bool _1ac039575_equalConst(jule::Ptr<_1b9aac4c5_Const> _2115_l, jule::Ptr<_1b9aac4c5_Const> _2126_r);
inline jule::Bool _1ac0398e9_equalCasting(jule::Ptr<_1abd49e8a_CastingExprModel> _4017_l, jule::Ptr<_1abd49e8a_CastingExprModel> _4039_r);
inline jule::Bool _1ac039cb2_equalUnary(jule::Ptr<_1abd48c36_UnaryExprModel> _4715_l, jule::Ptr<_1abd48c36_UnaryExprModel> _4735_r);
inline jule::Bool _1ac03a136_equalIndexing(jule::Ptr<_1abd4b1bc_IndexingExprModel> _5418_l, jule::Ptr<_1abd4b1bc_IndexingExprModel> _5441_r);
inline jule::Bool _1ac03a4aa_equalBinary(jule::Ptr<_1abd4885c_BinaryExprModel> _5916_l, jule::Ptr<_1abd4885c_BinaryExprModel> _5937_r);
inline jule::Bool _1ac03a82e_equalModels(jule::Any _7016_l, jule::Any _7030_r);
inline void _1ac04144a_possibleNilRemove(jule::Ptr<_1ac04046b_nils>* _7827_n, jule::Any _7837_m);
inline jule::Bool _1ac041813_isGuaranteedNonNilExpr(jule::Ptr<_1ac04046b_nils>* _8432_n, jule::Any _8442_m);
inline jule::Bool _1ac041acc_isNilValidType(jule::Ptr<_1abe42d30_TypeKind> _9223_t);
inline jule::Uintptr _1ac041e1d_getNilVar(jule::Any _9414_m);
inline jule::Bool _1ac93e1dd_isConstantValidConditionalCase(jule::Ptr<_1ab655994_If>* _67836_i);
inline jule::Bool _1ac93e4eb_isUnreachableExpr(jule::Any* _68723_expr);
inline jule::Bool _1ac93e7b5_isConstantValidMatchCase(jule::Ptr<_1ab65a2b2_Case>* _70230_case);
inline jule::Bool _1ac93eb06_isUnreachableConditionalCase(jule::Ptr<_1ab655994_If>* _71134_i);
inline jule::Bool _1ac93ed8c_isUnreachableMatchCase(jule::Ptr<_1ab65a2b2_Case>* _71528_case);
inline __jule_tuple_bool__jule_tuple_u64 _1ac94967c_checkForBitShiftOpt(jule::Ptr<_1abd48362_OperandExprModel>* _77925_l, jule::Ptr<_1abd48362_OperandExprModel>* _77948_r);
inline jule::Bool _1ac949a45_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r);
inline void _1ac94bc12_possibleDynamicRemove(jule::Ptr<_1ac94ab78_dynamic>* _8131_d, jule::Any _8144_m);
inline jule::Bool _1ac94c020_isDynamicValidType(jule::Ptr<_1abe42d30_TypeKind> _8727_t);
inline jule::Ptr<_1abe42d30_TypeKind> _1ac94c44e_isTypeGuaranteedDynamicData(jule::Ptr<_1ac94ab78_dynamic>* _8937_dy, jule::Ptr<_1abe42d30_TypeKind> _8955_t, jule::Any _8973_m);
inline jule::Uintptr _1ac94c790_getDynamicVar(jule::Any _11418_m);
inline jule::Bool _1ac951266_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I32 _1ac95162e_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr);
inline jule::Bool _1ac9519a3_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2);
inline void _1ac951cd3_possibleBoundaryRemove(jule::Ptr<_1ac9501ee_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1ac95209c_isBoundaryRiskyType(jule::Ptr<_1abe42d30_TypeKind> _13628_t);
inline jule::Bool _1ac952366_isBoundaryValidType(jule::Ptr<_1abe42d30_TypeKind> _14128_t);
inline jule::Uintptr _1ac952630_getBoundaryVar(jule::Any _14319_m);
inline void _1ac9556aa_PushOptLevel(jule::I32 _3217_level);
inline void _1acabc38d_detectEnabled(void);
inline void _1ac60ba7b_Throw(jule::Str _910_msg);
inline jule::U64 _1ad4266db_unix(void);
inline jule::Bool _1ad35b126_isCopyOptimizable(jule::Ptr<_1abe11936_Data>* _105023_expr);
inline jule::Bool _1ad35b4de_isIterCopyOptimizable(jule::Ptr<_1abe11936_Data>* _106127_expr, jule::Ptr<_1abda8d2e_Var>* _106141_v);
inline jule::Bool _1ad35b91d_captureVarHandling(jule::Ptr<_1ad42eb78_ObjectCoder>* _106828_oc, jule::Ptr<_1abd4b673_AnonFnExprModel>* _106851_m, jule::Ptr<_1abda8d2e_Var>* _106877_v);
inline jule::Str _1ad36c7b9_decomposeCommonEsq(jule::U8 _158323_b);
inline jule::Str _1ad36cac7_sbtoa(jule::U8 _161010_b);
inline void _1ad36cdb3_cstrBytes(_209e0d4d9_StrBuilder* _163019_s, jule::Str _163034_ctx);
inline void _1ad36d1e3_cstrLit(_209e0d4d9_StrBuilder* _163617_s, jule::Str _163632_ctx);
inline void _1ad36d589_ftoa(_209e0d4d9_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I32 _164237_bitsize);
inline void _1ad36d875_itoa(_209e0d4d9_StrBuilder* _166014_s, jule::I64 _166029_x);
inline void _1ad36db61_utoa(_209e0d4d9_StrBuilder* _167714_s, jule::U64 _167729_x);
inline jule::Slice<jule::U8> _1ad43c56a_concatAllParts(jule::Slice<jule::Ptr<_1abd0a38a_Token>> _135719_parts);
inline jule::Bool _1ad43c878_isHeadDecl(jule::Ptr<_1abd566a0_Fn>* _137320_m);
inline jule::Bool _1ad44b733_shouldInitialized(jule::Ptr<_1abe42d30_TypeKind>* _46427_t);
inline void _20b1a40b9_printErrorMessage(jule::Str _3022_msg);
inline void _20b1a433e_help(jule::Slice<jule::Str>* _3510_args);
inline void _20b1a4570_version(jule::Slice<jule::Str>* _6313_args);
inline void _20b1a477e_toolDistos(void);
inline void _20b1a48e4_toolDistarch(void);
inline void _20b1a4ae2_tool(jule::Slice<jule::Str>* _9410_args);
inline void _20b1a4d23_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _20b1a5164_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _20b1a53a6_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _20b1a554e_showInfo(void);
void entry_point(void);
inline void _20b1a6077_enableVtp(void);
inline void _20b1a6242_init(void);
inline void _1ad4bd40e_init(void);
inline jule::Ptr<_209c24d39_File> _1ad4bd6c8_openOutput(jule::Str* _4316_path);
inline void _1ad4bd871_clearObjects(void);
inline void _1ad4bdb7e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd);
inline jule::Bool _1ad4bde48_isCppSourceFile(jule::Str _9920_path);
inline void _1ad4be179_pushCompCmdClang(_209e0d4d9_StrBuilder* _10726_cmd);
inline void _1ad4be3aa_pushCompCmdGcc(_209e0d4d9_StrBuilder* _13324_cmd);
inline __jule_tuple_str__jule_tuple_str _1ad4be83e_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ac92a43d_IR>* _15936_ir);
inline jule::Str _1ad4be9c6_getCompilePath(void);
inline void _1ad4bec07_applyTargetIndependentOptimizations(jule::Ptr<_1ac92a43d_IR>* _20545_ir);
inline void _1ad4beda0_checkCompilerFlag(void);
inline void _1ad4c00ae_checkTargetArch(jule::Str _22720_arch);
inline void _1ad4c02e0_checkTargetOs(jule::Str _23518_os);
inline void _1ad4c0521_checkTargetFlag(jule::Str* _24321_target);
inline void _1ad4c0752_checkOptFlag(jule::Str* _26618_opt);
inline void _1ad4c0b1a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ad4c0cd5_checkFlags(jule::Slice<jule::Str>* _29216_args);
inline void _1ad4c0ee4_setupSemaFlags(jule::I32* _33724_flags);
inline jule::Ptr<_1ac92a43d_IR> _1ad4c12ad_buildIr(jule::Slice<jule::Str>* _34313_args);
inline void _1ad4c14de_compileCommand(jule::Slice<jule::Str>* _38324_args);


struct _1abd718a7_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1abd7109e_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB);
	void(*_1abd714bc_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB);
	jule::I32(*_1abd71753_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1ab6746e9_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ab6734c8_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path);
	jule::Str(*_1ab67375e_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ab673aa0_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2522_id);
	jule::Ptr<_1ab67760e_ImportInfo>(*_1ab673de1_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path);
	__jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log(*_1ab6742dc_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod);
	void(*_1ab674595_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab67760e_ImportInfo> _4131__0);
};

struct _1abe42879_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1abe423d4_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1abe42725_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other);
};

struct _1abe62921_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1ab67760e_ImportInfo>(*_1abe60c0a_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector);
	jule::Ptr<_1abda8d2e_Var>(*_1abe61106_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded);
	jule::Ptr<_1abe4203d_TypeAlias>(*_1abe61502_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded);
	jule::Ptr<_1abd416ce_Struct>(*_1abe618ed_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded);
	jule::Ptr<_1abd566a0_Fn>(*_1abe61ce9_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded);
	jule::Ptr<_1abd69a59_Trait>(*_1abe6213a_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident);
	jule::Ptr<_1abd6c265_Enum>(*_1abe6247b_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident);
	jule::Ptr<_1abd6d970_TypeEnum>(*_1abe627bc_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident);
};

struct _1ad4b6160_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ad48501e_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1ad485162_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ad4852a5_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1ad4b600b_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd7425b_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd77517_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd79ea9_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd7d73d_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd7ed05_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab646e5d_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac927b33_JuleImporter>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4445c_StructIns>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd59681_FnIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd69a59_Trait>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd6c265_Enum>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd6d970_TypeEnum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd71ac7_comptimeRange>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd7259a_comptimeStructField>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd75856_comptimeStatic>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd78b12_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd7b5a4_comptimeParam>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd81400_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab64460e_comptimeValue>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab648558_comptimeFile>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe42d30_TypeKind>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe4a909_Prim>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe4e435_Sptr>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe4ee08_Slc>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe509ec_Tuple>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe5159c_Map>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe52229_Arr>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe52bec_Ptr>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad43dd0d_customType>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab65ca34_scopeChecker>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab67760e_ImportInfo>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab67a535_Package>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6979a3_Sema>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe0b5bd_SymbolTable>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b20ec6cc_Flag>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b294a2e3_Flag>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b294d956_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b295210d_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b2955771_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abda8d2e_Var>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd3c4aa_Impl>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd37362_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd3b60d_StructDecl>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd32505_FnDecl>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd3bd4a_TraitDecl>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd336b0_VarDecl>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd399b3_EnumDecl>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd3a94d_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b9aac4c5_Const>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab657e19_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab655576_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd5213a_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe11936_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd53449_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd50db4_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4e401_BuiltinOutCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4e7ca_BuiltinOutlnCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd5007d_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd50534_BuiltinAssertCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd51c61_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd51887_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd53746_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4a83c_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6561ae_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6564ab_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd34b34_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab656962_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd3553b_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6573ad_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab657743_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6582e3_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6586bc_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab658b73_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4b1bc_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab659129_MultiAssign>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab659789_Match>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab65a9aa_FallSt>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab657b1c_BreakSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab65ad51_RetSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd30866_ScopeTree>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd24b79_Expr>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd36b25_Conditional>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd34309_Iter>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd35cde_ContSt>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2ce29_LabelSt>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2d303_GotoSt>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2e2e3_AssignSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd38132_MatchCase>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2d600_FallSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd35915_BreakSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd33a89_RetSt>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2554d_UseExpr>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd566a0_Fn>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd416ce_Struct>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abe4203d_TypeAlias>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd22b11_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd21c75_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2236e_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd218e0_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2335e_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd22072_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd20e50_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd27110_VariadicExpr>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4ac16_SliceExprModel>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd29398_FieldExprPair>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2a9a4_KeyValPair>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd26494_IdentExpr>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2576d_TupleExpr>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4e027_TupleExprModel>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd288a3_FnCallExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd52c73_RuneExprModel>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4dc2a_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd27c8c_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd21219_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd26c36_UnaryExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd20845_TypeDecl>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd278b3_NsSelectionExpr>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd215e3_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4c586_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd49e8a_CastingExprModel>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2b1d0_SliceExpr>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4960a_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4d851_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4cb19_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4d4aa_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4c003_MapExprModel>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4b673_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd24e43_RangeExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd25b14_LitExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd25edd_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2bb3c_IndexingExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2c29c_SlicingExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd274d9_CastExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd29bc3_StructLit>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd2a179_BraceLit>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd28243_BinaryExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd48c36_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4885c_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd49907_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd4eba4_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd509da_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd511b1_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd514ad_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd527de_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd529cb_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd53070_IntegratedToStrExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03b467_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03dd4e_StrRuneIter>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03ca40_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03d59b_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03d975_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03b7db_SwapExprModel>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03bbb5_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03c4ac_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03cd3c_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03e14b_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03c039_RefExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abd49264_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03e448_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac03d1c2_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1b00b4014_1ae32a798(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1abd74d94_ready(_self_.as<_1abd7425b_comptimeStructFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4014_1aee22900(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1abd78150_ready(_self_.as<_1abd77517_comptimeStatics>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4014_1aee10ee8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1abd7aae2_ready(_self_.as<_1abd79ea9_comptimeEnumFields>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4014_1aee16372(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1abd7e343_ready(_self_.as<_1abd7d73d_comptimeParams>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4014_1aee1e798(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1abd8093d_ready(_self_.as<_1abd7ed05_comptimeTypeInfos>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4014_1aee328cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abda8d2e_Var>* _2429_keyA, jule::Ptr<_1abda8d2e_Var>* _2446_keyB) {
	_1ab647a96_ready(_self_.as<_1ab646e5d_comptimeFiles>().alloc, _2429_keyA, _2446_keyB);
}
inline void __jule_trait_method_1b00b4652_1ae32a798(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1abd752b2_step(_self_.as<_1abd7425b_comptimeStructFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1b00b4652_1aee22900(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1abd7856d_step(_self_.as<_1abd77517_comptimeStatics>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1b00b4652_1aee10ee8(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1abd7b010_step(_self_.as<_1abd79ea9_comptimeEnumFields>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1b00b4652_1aee16372(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1abd7e761_step(_self_.as<_1abd7d73d_comptimeParams>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1b00b4652_1aee1e798(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1abd80d5b_step(_self_.as<_1abd7ed05_comptimeTypeInfos>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline void __jule_trait_method_1b00b4652_1aee328cc(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2523_i, jule::Ptr<_1abda8d2e_Var>* _2536_keyA, jule::Ptr<_1abda8d2e_Var>* _2553_keyB) {
	_1ab647eb4_step(_self_.as<_1ab646e5d_comptimeFiles>().alloc, _2523_i, _2536_keyA, _2553_keyB);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1ae32a798(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd75548_len(_self_.as<_1abd7425b_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1aee22900(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd78804_len(_self_.as<_1abd77517_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1aee10ee8(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7b296_len(_self_.as<_1abd79ea9_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1aee16372(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7e9e7_len(_self_.as<_1abd7d73d_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1aee1e798(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd810e2_len(_self_.as<_1abd7ed05_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1b00b4d8e_1aee328cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab64824a_len(_self_.as<_1ab646e5d_comptimeFiles>().alloc);
}
inline void __jule_trait_method_1b00b5312_1b196cd94(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_path) {
	_1ac928705_SetModPath(_self_.as<_1ac927b33_JuleImporter>().alloc, _1729_path);
}
inline jule::Str __jule_trait_method_1b00b57b8_1b196cd94(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac92898b_GetModPath(_self_.as<_1ac927b33_JuleImporter>().alloc);
}
inline jule::Str __jule_trait_method_1b00b5c2a_1b196cd94(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2522_id) {
	return _1ac928ccc_ModById(_self_.as<_1ac927b33_JuleImporter>().alloc, _2522_id);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b6247_1b196cd94(jule::Ptr<jule::Uintptr> _self_, jule::Str _3128_path) {
	return _1ac92911d_GetImport(_self_.as<_1ac927b33_JuleImporter>().alloc, _3128_path);
}
inline __jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_trait_method_1b00b67ca_1b196cd94(jule::Ptr<jule::Uintptr> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ac929519_ImportPackage(_self_.as<_1ac927b33_JuleImporter>().alloc, _3732_path, _3743_update_mod);
}
inline void __jule_trait_method_1b00b7215_1b196cd94(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ab67760e_ImportInfo> _4131__0) {
	_1ac9297c2_Imported(_self_.as<_1ac927b33_JuleImporter>().alloc, _4131__0);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae2140cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd447d1_Str(_self_.as<_1abd4445c_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae213571(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd599c2_Str(_self_.as<_1abd59681_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae22adc4(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd69e22_Str(_self_.as<_1abd69a59_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae205860(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd6c5d9_Str(_self_.as<_1abd6c265_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae20c7ce(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd6dcb1_Str(_self_.as<_1abd6d970_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee1d104(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd71e4b_Str(_self_.as<_1abd71ac7_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae32d3d3(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd72963_Str(_self_.as<_1abd7259a_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae32a798(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd745d0_Str(_self_.as<_1abd7425b_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee2553a(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd75bca_Str(_self_.as<_1abd75856_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee22900(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7788b_Str(_self_.as<_1abd77517_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee13b99(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd79096_Str(_self_.as<_1abd78b12_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee10ee8(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7a32d_Str(_self_.as<_1abd79ea9_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee18ece(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7b928_Str(_self_.as<_1abd7b5a4_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee16372(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd7da7e_Str(_self_.as<_1abd7d73d_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee1e798(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd80179_Str(_self_.as<_1abd7ed05_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae23cb61(jule::Ptr<jule::Uintptr> _self_) {
	return _1abd81774_Str(_self_.as<_1abd81400_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee28d46(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab644983_Str(_self_.as<_1ab64460e_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee328cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab6472d2_Str(_self_.as<_1ab646e5d_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1aee2e09e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab648b1e_Str(_self_.as<_1ab648558_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae1e5124(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe431e8_Str(_self_.as<_1abe42d30_TypeKind>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae1eac2e(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe4ac4a_Str(_self_.as<_1abe4a909_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae2023b7(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe4e7a9_Str(_self_.as<_1abe4e435_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae211c45(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe5038c_Str(_self_.as<_1abe4ee08_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae276837(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe50d71_Str(_self_.as<_1abe509ec_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae274cec(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe51921_Str(_self_.as<_1abe5159c_Map>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae21035e(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe5259d_Str(_self_.as<_1abe52229_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1ae203b38(jule::Ptr<jule::Uintptr> _self_) {
	return _1abe53071_Str(_self_.as<_1abe52bec_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1b00b7754_1b2212d20(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad43e1c6_Str(_self_.as<_1ad43dd0d_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae2140cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd44b22_Equal(_self_.as<_1abd4445c_StructIns>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae213571(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd59d13_Equal(_self_.as<_1abd59681_FnIns>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae22adc4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd6a263_Equal(_self_.as<_1abd69a59_Trait>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae205860(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd6c92a_Equal(_self_.as<_1abd6c265_Enum>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae20c7ce(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd6e102_Equal(_self_.as<_1abd6d970_TypeEnum>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee1d104(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd7228c_Equal(_self_.as<_1abd71ac7_comptimeRange>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae32d3d3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd72ca4_Equal(_self_.as<_1abd7259a_comptimeStructField>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae32a798(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd74921_Equal(_self_.as<_1abd7425b_comptimeStructFields>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee2553a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd7601b_Equal(_self_.as<_1abd75856_comptimeStatic>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee22900(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd77bcc_Equal(_self_.as<_1abd77517_comptimeStatics>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee13b99(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd793d7_Equal(_self_.as<_1abd78b12_comptimeEnumField>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee10ee8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd7a66e_Equal(_self_.as<_1abd79ea9_comptimeEnumFields>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee18ece(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd7bc69_Equal(_self_.as<_1abd7b5a4_comptimeParam>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee16372(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd7ddc0_Equal(_self_.as<_1abd7d73d_comptimeParams>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee1e798(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd804ba_Equal(_self_.as<_1abd7ed05_comptimeTypeInfos>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae23cb61(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abd81ab5_Equal(_self_.as<_1abd81400_comptimeTypeInfo>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee28d46(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1ab644cc4_Equal(_self_.as<_1ab64460e_comptimeValue>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee328cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1ab647623_Equal(_self_.as<_1ab646e5d_comptimeFiles>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1aee2e09e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1ab648e60_Equal(_self_.as<_1ab648558_comptimeFile>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae1e5124(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe43539_Equal(_self_.as<_1abe42d30_TypeKind>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae1eac2e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe4b08b_Equal(_self_.as<_1abe4a909_Prim>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae2023b7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe4eaea_Equal(_self_.as<_1abe4e435_Sptr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae211c45(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe506cd_Equal(_self_.as<_1abe4ee08_Slc>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae276837(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe511b2_Equal(_self_.as<_1abe509ec_Tuple>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae274cec(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe51c62_Equal(_self_.as<_1abe5159c_Map>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae21035e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe528de_Equal(_self_.as<_1abe52229_Arr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1ae203b38(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1abe533b2_Equal(_self_.as<_1abe52bec_Ptr>(), _5621_other);
}
inline jule::Bool __jule_trait_method_1b00b7c0a_1b2212d20(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _5621_other) {
	return _1ad43e517_Equal(_self_.as<_1ad43dd0d_customType>(), _5621_other);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b82c1_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector) {
	return _1ab65cec9_SelectPackage(_self_.as<_1ab65ca34_scopeChecker>().alloc, _932_selector);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b82c1_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector) {
	return _1ab677ae8_SelectPackage(_self_.as<_1ab67760e_ImportInfo>().alloc, _932_selector);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b82c1_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector) {
	return _1ab67a9ca_SelectPackage(_self_.as<_1ab67a535_Package>().alloc, _932_selector);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b82c1_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector) {
	return _1ab697e48_SelectPackage(_self_.as<_1ab6979a3_Sema>().alloc, _932_selector);
}
inline jule::Ptr<_1ab67760e_ImportInfo> __jule_trait_method_1b00b82c1_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _932_selector) {
	return _1abe0baa7_SelectPackage(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _932_selector);
}
inline jule::Ptr<_1abda8d2e_Var> __jule_trait_method_1b00b915c_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab65d3c5_FindVar(_self_.as<_1ab65ca34_scopeChecker>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1abda8d2e_Var> __jule_trait_method_1b00b915c_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab677ee4_FindVar(_self_.as<_1ab67760e_ImportInfo>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1abda8d2e_Var> __jule_trait_method_1b00b915c_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab67adc6_FindVar(_self_.as<_1ab67a535_Package>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1abda8d2e_Var> __jule_trait_method_1b00b915c_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1ab698344_FindVar(_self_.as<_1ab6979a3_Sema>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1abda8d2e_Var> __jule_trait_method_1b00b915c_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1abe0bea3_FindVar(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _1326_ident, _1338_binded);
}
inline jule::Ptr<_1abe4203d_TypeAlias> __jule_trait_method_1b00b9789_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab65d7c1_FindTypeAlias(_self_.as<_1ab65ca34_scopeChecker>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1abe4203d_TypeAlias> __jule_trait_method_1b00b9789_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab6783e0_FindTypeAlias(_self_.as<_1ab67760e_ImportInfo>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1abe4203d_TypeAlias> __jule_trait_method_1b00b9789_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab67b2c2_FindTypeAlias(_self_.as<_1ab67a535_Package>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1abe4203d_TypeAlias> __jule_trait_method_1b00b9789_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1ab698740_FindTypeAlias(_self_.as<_1ab6979a3_Sema>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1abe4203d_TypeAlias> __jule_trait_method_1b00b9789_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1abe0c39e_FindTypeAlias(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _1732_ident, _1744_binded);
}
inline jule::Ptr<_1abd416ce_Struct> __jule_trait_method_1b00b9e1b_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab65dbbc_FindStruct(_self_.as<_1ab65ca34_scopeChecker>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1abd416ce_Struct> __jule_trait_method_1b00b9e1b_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab6787db_FindStruct(_self_.as<_1ab67760e_ImportInfo>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1abd416ce_Struct> __jule_trait_method_1b00b9e1b_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab67b6bd_FindStruct(_self_.as<_1ab67a535_Package>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1abd416ce_Struct> __jule_trait_method_1b00b9e1b_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1ab698b3b_FindStruct(_self_.as<_1ab6979a3_Sema>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1abd416ce_Struct> __jule_trait_method_1b00b9e1b_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1abe0c79a_FindStruct(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _2129_ident, _2141_binded);
}
inline jule::Ptr<_1abd566a0_Fn> __jule_trait_method_1b00ba59d_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab65e0b8_FindFn(_self_.as<_1ab65ca34_scopeChecker>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1abd566a0_Fn> __jule_trait_method_1b00ba59d_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab678bd7_FindFn(_self_.as<_1ab67760e_ImportInfo>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1abd566a0_Fn> __jule_trait_method_1b00ba59d_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab67bab9_FindFn(_self_.as<_1ab67a535_Package>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1abd566a0_Fn> __jule_trait_method_1b00ba59d_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1ab699037_FindFn(_self_.as<_1ab6979a3_Sema>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1abd566a0_Fn> __jule_trait_method_1b00ba59d_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1abe0cb96_FindFn(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _2525_ident, _2537_binded);
}
inline jule::Ptr<_1abd69a59_Trait> __jule_trait_method_1b00bac0d_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1ab65e409_FindTrait(_self_.as<_1ab65ca34_scopeChecker>().alloc, _2928_ident);
}
inline jule::Ptr<_1abd69a59_Trait> __jule_trait_method_1b00bac0d_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1ab679028_FindTrait(_self_.as<_1ab67760e_ImportInfo>().alloc, _2928_ident);
}
inline jule::Ptr<_1abd69a59_Trait> __jule_trait_method_1b00bac0d_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1ab67be0a_FindTrait(_self_.as<_1ab67a535_Package>().alloc, _2928_ident);
}
inline jule::Ptr<_1abd69a59_Trait> __jule_trait_method_1b00bac0d_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1ab699378_FindTrait(_self_.as<_1ab6979a3_Sema>().alloc, _2928_ident);
}
inline jule::Ptr<_1abd69a59_Trait> __jule_trait_method_1b00bac0d_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _2928_ident) {
	return _1abe0ced7_FindTrait(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _2928_ident);
}
inline jule::Ptr<_1abd6c265_Enum> __jule_trait_method_1b00bb2b3_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1ab65e74a_FindEnum(_self_.as<_1ab65ca34_scopeChecker>().alloc, _3327_ident);
}
inline jule::Ptr<_1abd6c265_Enum> __jule_trait_method_1b00bb2b3_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1ab679369_FindEnum(_self_.as<_1ab67760e_ImportInfo>().alloc, _3327_ident);
}
inline jule::Ptr<_1abd6c265_Enum> __jule_trait_method_1b00bb2b3_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1ab67c24b_FindEnum(_self_.as<_1ab67a535_Package>().alloc, _3327_ident);
}
inline jule::Ptr<_1abd6c265_Enum> __jule_trait_method_1b00bb2b3_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1ab6996b9_FindEnum(_self_.as<_1ab6979a3_Sema>().alloc, _3327_ident);
}
inline jule::Ptr<_1abd6c265_Enum> __jule_trait_method_1b00bb2b3_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _3327_ident) {
	return _1abe0d328_FindEnum(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _3327_ident);
}
inline jule::Ptr<_1abd6d970_TypeEnum> __jule_trait_method_1b00bb88a_1ae2d5d5d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1ab65ea8b_FindTypeEnum(_self_.as<_1ab65ca34_scopeChecker>().alloc, _3731_ident);
}
inline jule::Ptr<_1abd6d970_TypeEnum> __jule_trait_method_1b00bb88a_1ae217762(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1ab6796aa_FindTypeEnum(_self_.as<_1ab67760e_ImportInfo>().alloc, _3731_ident);
}
inline jule::Ptr<_1abd6d970_TypeEnum> __jule_trait_method_1b00bb88a_1ae218862(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1ab67c58c_FindTypeEnum(_self_.as<_1ab67a535_Package>().alloc, _3731_ident);
}
inline jule::Ptr<_1abd6d970_TypeEnum> __jule_trait_method_1b00bb88a_1ae21573d(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1ab699a0a_FindTypeEnum(_self_.as<_1ab6979a3_Sema>().alloc, _3731_ident);
}
inline jule::Ptr<_1abd6d970_TypeEnum> __jule_trait_method_1b00bb88a_1ae216200(jule::Ptr<jule::Uintptr> _self_, jule::Str _3731_ident) {
	return _1abe0d669_FindTypeEnum(_self_.as<_1abe0b5bd_SymbolTable>().alloc, _3731_ident);
}
inline jule::Str __jule_trait_method_1b2957685_1b20ec6cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1b20ecaea_Name(_self_.as<_1b20ec6cc_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b2957685_1b294a2e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2949e6e_Name(_self_.as<_1b294a2e3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b2957685_1b294d956(jule::Ptr<jule::Uintptr> _self_) {
	return _1b294d5d2_Name(_self_.as<_1b294d956_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b2957685_1b295210d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2951c89_Name(_self_.as<_1b295210d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b2957685_1b2955771(jule::Ptr<jule::Uintptr> _self_) {
	return _1b29553ec_Name(_self_.as<_1b2955771_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b2958dd4_1b20ec6cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1b20ed007_Short(_self_.as<_1b20ec6cc_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b2958dd4_1b294a2e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1b294a865_Short(_self_.as<_1b294a2e3_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b2958dd4_1b294d956(jule::Ptr<jule::Uintptr> _self_) {
	return _1b294dec8_Short(_self_.as<_1b294d956_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b2958dd4_1b295210d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2952680_Short(_self_.as<_1b295210d_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1b2958dd4_1b2955771(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2955ce3_Short(_self_.as<_1b2955771_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b29592e1_1b20ec6cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1b20ecc4e_What(_self_.as<_1b20ec6cc_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b29592e1_1b294a2e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1b294a5ce_What(_self_.as<_1b294a2e3_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b29592e1_1b294d956(jule::Ptr<jule::Uintptr> _self_) {
	return _1b294dc42_What(_self_.as<_1b294d956_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b29592e1_1b295210d(jule::Ptr<jule::Uintptr> _self_) {
	return _1b29523e9_What(_self_.as<_1b295210d_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1b29592e1_1b2955771(jule::Ptr<jule::Uintptr> _self_) {
	return _1b2955a5c_What(_self_.as<_1b2955771_Flag>().alloc);
}
inline void __jule_trait_method_1b2959742_1b20ec6cc(jule::Ptr<jule::Uintptr> _self_) {
	_1b20ecda3_Reset(_self_.as<_1b20ec6cc_Flag>().alloc);
}
inline void __jule_trait_method_1b2959742_1b294a2e3(jule::Ptr<jule::Uintptr> _self_) {
	_1b294a722_Reset(_self_.as<_1b294a2e3_Flag>().alloc);
}
inline void __jule_trait_method_1b2959742_1b294d956(jule::Ptr<jule::Uintptr> _self_) {
	_1b294dd85_Reset(_self_.as<_1b294d956_Flag>().alloc);
}
inline void __jule_trait_method_1b2959742_1b295210d(jule::Ptr<jule::Uintptr> _self_) {
	_1b295253c_Reset(_self_.as<_1b295210d_Flag>().alloc);
}
inline void __jule_trait_method_1b2959742_1b2955771(jule::Ptr<jule::Uintptr> _self_) {
	_1b2955ba0_Reset(_self_.as<_1b2955771_Flag>().alloc);
}


static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1ae32a798,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1ae32a798,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1ae32a798,
};
static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1aee22900,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1aee22900,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1aee22900,
};
static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1aee10ee8,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1aee10ee8,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1aee10ee8,
};
static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1aee16372,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1aee16372,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1aee16372,
};
static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1aee1e798,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1aee1e798,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1aee1e798,
};
static _1abd718a7_comptimeRangeKindMptrData _1abd718a7_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1abd7109e_ready=__jule_trait_method_1b00b4014_1aee328cc,
	._1abd714bc_step=__jule_trait_method_1b00b4652_1aee328cc,
	._1abd71753_len=__jule_trait_method_1b00b4d8e_1aee328cc,
};
static _1ab6746e9_ImporterMptrData _1ab6746e9_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator6,
	._1ab6734c8_SetModPath=__jule_trait_method_1b00b5312_1b196cd94,
	._1ab67375e_GetModPath=__jule_trait_method_1b00b57b8_1b196cd94,
	._1ab673aa0_ModById=__jule_trait_method_1b00b5c2a_1b196cd94,
	._1ab673de1_GetImport=__jule_trait_method_1b00b6247_1b196cd94,
	._1ab6742dc_ImportPackage=__jule_trait_method_1b00b67ca_1b196cd94,
	._1ab674595_Imported=__jule_trait_method_1b00b7215_1b196cd94,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae2140cc,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae2140cc,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator8,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae213571,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae213571,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator9,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae22adc4,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae22adc4,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator10,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae205860,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae205860,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator11,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae20c7ce,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae20c7ce,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator12,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee1d104,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee1d104,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator13,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae32d3d3,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae32d3d3,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae32a798,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae32a798,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator14,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee2553a,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee2553a,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee22900,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee22900,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator15,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee13b99,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee13b99,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee10ee8,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee10ee8,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator16,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee18ece,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee18ece,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee16372,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee16372,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee1e798,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee1e798,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator17,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae23cb61,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae23cb61,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator18,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee28d46,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee28d46,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee328cc,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee328cc,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator19,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1aee2e09e,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1aee2e09e,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator20,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae1e5124,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae1e5124,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae1eac2e,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae1eac2e,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae2023b7,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae2023b7,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae211c45,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae211c45,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae276837,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae276837,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae274cec,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae274cec,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae21035e,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae21035e,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1ae203b38,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1ae203b38,
};
static _1abe42879_KindMptrData _1abe42879_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1abe423d4_Str=__jule_trait_method_1b00b7754_1b2212d20,
	._1abe42725_Equal=__jule_trait_method_1b00b7c0a_1b2212d20,
};
static _1abe62921_LookupMptrData _1abe62921_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator29,
	._1abe60c0a_SelectPackage=__jule_trait_method_1b00b82c1_1ae2d5d5d,
	._1abe61106_FindVar=__jule_trait_method_1b00b915c_1ae2d5d5d,
	._1abe61502_FindTypeAlias=__jule_trait_method_1b00b9789_1ae2d5d5d,
	._1abe618ed_FindStruct=__jule_trait_method_1b00b9e1b_1ae2d5d5d,
	._1abe61ce9_FindFn=__jule_trait_method_1b00ba59d_1ae2d5d5d,
	._1abe6213a_FindTrait=__jule_trait_method_1b00bac0d_1ae2d5d5d,
	._1abe6247b_FindEnum=__jule_trait_method_1b00bb2b3_1ae2d5d5d,
	._1abe627bc_FindTypeEnum=__jule_trait_method_1b00bb88a_1ae2d5d5d,
};
static _1abe62921_LookupMptrData _1abe62921_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator30,
	._1abe60c0a_SelectPackage=__jule_trait_method_1b00b82c1_1ae217762,
	._1abe61106_FindVar=__jule_trait_method_1b00b915c_1ae217762,
	._1abe61502_FindTypeAlias=__jule_trait_method_1b00b9789_1ae217762,
	._1abe618ed_FindStruct=__jule_trait_method_1b00b9e1b_1ae217762,
	._1abe61ce9_FindFn=__jule_trait_method_1b00ba59d_1ae217762,
	._1abe6213a_FindTrait=__jule_trait_method_1b00bac0d_1ae217762,
	._1abe6247b_FindEnum=__jule_trait_method_1b00bb2b3_1ae217762,
	._1abe627bc_FindTypeEnum=__jule_trait_method_1b00bb88a_1ae217762,
};
static _1abe62921_LookupMptrData _1abe62921_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator31,
	._1abe60c0a_SelectPackage=__jule_trait_method_1b00b82c1_1ae218862,
	._1abe61106_FindVar=__jule_trait_method_1b00b915c_1ae218862,
	._1abe61502_FindTypeAlias=__jule_trait_method_1b00b9789_1ae218862,
	._1abe618ed_FindStruct=__jule_trait_method_1b00b9e1b_1ae218862,
	._1abe61ce9_FindFn=__jule_trait_method_1b00ba59d_1ae218862,
	._1abe6213a_FindTrait=__jule_trait_method_1b00bac0d_1ae218862,
	._1abe6247b_FindEnum=__jule_trait_method_1b00bb2b3_1ae218862,
	._1abe627bc_FindTypeEnum=__jule_trait_method_1b00bb88a_1ae218862,
};
static _1abe62921_LookupMptrData _1abe62921_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator32,
	._1abe60c0a_SelectPackage=__jule_trait_method_1b00b82c1_1ae21573d,
	._1abe61106_FindVar=__jule_trait_method_1b00b915c_1ae21573d,
	._1abe61502_FindTypeAlias=__jule_trait_method_1b00b9789_1ae21573d,
	._1abe618ed_FindStruct=__jule_trait_method_1b00b9e1b_1ae21573d,
	._1abe61ce9_FindFn=__jule_trait_method_1b00ba59d_1ae21573d,
	._1abe6213a_FindTrait=__jule_trait_method_1b00bac0d_1ae21573d,
	._1abe6247b_FindEnum=__jule_trait_method_1b00bb2b3_1ae21573d,
	._1abe627bc_FindTypeEnum=__jule_trait_method_1b00bb88a_1ae21573d,
};
static _1abe62921_LookupMptrData _1abe62921_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator33,
	._1abe60c0a_SelectPackage=__jule_trait_method_1b00b82c1_1ae216200,
	._1abe61106_FindVar=__jule_trait_method_1b00b915c_1ae216200,
	._1abe61502_FindTypeAlias=__jule_trait_method_1b00b9789_1ae216200,
	._1abe618ed_FindStruct=__jule_trait_method_1b00b9e1b_1ae216200,
	._1abe61ce9_FindFn=__jule_trait_method_1b00ba59d_1ae216200,
	._1abe6213a_FindTrait=__jule_trait_method_1b00bac0d_1ae216200,
	._1abe6247b_FindEnum=__jule_trait_method_1b00bb2b3_1ae216200,
	._1abe627bc_FindTypeEnum=__jule_trait_method_1b00bb88a_1ae216200,
};
static _1ad4b6160_CommonFlagMptrData _1ad4b6160_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator34,
	._1ad48501e_Name=__jule_trait_method_1b2957685_1b20ec6cc,
	._1ad485162_Short=__jule_trait_method_1b2958dd4_1b20ec6cc,
	._1ad4852a5_What=__jule_trait_method_1b29592e1_1b20ec6cc,
	._1ad4b600b_Reset=__jule_trait_method_1b2959742_1b20ec6cc,
};
static _1ad4b6160_CommonFlagMptrData _1ad4b6160_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator35,
	._1ad48501e_Name=__jule_trait_method_1b2957685_1b294a2e3,
	._1ad485162_Short=__jule_trait_method_1b2958dd4_1b294a2e3,
	._1ad4852a5_What=__jule_trait_method_1b29592e1_1b294a2e3,
	._1ad4b600b_Reset=__jule_trait_method_1b2959742_1b294a2e3,
};
static _1ad4b6160_CommonFlagMptrData _1ad4b6160_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator36,
	._1ad48501e_Name=__jule_trait_method_1b2957685_1b294d956,
	._1ad485162_Short=__jule_trait_method_1b2958dd4_1b294d956,
	._1ad4852a5_What=__jule_trait_method_1b29592e1_1b294d956,
	._1ad4b600b_Reset=__jule_trait_method_1b2959742_1b294d956,
};
static _1ad4b6160_CommonFlagMptrData _1ad4b6160_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator37,
	._1ad48501e_Name=__jule_trait_method_1b2957685_1b295210d,
	._1ad485162_Short=__jule_trait_method_1b2958dd4_1b295210d,
	._1ad4852a5_What=__jule_trait_method_1b29592e1_1b295210d,
	._1ad4b600b_Reset=__jule_trait_method_1b2959742_1b295210d,
};
static _1ad4b6160_CommonFlagMptrData _1ad4b6160_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator38,
	._1ad48501e_Name=__jule_trait_method_1b2957685_1b2955771,
	._1ad485162_Short=__jule_trait_method_1b2958dd4_1b2955771,
	._1ad4852a5_What=__jule_trait_method_1b29592e1_1b2955771,
	._1ad4b600b_Reset=__jule_trait_method_1b2959742_1b2955771,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator39, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator40, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator8, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1abd59681_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator46, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1abda8d2e_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator7, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1abd4445c_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator9, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1abd69a59_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator47, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1abd3c4aa_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator48, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1abd37362_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator49, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1abd3b60d_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator50, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1abd32505_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator51, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1abd3bd4a_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator52, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1abd336b0_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator53, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1abd399b3_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator54, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1abd3a94d_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator55, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1b9aac4c5_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator56, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ab657e19_Label> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator57, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1ab655576_Scope> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator58, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator59, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1abe11936_Data> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator60, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1abd53449_BackendEmitExprModel> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator61, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator62, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator63, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator64, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator65, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator66, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1abd51c61_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator67, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator68, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1abd53746_FreeExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator69, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1abd4a83c_FnCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator70, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ab6561ae_Conditional> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator71, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ab6564ab_InfIter> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator72, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1abd34b34_WhileKind> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator73, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ab656962_WhileIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator74, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1abd3553b_RangeKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator75, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ab6573ad_RangeIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator76, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ab657743_ContSt> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator77, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ab6582e3_GotoSt> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator78, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ab6586bc_Postfix> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator79, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1ab658b73_Assign> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator80, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1abd4b1bc_IndexingExprModel> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator81, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ab659129_MultiAssign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator82, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ab659789_Match> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator83, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ab65a9aa_FallSt> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator84, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ab657b1c_BreakSt> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator85, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ab65ad51_RetSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator86, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1abd30866_ScopeTree> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator87, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1abd24b79_Expr> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator88, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1abd36b25_Conditional> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator89, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1abd34309_Iter> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator90, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1abd35cde_ContSt> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator91, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1abd2ce29_LabelSt> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator92, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1abd2d303_GotoSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator93, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1abd2e2e3_AssignSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator94, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1abd38132_MatchCase> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator95, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1abd2d600_FallSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator96, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1abd35915_BreakSt> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator97, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1abd33a89_RetSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator98, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1abd2554d_UseExpr> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator99, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1abd566a0_Fn> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator100, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1abd416ce_Struct> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator101, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1abe4203d_TypeAlias> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator10, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1abd6c265_Enum> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator11, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1abd6d970_TypeEnum> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator102, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1abd22b11_ArrTypeDecl> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator103, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1abd21c75_SlcTypeDecl> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator104, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1abd2236e_PtrTypeDecl> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator105, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1abd218e0_SptrTypeDecl> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator106, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1abd2335e_MapTypeDecl> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator107, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1abd22072_TupleTypeDecl> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator108, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1abd20e50_IdentTypeDecl> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator109, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1abd27110_VariadicExpr> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator110, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1abd4ac16_SliceExprModel> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator111, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1abd29398_FieldExprPair> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator112, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1abd2a9a4_KeyValPair> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator113, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1abd26494_IdentExpr> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator114, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1abd2576d_TupleExpr> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator115, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1abd4e027_TupleExprModel> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator116, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1abd288a3_FnCallExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator117, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1abd52c73_RuneExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator20, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1abe42d30_TypeKind> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator118, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1abd4dc2a_ArrayExprModel> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator119, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1abd27c8c_SubIdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator120, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1abd21219_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator121, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1abd26c36_UnaryExpr> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator122, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1abd20845_TypeDecl> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator123, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1abd278b3_NsSelectionExpr> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator124, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1abd215e3_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator125, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1abd4c586_SlicingExprModel> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator126, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1abd49e8a_CastingExprModel> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator127, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1abd2b1d0_SliceExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator128, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1abd4960a_StructLitExprModel> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator129, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1abd4d851_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator130, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator131, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator132, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1abd4c003_MapExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator133, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1abd4b673_AnonFnExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator134, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1abd24e43_RangeExpr> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator135, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1abd25b14_LitExpr> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator136, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1abd25edd_UnsafeExpr> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator137, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1abd2bb3c_IndexingExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator138, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1abd2c29c_SlicingExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator139, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1abd274d9_CastExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator140, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1abd29bc3_StructLit> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator141, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1abd2a179_BraceLit> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator142, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1abd28243_BinaryExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator143, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1abd48c36_UnaryExprModel> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator144, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1abd4885c_BinaryExprModel> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator145, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1abd49907_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator146, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator147, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator148, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator149, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator150, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1abd527de_SizeofExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator151, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1abd529cb_AlignofExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator152, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1abd53070_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator153, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1ac03b467_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator154, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ac03dd4e_StrRuneIter> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator155, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ac03ca40_MutSlicingExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator156, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ac03d59b_PushToSliceExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator157, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ac03d975_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator158, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ac03b7db_SwapExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator159, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ac03bbb5_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator160, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ac03c4ac_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator161, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ac03cd3c_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator162, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ac03e14b_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator163, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ac03c039_RefExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator164, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1abd49264_StructArgExprModel> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator165, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ac03e448_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type132 && jule::ptr_equal(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator166, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1ac03d1c2_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type133 && jule::ptr_equal(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator167, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator168, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator169, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator170, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type138_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator171, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type138 && __jule_any_type138_eq(any.data.alloc, (void*)&other); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type139_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type139_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type139 && __jule_any_type139_eq(any.data.alloc, (void*)&other); }
inline jule::Bool __jule_anon1b01a15a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd58608_ParamIns> _24027_p1, jule::Ptr<_1abd58608_ParamIns> _24042_p2);
struct __jule_anon_1b020c6e0_ctx{
	jule::Ptr<_1ab67760e_ImportInfo> *_49841_pkg;
};
static void __jule_anon_1b020c6e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b020c6e0_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b020c6e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _50045_spkg);
struct __jule_anon_1b0261ba6_ctx{
	jule::Ptr<_1abd7259a_comptimeStructField> _self_;
};
static void __jule_anon_1b0261ba6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0261ba6_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0261ba6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _8833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _8848_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0263b53_ctx{
	jule::Ptr<_1abd7259a_comptimeStructField> _self_;
};
static void __jule_anon_1b0263b53_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0263b53_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0263b53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _9533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _9548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0265aab_ctx{
	jule::Ptr<_1abd7259a_comptimeStructField> _self_;
};
static void __jule_anon_1b0265aab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0265aab_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0265aab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _10233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _10248_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0277859_ctx{
	jule::Ptr<_1abd75856_comptimeStatic> _self_;
};
static void __jule_anon_1b0277859_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0277859_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0277859(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _21133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _21148_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b02797b2_ctx{
	jule::Ptr<_1abd75856_comptimeStatic> _self_;
};
static void __jule_anon_1b02797b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02797b2_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02797b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _21833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _21848_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b027b71a_ctx{
	jule::Ptr<_1abd75856_comptimeStatic> _self_;
};
static void __jule_anon_1b027b71a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b027b71a_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b027b71a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _22533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _22548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b028853a_ctx{
	jule::Ptr<_1abd78b12_comptimeEnumField> _self_;
};
static void __jule_anon_1b028853a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b028853a_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b028853a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _31333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _31348_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b029d0aa_ctx{
	jule::Ptr<_1abd7b5a4_comptimeParam> _self_;
};
static void __jule_anon_1b029d0aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b029d0aa_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b029d0aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _43533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _43548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b02a0013_ctx{
	jule::Ptr<_1abd7b5a4_comptimeParam> _self_;
};
static void __jule_anon_1b02a0013_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a0013_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a0013(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44248_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b02a1e6b_ctx{
	jule::Ptr<_1abd7b5a4_comptimeParam> _self_;
};
static void __jule_anon_1b02a1e6b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a1e6b_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a1e6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44948_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b02a3dc4_ctx{
	jule::Ptr<_1abd7b5a4_comptimeParam> _self_;
};
static void __jule_anon_1b02a3dc4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b02a3dc4_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a3dc4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _45633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _45648_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b033663d_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b033663d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033663d_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033663d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _99833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _99848_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0338596_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0338596_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0338596_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0338596(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _100533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _100548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b033a4ee_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b033a4ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033a4ee_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033a4ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _101233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _101248_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b033c457_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b033c457_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033c457_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033c457(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _101933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _101948_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b033e3b0_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b033e3b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b033e3b0_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033e3b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _102633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _102648_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0341318_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0341318_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0341318_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0341318(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _103333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _103348_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0343271_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0343271_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0343271_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0343271(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _104033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _104048_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03451c9_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b03451c9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03451c9_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03451c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _104733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _104748_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03473a7_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b03473a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03473a7_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03473a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _105433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _105448_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b01e89a6_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b01e89a6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b01e89a6_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01e89a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _106133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _106148_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b01ea810_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b01ea810_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b01ea810_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ea810(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _106833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _106848_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b01ec768_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b01ec768_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b01ec768_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ec768(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _107533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _107548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b01ee6c1_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b01ee6c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b01ee6c1_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ee6c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _108233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _108248_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0361ed7_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0361ed7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0361ed7_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0361ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _108933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _108948_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0363e40_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0363e40_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0363e40_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0363e40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _109633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _109648_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0365d98_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0365d98_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0365d98_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0365d98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _110333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _110348_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0367d01_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0367d01_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0367d01_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0367d01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _111033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _111048_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0369c59_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b0369c59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0369c59_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0369c59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _111733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _111748_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b036bbb2_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b036bbb2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b036bbb2_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b036bbb2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _112433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _112448_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b036db1a_ctx{
	jule::Ptr<_1abd81400_comptimeTypeInfo> _self_;
};
static void __jule_anon_1b036db1a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b036db1a_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b036db1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _113133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _113148_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b038931c_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b038931c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b038931c_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038931c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _124733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _124748_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b038b275_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b038b275_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b038b275_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038b275(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _125433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _125448_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b038d1cd_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b038d1cd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b038d1cd_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038d1cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _126133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _126148_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0390136_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b0390136_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0390136_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0390136(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _126833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _126848_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b039208e_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b039208e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b039208e_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b039208e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _127533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _127548_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b0393ee7_ctx{
	jule::Ptr<_1ab64460e_comptimeValue> _self_;
};
static void __jule_anon_1b0393ee7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b0393ee7_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0393ee7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _128233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _128248_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03a6a32_ctx{
	jule::Ptr<_1ab648558_comptimeFile> _self_;
};
static void __jule_anon_1b03a6a32_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03a6a32_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03a6a32(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _139633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _139648_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03a898a_ctx{
	jule::Ptr<_1ab648558_comptimeFile> _self_;
};
static void __jule_anon_1b03a898a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03a898a_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03a898a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _140333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _140348_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03aa8e3_ctx{
	jule::Ptr<_1ab648558_comptimeFile> _self_;
};
static void __jule_anon_1b03aa8e3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03aa8e3_ctx>().dealloc(); }
inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03aa8e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _141033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _141048_fc, jule::Ptr<_1abe11936_Data>* );
struct __jule_anon_1b03b6426_ctx{
	jule::Ptr<_1ab64ccbb_constraintChecker> _self_;
};
static void __jule_anon_1b03b6426_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b03b6426_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b03b6426(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab6979a3_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _6439_generics);
struct __jule_anon_1aeea51e1_ctx{
	jule::Ptr<_1abd59681_FnIns> _110140_f;
	jule::Ptr<_1ab6979a3_Sema> _self_;
};
static void __jule_anon_1aeea51e1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1aeea51e1_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1aeea51e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab6979a3_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _110561_generics);
struct __jule_anon_1ae816cc8_ctx{
	jule::Ptr<_1abd278b3_NsSelectionExpr> _182934_s;
	jule::Str _18309_path;
};
static void __jule_anon_1ae816cc8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ae816cc8_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ae816cc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _183149_imp);
inline jule::Str __jule_anon1b17c4de9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def);
struct __jule_anon_1b1850b56_ctx{
	jule::Ptr<_1abd215e3_NamespaceTypeDecl> _151739_decl;
	jule::Str _15189_path;
};
static void __jule_anon_1b1850b56_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b1850b56_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b1850b56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _151949_imp);
struct __jule_anon_1b228d296_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
	jule::Bool _13713_ref;
};
static void __jule_anon_1b228d296_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b228d296_ctx>().dealloc(); }
inline void __jule_anon_1b228d296(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b2291d8d_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
	jule::Ptr<_1ab6573ad_RangeIter> *_12939_it;
};
static void __jule_anon_1b2291d8d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2291d8d_ctx>().dealloc(); }
inline void __jule_anon_1b2291d8d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b22a1364_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
};
static void __jule_anon_1b22a1364_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b22a1364_ctx>().dealloc(); }
inline void __jule_anon_1b22a1364(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b22a37d9_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
};
static void __jule_anon_1b22a37d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b22a37d9_ctx>().dealloc(); }
inline void __jule_anon_1b22a37d9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b22bc77b_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
};
static void __jule_anon_1b22bc77b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b22bc77b_ctx>().dealloc(); }
inline void __jule_anon_1b22bc77b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b23381dc_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
};
static void __jule_anon_1b23381dc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b23381dc_ctx>().dealloc(); }
inline void __jule_anon_1b23381dc(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b23394eb_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
	jule::Ptr<_1ab659789_Match> _63533_m;
};
static void __jule_anon_1b23394eb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b23394eb_ctx>().dealloc(); }
inline void __jule_anon_1b23394eb(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b24bc382_ctx{
	jule::Ptr<_1ad353d00_scopeCoder> _self_;
	jule::Ptr<_1abd4b673_AnonFnExprModel> _100537_m;
};
static void __jule_anon_1b24bc382_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b24bc382_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1b24bc382(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abda8d2e_Var> _101176_v);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b2968795(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22865_s, jule::I32 _22873_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b297165a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23666_s, jule::I32 _23674_base);
struct __jule_anon_1b28d7329_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b28d7329_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28d7329_ctx>().dealloc(); }
inline void __jule_anon_1b28d7329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _82744_pkg);
struct __jule_anon_1b28d8825_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b28d8825_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28d8825_ctx>().dealloc(); }
inline void __jule_anon_1b28d8825(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _84042_m);
struct __jule_anon_1b28dde35_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b28dde35_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28dde35_ctx>().dealloc(); }
inline void __jule_anon_1b28dde35(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _85344_pkg);
struct __jule_anon_1b28ee990_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
	jule::Ptr<_1abda8d2e_Var> _92027_v;
};
static void __jule_anon_1b28ee990_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28ee990_ctx>().dealloc(); }
inline void __jule_anon_1b28ee990(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b2901a91_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
	jule::Ptr<_1abda8d2e_Var> _92027_v;
};
static void __jule_anon_1b2901a91_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2901a91_ctx>().dealloc(); }
inline void __jule_anon_1b2901a91(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b203a296_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b203a296_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b203a296_ctx>().dealloc(); }
inline void __jule_anon_1b203a296(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b203b3da_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
	jule::Ptr<_1abda8d2e_Var> _92027_v;
};
static void __jule_anon_1b203b3da_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b203b3da_ctx>().dealloc(); }
inline void __jule_anon_1b203b3da(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1b2059a24_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2059a24_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2059a24_ctx>().dealloc(); }
inline void __jule_anon_1b2059a24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _106244_pkg);
struct __jule_anon_1b205adee_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
	jule::Ptr<_1abd4445c_StructIns> _107652_s;
};
static void __jule_anon_1b205adee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b205adee_ctx>().dealloc(); }
inline void __jule_anon_1b205adee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _107742_m);
struct __jule_anon_1b2068879_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2068879_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2068879_ctx>().dealloc(); }
inline void __jule_anon_1b2068879(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _111444_pkg);
struct __jule_anon_1b2086941_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2086941_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2086941_ctx>().dealloc(); }
inline void __jule_anon_1b2086941(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _123944_pkg);
struct __jule_anon_1b2087e1a_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2087e1a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2087e1a_ctx>().dealloc(); }
inline void __jule_anon_1b2087e1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _125537_file);
struct __jule_anon_1b2090be2_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2090be2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2090be2_ctx>().dealloc(); }
inline void __jule_anon_1b2090be2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _128444_pkg);
inline jule::Bool __jule_anon1b0255084(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _143028_pkg);
struct __jule_anon_1b28d824d_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b28d824d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28d824d_ctx>().dealloc(); }
inline void __jule_anon_1b28d824d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _82841_file);
struct __jule_anon_1b28ded37_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b28ded37_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b28ded37_ctx>().dealloc(); }
inline void __jule_anon_1b28ded37(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _85441_file);
struct __jule_anon_1b205a948_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b205a948_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b205a948_ctx>().dealloc(); }
inline void __jule_anon_1b205a948(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _106341_file);
struct __jule_anon_1b206977b_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b206977b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b206977b_ctx>().dealloc(); }
inline void __jule_anon_1b206977b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _111541_file);
struct __jule_anon_1b2087843_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
};
static void __jule_anon_1b2087843_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b2087843_ctx>().dealloc(); }
inline void __jule_anon_1b2087843(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _124041_file);
struct __jule_anon_1b205c917_ctx{
	jule::Ptr<_1ad42eb78_ObjectCoder> _self_;
	jule::Ptr<_1abd69a59_Trait> _106429_t;
};
static void __jule_anon_1b205c917_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1b205c917_ctx>().dealloc(); }
inline void __jule_anon_1b205c917(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _106854_m);
jule::Array<jule::Array<jule::Str,2>,5> _20b1a3ddd_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str::lit("help", 4),jule::Str::lit("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str::lit("version", 7),jule::Str::lit("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str::lit("tool", 4),jule::Str::lit("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str::lit("julenv", 6),jule::Str::lit("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str::lit("mod", 3),jule::Str::lit("Module management", 17)})});
jule::Str _1ad4bcbc2_OutDir = jule::Str::lit("dist", 4);
jule::Str _1ad4bce9c_OutName = jule::Str::lit("ir.cpp", 6);
jule::Str _1ad4bd255_Out = jule::Str();
jule::Str _1eb3ce117_Compiler = jule::Str();
jule::Str _1eb3c8b8e_CompilerPath = jule::Str();
jule::Str _1eb3ce447_CppStd = jule::Str::lit("cpp17", 5);
jule::Bool _1eb3ce678_Shadowing = false;
jule::Bool _1eb3ce931_Transpilation = false;
jule::Bool _1eb3cebd9_Test = false;
jule::Bool _1eb3cee92_RC = true;
jule::Bool _1eb3d035a_Safety = true;
jule::Bool _1eb3d059c_Production = false;
jule::Uintptr _209c0aa67_STDIN = _209c0b370_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
jule::Uintptr _209c0ad0e_STDOUT = _209c0b370_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
jule::Uintptr _209c0b10b_STDERR = _209c0b370_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
jule::Array<jule::U8,256> _209d2d5e6_first = jule::Array<jule::U8,256>({});
jule::Array<_209d2db9b_acceptRange,16> _209d2e042_acceptRanges = jule::Array<_209d2db9b_acceptRange,16>({_209d2db9b_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_209d2db9b_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_209d2db9b_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_209d2db9b_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_209d2db9b_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Ptr<_20b096330_RangeTable> _20b02e351__L = jule::new_ptr<_20b096330_RangeTable>(_20b096330_RangeTable{._field_R16=jule::Slice<_20b09587e_Range16>::make({_20b09587e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_20b09587e_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_20b09587e_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_20b09587e_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_20b09587e_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_20b09587e_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_20b09587e_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_20b09587e_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_20b09587e_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_20b09587e_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_20b09587e_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_20b09587e_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_20b09587e_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_20b09587e_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_20b09587e_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_20b09587e_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_20b09587e_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_20b09587e_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_20b09587e_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_20b09587e_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_20b09587e_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_20b09587e_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_20b09587e_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_20b09587e_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_20b09587e_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_20b09587e_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_20b09587e_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_20b09587e_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_20b09587e_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_20b09587e_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20b09587e_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_20b09587e_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_20b09587e_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_20b09587e_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_20b09587e_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_20b09587e_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_20b09587e_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20b095dac_Range32>::make({_20b095dac_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_20b095dac_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_20b095dac_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_20b095dac_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_20b095dac_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_20b095dac_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_20b095dac_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_20b095dac_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_20b095dac_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_20b095dac_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_20b095dac_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_20b095dac_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_20b095dac_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_20b095dac_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_20b095dac_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_20b095dac_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_20b095dac_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_20b095dac_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_20b095dac_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_20b095dac_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20b095dac_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_20b095dac_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_20b095dac_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_20b095dac_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_20b096330_RangeTable> _20b030264__LU = jule::new_ptr<_20b096330_RangeTable>(_20b096330_RangeTable{._field_R16=jule::Slice<_20b09587e_Range16>::make({_20b09587e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_20b09587e_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_20b09587e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_20b09587e_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_20b09587e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_20b09587e_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_20b09587e_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_20b09587e_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_20b09587e_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_20b09587e_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_20b09587e_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_20b09587e_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_20b095dac_Range32>::make({_20b095dac_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_20b095dac_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_20b095dac_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_20b095dac_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_20b095dac_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_20b095dac_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _20b08ed51__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::Str,4> _1eb18de71_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str::lit(".h", 2),jule::Str::lit(".hpp", 4),jule::Str::lit(".hxx", 4),jule::Str::lit(".hh", 3)});
jule::Array<jule::Str,3> _1eb18e1a2_CppExts = jule::Array<jule::Str,3>({jule::Str::lit(".cpp", 4),jule::Str::lit(".cc", 3),jule::Str::lit(".cxx", 4)});
jule::Array<jule::Str,1> _1eb21ed26_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str::lit(".mm", 3)});
jule::Str _20b1a024c_PathStdlib = jule::Str();
jule::Str _20b1a045b_PathExec = jule::Str();
jule::Str _20b1a0703_PathWd = jule::Str();
jule::Str _20b1a0a00_PathApi = jule::Str();
jule::Str _20b1a0ca8_Os = jule::Str::lit("windows", 7);
jule::Str _20b1a1061_Arch = jule::Str::lit("i386", 4);
jule::Array<jule::U8,32> _1b9a3bdd3__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1b9a3c477__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1b9a81587_floatInfo _1b9a81983_f32info = _1b9a81587_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1b9a81587_floatInfo _1b9a81c80_f64info = _1b9a81587_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1b9a8975a_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1b9a8b570_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1b9a8c131_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1b9a8c461_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1b9a906b7_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1b9a992b4_leftCheat> _1b9a996e3_leftCheats = jule::Slice<_1b9a992b4_leftCheat>::make({_1b9a992b4_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1b9a992b4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)},_1b9a992b4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)},_1b9a992b4_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)},_1b9a992b4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)},_1b9a992b4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)},_1b9a992b4_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)},_1b9a992b4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)},_1b9a992b4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)},_1b9a992b4_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)},_1b9a992b4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)},_1b9a992b4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)},_1b9a992b4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)},_1b9a992b4_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)},_1b9a992b4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)},_1b9a992b4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)},_1b9a992b4_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)},_1b9a992b4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)},_1b9a992b4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)},_1b9a992b4_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)},_1b9a992b4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)},_1b9a992b4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)},_1b9a992b4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)},_1b9a992b4_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)},_1b9a992b4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)},_1b9a992b4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)},_1b9a992b4_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)},_1b9a992b4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)},_1b9a992b4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)},_1b9a992b4_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)},_1b9a992b4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)},_1b9a992b4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)},_1b9a992b4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)},_1b9a992b4_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)},_1b9a992b4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)},_1b9a992b4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)},_1b9a992b4_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)},_1b9a992b4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)},_1b9a992b4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)},_1b9a992b4_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)},_1b9a992b4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)},_1b9a992b4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)},_1b9a992b4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)},_1b9a992b4_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)},_1b9a992b4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)},_1b9a992b4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)},_1b9a992b4_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)},_1b9a992b4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)},_1b9a992b4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)},_1b9a992b4_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)},_1b9a992b4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)},_1b9a992b4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)},_1b9a992b4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)},_1b9a992b4_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)},_1b9a992b4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)},_1b9a992b4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)},_1b9a992b4_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)},_1b9a992b4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)},_1b9a992b4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)},_1b9a992b4_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)},_1b9a992b4_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1b9aa0793_BitSize = 0LL;
jule::Str _1b9aa0a90_SysInt = jule::Str();
jule::Str _1b9aa0d48_SysUint = jule::Str();
jule::Array<jule::I32,5> _1abc60cc4_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _1abc60ed3_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _1abc61225_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _1abd0486d_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _1abd04b59_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_1abd12c77_kindPair,28> _1abd131a6_keywords = jule::Array<_1abd12c77_kindPair,28>({_1abd12c77_kindPair{._field_kind=jule::Str::lit("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_1abd12c77_kindPair,46> _1abd134d6_basicOps = jule::Array<_1abd12c77_kindPair,46>({_1abd12c77_kindPair{._field_kind=jule::Str::lit("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_1abd12c77_kindPair{._field_kind=jule::Str::lit(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Slice<jule::Str> _1ab64c480_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str::lit("signed", 6),jule::Str::lit("unsigned", 8),jule::Str::lit("float", 5),jule::Str::lit("numeric", 7),jule::Str::lit("mutable", 7),jule::Str::lit("immutable", 9),jule::Str::lit("ordered", 7),jule::Str::lit("comparable", 10)});
jule::Ptr<_1abe42d30_TypeKind> _1ac029e17_primNil = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1abe42d30_TypeKind> _1ac02a214_primVoid = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02a4bc_primAny = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("any", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02a7b9_primStr = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("str", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02aa72_primBool = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("bool", 4)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02ad2a_primUintptr = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("uintptr", 7)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02b0d3_primUint = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("uint", 4)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02b49b_primInt = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("int", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02b6dd_primI8 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("i8", 2)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02b985_primI16 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("i16", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02bc3d_primI32 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("i32", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02bee6_primI64 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("i64", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02c29e_primU8 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("u8", 2)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02c557_primU16 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("u16", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02c810_primU32 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("u32", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02cce9_primU64 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("u64", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02d03b_primF32 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("f32", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1abe42d30_TypeKind> _1ac02d24a_primF64 = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType(jule::Str::lit("f64", 3)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
jule::Ptr<_1ac94d807_data> _1ac94ce11_emptyData = jule::new_ptr<_1ac94d807_data>();
jule::Bool _1ac952d8e_Copy = false;
jule::Bool _1ac95318b_Deadcode = false;
jule::Bool _1ac953444_Append = false;
jule::Bool _1ac953741_Math = false;
jule::Bool _1ac9539e9_Access = false;
jule::Bool _1ac953ca2_Inline = false;
jule::Bool _1ac95405a_Ptr = false;
jule::Bool _1ac954423_Cond = false;
jule::Bool _1ac954665_Str = false;
jule::Bool _1ac95490c_Slice = false;
jule::Bool _1ac954bb5_Assign = false;
jule::Bool _1ac954e6d_Exceptional = false;
jule::Bool _1ac955226_Iter = false;
jule::Bool _1ac9554ce_Dynamic = false;
jule::Bool _1acaba116_exprEnabled = false;
jule::Bool _1acaba38b_scopeEnabled = false;
jule::Array<jule::U64,12> _1ad423386_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1ad353591_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
jule::Ptr<_1abe42d30_TypeKind> _1ad42cb76_generalGCPtr = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4a909_Prim>(_1abe4a909_Prim{._field_Kind=jule::Str::lit("uintptr", 7)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)})}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)});
jule::Ptr<_20b096330_RangeTable> _20b042375_Upper = _20b030264__LU;
jule::Ptr<_20b096330_RangeTable> _20b036248_Letter = _20b02e351__L;



std::ostream &operator<<(std::ostream &_Stream, _209d2db9b_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _209e0d4d9_StrBuilder static__209e0d918_New(jule::I32 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str::lit("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _209e0d4d9_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _209e0dbc1_Write(_209e0d4d9_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _209e0de79_WriteStr(_209e0d4d9_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_3027_s);;
}



inline void _209e0e232_WriteByte(_209e0d4d9_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _209e0e771_Str(_209e0d4d9_StrBuilder* _self_) {
	jule::Str _5013_s = _209e0ccbe_StrFromBytes((*(_self_))._field_buf);;
	_209e0e96e_Clear(_self_);
	return _5013_s;;
}



inline void _209e0e96e_Clear(_209e0d4d9_StrBuilder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _209e0ec05_Len(_209e0d4d9_StrBuilder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _209e10222_Buf(_209e0d4d9_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _209e104ca_SetBuf(_209e0d4d9_StrBuilder* _self_, jule::Slice<jule::U8> _7736_buf) {
	(*(_self_))._field_buf=_7736_buf;
}





std::ostream &operator<<(std::ostream &_Stream, _209e0d4d9_StrBuilder _Src) {
	_Stream << "StrBuilder{";
	_Stream << "buf:" << _Src._field_buf;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20b09587e_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20b095dac_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20b096330_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _20b0e3bda_index(_20b0e3789_lazyBuff* _self_, jule::I32 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _20b0e3e93_append(_20b0e3789_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _20b0e4229_string(_20b0e3789_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _209e0ca05_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}





std::ostream &operator<<(std::ostream &_Stream, _20b0e3789_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _209c238a4_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_209c238a4_DirEntry>>> static__20b0e64c3_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_209c238a4_DirEntry>> __jule_func_result;
	jule::Slice<jule::U16> _169_utf16Path = _209bd25ee_UTF16FromStr(_20b0e500a_Join(jule::Slice<jule::Str>::make({_1520_path,jule::Str::lit("*", 1)})));;
	WIN32_FIND_DATAW _1713_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _189_handle = _209c100bb_FindFirstFile((&(_169_utf16Path[0LL])), (&(_1713_data)));;
	if ((_189_handle == jule::MAX_U64)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_209c238a4_DirEntry>>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			jule::Ptr<_209c238a4_DirEntry> _2317_entry = jule::new_ptr<_209c238a4_DirEntry>(_209c238a4_DirEntry{._field_Name=_209bd2bc6_U16PtrToStr(((jule::U16*)(_1713_data.cFileName))), });;
			(*(_2317_entry))._field_Stat=({
				auto except = static__20b0e72e8_Of(_20b0e500a_Join(jule::Slice<jule::Str>::make({_1520_path,(*_2317_entry.alloc)._field_Name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_209c238a4_DirEntry>>>{.error=except.error};
				} jule::Ptr<_209c26e6d_Status>(nullptr);});
			});
			{ jule::Slice<jule::Ptr<_209c238a4_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_2317_entry); };
			if ((_209c10440_FindNextFile(_189_handle, (&(_1713_data))) == 0LL)) {
				goto _iter_end_1ab505536;
			};
		}
	_iter_next_1ab505536:;
	}
	_iter_end_1ab505536:;;
	_209c10709_FindClose(_189_handle);
	return jule::Exceptional<jule::Slice<jule::Ptr<_209c238a4_DirEntry>>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__20b0e6704_Create(jule::Str _3922_path) {
	jule::Slice<jule::U16> _449_utf16Path = _209bd25ee_UTF16FromStr(_3922_path);;
	if ((!(_209c0ccbc_CreateDirectory((&(_449_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__20b0e6935_Remove(jule::Str _5322_path) {
	jule::Slice<jule::U16> _549_utf16Path = _209bd25ee_UTF16FromStr(_5322_path);;
	if ((!(_209c0d086_RemoveDirectory((&(_549_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _209c23b3a_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_209c24d39_File> static__209c25257_New(jule::Uintptr _4519_handle) {
	return jule::new_ptr<_209c24d39_File>(_209c24d39_File{._field_handle=_4519_handle});;
}



inline jule::Exceptional<jule::Ptr<_209c24d39_File>> static__209c25521_Create(jule::Str _5522_path) {
	return static__209d398bb_Open(_5522_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__209c257da_Read(jule::Str _6720_path) {
	jule::Ptr<_209c26e6d_Status> _689_s = ({
		auto except = static__20b0e72e8_Of(_6720_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_209c26e6d_Status>(nullptr);});
	});;
	if ((!(_209c275cd_IsReg(_689_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _7313_sz = static_cast<jule::I32>(_209c27864_Size(_689_s));;
	if ((_7313_sz != static_cast<jule::I32>(_209c27864_Size(_689_s)))) {
		_7313_sz=0LL;
	};
	if ((_7313_sz < 512LLU)) {
		_7313_sz=512LLU;
	};
	jule::Ptr<_209c24d39_File> _8613_f = ({
		auto except = static__209d398bb_Open(_6720_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_209c24d39_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _8713_buf = jule::Slice<jule::U8>::alloc(_7313_sz, _7313_sz, 0);;
	jule::I32 _8813_n = 0LL;;
	while ((_8813_n < _7313_sz)) {
		{
			jule::I32 _9013_rn = ({
				auto except = _209d3a2b2_Read(_8613_f.ptr(), _8713_buf.slice(_8813_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_9013_rn == 0LL)) {
				goto _iter_end_1ab50be99;
			};
			_8813_n+=_9013_rn;
		}
	_iter_next_1ab50be99:;
	}
	_iter_end_1ab50be99:;;
	({
		auto except = _209c263bd_Close(_8613_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_8713_buf.slice(0LL, _8813_n)};;
}



inline jule::VoidExceptional static__209c25b81_Write(jule::Str _10521_path, jule::Slice<jule::U8> _10532_data, jule::I32 _10546_perm) {
	jule::Ptr<_209c24d39_File> _10613_f = ({
		auto except = static__209d398bb_Open(_10521_path, static_cast<jule::I32>(769LL), _10546_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_209c24d39_File>(nullptr);});
	});;
	jule::I32 _10713_n = 0LL;;
	while ((_10713_n < _10532_data.len())) {
		{
			_10713_n+=({
				auto except = _209d39e71_Write(_10613_f.ptr(), _10532_data.slice(_10713_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1ab511ce5:;
	}
	_iter_end_1ab511ce5:;;
	return _209c263bd_Close(_10613_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _209c263bd_Close(_209c24d39_File* _self_) {
	if ((_209c12bb2_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_209c24d39_File>> static__209d398bb_Open(jule::Str _2220_path, jule::I32 _2231_flag, jule::I32 _2244_mode) {
	jule::Slice<jule::U16> _239_utf16Path = _209bd25ee_UTF16FromStr(_2220_path);;
	jule::I32 _249_handle = _209c0bddc_Wopen((&(_239_utf16Path[0LL])), _2231_flag, _2244_mode);;
	if ((_249_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_209c24d39_File>>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_209c24d39_File>>{.result=static__209c25257_New(static_cast<jule::Uintptr>(_249_handle))};;
}



inline jule::VoidExceptional static__209d39aec_Remove(jule::Str _3522_path) {
	jule::Slice<jule::U16> _369_utf16Path = _209bd25ee_UTF16FromStr(_3522_path);;
	if ((!(_209c0ca03_DeleteFile((&(_369_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _209d39e71_Write(_209c24d39_File* _self_, jule::Slice<jule::U8> _5024_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_5024_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	if (_209d3a636_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _5613_utf16Buf = _209bd25ee_UTF16FromStr(static_cast<jule::Str>(_5024_buf));;
		jule::Bool _5713_ok = _209c0e54e_WriteConsole((*(_self_))._field_handle, (&(_5613_utf16Buf[0LL])), _5613_utf16Buf.len(), &(__jule_func_result), nullptr);;
		if ((!(_5713_ok))) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_209d38755_HandleRW(&(_5024_buf));
	__jule_func_result=_209c13069_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_5024_buf[0LL])), static_cast<jule::U32>(_5024_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _209d3a2b2_Read(_209c24d39_File* _self_, jule::Slice<jule::U8> _8127_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_8127_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	if (_209d3a636_isConsoleHandle((*(_self_))._field_handle)) {
		jule::Slice<jule::U16> _8717_codepage = jule::Slice<jule::U16>::alloc(_8127_buf.len(), _8127_buf.len(), 0);;
		jule::Bool _8813_ok = _209c0ea38_ReadConsole((*(_self_))._field_handle, (&(_8717_codepage[0LL])), _8127_buf.len(), &(__jule_func_result));;
		if ((!(_8813_ok))) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
		};
		jule::Slice<jule::I32> _9313_runes = _209bd2027_Decode(_8717_codepage.slice(0LL, __jule_func_result));;
		__jule_func_result=0LL;
		{
			auto expr = &(_9313_runes);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab51db48:;
			if (it != expr_end) {
				jule::I32 *_9520_r = it;
				{
					jule::I32 _9617_size = _209d304d8_RuneLen((*(_9520_r)));;
					if (((__jule_func_result + _9617_size) > _8127_buf.len())) {
						goto _iter_end_1ab51db48;
					};
					_209d3096c_EncodeRune(_8127_buf.slice(__jule_func_result), (*(_9520_r)));
					__jule_func_result+=_9617_size;
				}
				_iter_next_1ab51db48:;
				++it;
				goto _iter_begin_1ab51db48;
			}
			_iter_end_1ab51db48:;
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_209d38755_HandleRW(&(_8127_buf));
	__jule_func_result=_209c127d8_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_8127_buf[0LL])), static_cast<jule::U32>(_8127_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}





std::ostream &operator<<(std::ostream &_Stream, _209c24d39_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _209c27347_IsDir(_209c26e6d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _209c275cd_IsReg(_209c26e6d_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _209c27864_Size(_209c26e6d_Status* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<jule::Ptr<_209c26e6d_Status>> static__20b0e72e8_Of(jule::Str _1218_path) {
	if ((_1218_path).empty()) {
		return jule::Exceptional<jule::Ptr<_209c26e6d_Status>>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _169_utf16Path = _209bd25ee_UTF16FromStr(_1218_path);;
	struct _stat _1713_handle = (struct _stat){};;
	jule::I32 _189_code = _209c0b9ad_Wstat((&(_169_utf16Path[0LL])), (&(_1713_handle)));;
	if ((_189_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_209c26e6d_Status>>{.error=jule::Any(_209c232ee_getLastFsError(), &__jule_any_type0)};
	};
	jule::Ptr<_209c26e6d_Status> _2213_stat = jule::new_ptr<_209c26e6d_Status>();;
	(*_2213_stat.alloc)._field_size=_1713_handle.st_size;
	if (((_1713_handle.st_mode & 16384LLU) == 16384LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1713_handle.st_mode & 32768LLU) == 32768LLU)) {
		(*_2213_stat.alloc)._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_209c26e6d_Status>>{.result=_2213_stat};;
}





std::ostream &operator<<(std::ostream &_Stream, _209c26e6d_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _20b19c04b_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "hProcess:" << _Src._field_hProcess << ", ";
	_Stream << "hThread:" << _Src._field_hThread;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1eb22e132_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9a81587_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9a82214_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9a992b4_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b9a8b8a0_set(_1b9a99ccb_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23913_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23913_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23913_i] == '+')) {
			_case_begin_1aeb1e8e9:;
			{
				(_23913_i)++;
			}
		}
		else if ((_23822_s[_23913_i] == '-')) {
			_case_begin_1aeb1ea09:;
			{
				(*(_self_))._field_neg=true;
				(_23913_i)++;
			}
		}
		_match_end_1aeb1e861:;
	};
	jule::Bool _25613_sawdot = false;;
	jule::Bool _25713_sawdigits = false;;
	for (; (_23913_i < _23822_s.len()); (_23913_i)++) {
		{
			{
				
				if ((_23822_s[_23913_i] == '_')) {
					_case_begin_1aeb21434:;
					{
						goto _iter_next_1aeb20cd5;
					}
				}
				else if ((_23822_s[_23913_i] == '.')) {
					_case_begin_1aeb214cd:;
					{
						if (_25613_sawdot) {
							return __jule_func_result;;
						};
						_25613_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1aeb20cd5;
					}
				}
				else if ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9'))) {
					_case_begin_1aeb21544:;
					{
						_25713_sawdigits=true;
						if (((_23822_s[_23913_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1aeb20cd5;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23913_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23913_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1aeb20cd5;
					}
				}
				_match_end_1aeb21313:;
			};
			goto _iter_end_1aeb20cd5;
		}
	_iter_next_1aeb20cd5:;
	}
	_iter_end_1aeb20cd5:;;
	if ((!(_25713_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25613_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23913_i < _23822_s.len()) && (_1b9a86dc8_lower(_23822_s[_23913_i]) == 'e'))) {
		(_23913_i)++;
		if ((_23913_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30217_esign = 1LL;;
		if ((_23822_s[_23913_i] == '+')) {
			(_23913_i)++;
		} else if ((_23822_s[_23913_i] == '-')) {
			(_23913_i)++;
			_30217_esign=-1LL;
		};
		if ((((_23913_i >= _23822_s.len()) || (_23822_s[_23913_i] < '0')) || (_23822_s[_23913_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31217_e = 0LL;;
		for (; ((_23913_i < _23822_s.len()) && ((('0' <= _23822_s[_23913_i]) && (_23822_s[_23913_i] <= '9')) || (_23822_s[_23913_i] == '_'))); (_23913_i)++) {
			{
				if ((_23822_s[_23913_i] == '_')) {
					goto _iter_next_1aeb2688a;
				};
				if ((_31217_e < 10000LL)) {
					_31217_e=(((_31217_e * 10LL) + static_cast<jule::I32>(_23822_s[_23913_i])) - '0');
				};
			}
		_iter_next_1aeb2688a:;
		}
		_iter_end_1aeb2688a:;;
		(*(_self_))._field_dp+=(_31217_e * _30217_esign);
	};
	if ((_23913_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1b9a8bbe1_floatBits(_1b9a99ccb_decimal* _self_, _1b9a81587_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33313_exp = 0LL;;
	jule::U64 _33413_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aeb37280;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1aeb35d83;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33413_mant=0LLU;
		_33313_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1aeb37280;
	};
	_33313_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35917_n = 0LL;;
			if (((*(_self_))._field_dp >= _1b9a8b570_powtab.len())) {
				_35917_n=27LL;
			} else {
				_35917_n=_1b9a8b570_powtab[(*(_self_))._field_dp];
			};
			_1b9a9a43b_shift(_self_, (-(_35917_n)));
			_33313_exp+=_35917_n;
		}
	_iter_next_1aeb2d078:;
	}
	_iter_end_1aeb2d078:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36917_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1b9a8b570_powtab.len())) {
				_36917_n=27LL;
			} else {
				_36917_n=_1b9a8b570_powtab[(-((*(_self_))._field_dp))];
			};
			_1b9a9a43b_shift(_self_, _36917_n);
			_33313_exp-=_36917_n;
		}
	_iter_next_1aeb2d96e:;
	}
	_iter_end_1aeb2d96e:;;
	(_33313_exp)--;
	if ((_33313_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38613_n = (((*(_33229_flt))._field_bias + 1LL) - _33313_exp);;
		_1b9a9a43b_shift(_self_, (-(_38613_n)));
		_33313_exp+=_38613_n;
	};
	if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1aeb35d83;
	};
	_1b9a9a43b_shift(_self_, static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits)));
	_33413_mant=_1b9a9aedb_roundedInteger(_self_);
	if ((_33413_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33413_mant>>=1LLU;
		(_33313_exp)++;
		if (((_33313_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1aeb35d83;
		};
	};
	if (((_33413_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33313_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1aeb37280;
	_julec_label_1aeb35d83:;
	_33413_mant=0LLU;
	_33313_exp=static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1aeb37280:;
	jule::U64 _42213_bits = (_33413_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42213_bits|=(static_cast<jule::U64>(((_33313_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42213_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42213_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1b9a9a183_assign(_1b9a99ccb_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>(0);;
	jule::I32 _15513_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15713_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15713_v1);
			_15217_buf[_15513_n]=static_cast<jule::U8>((_15129_v + '0'));
			(_15513_n)++;
			_15129_v=_15713_v1;
		}
	_iter_next_1aeb3a1b7:;
	}
	_iter_end_1aeb3a1b7:;;
	(*(_self_))._field_nd=0LL;
	(_15513_n)--;
	for (; (_15513_n >= 0LL); (_15513_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15513_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1aeb3ad11:;
	}
	_iter_end_1aeb3ad11:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1b9a9b629_trim(_self_);
}



inline void _1b9a9a43b_shift(_1b9a99ccb_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1aeb3cc7a:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1aeb3cd24:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1b9a9c174_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1aeb3d8e6:;
				}
				_iter_end_1aeb3d8e6:;;
				_1b9a9c174_leftShift(_self_, static_cast<jule::U32>(_17628_k));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1aeb3cd8a:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1b9a9b915_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1aeb3d819:;
				}
				_iter_end_1aeb3d819:;;
				_1b9a9b915_rightShift(_self_, static_cast<jule::U32>((-(_17628_k))));
			}
		}
		_match_end_1aeb3cb26:;
	};
}



inline void _1b9a9a6e4_roundDown(_1b9a99ccb_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1b9a9b629_trim(_self_);
}



inline void _1b9a9a99c_roundUp(_1b9a99ccb_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21113_i = (_20526_nd - 1LL);;
	for (; (_21113_i >= 0LL); (_21113_i)--) {
		{
			jule::U8 _21313_c = (*(_self_))._field_d[_21113_i];;
			if ((_21313_c < '9')) {
				((*(_self_))._field_d[_21113_i])++;
				(*(_self_))._field_nd=(_21113_i + 1LL);
				return;;
			};
		}
	_iter_next_1aeb41d5b:;
	}
	_iter_end_1aeb41d5b:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1b9a9ac55_round(_1b9a99ccb_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1b9a9c4e8_shouldRoundUp(_self_, _23224_nd)) {
		_1b9a9a99c_roundUp(_self_, _23224_nd);
	} else {
		_1b9a9a6e4_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1b9a9aedb_roundedInteger(_1b9a99ccb_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24913_i = 0LL;;
	jule::U64 _25013_n = static_cast<jule::U64>(0LLU);;
	for (; ((_24913_i < (*(_self_))._field_dp) && (_24913_i < (*(_self_))._field_nd)); (_24913_i)++) {
		{
			_25013_n=((_25013_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24913_i] - '0')));
		}
	_iter_next_1aeb44c1b:;
	}
	_iter_end_1aeb44c1b:;;
	for (; (_24913_i < (*(_self_))._field_dp); (_24913_i)++) {
		{
			_25013_n*=10LLU;
		}
	_iter_next_1aeb4603b:;
	}
	_iter_end_1aeb4603b:;;
	if (_1b9a9c4e8_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25013_n)++;
	};
	return _25013_n;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9a99ccb_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aac915_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=jule::Any(_1622_x, &__jule_any_type1)});;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aacbce_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=jule::Any(_1922_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aace98_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=jule::Any(_2223_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad262_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=jule::Any(_2522_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad52b_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=jule::Any(_2822_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1b9aac4c5_Const> static__1b9aad73a_NewNil(void) {
	return jule::new_ptr<_1b9aac4c5_Const>(_1b9aac4c5_Const{._field_data=nullptr});;
}



inline jule::I64 _1b9aadd9a_ReadI64(_1b9aac4c5_Const* _self_) {
	if ((!(_1b9ab1496_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type1);;
}



inline jule::U64 _1b9aae131_ReadU64(_1b9aac4c5_Const* _self_) {
	if ((!(_1b9ab172c_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type2);;
}



inline jule::Bool _1b9aae3b7_ReadBool(_1b9aac4c5_Const* _self_) {
	if ((!(_1b9ab19b3_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type3);;
}



inline jule::Str _1b9aae64d_ReadStr(_1b9aac4c5_Const* _self_) {
	if ((!(_1b9ab1c49_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type4);;
}



inline jule::F64 _1b9aae8d4_ReadF64(_1b9aac4c5_Const* _self_) {
	if ((!(_1b9ab1ed0_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type5);;
}



inline jule::I64 _1b9aaeb6a_AsI64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ae972021:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ae971ce0:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ae971d56:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ae97188e:;
			{
				return 0LL;;
			}
		}
		_match_end_1ae9716e6:;
	};
}



inline jule::U64 _1b9aaee01_AsU64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ae9727b3:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ae9735d8:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ae97364e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1ae971a6a:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ae971a15:;
	};
}



inline jule::F64 _1b9ab0187_AsF64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ae975112:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ae9740ab:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ae974dd1:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1ae97342e:;
			{
				return 0LL;;
			}
		}
		_match_end_1ae9733c9:;
	};
}



inline void _1b9ab0440_SetI64(_1b9aac4c5_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type1);
}



inline void _1b9ab06e8_SetU64(_1b9aac4c5_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type2);
}



inline void _1b9ab09a1_SetBool(_1b9aac4c5_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type3);
}



inline void _1b9ab0c59_SetStr(_1b9aac4c5_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type4);
}



inline void _1b9ab1012_SetF64(_1b9aac4c5_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type5);
}



inline jule::Bool _1b9ab1496_IsI64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ae978984:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ae978be8:;
			{
				return false;;
			}
		}
		_match_end_1ae978b93:;
	};
}



inline jule::Bool _1b9ab172c_IsU64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1ae979644:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ae978e4b:;
			{
				return false;;
			}
		}
		_match_end_1ae978de6:;
	};
}



inline jule::Bool _1b9ab19b3_IsBool(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1ae97a090:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ae97990d:;
			{
				return false;;
			}
		}
		_match_end_1ae9798a8:;
	};
}



inline jule::Bool _1b9ab1c49_IsStr(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ae97a9db:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ae97a359:;
			{
				return false;;
			}
		}
		_match_end_1ae97a304:;
	};
}



inline jule::Bool _1b9ab1ed0_IsF64(_1b9aac4c5_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ae97b437:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ae97aca5:;
			{
				return false;;
			}
		}
		_match_end_1ae97ac50:;
	};
}



inline jule::Bool _1b9ab2266_IsNil(_1b9aac4c5_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1b9ab28e8_And(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _23818_x) {
	{
		
		if ((_1b9ab19b3_IsBool(_self_) && _1b9ab19b3_IsBool(&_23818_x))) {
			_case_begin_1ae9806a0:;
			{
				return (_1b9aae3b7_ReadBool(_self_) && _1b9aae3b7_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1ae980639:;
			{
				return false;;
			}
		}
		_match_end_1ae98024e:;
	};
}



inline jule::Bool _1b9ab2c39_Or(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _24917_x) {
	{
		
		if ((_1b9ab19b3_IsBool(_self_) && _1b9ab19b3_IsBool(&_24917_x))) {
			_case_begin_1ae98196a:;
			{
				return (_1b9aae3b7_ReadBool(_self_) || _1b9aae3b7_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1ae981151:;
			{
				return false;;
			}
		}
		_match_end_1ae981074:;
	};
}



inline jule::Bool _1b9ab307a_Eq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _26017_x) {
	{
		
		if (_1b9ab2266_IsNil(_self_)) {
			_case_begin_1ae982c9b:;
			{
				return _1b9ab2266_IsNil(&_26017_x);;
			}
		}
		else if (_1b9ab19b3_IsBool(_self_)) {
			_case_begin_1ae982d12:;
			{
				return (_1b9ab19b3_IsBool(&_26017_x) && (_1b9aae3b7_ReadBool(_self_) == _1b9aae3b7_ReadBool(&_26017_x)));;
			}
		}
		else if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae982d78:;
			{
				return (_1b9ab1c49_IsStr(&_26017_x) && (_1b9aae64d_ReadStr(_self_) == _1b9aae64d_ReadStr(&_26017_x)));;
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae982e00:;
			{
				return (_1b9aadd9a_ReadI64(_self_) == _1b9aaeb6a_AsI64(&_26017_x));;
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae982e77:;
			{
				return (_1b9aae131_ReadU64(_self_) == _1b9aaee01_AsU64(&_26017_x));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae9830ed:;
			{
				return (_1b9aae8d4_ReadF64(_self_) == _1b9ab0187_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1ae98240a:;
			{
				return false;;
			}
		}
		_match_end_1ae98232d:;
	};
}



inline jule::Bool _1b9ab33bb_Lt(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _28717_x) {
	{
		
		if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae986a6e:;
			{
				return (_1b9ab1c49_IsStr(&_28717_x) && (_1b9aae64d_ReadStr(_self_) < _1b9aae64d_ReadStr(&_28717_x)));;
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae986ad5:;
			{
				return (_1b9aadd9a_ReadI64(_self_) < _1b9aaeb6a_AsI64(&_28717_x));;
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae986b4b:;
			{
				return (_1b9aae131_ReadU64(_self_) < _1b9aaee01_AsU64(&_28717_x));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae986bc3:;
			{
				return (_1b9aae8d4_ReadF64(_self_) < _1b9ab0187_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1ae98372a:;
			{
				return false;;
			}
		}
		_match_end_1ae98365e:;
	};
}



inline jule::Bool _1b9ab370c_LtEq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _31019_x) {
	{
		
		if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae989841:;
			{
				return (_1b9ab1c49_IsStr(&_31019_x) && (_1b9aae64d_ReadStr(_self_) <= _1b9aae64d_ReadStr(&_31019_x)));;
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9898a7:;
			{
				return (_1b9aadd9a_ReadI64(_self_) <= _1b9aaeb6a_AsI64(&_31019_x));;
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae98991d:;
			{
				return (_1b9aae131_ReadU64(_self_) <= _1b9aaee01_AsU64(&_31019_x));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae989995:;
			{
				return (_1b9aae8d4_ReadF64(_self_) <= _1b9ab0187_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1ae9873ee:;
			{
				return false;;
			}
		}
		_match_end_1ae987333:;
	};
}



inline jule::Bool _1b9ab3a4d_Gt(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _33317_x) {
	{
		
		if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae98c613:;
			{
				return (_1b9ab1c49_IsStr(&_33317_x) && (_1b9aae64d_ReadStr(_self_) > _1b9aae64d_ReadStr(&_33317_x)));;
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae98c679:;
			{
				return (_1b9aadd9a_ReadI64(_self_) > _1b9aaeb6a_AsI64(&_33317_x));;
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae98c6e0:;
			{
				return (_1b9aae131_ReadU64(_self_) > _1b9aaee01_AsU64(&_33317_x));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae98c767:;
			{
				return (_1b9aae8d4_ReadF64(_self_) > _1b9ab0187_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1ae98a1c1:;
			{
				return false;;
			}
		}
		_match_end_1ae98a105:;
	};
}



inline jule::Bool _1b9ab3d8e_GtEq(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _35619_x) {
	{
		
		if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae9903d5:;
			{
				return (_1b9ab1c49_IsStr(&_35619_x) && (_1b9aae64d_ReadStr(_self_) >= _1b9aae64d_ReadStr(&_35619_x)));;
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae99044b:;
			{
				return (_1b9aadd9a_ReadI64(_self_) >= _1b9aaeb6a_AsI64(&_35619_x));;
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9904b2:;
			{
				return (_1b9aae131_ReadU64(_self_) >= _1b9aaee01_AsU64(&_35619_x));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae990539:;
			{
				return (_1b9aae8d4_ReadF64(_self_) >= _1b9ab0187_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1ae98ce93:;
			{
				return false;;
			}
		}
		_match_end_1ae98cdc7:;
	};
}



inline jule::Bool _1b9ab41d0_Add(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _37722_x) {
	{
		
		if (_1b9ab1c49_IsStr(_self_)) {
			_case_begin_1ae9931a7:;
			{
				if ((!(_1b9ab1c49_IsStr(&_37722_x)))) {
					return false;;
				};
				_1b9ab0c59_SetStr(_self_, (_1b9aae64d_ReadStr(_self_) + _1b9aae64d_ReadStr(&_37722_x)));
			}
		}
		else if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae99321d:;
			{
				_1b9ab1012_SetF64(_self_, (_1b9aae8d4_ReadF64(_self_) + _1b9ab0187_AsF64(&_37722_x)));
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae993284:;
			{
				if (_1b9ab1ed0_IsF64(&_37722_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) + _1b9aae8d4_ReadF64(&_37722_x)));
				} else {
					_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) + _1b9aaeb6a_AsI64(&_37722_x)));
				};
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae99330b:;
			{
				if (_1b9ab1ed0_IsF64(&_37722_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) + _1b9aae8d4_ReadF64(&_37722_x)));
				} else {
					_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) + _1b9aaee01_AsU64(&_37722_x)));
				};
			}
		}
		else {
			_case_begin_1ae990c65:;
			{
				return false;;
			}
		}
		_match_end_1ae990b99:;
	};
	return true;;
}



inline jule::Bool _1b9ab4521_Sub(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _40622_x) {
	{
		
		if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae998003:;
			{
				_1b9ab1012_SetF64(_self_, (_1b9aae8d4_ReadF64(_self_) - _1b9ab0187_AsF64(&_40622_x)));
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae99809c:;
			{
				if (_1b9ab1ed0_IsF64(&_40622_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) - _1b9aae8d4_ReadF64(&_40622_x)));
				} else {
					_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) - _1b9aaeb6a_AsI64(&_40622_x)));
				};
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae998124:;
			{
				if (_1b9ab1ed0_IsF64(&_40622_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) - _1b9aae8d4_ReadF64(&_40622_x)));
				} else {
					_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) - _1b9aaee01_AsU64(&_40622_x)));
				};
			}
		}
		else {
			_case_begin_1ae997750:;
			{
				return false;;
			}
		}
		_match_end_1ae997662:;
	};
	return true;;
}



inline jule::Bool _1b9ab4862_Mul(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _43022_x) {
	{
		
		if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae99bea2:;
			{
				_1b9ab1012_SetF64(_self_, (_1b9aae8d4_ReadF64(_self_) * _1b9ab0187_AsF64(&_43022_x)));
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae99c04b:;
			{
				if (_1b9ab1ed0_IsF64(&_43022_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) * _1b9aae8d4_ReadF64(&_43022_x)));
				} else {
					_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) * _1b9aaeb6a_AsI64(&_43022_x)));
				};
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae99c0c3:;
			{
				if (_1b9ab1ed0_IsF64(&_43022_x)) {
					_1b9ab1012_SetF64(_self_, (_1b9ab0187_AsF64(_self_) * _1b9aae8d4_ReadF64(&_43022_x)));
				} else {
					_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) * _1b9aaee01_AsU64(&_43022_x)));
				};
			}
		}
		else {
			_case_begin_1ae99b457:;
			{
				return false;;
			}
		}
		_match_end_1ae99b37a:;
	};
	return true;;
}



inline jule::Bool _1b9ab4ba3_Div(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _45822_x) {
	{
		
		if (_1b9ab1ed0_IsF64(_self_)) {
			_case_begin_1ae9a0e40:;
			{
				jule::F64 _46113_l = _1b9ab0187_AsF64(&_45822_x);;
				if ((_46113_l == 0LL)) {
					return false;;
				};
				_1b9ab1012_SetF64(_self_, jule::div(_1b9aae8d4_ReadF64(_self_),_46113_l));
			}
		}
		else if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9a0ed9:;
			{
				jule::F64 _46713_l = _1b9ab0187_AsF64(&_45822_x);;
				if ((_46713_l == 0LL)) {
					return false;;
				};
				_1b9ab1012_SetF64(_self_, jule::div(_1b9ab0187_AsF64(_self_),_46713_l));
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9a1061:;
			{
				jule::F64 _47313_l = _1b9ab0187_AsF64(&_45822_x);;
				if ((_47313_l == 0LL)) {
					return false;;
				};
				_1b9ab1012_SetF64(_self_, jule::div(_1b9ab0187_AsF64(_self_),_47313_l));
			}
		}
		else {
			_case_begin_1ae9a03e5:;
			{
				return false;;
			}
		}
		_match_end_1ae9a0318:;
	};
	return true;;
}



inline jule::Bool _1b9ab4ee4_Mod(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _48722_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9a4e11:;
			{
				jule::I64 _49013_l = _1b9aaeb6a_AsI64(&_48722_x);;
				if ((_49013_l == 0LL)) {
					return false;;
				};
				_1b9ab0440_SetI64(_self_, jule::mod(_1b9aadd9a_ReadI64(_self_),_49013_l));
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9a530c:;
			{
				jule::U64 _49613_l = _1b9aaee01_AsU64(&_48722_x);;
				if ((_49613_l == 0LLU)) {
					return false;;
				};
				_1b9ab06e8_SetU64(_self_, jule::mod(_1b9aae131_ReadU64(_self_),_49613_l));
			}
		}
		else {
			_case_begin_1ae9a4d89:;
			{
				return false;;
			}
		}
		_match_end_1ae9a4c8a:;
	};
	return true;;
}



inline jule::Bool _1b9ab5335_BitwiseAnd(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _50929_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9a7c16:;
			{
				_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) & _1b9aaeb6a_AsI64(&_50929_x)));
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9a8112:;
			{
				_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) & _1b9aaee01_AsU64(&_50929_x)));
			}
		}
		else {
			_case_begin_1ae9a7b8e:;
			{
				return false;;
			}
		}
		_match_end_1ae9a7a90:;
	};
	return true;;
}



inline jule::Bool _1b9ab5676_BitwiseOr(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _52328_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9a9993:;
			{
				_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) | _1b9aaeb6a_AsI64(&_52328_x)));
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9a9d8e:;
			{
				_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) | _1b9aaee01_AsU64(&_52328_x)));
			}
		}
		else {
			_case_begin_1ae9a991b:;
			{
				return false;;
			}
		}
		_match_end_1ae9a981c:;
	};
	return true;;
}



inline jule::Bool _1b9ab59b7_Xor(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _53722_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9ab720:;
			{
				_1b9ab0440_SetI64(_self_, (_1b9aadd9a_ReadI64(_self_) ^ _1b9aaeb6a_AsI64(&_53722_x)));
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9abb1b:;
			{
				_1b9ab06e8_SetU64(_self_, (_1b9aae131_ReadU64(_self_) ^ _1b9aaee01_AsU64(&_53722_x)));
			}
		}
		else {
			_case_begin_1ae9ab698:;
			{
				return false;;
			}
		}
		_match_end_1ae9ab599:;
	};
	return true;;
}



inline jule::Bool _1b9ab5d08_Lshift(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _55125_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9ad49c:;
			{
				jule::I64 _55413_l = _1b9aaeb6a_AsI64(_self_);;
				if ((_55413_l < 0LL)) {
					jule::U64 _55617_r = _1b9aaee01_AsU64(&_55125_x);;
					_1b9ab0440_SetI64(_self_, (_55413_l << _55617_r));
				} else {
					_1b9ab64e0_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9ad898:;
			{
				_1b9ab64e0_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1ae9ad425:;
			{
				return false;;
			}
		}
		_match_end_1ae9ad326:;
	};
	return true;;
}



inline jule::Bool _1b9ab6149_Rshift(_1b9aac4c5_Const* _self_, _1b9aac4c5_Const _57125_x) {
	{
		
		if (_1b9ab1496_IsI64(_self_)) {
			_case_begin_1ae9b09bb:;
			{
				jule::I64 _57413_l = _1b9aaeb6a_AsI64(_self_);;
				if ((_57413_l < 0LL)) {
					jule::U64 _57617_r = _1b9aaee01_AsU64(&_57125_x);;
					_1b9ab0440_SetI64(_self_, (_57413_l >> _57617_r));
				} else {
					_1b9ab6820_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1b9ab172c_IsU64(_self_)) {
			_case_begin_1ae9b0db7:;
			{
				_1b9ab6820_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1ae9b0944:;
			{
				return false;;
			}
		}
		_match_end_1ae9b0845:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b9aac4c5_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1abd0a70e_Prec(_1abd0a38a_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1aecd8079:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1aecd7aa1:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1aecd7b17:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1aecd80e0:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1aecd8167:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1aecd75b7:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aecd79c4:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd0a38a_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1abd1103e_Fill(_1abd10b21_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1abd112c5_Dir(_1abd10b21_File* _self_) {
	return _20b0e5bed_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1abd1155b_Name(_1abd10b21_File* _self_) {
	return _20b0e5824_Base((*(_self_))._field_Path);;
}



inline jule::Str _1abd11b33_GetRow(_1abd10b21_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3913_n = 0LL;;
	jule::I32 _4013_lineStart = 0LL;;
	jule::I32 _4113_i = 0LL;;
	for (; (_4113_i < (*(_self_))._field_Data.len()); (_4113_i)++) {
		{
			if (((*(_self_))._field_Data[_4113_i] != '\n')) {
				goto _iter_next_1aecdd7dd;
			};
			(_3913_n)++;
			if ((_3913_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4013_lineStart, _4113_i));;
			};
			_4013_lineStart=(_4113_i + 1LL);
		}
	_iter_next_1aecdd7dd:;
	}
	_iter_end_1aecdd7dd:;;
	return jule::Str();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd10b21_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd12c77_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1abd192de_pushErr(_1abd18c5b_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abd13a25_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1abd19850_lex(_1abd18c5b_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1abd1ba72_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len())) {
		{
			jule::Ptr<_1abd0a38a_Token> _46217_token = _1abd1d05c_token(_self_);;
			if (((*(_46217_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1abd0a38a_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46217_token); };
			};
		}
	_iter_next_1aed1c8e9:;
	}
	_iter_end_1aed1c8e9:;;
}



inline jule::Str _1abd19b91_id(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4759_r;
	jule::I32 _47516_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune((*(_47122_ln)));
		_4759_r = __jule_assign_result.__jule_result_arg0;
		_47516_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4759_r != '_') && (!(_1abd0dab9_IsLetter(_4759_r))))) {
		return jule::Str();;
	};
	while ((_47516_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48113_pr;
			jule::I32 _48117_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune((*(_47122_ln)).slice(_47516_i));
				_48113_pr = __jule_assign_result.__jule_result_arg0;
				_48117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48113_pr != '_') && (!(_1abd0e03c_IsDecimal(static_cast<jule::U8>(_48113_pr))))) && (!(_1abd0dab9_IsLetter(_48113_pr))))) {
				(*(_self_))._field_pos+=_47516_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47516_i));;
			};
			_47516_i+=_48117_n;
		}
	_iter_next_1aed20d09:;
	}
	_iter_end_1aed20d09:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1abd19e27_resume(_1abd18c5b_lex* _self_) {
	jule::I32 _49613_i = (*(_self_))._field_pos;;
	for (; (_49613_i < (*((*(_self_))._field_file))._field_Data.len()); (_49613_i)++) {
		{
			jule::I32 _49813_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_Data[_49613_i]);;
			if (_1abd0d5be_IsSpace(_49813_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49813_r };
					
					if (_match_expr == '\n') {
						_case_begin_1aed25506:;
						{
							_1abd1ba72_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1aed25182:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1aed24d30:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1aed25072:;
				};
				goto _iter_next_1aed23757;
			};
			jule::I32 _51317_j = _49613_i;;
			for (; (_51317_j < (*(*(_self_))._field_file.alloc)._field_Data.len()); (_51317_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_Data[_51317_j] == '\n')) {
						goto _iter_end_1aed23d40;
					};
				}
			_iter_next_1aed23d40:;
			}
			_iter_end_1aed23d40:;;
			return (*(*(_self_))._field_file.alloc)._field_Data.slice(_49613_i, _51317_j);;
		}
	_iter_next_1aed23757:;
	}
	_iter_end_1aed23757:;;
	return nullptr;;
}



inline void _1abd1a1d0_lexLineComment(_1abd18c5b_lex* _self_, jule::Ptr<_1abd0a38a_Token>* _52438_token) {
	jule::I32 _5259_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52813_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if (((_52813_r == '\n') || (_52813_r == '\r'))) {
				goto _iter_end_1aed28097;
			};
		}
	_iter_next_1aed28097:;
	}
	_iter_end_1aed28097:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52438_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52438_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5259_start, (*(_self_))._field_pos));
	};
}



inline void _1abd1a488_lexRangeComment(_1abd18c5b_lex* _self_, jule::Ptr<_1abd0a38a_Token>* _53939_token) {
	jule::I32 _5409_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54313_r = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_54313_r == '\r')) {
				goto _iter_next_1aed2b70a;
			};
			if ((_54313_r == '\n')) {
				_1abd1ba72_newLine(_self_);
				goto _iter_next_1aed2b70a;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_Data.len()) && (_54313_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53939_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53939_token))))._field_Kind=static_cast<jule::Str>((*(*(_self_))._field_file.alloc)._field_Data.slice(_5409_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1aed2b70a:;
	}
	_iter_end_1aed2b70a:;;
	_1abd192de_pushErr(_self_, jule::Str::lit("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1abd1a7c9_num(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1abd17573_hexNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aed3413b;
	};
	__jule_func_result=_1abd17397_octalNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aed3413b;
	};
	__jule_func_result=_1abd15b37_binaryNum(_56723_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1aed3413b;
	};
	__jule_func_result=_1abd1586d_commonNum(_56723_txt);
	_julec_label_1aed3413b:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1abd1ab1a_escapeSeq(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59013_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1aed37d98;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1aed35ec8:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aed3613d:;
			{
				_59013_seq=_1abd17b8e_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1aed35c0e:;
			{
				_59013_seq=_1abd17e58_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aed35c75:;
			{
				_59013_seq=_1abd18222_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1aed35659:;
			{
				_59013_seq=_1abd184db_byteEscape(_58929_txt);
			}
		}
		_match_end_1aed35a99:;
	};
	_julec_label_1aed37d98:;
	if ((_59013_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1abd192de_pushErr(_self_, jule::Str::lit("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59013_seq.len();
	return _59013_seq;;
}



inline jule::Str _1abd1b016_getRune(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1abd1ab1a_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _6239_r;
	jule::I32 _62312_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune((*(_61927_txt)));
		_6239_r = __jule_assign_result.__jule_result_arg0;
		_62312_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62312_n;
	return jule::Str::from_rune(_6239_r);;
}



inline jule::Str _1abd1b357_lexRune(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_209e0d4d9_StrBuilder _62913_run = static__209e0d918_New(8LL);;
	_209e0e232_WriteByte(&_62913_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _63213_n = 0LL;;
	jule::I32 _63313_i = 1LL;;
	for (; (_63313_i < (*(_62827_txt)).len()); (_63313_i)++) {
		{
			if (((*(_62827_txt))[_63313_i] == '\r')) {
				goto _iter_next_1aed3c276;
			};
			if (((*(_62827_txt))[_63313_i] == '\n')) {
				_1abd192de_pushErr(_self_, jule::Str::lit("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1abd1ba72_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64513_part = (*(_62827_txt)).slice(_63313_i);;
			jule::Str _64613_r = _1abd1b016_getRune(_self_, &(_64513_part), false);;
			_209e0de79_WriteStr(&_62913_run, _64613_r);
			(*(_self_))._field_column+=_209d31671_RuneCountStr(_64613_r);
			if (_64613_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1aed3c276;
			};
			if ((_64613_r.len() > 1LL)) {
				_63313_i+=(_64613_r.len() - 1LL);
			};
			(_63213_n)++;
		}
	_iter_next_1aed3c276:;
	}
	_iter_end_1aed3c276:;;
	if ((_63213_n == 0LL)) {
		_1abd192de_pushErr(_self_, jule::Str::lit("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63213_n > 1LL)) {
		_1abd192de_pushErr(_self_, jule::Str::lit("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _209e0e771_Str(&_62913_run);;
}



inline jule::Str _1abd1b5dd_lexStr(_1abd18c5b_lex* _self_) {
	_209e0d4d9_StrBuilder _66913_s = static__209e0d918_New(16LL);;
	jule::U8 _6709_mark = (*((*(_self_))._field_file))._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6729_raw = (_6709_mark == '`');;
	_209e0e232_WriteByte(&_66913_s, _6709_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_Data.len())) {
		{
			jule::U8 _67713_ch = (*(*(_self_))._field_file.alloc)._field_Data[(*(_self_))._field_pos];;
			if ((_67713_ch == '\r')) {
				goto _iter_next_1aed425ab;
			};
			if ((_67713_ch == '\n')) {
				_1abd1ba72_newLine(_self_);
				if ((!(_6729_raw))) {
					_1abd192de_pushErr(_self_, jule::Str::lit("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68917_part = (*(*(_self_))._field_file.alloc)._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69013_r = _1abd1b016_getRune(_self_, &(_68917_part), _6729_raw);;
			_209e0de79_WriteStr(&_66913_s, _69013_r);
			(*(_self_))._field_column+=_209d31671_RuneCountStr(_69013_r);
			if ((_67713_ch == _6709_mark)) {
				goto _iter_end_1aed425ab;
			};
		}
	_iter_next_1aed425ab:;
	}
	_iter_end_1aed425ab:;;
	return _209e0e771_Str(&_66913_s);;
}



inline void _1abd1ba72_newLine(_1abd18c5b_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1abd1c0d3_isOp(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1abd0a38a_Token>* _71066_t) {
	if ((!(_1abd13ddd_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*((*(_71066_t))))._field_Kind=_71037_kind;
	(*((*(_71066_t))))._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1abd1c4ce_lexBasicOps(_1abd18c5b_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1abd0a38a_Token>* _72048_tok) {
	{
		auto expr = &(_1abd134d6_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aed49393:;
		if (it != expr_end) {
			_1abd12c77_kindPair *_72116_pair = it;
			{
				if (_1abd1c0d3_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1aed49393:;
			++it;
			goto _iter_begin_1aed49393;
		}
		_iter_end_1aed49393:;
	};
	return false;;
}



inline jule::Bool _1abd1c8ca_lexId(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1abd0a38a_Token>* _72943_t) {
	jule::Str _7309_lex = _1abd19b91_id(_self_, _72925_txt);;
	if ((_7309_lex).empty()) {
		return false;;
	};
	(*((*(_72943_t))))._field_Kind=_7309_lex;
	(*((*(_72943_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1abd1ccc6_lexNum(_1abd18c5b_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1abd0a38a_Token>* _73944_t) {
	jule::Str _7409_lex = _1abd1a7c9_num(_self_, _73926_txt);;
	if ((_7409_lex).empty()) {
		return false;;
	};
	(*((*(_73944_t))))._field_Kind=_7409_lex;
	(*((*(_73944_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1abd0a38a_Token> _1abd1d05c_token(_1abd18c5b_lex* _self_) {
	jule::Ptr<_1abd0a38a_Token> _75113_t = jule::new_ptr<_1abd0a38a_Token>(_1abd0a38a_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7569_txt = _1abd19e27_resume(_self_);;
	if ((_7569_txt == nullptr)) {
		return _75113_t;;
	};
	(*(_75113_t))._field_Column=(*(_self_))._field_column;
	(*_75113_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1abd1ccc6_lexNum(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aed514dd:;
			{
				goto _match_end_1aed4e3a9;
			}
		}
		else if ((_7569_txt[0LL] == '\'')) {
			_case_begin_1aed51554:;
			{
				(*_75113_t.alloc)._field_Kind=_1abd1b357_lexRune(_self_, &(_7569_txt));
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (((_7569_txt[0LL] == '\"') || (_7569_txt[0LL] == '`'))) {
			_case_begin_1aed515ba:;
			{
				(*_75113_t.alloc)._field_Kind=_1abd1b5dd_lexStr(_self_);
				(*_75113_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _75113_t;;
			}
		}
		else if (_1abd13ddd_bytesHasPrefix(&(_7569_txt), jule::Str::lit("//", 2))) {
			_case_begin_1aed50014:;
			{
				_1abd1a1d0_lexLineComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1abd13ddd_bytesHasPrefix(&(_7569_txt), jule::Str::lit("/*", 2))) {
			_case_begin_1aed5007a:;
			{
				_1abd1a488_lexRangeComment(_self_, &(_75113_t));
				return _75113_t;;
			}
		}
		else if (_1abd1c4ce_lexBasicOps(_self_, _7569_txt, &(_75113_t))) {
			_case_begin_1aed500e1:;
			{
				goto _match_end_1aed4e3a9;
			}
		}
		else if (_1abd1c8ca_lexId(_self_, &(_7569_txt), &(_75113_t))) {
			_case_begin_1aed50157:;
			{
				{
					auto expr = &(_1abd131a6_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aed530a0:;
					if (it != expr_end) {
						_1abd12c77_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == (*_75113_t.alloc)._field_Kind)) {
								(*_75113_t.alloc)._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1aed530a0;
							};
						}
						_iter_next_1aed530a0:;
						++it;
						goto _iter_begin_1aed530a0;
					}
					_iter_end_1aed530a0:;
				};
			}
		}
		else {
			_case_begin_1aed4ee9d:;
			{
				jule::I32 _79513_r;
				jule::I32 _79516_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune(_7569_txt);
					_79513_r = __jule_assign_result.__jule_result_arg0;
					_79516_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1abd192de_pushErr(_self_, jule::Str::lit("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79513_r, &__jule_any_type6)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79516_sz;
				return _75113_t;;
			}
		}
		_match_end_1aed4e3a9:;
	};
	(*(_self_))._field_column+=_209d31671_RuneCountStr((*_75113_t.alloc)._field_Kind);
	return _75113_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd18c5b_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd1d931_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd1e844_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd1ec62_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd20845_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd20e50_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd21219_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd215e3_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd218e0_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd21c75_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd22072_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd226d2_IsUnsafe(_1abd2236e_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2236e_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd22e74_AutoSized(_1abd22b11_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd22b11_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2335e_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd23738_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd24b79_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd24e43_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2554d_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2576d_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd25b14_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd25edd_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd26494_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd26c36_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd27110_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd274d9_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd278b3_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd27c8c_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd28243_BinaryExpr _Src) {
	_Stream << "BinaryExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd28c27_Unhandled(_1abd288a3_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1abd28ead_Ignored(_1abd288a3_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd288a3_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd29398_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd29bc3_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2a179_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2a9a4_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2b1d0_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2bb3c_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2c29c_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2c599_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2ca50_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2ce29_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2d303_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2d600_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2dc60_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd2e2e3_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd30206_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd30866_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd31427_IsSelf(_1abd310a3_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd310a3_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd32868_IsAnon(_1abd32505_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd32505_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd336b0_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd33a89_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd3466c_IsInf(_1abd34309_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd34309_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd34e97_IsWhileNext(_1abd34b34_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd34b34_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3553b_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd35915_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd35cde_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd36295_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3666e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd36b25_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd37362_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd37818_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd38132_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3894b_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd38e02_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd399b3_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3a2dd_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3a94d_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3ac17_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3b60d_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3bd4a_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3c4aa_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd438ac_FieldIns> _1abd3db60_instance(jule::Ptr<_1abd3d7a8_Field> _self_) {
	return jule::new_ptr<_1abd438ac_FieldIns>(_1abd438ac_FieldIns{._field_Decl=_self_, });;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd3d7a8_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd407bb_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd4445c_StructIns> _1abd41b41_instance(jule::Ptr<_1abd416ce_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	jule::Ptr<_1abd4445c_StructIns> _10013_ins = jule::new_ptr<_1abd4445c_StructIns>(_1abd4445c_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1abd438ac_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1abda8d2e_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()), ._field_Refers=static__1abd5cb4b_new(), });;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b016ba28:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _10721_s = *it;
			{
				(*(_10013_ins))._field_Statics=jule::append((*_10013_ins.alloc)._field_Statics,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({jule::new_ptr<_1abda8d2e_Var>((*(_10721_s)))}));
			}
			_iter_next_1b016ba28:;
			++it;
			goto _iter_begin_1b016ba28;
		}
		_iter_end_1b016ba28:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b016bce2:;
		if (it != expr_end) {
			jule::Ptr<_1abd3d7a8_Field> _11121_f = *it;
			{
				(*_10013_ins.alloc)._field_Fields=jule::append((*_10013_ins.alloc)._field_Fields,jule::Slice<jule::Ptr<_1abd438ac_FieldIns>>::make({_1abd3db60_instance(_11121_f)}));
				if ((((!((*_11121_f.alloc)._field_Mutable)) && ((*((*_11121_f.alloc)._field_Kind))._field_Kind != nullptr)) && _1abe446b1_Mutable((*(*_11121_f.alloc)._field_Kind.alloc)._field_Kind))) {
					(*_10013_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1b016bce2:;
			++it;
			goto _iter_begin_1b016bce2;
		}
		_iter_end_1b016bce2:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_10013_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_10013_ins.alloc)._field_Methods=jule::Slice<jule::Ptr<_1abd566a0_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len());
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b0171555:;
			if (it != expr_end) {
				jule::Ptr<_1abd566a0_Fn> _12225_f = *it;
				{
					jule::Ptr<_1abd566a0_Fn> _12321_fins = jule::new_ptr<_1abd566a0_Fn>((*(_12225_f)));;
					(*_12321_fins.alloc)._field_Instances=nullptr;
					(*_10013_ins.alloc)._field_Methods=jule::append((*_10013_ins.alloc)._field_Methods,jule::Slice<jule::Ptr<_1abd566a0_Fn>>::make({_12321_fins}));
				}
				_iter_next_1b0171555:;
				++it;
				goto _iter_begin_1b0171555;
			}
			_iter_end_1b0171555:;
		};
	};
	return _10013_ins;;
}



inline jule::Ptr<_1abd4445c_StructIns> _1abd41e4e_appendInstance(_1abd416ce_Struct* _self_, jule::Ptr<_1abd4445c_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01718b8:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _14021_ains = *it;
			{
				if (_1abd450c8_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1b01718b8:;
			++it;
			goto _iter_begin_1b01718b8;
		}
		_iter_end_1b01718b8:;
	};
	{ jule::Slice<jule::Ptr<_1abd4445c_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1abd566a0_Fn> _1abd4234a_FindMethod(_1abd416ce_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0173dd7:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _15321_f = *it;
			{
				if ((((*(_15321_f))._field_Statically == _15241_statically) && ((*_15321_f.alloc)._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1b0173dd7:;
			++it;
			goto _iter_begin_1b0173dd7;
		}
		_iter_end_1b0173dd7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1abd4268b_FindStatic(_1abd416ce_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b017547c:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _16421_v = *it;
			{
				if (((*(_16421_v))._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1b017547c:;
			++it;
			goto _iter_begin_1b017547c;
		}
		_iter_end_1b017547c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd3d7a8_Field> _1abd429cc_FindField(_1abd416ce_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01771c6:;
		if (it != expr_end) {
			jule::Ptr<_1abd3d7a8_Field> _17521_f = *it;
			{
				if (((*(_17521_f))._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1b01771c6:;
			++it;
			goto _iter_begin_1b01771c6;
		}
		_iter_end_1b01771c6:;
	};
	return nullptr;;
}



inline jule::Bool _1abd42d1d_IsImplements(_1abd416ce_Struct* _self_, jule::Ptr<_1abd69a59_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0178194:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1b0178194:;
			++it;
			goto _iter_begin_1b0178194;
		}
		_iter_end_1b0178194:;
	};
	return false;;
}



inline jule::Bool _1abd4315e_IsUses(_1abd416ce_Struct* _self_, jule::Ptr<_1abd416ce_Struct> _19421_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0178b34:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> *_19516_u = it;
			{
				while ((_19421_s == (*(_19516_u)))) {
					{
						return true;;
					}
				_iter_next_1b017963a:;
				}
				_iter_end_1b017963a:;;
			}
			_iter_next_1b0178b34:;
			++it;
			goto _iter_begin_1b0178b34;
		}
		_iter_end_1b0178b34:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd416ce_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd438ac_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd48362_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4885c_BinaryExprModel _Src) {
	_Stream << "BinaryExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd48c36_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd49264_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4960a_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd49907_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd49e8a_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4a83c_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4ac16_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4b1bc_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4b673_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Captured:" << _Src._field_Captured << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4ba4c_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4c003_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4c586_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4cb19_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4d4aa_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4d851_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4dc2a_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4e027_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4e401_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4e7ca_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4eba4_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd5007d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd50534_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd509da_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd50db4_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd511b1_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd514ad_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd51887_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd51c61_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd5213a_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd527de_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd529cb_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd52c73_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd53070_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd53449_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd53746_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd5444a_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd58608_ParamIns> _1abd55061_instance(jule::Ptr<_1abd54bcb_Param> _self_) {
	return jule::new_ptr<_1abd58608_ParamIns>(_1abd58608_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1abd552e7_IsSelf(_1abd54bcb_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1abd5557d_IsRef(_1abd54bcb_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd54bcb_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abd56b23_IsVoid(_1abd566a0_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1abd56da9_IsMethod(_1abd566a0_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1abd57140_IsEntryPoint(_1abd566a0_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1abd573c6_IsInit(_1abd566a0_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1abd5765c_IsAnon(_1abd566a0_Fn* _self_) {
	return _1abd0d03b_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1abd578e3_AnyVar(_1abd566a0_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1abd59681_FnIns> _1abd57b79_instanceForce(jule::Ptr<_1abd566a0_Fn> _self_) {
	jule::Ptr<_1abd59681_FnIns> _10113_ins = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1ab655576_Scope>(), ._field_Refers=static__1abd5cb4b_new(), });;
	(*(_10113_ins))._field_Params=jule::Slice<jule::Ptr<_1abd58608_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len());
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0191102:;
		if (it != expr_end) {
			jule::Ptr<_1abd54bcb_Param> _10821_p = *it;
			{
				(*_10113_ins.alloc)._field_Params=jule::append((*_10113_ins.alloc)._field_Params,jule::Slice<jule::Ptr<_1abd58608_ParamIns>>::make({_1abd55061_instance(_10821_p)}));
			}
			_iter_next_1b0191102:;
			++it;
			goto _iter_begin_1b0191102;
		}
		_iter_end_1b0191102:;
	};
	if (((*((*_10113_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_10113_ins.alloc)._field_Result=(*((*(*(*_10113_ins.alloc)._field_Decl.alloc)._field_Result.alloc)._field_Kind))._field_Kind;
	};
	return _10113_ins;;
}



inline jule::Ptr<_1abd59681_FnIns> _1abd57e10_instance(jule::Ptr<_1abd566a0_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*_self_.alloc)._field_Instances[0LL];;
	};
	return _1abd57b79_instanceForce(_self_);;
}



inline jule::Ptr<_1abd59681_FnIns> _1abd5821d_appendInstance(_1abd566a0_Fn* _self_, jule::Ptr<_1abd59681_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1abd59681_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1abd59681_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0196822:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _14521_ains = *it;
			{
				if (_1abd5b1dd_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1b0196822:;
			++it;
			goto _iter_begin_1b0196822;
		}
		_iter_end_1b0196822:;
	};
	{ jule::Slice<jule::Ptr<_1abd59681_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd566a0_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abd5896b_Str(_1abd58608_ParamIns* _self_) {
	_209e0d4d9_StrBuilder _16713_s = static__209e0d918_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		_209e0de79_WriteStr(&_16713_s, jule::Str::lit("mut ", 4));
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		_209e0de79_WriteStr(&_16713_s, jule::Str::lit("&_:", 3));
	};
	if (_1abd552e7_IsSelf((*(_self_))._field_Decl)) {
		if (_1abd5557d_IsRef((*(_self_))._field_Decl)) {
			_209e0e232_WriteByte(&_16713_s, '&');
		};
		_209e0de79_WriteStr(&_16713_s, jule::Str::lit("self", 4));
		return _209e0e771_Str(&_16713_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		_209e0de79_WriteStr(&_16713_s, jule::Str::lit("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_209e0de79_WriteStr(&_16713_s, _1abe431e8_Str((*(_self_))._field_Kind));
	};
	return _209e0e771_Str(&_16713_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd58608_ParamIns _Src) {
	_Stream << _1abd5896b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd599c2_Str(_1abd59681_FnIns* _self_) {
	;
	return _1abd5b52e_GetKindStr(_self_, false);;
}



inline jule::Bool _1abd59d13_Equal(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abe42d30_TypeKind> _21921_other) {
	jule::Ptr<_1abd59681_FnIns> _2209_f = _1abe4676d_Fn(_21921_other.ptr());;
	if ((_2209_f == nullptr)) {
		return false;;
	};
	return _1abd5a2a8_EqualFn(_self_, &(_2209_f));;
}



inline jule::Bool _1abd5a2a8_EqualFn(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abd59681_FnIns>* _23024_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Unsafety != (*(*((*(_23024_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1abd56b23_IsVoid((*_self_.alloc)._field_Decl) != _1abd56b23_IsVoid((*((*(_23024_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1abd58608_ParamIns>,jule::Ptr<_1abd58608_ParamIns>> _2409_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1abd58608_ParamIns>,jule::Ptr<_1abd58608_ParamIns>>((void*)__jule_anon1b01a15a7, nullptr, nullptr);;
	if (((*((*(_23024_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _27213_i = 0LL;;
	for (; (_27213_i < (*_self_.alloc)._field_Params.len()); (_27213_i)++) {
		{
			if ((!(_2409_checkParams((*_self_.alloc)._field_Params[_27213_i], (*((*(_23024_f))))._field_Params[_27213_i])))) {
				return false;;
			};
		}
	_iter_next_1b01a6c50:;
	}
	_iter_end_1b01a6c50:;;
	if ((!(_1abd56b23_IsVoid((*_self_.alloc)._field_Decl)))) {
		if ((!(_1abe43539_Equal((*_self_.alloc)._field_Result, (*((*(_23024_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1abd5a5e9_equalTrait(jule::Ptr<_1abd59681_FnIns> _self_, jule::Ptr<_1abd59681_FnIns>* _28927_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Ident != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1abd5a2a8_EqualFn(_self_, _28927_other)))) {
		return false;;
	};
	if (((*(*_self_.alloc)._field_Decl.alloc)._field_Generics.len() != (*(*((*(_28927_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _1abd5a880_Types(_1abd59681_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b01ace76:;
			{
				return nullptr;;
			}
		}
		else if ((_1abe472a7_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b01acedc:;
			{
				return jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b01aca14:;
			{
				return (*(_1abe472a7_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1b01ac915:;
	};
}



inline jule::Bool _1abd5ab16_IsBuiltin(_1abd59681_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1abd5ad9c_IsAnon(_1abd59681_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1abd5765c_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1abd5b1dd_Same(_1abd59681_FnIns* _self_, jule::Ptr<_1abd59681_FnIns> _33219_f) {
	if ((((*(_self_))._field_Decl != (*(_33219_f))._field_Decl) || ((*_33219_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01b13ca:;
		if (it != expr_end) {
			jule::I32 _33713_i = it - expr->begin();
			jule::Ptr<_1abe41449_InsGeneric> *_33716_g = it;
			{
				jule::Ptr<_1abe41449_InsGeneric> _33813_g2 = (*_33219_f.alloc)._field_Generics[_33713_i];;
				if ((((*((*((*(_33716_g))))._field_Kind))._field_BindIdent != (*(*(_33813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1abe43539_Equal((*(*(_33716_g)).alloc)._field_Kind, (*_33813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b01b13ca:;
			++it;
			_33713_i++;
			goto _iter_begin_1b01b13ca;
		}
		_iter_end_1b01b13ca:;
	};
	return true;;
}



inline jule::Str _1abd5b52e_GetKindStr(_1abd59681_FnIns* _self_, jule::Bool _34925_ident) {
	_209e0d4d9_StrBuilder _35013_s = static__209e0d918_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Unsafety) {
		_209e0de79_WriteStr(&_35013_s, jule::Str::lit("unsafe ", 7));
	};
	_209e0de79_WriteStr(&_35013_s, jule::Str::lit("fn", 2));
	if ((_34925_ident && ((*(_self_))._field_Decl != nullptr))) {
		_209e0e232_WriteByte(&_35013_s, ' ');
		_209e0de79_WriteStr(&_35013_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
	};
	_209e0e232_WriteByte(&_35013_s, '(');
	jule::I32 _3649_n = (*(_self_))._field_Params.len();;
	if ((_3649_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b01b66ee:;
			if (it != expr_end) {
				jule::I32 _36617_i = it - expr->begin();
				jule::Ptr<_1abd58608_ParamIns> *_36620_p = it;
				{
					_209e0de79_WriteStr(&_35013_s, _1abd5896b_Str((*(_36620_p)).ptr()));
					if ((_36617_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_209e0e232_WriteByte(&_35013_s, ',');
					};
				}
				_iter_next_1b01b66ee:;
				++it;
				_36617_i++;
				goto _iter_begin_1b01b66ee;
			}
			_iter_end_1b01b66ee:;
		};
	};
	_209e0e232_WriteByte(&_35013_s, ')');
	if ((*(*(_self_))._field_Decl.alloc)._field_Exceptional) {
		_209e0e232_WriteByte(&_35013_s, '!');
	};
	if ((!(_1abd56b23_IsVoid((*(_self_))._field_Decl)))) {
		_209e0e232_WriteByte(&_35013_s, ':');
		_209e0de79_WriteStr(&_35013_s, _1abe431e8_Str((*(_self_))._field_Result.ptr()));
	};
	return _209e0e771_Str(&_35013_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd59681_FnIns _Src) {
	_Stream << _1abd599c2_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1abd5c860_ReferenceStack> static__1abd5cb4b_new(void) {
	return jule::new_ptr<_1abd5c860_ReferenceStack>(_1abd5c860_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1abd5d047_Len(_1abd5c860_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1abd5d388_At(_1abd5c860_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1abd5d641_Push(_1abd5c860_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1b15aa053_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd59681_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15ab3c8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b15ab3c8:;
			++it;
			goto _iter_begin_1b15ab3c8;
		}
		_iter_end_1b15ab3c8:;
	};
	return false;;
}

inline jule::Bool _1b15c0e37_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abda8d2e_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15c2268:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b15c2268:;
			++it;
			goto _iter_begin_1b15c2268;
		}
		_iter_end_1b15c2268:;
	};
	return false;;
}

inline jule::Bool _1ae7a5b9b_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd4445c_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae7a7065:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1ae7a7065:;
			++it;
			goto _iter_begin_1ae7a7065;
		}
		_iter_end_1ae7a7065:;
	};
	return false;;
}

inline jule::Bool _1b17c2aea_Exist(_1abd5c860_ReferenceStack* _self_, jule::Ptr<_1abd69a59_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b17c3de8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b17c3de8:;
			++it;
			goto _iter_begin_1b17c3de8;
		}
		_iter_end_1b17c3de8:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd5c860_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd5dd6c_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1abd642c3_pushErr(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd0a38a_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab6955e9_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1abd64a54_pushSuggestion(_1abd63822_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1ab696ba0_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1abd64e50_checkCppUseDeclPath(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3469_ext = _20b0e5291_Ext((*(_34556_path)));;
	if (((!(_1eb221ce5_IsValidHeaderExt(_3469_ext))) && (!(_1eb2220ae_IsValidCppExt(_3469_ext))))) {
		_1abd642c3_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_3469_ext, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_209c26e6d_Status> _3539_info = ({
		auto except = static__20b0e72e8_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1abd642c3_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_209c26e6d_Status>(nullptr);});
	});;
	if (_209c27347_IsDir(_3539_info.ptr())) {
		_1abd642c3_pushErr(_self_, &((*((*(_34539_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_34539_decl))))._field_LinkPath, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abd6525d_buildCppHeaderImport(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _36544_decl) {
	jule::Str _36613_path = (*((*(_36544_decl))))._field_LinkPath;;
	if ((!(_1eb221a1a_IsStdHeaderPath((*((*(_36544_decl))))._field_LinkPath)))) {
		_36613_path=_20b0e500a_Join(jule::Slice<jule::Str>::make({_1abd112c5_Dir((*((*((*(_36544_decl))))._field_Token))._field_File.ptr()),(*((*(_36544_decl))))._field_LinkPath}));
		jule::Bool _37017_ok = _1abd64e50_checkCppUseDeclPath(_self_, _36544_decl, &(_36613_path));;
		if ((!(_37017_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20b0e555a_Abs(_36613_path);
			_36613_path = __jule_assign_result.__jule_result_arg0;
			_37017_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37017_ok))) {
			_1abd642c3_pushErr(_self_, &((*((*(_36544_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_36544_decl))))._field_LinkPath, &__jule_any_type4)}));
		};
	};
	return jule::new_ptr<_1ab67760e_ImportInfo>(_1ab67760e_ImportInfo{._field_Token=(*((*(_36544_decl))))._field_Token, ._field_Path=_36613_path, ._field_LinkPath=(*((*(_36544_decl))))._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abd6559e_buildStdImport(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _39338_decl) {
	jule::Str _39513_path = (*((*(_39338_decl))))._field_LinkPath.slice(5LL);;
	_39513_path=_20b0e0775_Replace(_39513_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_39513_path=_20b0e500a_Join(jule::Slice<jule::Str>::make({_20b1a024c_PathStdlib,_39513_path}));
	jule::Bool _39815_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20b0e555a_Abs(_39513_path);
		_39513_path = __jule_assign_result.__jule_result_arg0;
		_39815_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39815_ok))) {
		_1abd642c3_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_209c26e6d_Status> _4059_info = ({
		auto except = static__20b0e72e8_Of(_39513_path);
		(except.ok()) ? (except.result) : ({{
			_1abd642c3_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_209c26e6d_Status>(nullptr);});
	});;
	if ((!(_209c27347_IsDir(_4059_info.ptr())))) {
		_1abd642c3_pushErr(_self_, &((*((*(_39338_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_39338_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4159_i = (_20b0db2ed_FindLast((*((*(_39338_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4169_ident = (*((*(_39338_decl))))._field_LinkPath.slice(_4159_i);;
	return jule::new_ptr<_1ab67760e_ImportInfo>(_1ab67760e_ImportInfo{._field_Token=(*((*(_39338_decl))))._field_Token, ._field_Path=_39513_path, ._field_LinkPath=(*((*(_39338_decl))))._field_LinkPath, ._field_Ident=_4169_ident, ._field_Alias=(*((*(_39338_decl))))._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*((*(_39338_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab67a535_Package>(_1ab67a535_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abd658e0_buildIdentImport(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _43341_decl) {
	if ((((*((*(_43341_decl))))._field_LinkPath.equal("_", 1) || (_20b0daa4a_Find((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_::", 5)) != -1LL)) || _20b0da253_HasSuffix((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::_", 3)))) {
		_1abd642c3_pushErr(_self_.ptr(), &((*((*(_43341_decl))))._field_Token), jule::Str::lit("use declaration paths cannot contain blank identifier", 53), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _4419_modPath = ((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab67375e_GetModPath((*_self_.alloc)._field_importer.data);;
	if ((_4419_modPath.len() == 0LL)) {
		_1abd642c3_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1abd64a54_pushSuggestion(_self_, jule::Str::lit("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44813_path = (*((*(_43341_decl))))._field_LinkPath;;
	_44813_path=_20b0e0775_Replace(_44813_path, jule::Str::lit("::", 2), jule::Str::lit("\\", 1), -1LL);
	_44813_path=_20b0e500a_Join(jule::Slice<jule::Str>::make({_4419_modPath,_44813_path}));
	jule::Bool _45215_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20b0e555a_Abs(_44813_path);
		_44813_path = __jule_assign_result.__jule_result_arg0;
		_45215_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_45215_ok))) {
		_1abd642c3_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_209c26e6d_Status> _4599_info = ({
		auto except = static__20b0e72e8_Of(_44813_path);
		(except.ok()) ? (except.result) : ({{
			_1abd642c3_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
			return nullptr;;
		} jule::Ptr<_209c26e6d_Status>(nullptr);});
	});;
	if ((!(_209c27347_IsDir(_4599_info.ptr())))) {
		_1abd642c3_pushErr(_self_, &((*((*(_43341_decl))))._field_Token), jule::Str::lit("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*((*(_43341_decl))))._field_LinkPath, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _4699_i = (_20b0db2ed_FindLast((*((*(_43341_decl))))._field_LinkPath, jule::Str::lit("::", 2)) + 1LL);;
	jule::Str _4709_ident = (*((*(_43341_decl))))._field_LinkPath.slice(_4699_i);;
	return jule::new_ptr<_1ab67760e_ImportInfo>(_1ab67760e_ImportInfo{._field_Token=(*((*(_43341_decl))))._field_Token, ._field_Path=_44813_path, ._field_LinkPath=(*((*(_43341_decl))))._field_LinkPath, ._field_Ident=_4709_ident, ._field_Alias=(*((*(_43341_decl))))._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*((*(_43341_decl))))._field_Full, ._field_Package=jule::new_ptr<_1ab67a535_Package>(_1ab67a535_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abd65c31_buildImport(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _48736_decl) {
	{
		
		if ((*((*(_48736_decl))))._field_Binded) {
			_case_begin_1b020a127:;
			{
				return _1abd6525d_buildCppHeaderImport(_self_.ptr(), _48736_decl);;
			}
		}
		else if ((*((*(_48736_decl))))._field_Std) {
			_case_begin_1b020a523:;
			{
				return _1abd6559e_buildStdImport(_self_.ptr(), _48736_decl);;
			}
		}
		else {
			_case_begin_1b020a0b1:;
			{
				return _1abd658e0_buildIdentImport(_self_, _48736_decl);;
			}
		}
		_match_end_1b0209eb2:;
	};
}



inline jule::Bool _1abd66072_checkDuplicateUseDecl(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _49841_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ab67760e_ImportInfo> _5009_lpkg = _1abe0baa7_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>>((void*)__jule_anon_1b020c6e0, jule::Ptr<__jule_anon_1b020c6e0_ctx>::make(__jule_anon_1b020c6e0_ctx{._49841_pkg=_49841_pkg}).as<jule::Uintptr>(), __jule_anon_1b020c6e0_ctx_handler));;
	if ((_5009_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1abd642c3_pushErr(_self_, &((*((*(_49841_pkg))))._field_Token), jule::Str::lit("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_49841_pkg))))._field_LinkPath, &__jule_any_type4)}));
	_1abd64a54_pushSuggestion(_self_, jule::Str::lit("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1abd663d5_implImportSelections(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _51244_imp, jule::Ptr<_1abd3894b_UseDecl>* _51267_decl) {
	(*((*(_51244_imp))))._field_Selected=(*((*(_51267_decl))))._field_Selected;
	{
		auto expr = &((*((*(_51244_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b02101a4:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> _51416_item = *it;
			{
				{
					auto expr = &((*((*(_51244_imp))))._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0210a9a:;
					if (it != expr_end) {
						jule::Ptr<_1abd0a38a_Token> _51520_citem = *it;
						{
							if ((_51416_item == _51520_citem)) {
								goto _iter_end_1b0210a9a;
							} else if (((*(_51416_item))._field_Kind == (*(_51520_citem))._field_Kind)) {
								_1abd642c3_pushErr(_self_, &(_51416_item), jule::Str::lit("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any((*_51416_item.alloc)._field_Kind, &__jule_any_type4)}));
								_1abd64a54_pushSuggestion(_self_, jule::Str::lit("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b0210a9a;
							};
						}
						_iter_next_1b0210a9a:;
						++it;
						goto _iter_begin_1b0210a9a;
					}
					_iter_end_1b0210a9a:;
				};
			}
			_iter_next_1b02101a4:;
			++it;
			goto _iter_begin_1b02101a4;
		}
		_iter_end_1b02101a4:;
	};
}



inline jule::Str _1abd66726_getAsLinkPath(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Str _52737_path) {
	if (_20b0d9dce_HasPrefix(_52737_path, _20b1a024c_PathStdlib)) {
		(_52737_path).mut_slice(_20b1a024c_PathStdlib.len());;
		return (jule::Str::lit("std", 3) + _20b0e0775_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));;
	};
	jule::Str _5339_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20b0e555a_Abs(((_1ab6746e9_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab67375e_GetModPath((*(_self_))._field_importer.data));
		_5339_root = __jule_assign_result.__jule_result_arg0;
	});
	(_52737_path).mut_slice(_5339_root.len());;
	if ((_52737_path[0LL] == 92LLU)) {
		(_52737_path).mut_slice(1LL);;
	};
	return _20b0e0775_Replace(_52737_path, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL);;
}



inline void _1abd66b44_pushCycleError(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd63822_symbolBuilder>* _54135_sb, jule::Str _54155_path, _209e0d4d9_StrBuilder* _54171_message) {
	;
	jule::Str _5439_refersTo = _1eb22e594_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1abd66726_getAsLinkPath(_self_, _1abd112c5_Dir((*((*((*(_54135_sb))))._field_table))._field_File.ptr())), &__jule_any_type4),jule::Any(_1abd66726_getAsLinkPath(_self_, _54155_path), &__jule_any_type4)}));;
	jule::Str _5479_m = _209e0e771_Str(_54171_message);;
	_209e0de79_WriteStr(_54171_message, _20b0d9a16_Repeat(jule::Str::lit(" ", 1), 7LL));
	_209e0de79_WriteStr(_54171_message, _5439_refersTo);
	_209e0e232_WriteByte(_54171_message, '\n');
	_209e0de79_WriteStr(_54171_message, _5479_m);
}



inline void _1abd67062_pushCrossCycleError(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd63822_symbolBuilder>* _55440_target, jule::Ptr<_1ab67760e_ImportInfo>* _55465_imp, jule::Ptr<_1abd0a38a_Token>* _55484_errorToken) {
	_209e0d4d9_StrBuilder _55513_message = static__209e0d918_New(32LL);;
	_1abd66b44_pushCycleError(_self_, &(_self_), (*((*(_55465_imp))))._field_Path, &(_55513_message));
	jule::Ptr<_1abd63822_symbolBuilder> _55913_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1abd63822_symbolBuilder> _56013_old = _self_;;
	while (((*(_55913_owner))._field_owner != nullptr)) {
		{
			_1abd66b44_pushCycleError(_self_, &((*_56013_old.alloc)._field_owner), _1abd112c5_Dir((*((*_56013_old.alloc)._field_table))._field_File.ptr()), &(_55513_message));
			if (((*_55913_owner.alloc)._field_owner == (*(_55440_target)))) {
				_1abd66b44_pushCycleError(_self_, _55440_target, _1abd112c5_Dir((*(*_55913_owner.alloc)._field_table.alloc)._field_File), &(_55513_message));
				goto _iter_end_1b02196ec;
			};
			_56013_old=_55913_owner;
			_55913_owner=(*_55913_owner.alloc)._field_owner;
		}
	_iter_next_1b02196ec:;
	}
	_iter_end_1b02196ec:;;
	_1abd642c3_pushErr(_self_, _55484_errorToken, jule::Str::lit("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_209e0e771_Str(&_55513_message), &__jule_any_type4)}));
}



inline jule::Bool _1abd6745d_checkImportCycles(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1ab67760e_ImportInfo> _57737_imp, jule::Ptr<_1abd3894b_UseDecl>* _57756_decl) {
	if (((*(_57737_imp))._field_Path == _1abd112c5_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1abd642c3_pushErr(_self_, &((*((*(_57756_decl))))._field_Token), jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1abd66726_getAsLinkPath(_self_, (*_57737_imp.alloc)._field_Path), &__jule_any_type4)}));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1abd63822_symbolBuilder> _58713_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1b02200e8:;
	if ((_1abd112c5_Dir((*(*(_58713_owner))._field_table.alloc)._field_File) == (*_57737_imp.alloc)._field_Path)) {
		_1abd67062_pushCrossCycleError(_self_, &(_58713_owner), &(_57737_imp), &((*((*(_57756_decl))))._field_Token));
		return false;;
	};
	if (((*_58713_owner.alloc)._field_owner != nullptr)) {
		_58713_owner=(*_58713_owner.alloc)._field_owner;
		goto _julec_label_1b02200e8;
	};
	return true;;
}



inline void _1abd6787b_checkPackageAccessibility(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd3894b_UseDecl>* _60845_decl, jule::Str* _60862_mod, jule::Str* _60873_path) {
	if (((((_1ab6746e9_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab67375e_GetModPath((*(_self_))._field_importer.data) != (*(_60862_mod))) && _20b0de39a_Contains((*(_60873_path)), jule::Str::lit("internal", 8)))) {
		_1abd642c3_pushErr(_self_, &((*((*(_60845_decl))))._field_Token), jule::Str::lit("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1abd67c77_importPackage(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1ab67760e_ImportInfo>* _61438_imp, jule::Ptr<_1abd3894b_UseDecl>* _61461_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_61438_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab67760e_ImportInfo> _61913_port = ((_1ab6746e9_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ab673de1_GetImport((*(_self_))._field_importer.data, (*((*(_61438_imp))))._field_Path);;
	if ((_61913_port != nullptr)) {
		(*((*(_61438_imp))))._field_Package=(*_61913_port.alloc)._field_Package;
		(*((*(_61438_imp))))._field_Duplicate=true;
		jule::Str _62413_oldMod = ((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab67375e_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab6734c8_SetModPath((*_self_.alloc)._field_importer.data, ((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab673aa0_ModById((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_ModId));
		_1abd6787b_checkPackageAccessibility(_self_, _61461_decl, &(_62413_oldMod), &((*_61913_port.alloc)._field_Path));
		((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab6734c8_SetModPath((*_self_.alloc)._field_importer.data, _62413_oldMod);
	} else {
		if ((!(_1abd6745d_checkImportCycles(_self_, (*(_61438_imp)), _61461_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63313_oldMod = ((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab67375e_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab6734c8_SetModPath((*_self_.alloc)._field_importer.data, _63313_oldMod);
		});;
		if ((*((*(_61438_imp))))._field_Std) {
			((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab6734c8_SetModPath((*_self_.alloc)._field_importer.data, _20b1a024c_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1abd1d931_Ast>> _63817_asts;
		jule::Slice<_1eb22e132_Log> _63827_errors;
		({
			__jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_assign_result = ((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab6742dc_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_61438_imp))))._field_Path, (!((*((*(_61438_imp))))._field_Std)));
			_63817_asts = __jule_assign_result.__jule_result_arg0;
			_63827_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63827_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1abd6787b_checkPackageAccessibility(_self_, _61461_decl, &(_63313_oldMod), &((*((*(_61438_imp))))._field_Path));
		{
			auto expr = &(_63817_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b022b720:;
			if (it != expr_end) {
				jule::Ptr<_1abd1d931_Ast> _64625_ast = *it;
				{
					jule::Ptr<_1abe0b5bd_SymbolTable> _64725_table = nullptr;;
					({
						__jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1abe63713_buildSymbols(&(_64625_ast), &((*_self_.alloc)._field_importer), _self_);
						_64725_table = __jule_assign_result.__jule_result_arg0;
						_63827_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63827_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_63827_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_61438_imp))))._field_Package))._field_Files=jule::append((*(*((*(_61438_imp))))._field_Package.alloc)._field_Files,jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>::make({_64725_table}));
				}
				_iter_next_1b022b720:;
				++it;
				goto _iter_begin_1b022b720;
			}
			_iter_end_1b022b720:;
		};
	};
	_1abd663d5_implImportSelections(_self_, _61438_imp, _61461_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abd680b8_importUseDecl(jule::Ptr<_1abd63822_symbolBuilder> _self_, jule::Ptr<_1abd3894b_UseDecl>* _66138_decl) {
	jule::Ptr<_1ab67760e_ImportInfo> _66213_imp = _1abd65c31_buildImport(_self_, _66138_decl);;
	if ((_66213_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66813_ok = _1abd66072_checkDuplicateUseDecl(_self_, &(_66213_imp));;
	if ((!(_66813_ok))) {
		return nullptr;;
	};
	_66813_ok=_1abd67c77_importPackage(_self_, &(_66213_imp), _66138_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Imports,jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>>::make({_66213_imp}));
	if (_66813_ok) {
		((_1ab6746e9_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ab674595_Imported((*_self_.alloc)._field_importer.data, _66213_imp);
		return _66213_imp;;
	};
	return nullptr;;
}



inline void _1abd682b6_importUseDecls(jule::Ptr<_1abd63822_symbolBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b02321c6:;
		if (it != expr_end) {
			jule::Ptr<_1abd3894b_UseDecl> _68321_decl = *it;
			{
				_1abd680b8_importUseDecl(_self_, &(_68321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1b02321c6;
				};
			}
			_iter_next_1b02321c6:;
			++it;
			goto _iter_begin_1b02321c6;
		}
		_iter_end_1b02321c6:;
	};
}



inline void _1abd6856e_appendNode(_1abd63822_symbolBuilder* _self_, _1abd1e844_Node* _69234_node) {
	{
		auto &_match_expr{ (*(_69234_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b0232726:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,jule::Slice<jule::Ptr<_1ab650120_Impl>>::make({_1abd6325b_buildImpl((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd3c4aa_Impl>())}));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b0233738:;
			{
				jule::Ptr<_1abe4203d_TypeAlias> _69717_ta = _1abd5e7a7_buildTypeAlias((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd37362_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>::make({_69717_ta}));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b023379e:;
			{
				jule::Ptr<_1abd416ce_Struct> _70017_srct = _1abd60148_buildStruct((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd3b60d_StructDecl>());;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,jule::Slice<jule::Ptr<_1abd416ce_Struct>>::make({_70017_srct}));
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b0233815:;
			{
				jule::Ptr<_1abd566a0_Fn> _70317_f = _1abd60ce7_buildFunc((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd32505_FnDecl>());;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,jule::Slice<jule::Ptr<_1abd566a0_Fn>>::make({_70317_f}));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b023387b:;
			{
				jule::Ptr<_1abd69a59_Trait> _70617_t = _1abd61644_buildTrait((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd3bd4a_TraitDecl>());;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,jule::Slice<jule::Ptr<_1abd69a59_Trait>>::make({_70617_t}));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b02338e2:;
			{
				jule::Ptr<_1abda8d2e_Var> _70917_v = _1abd62bc8_buildVar((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd336b0_VarDecl>());;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({_70917_v}));
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b0234030:;
			{
				jule::Ptr<_1abd6c265_Enum> _71217_e = _1abd621c2_buildEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd399b3_EnumDecl>());;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,jule::Slice<jule::Ptr<_1abd6c265_Enum>>::make({_71217_e}));
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b0234096:;
			{
				jule::Ptr<_1abd6d970_TypeEnum> _71517_e = _1abd6290e_buildTypeEnum((*(_69234_node))._field_Data.unsafe_cast_ptr<_1abd3a94d_TypeEnumDecl>());;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,jule::Slice<jule::Ptr<_1abd6d970_TypeEnum>>::make({_71517_e}));
			}
		}
		else {
			_case_begin_1b0233628:;
			{
				_1abd642c3_pushErr(_self_, &((*(_69234_node))._field_Token), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b02335c3:;
	};
}



inline void _1abd6876c_appendNodes(_1abd63822_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b023d578:;
		if (it != expr_end) {
			_1abd1e844_Node _72321_node = *it;
			{
				_1abd6856e_appendNode(_self_, &(_72321_node));
			}
			_iter_next_1b023d578:;
			++it;
			goto _iter_begin_1b023d578;
		}
		_iter_end_1b023d578:;
	};
}



inline void _1abd68a25_pushDirectivePass(_1abd63822_symbolBuilder* _self_, jule::Ptr<_1abd1ec62_Directive>* _72841_d) {
	if (((*((*(_72841_d))))._field_Args.len() == 0LL)) {
		_1abd642c3_pushErr(_self_, &((*((*(_72841_d))))._field_Tag), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_72841_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1abd0a38a_Token> _73313_arg = (*((*(_72841_d))))._field_Args[1LL];;
		_1abd642c3_pushErr(_self_, &(_73313_arg), jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_72841_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1abd0a38a_Token> _7379_arg = (*((*(_72841_d))))._field_Args[0LL];;
	if (((*(_7379_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1abd642c3_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7379_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1abd642c3_pushErr(_self_, &(_7379_arg), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,jule::Slice<_1abd5dd6c_Pass>::make({_1abd5dd6c_Pass{._field_Token=(*((*(_72841_d))))._field_Tag, ._field_Text=(*_7379_arg.alloc)._field_Kind.slice(1LL, ((*_7379_arg.alloc)._field_Kind.len() - 1LL))}}));
}



inline void _1abd68c23_appendTopDirectives(_1abd63822_symbolBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0243c10:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _75521_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_75521_d))._field_Tag))._field_Kind };
					
					if (_match_expr == jule::Str::lit("pass", 4)) {
						_case_begin_1b02456b2:;
						{
							_1abd68a25_pushDirectivePass(_self_, &(_75521_d));
						}
					}
					_match_end_1b02455e6:;
				};
			}
			_iter_next_1b0243c10:;
			++it;
			goto _iter_begin_1b0243c10;
		}
		_iter_end_1b0243c10:;
	};
}



inline void _1abd68e21_build(jule::Ptr<_1abd63822_symbolBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1abe0b5bd_SymbolTable>(_1abe0b5bd_SymbolTable{._field_File=(*((*_self_.alloc)._field_ast))._field_File, });
	_1abd68c23_appendTopDirectives(_self_);
	_1abd682b6_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1abd6876c_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd63822_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abd69e22_Str(_1abd69a59_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1abd6a263_Equal(jule::Ptr<_1abd69a59_Trait> _self_, jule::Ptr<_1abe42d30_TypeKind> _2521_other) {
	jule::Ptr<_1abd69a59_Trait> _269_trt = _1abe46c8a_Trait(_2521_other.ptr());;
	return (_self_ == _269_trt);;
}



inline jule::Ptr<_1abd566a0_Fn> _1abd6a708_FindMethod(_1abd69a59_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0249089:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _3521_f = *it;
			{
				if (((*(_3521_f))._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1b0249089:;
			++it;
			goto _iter_begin_1b0249089;
		}
		_iter_end_1b0249089:;
	};
	return _1abd6ad8a_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1abd566a0_Fn> _1abd6ad8a_findMethodInherit(_1abd69a59_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b024b2ab:;
		if (it != expr_end) {
			jule::Ptr<_1abe4a002_TypeSymbol> _5621_i = *it;
			{
				if (((*(_5621_i))._field_Kind == nullptr)) {
					goto _iter_next_1b024b2ab;
				};
				jule::Ptr<_1abd69a59_Trait> _6017_t = _1abe46c8a_Trait((*_5621_i.alloc)._field_Kind.ptr());;
				if ((_6017_t != nullptr)) {
					jule::Ptr<_1abd566a0_Fn> _6221_f2 = _1abd6a708_FindMethod(_6017_t, (*(_5537_ident)));;
					if ((_6221_f2 != nullptr)) {
						return _6221_f2;;
					};
				};
			}
			_iter_next_1b024b2ab:;
			++it;
			goto _iter_begin_1b024b2ab;
		}
		_iter_end_1b024b2ab:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd69a59_Trait _Src) {
	_Stream << _1abd69e22_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1abd6baa0_AutoExpr(_1abd6b6e8_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd6b6e8_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abd6c5d9_Str(_1abd6c265_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1abd6c92a_Equal(jule::Ptr<_1abd6c265_Enum> _self_, jule::Ptr<_1abe42d30_TypeKind> _3821_other) {
	jule::Ptr<_1abd6c265_Enum> _399_enm = _1abe45c34_Enum(_3821_other.ptr());;
	return (_self_ == _399_enm);;
}



inline jule::Ptr<_1abd6b6e8_EnumItem> _1abd6cd59_FindItem(_1abd6c265_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b02509b9:;
		if (it != expr_end) {
			jule::Ptr<_1abd6b6e8_EnumItem> _4821_item = *it;
			{
				if (((*(_4821_item))._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1b02509b9:;
			++it;
			goto _iter_begin_1b02509b9;
		}
		_iter_end_1b02509b9:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd6c265_Enum _Src) {
	_Stream << _1abd6c5d9_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd6d398_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abd6dcb1_Str(_1abd6d970_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1abd6e102_Equal(jule::Ptr<_1abd6d970_TypeEnum> _self_, jule::Ptr<_1abe42d30_TypeKind> _8021_other) {
	jule::Ptr<_1abd6d970_TypeEnum> _819_tenm = _1abe45eba_TypeEnum(_8021_other.ptr());;
	return (_self_ == _819_tenm);;
}



inline jule::Ptr<_1abd6d398_TypeEnumItem> _1abd6e531_FindItem(_1abd6d970_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0252c41:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d398_TypeEnumItem> _9021_item = *it;
			{
				if (((*(_9021_item))._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1b0252c41:;
			++it;
			goto _iter_begin_1b0252c41;
		}
		_iter_end_1b0252c41:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd6d970_TypeEnum _Src) {
	_Stream << _1abd6dcb1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd71e4b_Str(_1abd71ac7_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1abd7228c_Equal(jule::Ptr<_1abd71ac7_comptimeRange> _self_, jule::Ptr<_1abe42d30_TypeKind> _3621_other) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd71ac7_comptimeRange _Src) {
	_Stream << _1abd71e4b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd72963_Str(_1abd7259a_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1abd72ca4_Equal(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe42d30_TypeKind> _4621_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1abd73348__Name(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _5026_e, jule::Ptr<_1abd288a3_FnCallExpr>* _5041_fc) {
	if (((*((*(_5041_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_5026_e)).ptr(), (*((*((*(_5041_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _5513_constant = static__1b9aad262_NewStr((*((*((*(_self_))._field_field))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_5513_constant, &__jule_any_type19), ._field_Constant=_5513_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd73744__Type(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _6330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _6345_fc) {
	if (((*((*(_6345_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_6330_e)).ptr(), (*((*((*(_6345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_6330_e))))._field_s), &((*((*(_self_))._field_field))._field_Kind));;
}



inline jule::Ptr<_1abe11936_Data> _1abd73b40__Public(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Ptr<_1abe1365d_Eval>* _7132_e, jule::Ptr<_1abd288a3_FnCallExpr>* _7147_fc) {
	if (((*((*(_7147_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_7132_e)).ptr(), (*((*((*(_7147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _7613_constant = static__1b9aace98_NewBool((*((*((*(_self_))._field_field))._field_Decl))._field_Public);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_7613_constant, &__jule_any_type19), ._field_Constant=_7613_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd73e4d_subIdent(jule::Ptr<_1abd7259a_comptimeStructField> _self_, jule::Str* _8429_ident) {
	{
		auto &_match_expr{ (*(_8429_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b0260897:;
			{
				jule::Ptr<_1abd59681_FnIns> _8717_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0261ba6, jule::Ptr<__jule_anon_1b0261ba6_ctx>::make(__jule_anon_1b0261ba6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0261ba6_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_8717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b0260941:;
			{
				jule::Ptr<_1abd59681_FnIns> _9417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0263b53, jule::Ptr<__jule_anon_1b0263b53_ctx>::make(__jule_anon_1b0263b53_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0263b53_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_9417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b02609b8:;
			{
				jule::Ptr<_1abd59681_FnIns> _10117_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0265aab, jule::Ptr<__jule_anon_1b0265aab_ctx>::make(__jule_anon_1b0265aab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0265aab_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_10117_method));;
			}
		}
		else {
			_case_begin_1b02605ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0260732:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd7259a_comptimeStructField _Src) {
	_Stream << _1abd72963_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd745d0_Str(_1abd7425b_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1abd74921_Equal(jule::Ptr<_1abd7425b_comptimeStructFields> _self_, jule::Ptr<_1abe42d30_TypeKind> _12021_other) {
	return false;;
}



inline void _1abd74d94_ready(_1abd7425b_comptimeStructFields* _self_, jule::Ptr<_1abda8d2e_Var>* _12429_keyA, jule::Ptr<_1abda8d2e_Var>* _12446_keyB) {
	if (((*(_12429_keyA)) != nullptr)) {
		(*((*(_12429_keyA))))._field_Constant=true;
		(*((*(_12429_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_12429_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_12446_keyB)) != nullptr)) {
		(*((*(_12446_keyB))))._field_Constant=true;
		(*((*(_12446_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_12446_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd7259a_comptimeStructField>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data6)})});
	};
}



inline void _1abd752b2_step(_1abd7425b_comptimeStructFields* _self_, jule::I32 _14523_i, jule::Ptr<_1abda8d2e_Var>* _14536_keyA, jule::Ptr<_1abda8d2e_Var>* _14553_keyB) {
	if (((*(_14536_keyA)) != nullptr)) {
		(*((*((*((*(_14536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_14523_i));
		(*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_14536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_14553_keyB)) != nullptr)) {
		(*(_1abe47a5a_comptimeStructField((*((*((*(_14553_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_14523_i];
	};
}



inline jule::I32 _1abd75548_len(_1abd7425b_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd7425b_comptimeStructFields _Src) {
	_Stream << _1abd745d0_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd75bca_Str(_1abd75856_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1abd7601b_Equal(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe42d30_TypeKind> _16921_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1abd76648__Name(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _17326_e, jule::Ptr<_1abd288a3_FnCallExpr>* _17341_fc) {
	if (((*((*(_17341_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_17326_e)).ptr(), (*((*((*(_17341_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _17813_constant = static__1b9aad262_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_17813_constant, &__jule_any_type19), ._field_Constant=_17813_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd76a44__Type(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _18630_e, jule::Ptr<_1abd288a3_FnCallExpr>* _18645_fc) {
	if (((*((*(_18645_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_18630_e)).ptr(), (*((*((*(_18645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_18630_e))))._field_s), &((*((*((*(_self_))._field_field))._field_Kind))._field_Kind));;
}



inline jule::Ptr<_1abe11936_Data> _1abd76e40__Public(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Ptr<_1abe1365d_Eval>* _19432_e, jule::Ptr<_1abd288a3_FnCallExpr>* _19447_fc) {
	if (((*((*(_19447_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_19432_e)).ptr(), (*((*((*(_19447_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _19913_constant = static__1b9aace98_NewBool((*((*(_self_))._field_field))._field_Public);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_19913_constant, &__jule_any_type19), ._field_Constant=_19913_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd77281_subIdent(jule::Ptr<_1abd75856_comptimeStatic> _self_, jule::Str* _20729_ident) {
	{
		auto &_match_expr{ (*(_20729_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b027656c:;
			{
				jule::Ptr<_1abd59681_FnIns> _21017_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0277859, jule::Ptr<__jule_anon_1b0277859_ctx>::make(__jule_anon_1b0277859_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0277859_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_21017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b0276616:;
			{
				jule::Ptr<_1abd59681_FnIns> _21717_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b02797b2, jule::Ptr<__jule_anon_1b02797b2_ctx>::make(__jule_anon_1b02797b2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02797b2_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_21717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b027668d:;
			{
				jule::Ptr<_1abd59681_FnIns> _22417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b027b71a, jule::Ptr<__jule_anon_1b027b71a_ctx>::make(__jule_anon_1b027b71a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b027b71a_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_22417_method));;
			}
		}
		else {
			_case_begin_1b0276281:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0276407:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd75856_comptimeStatic _Src) {
	_Stream << _1abd75bca_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd7788b_Str(_1abd77517_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1abd77bcc_Equal(jule::Ptr<_1abd77517_comptimeStatics> _self_, jule::Ptr<_1abe42d30_TypeKind> _24321_other) {
	return false;;
}



inline void _1abd78150_ready(_1abd77517_comptimeStatics* _self_, jule::Ptr<_1abda8d2e_Var>* _24729_keyA, jule::Ptr<_1abda8d2e_Var>* _24746_keyB) {
	if (((*(_24729_keyA)) != nullptr)) {
		(*((*(_24729_keyA))))._field_Constant=true;
		(*((*(_24729_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_24729_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_24746_keyB)) != nullptr)) {
		(*((*(_24746_keyB))))._field_Constant=true;
		(*((*(_24746_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_24746_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd75856_comptimeStatic>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data8)})});
	};
}



inline void _1abd7856d_step(_1abd77517_comptimeStatics* _self_, jule::I32 _26823_i, jule::Ptr<_1abda8d2e_Var>* _26836_keyA, jule::Ptr<_1abda8d2e_Var>* _26853_keyB) {
	if (((*(_26836_keyA)) != nullptr)) {
		(*((*((*((*(_26836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_26823_i));
		(*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_26836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_26853_keyB)) != nullptr)) {
		(*(_1abe49364_comptimeStatic((*((*((*(_26853_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_26823_i];
	};
}



inline jule::I32 _1abd78804_len(_1abd77517_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd77517_comptimeStatics _Src) {
	_Stream << _1abd7788b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd79096_Str(_1abd78b12_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1abd793d7_Equal(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Ptr<_1abe42d30_TypeKind> _29221_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1abd7985a__Name(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Ptr<_1abe1365d_Eval>* _29626_e, jule::Ptr<_1abd288a3_FnCallExpr>* _29641_fc) {
	if (((*((*(_29641_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_29626_e)).ptr(), (*((*((*(_29641_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _30113_constant = static__1b9aad262_NewStr((*((*(_self_))._field_field))._field_Ident);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_30113_constant, &__jule_any_type19), ._field_Constant=_30113_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd79b9b_subIdent(jule::Ptr<_1abd78b12_comptimeEnumField> _self_, jule::Str* _30929_ident) {
	{
		auto &_match_expr{ (*(_30929_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b028735d:;
			{
				jule::Ptr<_1abd59681_FnIns> _31217_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b028853a, jule::Ptr<__jule_anon_1b028853a_ctx>::make(__jule_anon_1b028853a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b028853a_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_31217_method));;
			}
		}
		else {
			_case_begin_1b0287083:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0287209:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd78b12_comptimeEnumField _Src) {
	_Stream << _1abd79096_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd7a32d_Str(_1abd79ea9_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1abd7a66e_Equal(jule::Ptr<_1abd79ea9_comptimeEnumFields> _self_, jule::Ptr<_1abe42d30_TypeKind> _33121_other) {
	return false;;
}



inline void _1abd7aae2_ready(_1abd79ea9_comptimeEnumFields* _self_, jule::Ptr<_1abda8d2e_Var>* _33529_keyA, jule::Ptr<_1abda8d2e_Var>* _33546_keyB) {
	if (((*(_33529_keyA)) != nullptr)) {
		(*((*(_33529_keyA))))._field_Constant=true;
		(*((*(_33529_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_33529_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_33546_keyB)) != nullptr)) {
		(*((*(_33546_keyB))))._field_Constant=true;
		(*((*(_33546_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_33546_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd78b12_comptimeEnumField>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data10)})});
	};
}



inline void _1abd7b010_step(_1abd79ea9_comptimeEnumFields* _self_, jule::I32 _35623_i, jule::Ptr<_1abda8d2e_Var>* _35636_keyA, jule::Ptr<_1abda8d2e_Var>* _35653_keyB) {
	if (((*(_35636_keyA)) != nullptr)) {
		(*((*((*((*(_35636_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_35623_i));
		(*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_35636_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_35653_keyB)) != nullptr)) {
		(*(_1abe48077_comptimeEnumField((*((*((*(_35653_keyB))))._field_Kind))._field_Kind.ptr())))._field_field=(*(_self_))._field_fields[_35623_i];
	};
}



inline jule::I32 _1abd7b296_len(_1abd79ea9_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd79ea9_comptimeEnumFields _Src) {
	_Stream << _1abd7a32d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd7b928_Str(_1abd7b5a4_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1abd7bc69_Equal(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe42d30_TypeKind> _38021_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1abd7c4c8__Name(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _38426_e, jule::Ptr<_1abd288a3_FnCallExpr>* _38441_fc) {
	if (((*((*(_38441_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_38426_e)).ptr(), (*((*((*(_38441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _38913_constant = static__1b9aad262_NewStr((*((*((*(_self_))._field_param))._field_Decl))._field_Ident);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_38913_constant, &__jule_any_type19), ._field_Constant=_38913_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd7c8c4__Type(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _39730_e, jule::Ptr<_1abd288a3_FnCallExpr>* _39745_fc) {
	if (((*((*(_39745_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_39730_e)).ptr(), (*((*((*(_39745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_39730_e))))._field_s), &((*((*(_self_))._field_param))._field_Kind));;
}



inline jule::Ptr<_1abe11936_Data> _1abd7ccc0__Variadic(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _40534_e, jule::Ptr<_1abd288a3_FnCallExpr>* _40549_fc) {
	if (((*((*(_40549_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_40534_e)).ptr(), (*((*((*(_40549_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _41013_constant = static__1b9aace98_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Variadic);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_41013_constant, &__jule_any_type19), ._field_Constant=_41013_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd7d1bb__Reference(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Ptr<_1abe1365d_Eval>* _41835_e, jule::Ptr<_1abd288a3_FnCallExpr>* _41850_fc) {
	if (((*((*(_41850_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_41835_e)).ptr(), (*((*((*(_41850_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _42313_constant = static__1b9aace98_NewBool((*((*((*(_self_))._field_param))._field_Decl))._field_Reference);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_42313_constant, &__jule_any_type19), ._field_Constant=_42313_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd7d50c_subIdent(jule::Ptr<_1abd7b5a4_comptimeParam> _self_, jule::Str* _43129_ident) {
	{
		auto &_match_expr{ (*(_43129_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b029bc79:;
			{
				jule::Ptr<_1abd59681_FnIns> _43417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b029d0aa, jule::Ptr<__jule_anon_1b029d0aa_ctx>::make(__jule_anon_1b029d0aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b029d0aa_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_43417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1b029bce0:;
			{
				jule::Ptr<_1abd59681_FnIns> _44117_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b02a0013, jule::Ptr<__jule_anon_1b02a0013_ctx>::make(__jule_anon_1b02a0013_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a0013_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_44117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1b029bd67:;
			{
				jule::Ptr<_1abd59681_FnIns> _44817_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b02a1e6b, jule::Ptr<__jule_anon_1b02a1e6b_ctx>::make(__jule_anon_1b02a1e6b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a1e6b_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_44817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b029bdde:;
			{
				jule::Ptr<_1abd59681_FnIns> _45517_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b02a3dc4, jule::Ptr<__jule_anon_1b02a3dc4_ctx>::make(__jule_anon_1b02a3dc4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b02a3dc4_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_45517_method));;
			}
		}
		else {
			_case_begin_1b029b949:;
			{
				return nullptr;;
			}
		}
		_match_end_1b029bac0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd7b5a4_comptimeParam _Src) {
	_Stream << _1abd7b928_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd7da7e_Str(_1abd7d73d_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1abd7ddc0_Equal(jule::Ptr<_1abd7d73d_comptimeParams> _self_, jule::Ptr<_1abe42d30_TypeKind> _47421_other) {
	return false;;
}



inline void _1abd7e343_ready(_1abd7d73d_comptimeParams* _self_, jule::Ptr<_1abda8d2e_Var>* _47829_keyA, jule::Ptr<_1abda8d2e_Var>* _47846_keyB) {
	if (((*(_47829_keyA)) != nullptr)) {
		(*((*(_47829_keyA))))._field_Constant=true;
		(*((*(_47829_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_47829_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_47846_keyB)) != nullptr)) {
		(*((*(_47846_keyB))))._field_Constant=true;
		(*((*(_47846_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_47846_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd7b5a4_comptimeParam>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data12)})});
	};
}



inline void _1abd7e761_step(_1abd7d73d_comptimeParams* _self_, jule::I32 _49923_i, jule::Ptr<_1abda8d2e_Var>* _49936_keyA, jule::Ptr<_1abda8d2e_Var>* _49953_keyB) {
	if (((*(_49936_keyA)) != nullptr)) {
		(*((*((*((*(_49936_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_49923_i));
		(*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_49936_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_49953_keyB)) != nullptr)) {
		(*(_1abe48594_comptimeParam((*((*((*(_49953_keyB))))._field_Kind))._field_Kind.ptr())))._field_param=(*(_self_))._field_params[_49923_i];
	};
}



inline jule::I32 _1abd7e9e7_len(_1abd7d73d_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd7d73d_comptimeParams _Src) {
	_Stream << _1abd7da7e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd80179_Str(_1abd7ed05_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1abd804ba_Equal(jule::Ptr<_1abd7ed05_comptimeTypeInfos> _self_, jule::Ptr<_1abe42d30_TypeKind> _52321_other) {
	return false;;
}



inline void _1abd8093d_ready(_1abd7ed05_comptimeTypeInfos* _self_, jule::Ptr<_1abda8d2e_Var>* _52729_keyA, jule::Ptr<_1abda8d2e_Var>* _52746_keyB) {
	if (((*(_52729_keyA)) != nullptr)) {
		(*((*(_52729_keyA))))._field_Constant=true;
		(*((*(_52729_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_52729_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_52746_keyB)) != nullptr)) {
		(*((*(_52746_keyB))))._field_Constant=true;
		(*((*(_52746_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_52746_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd81400_comptimeTypeInfo>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data15)})});
	};
}



inline void _1abd80d5b_step(_1abd7ed05_comptimeTypeInfos* _self_, jule::I32 _54823_i, jule::Ptr<_1abda8d2e_Var>* _54836_keyA, jule::Ptr<_1abda8d2e_Var>* _54853_keyB) {
	if (((*(_54836_keyA)) != nullptr)) {
		(*((*((*((*(_54836_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_54823_i));
		(*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_54836_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_54853_keyB)) != nullptr)) {
		(*((*((*((*(_54853_keyB))))._field_Kind))._field_Kind))._field_Kind=jule::Trait((*(_self_))._field_types[_54823_i], (jule::Trait::Type*)&_1abe42879_Kind_mptr_data15);
	};
}



inline jule::I32 _1abd810e2_len(_1abd7ed05_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd7ed05_comptimeTypeInfos _Src) {
	_Stream << _1abd80179_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abd81774_Str(_1abd81400_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1abe431e8_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1abd81ab5_Equal(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe42d30_TypeKind> _57221_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1abd82214__Str(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _57625_e, jule::Ptr<_1abd288a3_FnCallExpr>* _57640_fc) {
	if (((*((*(_57640_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_57625_e)).ptr(), (*((*((*(_57640_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Str", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _58113_constant = static__1b9aad262_NewStr(_1abe431e8_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_58113_constant, &__jule_any_type19), ._field_Constant=_58113_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abd82610__Kind(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _58930_e, jule::Ptr<_1abd288a3_FnCallExpr>* _58945_fc) {
	if (((*((*(_58945_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_58930_e)).ptr(), (*((*((*(_58945_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd6c265_Enum> _59413_enm = _1ab679369_FindEnum(_1ab64a747_findComptimePackage(&((*((*(_58930_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1abd6b6e8_EnumItem> _59517_item = nullptr;;
	{
		
		if (_1abe44194_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1b02b969d:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1abe46a04_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b95b0:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1abe46c8a_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b926e:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1abe4599d_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b92d5:;
			{
				if (_1abe53736_IsUnsafe(_1abe4599d_Ptr((*_self_.alloc)._field_base).ptr())) {
					_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1abe45717_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b934b:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1abe45c34_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b93b2:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1abe47021_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b9e0c:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1abe464d7_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b9e73:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1abe46251_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02b9ed9:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1abe4676d_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02ba050:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1abe472a7_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02ba0b6:;
			{
				_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1abe45481_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b02ba13d:;
			{
				jule::Ptr<_1abe4a909_Prim> _62413_prim = _1abe45481_Prim((*_self_.alloc)._field_base);;
				{
					
					if (_1abe4e127_IsAny(_62413_prim.ptr())) {
						_case_begin_1b02c619e:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1abe4db0a_IsBool(_62413_prim.ptr())) {
						_case_begin_1b02c60b1:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1abe4dd91_IsStr(_62413_prim.ptr())) {
						_case_begin_1b02c5da2:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1abe4cd3a_IsF32(_62413_prim.ptr())) {
						_case_begin_1b02c5e18:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1abe4d0c1_IsF64(_62413_prim.ptr())) {
						_case_begin_1b02c5e7e:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1abe4b7b7_IsI8(_62413_prim.ptr())) {
						_case_begin_1b02c5ee5:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1abe4ba4d_IsI16(_62413_prim.ptr())) {
						_case_begin_1b02c690d:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1abe4bcd4_IsI32(_62413_prim.ptr())) {
						_case_begin_1b02c6985:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1abe4c06a_IsI64(_62413_prim.ptr())) {
						_case_begin_1b02c6a0c:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1abe4c301_IsU8(_62413_prim.ptr())) {
						_case_begin_1b02c6a84:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1abe4c587_IsU16(_62413_prim.ptr())) {
						_case_begin_1b02c6b0b:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1abe4c81d_IsU32(_62413_prim.ptr())) {
						_case_begin_1b02c6b83:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1abe4caa4_IsU64(_62413_prim.ptr())) {
						_case_begin_1b02c6c0a:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1abe4d357_IsInt(_62413_prim.ptr())) {
						_case_begin_1b02c6c82:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1abe4d5dd_IsUint(_62413_prim.ptr())) {
						_case_begin_1b02c6d09:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1abe4d874_IsUintptr(_62413_prim.ptr())) {
						_case_begin_1b02c6d81:;
						{
							_59517_item=_1abd6cd59_FindItem(_59413_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b02c5c09:;
						{
							jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1abe431e8_Str((*_self_.alloc)._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:659:17"));;
						}
					}
					_match_end_1b02c5b93:;
				};
			}
		}
		else {
			_case_begin_1b02b9208:;
			{
				jule::panic((jule::Str::lit("Kind(): unimplemented type for std::comptime: ", 46) + _1abe431e8_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:662:13"));;
			}
		}
		_match_end_1b02b915e:;
	};
	return _1abe3e26b_evalEnumStatic(&(_59413_enm), &(_59517_item), &((*((*(_58945_fc))))._field_Token));;
}



inline jule::Ptr<_1abe11936_Data> _1abd82a0b__Bits(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _66730_e, jule::Ptr<_1abd288a3_FnCallExpr>* _66745_fc) {
	if (((*((*(_66745_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_66730_e)).ptr(), (*((*((*(_66745_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe4a909_Prim> _6729_prim = _1abe45481_Prim((*(_self_))._field_base.ptr());;
	if ((_6729_prim == nullptr)) {
		_1abe13bad_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _6779_n = _1b9aa183d_BitsizeOf((*(_6729_prim))._field_Kind);;
	if ((_6779_n == -1LL)) {
		_1abe13bad_pushErr((*(_66730_e)).ptr(), (*((*(_66745_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _68213_constant = static__1b9aac915_NewI64(static_cast<jule::I64>(_6779_n));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_68213_constant, &__jule_any_type19), ._field_Constant=_68213_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab63eb04__Elem(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _69030_e, jule::Ptr<_1abd288a3_FnCallExpr>* _69045_fc) {
	if (((*((*(_69045_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_69030_e)).ptr(), (*((*((*(_69045_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe52bec_Ptr> _69513_ptr = _1abe4599d_Ptr((*(_self_))._field_base.ptr());;
	if ((_69513_ptr != nullptr)) {
		if (_1abe53736_IsUnsafe(_69513_ptr)) {
			_1abe13bad_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_69513_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1abe4e435_Sptr> _70313_sptr = _1abe45717_Sptr((*_self_.alloc)._field_base);;
	if ((_70313_sptr != nullptr)) {
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70313_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1abe4ee08_Slc> _70713_slice = _1abe464d7_Slc((*_self_.alloc)._field_base);;
	if ((_70713_slice != nullptr)) {
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_70713_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1abe52229_Arr> _71113_array = _1abe46251_Arr((*_self_.alloc)._field_base);;
	if ((_71113_array != nullptr)) {
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*_71113_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1abd6c265_Enum> _71513_enm = _1abe45c34_Enum((*_self_.alloc)._field_base);;
	if ((_71513_enm != nullptr)) {
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_69030_e))))._field_s), &((*((*_71513_enm.alloc)._field_Kind))._field_Kind));;
	};
	_1abe13bad_pushErr((*(_69030_e)).ptr(), (*((*(_69045_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1abe11936_Data> _1ab640000__Size(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _72330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _72345_fc) {
	if (((*((*(_72345_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_72330_e)).ptr(), (*((*((*(_72345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe52229_Arr> _72813_arr = _1abe46251_Arr((*(_self_))._field_base.ptr());;
	if ((_72813_arr == nullptr)) {
		_1abe13bad_pushErr((*(_72330_e)).ptr(), (*((*(_72345_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Size", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _73313_constant = static__1b9aac915_NewI64(static_cast<jule::I64>((*(_72813_arr))._field_N));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02b49b_primInt, ._field_Model=jule::Any(_73313_constant, &__jule_any_type19), ._field_Constant=_73313_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6403eb__Key(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _74129_e, jule::Ptr<_1abd288a3_FnCallExpr>* _74144_fc) {
	if (((*((*(_74144_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_74129_e)).ptr(), (*((*((*(_74144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe5159c_Map> _74613_m = _1abe47021_Map((*(_self_))._field_base.ptr());;
	if ((_74613_m == nullptr)) {
		_1abe13bad_pushErr((*(_74129_e)).ptr(), (*((*(_74144_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Key", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_74129_e))))._field_s), &((*(_74613_m))._field_Key));;
}



inline jule::Ptr<_1abe11936_Data> _1ab6407e7__Value(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _75431_e, jule::Ptr<_1abd288a3_FnCallExpr>* _75446_fc) {
	if (((*((*(_75446_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_75431_e)).ptr(), (*((*((*(_75446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe5159c_Map> _75913_m = _1abe47021_Map((*(_self_))._field_base.ptr());;
	if ((_75913_m == nullptr)) {
		_1abe13bad_pushErr((*(_75431_e)).ptr(), (*((*(_75446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Value", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_75431_e))))._field_s), &((*(_75913_m))._field_Val));;
}



inline jule::Ptr<_1abe11936_Data> _1ab640be3__Fields(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _76732_e, jule::Ptr<_1abd288a3_FnCallExpr>* _76747_fc) {
	if (((*((*(_76747_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_76732_e)).ptr(), (*((*((*(_76747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd4445c_StructIns> _77213_s = _1abe46a04_Struct((*(_self_))._field_base.ptr());;
	if ((_77213_s != nullptr)) {
		return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd7425b_comptimeStructFields>(_1abd7425b_comptimeStructFields{._field_fields=(*_77213_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data7)}), });;
	};
	jule::Ptr<_1abd6c265_Enum> _78213_enm = _1abe45c34_Enum((*_self_.alloc)._field_base);;
	if ((_78213_enm != nullptr)) {
		return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd79ea9_comptimeEnumFields>(_1abd79ea9_comptimeEnumFields{._field_fields=(*_78213_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data11)}), });;
	};
	_1abe13bad_pushErr((*(_76732_e)).ptr(), (*((*(_76747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1abe11936_Data> _1ab6410de__Statics(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _79633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _79648_fc) {
	if (((*((*(_79648_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_79633_e)).ptr(), (*((*((*(_79648_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd4445c_StructIns> _80113_s = _1abe46a04_Struct((*(_self_))._field_base.ptr());;
	if ((_80113_s == nullptr)) {
		_1abe13bad_pushErr((*(_79633_e)).ptr(), (*((*(_79648_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd77517_comptimeStatics>(_1abd77517_comptimeStatics{._field_fields=(*(_80113_s))._field_Statics}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data9)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ab6414da__Public(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _81532_e, jule::Ptr<_1abd288a3_FnCallExpr>* _81547_fc) {
	if (((*((*(_81547_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_81532_e)).ptr(), (*((*((*(_81547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Bool _82013_public = false;;
	{
		
		if ((_1abe46a04_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b03093d0:;
			{
				_82013_public=(*((*(_1abe46a04_Struct((*_self_.alloc)._field_base)))._field_Decl))._field_Public;
			}
		}
		else if ((_1abe46c8a_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b030a4be:;
			{
				_82013_public=(*(_1abe46c8a_Trait((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1abe45c34_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b030a535:;
			{
				_82013_public=(*(_1abe45c34_Enum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else if ((_1abe45eba_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1b0309116:;
			{
				_82013_public=(*(_1abe45eba_TypeEnum((*_self_.alloc)._field_base)))._field_Public;
			}
		}
		else {
			_case_begin_1b03090a0:;
			{
				_1abe13bad_pushErr((*(_81532_e)).ptr(), (*((*(_81547_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_self_))._field_base.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("Public", 6), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b0308e6d:;
	};
	jule::Ptr<_1b9aac4c5_Const> _83413_constant = static__1b9aace98_NewBool(_82013_public);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_83413_constant, &__jule_any_type19), ._field_Constant=_83413_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6418d6__Binded(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _84232_e, jule::Ptr<_1abd288a3_FnCallExpr>* _84247_fc) {
	if (((*((*(_84247_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_84232_e)).ptr(), (*((*((*(_84247_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _84713_constant = static__1b9aace98_NewBool(_1abe43b77_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_84713_constant, &__jule_any_type19), ._field_Constant=_84713_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab641cd2__Ordered(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _85529_e, jule::Ptr<_1abd288a3_FnCallExpr>* _85544_fc) {
	if (((*((*(_85544_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_85529_e)).ptr(), (*((*((*(_85544_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _86013_constant = static__1b9aace98_NewBool(_1abe44947_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_86013_constant, &__jule_any_type19), ._field_Constant=_86013_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6421cd__Comparable(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _86832_e, jule::Ptr<_1abd288a3_FnCallExpr>* _86847_fc) {
	if (((*((*(_86847_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_86832_e)).ptr(), (*((*((*(_86847_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _87313_constant = static__1b9aace98_NewBool(_1abe4442a_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_87313_constant, &__jule_any_type19), ._field_Constant=_87313_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6425c9__Mutable(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _88129_e, jule::Ptr<_1abd288a3_FnCallExpr>* _88144_fc) {
	if (((*((*(_88144_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_88129_e)).ptr(), (*((*((*(_88144_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _88613_constant = static__1b9aace98_NewBool(_1abe446b1_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_88613_constant, &__jule_any_type19), ._field_Constant=_88613_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6429c5__Types(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _89431_e, jule::Ptr<_1abd288a3_FnCallExpr>* _89446_fc) {
	if (((*((*(_89446_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_89431_e)).ptr(), (*((*((*(_89446_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe509ec_Tuple> _89913_tup = _1abe472a7_Tup((*(_self_))._field_base.ptr());;
	if ((_89913_tup == nullptr)) {
		_1abe13bad_pushErr((*(_89431_e)).ptr(), (*((*(_89446_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Types", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd7ed05_comptimeTypeInfos> _90413_infos = jule::new_ptr<_1abd7ed05_comptimeTypeInfos>(_1abd7ed05_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1abd81400_comptimeTypeInfo>>::alloc(0LL, (*(_89913_tup))._field_Types.len())});;
	{
		auto expr = &((*(_89913_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b031eaee:;
		if (it != expr_end) {
			jule::Ptr<_1abe42d30_TypeKind> _90721_t = *it;
			{
				(*(_90413_infos))._field_types=jule::append((*_90413_infos.alloc)._field_types,jule::Slice<jule::Ptr<_1abd81400_comptimeTypeInfo>>::make({_1ab6972dd_pushComptimeTypeInfo((*((*((*(_89431_e))))._field_s))._field_meta.ptr(), &(_90721_t))}));
			}
			_iter_next_1b031eaee:;
			++it;
			goto _iter_begin_1b031eaee;
		}
		_iter_end_1b031eaee:;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_90413_infos, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data14)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ab642dc1__Exceptional(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _91737_e, jule::Ptr<_1abd288a3_FnCallExpr>* _91752_fc) {
	if (((*((*(_91752_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_91737_e)).ptr(), (*((*((*(_91752_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd59681_FnIns> _92213_f = _1abe4676d_Fn((*(_self_))._field_base.ptr());;
	if ((_92213_f == nullptr)) {
		_1abe13bad_pushErr((*(_91737_e)).ptr(), (*((*(_91752_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _92713_constant = static__1b9aace98_NewBool((((*(_92213_f))._field_Decl != nullptr) && (*(*(_92213_f))._field_Decl.alloc)._field_Exceptional));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_92713_constant, &__jule_any_type19), ._field_Constant=_92713_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6432bc__CanNil(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _93532_e, jule::Ptr<_1abd288a3_FnCallExpr>* _93547_fc) {
	if (((*((*(_93547_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_93532_e)).ptr(), (*((*((*(_93547_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _94013_constant = static__1b9aace98_NewBool(_1abe44bcd_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_94013_constant, &__jule_any_type19), ._field_Constant=_94013_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab6436b8__RC(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _94828_e, jule::Ptr<_1abd288a3_FnCallExpr>* _94843_fc) {
	if (((*((*(_94843_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_94828_e)).ptr(), (*((*((*(_94843_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("RC", 2), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _95313_constant = static__1b9aace98_NewBool(_1abe44e64_PerformsRC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_95313_constant, &__jule_any_type19), ._field_Constant=_95313_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab643ab4__Result(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _96132_e, jule::Ptr<_1abd288a3_FnCallExpr>* _96147_fc) {
	if (((*((*(_96147_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_96132_e)).ptr(), (*((*((*(_96147_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd59681_FnIns> _96613_f = _1abe4676d_Fn((*(_self_))._field_base.ptr());;
	if ((_96613_f == nullptr)) {
		_1abe13bad_pushErr((*(_96132_e)).ptr(), (*((*(_96147_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Result", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*(_96613_f))._field_Result == nullptr)) {
		return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &(_1ac02a214_primVoid));;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_96132_e))))._field_s), &((*(_96613_f))._field_Result));;
}



inline jule::Ptr<_1abe11936_Data> _1ab643eb0__Params(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Ptr<_1abe1365d_Eval>* _97732_e, jule::Ptr<_1abd288a3_FnCallExpr>* _97747_fc) {
	if (((*((*(_97747_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_97732_e)).ptr(), (*((*((*(_97747_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd59681_FnIns> _98213_f = _1abe4676d_Fn((*(_self_))._field_base.ptr());;
	if ((_98213_f == nullptr)) {
		_1abe13bad_pushErr((*(_97732_e)).ptr(), (*((*(_97747_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_self_.alloc)._field_base), &__jule_any_type4),jule::Any(jule::Str::lit("Params", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd7d73d_comptimeParams>(_1abd7d73d_comptimeParams{._field_params=(*(_98213_f))._field_Params}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data13)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ab644301_subIdent(jule::Ptr<_1abd81400_comptimeTypeInfo> _self_, jule::Str* _99429_ident) {
	{
		auto &_match_expr{ (*(_99429_ident)) };
		
		if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1b0334c79:;
			{
				jule::Ptr<_1abd59681_FnIns> _99717_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b033663d, jule::Ptr<__jule_anon_1b033663d_ctx>::make(__jule_anon_1b033663d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033663d_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_99717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1b0334a37:;
			{
				jule::Ptr<_1abd59681_FnIns> _100417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0338596, jule::Ptr<__jule_anon_1b0338596_ctx>::make(__jule_anon_1b0338596_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0338596_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_100417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1b0334a9d:;
			{
				jule::Ptr<_1abd59681_FnIns> _101117_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b033a4ee, jule::Ptr<__jule_anon_1b033a4ee_ctx>::make(__jule_anon_1b033a4ee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033a4ee_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_101117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1b0334ce0:;
			{
				jule::Ptr<_1abd59681_FnIns> _101817_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b033c457, jule::Ptr<__jule_anon_1b033c457_ctx>::make(__jule_anon_1b033c457_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033c457_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_101817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1b0334d56:;
			{
				jule::Ptr<_1abd59681_FnIns> _102517_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b033e3b0, jule::Ptr<__jule_anon_1b033e3b0_ctx>::make(__jule_anon_1b033e3b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b033e3b0_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_102517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1b0334dbc:;
			{
				jule::Ptr<_1abd59681_FnIns> _103217_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0341318, jule::Ptr<__jule_anon_1b0341318_ctx>::make(__jule_anon_1b0341318_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0341318_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_103217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1b0334e33:;
			{
				jule::Ptr<_1abd59681_FnIns> _103917_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0343271, jule::Ptr<__jule_anon_1b0343271_ctx>::make(__jule_anon_1b0343271_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0343271_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_103917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1b0335010:;
			{
				jule::Ptr<_1abd59681_FnIns> _104617_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b03451c9, jule::Ptr<__jule_anon_1b03451c9_ctx>::make(__jule_anon_1b03451c9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03451c9_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_104617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1b0335076:;
			{
				jule::Ptr<_1abd59681_FnIns> _105317_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b03473a7, jule::Ptr<__jule_anon_1b03473a7_ctx>::make(__jule_anon_1b03473a7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03473a7_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_105317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1b03350dc:;
			{
				jule::Ptr<_1abd59681_FnIns> _106017_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b01e89a6, jule::Ptr<__jule_anon_1b01e89a6_ctx>::make(__jule_anon_1b01e89a6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b01e89a6_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_106017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1b0335164:;
			{
				jule::Ptr<_1abd59681_FnIns> _106717_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b01ea810, jule::Ptr<__jule_anon_1b01ea810_ctx>::make(__jule_anon_1b01ea810_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b01ea810_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_106717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1b03351db:;
			{
				jule::Ptr<_1abd59681_FnIns> _107417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b01ec768, jule::Ptr<__jule_anon_1b01ec768_ctx>::make(__jule_anon_1b01ec768_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b01ec768_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_107417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1b0335263:;
			{
				jule::Ptr<_1abd59681_FnIns> _108117_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b01ee6c1, jule::Ptr<__jule_anon_1b01ee6c1_ctx>::make(__jule_anon_1b01ee6c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b01ee6c1_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_108117_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1b03352da:;
			{
				jule::Ptr<_1abd59681_FnIns> _108817_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0361ed7, jule::Ptr<__jule_anon_1b0361ed7_ctx>::make(__jule_anon_1b0361ed7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0361ed7_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_108817_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b0335362:;
			{
				jule::Ptr<_1abd59681_FnIns> _109517_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0363e40, jule::Ptr<__jule_anon_1b0363e40_ctx>::make(__jule_anon_1b0363e40_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0363e40_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_109517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1b03353d9:;
			{
				jule::Ptr<_1abd59681_FnIns> _110217_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0365d98, jule::Ptr<__jule_anon_1b0365d98_ctx>::make(__jule_anon_1b0365d98_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0365d98_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_110217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1b0335461:;
			{
				jule::Ptr<_1abd59681_FnIns> _110917_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0367d01, jule::Ptr<__jule_anon_1b0367d01_ctx>::make(__jule_anon_1b0367d01_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0367d01_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_110917_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("RC", 2)) {
			_case_begin_1b03354d8:;
			{
				jule::Ptr<_1abd59681_FnIns> _111617_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0369c59, jule::Ptr<__jule_anon_1b0369c59_ctx>::make(__jule_anon_1b0369c59_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0369c59_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_111617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1b0335560:;
			{
				jule::Ptr<_1abd59681_FnIns> _112317_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b036bbb2, jule::Ptr<__jule_anon_1b036bbb2_ctx>::make(__jule_anon_1b036bbb2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b036bbb2_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_112317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1b03355d7:;
			{
				jule::Ptr<_1abd59681_FnIns> _113017_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b036db1a, jule::Ptr<__jule_anon_1b036db1a_ctx>::make(__jule_anon_1b036db1a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b036db1a_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_113017_method));;
			}
		}
		else {
			_case_begin_1b03327e3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0334817:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abd81400_comptimeTypeInfo _Src) {
	_Stream << _1abd81774_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab644983_Str(_1ab64460e_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ab644cc4_Equal(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe42d30_TypeKind> _114921_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1ab645324__Unwrap(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _115332_e, jule::Ptr<_1abd288a3_FnCallExpr>* _115347_fc) {
	if (((*((*(_115347_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_115332_e)).ptr(), (*((*((*(_115347_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1abe11936_Data> _1ab645720__Type(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _116130_e, jule::Ptr<_1abd288a3_FnCallExpr>* _116145_fc) {
	if (((*((*(_116145_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_116130_e)).ptr(), (*((*((*(_116145_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_116130_e))))._field_s), &((*((*(_self_))._field_data))._field_Kind));;
}



inline jule::Ptr<_1abe11936_Data> _1ab645b1b__Lvalue(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _116932_e, jule::Ptr<_1abd288a3_FnCallExpr>* _116947_fc) {
	if (((*((*(_116947_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_116932_e)).ptr(), (*((*((*(_116947_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _117413_constant = static__1b9aace98_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_117413_constant, &__jule_any_type19), ._field_Constant=_117413_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab646017__Mutable(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _118233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _118248_fc) {
	if (((*((*(_118248_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_118233_e)).ptr(), (*((*((*(_118248_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _118713_constant = static__1b9aace98_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_118713_constant, &__jule_any_type19), ._field_Constant=_118713_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab646413__Const(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _119531_e, jule::Ptr<_1abd288a3_FnCallExpr>* _119546_fc) {
	if (((*((*(_119546_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_119531_e)).ptr(), (*((*((*(_119546_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Const", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _120013_constant = static__1b9aace98_NewBool(_1abe1233d_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_120013_constant, &__jule_any_type19), ._field_Constant=_120013_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab64680e__Field(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Ptr<_1abe1365d_Eval>* _120831_e, jule::Ptr<_1abd288a3_FnCallExpr>* _120846_fc) {
	if (((*((*(_120846_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_120831_e)).ptr(), (*((*((*(_120846_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd4445c_StructIns> _121313_s = _1abe46a04_Struct((*((*(_self_))._field_data))._field_Kind.ptr());;
	if ((_121313_s == nullptr)) {
		_1abe13bad_pushErr((*(_120831_e)).ptr(), (*((*(_120846_fc))))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(*_self_.alloc)._field_data.alloc)._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("Field", 5), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd24b79_Expr> _121813_arg = (*((*(_120846_fc))))._field_Args[0LL];;
	jule::Ptr<_1abe11936_Data> _121913_d = _1abe318bd_evalExpr((*(_120831_e)), _121813_arg);;
	if ((_121913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe1233d_IsConst(_121913_d.ptr())))) {
		_1abe13bad_pushErr((*(_120831_e)).ptr(), (*(_121813_arg))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe4a909_Prim> _12279_prim = _1abe45481_Prim((*(_121913_d))._field_Kind);;
	if (((_12279_prim == nullptr) || (!(_1abe4dd91_IsStr(_12279_prim.ptr()))))) {
		_1abe13bad_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_121913_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Str _12329_ident = _1b9aae64d_ReadStr((*(_121913_d))._field_Constant.ptr());;
	jule::Ptr<_1abd438ac_FieldIns> _123313_f = _1abd45815_FindField(_121313_s.ptr(), _12329_ident);;
	if ((_123313_f == nullptr)) {
		_1abe13bad_pushErr((*(_120831_e)).ptr(), (*_121813_arg.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*(_121313_s))._field_Decl))._field_Ident, &__jule_any_type4),jule::Any(_12329_ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_121913_d=jule::new_ptr<_1abe11936_Data>((*(*_self_.alloc)._field_data.alloc));
	_121913_d=_1abe29bc4_evalStructSubIdentField((*(_120831_e)).ptr(), &(_121913_d), &(_121313_s), &((*_121813_arg.alloc)._field_Token), &(_123313_f));
	return _1ab64ae0c_buildComptimeValue(&(_121913_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ab646b50_subIdent(jule::Ptr<_1ab64460e_comptimeValue> _self_, jule::Str* _124329_ident) {
	{
		auto &_match_expr{ (*(_124329_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1b0387e0e:;
			{
				jule::Ptr<_1abd59681_FnIns> _124617_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b038931c, jule::Ptr<__jule_anon_1b038931c_ctx>::make(__jule_anon_1b038931c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b038931c_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_124617_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1b0387e75:;
			{
				jule::Ptr<_1abd59681_FnIns> _125317_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b038b275, jule::Ptr<__jule_anon_1b038b275_ctx>::make(__jule_anon_1b038b275_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b038b275_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_125317_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1b0387edb:;
			{
				jule::Ptr<_1abd59681_FnIns> _126017_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b038d1cd, jule::Ptr<__jule_anon_1b038d1cd_ctx>::make(__jule_anon_1b038d1cd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b038d1cd_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_126017_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1b0388063:;
			{
				jule::Ptr<_1abd59681_FnIns> _126717_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0390136, jule::Ptr<__jule_anon_1b0390136_ctx>::make(__jule_anon_1b0390136_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0390136_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_126717_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1b03880da:;
			{
				jule::Ptr<_1abd59681_FnIns> _127417_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b039208e, jule::Ptr<__jule_anon_1b039208e_ctx>::make(__jule_anon_1b039208e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b039208e_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_127417_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1b0388261:;
			{
				jule::Ptr<_1abd59681_FnIns> _128117_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b0393ee7, jule::Ptr<__jule_anon_1b0393ee7_ctx>::make(__jule_anon_1b0393ee7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b0393ee7_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_128117_method));;
			}
		}
		else {
			_case_begin_1b0387bab:;
			{
				return nullptr;;
			}
		}
		_match_end_1b0387cdd:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab64460e_comptimeValue _Src) {
	_Stream << _1ab644983_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab6472d2_Str(_1ab646e5d_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ab647623_Equal(jule::Ptr<_1ab646e5d_comptimeFiles> _self_, jule::Ptr<_1abe42d30_TypeKind> _130021_other) {
	return false;;
}



inline void _1ab647a96_ready(_1ab646e5d_comptimeFiles* _self_, jule::Ptr<_1abda8d2e_Var>* _130429_keyA, jule::Ptr<_1abda8d2e_Var>* _130446_keyB) {
	if (((*(_130429_keyA)) != nullptr)) {
		(*((*(_130429_keyA))))._field_Constant=true;
		(*((*(_130429_keyA))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_130429_keyA))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	if (((*(_130446_keyB)) != nullptr)) {
		(*((*(_130446_keyB))))._field_Constant=true;
		(*((*(_130446_keyB))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		(*((*(_130446_keyB))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1ab648558_comptimeFile>(), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data18)})});
	};
}



inline void _1ab647eb4_step(_1ab646e5d_comptimeFiles* _self_, jule::I32 _132523_i, jule::Ptr<_1abda8d2e_Var>* _132536_keyA, jule::Ptr<_1abda8d2e_Var>* _132553_keyB) {
	if (((*(_132536_keyA)) != nullptr)) {
		(*((*((*((*(_132536_keyA))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_132523_i));
		(*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Model=jule::Any((*(*(*((*(_132536_keyA))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*(_132553_keyB)) != nullptr)) {
		(*((*((*((*((*(_132553_keyB))))._field_Kind))._field_Kind))._field_Kind.cast_ptr<_1ab648558_comptimeFile>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_132523_i];
	};
}



inline jule::I32 _1ab64824a_len(_1ab646e5d_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab646e5d_comptimeFiles _Src) {
	_Stream << _1ab6472d2_Str(&_Src);
	return _Stream;
}



inline jule::Str _1ab648b1e_Str(_1ab648558_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ab648e60_Equal(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe42d30_TypeKind> _134921_other) {
	return false;;
}



inline jule::Ptr<_1abe11936_Data> _1ab64947c__Path(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _135330_e, jule::Ptr<_1abd288a3_FnCallExpr>* _135345_fc) {
	if (((*((*(_135345_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_135330_e)).ptr(), (*((*((*(_135345_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Path", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _135813_constant = static__1b9aad262_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_135813_constant, &__jule_any_type19), ._field_Constant=_135813_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab649878__Name(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _136630_e, jule::Ptr<_1abd288a3_FnCallExpr>* _136645_fc) {
	if (((*((*(_136645_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_136630_e)).ptr(), (*((*((*(_136645_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Name", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _137113_constant = static__1b9aad262_NewStr(_1abd1155b_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_137113_constant, &__jule_any_type19), ._field_Constant=_137113_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab649c74__Dir(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Ptr<_1abe1365d_Eval>* _137929_e, jule::Ptr<_1abd288a3_FnCallExpr>* _137944_fc) {
	if (((*((*(_137944_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_137929_e)).ptr(), (*((*((*(_137944_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1b9aac4c5_Const> _138413_constant = static__1b9aad262_NewStr(_1abd112c5_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(_138413_constant, &__jule_any_type19), ._field_Constant=_138413_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ab64a0b5_subIdent(jule::Ptr<_1ab648558_comptimeFile> _self_, jule::Str* _139229_ident) {
	{
		auto &_match_expr{ (*(_139229_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1b03a5745:;
			{
				jule::Ptr<_1abd59681_FnIns> _139517_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b03a6a32, jule::Ptr<__jule_anon_1b03a6a32_ctx>::make(__jule_anon_1b03a6a32_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03a6a32_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_139517_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1b03a57de:;
			{
				jule::Ptr<_1abd59681_FnIns> _140217_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b03a898a, jule::Ptr<__jule_anon_1b03a898a_ctx>::make(__jule_anon_1b03a898a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03a898a_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_140217_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1b03a5866:;
			{
				jule::Ptr<_1abd59681_FnIns> _140917_method = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::__new_closure<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>((void*)__jule_anon_1b03aa8e3, jule::Ptr<__jule_anon_1b03aa8e3_ctx>::make(__jule_anon_1b03aa8e3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03aa8e3_ctx_handler), });;
				return _1ab64a439_buildAsComptimeMethodData(&(_140917_method));;
			}
		}
		else {
			_case_begin_1b03a5459:;
			{
				return nullptr;;
			}
		}
		_match_end_1b03a55d0:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab648558_comptimeFile _Src) {
	_Stream << _1ab648b1e_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*> _1ab64d1b7_readyFn(jule::Ptr<_1ab64ccbb_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*>((void*)__jule_anon_1b03b6426, jule::Ptr<__jule_anon_1b03b6426_ctx>::make(__jule_anon_1b03b6426_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b03b6426_ctx_handler);;
}



inline jule::Bool _1ab64d44d_readyFi(jule::Ptr<_1ab64ccbb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ab6a5e78_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ab64d1b7_readyFn(_self_)));;
}



inline jule::Bool _1ab64d6d4_readySi(jule::Ptr<_1ab64ccbb_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*_self_.alloc)._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ab64d1b7_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ab64d96a_ready(jule::Ptr<_1ab64ccbb_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ab64d44d_readyFi(_self_);;
	};
	return _1ab64d6d4_readySi(_self_);;
}



inline jule::Bool _1ab64dc01_check(jule::Ptr<_1ab64ccbb_constraintChecker> _self_) {
	if ((!(_1ab64d96a_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b03c5aa6:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03c647a:;
		if (it != expr_end) {
			jule::I32 _12014_i = it - expr->begin();
			jule::Ptr<_1abe41449_InsGeneric> _12021_g = *it;
			{
				if (((*(_12021_g))._field_Constraint == nullptr)) {
					goto _iter_next_1b03c647a;
				};
				{
					auto expr = &((*_12021_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03c7657:;
					if (it != expr_end) {
						jule::Ptr<_1abe42d30_TypeKind> _12425_c2 = *it;
						{
							jule::Ptr<_1abe4a909_Prim> _12521_prim = _1abe45481_Prim(_12425_c2.ptr());;
							if (((_12521_prim != nullptr) && _1abe4b531_IsConstraint(_12521_prim))) {
								if (_1ab64e482_matchConstraint(&((*_12521_prim.alloc)._field_Kind), &((*_12021_g.alloc)._field_Kind))) {
									goto _iter_next_1b03c647a;
								};
								goto _iter_next_1b03c7657;
							};
							if (_1abe43539_Equal(_12425_c2, (*_12021_g.alloc)._field_Kind)) {
								goto _iter_next_1b03c647a;
							};
						}
						_iter_next_1b03c7657:;
						++it;
						goto _iter_begin_1b03c7657;
					}
					_iter_end_1b03c7657:;
				};
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_12021_g.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any((*((*_self_.alloc)._field_genericsD[_12014_i]))._field_Ident, &__jule_any_type4),jule::Any(_1ab64e0b9_toStrConstraints(_12021_g), &__jule_any_type4)}));
				return false;;
			}
			_iter_next_1b03c647a:;
			++it;
			_12014_i++;
			goto _iter_begin_1b03c647a;
		}
		_iter_end_1b03c647a:;
	};
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab64ccbb_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ab6504d8_IsTraitImpl(_1ab650120_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ab65076e_IsStructImpl(_1ab650120_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab650120_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab655576_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab655994_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab655c91_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6561ae_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6564ab_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab656962_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6573ad_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab657743_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab657b1c_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab657e19_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6582e3_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6586bc_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab658b73_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab659129_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "Decls:" << _Src._field_Decls << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab659789_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65a2b2_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65a9aa_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65ad51_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65b4b1_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65ba44_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ab65cec9_SelectPackage(_1ab65ca34_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _46032_selector) {
	return _1ab697e48_SelectPackage((*(_self_))._field_s.ptr(), _46032_selector);;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab65d3c5_FindVar(_1ab65ca34_scopeChecker* _self_, jule::Str _47126_ident, jule::Bool _47138_binded) {
	if ((!(_47138_binded))) {
		jule::Ptr<_1abda8d2e_Var> _47317_v = _1ab6614a5_findVar(_self_, _47126_ident);;
		if ((_47317_v != nullptr)) {
			return _47317_v;;
		};
	};
	return _1ab698344_FindVar((*(_self_))._field_s.ptr(), _47126_ident, _47138_binded);;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ab65d7c1_FindTypeAlias(_1ab65ca34_scopeChecker* _self_, jule::Str _48832_ident, jule::Bool _48844_binded) {
	;
	jule::Ptr<_1abe4203d_TypeAlias> _49113_ta = _1abe0e23b_findTypeAlias((*(_self_))._field_table.ptr(), &(_48832_ident), _48844_binded, true);;
	if ((_49113_ta != nullptr)) {
		return _49113_ta;;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _49613_parent = (*(_self_))._field_parent;;
	while ((_49613_parent != nullptr)) {
		{
			_49113_ta=_1abe0e23b_findTypeAlias((*_49613_parent.alloc)._field_table, &(_48832_ident), _48844_binded, true);
			if ((_49113_ta != nullptr)) {
				return _49113_ta;;
			};
			_49613_parent=(*_49613_parent.alloc)._field_parent;
		}
	_iter_next_1b04164a9:;
	}
	_iter_end_1b04164a9:;;
	return _1ab698740_FindTypeAlias((*(_self_))._field_s.ptr(), _48832_ident, _48844_binded);;
}



inline jule::Ptr<_1abd416ce_Struct> _1ab65dbbc_FindStruct(_1ab65ca34_scopeChecker* _self_, jule::Str _51329_ident, jule::Bool _51341_binded) {
	return _1ab698b3b_FindStruct((*(_self_))._field_s.ptr(), _51329_ident, _51341_binded);;
}



inline jule::Ptr<_1abd566a0_Fn> _1ab65e0b8_FindFn(_1ab65ca34_scopeChecker* _self_, jule::Str _52225_ident, jule::Bool _52237_binded) {
	return _1ab699037_FindFn((*(_self_))._field_s.ptr(), _52225_ident, _52237_binded);;
}



inline jule::Ptr<_1abd69a59_Trait> _1ab65e409_FindTrait(_1ab65ca34_scopeChecker* _self_, jule::Str _53128_ident) {
	return _1ab699378_FindTrait((*(_self_))._field_s.ptr(), _53128_ident);;
}



inline jule::Ptr<_1abd6c265_Enum> _1ab65e74a_FindEnum(_1ab65ca34_scopeChecker* _self_, jule::Str _54027_ident) {
	return _1ab6996b9_FindEnum((*(_self_))._field_s.ptr(), _54027_ident);;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1ab65ea8b_FindTypeEnum(_1ab65ca34_scopeChecker* _self_, jule::Str _54931_ident) {
	return _1ab699a0a_FindTypeEnum((*(_self_))._field_s.ptr(), _54931_ident);;
}



inline jule::Bool _1ab65eddd_isUnsafe(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	jule::Ptr<_1ab65ca34_scopeChecker> _55713_scope = _self_;;
	_julec_label_1b041b1a1:;
	if ((*((*(_55713_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_55713_scope.alloc)._field_parent != nullptr)) {
		_55713_scope=(*_55713_scope.alloc)._field_parent;
		goto _julec_label_1b041b1a1;
	};
	return false;;
}



inline jule::Bool _1ab660174_isRoot(_1ab65ca34_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ab660372_stop(_1ab65ca34_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ab660608_stopped(_1ab65ca34_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ab66088e_isDeferred(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	jule::Ptr<_1ab65ca34_scopeChecker> _59013_scope = _self_;;
	_julec_label_1b041e4e5:;
	if ((*((*(_59013_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_59013_scope.alloc)._field_parent != nullptr)) {
		_59013_scope=(*_59013_scope.alloc)._field_parent;
		goto _julec_label_1b041e4e5;
	};
	return false;;
}



inline void _1ab660b47_pushCaptured(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abda8d2e_Var>* _61137_v) {
	jule::Ptr<_1ab65ca34_scopeChecker> _61213_sc = _self_;;
	for (;;) {
		{
			if (((*(_61213_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*_61213_sc.alloc)._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b042240a:;
					if (it != expr_end) {
						jule::Ptr<_1abda8d2e_Var> _61524_cv = *it;
						{
							if ((_61524_cv == (*(_61137_v)))) {
								goto _julec_label_1b04231b9;
							};
						}
						_iter_next_1b042240a:;
						++it;
						goto _iter_begin_1b042240a;
					}
					_iter_end_1b042240a:;
				};
				(*(*_61213_sc.alloc)._field_captured.alloc)=jule::append((*(*_61213_sc.alloc)._field_captured.alloc),jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({(*(_61137_v))}));
				_julec_label_1b04231b9:;
			};
			if (((*_61213_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1b04202b5;
			};
			_61213_sc=(*_61213_sc.alloc)._field_parent;
			if ((!(_1abe403d2_isVarCaptured(_61213_sc, _61213_sc, (*(_61137_v)))))) {
				goto _iter_end_1b04202b5;
			};
		}
	_iter_next_1b04202b5:;
	}
	_iter_end_1b04202b5:;;
}



inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab660dcd_getRoot(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	jule::Ptr<_1ab65ca34_scopeChecker> _63613_root = _self_;;
	while ((((*(_63613_root))._field_parent != nullptr) && ((*_63613_root.alloc)._field_owner == nullptr))) {
		{
			_63613_root=(*_63613_root.alloc)._field_parent;
		}
	_iter_next_1b04255ea:;
	}
	_iter_end_1b04255ea:;;
	return _63613_root;;
}



inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab661164_getHardRoot(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	jule::Ptr<_1ab65ca34_scopeChecker> _64613_root = _self_;;
	while (((*(_64613_root))._field_parent != nullptr)) {
		{
			_64613_root=(*_64613_root.alloc)._field_parent;
		}
	_iter_next_1b042692b:;
	}
	_iter_end_1b042692b:;;
	return _64613_root;;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab6614a5_findVar(_1ab65ca34_scopeChecker* _self_, jule::Str _65426_ident) {
	;
	;
	jule::Ptr<_1abda8d2e_Var> _65713_v = _1abe0dc85_findVar((*(_self_))._field_table.ptr(), &(_65426_ident), false, true);;
	if ((_65713_v != nullptr)) {
		return _65713_v;;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _66113_parent = (*(_self_))._field_parent;;
	while ((_66113_parent != nullptr)) {
		{
			_65713_v=_1abe0dc85_findVar((*_66113_parent.alloc)._field_table, &(_65426_ident), false, true);
			if ((_65713_v != nullptr)) {
				return _65713_v;;
			};
			_66113_parent=(*_66113_parent.alloc)._field_parent;
		}
	_iter_next_1b04288d9:;
	}
	_iter_end_1b04288d9:;;
	return nullptr;;
}



inline jule::Ptr<_1ab657e19_Label> _1ab6617e6_findLabel(_1ab65ca34_scopeChecker* _self_, jule::Str* _67529_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b042a91e:;
		if (it != expr_end) {
			jule::Any _67621_st = *it;
			{
				{
					auto &_match_expr{ _67621_st };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1b042b1e4:;
						{
							jule::Ptr<_1ab657e19_Label> _67921_label = _67621_st.unsafe_cast_ptr<_1ab657e19_Label>();;
							if (((*(_67921_label))._field_Ident == (*(_67529_ident)))) {
								return _67921_label;;
							};
						}
					}
					_match_end_1b042b18e:;
				};
			}
			_iter_next_1b042a91e:;
			++it;
			goto _iter_begin_1b042a91e;
		}
		_iter_end_1b042a91e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab661b37_findLabelScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Str* _69135_ident) {
	jule::Ptr<_1ab65b4b1_scopeLabel> _69213_label = _1ab661e78_findLabelAll(_self_.ptr(), _69135_ident);;
	if (((_69213_label != nullptr) && ((*_69213_label.alloc)._field_scope == _self_))) {
		return _69213_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab661e78_findLabelAll(_1ab65ca34_scopeChecker* _self_, jule::Str* _70332_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b042d7ac:;
		if (it != expr_end) {
			jule::Ptr<_1ab65b4b1_scopeLabel> _70421_lbl = *it;
			{
				if (((*((*(_70421_lbl))._field_label))._field_Ident == (*(_70332_ident)))) {
					return _70421_lbl;;
				};
			}
			_iter_next_1b042d7ac:;
			++it;
			goto _iter_begin_1b042d7ac;
		}
		_iter_end_1b042d7ac:;
	};
	return nullptr;;
}



inline jule::Bool _1ab662374_isDuplicatedIdent(_1ab65ca34_scopeChecker* _self_, jule::Uintptr _71536_itself, jule::Str* _71554_ident) {
	jule::Ptr<_1abda8d2e_Var> _7169_v = _1ab65d3c5_FindVar(_self_, (*(_71554_ident)), false);;
	if (((_7169_v != nullptr) && (static_cast<jule::Uintptr>(_7169_v) != _71536_itself))) {
		if (((*_7169_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7169_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ab699e17_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1abe4203d_TypeAlias> _7249_ta = _1ab65d7c1_FindTypeAlias(_self_, (*(_71554_ident)), false);;
	if (((_7249_ta != nullptr) && (static_cast<jule::Uintptr>(_7249_ta) != _71536_itself))) {
		if (((*_7249_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_7249_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ab699e17_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1ab66262c_checkVarDecl(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd336b0_VarDecl> _73536_decl) {
	jule::Ptr<_1abda8d2e_Var> _73613_v = _1abd62bc8_buildVar(_73536_decl);;
	(*(_73613_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*_self_.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({_73613_v}));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_73613_v, &__jule_any_type8)}));
	});;
	if (_1ab662374_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_73613_v), &((*_73613_v.alloc)._field_Ident))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_73613_v.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_73613_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab660372_stop(_self_);
		return;;
	};
	_1ab6adb62_checkVarDecl((*_self_.alloc)._field_s, &(_73613_v), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));
	if (((!(_1abda948e_IsTypeInferred(_73613_v))) && (((*_73613_v.alloc)._field_Kind == nullptr) || ((*((*_73613_v.alloc)._field_Kind))._field_Kind == nullptr)))) {
		return;;
	};
	_1ab6b2407_evalVarValue((*_self_.alloc)._field_s, &(_73613_v), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));
	if (((!(_1abda9208_IsInitialized(_73613_v))) || ((*((*_73613_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ab668897_removeInteriorMutRisk(_self_, &((*(*_73613_v.alloc)._field_Value.alloc)._field_Data));
	_1ab6b2094_checkVarValue((*_self_.alloc)._field_s, &(_73613_v));
}



inline void _1ab6628d5_checkTypeAlias(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _76639_ta) {
	if (_1ab662374_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_76639_ta))), &((*((*(_76639_ta))))._field_Ident))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_76639_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_76639_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1ab660372_stop(_self_);
		return;;
	};
	_1ab6a7be4_checkTypeAliasDecl((*_self_.alloc)._field_s, _76639_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*_self_.alloc)._field_table.alloc)._field_TypeAliases,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>::make({(*(_76639_ta))}));
	if (((*((*((*(_76639_ta))))._field_Kind))._field_Kind == nullptr)) {
		_1ab660372_stop(_self_);
	};
}



inline void _1ab662b8d_checkTypeAliasDecl(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd37362_TypeAliasDecl> _78242_decl) {
	jule::Ptr<_1abe4203d_TypeAlias> _78313_ta = _1abd5e7a7_buildTypeAlias(_78242_decl);;
	_1ab6628d5_checkTypeAlias(_self_, &(_78313_ta));
}



inline jule::Ptr<_1ab655576_Scope> _1ab662e24_getChild(_1ab65ca34_scopeChecker* _self_) {
	return jule::new_ptr<_1ab655576_Scope>(_1ab655576_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1ab663342_checkChildSsc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _79338_tree, jule::Ptr<_1ab655576_Scope>* _79361_s, jule::Ptr<_1ab65ca34_scopeChecker>* _79377_ssc) {
	(*((*(_79377_ssc))))._field_parent=_self_;
	_1ab66e837_check((*(_79377_ssc)), _79338_tree, _79361_s);
}



inline jule::Ptr<_1ab655576_Scope> _1ab66373d_checkChildSc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _79837_tree, jule::Ptr<_1ab65ca34_scopeChecker>* _79860_ssc) {
	jule::Ptr<_1ab655576_Scope> _79913_s = _1ab662e24_getChild(_self_.ptr());;
	_1ab663342_checkChildSsc(_self_, _79837_tree, &(_79913_s), _79860_ssc);
	return _79913_s;;
}



inline jule::Ptr<_1ab655576_Scope> _1ab663a7e_checkChild(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _80435_tree) {
	jule::Ptr<_1ab65ca34_scopeChecker> _80513_ssc = _1ab66eabd_newChildChecker(_self_);;
	return _1ab66373d_checkChildSc(_self_, _80435_tree, &(_80513_ssc));;
}



inline void _1ab663d37_checkAnonScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree> _80938_tree) {
	jule::Ptr<_1ab655576_Scope> _81013_s = _1ab663a7e_checkChild(_self_, &(_80938_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_81013_s, &__jule_any_type21)}));
}



inline void _1ab66419a_processErrorCall(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel>* _81441_m, jule::Ptr<_1abd0a38a_Token> _81472_err) {
	if (_1ab66088e_isDeferred(_self_)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), _81472_err, jule::Str::lit("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _81913_root = _1ab660dcd_getRoot(_self_);;
	if ((!((*((*((*(_81913_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, _81472_err, jule::Str::lit("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*((*(_81441_m))))._field_Func=(*_81913_root.alloc)._field_owner;
}



inline void _1ab664453_checkExpr(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd24b79_Expr> _82733_expr) {
	jule::Ptr<_1abe1365d_Eval> _82813_eval = _1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
	(*(_82813_eval))._field_ignored=true;
	jule::Ptr<_1abe11936_Data> _83013_d = _1abe318bd_evalExpr(_82813_eval, _82733_expr);;
	if (((_83013_d == nullptr) || ((*(_83013_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_83013_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ae76828a:;
			{
				jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _83917_m = (*(_83013_d))._field_Model.unsafe_cast_ptr<_1abd5213a_BuiltinErrorCallExprModel>();;
				_1ab66419a_processErrorCall(_self_, &(_83917_m), (*(_82733_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_83013_d, &__jule_any_type23)}));
			}
		}
		else if (_match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33) {
			_case_begin_1ae7688b7:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_83013_d, &__jule_any_type23)}));
			}
		}
		else {
			_case_begin_1ae768851:;
			{
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*(_82733_expr))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ae7687eb:;
	};
}



inline jule::Ptr<_1ab655994_If> _1ab664794_checkIf(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd36295_If> _85831_i) {
	jule::Ptr<_1ab655576_Scope> _85913_s = _1ab663a7e_checkChild(_self_, &((*(_85831_i))._field_Scope));;
	jule::Ptr<_1abe11936_Data> _86113_d = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*_85831_i.alloc)._field_Expr);;
	if ((_86113_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abe4a909_Prim> _86613_prim = _1abe45481_Prim((*(_86113_d))._field_Kind.ptr());;
	if (((_86613_prim == nullptr) || (!(_1abe4db0a_IsBool(_86613_prim.ptr()))))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*_85831_i.alloc)._field_Expr))._field_Token, jule::Str::lit("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ab655994_If>(_1ab655994_If{._field_Expr=(*(_86113_d))._field_Model, ._field_Scope=_85913_s});;
}



inline jule::Ptr<_1ab655c91_Else> _1ab664ad5_checkElse(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd3666e_Else> _87833_e) {
	return jule::new_ptr<_1ab655c91_Else>(_1ab655c91_Else{._field_Scope=_1ab663a7e_checkChild(_self_, &((*(_87833_e))._field_Scope))});;
}



inline void _1ab664d8d_checkConditional(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd36b25_Conditional> _88440_conditional) {
	jule::Ptr<_1ab6561ae_Conditional> _88513_c = jule::new_ptr<_1ab6561ae_Conditional>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_88513_c, &__jule_any_type34)}));
	(*_88513_c.alloc)._field_Elifs=jule::Slice<jule::Ptr<_1ab655994_If>>::alloc(0LL, ((*(_88440_conditional))._field_Tail.len() + 1LL));
	(*_88513_c.alloc)._field_Elifs=jule::append((*_88513_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1ab655994_If>>::make({_1ab664794_checkIf(_self_, (*_88440_conditional.alloc)._field_Head)}));
	{
		auto expr = &((*_88440_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1add0b257:;
		if (it != expr_end) {
			jule::Ptr<_1abd36295_If> _89121_elif = *it;
			{
				(*_88513_c.alloc)._field_Elifs=jule::append((*_88513_c.alloc)._field_Elifs,jule::Slice<jule::Ptr<_1ab655994_If>>::make({_1ab664794_checkIf(_self_, _89121_elif)}));
			}
			_iter_next_1add0b257:;
			++it;
			goto _iter_begin_1add0b257;
		}
		_iter_end_1add0b257:;
	};
	if (((*_88440_conditional.alloc)._field_Default != nullptr)) {
		(*_88513_c.alloc)._field_Default=_1ab664ad5_checkElse(_self_, (*_88440_conditional.alloc)._field_Default);
	};
}



inline void _1ab665366_checkIterScopeSsc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _90037_it, jule::Ptr<_1abd30866_ScopeTree> _90054_tree, jule::Ptr<_1ab655576_Scope>* _90077_s, jule::Ptr<_1ab65ca34_scopeChecker> _90092_ssc) {
	(*(_90092_ssc))._field_it=_90037_it;
	_1ab663342_checkChildSsc(_self_, &(_90054_tree), _90077_s, &(_90092_ssc));
}



inline jule::Ptr<_1ab655576_Scope> _1ab66581c_checkIterScopeSc(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _90536_it, jule::Ptr<_1abd30866_ScopeTree> _90553_tree, jule::Ptr<_1ab65ca34_scopeChecker> _90575_ssc) {
	jule::Ptr<_1ab655576_Scope> _90613_scope = _1ab662e24_getChild(_self_.ptr());;
	_1ab665366_checkIterScopeSsc(_self_, _90536_it, _90553_tree, &(_90613_scope), _90575_ssc);
	return _90613_scope;;
}



inline jule::Ptr<_1ab655576_Scope> _1ab665c18_checkIterScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _91134_it, jule::Ptr<_1abd30866_ScopeTree>* _91152_tree) {
	jule::Ptr<_1ab65ca34_scopeChecker> _91213_ssc = _1ab66eabd_newChildChecker(_self_);;
	return _1ab66581c_checkIterScopeSc(_self_, _91134_it, (*(_91152_tree)), _91213_ssc);;
}



inline void _1ab665ec1_checkInfIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _91637_it) {
	jule::Ptr<_1ab6564ab_InfIter> _91713_kind = jule::new_ptr<_1ab6564ab_InfIter>();;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_91713_kind, &__jule_any_type35)}));
	(*_91713_kind.alloc)._field_Scope=_1ab665c18_checkIterScope(_self_, static_cast<jule::Uintptr>(_91713_kind), &((*((*(_91637_it))))._field_Scope));
}



inline void _1ab666279_checkWhileIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _92239_it) {
	jule::Ptr<_1abd34b34_WhileKind> _92313_wh = (*((*(_92239_it))))._field_Kind.cast_ptr<_1abd34b34_WhileKind>(&__jule_any_type36);;
	if ((((*(_92313_wh))._field_Expr == nullptr) && ((*_92313_wh.alloc)._field_Next == nullptr))) {
		_1ab665ec1_checkInfIter(_self_, _92239_it);
		return;;
	};
	jule::Ptr<_1ab656962_WhileIter> _92913_kind = jule::new_ptr<_1ab656962_WhileIter>();;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_92913_kind, &__jule_any_type37)}));
	(*_92913_kind.alloc)._field_Scope=_1ab665c18_checkIterScope(_self_, static_cast<jule::Uintptr>(_92913_kind), &((*((*(_92239_it))))._field_Scope));
	if (((*_92313_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1abe11936_Data> _93417_d = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*_92313_wh.alloc)._field_Expr);;
		if ((_93417_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1abe4a909_Prim> _93913_prim = _1abe45481_Prim((*(_93417_d))._field_Kind.ptr());;
		if ((_93913_prim == nullptr)) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_92239_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1abe4db0a_IsBool(_93913_prim.ptr())))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_92239_it))))._field_Token, jule::Str::lit("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		(*_92913_kind.alloc)._field_Expr=(*(_93417_d))._field_Model;
	};
	if (_1abd34e97_IsWhileNext(_92313_wh)) {
		if ((!(_1ab654a09_isValidAstStForNextSt(&((*_92313_wh.alloc)._field_Next))))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_92313_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _95913_n = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len();;
		_1ab66d46d_checkNode(_self_, &((*_92313_wh.alloc)._field_Next));
		if ((_95913_n < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _96221_st = (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[_95913_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _95913_n);;
			if ((!(_1ab654cc3_isValidStForNextSt(&(_96221_st))))) {
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_92313_wh.alloc)._field_NextToken, jule::Str::lit("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			(*_92913_kind.alloc)._field_Next=_96221_st;
		};
	};
}



inline void _1ab666697_checkComptimeRangeIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _97247_it, jule::Ptr<_1ab6573ad_RangeIter>* _97263_kind, jule::Ptr<_1abe11936_Data>* _97286_d) {
	if (((*((*(_97263_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ab699e17_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1ab662374_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_97263_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ab699e17_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ab662374_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1abd3553b_RangeKind> _98613_rang = (*((*(_97247_it))))._field_Kind.cast_ptr<_1abd3553b_RangeKind>(&__jule_any_type38);;
	_1ab670173_makeComptimeRange(_97286_d);
	if ((*((*(_97286_d))))._field_Decl) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_98613_rang))._field_Expr))._field_Token, jule::Str::lit("type @ is not supports comptime iterations", 42), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_97286_d))))._field_Kind.ptr()), &__jule_any_type4)}));
		return;;
	};
	_1abe067e9_rangeChecker _99313_rc = _1abe067e9_rangeChecker{._field_sc=_self_, ._field_rang=_98613_rang, ._field_Kind=(*(_97263_kind)), ._field_d=(*(_97286_d))};;
	jule::Bool _9999_ok = _1abe0880c_check(&_99313_rc);;
	if ((!(_9999_ok))) {
		return;;
	};
	jule::Ptr<_1abd71ac7_comptimeRange> _100413_comptime = _1abe4882a_comptimeRange((*((*(_97286_d))))._field_Kind);;
	((_1abd718a7_comptimeRangeKindMptrData*)(*(_100413_comptime))._field_kind.safe_type())->_1abd7109e_ready((*(_100413_comptime))._field_kind.data, &((*((*(_97263_kind))))._field_KeyA), &((*((*(_97263_kind))))._field_KeyB));
	jule::I32 _100613_i = 0LL;;
	jule::I32 _10079_errors = (*(*_self_.alloc)._field_s.alloc)._field_errors.len();;
	for (; (_100613_i < ((_1abd718a7_comptimeRangeKindMptrData*)(*_100413_comptime.alloc)._field_kind.safe_type())->_1abd71753_len((*_100413_comptime.alloc)._field_kind.data)); (_100613_i)++) {
		{
			jule::Ptr<_1ab65ca34_scopeChecker> _100917_ssc = _1ab66eabd_newChildChecker(_self_);;
			jule::Ptr<_1ab655576_Scope> _101017_scope = _1ab662e24_getChild(_self_);;
			if (((*((*(_97263_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_97263_kind))))._field_KeyA.alloc)._field_Scope=_101017_scope;
				(*((*(_100917_ssc))._field_table))._field_Vars=jule::append((*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({(*((*(_97263_kind))))._field_KeyA}));
			};
			if (((*((*(_97263_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_97263_kind))))._field_KeyB.alloc)._field_Scope=_101017_scope;
				(*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_100917_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({(*((*(_97263_kind))))._field_KeyB}));
			};
			((_1abd718a7_comptimeRangeKindMptrData*)(*_100413_comptime.alloc)._field_kind.safe_type())->_1abd714bc_step((*_100413_comptime.alloc)._field_kind.data, _100613_i, &((*((*(_97263_kind))))._field_KeyA), &((*((*(_97263_kind))))._field_KeyB));
			_1ab663342_checkChildSsc(_self_, &((*((*(_97247_it))))._field_Scope), &(_101017_scope), &(_100917_ssc));
			if ((_10079_errors != (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1add2bb07;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_101017_scope, &__jule_any_type21)}));
		}
	_iter_next_1add2bb07:;
	}
	_iter_end_1add2bb07:;;
}



inline void _1ab666950_checkRangeIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter>* _102939_it) {
	jule::Ptr<_1abd3553b_RangeKind> _103013_rang = (*((*(_102939_it))))._field_Kind.cast_ptr<_1abd3553b_RangeKind>(&__jule_any_type38);;
	jule::Ptr<_1abe11936_Data> _103213_d = _1abe3157c_evalExpr1(_1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*(_103013_rang))._field_Expr);;
	if ((_103213_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab6573ad_RangeIter> _103713_kind = jule::new_ptr<_1ab6573ad_RangeIter>(_1ab6573ad_RangeIter{._field_Expr=_103213_d, });;
	if ((*((*(_102939_it))))._field_Comptime) {
		_1ab666697_checkComptimeRangeIter(_self_, _102939_it, &(_103713_kind), &(_103213_d));
		return;;
	};
	if (_1abe4753d_comptime((*(_103213_d))._field_Kind.ptr())) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*_103013_rang.alloc)._field_Expr))._field_Token, jule::Str::lit("comptime expressions cannot be iterated at runtime", 50), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("declarate comptime iteration like: const for ...", 48), jule::Slice<jule::Any>());
		return;;
	};
	_1abe067e9_rangeChecker _105113_rc = _1abe067e9_rangeChecker{._field_sc=_self_, ._field_rang=_103013_rang, ._field_Kind=_103713_kind, ._field_d=_103213_d};;
	jule::Bool _10579_ok = _1abe0880c_check(&_105113_rc);;
	if ((!(_10579_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_103713_kind, &__jule_any_type39)}));
	jule::Ptr<_1ab65ca34_scopeChecker> _106413_ssc = _1ab66eabd_newChildChecker(_self_);;
	jule::Ptr<_1ab655576_Scope> _106513_scope = _1ab662e24_getChild(_self_);;
	if (((*(_103713_kind))._field_KeyA != nullptr)) {
		if (((!(_1ab699e17_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ab662374_isDuplicatedIdent(_self_, 0LLU, &((*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Ident)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103713_kind.alloc)._field_KeyA.alloc)._field_Scope=_106513_scope;
		(*((*(_106413_ssc))._field_table))._field_Vars=jule::append((*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({(*_103713_kind.alloc)._field_KeyA}));
	};
	if (((*_103713_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ab699e17_isFlag((*_self_.alloc)._field_s, static_cast<jule::I32>(1LL)))) && _1ab662374_isDuplicatedIdent(_self_, 0LLU, &((*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Ident)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		(*(*_103713_kind.alloc)._field_KeyB.alloc)._field_Scope=_106513_scope;
		(*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars=jule::append((*(*_106413_ssc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({(*_103713_kind.alloc)._field_KeyB}));
	};
	_1ab665366_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_103713_kind), (*((*(_102939_it))))._field_Scope, &(_106513_scope), _106413_ssc);
	(*_103713_kind.alloc)._field_Scope=_106513_scope;
}



inline void _1ab666c08_checkIter(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd34309_Iter> _108933_it) {
	if (_1abd3466c_IsInf(_108933_it.ptr())) {
		if ((*_108933_it.alloc)._field_Comptime) {
			_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_108933_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
			return;;
		};
		_1ab665ec1_checkInfIter(_self_, &(_108933_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_108933_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1add44856:;
			{
				if ((*_108933_it.alloc)._field_Comptime) {
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_108933_it.alloc)._field_Token, jule::Str::lit("comptime iterations can only be range iteration", 47), jule::Slice<jule::Any>());
					return;;
				};
				_1ab666279_checkWhileIter(_self_, &(_108933_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1add460d8:;
			{
				_1ab666950_checkRangeIter(_self_, &(_108933_it));
			}
		}
		else {
			_case_begin_1add45add:;
			{
				jule::outln(jule::Str::lit("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1add45a88:;
	};
}



inline jule::Bool _1ab667049_checkValidContLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _111339_it) {
	jule::Ptr<_1ab65ca34_scopeChecker> _111413_scope = _self_;;
	_julec_label_1add480c9:;
	if (((*(_111413_scope))._field_it == _111339_it)) {
		return true;;
	};
	if (((*_111413_scope.alloc)._field_parent != nullptr)) {
		_111413_scope=(*_111413_scope.alloc)._field_parent;
		goto _julec_label_1add480c9;
	};
	return false;;
}



inline jule::Bool _1ab66738a_checkValidBreakLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Uintptr _112940_ptr) {
	jule::Ptr<_1ab65ca34_scopeChecker> _113013_scope = _self_;;
	_julec_label_1add4a175:;
	if (((*(_113013_scope))._field_it == _112940_ptr)) {
		return true;;
	};
	if (((*_113013_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _113813_mtch = static_cast<jule::Uintptr>((*(((_1ab65a2b2_Case*)((*_113013_scope.alloc)._field_cse))))._field_Owner);;
		if ((_113813_mtch == _112940_ptr)) {
			return true;;
		};
	};
	if (((*_113013_scope.alloc)._field_parent != nullptr)) {
		_113013_scope=(*_113013_scope.alloc)._field_parent;
		goto _julec_label_1add4a175;
	};
	return false;;
}



inline jule::Ptr<_1ab657743_ContSt> _1ab6676cb_checkContValidScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35cde_ContSt> _115239_c) {
	if (_1ab66088e_isDeferred(_self_)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_115239_c))._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_115239_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ab657743_ContSt>();;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _116213_scope = _self_;;
	_julec_label_1add4d0ce:;
	{
		
		if (((((*_116213_scope.alloc)._field_it == 0LLU) && ((*_116213_scope.alloc)._field_parent != nullptr)) && ((*_116213_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1add4edc2:;
			{
				_116213_scope=(*_116213_scope.alloc)._field_parent;
				goto _julec_label_1add4d0ce;
			}
		}
		else if (((*_116213_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1add4ee5a:;
			{
				return jule::new_ptr<_1ab657743_ContSt>(_1ab657743_ContSt{._field_It=(*_116213_scope.alloc)._field_it});;
			}
		}
		_match_end_1add4ed39:;
	};
	_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_115239_c.alloc)._field_Token, jule::Str::lit("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab667984_checkCont(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35cde_ContSt> _117629_c) {
	jule::Ptr<_1ab657743_ContSt> _117713_cont = _1ab6676cb_checkContValidScope(_self_, _117629_c);;
	if ((_117713_cont == nullptr)) {
		return;;
	};
	if (((*(_117629_c))._field_Label != nullptr)) {
		jule::Ptr<_1ab65b4b1_scopeLabel> _118317_label = _1ab652a90_findLabelParent(&((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_118317_label == nullptr)) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_117629_c.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		(*(_118317_label))._field_used=true;
		if ((((*(_118317_label))._field_pos + 1LL) >= (*((*((*(_118317_label))._field_scope))._field_scope))._field_Stmts.len())) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
			return;;
		};
		jule::I32 _119613_i = ((*(_118317_label))._field_pos + 1LL);;
		if ((_119613_i >= (*(*(*(_118317_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _120021_st = (*(*(*(_118317_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_119613_i];;
			{
				auto &_match_expr{ _120021_st };
				
				if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1add5a6e6:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1ab6564ab_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1add5a8c2:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1ab6573ad_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1add5a938:;
					{
						(*(_117713_cont))._field_It=static_cast<jule::Uintptr>(_120021_st.unsafe_cast_ptr<_1ab656962_WhileIter>());
					}
				}
				else {
					_case_begin_1add5a85b:;
					{
						_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					}
				}
				_match_end_1add5a806:;
			};
		};
	};
	if (((*(_117713_cont))._field_It != 0LLU)) {
		if ((!(_1ab667049_checkValidContLabel(_self_, (*(_117713_cont))._field_It)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_117629_c.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_117629_c.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_117713_cont, &__jule_any_type40)}));
}



inline void _1ab667c3c_checkLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2ce29_LabelSt> _122334_l) {
	if ((_1ab6617e6_findLabel(_self_.ptr(), &((*(_122334_l))._field_Ident)) != nullptr)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_122334_l.alloc)._field_Token, jule::Str::lit("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any((*_122334_l.alloc)._field_Ident, &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1ab657e19_Label> _122913_label = jule::new_ptr<_1ab657e19_Label>(_1ab657e19_Label{._field_Ident=(*_122334_l.alloc)._field_Ident});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_122913_label, &__jule_any_type20)}));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1ab65b4b1_scopeLabel>>::make({jule::new_ptr<_1ab65b4b1_scopeLabel>(_1ab65b4b1_scopeLabel{._field_token=(*_122334_l.alloc)._field_Token, ._field_label=_122913_label, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL), ._field_scope=_self_, })}));
}



inline void _1ab667ee5_pushGoto(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2d303_GotoSt> _124232_gt) {
	jule::Ptr<_1ab6582e3_GotoSt> _124313_st = jule::new_ptr<_1ab6582e3_GotoSt>(_1ab6582e3_GotoSt{._field_Ident=(*((*(_124232_gt))._field_Label))._field_Kind, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_124313_st, &__jule_any_type41)}));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1ab65ba44_scopeGoto>>::make({jule::new_ptr<_1ab65ba44_scopeGoto>(_1ab65ba44_scopeGoto{._field_st=_124313_st, ._field_gt=_124232_gt, ._field_scope=_self_, ._field_pos=((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len() - 1LL)})}));
}



inline void _1ab66829d_checkPostfix(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt> _125636_a) {
	if (((*(_125636_a))._field_Left.len() > 1LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_125636_a.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd24b79_Expr> _126213_expr = (*((*_125636_a.alloc)._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1abe11936_Data> _126313_d = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), _126213_expr);;
	if ((_126313_d == nullptr)) {
		return;;
	};
	_1ab654740_checkAssign(&((*_self_.alloc)._field_s), &(_126313_d), nullptr, (*_125636_a.alloc)._field_Setter);
	if ((_1abe4599d_Ptr((*(_126313_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abe52bec_Ptr> _127117_ptr = _1abe4599d_Ptr((*(_126313_d))._field_Kind);;
		if (_1abe53736_IsUnsafe(_127117_ptr.ptr())) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_125636_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125636_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_126313_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	} else {
		if (((_1abe45481_Prim((*(_126313_d))._field_Kind.ptr()) == nullptr) || (!(_1b9aabe31_IsNum((*(_1abe45481_Prim((*(_126313_d))._field_Kind)))._field_Kind))))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_125636_a.alloc)._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*_125636_a.alloc)._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_126313_d))._field_Kind), &__jule_any_type4)}));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ab6586bc_Postfix>(_1ab6586bc_Postfix{._field_Expr=(*(_126313_d))._field_Model, ._field_Op=(*((*_125636_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type42)}));
}



inline jule::Bool _1ab6685de_isNewAssignIdent(_1ab65ca34_scopeChecker* _self_, jule::Str _128935_ident) {
	if ((_1abd0cc72_IsIgnoreIdent(_128935_ident) || (_128935_ident).empty())) {
		return false;;
	};
	return (_1abe0e637_defByIdent((*(_self_))._field_table.ptr(), &(_128935_ident), false) == nullptr);;
}



inline void _1ab668897_removeInteriorMutRisk(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abe11936_Data>* _130246_d) {
	jule::Ptr<_1abd4445c_StructIns> _13039_s = _1abe46a04_Struct((*((*(_130246_d))))._field_Kind.ptr());;
	if ((_13039_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _13079_root = _1ab661164_getHardRoot(_self_);;
	if (((*((*(_13079_root))._field_owner))._field_Owner != _13039_s)) {
		return;;
	};
	(*((*(_130246_d))))._field_Mutable=true;
}



inline jule::Bool _1ab668d4d_checkStructureAssignOp(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd4445c_StructIns>* _131647_s, jule::Ptr<_1abd2e2e3_AssignSt>* _131667_a, jule::Ptr<_1abe11936_Data>* _131686_r) {
	jule::Ptr<_1abd59681_FnIns> _131917_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_131667_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1add76e1b:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1add76aca:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1add76b41:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1add76ba7:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1add76c1d:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1add76c84:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1add76cea:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1add7846c:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1add784d3:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1add78549:;
			{
				_131917_overload=(*((*(_131647_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1add7638d:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_131667_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131667_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1abd447d1_Str((*(_131647_s)).ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1add76a64:;
	};
	if ((_131917_overload == nullptr)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_131667_a))))._field_Setter, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_131667_a))))._field_Setter))._field_Kind, &__jule_any_type4),jule::Any(_1abd447d1_Str((*(_131647_s)).ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1abd58608_ParamIns> _135113_p = (*(_131917_overload))._field_Params[1LL];;
	return _1ab6a30eb_checkAssignType((*_self_.alloc)._field_s, (*((*(_135113_p))._field_Decl))._field_Reference, &((*_135113_p.alloc)._field_Kind), _131686_r, (*((*(_131667_a))))._field_Setter);;
}



inline void _1ab669106_checkSingleAssign(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt>* _135542_a) {
	jule::Ptr<_1abe11936_Data> _135617_l = nullptr;;
	if ((!(_1abd0cc72_IsIgnoreIdent((*((*((*(_135542_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1abd24b79_Expr> _135917_expr = (*((*((*(_135542_a))))._field_Left[0LL]))._field_Expr;;
		_135617_l=_1abe318bd_evalExpr(_1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), _135917_expr);
		if ((_135617_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1abe1365d_Eval> _136617_eval = nullptr;;
	if ((_135617_l != nullptr)) {
		_136617_eval=_1ab6a2749_evalp((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0), (*(_135617_l))._field_Kind);
	} else {
		_136617_eval=_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));
	};
	(*(_136617_eval))._field_unsafety=_1ab65eddd_isUnsafe(_self_);
	jule::Ptr<_1abe11936_Data> _137313_r = _1abe318bd_evalExpr(_136617_eval, (*((*(_135542_a))))._field_Right);;
	if ((_137313_r == nullptr)) {
		return;;
	};
	_1ab668897_removeInteriorMutRisk(_self_, &(_137313_r));
	if ((_135617_l == nullptr)) {
		if (_1abe44194_Void((*(_137313_r))._field_Kind.ptr())) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*((*(_135542_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_137313_r, &__jule_any_type23)}));
		return;;
	};
	if ((!(_1ab654740_checkAssign(&((*_self_.alloc)._field_s), &(_135617_l), _137313_r, (*((*(_135542_a))))._field_Setter)))) {
		return;;
	};
	if ((_1abe472a7_Tup((*(_137313_r))._field_Kind) != nullptr)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_135542_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd48362_OperandExprModel> _139713_lm = jule::new_ptr<_1abd48362_OperandExprModel>(_1abd48362_OperandExprModel{._field_Kind=(*(_135617_l))._field_Kind, ._field_Model=(*(_135617_l))._field_Model});;
	jule::Ptr<_1abd48362_OperandExprModel> _140113_rm = jule::new_ptr<_1abd48362_OperandExprModel>(_1abd48362_OperandExprModel{._field_Kind=(*(_137313_r))._field_Kind, ._field_Model=(*(_137313_r))._field_Model});;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ab658b73_Assign>(_1ab658b73_Assign{._field_Left=_139713_lm, ._field_Right=_140113_rm, ._field_Op=(*((*(_135542_a))))._field_Setter}), &__jule_any_type43)}));
	if (((*((*((*(_135542_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1abdea39d_assignTypeChecker _140817_checker = _1abdea39d_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_135617_l))._field_Kind, ._field_d=_137313_r, ._field_errorToken=(*((*(_135542_a))))._field_Setter};;
		if (_1abdeb36b_check(&_140817_checker)) {
			(*(_140113_rm))._field_Model=(*(_137313_r))._field_Model;
			(*(_139713_lm))._field_Model=(*(_135617_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _142013_strct = _1abe46a04_Struct((*(_135617_l))._field_Kind);;
	if ((_142013_strct != nullptr)) {
		_1ab668d4d_checkStructureAssignOp(_self_, &(_142013_strct), _135542_a, &(_137313_r));
		return;;
	};
	jule::U32 _14259_id = (*(*((*(_135542_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_135542_a))))._field_Setter.alloc)._field_Id=_1ab66ee42_removeEqFromOp((*(*((*(_135542_a))))._field_Setter.alloc)._field_Id);
	_1abe33d21_binaryEval _142713_solver = static__1abe3474a_new(_136617_eval, (*((*(_135542_a))))._field_Setter);;
	({
		jule::Ptr<_1abe11936_Data> ___jule_assign_arg = _135617_l;
		jule::Ptr<_1abe11936_Data> _1___jule_assign_arg = _137313_r;
		_142713_solver._field_l = ___jule_assign_arg;
		_142713_solver._field_r = _1___jule_assign_arg;
	});
	_1abe38892_evalOp(&_142713_solver);
	(*(*((*(_135542_a))))._field_Setter.alloc)._field_Id=_14259_id;
}



inline void _1ab669689_processEndPartOfMultiAssign(_1ab65ca34_scopeChecker* _self_, jule::Ptr<_1ab659129_MultiAssign>* _143351_st, jule::Ptr<_1abd2e2e3_AssignSt>* _143414_a, jule::Ptr<_1abd2dc60_AssignLeft>* _143433_lexpr, jule::Ptr<_1abe11936_Data>* _143458_l, jule::Ptr<_1abe11936_Data>* _143473_r) {
	if (((!((*((*(_143433_lexpr))))._field_Reference)) && _1abd0cc72_IsIgnoreIdent((*((*(_143433_lexpr))))._field_Ident))) {
		if (_1abe44194_Void((*((*(_143473_r))))._field_Kind.ptr())) {
			_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_143414_a))))._field_Right))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1abe11936_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*((*(_143414_a))))._field_Declarative && ((*((*(_143433_lexpr))))._field_Reference || _1ab6685de_isNewAssignIdent(_self_, (*((*(_143433_lexpr))))._field_Ident)))) {
		if (_1ab662374_isDuplicatedIdent(_self_, 0LLU, &((*((*(_143433_lexpr))))._field_Ident))) {
			_1ab69a5dd_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143433_lexpr))))._field_Ident, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1ab660372_stop(_self_);
			return;;
		};
		if (_1abd0cc72_IsIgnoreIdent((*((*(_143433_lexpr))))._field_Ident)) {
			_1ab69a5dd_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1abda8d2e_Var> _145517_v = jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_143433_lexpr))))._field_Token, ._field_Ident=(*((*(_143433_lexpr))))._field_Ident, ._field_Mutable=(*((*(_143433_lexpr))))._field_Mutable, ._field_Reference=(*((*(_143433_lexpr))))._field_Reference, ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Expr=(*((*(_143414_a))))._field_Right, ._field_Data=(*(_143473_r))}), });;
		_1ab6b2094_checkVarValue((*(_self_))._field_s, &(_145517_v));
		{ jule::Slice<jule::Ptr<_1abe11936_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*((*_145517_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_145517_v.alloc)._field_Mutable, ._field_Reference=(*_145517_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_145517_v))._field_Constant)), ._field_Model=jule::Any(_145517_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*((*(_143351_st))))._field_Decls; __jule_push_dest.push(_145517_v); };
		(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({_145517_v}));
		return;;
	};
	if (((*((*(_143433_lexpr))))._field_Mutable || (*((*(_143433_lexpr))))._field_Reference)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s, (*((*(_143433_lexpr))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143433_lexpr))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion((*(_self_))._field_s, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1ab654740_checkAssign(&((*(_self_))._field_s), _143458_l, (*(_143473_r)), (*((*(_143433_lexpr))))._field_Token)))) {
		return;;
	};
	;
	_1ab6a7485_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_143458_l))))._field_Mutable, false, &((*((*(_143458_l))))._field_Kind), _143473_r, &((*((*(_143414_a))))._field_Setter));
	_1abdea39d_assignTypeChecker _149313_checker = _1abdea39d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*((*(_143458_l))))._field_Kind, ._field_d=(*(_143473_r)), ._field_errorToken=(*((*(_143414_a))))._field_Setter};;
	_1abdeb36b_check(&_149313_checker);
	{ jule::Slice<jule::Ptr<_1abe11936_Data>> &__jule_push_dest = (*((*(_143351_st))))._field_Left; __jule_push_dest.push((*(_143458_l))); };
}



inline void _1ab669942_checkMultiAssign(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt>* _150341_a) {
	jule::Ptr<_1abe11936_Data> _150413_rd = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*((*(_150341_a))))._field_Right);;
	if ((_150413_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abe11936_Data>> _150813_right = _1ab65391a_getDatasFromTupleData(&(_150413_rd));;
	if ((_150813_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_150813_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type44) {
				_case_begin_1adda4e49:;
				{
					jule::Ptr<_1abd4b1bc_IndexingExprModel> _151221_iem = (*(_150813_right[0LL]))._field_Model.unsafe_cast_ptr<_1abd4b1bc_IndexingExprModel>();;
					if ((_1abe47021_Map((*((*(_151221_iem))._field_Expr))._field_Kind.ptr()) != nullptr)) {
						_150813_right=jule::Slice<jule::Ptr<_1abe11936_Data>>::make({jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*(_1abe47021_Map((*(*_151221_iem.alloc)._field_Expr.alloc)._field_Kind)))._field_Val, }),jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, })});
					};
				}
			}
			_match_end_1adda4da0:;
		};
	};
	{
		
		if (((*((*(_150341_a))))._field_Left.len() > _150813_right.len())) {
			_case_begin_1adda4894:;
			{
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_150341_a))))._field_Setter, jule::Str::lit("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_150341_a))))._field_Left.len() < _150813_right.len())) {
			_case_begin_1adda529b:;
			{
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_150341_a))))._field_Setter, jule::Str::lit("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1adda5004:;
	};
	jule::Ptr<_1ab659129_MultiAssign> _153113_st = jule::new_ptr<_1ab659129_MultiAssign>(_1ab659129_MultiAssign{._field_Right=(*(_150413_rd))._field_Model});;
	{
		auto expr = &((*((*(_150341_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1adda9e71:;
		if (it != expr_end) {
			jule::I32 _153413_i = it - expr->begin();
			{
				jule::Ptr<_1abd2dc60_AssignLeft> _153517_lexpr = (*((*(_150341_a))))._field_Left[_153413_i];;
				jule::Ptr<_1abe11936_Data> _153621_l = nullptr;;
				if (((!(_1abd0cc72_IsIgnoreIdent((*(_153517_lexpr))._field_Ident))) && ((!((*((*(_150341_a))))._field_Declarative)) || (!(_1ab6685de_isNewAssignIdent(_self_, (*_153517_lexpr.alloc)._field_Ident)))))) {
					_153621_l=_1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*_153517_lexpr.alloc)._field_Expr);
					if ((_153621_l == nullptr)) {
						goto _iter_next_1adda9e71;
					};
				};
				jule::Ptr<_1abe11936_Data> _154417_r = _150813_right[_153413_i];;
				_1ab668897_removeInteriorMutRisk(_self_, &(_154417_r));
				_1ab669689_processEndPartOfMultiAssign(_self_, &(_153113_st), _150341_a, &(_153517_lexpr), &(_153621_l), &(_154417_r));
			}
			_iter_next_1adda9e71:;
			++it;
			_153413_i++;
			goto _iter_begin_1adda9e71;
		}
		_iter_end_1adda9e71:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_153113_st, &__jule_any_type45)}));
}



inline void _1ab669bea_checkAssignSt(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2e2e3_AssignSt> _155137_a) {
	{
		
		if (_1abd0ee1c_IsPostfixOp((*((*(_155137_a))._field_Setter))._field_Id)) {
			_case_begin_1addb031c:;
			{
				_1ab66829d_checkPostfix(_self_, _155137_a);
			}
		}
		else if (((*(_155137_a))._field_Left.len() == 1LL)) {
			_case_begin_1addaeecb:;
			{
				_1ab669106_checkSingleAssign(_self_, &(_155137_a));
			}
		}
		else {
			_case_begin_1addaee65:;
			{
				_1ab669942_checkMultiAssign(_self_, &(_155137_a));
			}
		}
		_match_end_1addaed66:;
	};
}



inline jule::Ptr<_1ab655576_Scope> _1ab66a0e6_checkCaseScope(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab65a2b2_Case>* _156235_c, jule::Ptr<_1abd30866_ScopeTree>* _156250_tree) {
	jule::Ptr<_1ab65ca34_scopeChecker> _156313_ssc = _1ab66eabd_newChildChecker(_self_);;
	(*(_156313_ssc))._field_cse=static_cast<jule::Uintptr>((*(_156235_c)));
	return _1ab66373d_checkChildSc(_self_, _156250_tree, &(_156313_ssc));;
}



inline jule::Ptr<_1ab65a2b2_Case> _1ab66a657_checkCase(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match> _156833_m, jule::I32 _156844_i, jule::Ptr<_1abd37818_Case> _156856_c, jule::Ptr<_1abe11936_Data> _156875_expr) {
	jule::Ptr<_1ab65a2b2_Case> _156913_case = (*(_156833_m))._field_Cases[_156844_i];;
	(*(_156913_case))._field_Exprs=jule::Slice<jule::Ptr<_1abe11936_Data>>::alloc(0LL, (*(_156856_c))._field_Exprs.len());
	jule::Bool _157113_constMatched = false;;
	jule::Ptr<_1abe1365d_Eval> _157213_eval = _1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
	{
		auto expr = &((*_156856_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1addb5a92:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _157321_e = *it;
			{
				jule::Ptr<_1abe11936_Data> _157417_d = _1abe30aa9_evalExprKind(_157213_eval, (*(_157321_e))._field_Kind);;
				if ((_157417_d == nullptr)) {
					goto _iter_next_1addb5a92;
				};
				if ((*_156833_m.alloc)._field_TypeMatch) {
					(*_156913_case.alloc)._field_Exprs=jule::append((*_156913_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1abe11936_Data>>::make({_157417_d}));
					if ((_1ab653651_countMatchType(&(_156833_m), &((*(_157417_d))._field_Kind)) > 1LL)) {
						_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_157417_d))._field_Kind.ptr()), &__jule_any_type4)}));
					};
					if ((*_156833_m.alloc)._field_Comptime) {
						_157113_constMatched=(_157113_constMatched || _1abe43539_Equal((*(_156875_expr))._field_Kind, (*(_157417_d))._field_Kind));
					} else {
						if ((_1abe45eba_TypeEnum((*(_156875_expr))._field_Kind) != nullptr)) {
							_1ab6a3a58_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156875_expr.alloc)._field_Kind), &((*(_157417_d))._field_Kind), &((*_157321_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1abd69a59_Trait> _159325_trt = _1abe46c8a_Trait((*(_156875_expr))._field_Kind);;
							if ((_159325_trt != nullptr)) {
								_1ab6a3a58_checkTypeCompatibility((*_self_.alloc)._field_s, &((*_156875_expr.alloc)._field_Kind), &((*(_157417_d))._field_Kind), &((*_157321_e.alloc)._field_Token));
							};
						};
					};
					goto _iter_next_1addb5a92;
				};
				if ((*(_157417_d))._field_Decl) {
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1addb5a92;
				};
				if ((*_156833_m.alloc)._field_Comptime) {
					if (((!(_1abe1233d_IsConst(_157417_d.ptr()))) && (_1abe48d47_comptimeTypeInfo((*(_157417_d))._field_Kind) == nullptr))) {
						_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_157321_e.alloc)._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
						_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
						goto _iter_next_1addb5a92;
					};
					if ((!(_157113_constMatched))) {
						if (_1abe1233d_IsConst(_157417_d.ptr())) {
							_157113_constMatched=(_1abe1233d_IsConst(_156875_expr.ptr()) && _1b9ab307a_Eq((*(_157417_d))._field_Constant.ptr(), (*(*_156875_expr.alloc)._field_Constant.alloc)));
						} else {
							jule::Ptr<_1abd81400_comptimeTypeInfo> _161825_exprCti = _1abe48d47_comptimeTypeInfo((*(_156875_expr))._field_Kind);;
							_157113_constMatched=((_161825_exprCti != nullptr) && _1abe43539_Equal((*(_1abe48d47_comptimeTypeInfo((*(_157417_d))._field_Kind)))._field_base, (*_161825_exprCti.alloc)._field_base));
						};
					};
				};
				(*_156913_case.alloc)._field_Exprs=jule::append((*_156913_case.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1abe11936_Data>>::make({_157417_d}));
				if ((((!((*_156833_m.alloc)._field_Comptime)) || (_1abe48d47_comptimeTypeInfo((*(_156875_expr))._field_Kind) == nullptr)) || (_1abe48d47_comptimeTypeInfo((*(_157417_d))._field_Kind) == nullptr))) {
					_1abdea39d_assignTypeChecker _162821_checker = _1abdea39d_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_156875_expr.alloc)._field_Kind, ._field_d=_157417_d, ._field_errorToken=(*_157321_e.alloc)._field_Token};;
					_1abdeb36b_check(&_162821_checker);
				};
			}
			_iter_next_1addb5a92:;
			++it;
			goto _iter_begin_1addb5a92;
		}
		_iter_end_1addb5a92:;
	};
	if (((!((*_156833_m.alloc)._field_Comptime)) || _157113_constMatched)) {
		(*_156913_case.alloc)._field_Scope=_1ab66a0e6_checkCaseScope(_self_, &(_156913_case), &((*_156856_c.alloc)._field_Scope));
	};
	return _156913_case;;
}



inline void _1ab66aa75_checkCases(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _164335_m, jule::Ptr<_1ab659789_Match> _164354_rm, jule::Ptr<_1abe11936_Data> _164370_expr) {
	(*(_164354_rm))._field_Cases=jule::Slice<jule::Ptr<_1ab65a2b2_Case>>::alloc(0LL, (*((*(_164335_m))))._field_Cases.len());
	{
		auto expr = &((*((*(_164335_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1addc82d0:;
		if (it != expr_end) {
			jule::I32 _164513_i = it - expr->begin();
			{
				jule::Ptr<_1ab65a2b2_Case> _164617_case = jule::new_ptr<_1ab65a2b2_Case>(_1ab65a2b2_Case{._field_Owner=_164354_rm, });;
				if ((_164513_i > 0LL)) {
					(*((*_164354_rm.alloc)._field_Cases[(_164513_i - 1LL)]))._field_Next=_164617_case;
				};
				(*_164354_rm.alloc)._field_Cases=jule::append((*_164354_rm.alloc)._field_Cases,jule::Slice<jule::Ptr<_1ab65a2b2_Case>>::make({_164617_case}));
			}
			_iter_next_1addc82d0:;
			++it;
			_164513_i++;
			goto _iter_begin_1addc82d0;
		}
		_iter_end_1addc82d0:;
	};
	if ((((*_164354_rm.alloc)._field_Default != nullptr) && ((*((*(_164335_m))))._field_Cases.len() > 0LL))) {
		(*((*_164354_rm.alloc)._field_Cases[((*_164354_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_164354_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_164335_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1addcb8aa:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_1abd37818_Case> _165921_c = *it;
			{
				_1ab66a657_checkCase(_self_, _164354_rm, _165914_i, _165921_c, _164370_expr);
			}
			_iter_next_1addcb8aa:;
			++it;
			_165914_i++;
			goto _iter_begin_1addcb8aa;
		}
		_iter_end_1addcb8aa:;
	};
}



inline jule::Ptr<_1ab65a2b2_Case> _1ab66ae71_checkDefault(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match> _166436_m, jule::Ptr<_1abd3666e_Else> _166451_d) {
	jule::Ptr<_1ab65a2b2_Case> _166513_def = jule::new_ptr<_1ab65a2b2_Case>(_1ab65a2b2_Case{._field_Owner=_166436_m, });;
	(*(_166513_def))._field_Scope=_1ab66a0e6_checkCaseScope(_self_, &(_166513_def), &((*(_166451_d))._field_Scope));
	return _166513_def;;
}



inline void _1ab66b2d4_checkComptimePanic(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd0a38a_Token> _167242_callToken, jule::Ptr<_1ab655576_Scope>* _167262_s) {
	if (((*((*(_167262_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16769_stmt = (*((*(_167262_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16769_stmt };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1addd00b7:;
			{
				jule::Ptr<_1abe11936_Data> _167913_d = _16769_stmt.unsafe_cast_ptr<_1abe11936_Data>();;
				{
					auto &_match_expr{ (*(_167913_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type28) {
						_case_begin_1addd1041:;
						{
							jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _168221_m = (*(_167913_d))._field_Model.unsafe_cast_ptr<_1abd5007d_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_168221_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1addd21da:;
									{
										jule::Ptr<_1b9aac4c5_Const> _168521_c = (*(_168221_m))._field_Expr.unsafe_cast_ptr<_1b9aac4c5_Const>();;
										if ((!(_1b9ab1c49_IsStr(_168521_c.ptr())))) {
											goto _match_end_1addd2174;
										};
										if ((_167242_callToken == nullptr)) {
											jule::Ptr<_1ab65ca34_scopeChecker> _169029_root = _1ab661164_getHardRoot(_self_);;
											if (((*(_169029_root))._field_calledFrom == nullptr)) {
												_167242_callToken=(*(_168221_m))._field_Token;
											} else {
												_167242_callToken=(*(_169029_root))._field_calledFrom;
											};
										};
										_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), _167242_callToken, jule::Str::lit("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1b9aae64d_ReadStr(_168521_c), &__jule_any_type4)}));
										_1ab660372_stop(_self_);
									}
								}
								_match_end_1addd2174:;
							};
						}
					}
					_match_end_1addd0eca:;
				};
			}
		}
		_match_end_1addd0062:;
	};
}



inline void _1ab66b647_processConstMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1ab659789_Match>* _170442_tm, jule::Ptr<_1abd38132_MatchCase>* _170459_m) {
	{
		auto expr = &((*((*(_170442_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1addd253c:;
		if (it != expr_end) {
			jule::I32 _170514_i = it - expr->begin();
			jule::Ptr<_1ab65a2b2_Case> _170521_c = *it;
			{
				if (((*(_170521_c))._field_Scope != nullptr)) {
					jule::Ptr<_1abd0a38a_Token> _170725_token = nullptr;;
					if (((!((*((*(_170442_tm))))._field_TypeMatch)) && ((*(*_170521_c.alloc)._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_170725_token=(*((*((*((*(_170459_m))))._field_Cases[_170514_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ab66b2d4_checkComptimePanic(_self_, _170725_token, &((*_170521_c.alloc)._field_Scope));
					(*((*(_170442_tm))))._field_Default=_170521_c;
					(*((*(_170442_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1addd253c:;
			++it;
			_170514_i++;
			goto _iter_begin_1addd253c;
		}
		_iter_end_1addd253c:;
	};
	if (((*((*(_170459_m))))._field_Default != nullptr)) {
		(*((*(_170442_tm))))._field_Cases=nullptr;
		(*((*(_170442_tm))))._field_Default=_1ab66ae71_checkDefault(_self_, (*(_170442_tm)), (*((*(_170459_m))))._field_Default);
		if (((*((*(_170442_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1abd0a38a_Token> _172125_token = nullptr;;
			if ((!((*((*(_170442_tm))))._field_TypeMatch))) {
				_172125_token=(*((*(*((*(_170459_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ab66b2d4_checkComptimePanic(_self_, _172125_token, &((*(*((*(_170442_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_170442_tm))))._field_Cases=nullptr;
	};
}



inline void _1ab66b900_checkTypeMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _173339_m) {
	jule::Ptr<_1abe11936_Data> _173413_d = _1abe30dea_eval1(_1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*((*(_173339_m))))._field_Expr);;
	if ((_173413_d == nullptr)) {
		return;;
	};
	if ((*((*(_173339_m))))._field_Comptime) {
		jule::Ptr<_1abd81400_comptimeTypeInfo> _174017_cti = _1abe48d47_comptimeTypeInfo((*(_173413_d))._field_Kind.ptr());;
		if ((_174017_cti == nullptr)) {
			if ((!((*(_173413_d))._field_Decl))) {
				_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*((*(_173339_m))))._field_Expr))._field_Token, jule::Str::lit("comptime type-match expressions can take only type declarations", 63), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_173413_d))._field_Kind=(*(_174017_cti))._field_base;
		};
	} else if (((*(_173413_d))._field_Decl || (!(((((_1abe45481_Prim((*(_173413_d))._field_Kind.ptr()) != nullptr) && _1abe4e127_IsAny(_1abe45481_Prim((*(_173413_d))._field_Kind).ptr())) || (_1abe46c8a_Trait((*(_173413_d))._field_Kind) != nullptr)) || (_1abe45eba_TypeEnum((*(_173413_d))._field_Kind) != nullptr)))))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*((*(_173339_m))))._field_Expr))._field_Token, jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab659789_Match> _175413_tm = jule::new_ptr<_1ab659789_Match>(_1ab659789_Match{._field_Expr=_173413_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_173339_m))))._field_Comptime, });;
	if (((!((*(_175413_tm))._field_Comptime)) && ((*((*(_173339_m))))._field_Default != nullptr))) {
		(*_175413_tm.alloc)._field_Default=_1ab66ae71_checkDefault(_self_, _175413_tm, (*((*(_173339_m))))._field_Default);
	};
	_1ab66aa75_checkCases(_self_, _173339_m, _175413_tm, _173413_d);
	if ((*_175413_tm.alloc)._field_Comptime) {
		_1ab66b647_processConstMatch(_self_, &(_175413_tm), _173339_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_175413_tm, &__jule_any_type46)}));
}



inline void _1ab66bba8_checkCommonMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase>* _177541_m) {
	jule::Ptr<_1abe11936_Data> _177617_d = nullptr;;
	if (((*((*(_177541_m))))._field_Expr == nullptr)) {
		_177617_d=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Constant=static__1b9aace98_NewBool(true)});
		(*(_177617_d))._field_Model=jule::Any((*_177617_d.alloc)._field_Constant, &__jule_any_type19);
	} else {
		_177617_d=_1abe3157c_evalExpr1(_1ab6a2a8a_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*((*(_177541_m))))._field_Expr);
		if ((_177617_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_177541_m))))._field_Comptime) {
		if ((!(_1ab67066d_canComptimeMatch(&(_177617_d))))) {
			_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177541_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1abe4753d_comptime((*(_177617_d))._field_Kind.ptr())) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_177541_m))))._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("comptime-matching requires constant expression", 46), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ab659789_Match> _180213_mc = jule::new_ptr<_1ab659789_Match>(_1ab659789_Match{._field_Expr=_177617_d, ._field_Comptime=(*((*(_177541_m))))._field_Comptime, });;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_180213_mc, &__jule_any_type46)}));
	if (((!((*(_180213_mc))._field_Comptime)) && ((*((*(_177541_m))))._field_Default != nullptr))) {
		(*_180213_mc.alloc)._field_Default=_1ab66ae71_checkDefault(_self_, _180213_mc, (*((*(_177541_m))))._field_Default);
	};
	_1ab66aa75_checkCases(_self_, _177541_m, _180213_mc, _177617_d);
	if ((*_180213_mc.alloc)._field_Comptime) {
		_1ab66b647_processConstMatch(_self_, &(_180213_mc), _177541_m);
	};
}



inline void _1ab66be61_checkMatch(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd38132_MatchCase> _182534_m) {
	if ((*(_182534_m))._field_TypeMatch) {
		_1ab66b900_checkTypeMatch(_self_, &(_182534_m));
		return;;
	};
	_1ab66bba8_checkCommonMatch(_self_, &(_182534_m));
}



inline void _1ab66c219_checkFall(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2d600_FallSt> _183329_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*_self_.alloc)._field_scope.alloc)._field_Stmts.len())) || _1ab66088e_isDeferred(_self_))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183329_f))._field_Token, jule::Str::lit("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1ab65a2b2_Case* _184113_case = ((_1ab65a2b2_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_184113_case))._field_Owner))._field_Comptime) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_183329_f.alloc)._field_Token, jule::Str::lit("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_184113_case))._field_Next == nullptr)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_183329_f.alloc)._field_Token, jule::Str::lit("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(jule::new_ptr<_1ab65a9aa_FallSt>(_1ab65a9aa_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_184113_case))._field_Next)}), &__jule_any_type47)}));
}



inline jule::Ptr<_1ab657b1c_BreakSt> _1ab66c55a_checkBreakWithLabel(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _185639_b) {
	jule::Ptr<_1ab657b1c_BreakSt> _185713_brk = _1ab66c89b_checkPlainBreak(_self_, _185639_b);;
	if ((_185713_brk == nullptr)) {
		return nullptr;;
	};
	(*(_185713_brk))._field_It=0LLU;
	(*(_185713_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ab65b4b1_scopeLabel> _186713_label = _1ab652a90_findLabelParent(&((*((*(_185639_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_186713_label == nullptr)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_185639_b.alloc)._field_Label, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(*(_186713_label))._field_used=true;
	if ((((*(_186713_label))._field_pos + 1LL) >= (*((*((*(_186713_label))._field_scope))._field_scope))._field_Stmts.len())) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::I32 _18809_i = ((*(_186713_label))._field_pos + 1LL);;
	if ((_18809_i >= (*(*(*(_186713_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts.len())) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
	} else {
		jule::Any _188417_st = (*(*(*(_186713_label))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_18809_i];;
		{
			auto &_match_expr{ _188417_st };
			
			if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1b10cc2c3:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1ab6564ab_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1b10cc49e:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1ab6573ad_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1b10cc515:;
				{
					(*(_185713_brk))._field_It=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1ab656962_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1b10cc57b:;
				{
					(*(_185713_brk))._field_Mtch=static_cast<jule::Uintptr>(_188417_st.unsafe_cast_ptr<_1ab659789_Match>());
				}
			}
			else {
				_case_begin_1b10cc438:;
				{
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
				}
			}
			_match_end_1b10cc3d3:;
		};
	};
	if (((*(_185713_brk))._field_It != 0LLU)) {
		if ((!(_1ab66738a_checkValidBreakLabel(_self_, (*(_185713_brk))._field_It)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	if (((*(_185713_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ab66738a_checkValidBreakLabel(_self_, (*(_185713_brk))._field_Mtch)))) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_185639_b.alloc)._field_Label, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(*_185639_b.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
		};
	};
	return _185713_brk;;
}



inline jule::Ptr<_1ab657b1c_BreakSt> _1ab66c89b_checkPlainBreak(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _191435_b) {
	if (_1ab66088e_isDeferred(_self_)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191435_b))._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _192013_scope = _self_;;
	_julec_label_1b10d46e8:;
	{
		
		if ((((((*_192013_scope.alloc)._field_it == 0LLU) && ((*_192013_scope.alloc)._field_cse == 0LLU)) && ((*_192013_scope.alloc)._field_parent != nullptr)) && ((*_192013_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1b10d570a:;
			{
				_192013_scope=(*_192013_scope.alloc)._field_parent;
				goto _julec_label_1b10d46e8;
			}
		}
		else if (((*_192013_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1b10d5793:;
			{
				return jule::new_ptr<_1ab657b1c_BreakSt>(_1ab657b1c_BreakSt{._field_It=(*_192013_scope.alloc)._field_it, });;
			}
		}
		else if (((*_192013_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1b10d5809:;
			{
				return jule::new_ptr<_1ab657b1c_BreakSt>(_1ab657b1c_BreakSt{._field_Mtch=static_cast<jule::Uintptr>((*(((_1ab65a2b2_Case*)((*_192013_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1b10d562d:;
	};
	_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_191435_b.alloc)._field_Token, jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ab66cb54_checkBreak(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd35915_BreakSt> _193630_b) {
	if (((*(_193630_b))._field_Label != nullptr)) {
		jule::Ptr<_1ab657b1c_BreakSt> _193817_brk = _1ab66c55a_checkBreakWithLabel(_self_, _193630_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_193817_brk, &__jule_any_type48)}));
		return;;
	};
	jule::Ptr<_1ab657b1c_BreakSt> _194313_brk = _1ab66c89b_checkPlainBreak(_self_, _193630_b);;
	(*(*_self_.alloc)._field_scope.alloc)._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_194313_brk, &__jule_any_type48)}));
}



inline void _1ab66ce0c_checkRet(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd33a89_RetSt> _194732_r) {
	if (_1ab66088e_isDeferred(_self_)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_194732_r))._field_Token, jule::Str::lit("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ab65ad51_RetSt> _195213_rt = jule::new_ptr<_1ab65ad51_RetSt>(_1ab65ad51_RetSt{._field_Func=(*(_1ab660dcd_getRoot(_self_)))._field_owner, });;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_195213_rt, &__jule_any_type49)}));
	jule::Ptr<_1abe0905a_retTypeChecker> _195713_rtc = jule::new_ptr<_1abe0905a_retTypeChecker>(_1abe0905a_retTypeChecker{._field_sc=_self_, ._field_f=(*(_195213_rt))._field_Func, ._field_errorToken=(*_194732_r.alloc)._field_Token, });;
	jule::Bool _19629_ok = _1abe0a017_check(_195713_rtc.ptr(), &((*_194732_r.alloc)._field_Expr));;
	if ((!(_19629_ok))) {
		return;;
	};
	if (((*_194732_r.alloc)._field_Expr != nullptr)) {
		(*_195213_rt.alloc)._field_Expr=(*_195713_rtc.alloc)._field_model;
	};
}



inline void _1ab66d1b5_checkUseExpr(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd2554d_UseExpr> _197232_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_197232_ue))._field_Token, jule::Str::lit("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ab66088e_isDeferred(_self_)) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_197232_ue.alloc)._field_Token, jule::Str::lit("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_197232_ue.alloc)._field_Token, jule::Str::lit("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1ab66d46d_checkNode(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Any* _198834_node) {
	{
		auto &_match_expr{ (*(_198834_node)) };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b10e63db:;
			{
				_1ab663d37_checkAnonScope(_self_, (*(_198834_node)).cast_ptr<_1abd30866_ScopeTree>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b10e5c59:;
			{
				_1ab66262c_checkVarDecl(_self_, (*(_198834_node)).cast_ptr<_1abd336b0_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b10e60ab:;
			{
				_1ab662b8d_checkTypeAliasDecl(_self_, (*(_198834_node)).cast_ptr<_1abd37362_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b10e6122:;
			{
				_1ab664453_checkExpr(_self_, (*(_198834_node)).cast_ptr<_1abd24b79_Expr>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b10e6188:;
			{
				_1ab664d8d_checkConditional(_self_, (*(_198834_node)).cast_ptr<_1abd36b25_Conditional>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b10e64eb:;
			{
				_1ab666c08_checkIter(_self_, (*(_198834_node)).cast_ptr<_1abd34309_Iter>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b10e6562:;
			{
				_1ab667984_checkCont(_self_, (*(_198834_node)).cast_ptr<_1abd35cde_ContSt>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b10e65c8:;
			{
				_1ab667c3c_checkLabel(_self_, (*(_198834_node)).cast_ptr<_1abd2ce29_LabelSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b10e663e:;
			{
				_1ab667ee5_pushGoto(_self_, (*(_198834_node)).cast_ptr<_1abd2d303_GotoSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b10e66a5:;
			{
				_1ab669bea_checkAssignSt(_self_, (*(_198834_node)).cast_ptr<_1abd2e2e3_AssignSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b10e671b:;
			{
				_1ab66be61_checkMatch(_self_, (*(_198834_node)).cast_ptr<_1abd38132_MatchCase>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b10e6782:;
			{
				_1ab66c219_checkFall(_self_, (*(_198834_node)).cast_ptr<_1abd2d600_FallSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b10e67e8:;
			{
				_1ab66cb54_checkBreak(_self_, (*(_198834_node)).cast_ptr<_1abd35915_BreakSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b10e6870:;
			{
				_1ab66ce0c_checkRet(_self_, (*(_198834_node)).cast_ptr<_1abd33a89_RetSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b10e68e7:;
			{
				_1ab66d1b5_checkUseExpr(_self_, (*(_198834_node)).cast_ptr<_1abd2554d_UseExpr>(&__jule_any_type62));
			}
		}
		else {
			_case_begin_1b10e5e24:;
			{
				jule::outln(jule::Str::lit("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b10e5dbe:;
	};
}



inline void _1ab66d66b_checkResult(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	_1abd30206_Stmt _202613_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _202613_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b1100703:;
			{
				jule::Ptr<_1abd2554d_UseExpr> _202917_ue = _202613_stmt._field_Data.unsafe_cast_ptr<_1abd2554d_UseExpr>();;
				jule::Ptr<_1abe11936_Data> _203017_d = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), (*(_202917_ue))._field_Expr);;
				if ((_203017_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_203017_d, &__jule_any_type23)}));
				jule::Ptr<_1abe0905a_retTypeChecker> _203517_rtc = jule::new_ptr<_1abe0905a_retTypeChecker>(_1abe0905a_retTypeChecker{._field_sc=_self_, ._field_types=_1abd5a880_Types((*_self_.alloc)._field_result.ptr()), ._field_errorToken=(*((*_202917_ue.alloc)._field_Expr))._field_Token, });;
				_1abe0a017_check(_203517_rtc.ptr(), &((*_202917_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b11012c5:;
			{
				jule::Ptr<_1abd24b79_Expr> _204217_expr = _202613_stmt._field_Data.unsafe_cast_ptr<_1abd24b79_Expr>();;
				jule::Ptr<_1abe11936_Data> _204317_d = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)), _204217_expr);;
				if ((_204317_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_204317_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b1106891:;
						{
							jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _204921_m = (*(_204317_d))._field_Model.unsafe_cast_ptr<_1abd5213a_BuiltinErrorCallExprModel>();;
							_1ab66419a_processErrorCall(_self_, &(_204921_m), (*(_204217_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts,jule::Slice<jule::Any>::make({jule::Any(_204317_d, &__jule_any_type23)}));
						}
					}
					else {
						_case_begin_1b1106d9c:;
						{
							return;;
						}
					}
					_match_end_1b1106d47:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type60 || _match_expr.type == &__jule_any_type54 || _match_expr.type == &__jule_any_type61) {
			_case_begin_1b1100989:;
			{
				_1ab66d46d_checkNode(_self_, &(_202613_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b1100923:;
			{
				_1ab66d46d_checkNode(_self_, &(_202613_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b11008bd:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ab66d869_checkTree(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _207113_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_207113_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _207113_n); ((*_self_.alloc)._field_i)++) {
		{
			_1abd30206_Stmt _207917_stmt = (*(*_self_.alloc)._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ab66d46d_checkNode(_self_, &(_207917_stmt._field_Data));
			if (_1ab660608_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1b110aeb1:;
	}
	_iter_end_1b110aeb1:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*_self_.alloc)._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ab66d66b_checkResult(_self_);
	};
}



inline void _1ab66dbcc_checkGoto(_1ab65ca34_scopeChecker* _self_, jule::Ptr<_1ab65ba44_scopeGoto>* _209033_gt, jule::Ptr<_1ab65b4b1_scopeLabel>* _209054_label) {
	jule::Ptr<_1ab65ca34_scopeChecker> _209113_gtsc = (*((*(_209033_gt))))._field_scope;;
	while ((((*(_209113_gtsc))._field_childIndex - 1LL) > (*((*((*(_209054_label))))._field_scope))._field_childIndex)) {
		{
			_209113_gtsc=(*_209113_gtsc.alloc)._field_parent;
		}
	_iter_next_1b110e6ac:;
	}
	_iter_end_1b110e6ac:;;
	jule::I32 _209613_n = 0LL;;
	if (((*_209113_gtsc.alloc)._field_scope == (*(*((*(_209054_label))))._field_scope.alloc)._field_scope)) {
		if (((*((*(_209033_gt))))._field_pos > (*((*(_209054_label))))._field_pos)) {
			return;;
		};
		_209613_n=(*((*(_209033_gt))))._field_pos;
	};
	jule::I32 _210913_i = ((*((*(_209054_label))))._field_pos - 1LL);;
	if ((_209613_n == 0LL)) {
		{
			auto expr = &((*((*(*((*(_209054_label))))._field_scope.alloc)._field_scope))._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1112ccb:;
			if (it != expr_end) {
				jule::I32 _211217_j = it - expr->begin();
				jule::Any _211220_stmt = *it;
				{
					if (_1ab6532cc_stmtIsGotoScope(&(_211220_stmt), &((*_209113_gtsc.alloc)._field_scope))) {
						_209613_n=_211217_j;
						goto _iter_end_1b1112ccb;
					};
				}
				_iter_next_1b1112ccb:;
				++it;
				_211217_j++;
				goto _iter_begin_1b1112ccb;
			}
			_iter_end_1b1112ccb:;
		};
	};
	for (; (_210913_i >= _209613_n); (_210913_i)--) {
		{
			jule::Any _212217_stmt = (*(*(*((*(_209054_label))))._field_scope.alloc)._field_scope.alloc)._field_Stmts[_210913_i];;
			if (_1ab65508c_stmtIsDef(&(_212217_stmt))) {
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_209033_gt))))._field_gt))._field_Token, jule::Str::lit("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*((*(*((*(_209033_gt))))._field_gt.alloc)._field_Label))._field_Kind, &__jule_any_type4)}));
				return;;
			};
		}
	_iter_next_1b1112319:;
	}
	_iter_end_1b1112319:;;
}



inline void _1ab66ddca_checkGotos(_1ab65ca34_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b111354b:;
		if (it != expr_end) {
			jule::Ptr<_1ab65ba44_scopeGoto> _213121_gt = *it;
			{
				jule::Ptr<_1ab65b4b1_scopeLabel> _213217_label = _1ab661e78_findLabelAll(_self_, &((*((*((*(_213121_gt))._field_gt))._field_Label))._field_Kind));;
				if ((_213217_label == nullptr)) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*(*_213121_gt.alloc)._field_gt.alloc)._field_Token, jule::Str::lit("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any((*(*(*_213121_gt.alloc)._field_gt.alloc)._field_Label.alloc)._field_Kind, &__jule_any_type4)}));
					goto _iter_next_1b111354b;
				};
				(*((*_213121_gt.alloc)._field_st))._field_Label=(*(_213217_label))._field_label;
				(*(_213217_label))._field_used=true;
				_1ab66dbcc_checkGoto(_self_, &(_213121_gt), &(_213217_label));
			}
			_iter_next_1b111354b:;
			++it;
			goto _iter_begin_1b111354b;
		}
		_iter_end_1b111354b:;
	};
}



inline void _1ab66e0c8_checkLabels(_1ab65ca34_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11196d9:;
		if (it != expr_end) {
			jule::Ptr<_1ab65b4b1_scopeLabel> _214416_l = *it;
			{
				if ((!((*(_214416_l))._field_used))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_214416_l.alloc)._field_token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*((*_214416_l.alloc)._field_label))._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b11196d9:;
			++it;
			goto _iter_begin_1b11196d9;
		}
		_iter_end_1b11196d9:;
	};
}



inline void _1ab66e2c6_checkVars(_1ab65ca34_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b111b334:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _215216_v = *it;
			{
				if (((((!((*(_215216_v))._field_Used)) && (!((*_215216_v.alloc)._field_Constant))) && (!(_1abd0cc72_IsIgnoreIdent((*_215216_v.alloc)._field_Ident)))) && (!(_1abd0d03b_IsAnonIdent((*_215216_v.alloc)._field_Ident))))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_215216_v.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_215216_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b111b334:;
			++it;
			goto _iter_begin_1b111b334;
		}
		_iter_end_1b111b334:;
	};
}



inline void _1ab66e4c4_checkAliases(_1ab65ca34_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b111d9da:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> _216016_a = *it;
			{
				if ((((!((*(_216016_a))._field_Used)) && (!(_1abd0cc72_IsIgnoreIdent((*_216016_a.alloc)._field_Ident)))) && (!(_1abd0d03b_IsAnonIdent((*_216016_a.alloc)._field_Ident))))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_216016_a.alloc)._field_Token, jule::Str::lit("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any((*_216016_a.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
			_iter_next_1b111d9da:;
			++it;
			goto _iter_begin_1b111d9da;
		}
		_iter_end_1b111d9da:;
	};
}



inline void _1ab66e837_check(jule::Ptr<_1ab65ca34_scopeChecker> _self_, jule::Ptr<_1abd30866_ScopeTree>* _216830_tree, jule::Ptr<_1ab655576_Scope>* _216853_s) {
	(*((*(_216853_s))))._field_Deferred=(*((*(_216830_tree))))._field_Deferred;
	(*((*(_216853_s))))._field_Unsafety=(*((*(_216830_tree))))._field_Unsafety;
	jule::I32 _21729_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_216830_tree));
	(*_self_.alloc)._field_scope=(*(_216853_s));
	_1ab66d869_checkTree(_self_);
	if ((_21729_errors == (*(*_self_.alloc)._field_s.alloc)._field_errors.len())) {
		_1ab66e2c6_checkVars(_self_);
		_1ab66e4c4_checkAliases(_self_);
		if (_1ab660174_isRoot(_self_)) {
			_1ab66ddca_checkGotos(_self_);
			_1ab66e0c8_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab66eabd_newChildChecker(jule::Ptr<_1ab65ca34_scopeChecker> _self_) {
	jule::Ptr<_1ab65ca34_scopeChecker> _219213_base = _1ab652353_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_219213_base))._field_parent=_self_;
	(*_219213_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_219213_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_219213_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _219213_base;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab65ca34_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "captured:" << _Src._field_captured << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1ab671570_checkCdef(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b112676d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1abd566a0_Fn>()))._field_Binded) {
					goto _match_end_1b112699e;
				};
				goto _case_begin_1b1126a04;
			}
		}
		else {
			_case_begin_1b1126a04:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_1629_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b112699e:;
	};
	if (((*((*(_1629_d))))._field_Args.len() > 0LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_1629_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab671828_checkTypedef(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b11296c7:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1abd416ce_Struct>()))._field_Binded) {
					goto _match_end_1b1129908;
				};
				goto _case_begin_1b112995d;
			}
		}
		else {
			_case_begin_1b112995d:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_3232_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b1129908:;
	};
	if (((*((*(_3232_d))))._field_Args.len() > 0LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_3232_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab671ad1_checkNamespace(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _4838_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b112c631:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1abd416ce_Struct>()))._field_Binded))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b112c92d:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1abd566a0_Fn>()))._field_Binded))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b112c994:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1abda8d2e_Var>()))._field_Binded))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1b112c8b7:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b112c862:;
	};
	if (((*((*(_4838_d))))._field_Args.len() == 0LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4838_d))))._field_Args.len() > 1LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_4838_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_4838_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1abd0a38a_Token> _739_arg = (*((*(_4838_d))))._field_Args[0LL];;
	if (((*(_739_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_739_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab69a5dd_pushErr((*(_self_))._field_s, _739_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4838_d))))._field_Args[0LL]))._field_Kind=(*_739_arg.alloc)._field_Kind.slice(1LL, ((*_739_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b113840b:;
			{
				if ((_1abe3a2cd_findDirective(&((*((*(_self_))._field_d))), jule::Str::lit("typedef", 7)) == nullptr)) {
					jule::Ptr<_1abd1ec62_Directive> _9021_typedef = jule::new_ptr<_1abd1ec62_Directive>(_1abd1ec62_Directive{._field_Tag=(*((*(_4838_d))))._field_Tag, });;
					(*((*(_9021_typedef))._field_Tag))._field_Kind=jule::Str::lit("typedef", 7);
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),jule::Slice<jule::Ptr<_1abd1ec62_Directive>>::make({_9021_typedef}));
				};
			}
		}
		_match_end_1b1138395:;
	};
}



inline void _1ab671d89_checkDeprecated(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _9939_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b113a5a6:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1abd416ce_Struct>()))._field_Binded) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b113a83c:;
			{
				jule::Ptr<_1abd566a0_Fn> _10617_f = (*(_self_))._field_o.unsafe_cast_ptr<_1abd566a0_Fn>();;
				if ((((*(_10617_f))._field_Binded || _1abd57140_IsEntryPoint(_10617_f)) || _1abd573c6_IsInit(_10617_f))) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b113a8a3:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1abda8d2e_Var>()))._field_Binded) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
				};
			}
		}
		else {
			_case_begin_1b113a7c6:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b113a771:;
	};
	if (((*((*(_9939_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_9939_d))))._field_Args.len() > 1LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_9939_d))))._field_Args[1LL], jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_9939_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
	};
	jule::Ptr<_1abd0a38a_Token> _1259_arg = (*((*(_9939_d))))._field_Args[0LL];;
	if (((*(_1259_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ab69a5dd_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1259_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ab69a5dd_pushErr((*(_self_))._field_s, _1259_arg, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_9939_d))))._field_Args[0LL]))._field_Kind=(*_1259_arg.alloc)._field_Kind.slice(1LL, ((*_1259_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ab672142_checkTest(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _13929_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b1141e2b:;
			{
				jule::Ptr<_1abd566a0_Fn> _14213_f = (*(_self_))._field_o.unsafe_cast_ptr<_1abd566a0_Fn>();;
				if ((((!((*(_14213_f))._field_Binded)) && (!(_1abd573c6_IsInit(_14213_f)))) && (!(_1abd57140_IsEntryPoint(_14213_f))))) {
					goto _match_end_1b1146914;
				};
				if (_1abd56da9_IsMethod(_14213_f)) {
					_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*_14213_f.alloc)._field_Token, jule::Str::lit("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b1146914;
				};
				goto _case_begin_1b1146969;
			}
		}
		else {
			_case_begin_1b1146969:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_13929_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b1146914:;
	};
	if (((*((*(_13929_d))))._field_Args.len() > 0LL)) {
		_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_13929_d))))._field_Args[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab6723ea_checkDirective(_1ab671163_directiveChecker* _self_, jule::Ptr<_1abd1ec62_Directive>* _16038_d) {
	{
		auto &_match_expr{ (*((*((*(_16038_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == jule::Str::lit("cdef", 4)) {
			_case_begin_1b114b5d9:;
			{
				_1ab671570_checkCdef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("typedef", 7)) {
			_case_begin_1b114b650:;
			{
				_1ab671828_checkTypedef(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("namespace", 9)) {
			_case_begin_1b114b6b6:;
			{
				_1ab671ad1_checkNamespace(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("deprecated", 10)) {
			_case_begin_1b114b72c:;
			{
				_1ab671d89_checkDeprecated(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("test", 4)) {
			_case_begin_1b114b793:;
			{
				_1ab672142_checkTest(_self_, _16038_d);
			}
		}
		else if (_match_expr == jule::Str::lit("build", 5) || _match_expr == jule::Str::lit("pass", 4)) {
			_case_begin_1b114b809:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1b114b023:;
			{
				_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*((*(_16038_d))))._field_Tag, jule::Str::lit("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*((*((*(_16038_d))))._field_Tag))._field_Kind, &__jule_any_type4)}));
			}
		}
		_match_end_1b114b51d:;
	};
}



inline void _1ab6725e8_check(_1ab671163_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11505aa:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _18121_d = *it;
			{
				_1ab6723ea_checkDirective(_self_, &(_18121_d));
			}
			_iter_next_1b11505aa:;
			++it;
			goto _iter_begin_1b11505aa;
		}
		_iter_end_1b11505aa:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ab671163_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ab677ae8_SelectPackage(_1ab67760e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab677ee4_FindVar(_1ab67760e_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1ab674ae5_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ab6783e0_FindTypeAlias(_1ab67760e_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1ab675068_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1abd416ce_Struct> _1ab6787db_FindStruct(_1ab67760e_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1ab675497_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1abd566a0_Fn> _1ab678bd7_FindFn(_1ab67760e_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1ab67594d_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1abd69a59_Trait> _1ab679028_FindTrait(_1ab67760e_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1ab675c8e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1abd6c265_Enum> _1ab679369_FindEnum(_1ab67760e_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1ab676113_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1ab6796aa_FindTypeEnum(_1ab67760e_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1ab679b50_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1ab676487_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25831_ident));;
}



inline jule::Bool _1ab679b50_isLookupable(_1ab67760e_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1ab679e91_existIdent(_self_, jule::Str::lit("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1ab679e91_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1ab679e91_existIdent(_1ab67760e_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11655c0:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_28816_sident = it;
			{
				if (((*((*(_28816_sident))))._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1b11655c0:;
			++it;
			goto _iter_begin_1b11655c0;
		}
		_iter_end_1b11655c0:;
	};
	return false;;
}



inline jule::Bool _1ab67a227_isAccessibleViaSelection(_1ab67760e_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1ab679e91_existIdent(_self_, jule::Str::lit("self", 4)));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab67760e_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ab67a9ca_SelectPackage(_1ab67a535_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab67adc6_FindVar(_1ab67a535_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1ab674ae5_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ab67b2c2_FindTypeAlias(_1ab67a535_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1ab675068_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1abd416ce_Struct> _1ab67b6bd_FindStruct(_1ab67a535_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1ab675497_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1abd566a0_Fn> _1ab67bab9_FindFn(_1ab67a535_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1ab67594d_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1abd69a59_Trait> _1ab67be0a_FindTrait(_1ab67a535_Package* _self_, jule::Str _33828_ident) {
	return _1ab675c8e_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1abd6c265_Enum> _1ab67c24b_FindEnum(_1ab67a535_Package* _self_, jule::Str _34427_ident) {
	return _1ab676113_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1ab67c58c_FindTypeEnum(_1ab67a535_Package* _self_, jule::Str _35031_ident) {
	return _1ab676487_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab67a535_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abd81400_comptimeTypeInfo> _1ab6972dd_pushComptimeTypeInfo(_1ab696d9d_commonSemaMeta* _self_, jule::Ptr<_1abe42d30_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b119706e:;
		if (it != expr_end) {
			jule::Ptr<_1abd81400_comptimeTypeInfo> _21521_t2 = *it;
			{
				if ((((*((*(_21521_t2))._field_base))._field_BindIdent == (*((*(_21444_t))))._field_BindIdent) && _1abe43539_Equal((*_21521_t2.alloc)._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1b119706e:;
			++it;
			goto _iter_begin_1b119706e;
		}
		_iter_end_1b119706e:;
	};
	jule::Ptr<_1abd81400_comptimeTypeInfo> _22013_t1 = jule::new_ptr<_1abd81400_comptimeTypeInfo>(_1abd81400_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1abd81400_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22013_t1); };
	return _22013_t1;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab696d9d_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ab697e48_SelectPackage(_1ab6979a3_Sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _24332_selector) {
	return _1abe0baa7_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab698344_FindVar(_1ab6979a3_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1abda8d2e_Var> _25513_v = _1ab674ae5_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25513_v != nullptr)) {
		return _25513_v;;
	};
	if ((!(_1ab694a6b_IsPub(_25326_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b119b02e:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1b119b02e;
				};
				_25513_v=_1ab677ee4_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25513_v != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_25513_v.alloc)._field_Public, (*_25513_v.alloc)._field_Token))) {
					return _25513_v;;
				};
			}
			_iter_next_1b119b02e:;
			++it;
			goto _iter_begin_1b119b02e;
		}
		_iter_end_1b119b02e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ab698740_FindTypeAlias(_1ab6979a3_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1abe4203d_TypeAlias> _28713_ta = _1ab675068_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28713_ta != nullptr)) {
		return _28713_ta;;
	};
	if ((!(_1ab694a6b_IsPub(_28532_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b119de33:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1b119de33;
				};
				_28713_ta=_1ab6783e0_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28713_ta != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_28713_ta.alloc)._field_Public, (*_28713_ta.alloc)._field_Token))) {
					return _28713_ta;;
				};
			}
			_iter_next_1b119de33:;
			++it;
			goto _iter_begin_1b119de33;
		}
		_iter_end_1b119de33:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd416ce_Struct> _1ab698b3b_FindStruct(_1ab6979a3_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1abd416ce_Struct> _31913_s = _1ab675497_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31913_s != nullptr)) {
		return _31913_s;;
	};
	if ((!(_1ab694a6b_IsPub(_31729_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11a1d37:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1b11a1d37;
				};
				_31913_s=_1ab6787db_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31913_s != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_31913_s.alloc)._field_Public, (*_31913_s.alloc)._field_Token))) {
					return _31913_s;;
				};
			}
			_iter_next_1b11a1d37:;
			++it;
			goto _iter_begin_1b11a1d37;
		}
		_iter_end_1b11a1d37:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd566a0_Fn> _1ab699037_FindFn(_1ab6979a3_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1abd566a0_Fn> _35013_f = _1ab67594d_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35013_f != nullptr)) {
		return _35013_f;;
	};
	if ((!(_1ab694a6b_IsPub(_34825_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11a4c3b:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1b11a4c3b;
				};
				_35013_f=_1ab678bd7_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35013_f != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_35013_f.alloc)._field_Public, (*_35013_f.alloc)._field_Token))) {
					return _35013_f;;
				};
			}
			_iter_next_1b11a4c3b:;
			++it;
			goto _iter_begin_1b11a4c3b;
		}
		_iter_end_1b11a4c3b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd69a59_Trait> _1ab699378_FindTrait(_1ab6979a3_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1abd69a59_Trait> _38213_t = _1ab675c8e_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38213_t != nullptr)) {
		return _38213_t;;
	};
	if ((!(_1ab694a6b_IsPub(_38028_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11a78ed:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1b11a78ed;
				};
				_38213_t=_1ab679028_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38213_t != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_38213_t.alloc)._field_Public, (*_38213_t.alloc)._field_Token))) {
					return _38213_t;;
				};
			}
			_iter_next_1b11a78ed:;
			++it;
			goto _iter_begin_1b11a78ed;
		}
		_iter_end_1b11a78ed:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6c265_Enum> _1ab6996b9_FindEnum(_1ab6979a3_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1abd6c265_Enum> _41413_e = _1ab676113_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41413_e != nullptr)) {
		return _41413_e;;
	};
	if ((!(_1ab694a6b_IsPub(_41227_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11aa5b0:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1b11aa5b0;
				};
				_41413_e=_1ab679369_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41413_e != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_41413_e.alloc)._field_Public, (*_41413_e.alloc)._field_Token))) {
					return _41413_e;;
				};
			}
			_iter_next_1b11aa5b0:;
			++it;
			goto _iter_begin_1b11aa5b0;
		}
		_iter_end_1b11aa5b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1ab699a0a_FindTypeEnum(_1ab6979a3_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1abd6d970_TypeEnum> _44613_e = _1ab676487_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44613_e != nullptr)) {
		return _44613_e;;
	};
	if ((!(_1ab694a6b_IsPub(_44431_ident)))) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11ad272:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1ab69596d_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1b11ad272;
				};
				_44613_e=_1ab6796aa_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44613_e != nullptr) && _1ab69ad4c_isAccessibleDefine(_self_, (*_44613_e.alloc)._field_Public, (*_44613_e.alloc)._field_Token))) {
					return _44613_e;;
				};
			}
			_iter_next_1b11ad272:;
			++it;
			goto _iter_begin_1b11ad272;
		}
		_iter_end_1b11ad272:;
	};
	return nullptr;;
}



inline jule::Bool _1ab699e17_isFlag(_1ab6979a3_Sema* _self_, jule::I32 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1ab69a1c0_setCurrentFile(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe0b5bd_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1ab69a5dd_pushErr(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab6955e9_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1ab69a951_pushSuggestion(_1ab6979a3_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1ab696ba0_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1ab69ad4c_isAccessibleDefine(_1ab6979a3_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1abd0a38a_Token> _48747_token) {
	return ((_48733_public || ((*(_48747_token))._field_File == nullptr)) || (_1abd112c5_Dir((*((*(_self_))._field_file))._field_File.ptr()) == _1abd112c5_Dir((*_48747_token.alloc)._field_File.ptr())));;
}



inline jule::Bool _1ab69b303_isDuplicatedIdent(_1ab6979a3_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11b4971:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> *_49516_f = it;
			{
				if (_1abe0eadd_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(*(_49516_f)).alloc)._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b11b5972:;
					if (it != expr_end) {
						jule::Ptr<_1ab67760e_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*((*(_50020_imp))))._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b11b6368:;
								if (it != expr_end) {
									jule::Ptr<_1abd0a38a_Token> *_50124_selected = it;
									{
										if (((*((*(_50124_selected))))._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1b11b6368:;
									++it;
									goto _iter_begin_1b11b6368;
								}
								_iter_end_1b11b6368:;
							};
						}
						_iter_next_1b11b5972:;
						++it;
						goto _iter_begin_1b11b5972;
					}
					_iter_end_1b11b5972:;
				};
			}
			_iter_next_1b11b4971:;
			++it;
			goto _iter_begin_1b11b4971;
		}
		_iter_end_1b11b4971:;
	};
	return false;;
}



inline void _1ab69b666_checkDirectives(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _51140_d, jule::Any _51166_o) {
	_1ab671163_directiveChecker _51213_dc = _1ab671163_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1abd1ec62_Directive>>>)(_51140_d)), ._field_o=_51166_o};;
	_1ab6725e8_check(&_51213_dc);
}



inline jule::Bool _1ab69bb1c_checkGenericQuantity(_1ab6979a3_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1abd0a38a_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1b11b8854:;
			{
				_1ab69a5dd_pushErr(_self_, _52066_token, jule::Str::lit("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1b11b88cb:;
			{
				_1ab69a5dd_pushErr(_self_, _52066_token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1b11b8953:;
			{
				_1ab69a5dd_pushErr(_self_, _52066_token, jule::Str::lit("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1b11b89ca:;
			{
				_1ab69a5dd_pushErr(_self_, _52066_token, jule::Str::lit("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b11b8788:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b11b86bc:;
	};
}



inline jule::Bool _1ab69c018_isDuplicatedImportSelection(_1ab6979a3_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11bb6c0:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1b11bb6c0;
				};
				if (_1ab679e91_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1b11bb6c0:;
			++it;
			goto _iter_begin_1b11bb6c0;
		}
		_iter_end_1b11bb6c0:;
	};
	return false;;
}



inline jule::Any _1ab69c414_getImportDef(_1ab6979a3_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1ab67760e_ImportInfo>* _55245_imp) {
	if ((_1ac02eaa9_findPackageBuiltinDef(&((*((*(_55245_imp))))._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type3);;
	};
	{
		auto expr = &((*((*((*(_55245_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11bd826:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55917_def = _1abe0e637_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55917_def != nullptr)) {
					return _55917_def;;
				};
			}
			_iter_next_1b11bd826:;
			++it;
			goto _iter_begin_1b11bd826;
		}
		_iter_end_1b11bd826:;
	};
	return nullptr;;
}



inline jule::Bool _1b11c4d7c_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abda8d2e_Var>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11c914a_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abe4203d_TypeAlias>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11cd3c4_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd416ce_Struct>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11d2939_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd69a59_Trait>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11d6bd5_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd6c265_Enum>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11dae81_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd6d970_TypeEnum>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b11e020a_checkImportSelection(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd0a38a_Token>* _56743_ident, jule::Ptr<_1abd566a0_Fn>* _56759_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine(_self_, (*((*(_56759_s))))._field_Public, (*((*(_56759_s))))._field_Token)))) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*((*(_56743_ident))))._field_Kind, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1ab6769c6_defByIdentPackage(&((*(_self_))._field_files), &((*((*(_56759_s))))._field_Ident), false) != nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(_56743_ident)), jule::Str::lit("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*((*(_56759_s))))._field_Ident, &__jule_any_type4)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab69cb51_checkImportSelectedSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_58153_imp))))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11c0460:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> _58316_ident = *it;
			{
				if ((*(_58316_ident))._field_Kind.equal("self", 4)) {
					goto _iter_next_1b11c0460;
				};
				if (_1ab69c018_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>((*(_58153_imp))), &((*_58316_ident.alloc)._field_Kind))) {
					_1ab69a5dd_pushErr(_self_, _58316_ident, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
					_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b11c0460;
				};
				jule::Any _59517_def = _1ab69c414_getImportDef(_self_, &((*_58316_ident.alloc)._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59517_def };
					
					if (_match_expr.type == &__jule_any_type3) {
						_case_begin_1b11c152c:;
						{
							goto _iter_next_1b11c0460;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b11c2e46:;
						{
							jule::Ptr<_1abda8d2e_Var> _60121_v = _59517_def.unsafe_cast_ptr<_1abda8d2e_Var>();;
							__jule_func_result=(_1b11c4d7c_checkImportSelection(_self_, &(_58316_ident), &(_60121_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b11c2eac:;
						{
							jule::Ptr<_1abe4203d_TypeAlias> _60421_ta = _59517_def.unsafe_cast_ptr<_1abe4203d_TypeAlias>();;
							__jule_func_result=(_1b11c914a_checkImportSelection(_self_, &(_58316_ident), &(_60421_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1b11c3023:;
						{
							jule::Ptr<_1abd416ce_Struct> _60721_s = _59517_def.unsafe_cast_ptr<_1abd416ce_Struct>();;
							__jule_func_result=(_1b11cd3c4_checkImportSelection(_self_, &(_58316_ident), &(_60721_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b11c3089:;
						{
							jule::Ptr<_1abd69a59_Trait> _61021_t = _59517_def.unsafe_cast_ptr<_1abd69a59_Trait>();;
							__jule_func_result=(_1b11d2939_checkImportSelection(_self_, &(_58316_ident), &(_61021_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b11c3100:;
						{
							jule::Ptr<_1abd6c265_Enum> _61321_e = _59517_def.unsafe_cast_ptr<_1abd6c265_Enum>();;
							__jule_func_result=(_1b11d6bd5_checkImportSelection(_self_, &(_58316_ident), &(_61321_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b11c3c16:;
						{
							jule::Ptr<_1abd6d970_TypeEnum> _61621_e = _59517_def.unsafe_cast_ptr<_1abd6d970_TypeEnum>();;
							__jule_func_result=(_1b11dae81_checkImportSelection(_self_, &(_58316_ident), &(_61621_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type63) {
						_case_begin_1b11c3c7c:;
						{
							jule::Ptr<_1abd566a0_Fn> _61921_f = _59517_def.unsafe_cast_ptr<_1abd566a0_Fn>();;
							__jule_func_result=(_1b11e020a_checkImportSelection(_self_, &(_58316_ident), &(_61921_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b11c2d36:;
						{
							_1ab69a5dd_pushErr(_self_, _58316_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*_58316_ident.alloc)._field_Kind, &__jule_any_type4)}));
							__jule_func_result=false;
							goto _iter_next_1b11c0460;
						}
					}
					_match_end_1b11c29a1:;
				};
			}
			_iter_next_1b11c0460:;
			++it;
			goto _iter_begin_1b11c0460;
		}
		_iter_end_1b11c0460:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b11e49c3_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae2ec65a:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11c4d7c_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1ae2ec65a:;
			++it;
			goto _iter_begin_1ae2ec65a;
		}
		_iter_end_1ae2ec65a:;
	};
	return _63113_ok;;
}

inline jule::Bool _1ae32d092_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee41952:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11c914a_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee41952:;
			++it;
			goto _iter_begin_1aee41952;
		}
		_iter_end_1aee41952:;
	};
	return _63113_ok;;
}

inline jule::Bool _1aee40665_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee44108:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11cd3c4_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee44108:;
			++it;
			goto _iter_begin_1aee44108;
		}
		_iter_end_1aee44108:;
	};
	return _63113_ok;;
}

inline jule::Bool _1aee42656_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee46814:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11e020a_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee46814:;
			++it;
			goto _iter_begin_1aee46814;
		}
		_iter_end_1aee46814:;
	};
	return _63113_ok;;
}

inline jule::Bool _1aee44d40_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd69a59_Trait>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee48ea9:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11d2939_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee48ea9:;
			++it;
			goto _iter_begin_1aee48ea9;
		}
		_iter_end_1aee48ea9:;
	};
	return _63113_ok;;
}

inline jule::Bool _1aee483d7_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6c265_Enum>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee4b64e:;
		if (it != expr_end) {
			jule::Ptr<_1abd6c265_Enum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11d6bd5_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee4b64e:;
			++it;
			goto _iter_begin_1aee4b64e;
		}
		_iter_end_1aee4b64e:;
	};
	return _63113_ok;;
}

inline jule::Bool _1aee4aa7c_checkImportsAllSelectionsFromCollection(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6d970_TypeEnum>>* _63062_s, jule::Ptr<_1abd0a38a_Token>* _63071_et) {
	jule::Bool _63113_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee4dd7c:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d970_TypeEnum> *_63216_d = it;
			{
				if ((*((*(_63216_d))))._field_Public) {
					_63113_ok=(_1b11dae81_checkImportSelection(_self_, _63071_et, _63216_d) && _63113_ok);
				};
			}
			_iter_next_1aee4dd7c:;
			++it;
			goto _iter_begin_1aee4dd7c;
		}
		_iter_end_1aee4dd7c:;
	};
	return _63113_ok;;
}



inline jule::Bool _1ab69d38d_checkImportAllSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*((*(_64044_imp))))._field_Package))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11c07e5:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1b11e49c3_checkImportsAllSelectionsFromCollection(_self_, &((*((*(_64216_file))))._field_Vars), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1ae32d092_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeAliases), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aee40665_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Structs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aee42656_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Funcs), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aee44d40_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Traits), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aee483d7_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_Enums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
				__jule_func_result=(_1aee4aa7c_checkImportsAllSelectionsFromCollection(_self_, &((*(*(_64216_file)).alloc)._field_TypeEnums), &((*((*(_64044_imp))))._field_Token)) && __jule_func_result);
			}
			_iter_next_1b11c07e5:;
			++it;
			goto _iter_begin_1b11c07e5;
		}
		_iter_end_1b11c07e5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab69d6ce_checkImportSelections(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_65445_imp))))._field_Selected.len() > 0LL)) {
		__jule_func_result = _1ab69cb51_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*((*(_65445_imp))))._field_ImportAll) {
		__jule_func_result = _1ab69d38d_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab69da20_isUseAliasDuplication(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _66341_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee516a9:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _66421_imp2 = *it;
			{
				if ((_66421_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1aee516a9;
				};
				if (((*(_66421_imp2))._field_Alias == (*((*(_66341_imp))))._field_Alias)) {
					return true;;
				};
				if ((((*_66421_imp2.alloc)._field_Ident == (*_66421_imp2.alloc)._field_LinkPath) && ((*_66421_imp2.alloc)._field_Ident == (*((*(_66341_imp))))._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1aee516a9:;
			++it;
			goto _iter_begin_1aee516a9;
		}
		_iter_end_1aee516a9:;
	};
	return false;;
}



inline jule::Bool _1ab69dd61_checkImport(_1ab6979a3_Sema* _self_, jule::Ptr<_1ab67760e_ImportInfo>* _67935_imp) {
	if (((*((*(_67935_imp))))._field_Binded || ((*((*((*(_67935_imp))))._field_Package))._field_Files.len() == 0LL))) {
		return true;;
	};
	if ((*((*(_67935_imp))))._field_LinkPath.equal("std::unsafe", 11)) {
		if ((((*((*(_67935_imp))))._field_ImportAll || !((*((*(_67935_imp))))._field_Alias).empty()) || ((*((*(_67935_imp))))._field_Selected.len() > 0LL))) {
			_1ab69a5dd_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("expected plain use declaration for this package like: @", 55), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("use std::unsafe", 15), &__jule_any_type4)}));
			return false;;
		};
	};
	if (((*((*(_67935_imp))))._field_Alias.len() != 0LL)) {
		if (_1abd0cc72_IsIgnoreIdent((*((*(_67935_imp))))._field_Alias)) {
			_1ab69a5dd_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		} else if (_1ab69da20_isUseAliasDuplication(_self_, _67935_imp)) {
			_1ab69a5dd_pushErr(_self_, (*((*(_67935_imp))))._field_Token, jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*((*(_67935_imp))))._field_Alias, &__jule_any_type4)}));
			_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
		};
	};
	if ((!((*((*(_67935_imp))))._field_Duplicate))) {
		jule::Ptr<_1ab6979a3_Sema> _70217_sema = jule::new_ptr<_1ab6979a3_Sema>(_1ab6979a3_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1ab6b7242_check(_70217_sema, &((*(*((*(_67935_imp))))._field_Package.alloc)._field_Files));
		if (((*_70217_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_70217_sema.alloc)._field_errors);;
			(*_70217_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return _1ab69d6ce_checkImportSelections(_self_, _67935_imp);;
}



inline void _1ab69e05e_checkImports(_1ab6979a3_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee5abd0:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _71721_file = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_, _71721_file);
				{
					auto expr = &((*(_71721_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1aee5b890:;
					if (it != expr_end) {
						jule::Ptr<_1ab67760e_ImportInfo> _71925_imp = *it;
						{
							jule::Bool _72017_ok = _1ab69dd61_checkImport(_self_, &(_71925_imp));;
							if ((!(_72017_ok))) {
								return;;
							};
						}
						_iter_next_1aee5b890:;
						++it;
						goto _iter_begin_1aee5b890;
					}
					_iter_end_1aee5b890:;
				};
			}
			_iter_next_1aee5abd0:;
			++it;
			goto _iter_begin_1aee5abd0;
		}
		_iter_end_1aee5abd0:;
	};
}



inline void _1ab69e25c_implFileImpls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee5bd02:;
		if (it != expr_end) {
			jule::Ptr<_1ab650120_Impl> _73021_imp = *it;
			{
				_1ab6ad7ee_implImpl(_self_, &(_73021_imp));
			}
			_iter_next_1aee5bd02:;
			++it;
			goto _iter_begin_1aee5bd02;
		}
		_iter_end_1aee5bd02:;
	};
}



inline void _1ab69e45a_implImpls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee5d6c7:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _73621_file = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _73621_file);
				_1ab69e25c_implFileImpls(_self_);
			}
			_iter_next_1aee5d6c7:;
			++it;
			goto _iter_begin_1aee5d6c7;
		}
		_iter_end_1aee5d6c7:;
	};
}



inline void _1ab69e658_checkEnums(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee5e772:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _74321_file = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _74321_file);
				{
					
					if ((!(_1ab6a9c3a_checkEnumDecls(_self_)))) {
						_case_begin_1aee5edb0:;
					}
					else if ((!(_1ab6a9ec1_checkTypeEnumDecls(_self_)))) {
						_case_begin_1aee60476:;
					}
					_match_end_1aee603aa:;
				};
			}
			_iter_next_1aee5e772:;
			++it;
			goto _iter_begin_1aee5e772;
		}
		_iter_end_1aee5e772:;
	};
}



inline void _1ab69e856_checkFileInherits(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee612ce:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _75321_t = *it;
			{
				jule::Bool _75413_ok = _1ab6ab885__checkTraitDeclInherits(_self_, &(_75321_t));;
				if ((!(_75413_ok))) {
					return;;
				};
			}
			_iter_next_1aee612ce:;
			++it;
			goto _iter_begin_1aee612ce;
		}
		_iter_end_1aee612ce:;
	};
}



inline void _1ab69ea54_checkInherits(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee62621:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _76221_file = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _76221_file);
				_1ab69e856_checkFileInherits(_self_);
			}
			_iter_next_1aee62621:;
			++it;
			goto _iter_begin_1aee62621;
		}
		_iter_end_1aee62621:;
	};
}



inline _1abe54bdd_typeChecker _1ab6a000a_typeChecker(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _76835_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _76850_generics, jule::Ptr<_1abe53bed_referencer> _76913_referencer) {
	_1abe54bdd_typeChecker _77013_tc = _1abe54bdd_typeChecker{._field_s=_self_, ._field_rootLookup=_76835_l, ._field_lookup=_76835_l, ._field_referencer=_76913_referencer, ._field_useGenerics=_76850_generics, };;
	{
		auto &_match_expr{ _76835_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1aee6448b:;
			{
				jule::Ptr<_1ab65ca34_scopeChecker> _77917_hard = _1ab661164_getHardRoot(_76835_l.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
				_77013_tc._field_refers=(*((*(_77917_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1aee63e2a:;
	};
	if (((_76913_referencer != nullptr) && ((*_76913_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_76913_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type65) {
				_case_begin_1aee65d2d:;
				{
					_77013_tc._field_ownerAlias=(*(_76913_referencer))._field_owner.unsafe_cast_ptr<_1abe4203d_TypeAlias>();
				}
			}
			_match_end_1aee65cc8:;
		};
	};
	return _77013_tc;;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a056b_buildTypeWithRefers(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _79544_t, jule::Trait _79567_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _79613_generics, jule::Ptr<_1abe53bed_referencer> _79641_referencer) {
	return ({ auto _wrap_copy = _1ab6a000a_typeChecker(_self_, _79567_l, _79613_generics, _79641_referencer); _1abe5c388_checkDecl(&_wrap_copy, _79544_t); });;
}



inline jule::Bool _1ab6a0acc_checkTypeWithRefers(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a002_TypeSymbol>* _80244_t, jule::Trait _80264_l, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _80313_generics, jule::Ptr<_1abe53bed_referencer> _80341_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1abe4a376_checked((*(_80244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_80244_t))))._field_Kind=_1ab6a056b_buildTypeWithRefers(_self_, &((*((*(_80244_t))))._field_Decl), _80264_l, _80313_generics, _80341_referencer);
	__jule_func_result = _1abe4a376_checked((*(_80244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ab64ccbb_constraintChecker> _1ab6a0d63_constraintChecker(jule::Ptr<_1ab6979a3_Sema> _self_) {
	return jule::new_ptr<_1ab64ccbb_constraintChecker>(_1ab64ccbb_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1ab6a125e_checkType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a002_TypeSymbol>* _81734_t, jule::Trait _81754_l) {
	return _1ab6a0acc_checkTypeWithRefers(_self_, _81734_t, _81754_l, nullptr, nullptr);;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a1715_buildTypeWithGenerics(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _82346_t, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _82413_generics, jule::Ptr<_1abd5c860_ReferenceStack> _82441_refers) {
	jule::Ptr<_1abe54bdd_typeChecker> _82513_tc = jule::new_ptr<_1abe54bdd_typeChecker>(_1abe54bdd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_refers=_82441_refers, ._field_useGenerics=_82413_generics, });;
	return _1abe5c388_checkDecl(_82513_tc.ptr(), _82346_t);;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a1d97_selectType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _84135_t) {
	jule::Ptr<_1abe54bdd_typeChecker> _84213_tc = jule::new_ptr<_1abe54bdd_typeChecker>(_1abe54bdd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_selection=true, });;
	return _1abe5c388_checkDecl(_84213_tc.ptr(), _84135_t);;
}



inline jule::Ptr<_1abe1365d_Eval> _1ab6a234d_evalpd(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _85330_l, jule::Ptr<_1abe42d30_TypeKind> _85345_p, jule::Ptr<_1abda8d2e_Var> _85363_owner) {
	jule::Ptr<_1abe1365d_Eval> _85413_e = jule::new_ptr<_1abe1365d_Eval>(_1abe1365d_Eval{._field_s=_self_, ._field_lookup=_85330_l, ._field_owner=_85363_owner, });;
	{
		auto &_match_expr{ _85330_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1aee70145:;
			{
				(*(_85413_e))._field_unsafety=_1ab65eddd_isUnsafe(_85330_l.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));
			}
		}
		_match_end_1aee6ee03:;
	};
	(*_85413_e.alloc)._field_prefix=_85345_p;
	return _85413_e;;
}



inline jule::Ptr<_1abe1365d_Eval> _1ab6a2749_evalp(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _86829_l, jule::Ptr<_1abe42d30_TypeKind> _86844_p) {
	return _1ab6a234d_evalpd(_self_, _86829_l, _86844_p, nullptr);;
}



inline jule::Ptr<_1abe1365d_Eval> _1ab6a2a8a_eval(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Trait _87328_l) {
	return _1ab6a2749_evalp(_self_, _87328_l, nullptr);;
}



inline jule::Bool _1ab6a30eb_checkAssignType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _87735_destIsRef, jule::Ptr<_1abe42d30_TypeKind>* _87757_dest, jule::Ptr<_1abe11936_Data>* _87814_d, jule::Ptr<_1abd0a38a_Token> _87828_errorToken) {
	if ((*((*(_87814_d))))._field_Decl) {
		_1ab69a5dd_pushErr(_self_.ptr(), _87828_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_87735_destIsRef) {
		if ((!(_1abe43539_Equal((*(_87757_dest)), (*((*(_87814_d))))._field_Kind)))) {
			_1ab69a5dd_pushErr(_self_, _87828_errorToken, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_87757_dest)).ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_87814_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			return false;;
		};
	} else {
		jule::Ptr<_1abdea39d_assignTypeChecker> _88917_atc = jule::new_ptr<_1abdea39d_assignTypeChecker>(_1abdea39d_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_87757_dest)), ._field_d=(*(_87814_d)), ._field_errorToken=_87828_errorToken});;
		jule::Bool _89513_ok = _1abdeb36b_check(_88917_atc.ptr());;
		if ((!(_89513_ok))) {
			return false;;
		};
	};
	if (((!(_1abe1233d_IsConst((*(_87814_d)).ptr()))) || (_1abe45481_Prim((*(_87757_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _90513_kind = (*(_1abe45481_Prim((*(_87757_dest)).ptr())))._field_Kind;;
	{
		
		if (_1b9aab282_IsSigInt(_90513_kind)) {
			_case_begin_1aee77999:;
			{
				_1b9ab0440_SetI64((*((*(_87814_d))))._field_Constant.ptr(), _1b9aaeb6a_AsI64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b9aab590_IsUnsigInt(_90513_kind)) {
			_case_begin_1aee77a43:;
			{
				_1b9ab06e8_SetU64((*((*(_87814_d))))._field_Constant.ptr(), _1b9aaee01_AsU64((*((*(_87814_d))))._field_Constant));
			}
		}
		else if (_1b9aabb9a_IsFloat(_90513_kind)) {
			_case_begin_1aee77aa9:;
			{
				_1b9ab1012_SetF64((*((*(_87814_d))))._field_Constant.ptr(), _1b9ab0187_AsF64((*((*(_87814_d))))._field_Constant));
			}
		}
		_match_end_1aee778cd:;
	};
	return true;;
}



inline jule::Bool _1ab6a35a2__checkTypeCompatibility(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _91948_dest, jule::Ptr<_1abe42d30_TypeKind>* _91970_src, jule::Ptr<_1abd0a38a_Token> _92013_errorToken) {
	if (((*(_91970_src)) == nullptr)) {
		return false;;
	};
	if ((_1abe472a7_Tup((*(_91970_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1abde85ee_typeCompatibilityChecker _92813_tcc = _1abde85ee_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91948_dest)), ._field_src=(*(_91970_src)), ._field_errorToken=_92013_errorToken};;
	return _1abde9cb5_check(&_92813_tcc);;
}



inline jule::Bool _1ab6a3a58_checkTypeCompatibility(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _93747_dest, jule::Ptr<_1abe42d30_TypeKind>* _93814_src, jule::Ptr<_1abd0a38a_Token>* _93835_errorToken) {
	if (_1ab6a35a2__checkTypeCompatibility(_self_, _93747_dest, _93814_src, (*(_93835_errorToken)))) {
		return true;;
	};
	_1ab69a5dd_pushErr(_self_, (*(_93835_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_93747_dest)).ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_93814_src)).ptr()), &__jule_any_type4)}));
	return false;;
}



inline void _1ab6a3e76_pushCompatiblityError(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe42d30_TypeKind>* _94645_dest, jule::Ptr<_1abe11936_Data>* _94667_src, jule::Ptr<_1abd0a38a_Token>* _94714_errorToken) {
	if ((*((*(_94667_src))))._field_untyped) {
		{
			
			if (_1b9ab1496_IsI64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1aee7edad:;
				{
					_1ab69a5dd_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b9ab172c_IsU64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1aee7ee57:;
				{
					_1ab69a5dd_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type4)}));
					return;;
				}
			}
			else if (_1b9ab1ed0_IsF64((*((*(_94667_src))))._field_Constant.ptr())) {
				_case_begin_1aee7eebd:;
				{
					_1ab69a5dd_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type4)}));
					return;;
				}
			}
			_match_end_1aee7ec8c:;
		};
	};
	_1ab69a5dd_pushErr(_self_, (*(_94714_errorToken)), jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_94645_dest)).ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_94667_src))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1ab6a442c_checkTypeCompatibility1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe42d30_TypeKind>* _96448_dest, jule::Ptr<_1abe11936_Data>* _96470_src, jule::Ptr<_1abd0a38a_Token>* _96514_errorToken) {
	if (_1ab6a35a2__checkTypeCompatibility(_self_, _96448_dest, &((*((*(_96470_src))))._field_Kind), (*(_96514_errorToken)))) {
		return true;;
	};
	_1ab6a3e76_pushCompatiblityError(_self_, _96448_dest, _96470_src, _96514_errorToken);
	return false;;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1ab6a48d3_buildNonGenericTypeKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd20845_TypeDecl>* _97948_ast, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _98014_generics, jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>* _98050_ignored) {
	jule::Ptr<_1abe54bdd_typeChecker> _98113_tc = jule::new_ptr<_1abe54bdd_typeChecker>(_1abe54bdd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_ignoreGenerics=(*(_98014_generics)), ._field_ignoredGenerics=_98050_ignored, });;
	return _1abe5c388_checkDecl(_98113_tc.ptr(), _97948_ast);;
}



inline jule::Bool _1ab6a4cce_buildFnNonGenericTypeKinds(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _99151_f, jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>* _99167_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _99317_generics = nullptr;;
	if (_1abd56da9_IsMethod((*((*(_99151_f))))._field_Decl.ptr())) {
		_99317_generics=jule::append((*(*((*(_99151_f))))._field_Decl.alloc)._field_Generics,(*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_99317_generics=(*((*((*(_99151_f))))._field_Decl))._field_Generics;
	};
	{
		auto expr = &((*((*(_99151_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee8923b:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _100021_p = *it;
			{
				if ((!(_1abd552e7_IsSelf((*(_100021_p))._field_Decl.ptr())))) {
					(*_100021_p.alloc)._field_Kind=_1ab6a48d3_buildNonGenericTypeKind(_self_, &((*((*(*_100021_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
					__jule_func_result=(__jule_func_result && ((*_100021_p.alloc)._field_Kind != nullptr));
				};
			}
			_iter_next_1aee8923b:;
			++it;
			goto _iter_begin_1aee8923b;
		}
		_iter_end_1aee8923b:;
	};
	if ((!(_1abd56b23_IsVoid((*((*(_99151_f))))._field_Decl.ptr())))) {
		(*((*(_99151_f))))._field_Result=_1ab6a48d3_buildNonGenericTypeKind(_self_, &((*((*((*(*((*(_99151_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), &(_99317_generics), _99167_ignored);
		__jule_func_result=(__jule_func_result && ((*((*(_99151_f))))._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1abd59681_FnIns> _1ab6a5120_getTraitCheckFnKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _101344_f) {
	if (((*((*(_101344_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_101344_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1abd59681_FnIns> _101713_ins = _1abd57b79_instanceForce((*(_101344_f)));;
	jule::Ptr<_1abe54bdd_typeChecker> _101913_tc = jule::new_ptr<_1abe54bdd_typeChecker>(_1abe54bdd_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), });;
	{
		auto expr = &((*(_101713_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aee90363:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _102421_p = *it;
			{
				if ((!(_1abd552e7_IsSelf((*(_102421_p))._field_Decl.ptr())))) {
					(*_102421_p.alloc)._field_Kind=_1abe5c388_checkDecl(_101913_tc.ptr(), &((*((*(*_102421_p.alloc)._field_Decl.alloc)._field_Kind))._field_Decl));
				};
			}
			_iter_next_1aee90363:;
			++it;
			goto _iter_begin_1aee90363;
		}
		_iter_end_1aee90363:;
	};
	if ((!(_1abd56b23_IsVoid((*(_101344_f)).ptr())))) {
		(*_101713_ins.alloc)._field_Result=_1abe5c388_checkDecl(_101913_tc, &((*((*((*((*(_101344_f))))._field_Result))._field_Kind))._field_Decl));
	};
	return _101713_ins;;
}



inline jule::Bool _1ab6a55c6_checkConstraintsFn(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _103643_f, jule::Ptr<_1abd0a38a_Token>* _103659_et, jule::Ptr<_1abd59681_FnIns> _103675_exist) {
	jule::Ptr<_1ab64ccbb_constraintChecker> _103713_cc = _1ab6a0d63_constraintChecker(_self_);;
	(*(_103713_cc))._field_et=(*(_103659_et));
	(*_103713_cc.alloc)._field_fi=(*(_103643_f));
	if ((_103675_exist != nullptr)) {
		{
			auto expr = &((*_103675_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aee94873:;
			if (it != expr_end) {
				jule::I32 _104118_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> _104125_g = *it;
				{
					(*((*((*(_103643_f))))._field_Generics[_104118_i]))._field_Constraint=(*(_104125_g))._field_Constraint;
				}
				_iter_next_1aee94873:;
				++it;
				_104118_i++;
				goto _iter_begin_1aee94873;
			}
			_iter_end_1aee94873:;
		};
	} else {
		(*_103713_cc.alloc)._field_uniq=true;
	};
	return _1ab64dc01_check(_103713_cc);;
}



inline jule::Bool _1ab6a5a7c_checkConstraintsStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _105047_s, jule::Ptr<_1abd0a38a_Token>* _105067_et, jule::Ptr<_1abd4445c_StructIns> _105083_exist) {
	jule::Ptr<_1ab64ccbb_constraintChecker> _105113_cc = _1ab6a0d63_constraintChecker(_self_);;
	(*(_105113_cc))._field_et=(*(_105067_et));
	(*_105113_cc.alloc)._field_si=(*(_105047_s));
	if ((_105083_exist != nullptr)) {
		{
			auto expr = &((*_105083_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1aee97a0d:;
			if (it != expr_end) {
				jule::I32 _105518_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> _105525_g = *it;
				{
					(*((*((*(_105047_s))))._field_Generics[_105518_i]))._field_Constraint=(*(_105525_g))._field_Constraint;
				}
				_iter_next_1aee97a0d:;
				++it;
				_105518_i++;
				goto _iter_begin_1aee97a0d;
			}
			_iter_end_1aee97a0d:;
		};
	} else {
		(*_105113_cc.alloc)._field_uniq=true;
	};
	return _1ab64dc01_check(_105113_cc);;
}



inline jule::Bool _1ab6a5e78_fnEnvironment(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _106738_f, jule::Fn<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*> _106749_algo) {
	jule::Ptr<_1ab6979a3_Sema> _106813_sema = (*((*((*(_106738_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1abe0b5bd_SymbolTable> _106913_old = (*((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab69a1c0_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _106913_old);
	});;
	jule::Ptr<_1abe0b5bd_SymbolTable> _107113_file = _1ab6966e9_findFile(&((*(*(*((*(_106738_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_106738_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_107113_file != nullptr)) {
		_1ab69a1c0_setCurrentFile((*(*((*(_106738_f))))._field_Decl.alloc)._field_sema, _107113_file);
	};
	jule::I32 _107613_size = (*((*(_106738_f))))._field_Generics.len();;
	if ((((*((*(_106738_f))))._field_Decl != nullptr) && ((*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_107613_size+=(*(*(*((*(_106738_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _108113_generics = jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>::alloc(0LL, _107613_size);;
	_1ab696375_appendGenericTypeAliases(&(_108113_generics), _106738_f);
	jule::Bool _10849_ok = _106749_algo(&(_106813_sema), &(_108113_generics));;
	if ((_106813_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_106813_sema))._field_errors);
		(*_106813_sema.alloc)._field_errors=nullptr;
	};
	return _10849_ok;;
}



inline void _1ab6a6231_checkFnParamKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd58608_ParamIns>* _109441_p) {
	(*((*((*(_109441_p))))._field_Kind))._field_Variadic=(*((*((*(_109441_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_109441_p))))._field_Decl.alloc)._field_Reference && (!(_1abe5e2e1_isValidForRef(&((*((*(_109441_p))))._field_Kind)))))) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*(*((*(_109441_p))))._field_Decl.alloc)._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_109441_p))))._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Bool _1ab6a6572_reloadFnInsTypes(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns> _110140_f) {
	if ((_1abd5ab16_IsBuiltin(_110140_f.ptr()) || _1abd5ad9c_IsAnon(_110140_f))) {
		return true;;
	};
	return _1ab6a5e78_fnEnvironment(_self_, &(_110140_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ab6979a3_Sema>*,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>*>((void*)__jule_anon_1aeea51e1, jule::Ptr<__jule_anon_1aeea51e1_ctx>::make(__jule_anon_1aeea51e1_ctx{._110140_f=_110140_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1aeea51e1_ctx_handler));;
}



inline jule::Bool _1ab6a6a28_checkRefValidityForInitExpr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _113747_leftMut, jule::Ptr<_1abe11936_Data>* _113767_d, jule::Ptr<_1abd0a38a_Token>* _113782_errorToken) {
	if ((!(_1ab695143_isValidModelForRef(&((*((*(_113767_d))))._field_Model))))) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*(_113782_errorToken)), jule::Str::lit("references requires variable based expression for assignment", 60), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_113747_leftMut && (!((*((*(_113767_d))))._field_Mutable)))) {
		_1ab69a5dd_pushErr(_self_, (*(_113782_errorToken)), jule::Str::lit("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1ab6a6d69_isMutRiskyStruct(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd4445c_StructIns>* _115432_s) {
	{
		auto expr = &((*((*(_115432_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeeaea14:;
		if (it != expr_end) {
			jule::Ptr<_1abd438ac_FieldIns> *_115516_f = it;
			{
				if ((((*((*((*(_115516_f))))._field_Decl))._field_Mutable && _1abe446b1_Mutable((*(*(_115516_f)).alloc)._field_Kind.ptr())) && _1ab69ad4c_isAccessibleDefine(_self_, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Public, (*(*(*(_115516_f)).alloc)._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1aeeaea14:;
			++it;
			goto _iter_begin_1aeeaea14;
		}
		_iter_end_1aeeaea14:;
	};
	return false;;
}



inline jule::Bool _1ab6a7485_checkValidityForInitExpr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Bool _118144_leftMut, jule::Bool _118159_leftRef, jule::Ptr<_1abe42d30_TypeKind>* _118210_leftKind, jule::Ptr<_1abe11936_Data>* _118236_d, jule::Ptr<_1abd0a38a_Token>* _118251_errorToken) {
	if ((_118144_leftMut && (!((*((*(_118236_d))))._field_Mutable)))) {
		if (_1abe446b1_Mutable((*((*(_118236_d))))._field_Kind.ptr())) {
			_1ab69a5dd_pushErr(_self_.ptr(), (*(_118251_errorToken)), jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
		jule::Ptr<_1abd4445c_StructIns> _119013_s = _1abe46a04_Struct((*((*(_118236_d))))._field_Kind);;
		if (((_119013_s != nullptr) && _1ab6a6d69_isMutRiskyStruct(_self_, &(_119013_s)))) {
			_1ab69a5dd_pushErr(_self_, (*(_118251_errorToken)), jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_118236_d))))._field_Kind), &__jule_any_type4)}));
			return false;;
		};
	};
	if (_118159_leftRef) {
		if ((!(_1ab6a6a28_checkRefValidityForInitExpr(_self_, _118144_leftMut, _118236_d, _118251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1abdea39d_assignTypeChecker> _120113_atc = jule::new_ptr<_1abdea39d_assignTypeChecker>(_1abdea39d_assignTypeChecker{._field_s=_self_, ._field_d=(*(_118236_d)), ._field_errorToken=(*(_118251_errorToken))});;
	return _1abdeaab8_checkValidity(_120113_atc.ptr());;
}



inline jule::Bool _1ab6a7881_checkTypeAliasDeclKind(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _120947_ta, jule::Trait _120967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe0b5bd_SymbolTable> _121013_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab69a1c0_setCurrentFile(_self_, _121013_old);
	});;
	if (((*((*(_120947_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1abe0b5bd_SymbolTable> _121517_file = _1ab6966e9_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_120947_ta))))._field_Token.alloc)._field_File));;
		if ((_121517_file != nullptr)) {
			_1ab69a1c0_setCurrentFile(_self_, _121517_file);
		};
	};
	__jule_func_result=_1ab6a0acc_checkTypeWithRefers(_self_, &((*((*(_120947_ta))))._field_Kind), _120967_l, nullptr, jule::new_ptr<_1abe53bed_referencer>(_1abe53bed_referencer{._field_ident=(*((*(_120947_ta))))._field_Ident, ._field_owner=jule::Any((*(_120947_ta)), &__jule_any_type65), ._field_refs=(&((*((*(_120947_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1abe46251_Arr((*((*((*(_120947_ta))))._field_Kind))._field_Kind.ptr()) != nullptr)) && (*(_1abe46251_Arr((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Kind)))._field_Auto)) {
		_1ab69a5dd_pushErr(_self_, (*((*(*((*(_120947_ta))))._field_Kind.alloc)._field_Decl))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1ab6a7be4_checkTypeAliasDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _123243_ta, jule::Trait _123263_l) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_123243_ta))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_123243_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1ab6a7881_checkTypeAliasDeclKind(_self_, _123243_ta, _123263_l);
}



inline void _1ab6a7e9c_checkTypeAliasDeclDup(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4203d_TypeAlias>* _124046_ta) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_124046_ta))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_124046_ta))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1ab69b303_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_124046_ta))), &((*((*(_124046_ta))))._field_Ident), (*((*(_124046_ta))))._field_Binded)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_124046_ta))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_124046_ta))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab6a7881_checkTypeAliasDeclKind(_self_, _124046_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
}



inline jule::Bool _1ab6a8233_checkTypeAliasDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeec2571:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> _125321_ta = *it;
			{
				_1ab6a7e9c_checkTypeAliasDeclDup(_self_, &(_125321_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1aeec2571:;
			++it;
			goto _iter_begin_1aeec2571;
		}
		_iter_end_1aeec2571:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aeeee14c_checkEnumItemsDup(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b000055a:;
		if (it != expr_end) {
			jule::Ptr<_1abd6b6e8_EnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1b000055a;
				} else if (_1abd0cc72_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1ab69a5dd_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b0002051:;
						if (it != expr_end) {
							jule::Ptr<_1abd6b6e8_EnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1b0002051;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1ab69a5dd_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b0002051;
								};
							}
							_iter_next_1b0002051:;
							++it;
							goto _iter_begin_1b0002051;
						}
						_iter_end_1b0002051:;
					};
				};
			}
			_iter_next_1b000055a:;
			++it;
			goto _iter_begin_1b000055a;
		}
		_iter_end_1b000055a:;
	};
}

inline void _1b000b324_checkEnumItemsDup(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _126439_items) {
	{
		auto expr = &(_126439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b000c710:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d398_TypeEnumItem> *_126516_item = it;
			{
				if (((*((*(_126516_item))))._field_Ident).empty()) {
					goto _iter_next_1b000c710;
				} else if (_1abd0cc72_IsIgnoreIdent((*((*(_126516_item))))._field_Ident)) {
					_1ab69a5dd_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b000e206:;
						if (it != expr_end) {
							jule::Ptr<_1abd6d398_TypeEnumItem> *_127124_citem = it;
							{
								if (((*(_126516_item)) == (*(_127124_citem)))) {
									goto _iter_end_1b000e206;
								} else if (((*((*(_126516_item))))._field_Ident == (*((*(_127124_citem))))._field_Ident)) {
									_1ab69a5dd_pushErr(_self_, (*(*(_126516_item)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_126516_item)).alloc)._field_Ident, &__jule_any_type4)}));
									_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b000e206;
								};
							}
							_iter_next_1b000e206:;
							++it;
							goto _iter_begin_1b000e206;
						}
						_iter_end_1b000e206:;
					};
				};
			}
			_iter_next_1b000c710:;
			++it;
			goto _iter_begin_1b000c710;
		}
		_iter_end_1b000c710:;
	};
}



inline void _1ab6a8794_checkEnumItemsStr(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _128442_e) {
	jule::Ptr<_1abe1365d_Eval> _128513_eval = _1ab6a2a8a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
	{
		auto expr = &((*((*(_128442_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeec42dc:;
		if (it != expr_end) {
			jule::Ptr<_1abd6b6e8_EnumItem> _128621_item = *it;
			{
				if (_1abd6baa0_AutoExpr(_128621_item.ptr())) {
					(*_128621_item.alloc)._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Constant=static__1b9aad262_NewStr((*_128621_item.alloc)._field_Ident)})});
					(*((*((*_128621_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*(*_128621_item.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1abe11936_Data> _129521_d = _1abe318bd_evalExpr(_128513_eval, (*((*(_128621_item))._field_Value))._field_Expr);;
					if ((_129521_d == nullptr)) {
						goto _iter_next_1aeec42dc;
					};
					if ((!(_1abe1233d_IsConst(_129521_d.ptr())))) {
						_1ab69a5dd_pushErr(_self_, (*((*(*_128621_item.alloc)._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1ab6a30eb_checkAssignType(_self_, false, &((*((*((*(_128442_e))))._field_Kind))._field_Kind), &(_129521_d), (*_128621_item.alloc)._field_Token);
					(*(*_128621_item.alloc)._field_Value.alloc)._field_Data=_129521_d;
				};
			}
			_iter_next_1aeec42dc:;
			++it;
			goto _iter_begin_1aeec42dc;
		}
		_iter_end_1aeec42dc:;
	};
}



inline void _1aeeceabc_checkEnumItemInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe1365d_Eval>* _131046_eval, jule::Ptr<_1abd6c265_Enum>* _131064_e, jule::Ptr<_1abe4a909_Prim>* _131075_prim, jule::Ptr<_1abd6b6e8_EnumItem>* _131093_item, jule::U64* _1310115_n) {
	if (_1abd6baa0_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		{
			
{
				_case_begin_1aeed1e98:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b9aacbce_NewU64((*(_1310115_n)));
				}
			}
			_match_end_1aeed230b:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1abe11936_Data> _132517_d = _1abe318bd_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1abe1233d_IsConst(_132517_d.ptr())))) {
			_1ab69a5dd_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab6a30eb_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1aeed5188:;
				{
					(*(_1310115_n))=_1b9aae131_ReadU64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1aeed7663:;
		};
	};
}

inline void _1aeedeb43_checkEnumItemInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe1365d_Eval>* _131046_eval, jule::Ptr<_1abd6c265_Enum>* _131064_e, jule::Ptr<_1abe4a909_Prim>* _131075_prim, jule::Ptr<_1abd6b6e8_EnumItem>* _131093_item, jule::I64* _1310115_n) {
	if (_1abd6baa0_AutoExpr((*(_131093_item)).ptr())) {
		(*((*(_131093_item))))._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()});
		{
			
{
				_case_begin_1aeee287c:;
				{
					(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Constant=static__1b9aac915_NewI64((*(_1310115_n)));
				}
			}
			_match_end_1aeee231b:;
		};
		(*((*((*((*(_131093_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*(*((*(_131093_item))))._field_Value.alloc)._field_Data.alloc)._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1abe11936_Data> _132517_d = _1abe318bd_evalExpr((*(_131046_eval)), (*((*((*(_131093_item))))._field_Value))._field_Expr);;
		if ((_132517_d == nullptr)) {
			return;;
		};
		if ((!(_1abe1233d_IsConst(_132517_d.ptr())))) {
			_1ab69a5dd_pushErr(_self_.ptr(), (*((*(*((*(_131093_item))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1ab6a30eb_checkAssignType(_self_, false, &((*((*((*(_131064_e))))._field_Kind))._field_Kind), &(_132517_d), (*((*(_131093_item))))._field_Token);
		(*(*((*(_131093_item))))._field_Value.alloc)._field_Data=_132517_d;
		{
			
{
				_case_begin_1aeee7871:;
				{
					(*(_1310115_n))=_1b9aadd9a_ReadI64((*((*(*((*(_131093_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1aeee780a:;
		};
	};
}



inline void _1aeecac3e_checkEnumItemsInt1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a909_Prim>* _134544_prim, jule::Ptr<_1abd6c265_Enum>* _134562_e) {
	jule::U64 _134613_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1aeecc977:;
			{
				_134613_max=_1b9aa7b85_MaxU(_1abe4ac4a_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1aeecc79b:;
	};
	jule::Ptr<_1abe1365d_Eval> _135613_eval = _1ab6a2a8a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
	jule::U64 _135713_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1abd6b6e8_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1aeeceabc_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1aeecc2a1:;
				{
					_135713_n=_1b9aaee01_AsU64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1aeed8796:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aeed4451:;
		if (it != expr_end) {
			jule::Ptr<_1abd6b6e8_EnumItem> _137021_item = *it;
			{
				if (((_1abd6baa0_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LLU)) && ((_134613_max - _135713_n) <= 0LLU))) {
					_1ab69a5dd_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1aeed4451;
				};
				(_135713_n)++;
				_1aeeceabc_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1aeed4451:;
			++it;
			goto _iter_begin_1aeed4451;
		}
		_iter_end_1aeed4451:;
	};
}

inline void _1aeedb348_checkEnumItemsInt1(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abe4a909_Prim>* _134544_prim, jule::Ptr<_1abd6c265_Enum>* _134562_e) {
	jule::I64 _134613_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1aeedc9dc:;
			{
				_134613_max=_1b9aa78bb_MaxI(_1abe4ac4a_Str((*(_134544_prim)).ptr()));
			}
		}
		_match_end_1aeedc68a:;
	};
	jule::Ptr<_1abe1365d_Eval> _135613_eval = _1ab6a2a8a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
	jule::I64 _135713_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1abd6b6e8_EnumItem> _135813_first = (*((*(_134562_e))))._field_Items[0LL];;
	_1aeedeb43_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_135813_first), &(_135713_n));
	if (((*((*(_135813_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1aeedda32:;
				{
					_135713_n=_1b9aaeb6a_AsI64((*(*(*_135813_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1aeee7e04:;
		};
	};
	{
		auto expr = (*((*(_134562_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1aeee9422:;
		if (it != expr_end) {
			jule::Ptr<_1abd6b6e8_EnumItem> _137021_item = *it;
			{
				if (((_1abd6baa0_AutoExpr(_137021_item.ptr()) && (_135713_n > 0LL)) && ((_134613_max - _135713_n) <= 0LL))) {
					_1ab69a5dd_pushErr(_self_, (*_137021_item.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1aeee9422;
				};
				(_135713_n)++;
				_1aeedeb43_checkEnumItemInt(_self_, &(_135613_eval), _134562_e, _134544_prim, &(_137021_item), &(_135713_n));
			}
			_iter_next_1aeee9422:;
			++it;
			goto _iter_begin_1aeee9422;
		}
		_iter_end_1aeee9422:;
	};
}



inline void _1ab6a9443_checkEnumItemsInt(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _138042_e) {
	jule::Ptr<_1abe4a909_Prim> _13819_prim = _1abe45481_Prim((*((*((*(_138042_e))))._field_Kind))._field_Kind.ptr());;
	{
		
		if (_1b9aab282_IsSigInt((*(_13819_prim))._field_Kind)) {
			_case_begin_1aeed9aa5:;
			{
				_1aeedb348_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		else {
			_case_begin_1aeeca4be:;
			{
				_1aeecac3e_checkEnumItemsInt1(_self_, &(_13819_prim), _138042_e);
			}
		}
		_match_end_1aeeca458:;
	};
}



inline void _1ab6a96eb_checkEnumDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6c265_Enum>* _139038_e) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_139038_e))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab69b303_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_139038_e))), &((*((*(_139038_e))))._field_Ident), false)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_139038_e))))._field_Items.len() == 0LL)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_139038_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_139038_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1aeeee14c_checkEnumItemsDup(_self_, (*((*(_139038_e))))._field_Items);
	if (((*((*(_139038_e))))._field_Kind != nullptr)) {
		if ((!(_1ab6a125e_checkType(_self_, &((*((*(_139038_e))))._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3))))) {
			return;;
		};
	} else {
		(*((*(_139038_e))))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
	};
	jule::Ptr<_1abe4a909_Prim> _141413_t = _1abe45481_Prim((*((*((*(_139038_e))))._field_Kind))._field_Kind.ptr());;
	if ((_141413_t == nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1abe4dd91_IsStr(_141413_t.ptr())) {
			_case_begin_1b0005cad:;
			{
				_1ab6a8794_checkEnumItemsStr(_self_, _139038_e);
			}
		}
		else if (_1b9aab859_IsInt(_1abe4ac4a_Str(_141413_t.ptr()))) {
			_case_begin_1b00050ed:;
			{
				_1ab6a9443_checkEnumItemsInt(_self_, _139038_e);
			}
		}
		else {
			_case_begin_1b0005087:;
			{
				_1ab69a5dd_pushErr(_self_, (*((*(_139038_e))))._field_Token, jule::Str::lit("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b0005a9e:;
	};
}



inline void _1ab6a99a4_checkTypeEnumDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd6d970_TypeEnum>* _143142_e) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_143142_e))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab69b303_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_143142_e))), &((*((*(_143142_e))))._field_Ident), false)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_143142_e))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_143142_e))))._field_Items.len() == 0LL)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_143142_e))))._field_Token, jule::Str::lit("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*((*(_143142_e))))._field_Ident, &__jule_any_type4)}));
		return;;
	};
	_1b000b324_checkEnumItemsDup(_self_, (*((*(_143142_e))))._field_Items);
	{
		auto expr = &((*((*(_143142_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b000c2ae:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d398_TypeEnumItem> _144521_item = *it;
			{
				if (((*(_144521_item))._field_Kind == nullptr)) {
					_1ab69a5dd_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b000c2ae;
				};
				jule::Bool _145013_ok = _1ab6a125e_checkType(_self_, &((*_144521_item.alloc)._field_Kind), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
				if ((!(_145013_ok))) {
					goto _iter_next_1b000c2ae;
				};
				jule::Ptr<_1abe4a909_Prim> _145413_p = _1abe45481_Prim((*((*_144521_item.alloc)._field_Kind))._field_Kind.ptr());;
				if (((_145413_p != nullptr) && _1abe4e127_IsAny(_145413_p))) {
					_1ab69a5dd_pushErr(_self_, (*_144521_item.alloc)._field_Token, jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b000c2ae:;
			++it;
			goto _iter_begin_1b000c2ae;
		}
		_iter_end_1b000c2ae:;
	};
	if (((*((*(_143142_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1abd6d398_TypeEnumItem> _146017_item = (*((*(_143142_e))))._field_Items[0LL];;
		_1abe42d30_TypeKind _146113_tk = _1abe42d30_TypeKind{._field_Kind=jule::Trait((*(_143142_e)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)};;
		if ((((*((*(_146017_item))._field_Kind))._field_Kind != nullptr) && _1abe43539_Equal((*((*_146017_item.alloc)._field_Kind))._field_Kind, ((jule::Ptr<_1abe42d30_TypeKind>)((&(_146113_tk))))))) {
			_1ab69a5dd_pushErr(_self_, (*_146017_item.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1abd6dcb1_Str((*(_143142_e)).ptr()), &__jule_any_type4)}));
		};
	};
}



inline jule::Bool _1ab6a9c3a_checkEnumDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0017484:;
		if (it != expr_end) {
			jule::Ptr<_1abd6c265_Enum> _147221_e = *it;
			{
				_1ab6a96eb_checkEnumDecl(_self_, &(_147221_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0017484:;
			++it;
			goto _iter_begin_1b0017484;
		}
		_iter_end_1b0017484:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab6a9ec1_checkTypeEnumDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0018b39:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d970_TypeEnum> _148421_e = *it;
			{
				_1ab6a99a4_checkTypeEnumDecl(_self_, &(_148421_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0018b39:;
			++it;
			goto _iter_begin_1b0018b39;
		}
		_iter_end_1b0018b39:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab6aa312_checkDeclGenerics(_1ab6979a3_Sema* _self_, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _149437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b001a0e1:;
		if (it != expr_end) {
			jule::I32 _149613_i = it - expr->begin();
			jule::Ptr<_1abd2ca50_GenericDecl> *_149616_g = it;
			{
				if (_1abd0cc72_IsIgnoreIdent((*((*(_149616_g))))._field_Ident)) {
					_1ab69a5dd_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b001a0e1;
				};
				_julec_label_1b001b488:;
				{
					auto expr = _149437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b001ae27:;
					if (it != expr_end) {
						jule::I32 _150517_j = it - expr->begin();
						jule::Ptr<_1abd2ca50_GenericDecl> *_150520_ct = it;
						{
							{
								
								if ((_150517_j >= _149613_i)) {
									_case_begin_1b001c566:;
									{
										goto _iter_end_1b001ae27;
									}
								}
								else if (((*(*(_149616_g)).alloc)._field_Ident == (*((*(_150520_ct))))._field_Ident)) {
									_case_begin_1b001c5ee:;
									{
										_1ab69a5dd_pushErr(_self_, (*(*(_149616_g)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_149616_g)).alloc)._field_Ident, &__jule_any_type4)}));
										_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b001ae27;
									}
								}
								_match_end_1b001c467:;
							};
						}
						_iter_next_1b001ae27:;
						++it;
						_150517_j++;
						goto _iter_begin_1b001ae27;
					}
					_iter_end_1b001ae27:;
				};
			}
			_iter_next_1b001a0e1:;
			++it;
			_149613_i++;
			goto _iter_begin_1b001a0e1;
		}
		_iter_end_1b001a0e1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6aa653_checkFnDeclParamsDup(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd566a0_Fn>* _152140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b001e865:;
	{
		auto expr = &((*((*(_152140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b001eb51:;
		if (it != expr_end) {
			jule::I32 _152413_i = it - expr->begin();
			jule::Ptr<_1abd54bcb_Param> *_152416_p = it;
			{
				{
					auto expr = &((*((*(_152140_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0020833:;
					if (it != expr_end) {
						jule::Ptr<_1abd2ca50_GenericDecl> *_152620_g = it;
						{
							if (((*((*(_152416_p))))._field_Ident == (*((*(_152620_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ab69a5dd_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
								_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b001eb51;
							};
						}
						_iter_next_1b0020833:;
						++it;
						goto _iter_begin_1b0020833;
					}
					_iter_end_1b0020833:;
				};
				_julec_label_1b0022170:;
				{
					auto expr = &((*((*(_152140_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0020d0b:;
					if (it != expr_end) {
						jule::I32 _153617_j = it - expr->begin();
						jule::Ptr<_1abd54bcb_Param> *_153620_jp = it;
						{
							{
								
								if ((_153617_j >= _152413_i)) {
									_case_begin_1b002313d:;
									{
										goto _iter_end_1b0020d0b;
									}
								}
								else if (_1abd0cc72_IsIgnoreIdent((*(*(_152416_p)).alloc)._field_Ident) || _1abd0cc72_IsIgnoreIdent((*((*(_153620_jp))))._field_Ident) || _1abd0d03b_IsAnonIdent((*(*(_152416_p)).alloc)._field_Ident) || _1abd0d03b_IsAnonIdent((*(*(_153620_jp)).alloc)._field_Ident)) {
									_case_begin_1b00231c6:;
									{
										goto _iter_end_1b0020d0b;
									}
								}
								else if (((*(*(_152416_p)).alloc)._field_Ident == (*((*(_153620_jp))))._field_Ident)) {
									_case_begin_1b002323c:;
									{
										__jule_func_result=false;
										_1ab69a5dd_pushErr(_self_, (*(*(_152416_p)).alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_152416_p)).alloc)._field_Ident, &__jule_any_type4)}));
										_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b001eb51;
									}
								}
								_match_end_1b0022eea:;
							};
						}
						_iter_next_1b0020d0b:;
						++it;
						_153617_j++;
						goto _iter_begin_1b0020d0b;
					}
					_iter_end_1b0020d0b:;
				};
			}
			_iter_next_1b001eb51:;
			++it;
			_152413_i++;
			goto _iter_begin_1b001eb51;
		}
		_iter_end_1b001eb51:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6aa994_checkFnDeclResultDup(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd566a0_Fn>* _155840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1abd56b23_IsVoid((*(_155840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_155840_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0026c24:;
		if (it != expr_end) {
			jule::I32 _156513_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> *_156516_v = it;
			{
				if ((_1abd0cc72_IsIgnoreIdent((*((*(_156516_v))))._field_Kind) || _1abd0d03b_IsAnonIdent((*(*(_156516_v)).alloc)._field_Kind))) {
					goto _iter_next_1b0026c24;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b00282b9:;
					if (it != expr_end) {
						jule::Ptr<_1abd2ca50_GenericDecl> *_157020_g = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157020_g))))._field_Ident)) {
								goto _julec_label_1b002c125;
							};
						}
						_iter_next_1b00282b9:;
						++it;
						goto _iter_begin_1b00282b9;
					}
					_iter_end_1b00282b9:;
				};
				{
					auto expr = &((*((*(_155840_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b002972c:;
					if (it != expr_end) {
						jule::Ptr<_1abd54bcb_Param> *_157620_p = it;
						{
							if (((*(*(_156516_v)).alloc)._field_Kind == (*((*(_157620_p))))._field_Ident)) {
								goto _julec_label_1b002c125;
							};
						}
						_iter_next_1b002972c:;
						++it;
						goto _iter_begin_1b002972c;
					}
					_iter_end_1b002972c:;
				};
				_julec_label_1b002a4b9:;
				{
					auto expr = &((*((*((*(_155840_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b002ae7b:;
					if (it != expr_end) {
						jule::I32 _158417_j = it - expr->begin();
						jule::Ptr<_1abd0a38a_Token> *_158420_jv = it;
						{
							{
								
								if ((_158417_j >= _156513_i)) {
									_case_begin_1b002b9e8:;
									{
										goto _iter_end_1b002ae7b;
									}
								}
								else if (((*((*(_158420_jv))))._field_Kind == (*(*(_156516_v)).alloc)._field_Kind)) {
									_case_begin_1b002ba81:;
									{
										goto _julec_label_1b002c125;
									}
								}
								_match_end_1b002b8e9:;
							};
						}
						_iter_next_1b002ae7b:;
						++it;
						_158417_j++;
						goto _iter_begin_1b002ae7b;
					}
					_iter_end_1b002ae7b:;
				};
				goto _iter_next_1b0026c24;
				_julec_label_1b002c125:;
				_1ab69a5dd_pushErr(_self_, (*(_156516_v)), jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(*(_156516_v)).alloc)._field_Kind, &__jule_any_type4)}));
				_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b0026c24:;
			++it;
			_156513_i++;
			goto _iter_begin_1b0026c24;
		}
		_iter_end_1b0026c24:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6aacd5_checkFnVariadicParam(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _160345_f) {
	if (((*((*(_160345_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1abd54bcb_Param> _160713_param = (*((*(_160345_f))))._field_Params[((*((*(_160345_f))))._field_Params.len() - 1LL)];;
	if (((*(_160713_param))._field_Variadic && (*_160713_param.alloc)._field_Reference)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*_160713_param.alloc)._field_Token, jule::Str::lit("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1ab6ab08d_checkFnDeclPrototype(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _161645_f) {
	if (((*((*(_161645_f))))._field_Exceptional && (*((*(_161645_f))))._field_Binded)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_161645_f))))._field_Token, jule::Str::lit("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_161645_f))))._field_Exceptional) {
		if (_1abd57140_IsEntryPoint((*(_161645_f)).ptr())) {
			_1ab69a5dd_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1abd573c6_IsInit((*(_161645_f)).ptr())) {
			_1ab69a5dd_pushErr(_self_, (*((*(_161645_f))))._field_Token, jule::Str::lit("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1ab6aa312_checkDeclGenerics(_self_, &((*((*(_161645_f))))._field_Generics))))) {
			_case_begin_1b00340a5:;
		}
		else if ((!(_1ab6aa653_checkFnDeclParamsDup(_self_, _161645_f)))) {
			_case_begin_1b003411b:;
		}
		else if ((!(_1ab6aa994_checkFnDeclResultDup(_self_, _161645_f)))) {
			_case_begin_1b0034182:;
		}
		else if ((!(_1ab6aacd5_checkFnVariadicParam(_self_, _161645_f)))) {
			_case_begin_1b00341e8:;
		}
		_match_end_1b003268b:;
	};
}



inline jule::Bool _1ab6ab544_catchTraitInheritCycle(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait> _163842_t1, jule::Ptr<_1abd69a59_Trait> _163858_t2, _209e0d4d9_StrBuilder* _163875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_163858_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0036739:;
		if (it != expr_end) {
			jule::Ptr<_1abe4a002_TypeSymbol> _164021_i = *it;
			{
				if (((*(_164021_i))._field_Kind == nullptr)) {
					goto _iter_next_1b0036739;
				};
				jule::Ptr<_1abd69a59_Trait> _164417_t3 = _1abe46c8a_Trait((*_164021_i.alloc)._field_Kind.ptr());;
				if ((_163842_t1 == _164417_t3)) {
					_1ab6b12c4_pushCycleError(_self_.ptr(), &((*(_163858_t2))._field_Ident), &((*(_164417_t3))._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1ab6ab544_catchTraitInheritCycle(_self_, _163842_t1, _164417_t3, _163875_message)))) {
					_1ab6b12c4_pushCycleError(_self_, &((*_163858_t2.alloc)._field_Ident), &((*_164417_t3.alloc)._field_Ident), _163875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0036739:;
			++it;
			goto _iter_begin_1b0036739;
		}
		_iter_end_1b0036739:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6ab885__checkTraitDeclInherits(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _165748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165748_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0039eac:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_1abe4a002_TypeSymbol> _165921_it = *it;
			{
				if ((!(_1ab6a125e_checkType(_self_, &(_165921_it), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3))))) {
					__jule_func_result=false;
					goto _iter_next_1b0039eac;
				};
				jule::Ptr<_1abd69a59_Trait> _166417_t2 = _1abe46c8a_Trait((*(_165921_it))._field_Kind.ptr());;
				if ((_166417_t2 == nullptr)) {
					_1ab69a5dd_pushErr(_self_, (*((*_165921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4),jule::Any(_1abe431e8_Str((*_165921_it.alloc)._field_Kind), &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b0039eac;
				};
				{
					auto expr = &((*((*(_165748_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b003d411:;
					if (it != expr_end) {
						jule::I32 _167017_j = it - expr->begin();
						jule::Ptr<_1abe4a002_TypeSymbol> _167020_it2 = *it;
						{
							if ((_167017_j >= _165914_i)) {
								goto _iter_end_1b003d411;
							};
							if ((((*(_167020_it2))._field_Kind != nullptr) && _1abe43539_Equal((*_165921_it.alloc)._field_Kind, (*_167020_it2.alloc)._field_Kind))) {
								_1ab69a5dd_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_166417_t2))._field_Ident, &__jule_any_type4)}));
								__jule_func_result=false;
								goto _iter_end_1b003d411;
							};
						}
						_iter_next_1b003d411:;
						++it;
						_167017_j++;
						goto _iter_begin_1b003d411;
					}
					_iter_end_1b003d411:;
				};
				if (((*(_165748_t)) == _166417_t2)) {
					_1ab69a5dd_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_165748_t))))._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				} else {
					_209e0d4d9_StrBuilder _168421_message = static__209e0d918_New(64LL);;
					__jule_func_result=(__jule_func_result && _1ab6ab544_catchTraitInheritCycle(_self_, (*(_165748_t)), _166417_t2, &(_168421_message)));
					if ((_209e0ec05_Len(&_168421_message) > 0LL)) {
						jule::Str _168725_errMsg = _209e0e771_Str(&_168421_message);;
						_209e0e96e_Clear(&_168421_message);
						_1ab6b12c4_pushCycleError(_self_, &((*((*(_165748_t))))._field_Ident), &((*(_166417_t2))._field_Ident), &(_168421_message));
						_168725_errMsg+=_209e0e771_Str(&_168421_message);
						_1ab69a5dd_pushErr(_self_, (*(*_165921_it.alloc)._field_Decl.alloc)._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168725_errMsg, &__jule_any_type4)}));
					};
				};
			}
			_iter_next_1b0039eac:;
			++it;
			_165914_i++;
			goto _iter_begin_1b0039eac;
		}
		_iter_end_1b0039eac:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab6abb3d_checkTraitDeclInherits(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _169847_t) {
	{
		auto expr = &((*((*(_169847_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0044cdb:;
		if (it != expr_end) {
			jule::I32 _169914_i = it - expr->begin();
			jule::Ptr<_1abe4a002_TypeSymbol> _169921_it = *it;
			{
				jule::Ptr<_1abd69a59_Trait> _170017_t1 = _1abe46c8a_Trait((*(_169921_it))._field_Kind.ptr());;
				{
					auto expr = &((*((*(_169847_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b00462e8:;
					if (it != expr_end) {
						jule::I32 _170118_j = it - expr->begin();
						jule::Ptr<_1abe4a002_TypeSymbol> _170125_it2 = *it;
						{
							if ((_170118_j == _169914_i)) {
								goto _iter_next_1b00462e8;
							};
							jule::Ptr<_1abd69a59_Trait> _170521_t2 = _1abe46c8a_Trait((*(_170125_it2))._field_Kind);;
							{
								auto expr = &((*(_170017_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b0047a69:;
								if (it != expr_end) {
									jule::Ptr<_1abd566a0_Fn> _170629_t1m = *it;
									{
										jule::Ptr<_1abd566a0_Fn> _170725_t2m = _1abd6a708_FindMethod(_170521_t2.ptr(), (*(_170629_t1m))._field_Ident);;
										if ((_170725_t2m == nullptr)) {
											goto _iter_next_1b0047a69;
										};
										jule::Ptr<_1abd59681_FnIns> _171121_t1f = _1ab6a5120_getTraitCheckFnKind(_self_, &(_170629_t1m));;
										jule::Ptr<_1abd59681_FnIns> _171221_t2f = _1ab6a5120_getTraitCheckFnKind(_self_, &(_170725_t2m));;
										if ((!(_1abd5a5e9_equalTrait(_171121_t1f, &(_171221_t2f))))) {
											_1ab69a5dd_pushErr(_self_, (*((*_169921_it.alloc)._field_Decl))._field_Token, jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*((*(_169847_t))))._field_Ident, &__jule_any_type4),jule::Any((*_170521_t2.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1abd5b52e_GetKindStr(_171121_t1f, true), &__jule_any_type4),jule::Any(_1abd5b52e_GetKindStr(_171221_t2f.ptr(), true), &__jule_any_type4)}));
											return;;
										};
									}
									_iter_next_1b0047a69:;
									++it;
									goto _iter_begin_1b0047a69;
								}
								_iter_end_1b0047a69:;
							};
						}
						_iter_next_1b00462e8:;
						++it;
						_170118_j++;
						goto _iter_begin_1b00462e8;
					}
					_iter_end_1b00462e8:;
				};
			}
			_iter_next_1b0044cdb:;
			++it;
			_169914_i++;
			goto _iter_begin_1b0044cdb;
		}
		_iter_end_1b0044cdb:;
	};
}



inline void _1ab6abde6_checkTraitDeclMethod(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _172345_f) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_172345_f))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abd0d03b_IsAnonIdent((*((*(_172345_f))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_172345_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*((*(_172345_f))))._field_sema=_self_;
	_1ab6ab08d_checkFnDeclPrototype(_self_, _172345_f);
	jule::Ptr<_1abd59681_FnIns> _173113_ins = _1abd57e10_instance((*(_172345_f)));;
	_1ab6a6572_reloadFnInsTypes(_self_, _173113_ins);
	(*(_173113_ins))._field_reloaded=true;
	_1abd5821d_appendInstance((*(_172345_f)).ptr(), &(_173113_ins));
}



inline void _1ab6ac19e_checkTraitDeclMethods(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _173746_t) {
	{
		auto expr = &((*((*(_173746_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b004eb92:;
		if (it != expr_end) {
			jule::I32 _173814_i = it - expr->begin();
			jule::Ptr<_1abd566a0_Fn> _173821_f = *it;
			{
				_1ab6abde6_checkTraitDeclMethod(_self_, &(_173821_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1abd6ad8a_findMethodInherit((*(_173746_t)).ptr(), &((*(_173821_f))._field_Ident)) != nullptr)) {
					_1ab69a5dd_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
					_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1b004eb92;
				};
				_julec_label_1b00515ab:;
				{
					auto expr = &((*((*(_173746_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b0052b95:;
					if (it != expr_end) {
						jule::I32 _175417_j = it - expr->begin();
						jule::Ptr<_1abd566a0_Fn> _175420_jf = *it;
						{
							{
								
								if ((_175417_j >= _173814_i)) {
									_case_begin_1b0053712:;
									{
										goto _iter_end_1b0052b95;
									}
								}
								else if (((*_173821_f.alloc)._field_Ident == (*(_175420_jf))._field_Ident)) {
									_case_begin_1b005379a:;
									{
										_1ab69a5dd_pushErr(_self_, (*_173821_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_173821_f.alloc)._field_Ident, &__jule_any_type4)}));
										_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b0052b95;
									}
								}
								_match_end_1b0053613:;
							};
						}
						_iter_next_1b0052b95:;
						++it;
						_175417_j++;
						goto _iter_begin_1b0052b95;
					}
					_iter_end_1b0052b95:;
				};
			}
			_iter_next_1b004eb92:;
			++it;
			_173814_i++;
			goto _iter_begin_1b004eb92;
		}
		_iter_end_1b004eb92:;
	};
}



inline void _1ab6ac457_checkTraitDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd69a59_Trait>* _177339_t) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_177339_t))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_177339_t))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab69b303_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_177339_t))), &((*((*(_177339_t))))._field_Ident), false)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_177339_t))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_177339_t))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab6abb3d_checkTraitDeclInherits(_self_, _177339_t);
	_1ab6ac19e_checkTraitDeclMethods(_self_, _177339_t);
}



inline jule::Bool _1ab6ac6dd_checkTraitDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0058b02:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _178721_t = *it;
			{
				_1ab6ac457_checkTraitDecl(_self_, &(_178721_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b0058b02:;
			++it;
			goto _iter_begin_1b0058b02;
		}
		_iter_end_1b0058b02:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab6acad9_checkTraitImplMethods(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd69a59_Trait>* _179745_base, jule::Ptr<_1ab650120_Impl>* _179760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_179760_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b005a5b5:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> *_179916_f = it;
			{
				if ((_1abd6a708_FindMethod((*(_179745_base)).ptr(), (*((*(_179916_f))))._field_Ident) == nullptr)) {
					_1ab69a5dd_pushErr(_self_, (*(*(_179916_f)).alloc)._field_Token, jule::Str::lit("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_179745_base))))._field_Ident, &__jule_any_type4),jule::Any((*(*(_179916_f)).alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b005a5b5:;
			++it;
			goto _iter_begin_1b005a5b5;
		}
		_iter_end_1b005a5b5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6aced5_implToStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _180837_dest, jule::Ptr<_1ab650120_Impl>* _180857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_180857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b005ccd2:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _181221_f = *it;
			{
				if (((_1abd4234a_FindMethod((*(_180837_dest)).ptr(), (*(_181221_f))._field_Ident, (*_181221_f.alloc)._field_Statically) != nullptr) || (_1abd429cc_FindField((*(_180837_dest)).ptr(), (*_181221_f.alloc)._field_Ident) != nullptr))) {
					_1ab69a5dd_pushErr(_self_.ptr(), (*_181221_f.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_181221_f.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b005ccd2;
				};
				if ((((*((*(_180837_dest))))._field_Generics.len() > 0LL) && ((*_181221_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_181221_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b0060bc5:;
						if (it != expr_end) {
							jule::Ptr<_1abd2ca50_GenericDecl> _182024_fg = *it;
							{
								{
									auto expr = &((*((*(_180837_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b0061621:;
									if (it != expr_end) {
										jule::Ptr<_1abd2ca50_GenericDecl> _182128_dg = *it;
										{
											if (((*(_182024_fg))._field_Ident == (*(_182128_dg))._field_Ident)) {
												_1ab69a5dd_pushErr(_self_, (*_182024_fg.alloc)._field_Token, jule::Str::lit("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b0061621:;
										++it;
										goto _iter_begin_1b0061621;
									}
									_iter_end_1b0061621:;
								};
							}
							_iter_next_1b0060bc5:;
							++it;
							goto _iter_begin_1b0060bc5;
						}
						_iter_end_1b0060bc5:;
					};
				};
				_1ab69b666_checkDirectives(_self_, &((*_181221_f.alloc)._field_Directives), jule::Any(_181221_f, &__jule_any_type63));
				(*_181221_f.alloc)._field_sema=_self_;
				(*_181221_f.alloc)._field_Owner=(*(_180837_dest));
				{ jule::Slice<jule::Ptr<_1abd566a0_Fn>> &__jule_push_dest = (*((*(_180837_dest))))._field_Methods; __jule_push_dest.push(_181221_f); };
			}
			_iter_next_1b005ccd2:;
			++it;
			goto _iter_begin_1b005ccd2;
		}
		_iter_end_1b005ccd2:;
	};
	{
		auto expr = &((*((*(_180857_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b005d1ab:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _183721_v = *it;
			{
				;
				if (((_1abd4234a_FindMethod((*(_180837_dest)).ptr(), (*(_183721_v))._field_Ident, true) != nullptr) || (_1abd4268b_FindStatic((*(_180837_dest)).ptr(), (*_183721_v.alloc)._field_Ident) != nullptr))) {
					_1ab69a5dd_pushErr(_self_, (*_183721_v.alloc)._field_Token, jule::Str::lit("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*((*(_180837_dest))))._field_Ident, &__jule_any_type4),jule::Any((*_183721_v.alloc)._field_Ident, &__jule_any_type4)}));
					__jule_func_result=false;
					goto _iter_next_1b005d1ab;
				};
				{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*((*(_180837_dest))))._field_Statics; __jule_push_dest.push(_183721_v); };
			}
			_iter_next_1b005d1ab:;
			++it;
			goto _iter_begin_1b005d1ab;
		}
		_iter_end_1b005d1ab:;
	};
	return __jule_func_result;;
}



inline void _1ab6ad28d_implTrait(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _185034_decl) {
	jule::Ptr<_1abe42d30_TypeKind> _185113_base_t = _1ab6a1d97_selectType(_self_, &((*((*(_185034_decl))))._field_Base));;
	if ((_185113_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1abd69a59_Trait> _185513_base = _1abe46c8a_Trait(_185113_base_t.ptr());;
	if ((_185513_base == nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*((*((*(_185034_decl))))._field_Base))._field_Token, jule::Str::lit("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str(_185113_base_t.ptr()), &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _186213_destT = _1ab6a1d97_selectType(_self_, &((*((*(_185034_decl))))._field_Dest));;
	if ((_186213_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _186613_destS = _1abe46a04_Struct(_186213_destT.ptr());;
	if ((_186613_destS == nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*((*((*(_185034_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str(_186213_destT.ptr()), &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd416ce_Struct> _187313_dest = (*(_186613_destS))._field_Decl;;
	if ((_1abd112c5_Dir((*((*(_187313_dest))._field_Token))._field_File.ptr()) != _1abd112c5_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_185034_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1abda7514_pushImplemented(_185513_base, &(_187313_dest));
	_1abda7800_pushImplements(&(_187313_dest), _185513_base);
	if (((*((*(_185034_decl))))._field_Statics.len() > 0LL)) {
		_1ab69a5dd_pushErr(_self_, (*((*((*(_185034_decl))))._field_Statics[0LL]))._field_Token, jule::Str::lit("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1ab6acad9_checkTraitImplMethods(_self_, &(_185513_base), _185034_decl)))) {
			_case_begin_1b00707b7:;
		}
		else if ((!(_1ab6aced5_implToStruct(_self_, &(_187313_dest), _185034_decl)))) {
			_case_begin_1b0070850:;
		}
		_match_end_1b006e530:;
	};
}



inline void _1ab6ad546_implStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _189335_decl) {
	jule::Ptr<_1abe42d30_TypeKind> _189413_destT = _1ab6a1d97_selectType(_self_, &((*((*(_189335_decl))))._field_Dest));;
	if ((_189413_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _189813_destS = _1abe46a04_Struct(_189413_destT.ptr());;
	if ((_189813_destS == nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*((*((*(_189335_decl))))._field_Dest))._field_Token, jule::Str::lit("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str(_189413_destT.ptr()), &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd416ce_Struct> _190513_dest = (*(_189813_destS))._field_Decl;;
	if ((_1abd112c5_Dir((*((*(_190513_dest))._field_Token))._field_File.ptr()) != _1abd112c5_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_189335_decl))))._field_Dest.alloc)._field_Token, jule::Str::lit("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1ab6aced5_implToStruct(_self_, &(_190513_dest), _189335_decl)))) {
			_case_begin_1b007638e:;
		}
		_match_end_1b00761a2:;
	};
}



inline void _1ab6ad7ee_implImpl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1ab650120_Impl>* _191733_decl) {
	{
		
		if (_1ab6504d8_IsTraitImpl((*(_191733_decl)).ptr())) {
			_case_begin_1b0076e0b:;
			{
				_1ab6ad28d_implTrait(_self_, _191733_decl);
			}
		}
		else if (_1ab65076e_IsStructImpl((*(_191733_decl)).ptr())) {
			_case_begin_1b0076ea5:;
			{
				_1ab6ad546_implStruct(_self_, _191733_decl);
			}
		}
		_match_end_1b0076ceb:;
	};
}



inline void _1ab6adb62_checkVarDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _192837_decl, jule::Trait _192853_l) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_192837_decl))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_192837_decl))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1abda948e_IsTypeInferred((*(_192837_decl)).ptr())) {
		if ((!(_1abda9208_IsInitialized((*(_192837_decl)).ptr())))) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1ab6a125e_checkType(_self_, &((*((*(_192837_decl))))._field_Kind), _192853_l);
	};
	if ((*((*(_192837_decl))))._field_Reference) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("references cannot be constant", 29), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables cannot be reference", 36), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1abda9208_IsInitialized((*(_192837_decl)).ptr())))) {
		if ((*((*(_192837_decl))))._field_Constant) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Statically) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*((*(_192837_decl))))._field_Reference) {
			_1ab69a5dd_pushErr(_self_, (*((*(_192837_decl))))._field_Token, jule::Str::lit("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1ab6ade1a_checkGlobalVarDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _196543_decl) {
	if (_1ab69b303_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_196543_decl))), &((*((*(_196543_decl))))._field_Ident), (*((*(_196543_decl))))._field_Binded)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_196543_decl))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*((*(_196543_decl))))._field_Binded && (*((*(_196543_decl))))._field_Constant)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_196543_decl))))._field_Binded)) && (!((*((*(_196543_decl))))._field_Constant))) && (!((*((*(_196543_decl))))._field_Statically)))) {
		_1ab69a5dd_pushErr(_self_, (*((*(_196543_decl))))._field_Token, jule::Str::lit("global variables must be static", 31), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1ab69b666_checkDirectives(_self_, &((*((*(_196543_decl))))._field_Directives), jule::Any((*(_196543_decl)), &__jule_any_type8));
	_1ab6adb62_checkVarDecl(_self_, _196543_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
}



inline jule::Bool _1ab6ae1a1_checkGlobalDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b008507e:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _198321_decl = *it;
			{
				_1ab6ade1a_checkGlobalVarDecl(_self_, &(_198321_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b008507e:;
			++it;
			goto _iter_begin_1b008507e;
		}
		_iter_end_1b008507e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab6ae59c_checkStructTraitImpl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _199345_strct, jule::Ptr<_1abd69a59_Trait>* _199366_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_199366_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0086943:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _199421_tf = *it;
			{
				jule::Bool _199517_exist = false;;
				jule::Ptr<_1abd566a0_Fn> _199617_sf = _1abd4234a_FindMethod((*(_199345_strct)).ptr(), (*(_199421_tf))._field_Ident, (*_199421_tf.alloc)._field_Statically);;
				jule::Ptr<_1abd59681_FnIns> _199713_tfK = _1ab6a5120_getTraitCheckFnKind(_self_, &(_199421_tf));;
				if ((_199617_sf != nullptr)) {
					jule::Ptr<_1abd59681_FnIns> _199921_sfK = _1ab6a5120_getTraitCheckFnKind(_self_, &(_199617_sf));;
					_199517_exist=_1abd5a5e9_equalTrait(_199713_tfK, &(_199921_sfK));
				};
				if (_199517_exist) {
					jule::Ptr<_1abd1ec62_Directive> _200317_d = _1abe3a2cd_findDirective(&((*_199617_sf.alloc)._field_Directives), jule::Str::lit("deprecated", 10));;
					if ((_200317_d != nullptr)) {
						_1ab69a5dd_pushErr(_self_, (*_200317_d.alloc)._field_Tag, jule::Str::lit("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ab69a5dd_pushErr(_self_, (*((*(_199345_strct))))._field_Token, jule::Str::lit("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*((*(_199366_trt))))._field_Ident, &__jule_any_type4),jule::Any(_1abd5b52e_GetKindStr(_199713_tfK, true), &__jule_any_type4)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b0086943:;
			++it;
			goto _iter_begin_1b0086943;
		}
		_iter_end_1b0086943:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6ae8dd_checkStructImpls(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _201741_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_201741_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b008c680:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _201921_trt = *it;
			{
				__jule_func_result=(_1ab6ae59c_checkStructTraitImpl(_self_, _201741_s, &(_201921_trt)) && __jule_func_result);
			}
			_iter_next_1b008c680:;
			++it;
			goto _iter_begin_1b008c680;
		}
		_iter_end_1b008c680:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1ab6aec2e_checkStructFields(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _202542_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_202542_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b008db15:;
		if (it != expr_end) {
			jule::Ptr<_1abd3d7a8_Field> _202721_f = *it;
			{
				(*(_202721_f))._field_Owner=(*(_202542_st));
				{
					auto expr = &((*((*(_202542_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b008e82a:;
					if (it != expr_end) {
						jule::Ptr<_1abd3d7a8_Field> _202920_cf = *it;
						{
							if ((_202721_f == _202920_cf)) {
								goto _iter_end_1b008e82a;
							} else if (((*_202721_f.alloc)._field_Ident == (*(_202920_cf))._field_Ident)) {
								_1ab69a5dd_pushErr(_self_.ptr(), (*_202721_f.alloc)._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*_202721_f.alloc)._field_Ident, &__jule_any_type4)}));
								_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b008e82a:;
						++it;
						goto _iter_begin_1b008e82a;
					}
					_iter_end_1b008e82a:;
				};
			}
			_iter_next_1b008db15:;
			++it;
			goto _iter_begin_1b008db15;
		}
		_iter_end_1b008db15:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ab6aeed7_checkStructDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _204240_s) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_204240_s))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_204240_s))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1ab69b303_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_204240_s))), &((*((*(_204240_s))))._field_Ident), (*((*(_204240_s))))._field_Binded)) {
		_1ab69a5dd_pushErr(_self_, (*((*(_204240_s))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_204240_s))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1ab69b666_checkDirectives(_self_, &((*((*(_204240_s))))._field_Directives), jule::Any((*(_204240_s)), &__jule_any_type64));
	{
		
		if ((!(_1ab6aa312_checkDeclGenerics(_self_, &((*((*(_204240_s))))._field_Generics))))) {
			_case_begin_1b0094588:;
		}
		else if ((!(_1ab6aec2e_checkStructFields(_self_, _204240_s)))) {
			_case_begin_1b00945ee:;
		}
		else if ((!(_1ab6ae8dd_checkStructImpls(_self_, _204240_s)))) {
			_case_begin_1b0094665:;
		}
		else if ((!(_1ab6b0b20_checkFuncDeclsBy(_self_, &((*((*(_204240_s))))._field_Methods))))) {
			_case_begin_1b00946cb:;
		}
		_match_end_1b0094456:;
	};
}



inline jule::Bool _1ab6b026d_checkStructDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1234b12:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _206221_s = *it;
			{
				_1ab6aeed7_checkStructDecl(_self_, &(_206221_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b1234b12:;
			++it;
			goto _iter_begin_1b1234b12;
		}
		_iter_end_1b1234b12:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab6b0526_checkAnonFuncDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _207242_f) {
	(*((*(_207242_f))))._field_sema=_self_;
	_1ab6ab08d_checkFnDeclPrototype(_self_, _207242_f);
}



inline void _1ab6b07ce_checkFuncDecl(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _207738_f) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_207738_f))))._field_Ident)) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1abd5765c_IsAnon((*(_207738_f)).ptr())) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_207738_f))))._field_Token, jule::Str::lit("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1ab69b666_checkDirectives(_self_, &((*((*(_207738_f))))._field_Directives), jule::Any((*(_207738_f)), &__jule_any_type63));
	_1ab6b0526_checkAnonFuncDecl(_self_, _207738_f);
	if ((((*((*(_207738_f))))._field_Owner == nullptr) && _1ab69b303_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_207738_f))), &((*((*(_207738_f))))._field_Ident), (*((*(_207738_f))))._field_Binded))) {
		if ((*((*(_207738_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1abd566a0_Fn> _208917_init = _1ab699037_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_208917_init != nullptr)) {
				return;;
			};
		};
		_1ab69a5dd_pushErr(_self_, (*((*(_207738_f))))._field_Token, jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*((*(_207738_f))))._field_Ident, &__jule_any_type4)}));
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab6b0b20_checkFuncDeclsBy(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _209941_funcs) {
	{
		auto expr = _209941_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b123bd7d:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _210021_f = *it;
			{
				_1ab6b07ce_checkFuncDecl(_self_, &(_210021_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b123bd7d:;
			++it;
			goto _iter_begin_1b123bd7d;
		}
		_iter_end_1b123bd7d:;
	};
	return true;;
}



inline jule::Bool _1ab6b0da6_checkFuncDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1ab6b0b20_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1ab6b12c4_pushCycleError(_1ab6979a3_Sema* _self_, jule::Str* _211530_st1, jule::Str* _211541_st2, _209e0d4d9_StrBuilder* _211556_message) {
	;
	jule::Str _21179_refersTo = _1eb22e594_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_211530_st1)), &__jule_any_type4),jule::Any((*(_211541_st2)), &__jule_any_type4)}));;
	jule::Str _21189_m = _209e0e771_Str(_211556_message);;
	_209e0de79_WriteStr(_211556_message, _20b0d9a16_Repeat(jule::Str::lit(" ", 1), 7LL));
	_209e0de79_WriteStr(_211556_message, _21179_refersTo);
	_209e0e232_WriteByte(_211556_message, '\n');
	_209e0de79_WriteStr(_211556_message, _21189_m);
}



inline void _1ab6b1978_checkPackageDecls(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12439cd:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _214221_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _214221_f);
				if ((!(_1ab6a8233_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b12439cd:;
			++it;
			goto _iter_begin_1b12439cd;
		}
		_iter_end_1b12439cd:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1243e73:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _214921_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_, _214921_f);
				if ((!(_1ab6ac6dd_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b1243e73:;
			++it;
			goto _iter_begin_1b1243e73;
		}
		_iter_end_1b1243e73:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1244e52:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _215621_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_, _215621_f);
				if ((!(_1ab6ae1a1_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b1244e52:;
			++it;
			goto _iter_begin_1b1244e52;
		}
		_iter_end_1b1244e52:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1245e86:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _216321_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_, _216321_f);
				{
					
					if ((!(_1ab6b0da6_checkFuncDecls(_self_)))) {
						_case_begin_1b1247592:;
					}
					else if ((!(_1ab6b026d_checkStructDecls(_self_)))) {
						_case_begin_1b124763b:;
					}
					else {
						_case_begin_1b1246eed:;
						{
							goto _iter_next_1b1245e86;
						}
					}
					_match_end_1b1247509:;
				};
				return;;
			}
			_iter_next_1b1245e86:;
			++it;
			goto _iter_begin_1b1245e86;
		}
		_iter_end_1b1245e86:;
	};
}



inline void _1ab6b1cdb_checkDataForTypeInference(_1ab6979a3_Sema* _self_, jule::Ptr<_1abe11936_Data>* _217545_d, jule::Ptr<_1abd0a38a_Token>* _217556_err_token) {
	{
		
		if (_1abe11d21_IsNil((*(_217545_d)).ptr())) {
			_case_begin_1b12486e7:;
			{
				_1ab69a5dd_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1abe120a7_IsVoid((*(_217545_d)).ptr())) {
			_case_begin_1b1248791:;
			{
				_1ab69a5dd_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_217545_d))))._field_Kind))._field_Variadic) {
			_case_begin_1b1248807:;
			{
				_1ab69a5dd_pushErr(_self_, (*(_217556_err_token)), jule::Str::lit("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b12485c6:;
	};
}



inline void _1ab6b2094_checkVarValue(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _218738_v) {
	if (_1abda948e_IsTypeInferred((*(_218738_v)).ptr())) {
		(*((*(_218738_v))))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind});
		_1ab6b1cdb_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1ab6a7485_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*((*((*(_218738_v))))._field_Kind))._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1abe52229_Arr> _220017_arr = _1abe46251_Arr((*((*((*(_218738_v))))._field_Kind))._field_Kind.ptr());;
		if ((_220017_arr != nullptr)) {
			if ((*_220017_arr.alloc)._field_Auto) {
				jule::Ptr<_1abe52229_Arr> _220321_dataArr = _1abe46251_Arr((*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Kind.ptr());;
				if ((_220321_dataArr != nullptr)) {
					(*_220017_arr.alloc)._field_N=(*_220321_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1ab6a30eb_checkAssignType(_self_, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token)) {
			_1ab6a7485_checkValidityForInitExpr(_self_, (*((*(_218738_v))))._field_Mutable, (*((*(_218738_v))))._field_Reference, &((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind), &((*(*((*(_218738_v))))._field_Value.alloc)._field_Data), &((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_218738_v))))._field_Reference && (!(_1abe5e2e1_isValidForRef(&((*((*((*(_218738_v))))._field_Kind))._field_Kind)))))) {
		_1ab69a5dd_pushErr(_self_.ptr(), (*((*(_218738_v))))._field_Token, jule::Str::lit("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	};
	if ((*((*(_218738_v))))._field_Constant) {
		if (((!(_1abe1233d_IsConst((*((*((*(_218738_v))))._field_Value))._field_Data.ptr()))) && (!(_1abe4753d_comptime((*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_Kind.ptr()))))) {
			_1ab69a5dd_pushErr(_self_, (*((*(*((*(_218738_v))))._field_Value.alloc)._field_Expr))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_218738_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*(*((*(_218738_v))))._field_Value.alloc)._field_Data.alloc)._field_untyped=false;
	};
	if ((_1abe472a7_Tup((*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind) != nullptr)) {
		(*(*((*(_218738_v))))._field_Kind.alloc)._field_Kind=nullptr;
	};
}



inline void _1ab6b2407_evalVarValue(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _224037_decl, jule::Trait _224053_l) {
	if ((!(_1abda9208_IsInitialized((*(_224037_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1abe1365d_Eval> _224517_eval = nullptr;;
	if (((*((*(_224037_decl))))._field_Kind != nullptr)) {
		_224517_eval=_1ab6a234d_evalpd(_self_, _224053_l, (*(*((*(_224037_decl))))._field_Kind.alloc)._field_Kind, (*(_224037_decl)));
	} else {
		_224517_eval=_1ab6a234d_evalpd(_self_, _224053_l, nullptr, (*(_224037_decl)));
	};
	(*(_224517_eval))._field_immutable=(!((*((*(_224037_decl))))._field_Mutable));
	(*((*((*(_224037_decl))))._field_Value))._field_Data=_1abe318bd_evalExpr(_224517_eval, (*(*((*(_224037_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1ab6b276a_checkVar(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abda8d2e_Var>* _225733_decl, jule::Trait _225749_l) {
	_1ab6b2407_evalVarValue(_self_, _225733_decl, _225749_l);
	if (((*((*((*(_225733_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1ab6b2094_checkVarValue(_self_, _225733_decl);
}



inline void _1ab6b2968_checkGlobals(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b126016a:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _226721_decl = *it;
			{
				if ((*(_226721_decl))._field_Binded) {
					goto _iter_next_1b126016a;
				};
				if (((_1abda9208_IsInitialized(_226721_decl) && ((*((*_226721_decl.alloc)._field_Value))._field_Data == nullptr)) || (_1abda948e_IsTypeInferred(_226721_decl) && ((*((*_226721_decl.alloc)._field_Kind))._field_Kind == nullptr)))) {
					_1ab6b276a_checkVar(_self_, &(_226721_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
				};
			}
			_iter_next_1b126016a:;
			++it;
			goto _iter_begin_1b126016a;
		}
		_iter_end_1b126016a:;
	};
}



inline jule::Ptr<_1abd59681_FnIns> _1ab6b2d64_readyToCheckFn(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _228139_s, jule::Ptr<_1abd566a0_Fn>* _228159_f) {
	jule::Ptr<_1abd59681_FnIns> _228213_ins = _1abd57e10_instance((*(_228159_f)));;
	if (((*((*(_228159_f))))._field_Instances.len() != 0LL)) {
		return _228213_ins;;
	};
	(*(_228213_ins))._field_Owner=(*(_228139_s));
	_1abd5821d_appendInstance((*(_228159_f)).ptr(), &(_228213_ins));
	(*_228213_ins.alloc)._field_reloaded=true;
	if (_1ab6a6572_reloadFnInsTypes(_self_, _228213_ins)) {
		return _228213_ins;;
	};
	return nullptr;;
}



inline void _1ab6b31c7_checkTypeMethod(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _229540_s, jule::Ptr<_1abd566a0_Fn>* _229560_f) {
	if (((*((*(_229560_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1abd59681_FnIns> _230013_ins = (*((*(_229560_f))))._field_Instances[0LL];;
	if (((*((*(_230013_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1ab6b5b7a_checkFnIns(_self_, &(_230013_ins));
}



inline jule::Ptr<_1abd59681_FnIns> _1ab6b367d_checkStructInsOp(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _230841_s, jule::Ptr<_1abd566a0_Fn>* _230861_f, jule::Fn<jule::Bool,jule::Ptr<_1abd566a0_Fn>> _230869_p) {
	if (((((*(_230861_f)) == nullptr) || ((*((*(_230861_f))))._field_Generics.len() > 0LL)) || (!(_230869_p((*(_230861_f))))))) {
		return nullptr;;
	};
	return (*((*(_230861_f))))._field_Instances[0LL];;
}



inline jule::Bool _1ab6b3a79_checkStructEnv(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _231839_s, jule::Ptr<_1abd0a38a_Token> _231858_errorToken) {
	jule::Bool __jule_func_result = false;
	_1abe54bdd_typeChecker _231913_tc = _1abe54bdd_typeChecker{._field_s=(*((*((*(_231839_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_lookup=jule::Trait((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), ._field_referencer=jule::new_ptr<_1abe53bed_referencer>(_1abe53bed_referencer{._field_ident=(*(*((*(_231839_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_231839_s))))._field_Decl, &__jule_any_type64), }), ._field_refers=(*((*(_231839_s))))._field_Refers, };;
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		_231913_tc._field_useGenerics=jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>::alloc(0LL, (*((*(_231839_s))))._field_Generics.len());
		{
			auto expr = &((*((*(_231839_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b126b6d7:;
			if (it != expr_end) {
				jule::I32 _233218_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> _233225_g = *it;
				{
					jule::Ptr<_1abd2ca50_GenericDecl> _233321_decl = (*(*((*(_231839_s))))._field_Decl.alloc)._field_Generics[_233218_i];;
					{ jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> &__jule_push_dest = _231913_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Token=(*_233321_decl.alloc)._field_Token, ._field_Ident=(*(_233321_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_233225_g))._field_Kind}), })); };
				}
				_iter_next_1b126b6d7:;
				++it;
				_233218_i++;
				goto _iter_begin_1b126b6d7;
			}
			_iter_end_1b126b6d7:;
		};
	};
	jule::Ptr<_1abe0b5bd_SymbolTable> _234213_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ab69a1c0_setCurrentFile(_self_, _234213_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_231839_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1abe0b5bd_SymbolTable> _234617_file = _1ab6966e9_findFile(&((*_self_.alloc)._field_files), &((*(*(*((*(_231839_s))))._field_Decl.alloc)._field_Token.alloc)._field_File));;
		if ((_234617_file != nullptr)) {
			_1ab69a1c0_setCurrentFile(_self_, _234617_file);
		};
	};
	if (((*((*(_231839_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ab64ccbb_constraintChecker> _235317_cc = _1ab6a0d63_constraintChecker(_self_);;
		(*(_235317_cc))._field_et=_231858_errorToken;
		(*_235317_cc.alloc)._field_si=(*(_231839_s));
		(*_235317_cc.alloc)._field_genericsA=_231913_tc._field_useGenerics;
		(*_235317_cc.alloc)._field_uniq=true;
		if ((!(_1ab64dc01_check(_235317_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_231839_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _236617_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_231913_tc._field_useGenerics,(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_231839_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1274ee8:;
			if (it != expr_end) {
				jule::Ptr<_1abda8d2e_Var> _236825_v = *it;
				{
					_1ab6adb62_checkVarDecl(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
					_1ab6b276a_checkVar(_self_, &(_236825_v), jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _236617_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b1274ee8:;
				++it;
				goto _iter_begin_1b1274ee8;
			}
			_iter_end_1b1274ee8:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_231913_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1abe1365d_Eval> _237913_eval = _1ab6a2a8a_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
	(*((*(_231839_s))))._field_Comparable=(!((*(*((*(_231839_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_231839_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1278b12:;
		if (it != expr_end) {
			jule::Ptr<_1abd438ac_FieldIns> _238121_f = *it;
			{
				jule::Ptr<_1abe42d30_TypeKind> _238217_kind = _1abe5c388_checkDecl(&_231913_tc, &((*((*((*(_238121_f))._field_Decl))._field_Kind))._field_Decl));;
				__jule_func_result=((_238217_kind != nullptr) && __jule_func_result);
				if ((_238217_kind == nullptr)) {
					if (((_self_ != (*(*((*(_231839_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_231839_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
						(*(*(*((*(_231839_s))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1b1278b12;
				};
				(*_238121_f.alloc)._field_Kind=_238217_kind;
				(*((*(_231839_s))))._field_Mutable=((*((*(_231839_s))))._field_Mutable || ((!((*(*_238121_f.alloc)._field_Decl.alloc)._field_Mutable)) && _1abe446b1_Mutable((*_238121_f.alloc)._field_Kind)));
				(*((*(_231839_s))))._field_Comparable=((*((*(_231839_s))))._field_Comparable && _1abe4442a_Comparable((*_238121_f.alloc)._field_Kind));
				if (((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b1278b12;
				};
				(*(_237913_eval))._field_prefix=(*_238121_f.alloc)._field_Kind;
				(*_237913_eval.alloc)._field_field=_238121_f;
				(*_238121_f.alloc)._field_Default=_1abe318bd_evalExpr(_237913_eval, (*(*_238121_f.alloc)._field_Decl.alloc)._field_Default);
				if (((*_238121_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1b1278b12;
				};
				;
				_1ab6a30eb_checkAssignType(_self_, false, &((*_238121_f.alloc)._field_Kind), &((*_238121_f.alloc)._field_Default), (*((*(*_238121_f.alloc)._field_Decl.alloc)._field_Default))._field_Token);
			}
			_iter_next_1b1278b12:;
			++it;
			goto _iter_begin_1b1278b12;
		}
		_iter_end_1b1278b12:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ab6b3e75_precheckStructIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _241542_s, jule::Ptr<_1abd0a38a_Token> _241561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1ab6b3a79_checkStructEnv(_self_, _241542_s, _241561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*(_241542_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1283710:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _242021_f = *it;
			{
				if (((*(_242021_f))._field_Generics.len() == 0LL)) {
					if ((_1ab6b2d64_readyToCheckFn(_self_, _241542_s, &(_242021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b1283710:;
			++it;
			goto _iter_begin_1b1283710;
		}
		_iter_end_1b1283710:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab6b422d_checkStructIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns>* _243039_s) {
	{
		auto expr = &((*((*(_243039_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1285129:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _243121_f = *it;
			{
				_1ab6b31c7_checkTypeMethod(_self_, _243039_s, &(_243121_f));
			}
			_iter_next_1b1285129:;
			++it;
			goto _iter_begin_1b1285129;
		}
		_iter_end_1b1285129:;
	};
}



inline void _1ab6b44d6_checkTypeStruct(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_243640_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1286adc:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _244921_ins = *it;
			{
				_1ab6b422d_checkStructIns(_self_, &(_244921_ins));
			}
			_iter_next_1b1286adc:;
			++it;
			goto _iter_begin_1b1286adc;
		}
		_iter_end_1b1286adc:;
	};
}



inline void _1ab6b46d4_checkStructTypes(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1287a88:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _245521_s = *it;
			{
				_1ab6b44d6_checkTypeStruct(_self_, &(_245521_s));
			}
			_iter_next_1b1287a88:;
			++it;
			goto _iter_begin_1b1287a88;
		}
		_iter_end_1b1287a88:;
	};
}



inline void _1ab6b498c_checkStructInsOperators(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd4445c_StructIns> _246047_s) {
	{
		auto expr = &((*(_246047_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1288a12:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _246121_m = *it;
			{
				{
					auto &_match_expr{ (*(_246121_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1b1289183:;
						{
							(*(_246047_s))._field_Operators._field_Eq=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdaabcc_Eq);
							(*_246047_s.alloc)._field_Comparable=((*_246047_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1b128976b:;
						{
							(*(_246047_s))._field_Operators._field_Gt=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdaae96_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1b12897d2:;
						{
							(*(_246047_s))._field_Operators._field_GtEq=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdab260_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1b1289848:;
						{
							(*(_246047_s))._field_Operators._field_Lt=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdab529_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1b12898ae:;
						{
							(*(_246047_s))._field_Operators._field_LtEq=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdab7e3_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1b1289936:;
						{
							(*(_246047_s))._field_Operators._field_Shl=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdabe31_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1b12899ad:;
						{
							(*(_246047_s))._field_Operators._field_Shr=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdac1ea_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1b1289a35:;
						{
							(*(_246047_s))._field_Operators._field_Add=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdac4b4_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1b1289aac:;
						{
							(*(_246047_s))._field_Operators._field_Sub=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdac77d_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1b1289b34:;
						{
							(*(_246047_s))._field_Operators._field_Div=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdaca47_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1b1289bab:;
						{
							(*(_246047_s))._field_Operators._field_Mul=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdacd11_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1b1289c33:;
						{
							(*(_246047_s))._field_Operators._field_Mod=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdad0ca_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1b1289caa:;
						{
							(*(_246047_s))._field_Operators._field_BitAnd=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdad394_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1b1289d32:;
						{
							(*(_246047_s))._field_Operators._field_BitOr=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdad65d_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1b1289da9:;
						{
							(*(_246047_s))._field_Operators._field_BitXor=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdad927_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1b1289e31:;
						{
							(*(_246047_s))._field_Operators._field_Neg=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdae065_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1b1289ea8:;
						{
							(*(_246047_s))._field_Operators._field_Pos=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdae32e_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1b128a030:;
						{
							(*(_246047_s))._field_Operators._field_BitNot=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdae5e8_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1b128a0a7:;
						{
							(*(_246047_s))._field_Operators._field_AddAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdaec36_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1b128a12e:;
						{
							(*(_246047_s))._field_Operators._field_SubAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb0000_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1b128a1a6:;
						{
							(*(_246047_s))._field_Operators._field_DivAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb02b9_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1b128a22d:;
						{
							(*(_246047_s))._field_Operators._field_MulAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb0583_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1b128a2a5:;
						{
							(*(_246047_s))._field_Operators._field_ModAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb084c_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1b128a32c:;
						{
							(*(_246047_s))._field_Operators._field_ShlAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb0b16_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1b128a3a4:;
						{
							(*(_246047_s))._field_Operators._field_ShrAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb0dd0_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1b128a42b:;
						{
							(*(_246047_s))._field_Operators._field_BitOrAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb1199_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1b128a4a3:;
						{
							(*(_246047_s))._field_Operators._field_BitAndAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb1463_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1b128a52a:;
						{
							(*(_246047_s))._field_Operators._field_BitXorAssign=_1ab6b367d_checkStructInsOp(_self_, &(_246047_s), &(_246121_m), static__1abdb172c_BitXorAssign);
						}
					}
					_match_end_1b128945d:;
				};
			}
			_iter_next_1b1288a12:;
			++it;
			goto _iter_begin_1b1288a12;
		}
		_iter_end_1b1288a12:;
	};
}



inline void _1ab6b4c45_precheckStructType(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd416ce_Struct>* _252443_s) {
	if ((*((*(_252443_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252443_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1abd4445c_StructIns> _253517_ins = _1abd41b41_instance((*(_252443_s)));;
		(*(_253517_ins))._field_Checked=true;
		_1abd41e4e_appendInstance((*(_252443_s)).ptr(), &(_253517_ins));
		_1ab6b3e75_precheckStructIns(_self_, &(_253517_ins), nullptr);
	};
	_1ab6b498c_checkStructInsOperators(_self_, (*((*(_252443_s))))._field_Instances[0LL]);
}



inline void _1ab6b4e43_precheckStructTypes(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12a1431:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _254521_s = *it;
			{
				_1ab6b4c45_precheckStructType(_self_, &(_254521_s));
			}
			_iter_next_1b12a1431:;
			++it;
			goto _iter_begin_1b12a1431;
		}
		_iter_end_1b12a1431:;
	};
}



inline void _1ab6b51eb_checkRets(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _255033_f) {
	if (_1abd56b23_IsVoid((*((*(_255033_f))))._field_Decl.ptr())) {
		return;;
	};
	_1ab6b7671_missingRetChecker _25549_mrc = static__1ab6b7a39_new();;
	jule::Bool _25559_ok = _1abda716d_check(&_25549_mrc, (*((*(_255033_f))))._field_Scope);;
	if ((!(_25559_ok))) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_255033_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1ab6b555e_checkFnInsSc(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _256136_f, jule::Ptr<_1ab65ca34_scopeChecker>* _256152_sc) {
	_1ab695c9d_appendRetVars(&((*((*((*(_256152_sc))))._field_table))._field_Vars), _256136_f);
	_1ab696089_appendParamVars(&((*(*((*(_256152_sc))))._field_table.alloc)._field_Vars), _256136_f);
	_1ab696375_appendGenericTypeAliases(&((*(*((*(_256152_sc))))._field_table.alloc)._field_TypeAliases), _256136_f);
	_1ab66e837_check((*(_256152_sc)), &((*((*((*(_256136_f))))._field_Decl))._field_Scope), &((*((*(_256136_f))))._field_Scope));
	if ((!(_1ab660608_stopped((*(_256152_sc)).ptr())))) {
		_1ab6b51eb_checkRets(_self_, _256136_f);
	};
}



inline void _1ab6b58c2_checkFnInsCaller(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _257441_f, jule::Ptr<_1abd0a38a_Token> _257456_caller) {
	if ((*((*((*(_257441_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1abe0b5bd_SymbolTable> _257913_old = (*((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ab69a1c0_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _257913_old);
	});;
	jule::Ptr<_1abe0b5bd_SymbolTable> _258113_file = _1ab6966e9_findFile(&((*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_files), &((*((*(*((*(_257441_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_258113_file != nullptr)) {
		_1ab69a1c0_setCurrentFile((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema, _258113_file);
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _258613_sc = _1ab65271b_newScopeChecker(&((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema), (*(_257441_f)));;
	(*(_258613_sc))._field_calledFrom=_257456_caller;
	_1ab6b555e_checkFnInsSc(_self_.ptr(), _257441_f, &(_258613_sc));
	if (((*(*((*(_257441_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors);
		(*(*(*((*(_257441_f))))._field_Decl.alloc)._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1ab6b5b7a_checkFnIns(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd59681_FnIns>* _259635_f) {
	_1ab6b58c2_checkFnInsCaller(_self_, _259635_f, nullptr);
}



inline void _1ab6b5e33_checkFunc(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _260034_f) {
	if ((*((*(_260034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_260034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_260034_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12ae86d:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _261021_ins = *it;
			{
				_1ab6b5b7a_checkFnIns(_self_, &(_261021_ins));
			}
			_iter_next_1b12ae86d:;
			++it;
			goto _iter_begin_1b12ae86d;
		}
		_iter_end_1b12ae86d:;
	};
}



inline void _1ab6b61db_checkTestFn(_1ab6979a3_Sema* _self_, jule::Ptr<_1abd59681_FnIns>* _261535_f) {
	if ((*((*((*(_261535_f))))._field_Decl))._field_Public) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_261535_f))))._field_Decl.alloc)._field_Unsafety || (!(_1abd56b23_IsVoid((*((*(_261535_f))))._field_Decl)))) || ((*(*((*(_261535_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_261535_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*(*((*(_261535_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Reference)) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abe4e435_Sptr> _263313_sptr = _1abe45717_Sptr((*((*((*(_261535_f))))._field_Params[0LL]))._field_Kind.ptr());;
	if ((_263313_sptr == nullptr)) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _26409_s = _1abe46a04_Struct((*(_263313_sptr))._field_Elem.ptr());;
	if (((_26409_s == nullptr) || (!(_1ab67ca10_isStdPackage(&((*((*((*((*(_26409_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ab69a5dd_pushErr(_self_, (*(*((*(_261535_f))))._field_Decl.alloc)._field_Token, jule::Str::lit("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1ab69a951_pushSuggestion(_self_, jule::Str::lit("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab6b6494_precheckFunc(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Ptr<_1abd566a0_Fn>* _264837_f) {
	if ((*((*(_264837_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_264837_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1abd59681_FnIns> _265917_ins = _1abd57b79_instanceForce((*(_264837_f)));;
		{ jule::Slice<jule::Ptr<_1abd59681_FnIns>> &__jule_push_dest = (*((*(_264837_f))))._field_Instances; __jule_push_dest.push(_265917_ins); };
		jule::Bool _266113_ok = _1ab6a6572_reloadFnInsTypes(_self_, _265917_ins);;
		(*(_265917_ins))._field_reloaded=true;
		if ((_266113_ok && _1abe5d950_hasDirective(&((*((*(_264837_f))))._field_Directives), jule::Str::lit("test", 4)))) {
			_1ab6b61db_checkTestFn(_self_, &(_265917_ins));
		};
	};
}



inline void _1ab6b6692_precheckFuncs(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12bc947:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _267221_decl = *it;
			{
				{
					auto expr = &((*(_267221_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b12bd393:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _267325_m = *it;
						{
							_1ab6b6494_precheckFunc(_self_, &(_267325_m));
						}
						_iter_next_1b12bd393:;
						++it;
						goto _iter_begin_1b12bd393;
					}
					_iter_end_1b12bd393:;
				};
			}
			_iter_next_1b12bc947:;
			++it;
			goto _iter_begin_1b12bc947;
		}
		_iter_end_1b12bc947:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12bd717:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _267721_decl = *it;
			{
				_1ab6b6494_precheckFunc(_self_, &(_267721_decl));
			}
			_iter_next_1b12bd717:;
			++it;
			goto _iter_begin_1b12bd717;
		}
		_iter_end_1b12bd717:;
	};
}



inline void _1ab6b6890_checkFuncs(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12beb58:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _268421_decl = *it;
			{
				_1ab6b5e33_checkFunc(_self_, &(_268421_decl));
			}
			_iter_next_1b12beb58:;
			++it;
			goto _iter_begin_1b12beb58;
		}
		_iter_end_1b12beb58:;
	};
}



inline void _1ab6b6a8d_checkPackageTypes(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12c0939:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _269221_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _269221_f);
				_1ab6b2968_checkGlobals(_self_);
				_1ab6b6692_precheckFuncs(_self_);
				_1ab6b4e43_precheckStructTypes(_self_);
			}
			_iter_next_1b12c0939:;
			++it;
			goto _iter_begin_1b12c0939;
		}
		_iter_end_1b12c0939:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12c2485:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _270321_f = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_, _270321_f);
				_1ab6b6890_checkFuncs(_self_);
				_1ab6b46d4_checkStructTypes(_self_);
			}
			_iter_next_1b12c2485:;
			++it;
			goto _iter_begin_1b12c2485;
		}
		_iter_end_1b12c2485:;
	};
}



inline void _1ab6b6c8b_setFileSemaFields(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12c3a5d:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _271121_f = *it;
			{
				(*(_271121_f))._field_sema=_self_;
			}
			_iter_next_1b12c3a5d:;
			++it;
			goto _iter_begin_1b12c3a5d;
		}
		_iter_end_1b12c3a5d:;
	};
	{
		auto expr = &((*(*_self_.alloc)._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12c46b8:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _271421_st = *it;
			{
				(*(_271421_st))._field_sema=_self_;
			}
			_iter_next_1b12c46b8:;
			++it;
			goto _iter_begin_1b12c46b8;
		}
		_iter_end_1b12c46b8:;
	};
}



inline void _1ab6b6e89_setSemaFields(jule::Ptr<_1ab6979a3_Sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12c5378:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _272021_file = *it;
			{
				_1ab69a1c0_setCurrentFile(_self_.ptr(), _272021_file);
				_1ab6b6c8b_setFileSemaFields(_self_);
			}
			_iter_next_1b12c5378:;
			++it;
			goto _iter_begin_1b12c5378;
		}
		_iter_end_1b12c5378:;
	};
}



inline void _1ab6b7242_check(jule::Ptr<_1ab6979a3_Sema> _self_, jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _272630_files) {
	(*(_self_))._field_files=(*(_272630_files));
	_1ab69e05e_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab6b6e89_setSemaFields(_self_);
	_1ab69ea54_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab69e45a_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab69e658_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab6b1978_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1ab6b6a8d_checkPackageTypes(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6979a3_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1ab6b7671_missingRetChecker static__1ab6b7a39_new(void) {
	return _1ab6b7671_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1ab6b7d47_checkConditional(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab6561ae_Conditional> _277435_c) {
	{
		auto expr = &((*(_277435_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12ca9bb:;
		if (it != expr_end) {
			jule::Ptr<_1ab655994_If> _277521_elif = *it;
			{
				if ((_277521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1abda6d2c_checkScope(_self_, (*(_277521_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b12ca9bb:;
			++it;
			goto _iter_begin_1b12ca9bb;
		}
		_iter_end_1b12ca9bb:;
	};
	return (((*_277435_c.alloc)._field_Default != nullptr) && _1abda6d2c_checkScope(_self_, (*(*_277435_c.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1ab6b8188_checkMatch(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab659789_Match> _278629_m) {
	{
		auto expr = &((*(_278629_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12cca56:;
		if (it != expr_end) {
			jule::Ptr<_1ab65a2b2_Case> _278721_c = *it;
			{
				if ((_278721_c == nullptr)) {
					return false;;
				};
				jule::I32 _279113_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279213_ok = _1abda6d2c_checkScope(_self_, (*(_278721_c))._field_Scope);;
				{
					
					if ((_279113_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b12ce4d6:;
						{
							return false;;
						}
					}
					else if ((!(_279213_ok))) {
						_case_begin_1b12ce580:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b12ce5e6;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b12ce5e6:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_278721_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b12cca56;
						}
					}
					_match_end_1b12ce43c:;
				};
			}
			_iter_next_1b12cca56:;
			++it;
			goto _iter_begin_1b12cca56;
		}
		_iter_end_1b12cca56:;
	};
	return (((*_278629_m.alloc)._field_Default != nullptr) && _1abda6d2c_checkScope(_self_, (*(*_278629_m.alloc)._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1abda69db_checkInfIter(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab6564ab_InfIter> _281231_it) {
	jule::I32 _28139_n = (*(_self_))._field_breaked.len();;
	if (_1abda6d2c_checkScope(_self_, (*(_281231_it))._field_Scope)) {
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
		return true;;
	};
	if ((_28139_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281913_itaddr = static_cast<jule::Uintptr>(_281231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_28139_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b12d3397:;
			if (it != expr_end) {
				jule::Uintptr _282020_addr = *it;
				{
					if ((_281913_itaddr == _282020_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
						return false;;
					};
				}
				_iter_next_1b12d3397:;
				++it;
				goto _iter_begin_1b12d3397;
			}
			_iter_end_1b12d3397:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _28139_n);;
	};
	return true;;
}



inline jule::Bool _1abda6d2c_checkScope(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab655576_Scope> _283129_s) {
	if ((_283129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_283129_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b12d4992:;
		if (it != expr_end) {
			jule::Any _283521_st = *it;
			{
				{
					auto &_match_expr{ _283521_st };
					
					if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1b12d5663:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b12d5443:;
						{
							jule::Uintptr _284117_addr = (*(_283521_st.unsafe_cast_ptr<_1ab657b1c_BreakSt>()))._field_It;;
							if ((_284117_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284117_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type40) {
						_case_begin_1b12d56da:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b12d5762:;
						{
							if (_1abda69db_checkInfIter(_self_, _283521_st.unsafe_cast_ptr<_1ab6564ab_InfIter>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b12d57d9:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b12d5861:;
						{
							if (_1abda6d2c_checkScope(_self_, _283521_st.unsafe_cast_ptr<_1ab655576_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b12d58d8:;
						{
							{
								auto &_match_expr{ (*(_283521_st.cast_ptr<_1abe11936_Data>(&__jule_any_type23)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type22) {
									_case_begin_1b12d9678:;
									{
										return true;;
									}
								}
								_match_end_1b12d9612:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1b12d5960:;
						{
							if (_1ab6b7d47_checkConditional(_self_, _283521_st.unsafe_cast_ptr<_1ab6561ae_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1b12d59d7:;
						{
							if (_1ab6b8188_checkMatch(_self_, _283521_st.unsafe_cast_ptr<_1ab659789_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1b12d5553:;
				};
			}
			_iter_next_1b12d4992:;
			++it;
			goto _iter_begin_1b12d4992;
		}
		_iter_end_1b12d4992:;
	};
	return false;;
}



inline jule::Bool _1abda716d_check(_1ab6b7671_missingRetChecker* _self_, jule::Ptr<_1ab655576_Scope> _287724_s) {
	return _1abda6d2c_checkScope(_self_, _287724_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ab6b7671_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abda9208_IsInitialized(_1abda8d2e_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1abda948e_IsTypeInferred(_1abda8d2e_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*((*(_self_))._field_Kind))._field_Decl == nullptr));;
}



inline jule::Bool _1abda9725_untypedConstant(_1abda8d2e_Var* _self_) {
	return (_1abda948e_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abda8d2e_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abdaa2c5_Dispose(jule::Ptr<_1abd566a0_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && ((*_1023_f.alloc)._field_Owner != nullptr)) && (*_1023_f.alloc)._field_Ident.equal("Dispose", 7)) && (!((*_1023_f.alloc)._field_Statically))) && (!((*_1023_f.alloc)._field_Unsafety))) && _1abd56b23_IsVoid(_1023_f)) && ((*_1023_f.alloc)._field_Generics.len() == 0LL)) && ((*_1023_f.alloc)._field_Params.len() == 1LL)) && (*((*_1023_f.alloc)._field_Params[0LL]))._field_Mutable) && (!(_1abd5557d_IsRef((*_1023_f.alloc)._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1abdaa58e_Str(jule::Ptr<_1abd566a0_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || ((*(_2419_f))._field_Owner == nullptr)) || (!(*(_2419_f))._field_Ident.equal("Str", 3))) || (*(_2419_f))._field_Statically) || (*(_2419_f))._field_Unsafety) || _1abd56b23_IsVoid(_2419_f.ptr())) || ((*(_2419_f))._field_Generics.len() != 0LL)) || ((*(_2419_f))._field_Params.len() != 1LL)) || (*((*(_2419_f))._field_Params[0LL]))._field_Mutable) || _1abd5557d_IsRef((*(_2419_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _3813_ins = (*(_2419_f))._field_Instances[0LL];;
	jule::Ptr<_1abe4a909_Prim> _399_prim = _1abe45481_Prim((*(_3813_ins))._field_Result.ptr());;
	if ((_399_prim == nullptr)) {
		return false;;
	};
	return _1abe4dd91_IsStr(_399_prim.ptr());;
}



inline jule::Bool static__1abdaa913_logical(jule::Ptr<_1abd566a0_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*((*(_4624_f))))._field_Ident != _4632_ident)) || ((*((*(_4624_f))))._field_Owner == nullptr)) || ((*((*(_4624_f))))._field_Instances.len() == 0LL)) || (*((*(_4624_f))))._field_Statically) || (*((*(_4624_f))))._field_Unsafety) || _1abd56b23_IsVoid((*(_4624_f)).ptr())) || ((*((*(_4624_f))))._field_Generics.len() != 0LL)) || ((*((*(_4624_f))))._field_Params.len() != 2LL)) || (*((*((*(_4624_f))))._field_Params[0LL]))._field_Mutable) || _1abd5557d_IsRef((*((*(_4624_f))))._field_Params[0LL].ptr())) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_4624_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _6313_ins = (*((*(_4624_f))))._field_Instances[0LL];;
	jule::Ptr<_1abe4a909_Prim> _649_prim = _1abe45481_Prim((*(_6313_ins))._field_Result.ptr());;
	if (((_649_prim == nullptr) || (!(_1abe4db0a_IsBool(_649_prim.ptr()))))) {
		return false;;
	};
	return ((*_6313_ins.alloc)._field_Owner == _1abe46a04_Struct((*((*_6313_ins.alloc)._field_Params[1LL]))._field_Kind.ptr()));;
}



inline jule::Bool static__1abdaabcc_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _7218_f) {
	return static__1abdaa913_logical(&(_7218_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1abdaae96_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _7718_f) {
	return static__1abdaa913_logical(&(_7718_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1abdab260_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _8220_f) {
	return static__1abdaa913_logical(&(_8220_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1abdab529_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _8718_f) {
	return static__1abdaa913_logical(&(_8718_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1abdab7e3_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _9220_f) {
	return static__1abdaa913_logical(&(_9220_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1abdabb67_result(jule::Ptr<_1abd566a0_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*((*(_9623_f))))._field_Ident != _9631_ident)) || ((*((*(_9623_f))))._field_Owner == nullptr)) || ((*((*(_9623_f))))._field_Instances.len() == 0LL)) || (*((*(_9623_f))))._field_Statically) || (*((*(_9623_f))))._field_Unsafety) || _1abd56b23_IsVoid((*(_9623_f)).ptr())) || ((*((*(_9623_f))))._field_Generics.len() != 0LL)) || ((*((*(_9623_f))))._field_Params.len() != 2LL)) || (*((*((*(_9623_f))))._field_Params[0LL]))._field_Mutable) || _1abd5557d_IsRef((*((*(_9623_f))))._field_Params[0LL].ptr())) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_9623_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _11313_ins = (*((*(_9623_f))))._field_Instances[0LL];;
	return (_1abe46a04_Struct((*(_11313_ins))._field_Result.ptr()) == (*_11313_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1abdabe31_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _11819_f) {
	return static__1abdabb67_result(&(_11819_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1abdac1ea_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _12319_f) {
	return static__1abdabb67_result(&(_12319_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1abdac4b4_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _12819_f) {
	return static__1abdabb67_result(&(_12819_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1abdac77d_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _13319_f) {
	return static__1abdabb67_result(&(_13319_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1abdaca47_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _13819_f) {
	return static__1abdabb67_result(&(_13819_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1abdacd11_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _14319_f) {
	return static__1abdabb67_result(&(_14319_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1abdad0ca_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _14819_f) {
	return static__1abdabb67_result(&(_14819_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1abdad394_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _15322_f) {
	return static__1abdabb67_result(&(_15322_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1abdad65d_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _15821_f) {
	return static__1abdabb67_result(&(_15821_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1abdad927_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _16322_f) {
	return static__1abdabb67_result(&(_16322_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1abdadc9b_unary(jule::Ptr<_1abd566a0_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*((*(_16722_f))))._field_Ident != _16730_ident)) || ((*((*(_16722_f))))._field_Owner == nullptr)) || ((*((*(_16722_f))))._field_Instances.len() == 0LL)) || (*((*(_16722_f))))._field_Statically) || (*((*(_16722_f))))._field_Unsafety) || _1abd56b23_IsVoid((*(_16722_f)).ptr())) || ((*((*(_16722_f))))._field_Generics.len() != 0LL)) || ((*((*(_16722_f))))._field_Params.len() != 1LL)) || (*((*((*(_16722_f))))._field_Params[0LL]))._field_Mutable) || _1abd5557d_IsRef((*((*(_16722_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _18213_ins = (*((*(_16722_f))))._field_Instances[0LL];;
	return (_1abe46a04_Struct((*(_18213_ins))._field_Result.ptr()) == (*_18213_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1abdae065_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _18719_f) {
	return static__1abdadc9b_unary(&(_18719_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1abdae32e_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _19219_f) {
	return static__1abdadc9b_unary(&(_19219_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1abdae5e8_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _19722_f) {
	return static__1abdadc9b_unary(&(_19722_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1abdae96c_assign(jule::Ptr<_1abd566a0_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*((*(_20123_f))))._field_Ident != _20131_ident)) || ((*((*(_20123_f))))._field_Owner == nullptr)) || ((*((*(_20123_f))))._field_Instances.len() == 0LL)) || (*((*(_20123_f))))._field_Statically) || (*((*(_20123_f))))._field_Unsafety) || (!(_1abd56b23_IsVoid((*(_20123_f)).ptr())))) || ((*((*(_20123_f))))._field_Generics.len() != 0LL)) || ((*((*(_20123_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_20123_f))))._field_Params[0LL]))._field_Mutable))) || _1abd5557d_IsRef((*((*(_20123_f))))._field_Params[0LL].ptr())) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_20123_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1abdaec36_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _22125_f) {
	return static__1abdae96c_assign(&(_22125_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1abdb0000_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _22625_f) {
	return static__1abdae96c_assign(&(_22625_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1abdb02b9_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _23125_f) {
	return static__1abdae96c_assign(&(_23125_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1abdb0583_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _23625_f) {
	return static__1abdae96c_assign(&(_23625_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1abdb084c_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _24125_f) {
	return static__1abdae96c_assign(&(_24125_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1abdb0b16_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _24625_f) {
	return static__1abdae96c_assign(&(_24625_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1abdb0dd0_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _25125_f) {
	return static__1abdae96c_assign(&(_25125_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1abdb1199_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _25627_f) {
	return static__1abdae96c_assign(&(_25627_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1abdb1463_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _26128_f) {
	return static__1abdae96c_assign(&(_26128_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1abdb172c_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn> _26628_f) {
	return static__1abdae96c_assign(&(_26628_f), jule::Str::lit("BitXorAssign", 12));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abda9ba9_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1abde8ae9_pushErr(_1abde85ee_typeCompatibilityChecker* _self_, jule::Str _11926_fmt, jule::Slice<jule::Any> _11939_args) {
	_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11926_fmt, _11939_args);
}



inline jule::Bool _1abde8d80_checkTrait(_1abde85ee_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abe43e0d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd69a59_Trait> _12713_trt = _1abe46c8a_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12813_ref = false;;
	{
		
		if ((_1abe45717_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b132b126:;
			{
				_12813_ref=true;
				(*(_self_))._field_src=(*(_1abe45717_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1abe46a04_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b132b1c0;
			}
		}
		else if ((_1abe46a04_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b132b1c0:;
			{
				jule::Ptr<_1abd4445c_StructIns> _13813_s = _1abe46a04_Struct((*(_self_))._field_src);;
				if ((!(_1abd42d1d_IsImplements((*(_13813_s))._field_Decl.ptr(), _12713_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12813_ref)) && _1abde719c_traitHasReferenceReceiver(&(_12713_trt)))) {
					_1abde8ae9_pushErr(_self_, jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe46c8a_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1b132b247:;
			{
				jule::Ptr<_1abd69a59_Trait> _14817_base = _1abe46c8a_Trait((*(_self_))._field_src);;
				if ((_12713_trt == _14817_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b1331318:;
				{
					auto expr = &((*(_14817_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b13313e5:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _15320_s1 = *it;
						{
							{
								auto expr = &((*(_12713_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b1331ca8:;
								if (it != expr_end) {
									jule::Ptr<_1abd416ce_Struct> _15424_s2 = *it;
									{
										if ((_15320_s1 == _15424_s2)) {
											goto _iter_next_1b13313e5;
										};
									}
									_iter_next_1b1331ca8:;
									++it;
									goto _iter_begin_1b1331ca8;
								}
								_iter_end_1b1331ca8:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b13313e5:;
						++it;
						goto _iter_begin_1b13313e5;
					}
					_iter_end_1b13313e5:;
				};
				{
					auto expr = &((*_12713_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b13321c6:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _16125_m1 = *it;
						{
							jule::Ptr<_1abd566a0_Fn> _16221_m2 = _1abd6a708_FindMethod(_14817_base, (*(_16125_m1))._field_Ident);;
							if ((_16221_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1abd59681_FnIns> _16617_m1k = _1ab6a5120_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m1));;
							jule::Ptr<_1abd59681_FnIns> _16717_m2k = _1ab6a5120_getTraitCheckFnKind((*(_self_))._field_s, &(_16221_m2));;
							if ((!(_1abd5a5e9_equalTrait(_16617_m1k, &(_16717_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b13321c6:;
						++it;
						goto _iter_begin_1b13321c6;
					}
					_iter_end_1b13321c6:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b132b09e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b132b016:;
	};
}



inline jule::Bool _1abde9116_checkPtr(_1abde85ee_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abe43e0d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe52bec_Ptr> _18213_dest = _1abe4599d_Ptr((*(_self_))._field_dest.ptr());;
	if (_1abe53736_IsUnsafe(_18213_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1abe43539_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abde939c_checkPrim(_1abde85ee_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1abe4a909_Prim> _19113_prim = _1abe45481_Prim((*(_self_))._field_dest);;
		if (((_19113_prim != nullptr) && _1abe4e127_IsAny(_19113_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1abe43539_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1abde9798_typeEnum(_1abde85ee_typeCompatibilityChecker* _self_, jule::Ptr<_1abd6d970_TypeEnum>* _19928_e, jule::Ptr<_1abe42d30_TypeKind>* _19947_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_19928_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1339068:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d398_TypeEnumItem> _20021_item = *it;
			{
				if (_1abe43539_Equal((*((*(_20021_item))._field_Kind))._field_Kind, (*(_19947_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1abd6d970_TypeEnum> _20417_ke = _1abe45eba_TypeEnum((*(*_20021_item.alloc)._field_Kind.alloc)._field_Kind);;
				if ((_20417_ke == nullptr)) {
					goto _iter_next_1b1339068;
				};
				if (_1abde9798_typeEnum(_self_, &(_20417_ke), _19947_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b1339068:;
			++it;
			goto _iter_begin_1b1339068;
		}
		_iter_end_1b1339068:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abde9a2e_checkTypeEnum(_1abde85ee_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1abe43539_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd6d970_TypeEnum> _21913_e = _1abe45eba_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1abde9798_typeEnum(_self_, &(_21913_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1abde9cb5_check(_1abde85ee_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1abe4599d_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1abde9116_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1abe44bcd_NilCompatible((*(_self_))._field_dest)) {
		if (_1abe43e0d_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1abe45481_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b133e7bb:;
			{
				__jule_func_result = _1abde939c_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1abe45eba_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b133e854:;
			{
				__jule_func_result = _1abde9a2e_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1abe46c8a_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1b133e27c:;
			{
				__jule_func_result = _1abde8d80_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b133dd92:;
			{
				__jule_func_result = _1abe43539_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b133dc82:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abde85ee_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1abdea832_pushErr(_1abdea39d_assignTypeChecker* _self_, jule::Str _25526_fmt, jule::Slice<jule::Any> _25539_args) {
	_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25526_fmt, _25539_args);
}



inline jule::Bool _1abdeaab8_checkValidity(_1abdea39d_assignTypeChecker* _self_) {
	jule::Bool _26013_valid = true;;
	{
		
		if ((_1abe4676d_Fn((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b134257c:;
			{
				jule::Ptr<_1abd59681_FnIns> _26313_f = _1abe4676d_Fn((*(*(_self_))._field_d.alloc)._field_Kind);;
				{
					
					if (_1abd5ab16_IsBuiltin(_26313_f.ptr())) {
						_case_begin_1b1343dca:;
						{
							_1abdea832_pushErr(_self_, jule::Str::lit("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((*((*(_26313_f))._field_Decl))._field_Binded) {
						_case_begin_1b1343e74:;
						{
							_1abdea832_pushErr(_self_, jule::Str::lit("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if (((!((*((*(_26313_f))._field_Decl))._field_Statically)) && _1abd56da9_IsMethod((*_26313_f.alloc)._field_Decl))) {
						_case_begin_1b1343eda:;
						{
							_1abdea832_pushErr(_self_, jule::Str::lit("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					else if ((((*((*(_26313_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_26313_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1b1344051:;
						{
							_1abdea832_pushErr(_self_, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1ab69a951_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str::lit("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_26013_valid=false;
						}
					}
					_match_end_1b1343ced:;
				};
			}
		}
		else if ((_1abe472a7_Tup((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1342626:;
			{
				_1abdea832_pushErr(_self_, jule::Str::lit("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_26013_valid=false;
			}
		}
		_match_end_1b1342505:;
	};
	return _26013_valid;;
}



inline jule::Bool _1abdead4e_checkConst(_1abdea39d_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1abe45481_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2929_kind = (*(_1abe45481_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1b9aabb9a_IsFloat(_2929_kind)) {
			_case_begin_1b1349ed0:;
			{
				if ((!(_1abde7554_floatAssignable(&(_2929_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else if (_1b9aab859_IsInt(_2929_kind)) {
			_case_begin_1b134a068:;
			{
				if ((!(_1abde8115_intAssignable(_2929_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2929_kind;
			}
		}
		else {
			_case_begin_1b1349e69:;
			{
				return false;;
			}
		}
		_match_end_1b1349d37:;
	};
	return true;;
}



inline jule::Bool _1abdeb0d5_checkCompatibility(_1abdea39d_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b134c29b:;
			{
				return false;;
			}
		}
		else if ((!(_1abdeaab8_checkValidity(_self_)))) {
			_case_begin_1b134c312:;
			{
				return false;;
			}
		}
		else if (_1abdead4e_checkConst(_self_)) {
			_case_begin_1b134c378:;
			{
				return true;;
			}
		}
		else if ((_1abe45c34_Enum((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b134c3de:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _32117_dkind = (*(_self_))._field_dest;;
				if ((_1abe45c34_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_32117_dkind=(*((*(_1abe45c34_Enum((*(_self_))._field_dest)))._field_Kind))._field_Kind;
				};
				jule::Ptr<_1abe4a909_Prim> _32513_prim = _1abe45481_Prim((*(_self_))._field_dest);;
				if (((_32513_prim == nullptr) || _1abe4e127_IsAny(_32513_prim.ptr()))) {
					goto _match_end_1b134b5b9;
				};
				jule::Ptr<_1abe42d30_TypeKind> _33017_dest = (*(*(_1abe45c34_Enum((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind;;
				return _1ab6a3a58_checkTypeCompatibility((*(_self_))._field_s, &(_33017_dest), &(_32117_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1b134b5b9:;
	};
	return _1ab6a442c_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1abdeb36b_check(_1abdea39d_assignTypeChecker* _self_) {
	jule::Bool _3379_ok = _1abdeb0d5_checkCompatibility(_self_);;
	if ((_3379_ok && (!((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic)))) {
		_1abe60336_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));
	};
	return _3379_ok;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abdea39d_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b13666b1_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b1367d88:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b1368b9c:;
						{
							_36021_elem=(*(_1abe46251_Arr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b1368ae2:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd22b11_ArrTypeDecl>()))._field_Elem;
				return _1abded47d_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b1367d22:;
	};
	return false;;
}

inline jule::Bool _1b1366062_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b136b809:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b136c486:;
						{
							_36021_elem=(*(_1abe464d7_Slc((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b136c563:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd21c75_SlcTypeDecl>()))._field_Elem;
				return _1abded47d_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b136b793:;
	};
	return false;;
}

inline jule::Bool _1b13681b8_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b13703ac:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b1371259:;
						{
							_36021_elem=(*(_1abe4599d_Ptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b1371116:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd2236e_PtrTypeDecl>()))._field_Elem;
				return _1abded47d_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b1370346:;
	};
	return false;;
}

inline jule::Bool _1b13707a8_annotateConstraintElem(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _35749_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b1373a0e:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _36021_elem = nullptr;;
				{
					
{
						_case_begin_1b1374933:;
						{
							_36021_elem=(*(_1abe45717_Sptr((*(_35749_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1b1374768:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd218e0_SptrTypeDecl>()))._field_Elem;
				return _1abded47d_annotateConstraint(_self_, &(_36021_elem));;
			}
		}
		_match_end_1b1373998:;
	};
	return false;;
}



inline jule::Bool _1abdec669_annotateConstraintMap(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _37745_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b135468d:;
			{
				jule::Ptr<_1abe5159c_Map> _38017_m = _1abe47021_Map((*(_37745_k)).ptr());;
				jule::Ptr<_1abd2335e_MapTypeDecl> _38117_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd2335e_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_38117_m2))._field_Key;
				if ((!(_1abded47d_annotateConstraint(_self_, &((*(_38017_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_38117_m2.alloc)._field_Val;
				__jule_func_result = _1abded47d_annotateConstraint(_self_, &((*_38017_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b1354627:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abdec9aa_annotateConstraintTup(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _39245_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b1357581:;
			{
				jule::Ptr<_1abd22072_TupleTypeDecl> _39517_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd22072_TupleTypeDecl>();;
				jule::Ptr<_1abe509ec_Tuple> _39617_tup2 = _1abe472a7_Tup((*(_39245_k)).ptr());;
				{
					auto expr = &((*(_39617_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1358d79:;
					if (it != expr_end) {
						jule::Ptr<_1abe42d30_TypeKind> _39725_t2 = *it;
						{
							{
								auto expr = &((*(_39517_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b13597d6:;
								if (it != expr_end) {
									jule::Ptr<_1abd20845_TypeDecl> _39829_t = *it;
									{
										(*(_self_))._field_c=_39829_t;
										if (_1abded47d_annotateConstraint(_self_, &(_39725_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b13597d6:;
									++it;
									goto _iter_begin_1b13597d6;
								}
								_iter_end_1b13597d6:;
							};
						}
						_iter_next_1b1358d79:;
						++it;
						goto _iter_begin_1b1358d79;
					}
					_iter_end_1b1358d79:;
				};
			}
		}
		_match_end_1b135751a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abdecceb_annotateConstraintFn(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _40944_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b1359cd1:;
			{
				jule::Ptr<_1abd32505_FnDecl> _41217_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abd32505_FnDecl>();;
				jule::Ptr<_1abd59681_FnIns> _41317_f = _1abe4676d_Fn((*(_40944_k)).ptr());;
				{
					auto expr = &((*(_41317_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b135bca0:;
					if (it != expr_end) {
						jule::I32 _41418_i = it - expr->begin();
						jule::Ptr<_1abd58608_ParamIns> _41425_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_41217_pf))._field_Params[_41418_i]))._field_Kind;
							if (_1abded47d_annotateConstraint(_self_, &((*(_41425_fp))._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b135bca0:;
						++it;
						_41418_i++;
						goto _iter_begin_1b135bca0;
					}
					_iter_end_1b135bca0:;
				};
				if (((*_41217_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*_41217_pf.alloc)._field_Result.alloc)._field_Kind;
					if (_1abded47d_annotateConstraint(_self_, &((*_41317_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b1359c6a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abded13c_annotateConstraintIdent(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _43047_k) {
	jule::Ptr<_1abd20e50_IdentTypeDecl> _43113_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1abd20e50_IdentTypeDecl>(&__jule_any_type74);;
	jule::Ptr<_1abd4445c_StructIns> _43213_s = _1abe46a04_Struct((*(_43047_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1360721:;
		if (it != expr_end) {
			jule::I32 _43313_i = it - expr->begin();
			jule::Ptr<_1abd2ca50_GenericDecl> _43316_g = *it;
			{
				if (((*(_43316_g))._field_Ident == (*(_43113_ident))._field_Ident)) {
					jule::Ptr<_1abe41449_InsGeneric> _43521_fg = (*((*(_self_))._field_f))._field_Generics[_43313_i];;
					if ((_43521_fg != nullptr)) {
						return false;;
					};
					_1abded7e1_pushGeneric(_self_, _43047_k, _43313_i);
					return true;;
				};
				if ((_43213_s == nullptr)) {
					goto _iter_next_1b1360721;
				};
				jule::Ptr<_1abd20845_TypeDecl> _44517_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_43113_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b13632a1:;
					if (it != expr_end) {
						jule::Ptr<_1abd20845_TypeDecl> _44625_ig = *it;
						{
							(*(_self_))._field_c=_44625_ig;
							{
								auto expr = &((*(_43213_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b1363d73:;
								if (it != expr_end) {
									jule::Ptr<_1abe41449_InsGeneric> _44829_sg = *it;
									{
										if (_1abded47d_annotateConstraint(_self_, &((*(_44829_sg))._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b1363d73:;
									++it;
									goto _iter_begin_1b1363d73;
								}
								_iter_end_1b1363d73:;
							};
						}
						_iter_next_1b13632a1:;
						++it;
						goto _iter_begin_1b13632a1;
					}
					_iter_end_1b13632a1:;
				};
				(*(_self_))._field_c=_44517_c;
			}
			_iter_next_1b1360721:;
			++it;
			_43313_i++;
			goto _iter_begin_1b1360721;
		}
		_iter_end_1b1360721:;
	};
	return false;;
}



inline jule::Bool _1abded47d_annotateConstraint(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _45942_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b1364329:;
			{
				return _1abded13c_annotateConstraintIdent(_self_, _45942_k);;
			}
		}
		_match_end_1b13642b3:;
	};
	{
		
		if ((_1abe46251_Arr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b1364eb7:;
			{
				return _1b13666b1_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1abe464d7_Slc((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b136502d:;
			{
				return _1b1366062_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1abe4599d_Ptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b1365094:;
			{
				return _1b13681b8_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1abe45717_Sptr((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b136510a:;
			{
				return _1b13707a8_annotateConstraintElem(_self_, _45942_k);;
			}
		}
		else if ((_1abe47021_Map((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b1365171:;
			{
				return _1abdec669_annotateConstraintMap(_self_, _45942_k);;
			}
		}
		else if ((_1abe4676d_Fn((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b1365759:;
			{
				return _1abdecceb_annotateConstraintFn(_self_, _45942_k);;
			}
		}
		else if ((_1abe472a7_Tup((*(_45942_k)).ptr()) != nullptr)) {
			_case_begin_1b13657c0:;
			{
				return _1abdec9aa_annotateConstraintTup(_self_, _45942_k);;
			}
		}
		else {
			_case_begin_1b1365308:;
			{
				return false;;
			}
		}
		_match_end_1b13652a3:;
	};
}



inline void _1abded7e1_pushGeneric(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _48435_k, jule::I32 _48449_i) {
	(*((*(_self_))._field_f))._field_Generics[_48449_i]=jule::new_ptr<_1abe41449_InsGeneric>(_1abe41449_InsGeneric{._field_Kind=(*(_48435_k)), });
	jule::Ptr<_1abd2ca50_GenericDecl> _48613_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_48449_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1377a68:;
		if (it != expr_end) {
			jule::Ptr<_1abe42d30_TypeKind> _48721_ignored = *it;
			{
				if (((*(_48613_gd))._field_Ident == _1abe431e8_Str(_48721_ignored.ptr()))) {
					(*_48721_ignored.alloc)._field_Kind=(*((*(_48435_k))))._field_Kind;
				};
			}
			_iter_next_1b1377a68:;
			++it;
			goto _iter_begin_1b1377a68;
		}
		_iter_end_1b1377a68:;
	};
	if ((((*_48613_gd.alloc)._field_Constraint == nullptr) || ((*((*_48613_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_48613_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1abded47d_annotateConstraint(_self_, _48435_k);
}



inline jule::Bool _1abdedb32_annotatePrim(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _49943_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1abe00b56_annotateAny(_self_, _49943_k);
	return __jule_func_result;;
}



inline jule::Bool _1abdede73_annotateArr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _50342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe52229_Arr> _50413_parr = _1abe46251_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_50413_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe52229_Arr> _50813_arr = _1abe46251_Arr((*(_50342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_50413_parr))._field_Elem));
	__jule_func_result = _1abe00e97_annotateKind(_self_, &((*(_50813_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abdee2b4_annotateSlc(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _51342_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe4ee08_Slc> _51413_pslc = _1abe464d7_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_51413_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe4ee08_Slc> _51813_slc = _1abe464d7_Slc((*(_51342_k)).ptr());;
	(*(_self_))._field_k=(&((*(_51413_pslc))._field_Elem));
	__jule_func_result = _1abe00e97_annotateKind(_self_, &((*(_51813_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abdee6b0_checkMapKey(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _52341_k, jule::Ptr<_1abe42d30_TypeKind>* _52361_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe42d30_TypeKind>* _52413_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_52341_k;
	__jule_func_result=_1abe00e97_annotateKind(_self_, _52361_ck);
	(*(_self_))._field_k=_52413_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abdeea01_annotateMap(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe5159c_Map> _53213_pmap = _1abe47021_Map((*((*(_self_))._field_k)).ptr());;
	if ((_53213_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe5159c_Map> _53613_m = _1abe47021_Map((*(_53142_k)).ptr());;
	__jule_func_result = (_1abdee6b0_checkMapKey(_self_, (&((*(_53213_pmap))._field_Key)), &((*(_53613_m))._field_Key)) && _1abdee6b0_checkMapKey(_self_, (&((*(_53213_pmap))._field_Val)), &((*_53613_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1abdeed42_annotateFn(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _54141_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd59681_FnIns> _54213_pf = _1abe4676d_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_54213_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd59681_FnIns> _54613_f = _1abe4676d_Fn((*(_54141_k)).ptr());;
	{
		
		if (((*(_54213_pf))._field_Params.len() != (*(_54613_f))._field_Params.len())) {
			_case_begin_1b1385218:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1abd56b23_IsVoid((*(_54213_pf))._field_Decl.ptr()) != _1abd56b23_IsVoid((*(_54613_f))._field_Decl))) {
			_case_begin_1b13852a1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b1385180:;
	};
	__jule_func_result=true;
	jule::Ptr<_1abe42d30_TypeKind>* _55513_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_54613_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b138711b:;
		if (it != expr_end) {
			jule::I32 _55614_i = it - expr->begin();
			jule::Ptr<_1abd58608_ParamIns> _55621_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_54213_pf))._field_Params[_55614_i]))._field_Kind));
				__jule_func_result=(_1abe00e97_annotateKind(_self_, &((*(_55621_fp))._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b138711b:;
			++it;
			_55614_i++;
			goto _iter_begin_1b138711b;
		}
		_iter_end_1b138711b:;
	};
	if ((!(_1abd56b23_IsVoid((*(_54213_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_54213_pf))._field_Result));
		__jule_func_result=(_1abe00e97_annotateKind(_self_, &((*_54613_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_55513_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abe00183_annotatePtr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _57042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe52bec_Ptr> _57113_pptr = _1abe4599d_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_57113_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe52bec_Ptr> _57513_ptr = _1abe4599d_Ptr((*(_57042_k)).ptr());;
	(*(_self_))._field_k=(&((*(_57113_pptr))._field_Elem));
	__jule_func_result = _1abe00e97_annotateKind(_self_, &((*(_57513_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abe004c4_annotateSptr(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _58043_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe4e435_Sptr> _58113_ssptr = _1abe45717_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_58113_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abe4e435_Sptr> _58513_sptr = _1abe45717_Sptr((*(_58043_k)).ptr());;
	(*(_self_))._field_k=(&((*(_58113_ssptr))._field_Elem));
	__jule_func_result = _1abe00e97_annotateKind(_self_, &((*(_58513_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1abe00815_annotateStruct(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _59045_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd4445c_StructIns> _59113_s = _1abe46a04_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_59113_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd4445c_StructIns> _59513_s2 = _1abe46a04_Struct((*(_59045_k)).ptr());;
	if (((*(_59113_s))._field_Generics.len() != (*(_59513_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_59113_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1395dc7:;
		if (it != expr_end) {
			jule::I32 _59914_i = it - expr->begin();
			jule::Ptr<_1abe41449_InsGeneric> _59921_g = *it;
			{
				jule::Ptr<_1abe41449_InsGeneric> _60017_g2 = (*_59513_s2.alloc)._field_Generics[_59914_i];;
				if (_1abe43539_Equal((*(_59921_g))._field_Kind, (*(_60017_g2))._field_Kind)) {
					goto _iter_next_1b1395dc7;
				};
				(*(_self_))._field_k=(&((*_59921_g.alloc)._field_Kind));
				if ((!(_1abe00e97_annotateKind(_self_, &((*_60017_g2.alloc)._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b1395dc7:;
			++it;
			_59914_i++;
			goto _iter_begin_1b1395dc7;
		}
		_iter_end_1b1395dc7:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abe00b56_annotateAny(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _61242_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6139_kind = _1abe431e8_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b139946e:;
		if (it != expr_end) {
			jule::I32 _61413_i = it - expr->begin();
			jule::Ptr<_1abd2ca50_GenericDecl> _61416_g = *it;
			{
				if ((_6139_kind != (*(_61416_g))._field_Ident)) {
					goto _iter_next_1b139946e;
				};
				jule::Ptr<_1abe41449_InsGeneric> _61813_t = (*((*(_self_))._field_f))._field_Generics[_61413_i];;
				{
					
					if ((_61813_t == nullptr) || ((*(_61813_t))._field_Kind == nullptr)) {
						_case_begin_1b139ac9a:;
						{
							_1abded7e1_pushGeneric(_self_, _61242_k, _61413_i);
						}
					}
					else if ((!(_1abe43539_Equal((*(_61813_t))._field_Kind, (*(_61242_k)))))) {
						_case_begin_1b139ad33:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b139ab8a:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_61242_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b139946e:;
			++it;
			_61413_i++;
			goto _iter_begin_1b139946e;
		}
		_iter_end_1b139946e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abe00e97_annotateKind(_1abdebc73_dynamicTypeAnnotation* _self_, jule::Ptr<_1abe42d30_TypeKind>* _63343_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1abe00b56_annotateAny(_self_, _63343_k)) {
			_case_begin_1b139d363:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe45481_Prim((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d3c9:;
			{
				__jule_func_result = _1abdedb32_annotatePrim(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe46251_Arr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d440:;
			{
				__jule_func_result = _1abdede73_annotateArr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe464d7_Slc((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d4b7:;
			{
				__jule_func_result = _1abdee2b4_annotateSlc(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe47021_Map((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d682:;
			{
				__jule_func_result = _1abdeea01_annotateMap(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe4676d_Fn((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d6e8:;
			{
				__jule_func_result = _1abdeed42_annotateFn(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe4599d_Ptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d75e:;
			{
				__jule_func_result = _1abe00183_annotatePtr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe45717_Sptr((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d7c5:;
			{
				__jule_func_result = _1abe004c4_annotateSptr(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else if ((_1abe46a04_Struct((*(_63343_k)).ptr()) != nullptr)) {
			_case_begin_1b139d84c:;
			{
				__jule_func_result = _1abe00815_annotateStruct(_self_, _63343_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b139d242:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b139ccd0:;
	};
}



inline jule::Bool _1abe0122d_annotate(_1abdebc73_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Kind));
	__jule_func_result = _1abe00e97_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Kind));
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abdebc73_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abe02141_pushErrToken(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd0a38a_Token> _67831_token, jule::Str _67846_fmt, jule::Slice<jule::Any> _67859_args) {
	_1ab69a5dd_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _67831_token, _67846_fmt, _67859_args);
}



inline void _1abe024a4_pushErr(_1abe01ad0_fnCallArgChecker* _self_, jule::Str _68226_fmt, jule::Slice<jule::Any> _68239_args) {
	_1abe02141_pushErrToken(_self_, (*(_self_))._field_errorToken, _68226_fmt, _68239_args);
}



inline jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _1abe0273a_getParams(_1abe01ad0_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl != nullptr)) && _1abd552e7_IsSelf((*((*(*(_self_))._field_f.alloc)._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1abe02a7b_checkCounts(_1abe01ad0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>>* _69531_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _69613_n = (*(_69531_params)).len();;
	if (((_69613_n > 0LL) && _1abd552e7_IsSelf((*((*(_69531_params))[0LL]))._field_Decl.ptr()))) {
		(_69613_n)--;
	};
	jule::I32 _70113_diff = (_69613_n - (*(_self_))._field_args.len());;
	jule::Str _70213_log = jule::Str();;
	{
		
		if ((_70113_diff == 0LL)) {
			_case_begin_1b13aa31a:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_69613_n > 0LL) && (*(*((*(_69531_params))[(_69613_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1b13aa23d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_70113_diff < 0LL) || (_70113_diff > (*(_69531_params)).len()))) {
			_case_begin_1b13a9dec:;
			{
				_70213_log=jule::Str::lit("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b13a9d86:;
			{
				_70213_log=jule::Str::lit("missing arguments to call @", 27);
			}
		}
		_match_end_1b13a9d20:;
	};
	_209e0d4d9_StrBuilder _71313_err = static__209e0d918_New(32LL);;
	_209e0de79_WriteStr(&_71313_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
	_209e0de79_WriteStr(&_71313_err, jule::Str::lit("\n       want (", 14));
	{
		auto expr = _69531_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13acb03:;
		if (it != expr_end) {
			jule::I32 _71613_i = it - expr->begin();
			jule::Ptr<_1abd58608_ParamIns> *_71616_p = it;
			{
				_209e0de79_WriteStr(&_71313_err, _1abe431e8_Str((*((*(_71616_p))))._field_Kind.ptr()));
				if ((((*(_69531_params)).len() - _71613_i) > 1LL)) {
					_209e0de79_WriteStr(&_71313_err, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b13acb03:;
			++it;
			_71613_i++;
			goto _iter_begin_1b13acb03;
		}
		_iter_end_1b13acb03:;
	};
	_209e0e232_WriteByte(&_71313_err, ')');
	_1abe024a4_pushErr(_self_, _70213_log, jule::Slice<jule::Any>::make({jule::Any(_209e0e771_Str(&_71313_err), &__jule_any_type4)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abe03032_checkArg(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _72732_p, jule::Ptr<_1abe11936_Data>* _72751_arg, jule::Ptr<_1abd0a38a_Token>* _72768_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1abd5b95d_parameterUsesGenerics(_72732_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_72732_p))))._field_Decl))._field_Variadic)) && _1abe0a6bb_isGoodValueToInfer(_72751_arg));
		if (__jule_func_result) {
			_1abdebc73_dynamicTypeAnnotation _73221_dta = _1abdebc73_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_72732_p)), ._field_a=(*(_72751_arg)), ._field_errorToken=(*(_72768_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1abe0122d_annotate(&_73221_dta);
		};
		if ((!(__jule_func_result))) {
			_1abe02141_pushErrToken(_self_, (*(_72768_errorToken)), jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1ab6a7485_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, _72768_errorToken)) {
		__jule_func_result = _1ab6a30eb_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*(*((*(_72732_p))))._field_Decl.alloc)._field_Reference, &((*((*(_72732_p))))._field_Kind), _72751_arg, (*(_72768_errorToken)));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1abe0342d_push(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _75628_p, jule::Ptr<_1abd24b79_Expr> _75646_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abe42d30_TypeKind> _75713_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7589_oldImmut = (*(*(_self_))._field_e.alloc)._field_immutable;;
	(*(*(_self_))._field_e.alloc)._field_immutable=(!((*((*((*(_75628_p))))._field_Decl))._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_75628_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_75628_p))))._field_Kind;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1abe11936_Data> _76613_d = _1abe318bd_evalExpr((*(_self_))._field_e, _75646_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_75713_old;
	(*(*(_self_))._field_e.alloc)._field_immutable=_7589_oldImmut;
	if ((_76613_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abe03032_checkArg(_self_, _75628_p, &(_76613_d), &((*(_75646_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_76613_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1abe03829_pushVariadic(_1abe01ad0_fnCallArgChecker* _self_, jule::Ptr<_1abd58608_ParamIns>* _78036_p, jule::I32 _78054_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _78213_variadiced = false;;
	jule::Bool _7839_more = ((_78054_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1abd4ac16_SliceExprModel> _78413_model = jule::new_ptr<_1abd4ac16_SliceExprModel>(_1abd4ac16_SliceExprModel{._field_ElemKind=(*((*(_78036_p))))._field_Kind, });;
	jule::Ptr<_1abe42d30_TypeKind> _78813_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1abe42d30_TypeKind> _79513_oldKind = (*((*(_78036_p))))._field_Kind;;
	(*((*(_78036_p))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>((*(*((*(_78036_p))))._field_Kind.alloc));
	(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
		(*((*(_78036_p))))._field_Kind=_79513_oldKind;
	});;
	for (; (_78054_i < (*(_self_))._field_args.len()); (_78054_i)++) {
		{
			jule::Ptr<_1abd24b79_Expr> _80417_arg = (*(_self_))._field_args[_78054_i];;
			{
				auto &_match_expr{ (*(_80417_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type75) {
					_case_begin_1b044e756:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4ee08_Slc>(_1abe4ee08_Slc{._field_Elem=(*((*(_78036_p))))._field_Kind}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)});
					}
				}
				else {
					_case_begin_1b044ea53:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_78036_p))))._field_Kind;
					}
				}
				_match_end_1b044e9ed:;
			};
			jule::Ptr<_1abe11936_Data> _81717_d = _1abe3123b_eval((*(_self_))._field_e, _80417_arg);;
			if ((_81717_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b044dc0b;
			};
			if ((*((*(_81717_d))._field_Kind))._field_Variadic) {
				_78213_variadiced=true;
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1abe03032_checkArg(_self_, _78036_p, &(_81717_d), &((*(_80417_arg))._field_Token)));
				(*(*((*(_78036_p))))._field_Kind.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_81717_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type76) {
						_case_begin_1b0452209:;
						{
							_78413_model=(*(_81717_d))._field_Model.unsafe_cast_ptr<_1abd4ac16_SliceExprModel>();
							(*(_78413_model))._field_ElemKind=(*((*(_78036_p))))._field_Kind;
						}
					}
					else {
						_case_begin_1b0453826:;
						{
							_78413_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_81717_d))._field_Model); };
						}
					}
					_match_end_1b04537c1:;
				};
				(_78054_i)++;
				goto _iter_end_1b044dc0b;
			};
			__jule_func_result=(__jule_func_result && _1abe03032_checkArg(_self_, _78036_p, &(_81717_d), &((*_80417_arg.alloc)._field_Token)));
			(*(_78413_model))._field_Elems=jule::append((*_78413_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_81717_d))._field_Model}));
		}
	_iter_next_1b044dc0b:;
	}
	_iter_end_1b044dc0b:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_78813_old;
	if ((_78213_variadiced && _7839_more)) {
		_1abe02141_pushErrToken(_self_, (*((*(_self_))._field_args[_78054_i]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_78413_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_78413_model, &__jule_any_type76)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abe03b6a_checkArgs(_1abe01ad0_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>>* _86133_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _8629_arg = (*((*(_self_))._field_e))._field_arg;;
	(*(*(_self_))._field_e.alloc)._field_arg=true;
	__jule_func_result=true;
	jule::I32 _86613_i = 0LL;;
	if ((((*(_86133_params)).len() > 0LL) && _1abd552e7_IsSelf((*((*(_86133_params))[0LL]))._field_Decl.ptr()))) {
		(_86613_i)++;
	};
	_julec_label_1b0458b7d:;
	while ((_86613_i < (*(_86133_params)).len())) {
		{
			jule::Ptr<_1abd58608_ParamIns> _87317_p = (*(_86133_params))[_86613_i];;
			{
				
				if ((*(*(_87317_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1b045a7d9:;
					{
						__jule_func_result=(_1abe03829_pushVariadic(_self_, &(_87317_p), _86613_i) && __jule_func_result);
						goto _iter_end_1b0459013;
					}
				}
				else if (((*(_self_))._field_args.len() <= _86613_i)) {
					_case_begin_1b045a8c7:;
					{
						__jule_func_result=false;
						goto _iter_end_1b0459013;
					}
				}
				else {
					_case_begin_1b045a432:;
					{
						__jule_func_result=(_1abe0342d_push(_self_, &(_87317_p), (*(_self_))._field_args[_86613_i]) && __jule_func_result);
					}
				}
				_match_end_1b045a3bb:;
			};
			(_86613_i)++;
		}
	_iter_next_1b0459013:;
	}
	_iter_end_1b0459013:;;
	(*(*(_self_))._field_e.alloc)._field_arg=_8629_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1abe03e01_checkDynamicTypeAnnotation(_1abe01ad0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b045ca94:;
		if (it != expr_end) {
			jule::Ptr<_1abe41449_InsGeneric> _89316_g = *it;
			{
				if ((_89316_g == nullptr)) {
					_1abe024a4_pushErr(_self_, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b045ca94:;
			++it;
			goto _iter_begin_1b045ca94;
		}
		_iter_end_1b045ca94:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1abe04187_check(_1abe01ad0_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _90313_params = _1abe0273a_getParams(_self_);;
	__jule_func_result=_1abe02a7b_checkCounts(_self_, &(_90313_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1abe03b6a_checkArgs(_self_, &(_90313_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1abe03e01_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe01ad0_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1abe05067_pushErr(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd0a38a_Token> _94126_token, jule::Str _94141_fmt, jule::Slice<jule::Any> _94154_args) {
	_1abe13bad_pushErr((*(_self_))._field_e.ptr(), _94126_token, _94141_fmt, _94154_args);
}



inline void _1abe053ca_pushSuggestion(_1abe04a17_structLitChecker* _self_, jule::Str _94633_fmt, jule::Slice<jule::Any> _94646_args) {
	_1abe14021_pushSuggestion((*(_self_))._field_e.ptr(), _94633_fmt, _94646_args);
}



inline void _1abe057e8_pushMatch(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd438ac_FieldIns>* _95033_f, jule::Ptr<_1abe11936_Data>* _95052_d, jule::Ptr<_1abd0a38a_Token>* _95067_errorToken) {
	;
	jule::Bool _9569_mutable = ((!((*((*(_self_))._field_e))._field_immutable)) || ((*((*((*(_95033_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1ab6a7485_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9569_mutable, false, &((*((*(_95033_f))))._field_Kind), _95052_d, _95067_errorToken)) {
		_1ab6a30eb_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, false, &((*((*(_95033_f))))._field_Kind), _95052_d, (*(_95067_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1abd49264_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1abd49264_StructArgExprModel>(_1abd49264_StructArgExprModel{._field_Token=(*(_95067_errorToken)), ._field_Field=(*(_95033_f)), ._field_Expr=(*(_95052_d))})); };
}



inline void _1abe05b5b_checkPair(_1abe04a17_structLitChecker* _self_, jule::Ptr<_1abd29398_FieldExprPair>* _96933_pair, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _96960_exprs) {
	jule::Ptr<_1abd438ac_FieldIns> _97113_f = _1abd45815_FindField((*(_self_))._field_s.ptr(), (*((*((*(_96933_pair))))._field_Field))._field_Kind);;
	if ((_97113_f == nullptr)) {
		_1abe05067_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		return;;
	};
	if ((!(_1ab69ad4c_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_97113_f))._field_Decl))._field_Public, (*(*(_97113_f))._field_Decl.alloc)._field_Token)))) {
		_1abe05067_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
		_1abe053ca_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1b0468c37:;
	{
		auto expr = _96960_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0466a37:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _98321_expr = *it;
			{
				{
					auto &_match_expr{ (*(_98321_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1b046a112:;
						{
							jule::Ptr<_1abd29398_FieldExprPair> _98621_dpair = (*(_98321_expr))._field_Kind.unsafe_cast_ptr<_1abd29398_FieldExprPair>();;
							{
								
								if (((*(_96933_pair)) == _98621_dpair)) {
									_case_begin_1b046b0d0:;
									{
										goto _iter_end_1b0466a37;
									}
								}
								else if (((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind == (*(*(_98621_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1b046b179:;
									{
										_1abe05067_pushErr(_self_, (*((*(_96933_pair))))._field_Field, jule::Str::lit("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(*((*(_96933_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type4)}));
										goto _iter_end_1b0466a37;
									}
								}
								_match_end_1b046b058:;
							};
						}
					}
					_match_end_1b046a09b:;
				};
			}
			_iter_next_1b0466a37:;
			++it;
			goto _iter_begin_1b0466a37;
		}
		_iter_end_1b0466a37:;
	};
	jule::Ptr<_1abe42d30_TypeKind> _99713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_99713_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_97113_f))._field_Kind;
	jule::Ptr<_1abe11936_Data> _100113_d = _1abe318bd_evalExpr((*(_self_))._field_e, (*((*(_96933_pair))))._field_Expr);;
	if ((_100113_d == nullptr)) {
		return;;
	};
	_1abe057e8_pushMatch(_self_, &(_97113_f), &(_100113_d), &((*((*(_96933_pair))))._field_Field));
}



inline jule::Bool _1abe05e9c_readyExprs(_1abe04a17_structLitChecker* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _100834_exprs) {
	jule::Bool _100913_ok = true;;
	{
		auto expr = _100834_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0470546:;
		if (it != expr_end) {
			jule::I32 _101014_i = it - expr->begin();
			jule::Ptr<_1abd24b79_Expr> _101021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_101021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1b0471228:;
						{
							jule::Ptr<_1abd2a9a4_KeyValPair> _101321_pair = (*(_101021_expr))._field_Kind.unsafe_cast_ptr<_1abd2a9a4_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_101321_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type79) {
									_case_begin_1b0472081:;
									{
										goto _match_end_1b0472548;
									}
								}
								else {
									_case_begin_1b047259d:;
									{
										_1abe05067_pushErr(_self_, (*(_101321_pair))._field_Colon, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
										_100913_ok=false;
										goto _iter_next_1b0470546;
									}
								}
								_match_end_1b0472548:;
							};
							(*((*(_100834_exprs))[_101014_i]))._field_Kind=jule::Any(jule::new_ptr<_1abd29398_FieldExprPair>(_1abd29398_FieldExprPair{._field_Field=(*((*(_101321_pair))._field_Key))._field_Token, ._field_Expr=(*_101321_pair.alloc)._field_Val}), &__jule_any_type77);
						}
					}
					_match_end_1b04711b2:;
				};
			}
			_iter_next_1b0470546:;
			++it;
			_101014_i++;
			goto _iter_begin_1b0470546;
		}
		_iter_end_1b0470546:;
	};
	return _100913_ok;;
}



inline void _1abe06255_check(_1abe04a17_structLitChecker* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _103229_exprs) {
	if (((*(_103229_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1abe05e9c_readyExprs(_self_, _103229_exprs)))) {
		return;;
	};
	jule::Bool _103913_paired = false;;
	{
		auto expr = _103229_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0474ade:;
		if (it != expr_end) {
			jule::I32 _104014_i = it - expr->begin();
			jule::Ptr<_1abd24b79_Expr> _104021_expr = *it;
			{
				{
					auto &_match_expr{ (*(_104021_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type77) {
						_case_begin_1b047b288:;
						{
							jule::Ptr<_1abd29398_FieldExprPair> _104321_pair = (*(_104021_expr))._field_Kind.unsafe_cast_ptr<_1abd29398_FieldExprPair>();;
							if (((_104014_i > 0LL) && (!(_103913_paired)))) {
								_1abe05067_pushErr(_self_, (*(_104321_pair))._field_Field, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103913_paired=true;
							_1abe05b5b_checkPair(_self_, &(_104321_pair), _103229_exprs);
						}
					}
					else {
						_case_begin_1b04759e1:;
						{
							if (_103913_paired) {
								_1abe05067_pushErr(_self_, (*(_104021_expr))._field_Token, jule::Str::lit("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_104014_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1abe05067_pushErr(_self_, (*_104021_expr.alloc)._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b0474ade;
							};
							jule::Ptr<_1abd438ac_FieldIns> _105821_field = (*(*(_self_))._field_s.alloc)._field_Fields[_104014_i];;
							if ((!(_1ab69ad4c_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_105821_field))._field_Decl))._field_Public, (*(*_105821_field.alloc)._field_Decl.alloc)._field_Token)))) {
								_1abe05067_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1abe053ca_pushSuggestion(_self_, jule::Str::lit("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1abe42d30_TypeKind> _106621_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_106621_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_105821_field.alloc)._field_Kind;
							jule::Ptr<_1abe11936_Data> _107021_d = _1abe318bd_evalExpr((*(_self_))._field_e, _104021_expr);;
							if ((_107021_d == nullptr)) {
								goto _iter_next_1b0474ade;
							};
							_1abe057e8_pushMatch(_self_, &(_105821_field), &(_107021_d), &((*_104021_expr.alloc)._field_Token));
						}
					}
					_match_end_1b047598b:;
				};
			}
			_iter_next_1b0474ade:;
			++it;
			_104014_i++;
			goto _iter_begin_1b0474ade;
		}
		_iter_end_1b0474ade:;
	};
	if ((!(_103913_paired))) {
		jule::I32 _108113_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _108217_diff = (_108113_n - (*(_103229_exprs)).len());;
		{
			
			if ((_108217_diff <= 0LL)) {
				_case_begin_1b047db1a:;
				{
					return;;
				}
			}
			_match_end_1b047da0a:;
		};
		_209e0d4d9_StrBuilder _108817_idents = static__209e0d918_New(32LL);;
		for (; (_108217_diff > 0LL); (_108217_diff)--) {
			{
				_209e0de79_WriteStr(&_108817_idents, jule::Str::lit(", ", 2));
				_209e0de79_WriteStr(&_108817_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_108113_n - _108217_diff)]))._field_Decl))._field_Ident);
			}
		_iter_next_1b047e467:;
		}
		_iter_end_1b047e467:;;
		_1abe05067_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_209e10222_Buf(&_108817_idents).slice(2LL)), &__jule_any_type4)}));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abe04a17_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1abda8d2e_Var> _1abe06cd3_buildVar(_1abe067e9_rangeChecker* _self_, jule::Ptr<_1abd336b0_VarDecl>* _110828_decl) {
	jule::Ptr<_1abda8d2e_Var> _110913_v = _1abd62bc8_buildVar((*(_110828_decl)));;
	return _110913_v;;
}



inline void _1abe06ed1_setSizeKey(_1abe067e9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("int", 3))))._field_Kind;
}



inline void _1abe073ee_checkRangeExprValidity(_1abe067e9_rangeChecker* _self_, jule::Ptr<_1abe11936_Data>* _112746_d, jule::Ptr<_1abda8d2e_Var>* _112757_key, jule::Ptr<_1abe42d30_TypeKind>* _112773_k) {
	jule::Bool _112813__mut = (*((*(_112757_key))))._field_Mutable;;
	if ((_112813__mut && (!(_1abe446b1_Mutable((*(_112773_k)).ptr()))))) {
		_112813__mut=false;
	};
	_1ab6a7485_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _112813__mut, (*((*(_112757_key))))._field_Reference, &((*((*((*(_112757_key))))._field_Kind))._field_Kind), _112746_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1abe075ec_checkSlice(_1abe067e9_rangeChecker* _self_) {
	_1abe06ed1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abe4ee08_Slc> _114613_slc = _1abe464d7_Slc((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_114613_slc))._field_Elem});
	_1abe073ee_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_114613_slc.alloc)._field_Elem));
}



inline void _1abe077ea_checkArray(_1abe067e9_rangeChecker* _self_) {
	_1abe06ed1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abe52229_Arr> _115913_arr = _1abe46251_Arr((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_115913_arr))._field_Elem});
	_1abe073ee_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_115913_arr.alloc)._field_Elem));
}



inline void _1abe079e8_checkMapKeyA(_1abe067e9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abe5159c_Map> _117113_m = _1abe47021_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_117113_m))._field_Key});
	jule::Ptr<_1abe11936_Data> _117513_d = jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc));;
	(*_117513_d.alloc)._field_Kind=(*_117113_m.alloc)._field_Key;
	_1abe073ee_checkRangeExprValidity(_self_, &(_117513_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_117113_m.alloc)._field_Key));
}



inline void _1abe07be6_checkMapKeyB(_1abe067e9_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1abe5159c_Map> _118613_m = _1abe47021_Map((*((*(_self_))._field_d))._field_Kind.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_118613_m))._field_Val});
	jule::Ptr<_1abe11936_Data> _119013_d = jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc));;
	(*_119013_d.alloc)._field_Kind=(*_118613_m.alloc)._field_Val;
	_1abe073ee_checkRangeExprValidity(_self_, &(_119013_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_118613_m.alloc)._field_Val));
}



inline void _1abe07de4_checkMap(_1abe067e9_rangeChecker* _self_) {
	_1abe079e8_checkMapKeyA(_self_);
	_1abe07be6_checkMapKeyB(_self_);
}



inline void _1abe080e2_checkStr(_1abe067e9_rangeChecker* _self_) {
	_1abe06ed1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abd0cc72_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("u8", 2))))._field_Kind;
}



inline void _1abe082e0_checkComptime(_1abe067e9_rangeChecker* _self_) {
	_1abe06ed1_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Mutable)) {
		_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyA.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Mutable)) {
		_1ab69a5dd_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Token, jule::Str::lit("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident, &__jule_any_type4)}));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1abd0cc72_IsIgnoreIdent((*(*(*(_self_))._field_rang.alloc)._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1abe06cd3_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1abe08576_checkComptimeRange(_1abe067e9_rangeChecker* _self_) {
	jule::Ptr<_1abd71ac7_comptimeRange> _122513_range = _1abe4882a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_122513_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data5)) {
			_case_begin_1b04a1786:;
			{
				_1abe082e0_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b04a07c9:;
			{
				_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b04a0774:;
	};
}



inline jule::Bool _1abe0880c_check(_1abe067e9_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Kind))._field_Variadic) {
			_case_begin_1b04a38ba:;
		}
		else if ((_1abe464d7_Slc((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04a22ae:;
			{
				_1abe075ec_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1abe46251_Arr((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04a2325:;
			{
				_1abe077ea_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1abe47021_Map((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04a2886:;
			{
				_1abe07de4_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1abe4882a_comptimeRange((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04a28ec:;
			{
				return _1abe08576_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b04a2226:;
			{
				jule::Ptr<_1abe4a909_Prim> _125713_prim = _1abe45481_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
				if (((_125713_prim != nullptr) && _1abe4dd91_IsStr(_125713_prim))) {
					_1abe080e2_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b04a2127:;
	};
	_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, jule::Str::lit("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe067e9_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1abe09489_prepareTypes(_1abe0905a_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1abd5a880_Types((*(_self_))._field_f);
	};
}



inline void _1abe09742_prepareExprs(_1abe0905a_retTypeChecker* _self_, jule::Ptr<_1abd24b79_Expr>* _128536_e) {
	if (((*(_128536_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_128536_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b04a92d8:;
			{
				(*(_self_))._field_exprs=(*((*((*(_128536_e))))._field_Kind.unsafe_cast_ptr<_1abd2576d_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1b04a94a3:;
			{
				{ jule::Slice<jule::Ptr<_1abd24b79_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_128536_e))); };
			}
		}
		_match_end_1b04a944d:;
	};
}



inline void _1abe09940_checkExprs(_1abe0905a_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abe11936_Data>> _130113_datas = jule::Slice<jule::Ptr<_1abe11936_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1abe1365d_Eval> _130213_eval = _1ab6a2a8a_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b04a9618:;
		if (it != expr_end) {
			jule::I32 _130314_i = it - expr->begin();
			jule::Ptr<_1abd24b79_Expr> _130321_expr = *it;
			{
				if ((_130314_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b04a9618;
				};
				jule::Ptr<_1abe42d30_TypeKind> _130817_t = (*(_self_))._field_types[_130314_i];;
				(*(_130213_eval))._field_prefix=_130817_t;
				jule::Ptr<_1abe11936_Data> _131117_d = _1abe318bd_evalExpr(_130213_eval, _130321_expr);;
				if ((_131117_d == nullptr)) {
					goto _iter_next_1b04a9618;
				};
				{ jule::Slice<jule::Ptr<_1abe11936_Data>> &__jule_push_dest = _130113_datas; __jule_push_dest.push(_131117_d); };
				if (((!((*(_131117_d))._field_Mutable)) && _1abe446b1_Mutable((*(_131117_d))._field_Kind.ptr()))) {
					_1ab69a5dd_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1abdea39d_assignTypeChecker _132317_ac = _1abdea39d_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_130817_t, ._field_d=_131117_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1abdeb36b_check(&_132317_ac);
			}
			_iter_next_1b04a9618:;
			++it;
			_130314_i++;
			goto _iter_begin_1b04a9618;
		}
		_iter_end_1b04a9618:;
	};
	if ((_130113_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1abd4e027_TupleExprModel>(_1abd4e027_TupleExprModel{._field_Datas=_130113_datas}), &__jule_any_type81);
	} else if ((_130113_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_130113_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1abe09bc6_tryFuncMultiRetForward(_1abe0905a_retTypeChecker* _self_) {
	jule::Ptr<_1abe1365d_Eval> _134413_eval = _1ab6a2a8a_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
	jule::Ptr<_1abe11936_Data> _134513_d = _1abe318bd_evalExpr(_134413_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_134513_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1abe509ec_Tuple> _135113_tup = _1abe472a7_Tup((*(_134513_d))._field_Kind.ptr());;
	if ((_135113_tup == nullptr)) {
		return false;;
	};
	if (((*(_135113_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1b04b6ba8;
	};
	(*(_self_))._field_model=(*(_134513_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b04b3e2a:;
		if (it != expr_end) {
			jule::I32 _135913_i = it - expr->begin();
			{
				if ((!(_1ab6a35a2__checkTypeCompatibility((*(*(_self_))._field_sc.alloc)._field_s, &((*(_self_))._field_types[_135913_i]), &((*(_135113_tup))._field_Types[_135913_i]), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1b04b6ba8;
				};
			}
			_iter_next_1b04b3e2a:;
			++it;
			_135913_i++;
			goto _iter_begin_1b04b3e2a;
		}
		_iter_end_1b04b3e2a:;
	};
	return true;;
	_julec_label_1b04b6ba8:;
	_209e0d4d9_StrBuilder _136613_wanted = static__209e0d918_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14ea7ac:;
		if (it != expr_end) {
			jule::I32 _136713_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _136716_t = *it;
			{
				_209e0de79_WriteStr(&_136613_wanted, _1abe431e8_Str(_136716_t.ptr()));
				if ((((*(_self_))._field_types.len() - _136713_i) > 1LL)) {
					_209e0de79_WriteStr(&_136613_wanted, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b14ea7ac:;
			++it;
			_136713_i++;
			goto _iter_begin_1b14ea7ac;
		}
		_iter_end_1b14ea7ac:;
	};
	_209e0d4d9_StrBuilder _137313_given = static__209e0d918_New(32LL);;
	{
		auto expr = &((*(_135113_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b14ec67c:;
		if (it != expr_end) {
			jule::I32 _137413_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _137416_t = *it;
			{
				_209e0de79_WriteStr(&_137313_given, _1abe431e8_Str(_137416_t.ptr()));
				if ((((*(_self_))._field_types.len() - _137413_i) > 1LL)) {
					_209e0de79_WriteStr(&_137313_given, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b14ec67c:;
			++it;
			_137413_i++;
			goto _iter_begin_1b14ec67c;
		}
		_iter_end_1b14ec67c:;
	};
	_1ab69a5dd_pushErr((*(*(_self_))._field_sc.alloc)._field_s, (*(_self_))._field_errorToken, jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66), jule::Slice<jule::Any>::make({jule::Any(_209e0e771_Str(&_136613_wanted), &__jule_any_type4),jule::Any(_209e0e771_Str(&_137313_given), &__jule_any_type4)}));
	return false;;
}



inline jule::Bool _1abe0a017_check(_1abe0905a_retTypeChecker* _self_, jule::Ptr<_1abd24b79_Expr>* _138429_e) {
	_1abe09489_prepareTypes(_self_);
	_1abe09742_prepareExprs(_self_, _138429_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1b1500b58:;
			{
				if ((!(_1abd578e3_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1abd56b23_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1b1500bbe:;
			{
				_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1b1500c35:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1b15053dd:;
						{
							if (_1abe09bc6_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1b1505344:;
				};
				_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1b1500c9b:;
			{
				_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1b1500d12:;
			{
				_1ab69a5dd_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str::lit("overflow return expressions", 27), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1500a04:;
	};
	_1abe09940_checkExprs(_self_);
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe0905a_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1abe0baa7_SelectPackage(_1abe0b5bd_SymbolTable* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1508a40:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1b1508a40:;
			++it;
			goto _iter_begin_1b1508a40;
		}
		_iter_end_1b1508a40:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1abe0bea3_FindVar(_1abe0b5bd_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1abe0dc85_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1abe0c39e_FindTypeAlias(_1abe0b5bd_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1abe0e23b_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1abd416ce_Struct> _1abe0c79a_FindStruct(_1abe0b5bd_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b150add8:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _5421_s = *it;
			{
				if ((((*(_5421_s))._field_Ident == _5329_ident) && ((*_5421_s.alloc)._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1b150add8:;
			++it;
			goto _iter_begin_1b150add8;
		}
		_iter_end_1b150add8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd566a0_Fn> _1abe0cb96_FindFn(_1abe0b5bd_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b150c428:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _6521_f = *it;
			{
				if ((((*(_6521_f))._field_Ident == _6425_ident) && ((*_6521_f.alloc)._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1b150c428:;
			++it;
			goto _iter_begin_1b150c428;
		}
		_iter_end_1b150c428:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd69a59_Trait> _1abe0ced7_FindTrait(_1abe0b5bd_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b150d748:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _7621_t = *it;
			{
				if (((*(_7621_t))._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1b150d748:;
			++it;
			goto _iter_begin_1b150d748;
		}
		_iter_end_1b150d748:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6c265_Enum> _1abe0d328_FindEnum(_1abe0b5bd_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b150e6e4:;
		if (it != expr_end) {
			jule::Ptr<_1abd6c265_Enum> _8721_e = *it;
			{
				if (((*(_8721_e))._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1b150e6e4:;
			++it;
			goto _iter_begin_1b150e6e4;
		}
		_iter_end_1b150e6e4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1abe0d669_FindTypeEnum(_1abe0b5bd_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15106b2:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d970_TypeEnum> _9821_e = *it;
			{
				if (((*(_9821_e))._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b15106b2:;
			++it;
			goto _iter_begin_1b15106b2;
		}
		_iter_end_1b15106b2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1abe0dc85_findVar(_1abe0b5bd_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I32 _11017_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11017_i >= 0LL); (_11017_i)--) {
			{
				jule::Ptr<_1abda8d2e_Var> _11221_v = (*(_self_))._field_Vars[_11017_i];;
				if ((((*(_11221_v))._field_Ident == (*(_10827_ident))) && ((*_11221_v.alloc)._field_Binded == _10839_binded))) {
					return _11221_v;;
				};
			}
		_iter_next_1b151253d:;
		}
		_iter_end_1b151253d:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b15134a6:;
			if (it != expr_end) {
				jule::Ptr<_1abda8d2e_Var> _11825_v = *it;
				{
					if ((((*(_11825_v))._field_Ident == (*(_10827_ident))) && ((*_11825_v.alloc)._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1b15134a6:;
				++it;
				goto _iter_begin_1b15134a6;
			}
			_iter_end_1b15134a6:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1abe0e23b_findTypeAlias(_1abe0b5bd_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I32 _12917_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12917_i >= 0LL); (_12917_i)--) {
			{
				jule::Ptr<_1abe4203d_TypeAlias> _13121_ta = (*(_self_))._field_TypeAliases[_12917_i];;
				if ((((*(_13121_ta))._field_Ident == (*(_12733_ident))) && ((*_13121_ta.alloc)._field_Binded == _12745_binded))) {
					return _13121_ta;;
				};
			}
		_iter_next_1b1515882:;
		}
		_iter_end_1b1515882:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b15167ea:;
			if (it != expr_end) {
				jule::Ptr<_1abe4203d_TypeAlias> _13725_ta = *it;
				{
					if ((((*(_13725_ta))._field_Ident == (*(_12733_ident))) && ((*_13725_ta.alloc)._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1b15167ea:;
				++it;
				goto _iter_begin_1b15167ea;
			}
			_iter_end_1b15167ea:;
		};
	};
	return nullptr;;
}



inline jule::Any _1abe0e637_defByIdent(_1abe0b5bd_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151805a:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _14921_v = *it;
			{
				if ((((*(_14921_v))._field_Ident == (*(_14830_ident))) && ((*_14921_v.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b151805a:;
			++it;
			goto _iter_begin_1b151805a;
		}
		_iter_end_1b151805a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15183ac:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> _15521_ta = *it;
			{
				if ((((*(_15521_ta))._field_Ident == (*(_14830_ident))) && ((*_15521_ta.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type65);;
				};
			}
			_iter_next_1b15183ac:;
			++it;
			goto _iter_begin_1b15183ac;
		}
		_iter_end_1b15183ac:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1519325:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _16121_s = *it;
			{
				if ((((*(_16121_s))._field_Ident == (*(_14830_ident))) && ((*_16121_s.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type64);;
				};
			}
			_iter_next_1b1519325:;
			++it;
			goto _iter_begin_1b1519325;
		}
		_iter_end_1b1519325:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151a2e3:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _16721_f = *it;
			{
				if ((((*(_16721_f))._field_Ident == (*(_14830_ident))) && ((*_16721_f.alloc)._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type63);;
				};
			}
			_iter_next_1b151a2e3:;
			++it;
			goto _iter_begin_1b151a2e3;
		}
		_iter_end_1b151a2e3:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151b15c:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _17721_t = *it;
			{
				if (((*(_17721_t))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b151b15c:;
			++it;
			goto _iter_begin_1b151b15c;
		}
		_iter_end_1b151b15c:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151c89a:;
		if (it != expr_end) {
			jule::Ptr<_1abd6c265_Enum> _18321_e = *it;
			{
				if (((*(_18321_e))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type66);;
				};
			}
			_iter_next_1b151c89a:;
			++it;
			goto _iter_begin_1b151c89a;
		}
		_iter_end_1b151c89a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151d527:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d970_TypeEnum> _18921_te = *it;
			{
				if (((*(_18921_te))._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type67);;
				};
			}
			_iter_next_1b151d527:;
			++it;
			goto _iter_begin_1b151d527;
		}
		_iter_end_1b151d527:;
	};
	return nullptr;;
}



inline jule::Bool _1abe0eadd_isDuplicatedIdent(_1abe0b5bd_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151ea56:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*((*(_20216_v))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20216_v)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b151ea56:;
			++it;
			goto _iter_begin_1b151ea56;
		}
		_iter_end_1b151ea56:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b151eda8:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*((*(_20816_ta))))._field_Ident == (*(_20150_ident)))) && ((*(*(_20816_ta)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b151eda8:;
			++it;
			goto _iter_begin_1b151eda8;
		}
		_iter_end_1b151eda8:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1521096:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*((*(_21416_s))))._field_Ident == (*(_20150_ident)))) && ((*(*(_21416_s)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b1521096:;
			++it;
			goto _iter_begin_1b1521096;
		}
		_iter_end_1b1521096:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15222d9:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*((*(_22016_f))))._field_Ident == (*(_20150_ident)))) && ((*(*(_22016_f)).alloc)._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b15222d9:;
			++it;
			goto _iter_begin_1b15222d9;
		}
		_iter_end_1b15222d9:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15233c8:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*((*(_23016_t))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b15233c8:;
			++it;
			goto _iter_begin_1b15233c8;
		}
		_iter_end_1b15233c8:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b152482a:;
		if (it != expr_end) {
			jule::Ptr<_1abd6c265_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*((*(_23616_e))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b152482a:;
			++it;
			goto _iter_begin_1b152482a;
		}
		_iter_end_1b152482a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1525771:;
		if (it != expr_end) {
			jule::Ptr<_1abd6d970_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*((*(_24216_te))))._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b1525771:;
			++it;
			goto _iter_begin_1b1525771;
		}
		_iter_end_1b1525771:;
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe0b5bd_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1abe11d21_IsNil(_1abe11936_Data* _self_) {
	return _1abe43e0d_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1abe120a7_IsVoid(_1abe11936_Data* _self_) {
	return _1abe44194_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1abe1233d_IsConst(_1abe11936_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1abe1267e_GoodOperand(_1abe11936_Data* _self_, jule::Ptr<_1abe11936_Data>* _10531_other) {
	if ((_1abe45eba_TypeEnum((*((*(_10531_other))))._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1abe45481_Prim((*((*(_10531_other))))._field_Kind) == nullptr) || (!(_1abe4e127_IsAny(_1abe45481_Prim((*((*(_10531_other))))._field_Kind).ptr())))) && (_1abe46c8a_Trait((*((*(_10531_other))))._field_Kind) == nullptr)) && (!(_1abe43e0d_IsNil((*(_self_))._field_Kind))));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe11936_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe12aad_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1abe13bad_pushErr(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _13626_token, jule::Str _13641_fmt, jule::Slice<jule::Any> _13654_args) {
	_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), _13626_token, _13641_fmt, _13654_args);
}



inline void _1abe14021_pushSuggestion(_1abe1365d_Eval* _self_, jule::Str _14133_fmt, jule::Slice<jule::Any> _14146_args) {
	_1ab69a951_pushSuggestion((*(_self_))._field_s.ptr(), _14133_fmt, _14146_args);
}



inline void _1abe1421e_allowBuiltin(_1abe1365d_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1abe1441c_disallowBuiltin(_1abe1365d_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1abe146a3_isUnsafe(_1abe1365d_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1abe14939_isGlobal(_1abe1365d_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3)) {
			_case_begin_1b156e369:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b156e765:;
			{
				return false;;
			}
		}
		_match_end_1b156e710:;
	};
}



inline jule::Bool _1abe14c47_applyNumericPrefix(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _16842_d) {
	if ((((((*(_16842_d)) == nullptr) || (!(_1abe1233d_IsConst((*(_16842_d)).ptr())))) || (_1abe45481_Prim((*((*(_16842_d))))._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1abe4a909_Prim> _1759_prim = _1abe45481_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1759_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1b9aabb9a_IsFloat(_1abe4ac4a_Str(_1759_prim.ptr()))) {
			_case_begin_1b1571da5:;
			{
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>((*((*(_self_))._field_prefix)));
				_1b9ab1012_SetF64((*((*(_16842_d))))._field_Constant.ptr(), _1b9ab0187_AsF64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b9aab282_IsSigInt(_1abe4ac4a_Str(_1759_prim.ptr()))) {
			_case_begin_1b1571e3d:;
			{
				if ((!(_1abde78c8_sigAssignable(_1abe4ac4a_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>((*((*(_self_))._field_prefix)));
				_1b9ab0440_SetI64((*((*(_16842_d))))._field_Constant.ptr(), _1b9aaeb6a_AsI64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		else if (_1b9aab590_IsUnsigInt(_1abe4ac4a_Str(_1759_prim.ptr()))) {
			_case_begin_1b1571ea4:;
			{
				if ((!(_1abde7c91_unsigAssignable(_1abe4ac4a_Str(_1759_prim.ptr()), _16842_d)))) {
					return false;;
				};
				(*((*(_16842_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>((*((*(_self_))._field_prefix)));
				_1b9ab06e8_SetU64((*((*(_16842_d))))._field_Constant.ptr(), _1b9aaee01_AsU64((*((*(_16842_d))))._field_Constant));
				(*(*((*(_16842_d))))._field_Constant.alloc)._field_Kind=(*(_1759_prim))._field_Kind;
			}
		}
		_match_end_1b1571cc8:;
	};
	return true;;
}



inline jule::Ptr<_1abe11936_Data> _1abe15088_litStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _20322_l) {
	jule::Str _20413_s = jule::Str();;
	if (_1abd0b776_IsRawStr((*((*(_20322_l))))._field_Value)) {
		_20413_s=_1abde5b29_ToRawStr((*((*(_20322_l))))._field_Value);
	} else {
		_20413_s=_1abde5e6a_ToStr((*((*(_20322_l))))._field_Value);
	};
	jule::Ptr<_1b9aac4c5_Const> _21013_constant = static__1b9aad262_NewStr(_20413_s);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21013_constant, &__jule_any_type19), ._field_Constant=_21013_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abe153c9_litRune(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _22023_l) {
	jule::I32 _2219_r = _1abde591a_ToRune((*((*(_22023_l))))._field_Value);;
	jule::Ptr<_1abe11936_Data> _22213_data = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_2219_r))});;
	if ((_2219_r <= 255LL)) {
		(*(_22213_data))._field_Kind=_1ac02c29e_primU8;
	} else {
		(*(_22213_data))._field_Kind=_1ac02bc3d_primI32;
	};
	(*(_22213_data))._field_Model=jule::Any(jule::new_ptr<_1abd52c73_RuneExprModel>(_1abd52c73_RuneExprModel{._field_Code=_2219_r}), &__jule_any_type83);
	(*_22213_data.alloc)._field_Mutable=true;
	(*_22213_data.alloc)._field_IsRune=true;
	(*_22213_data.alloc)._field_untyped=true;
	return _22213_data;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1571a_litFloat(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _23924_l) {
	jule::F64 _2409_f = ({
		auto except = _1b9a8e551_ParseFloat((*((*(_23924_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1b9aac4c5_Const> _24113_constant = static__1b9aad52b_NewF64(_2409_f);;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d24a_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24113_constant, &__jule_any_type19), ._field_Constant=_24113_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1abe15a5b_litInt(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _25126_l) {
	;
	jule::Str _25413_lit = (*((*(_25126_l))))._field_Value;;
	jule::I32 _25513_base = 0LL;;
	{
		
		if (_20b0d9dce_HasPrefix(_25413_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1b15818ed:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=16LLU;
			}
		}
		else if (_20b0d9dce_HasPrefix(_25413_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1b15819db:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=2LLU;
			}
		}
		else if (_20b0d9dce_HasPrefix(_25413_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1b15815bd:;
			{
				(_25413_lit).mut_slice(2LL);;
				_25513_base=8LLU;
			}
		}
		else if (((_25413_lit[0LL] == '0') && (_25413_lit.len() > 1LL))) {
			_case_begin_1b1581634:;
			{
				(_25413_lit).mut_slice(1LL);;
				_25513_base=8LLU;
			}
		}
		else {
			_case_begin_1b1581557:;
			{
				_25513_base=10LLU;
			}
		}
		_match_end_1b15814be:;
	};
	jule::Ptr<_1abe11936_Data> _27513_d = jule::new_ptr<_1abe11936_Data>();;
	jule::Bool _27713_ok = true;;
	jule::I64 _2789_sig = ({
		auto except = _1b9a87c31_ParseInt(_25413_lit, _25513_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27713_ok=false;

			0LL;
		});
	});;
	if (_27713_ok) {
		(*_27513_d.alloc)._field_Constant=static__1b9aac915_NewI64(_2789_sig);
		(*_27513_d.alloc)._field_Kind=_1ac02b49b_primInt;
	} else {
		jule::U64 _28613_unsig = ({
			auto except = _1b9a8777a_ParseUint(_25413_lit, _25513_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1abe13bad_pushErr(_self_, (*((*(_25126_l))))._field_Token, jule::Str::lit("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1abe14021_pushSuggestion(_self_, jule::Str::lit("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_27513_d.alloc)._field_Constant=static__1b9aacbce_NewU64(_28613_unsig);
		(*_27513_d.alloc)._field_Kind=_1ac02b0d3_primUint;
	};
	(*_27513_d.alloc)._field_Model=jule::Any((*_27513_d.alloc)._field_Constant, &__jule_any_type19);
	(*_27513_d.alloc)._field_untyped=true;
	if ((!(_1abe14c47_applyNumericPrefix(_self_, &(_27513_d))))) {
		_1abe3a8c7_fitBitsize(&(_27513_d));
	};
	return _27513_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe15d9c_litNum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr>* _30626_l) {
	{
		
		if (_1abd0c425_IsFloat((*((*(_30626_l))))._field_Value)) {
			_case_begin_1b158887d:;
			{
				return _1abe1571a_litFloat(_self_, _30626_l);;
			}
		}
		else {
			_case_begin_1b1588817:;
			{
				return _1abe15a5b_litInt(_self_, _30626_l);;
			}
		}
		_match_end_1b1588718:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe161dd_evalLit(_1abe1365d_Eval* _self_, jule::Ptr<_1abd25b14_LitExpr> _31526_lit) {
	{
		
		if (_1abd0b4e0_IsStr((*(_31526_lit))._field_Value)) {
			_case_begin_1b15899e4:;
			{
				return _1abe15088_litStr(_self_, &(_31526_lit));;
			}
		}
		else if (_1abd0ba40_IsRune((*(_31526_lit))._field_Value)) {
			_case_begin_1b1589a8d:;
			{
				return _1abe153c9_litRune(_self_, &(_31526_lit));;
			}
		}
		else if (_1abd0c6de_IsNum((*(_31526_lit))._field_Value)) {
			_case_begin_1b1589b15:;
			{
				return _1abe15d9c_litNum(_self_, &(_31526_lit));;
			}
		}
		else {
			_case_begin_1b15894a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b15893b7:;
	};
}



inline jule::Any _1abe1652e_findBuiltins(_1abe1365d_Eval* _self_, jule::Str* _32832_ident) {
	if (_1ab694a6b_IsPub((*(_32832_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data1)) {
				_case_begin_1b158bd37:;
				{
					jule::Any _33221_def = _1abe3a696_findBuiltinsImport(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab67760e_ImportInfo>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data1));;
					if ((_33221_def != nullptr)) {
						return _33221_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3)) {
				_case_begin_1b158bab2:;
				{
					jule::Any _33721_def = _1abe3b400_findBuiltinsSema(_32832_ident, (*(_self_))._field_lookup.cast_ptr<_1ab6979a3_Sema>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));;
					if ((_33721_def != nullptr)) {
						return _33721_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
				_case_begin_1b158bd9d:;
				{
					jule::Any _34221_def = _1abe3b400_findBuiltinsSema(_32832_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)))._field_s);;
					if ((_34221_def != nullptr)) {
						return _34221_def;;
					};
				}
			}
			_match_end_1b158bc8d:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1ac02da86_findBuiltinDef(_32832_ident);;
}



inline jule::Any _1abe1692a_getDef(_1abe1365d_Eval* _self_, jule::Str* _35526_ident, jule::Bool _35538_binded) {
	jule::Ptr<_1abda8d2e_Var> _36013_v = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe61106_FindVar((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36013_v != nullptr)) {
		return jule::Any(_36013_v, &__jule_any_type8);;
	};
	jule::Ptr<_1abe4203d_TypeAlias> _36513_ta = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe61502_FindTypeAlias((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_36513_ta != nullptr)) {
		return jule::Any(_36513_ta, &__jule_any_type65);;
	};
	if ((!(_35538_binded))) {
		jule::Ptr<_1abd6c265_Enum> _37117_enm = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe6247b_FindEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37117_enm != nullptr)) {
			return jule::Any(_37117_enm, &__jule_any_type66);;
		};
		jule::Ptr<_1abd6d970_TypeEnum> _37617_tenm = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe627bc_FindTypeEnum((*(_self_))._field_lookup.data, (*(_35526_ident)));;
		if ((_37617_tenm != nullptr)) {
			return jule::Any(_37617_tenm, &__jule_any_type67);;
		};
	};
	jule::Ptr<_1abd566a0_Fn> _38213_f = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe61ce9_FindFn((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38213_f != nullptr)) {
		return jule::Any(_38213_f, &__jule_any_type63);;
	};
	jule::Ptr<_1abd416ce_Struct> _38713_s = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe618ed_FindStruct((*(_self_))._field_lookup.data, (*(_35526_ident)), _35538_binded);;
	if ((_38713_s != nullptr)) {
		return jule::Any(_38713_s, &__jule_any_type64);;
	};
	return _1abe1652e_findBuiltins(_self_, _35526_ident);;
}



inline jule::Ptr<_1abd5c860_ReferenceStack> _1abe16bb1_getOwnerRefers(_1abe1365d_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1b15955d2:;
			{
				jule::Ptr<_1ab65ca34_scopeChecker> _39817_sc = _1ab661164_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
				return (*((*(_39817_sc))._field_owner))._field_Refers;;
			}
		}
		else {
			_case_begin_1b1594b20:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
			}
		}
		_match_end_1b1594aba:;
	};
	return nullptr;;
}



inline void _1b15a7c10_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _41040_ref) {
	jule::Ptr<_1abd5c860_ReferenceStack> _41113_refers = _1abe16bb1_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1b15aa053_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1abd5d641_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type7));
	};
}

inline void _1b15bdb6b_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _41040_ref) {
	jule::Ptr<_1abd5c860_ReferenceStack> _41113_refers = _1abe16bb1_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1b15c0e37_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1abd5d641_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type8));
	};
}

inline void _1ae7a3803_pushReference(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns>* _41040_ref) {
	jule::Ptr<_1abd5c860_ReferenceStack> _41113_refers = _1abe16bb1_getOwnerRefers(_self_);;
	if (((_41113_refers != nullptr) && (!(_1ae7a5b9b_Exist(_41113_refers, (*(_41040_ref))))))) {
		_1abd5d641_Push(_41113_refers, jule::Any((*(_41040_ref)), &__jule_any_type9));
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe172aa__evalEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _41728_enm) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_41728_enm, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abe11936_Data> _1abe176a6_evalEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _42631_enm, jule::Ptr<_1abd0a38a_Token> _42643_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_42631_enm))._field_Public, (*_42631_enm.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _42643_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_42631_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1abe172aa__evalEnum(_self_, _42631_enm);;
}



inline jule::Ptr<_1abe11936_Data> _1abe179e7__evalTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _43532_enm) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_43532_enm, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1abe11936_Data> _1abe17de3_evalTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _44435_enm, jule::Ptr<_1abd0a38a_Token> _44451_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_44435_enm))._field_Public, (*_44435_enm.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _44451_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_44435_enm.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1abe179e7__evalTypeEnum(_self_, _44435_enm);;
}



inline jule::Ptr<_1abe11936_Data> _1abe18234__evalStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _45330_s) {
	jule::Ptr<_1abe11936_Data> _45413_d = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_45330_s, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)}), ._field_Model=jule::Any(_45330_s, &__jule_any_type9), ._field_Decl=true, });;
	if ((((*(_45330_s))._field_Decl != nullptr) && (*(*_45330_s.alloc)._field_Decl.alloc)._field_Binded)) {
		(*((*(_45413_d))._field_Kind))._field_BindIdent=(*(*_45330_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _45413_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe18630_evalStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _46733_s, jule::Ptr<_1abd0a38a_Token> _46748_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_46733_s))._field_Decl))._field_Public, (*(*_46733_s.alloc)._field_Decl.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _46748_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_46733_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abe18cd4_checkDeprecated(_self_, &((*(*_46733_s.alloc)._field_Decl.alloc)._field_Directives), _46748_errorToken);
	return _1abe18234__evalStruct(_self_, _46733_s);;
}



inline jule::Ptr<_1abe11936_Data> _1abe18971_evalFnIns(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns> _47728_f) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_47728_f, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)}), ._field_Model=jule::Any(_47728_f, &__jule_any_type7), });;
}



inline void _1abe18cd4_checkDeprecated(_1abe1365d_Eval* _self_, jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _48639_directives, jule::Ptr<_1abd0a38a_Token> _48670_tok) {
	if (_1abe146a3_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1abd1ec62_Directive> _4919_d = _1abe3a2cd_findDirective(_48639_directives, jule::Str::lit("deprecated", 10));;
	if ((_4919_d != nullptr)) {
		if (((*_4919_d.alloc)._field_Args.len() == 0LL)) {
			_1abe13bad_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type4)}));
		} else {
			_1abe13bad_pushErr(_self_, _48670_tok, jule::Str::lit("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any((*((*_4919_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type4)}));
		};
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe191d0_evalFn(_1abe1365d_Eval* _self_, jule::Ptr<_1abd566a0_Fn> _50229_f, jule::Ptr<_1abd0a38a_Token> _50237_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_50229_f))._field_Public, (*_50229_f.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _50237_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_50229_f.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abe18cd4_checkDeprecated(_self_, &((*_50229_f.alloc)._field_Directives), _50237_errorToken);
	jule::Ptr<_1abd59681_FnIns> _51113_ins = _1abd57e10_instance(_50229_f);;
	_1b15a7c10_pushReference(_self_, &(_51113_ins));
	return _1abe18971_evalFnIns(_self_, _51113_ins);;
}



inline void _1abe195ed_pushIllegalCycleError(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _51641_v1, jule::Ptr<_1abda8d2e_Var>* _51652_v2, _209e0d4d9_StrBuilder* _51667_message) {
	;
	jule::Str _5189_refers_to = _1eb22e594_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*((*(_51641_v1))))._field_Ident, &__jule_any_type4),jule::Any((*((*(_51652_v2))))._field_Ident, &__jule_any_type4)}));;
	jule::Slice<jule::U8> _5199_buf = _209e10222_Buf(_51667_message);;
	_209e0de79_WriteStr(_51667_message, _20b0d9a16_Repeat(jule::Str::lit(" ", 1), 7LL));
	_209e0de79_WriteStr(_51667_message, _5189_refers_to);
	_209e0e232_WriteByte(_51667_message, '\n');
	_209e0dbc1_Write(_51667_message, _5199_buf);
}



inline jule::Bool _1abe199e9_checkCrossCycle(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _52635_v, _209e0d4d9_StrBuilder* _52649_message) {
	{
		auto expr = &((*((*(_52635_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15ae4b9:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> *_52716_d = it;
			{
				if (((*(_52716_d)) == (*(_self_))._field_owner)) {
					_1abe195ed_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
				if ((!(_1abe199e9_checkCrossCycle(_self_, _52716_d, _52649_message)))) {
					_1abe195ed_pushIllegalCycleError(_self_, _52635_v, _52716_d, _52649_message);
					return false;;
				};
			}
			_iter_next_1b15ae4b9:;
			++it;
			goto _iter_begin_1b15ae4b9;
		}
		_iter_end_1b15ae4b9:;
	};
	return true;;
}



inline jule::Bool _1abe19de5_checkIllegalCycles(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var>* _54342_v, jule::Ptr<_1abd0a38a_Token> _54351_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54342_v)))) {
		_1abe13bad_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_209e0d4d9_StrBuilder _55613_message = static__209e0d918_New(32LL);;
	if ((!(_1abe199e9_checkCrossCycle(_self_, _54342_v, &(_55613_message))))) {
		jule::Str _55917_errMsg = _209e0e771_Str(&_55613_message);;
		_209e0e96e_Clear(&_55613_message);
		_1abe195ed_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54342_v, &(_55613_message));
		_55917_errMsg+=_209e0e771_Str(&_55613_message);
		_1abe13bad_pushErr(_self_, _54351_declToken, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55917_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_54342_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1a2e1_evalVar(_1abe1365d_Eval* _self_, jule::Ptr<_1abda8d2e_Var> _57130_v, jule::Ptr<_1abd0a38a_Token> _57139_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_57130_v))._field_Public, (*_57130_v.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _57139_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abe18cd4_checkDeprecated(_self_, &((*_57130_v.alloc)._field_Directives), _57139_errorToken);
	if (((*_57130_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1b15c5e09;
	};
	(*_57130_v.alloc)._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3)) {
			_case_begin_1b15b7ed9:;
			{
				jule::Bool _59013_ok = _1abe19de5_checkIllegalCycles(_self_, &(_57130_v), _57139_errorToken);;
				if ((!(_59013_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1b15b7604:;
			{
				jule::Ptr<_1ab65ca34_scopeChecker> _59517_s = (*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0);;
				jule::Ptr<_1ab65ca34_scopeChecker> _59617_root = _1ab660dcd_getRoot(_59517_s);;
				if ((((*(_59617_root))._field_captured != nullptr) && _1abe403d2_isVarCaptured(_59617_root, _59517_s, _57130_v))) {
					_1ab660b47_pushCaptured(_59617_root, &(_57130_v));
				};
				if (((!((*_57130_v.alloc)._field_Reference)) || _1abe146a3_isUnsafe(_self_))) {
					goto _match_end_1b15b7e62;
				};
				while ((((*_59517_s.alloc)._field_owner == nullptr) && ((*_59517_s.alloc)._field_parent != nullptr))) {
					{
						_59517_s=(*_59517_s.alloc)._field_parent;
					}
				_iter_next_1b15bb394:;
				}
				_iter_end_1b15bb394:;;
				if (((((*_59517_s.alloc)._field_owner != nullptr) && (*((*_59517_s.alloc)._field_owner))._field_Anon) && ((*_57130_v.alloc)._field_Scope != (*((*_59517_s.alloc)._field_owner))._field_Scope))) {
					_1abe13bad_pushErr(_self_, _57139_errorToken, jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any((*_57130_v.alloc)._field_Ident, &__jule_any_type4)}));
				};
			}
		}
		_match_end_1b15b7e62:;
	};
	if (((*_57130_v.alloc)._field_Scope == nullptr)) {
		_1b15bdb6b_pushReference(_self_, &(_57130_v));
	};
	if (((!((*_57130_v.alloc)._field_Binded)) && (((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr)))) {
		if ((*_57130_v.alloc)._field_Constant) {
			_1ab6b276a_checkVar((*(_self_))._field_s, &(_57130_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3));
			if ((((*_57130_v.alloc)._field_Value == nullptr) || ((*((*_57130_v.alloc)._field_Value))._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
		if (((*_57130_v.alloc)._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1ab6b276a_checkVar((*(_self_))._field_s, &(_57130_v), (*(_self_))._field_lookup);
		if ((((*_57130_v.alloc)._field_Kind == nullptr) || ((*((*_57130_v.alloc)._field_Kind))._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1b15c5e09:;
	jule::Ptr<_1abe11936_Data> _64613_d = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*((*_57130_v.alloc)._field_Kind))._field_Kind, ._field_Mutable=(*_57130_v.alloc)._field_Mutable, ._field_Reference=(*_57130_v.alloc)._field_Reference, ._field_Lvalue=(!((*_57130_v.alloc)._field_Constant)), ._field_Model=jule::Any(_57130_v, &__jule_any_type8), });;
	if ((((!((*_57130_v.alloc)._field_Binded)) && _1abda9208_IsInitialized(_57130_v)) && ((*((*_57130_v.alloc)._field_Value))._field_Data != nullptr))) {
		(*(_64613_d))._field_IsRune=(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_IsRune;
	};
	if (((*_57130_v.alloc)._field_Constant && ((*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
		(*_64613_d.alloc)._field_Constant=jule::new_ptr<_1b9aac4c5_Const>((*(*((*((*_57130_v.alloc)._field_Value))._field_Data))._field_Constant.alloc));
		(*_64613_d.alloc)._field_Model=jule::Any((*_64613_d.alloc)._field_Constant, &__jule_any_type19);
		if (_1abda9725_untypedConstant(_57130_v)) {
			_1abe14c47_applyNumericPrefix(_self_, &(_64613_d));
			(*_64613_d.alloc)._field_untyped=true;
		};
	};
	return _64613_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1a6dc_evalTypeAlias(_1abe1365d_Eval* _self_, jule::Ptr<_1abe4203d_TypeAlias> _67036_ta, jule::Ptr<_1abd0a38a_Token> _67052_errorToken) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_67036_ta))._field_Public, (*_67036_ta.alloc)._field_Token)))) {
		_1abe13bad_pushErr(_self_, _67052_errorToken, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_67036_ta.alloc)._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_67036_ta.alloc)._field_Used=true;
	jule::Trait _67913_kind = (*((*((*_67036_ta.alloc)._field_Kind))._field_Kind))._field_Kind;;
	jule::Ptr<_1abe11936_Data> _68017_d = nullptr;;
	{
		auto &_match_expr{ _67913_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)) {
			_case_begin_1b15d15c9:;
			{
				_68017_d=_1abe18234__evalStruct(_self_, _67913_kind.cast_ptr<_1abd4445c_StructIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data3)) {
			_case_begin_1b15d00bc:;
			{
				_68017_d=_1abe172aa__evalEnum(_self_, _67913_kind.cast_ptr<_1abd6c265_Enum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)) {
			_case_begin_1b15d0133:;
			{
				_68017_d=_1abe179e7__evalTypeEnum(_self_, _67913_kind.cast_ptr<_1abd6d970_TypeEnum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1b15d0056:;
			{
				_68017_d=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind}), ._field_Decl=true, });
				if ((*_67036_ta.alloc)._field_Binded) {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*_67036_ta.alloc)._field_Ident;
				} else {
					(*((*(_68017_d))._field_Kind))._field_BindIdent=(*(*(*_67036_ta.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
				};
				(*(_68017_d))._field_Model=jule::Any((*_68017_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		_match_end_1b15cee35:;
	};
	(*((*(_68017_d))._field_Kind))._field_Generic=(*_67036_ta.alloc)._field_Generic;
	return _68017_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1aad8_evalDef(_1abe1365d_Eval* _self_, jule::Any* _70631_def, jule::Ptr<_1abd0a38a_Token> _70641_ident) {
	{
		auto &_match_expr{ (*(_70631_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b15d5732:;
			{
				return _1abe1a2e1_evalVar(_self_, (*(_70631_def)).cast_ptr<_1abda8d2e_Var>(&__jule_any_type8), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b15d5512:;
			{
				return _1abe176a6_evalEnum(_self_, (*(_70631_def)).cast_ptr<_1abd6c265_Enum>(&__jule_any_type66), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b15d5798:;
			{
				return _1abe17de3_evalTypeEnum(_self_, (*(_70631_def)).cast_ptr<_1abd6d970_TypeEnum>(&__jule_any_type67), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b15d580e:;
			{
				return _1abe18630_evalStruct(_self_, _1abd41b41_instance((*(_70631_def)).cast_ptr<_1abd416ce_Struct>(&__jule_any_type64)), _70641_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b15d5875:;
			{
				jule::Ptr<_1abd566a0_Fn> _71717_f = (*(_70631_def)).cast_ptr<_1abd566a0_Fn>(&__jule_any_type63);;
				if ((!(*(_71717_f))._field_Ident.equal("init", 4))) {
					return _1abe191d0_evalFn(_self_, _71717_f, _70641_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b15d58ec:;
			{
				return _1abe18971_evalFnIns(_self_, (*(_70631_def)).cast_ptr<_1abd59681_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b15d5974:;
			{
				return _1abe1a6dc_evalTypeAlias(_self_, (*(_70631_def)).cast_ptr<_1abe4203d_TypeAlias>(&__jule_any_type65), _70641_ident);;
			}
		}
		_match_end_1b15d5644:;
	};
	_1abe13bad_pushErr(_self_, _70641_ident, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_70641_ident))._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1ae29_evalIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd26494_IdentExpr> _73028_ident) {
	jule::Any _73113_def = _1abe1692a_getDef(_self_, &((*(_73028_ident))._field_Ident), (*_73028_ident.alloc)._field_Binded);;
	return _1abe1aad8_evalDef(_self_, &(_73113_def), (*_73028_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1abe11936_Data> _1abe1b26a_evalUnary(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd26c36_UnaryExpr> _73533_u) {
	_1abe31d85_unaryEval _73613_unary = static__1abe322c5_new(_self_);;
	return _1abe33705_eval(&_73613_unary, _73533_u);;
}



inline jule::Ptr<_1abe11936_Data> _1abe1b5ab_evalVariadic(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27110_VariadicExpr> _74036_v) {
	if (((*(_74036_v))._field_Expr == nullptr)) {
		_1abe13bad_pushErr(_self_.ptr(), (*_74036_v.alloc)._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _74613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_74613_prefix;
	});;
	jule::Ptr<_1abe11936_Data> _75013_d = _1abe318bd_evalExpr(_self_, (*_74036_v.alloc)._field_Expr);;
	if ((_75013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe451ea_Variadicable((*(_75013_d))._field_Kind.ptr())))) {
		_1abe13bad_pushErr(_self_, (*_74036_v.alloc)._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_75013_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	_1abe3eea3_makeVariadic(&(_75013_d), (*(_1abe464d7_Slc((*(_75013_d))._field_Kind)))._field_Elem);
	return _75013_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1b8ec_evalUnsafe(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd25edd_UnsafeExpr> _76234_u) {
	jule::Bool _7639_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1abe11936_Data> _76513_d = _1abe318bd_evalExpr(_self_, (*(_76234_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7639_unsafety;
	return _76513_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe1bc3d_evalArr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _77031_s) {
	jule::Ptr<_1abe52229_Arr> _77213_pt = _1abe46251_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1abe52229_Arr> _77413_arr = jule::new_ptr<_1abe52229_Arr>(_1abe52229_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_77213_pt))._field_Elem});;
	jule::Bool _78013_filled = false;;
	if (((*(_77031_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_77031_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type75) {
				_case_begin_1b15e5d08:;
				{
					if (((*((*((*(_77031_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1abd27110_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1b15e5c5e;
					};
					if ((*_77213_pt.alloc)._field_Auto) {
						_1abe13bad_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78013_filled=true;
					((*(_77031_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1b15e5c5e:;
		};
	};
	(*(_77413_arr))._field_N=(*_77031_s.alloc)._field_Exprs.len();
	if ((!((*_77213_pt.alloc)._field_Auto))) {
		if (((*_77413_arr.alloc)._field_N > (*_77213_pt.alloc)._field_N)) {
			_1abe13bad_pushErr(_self_, (*_77031_s.alloc)._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if (((*_77413_arr.alloc)._field_N < (*_77213_pt.alloc)._field_N)) {
			(*_77413_arr.alloc)._field_N=(*_77213_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1abd4dc2a_ArrayExprModel> _80913_model = jule::new_ptr<_1abd4dc2a_ArrayExprModel>(_1abd4dc2a_ArrayExprModel{._field_Kind=_77413_arr, });;
	if (_78013_filled) {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		(*(_80913_model))._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*_77031_s.alloc)._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1abe42d30_TypeKind> _81813_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_77413_arr.alloc)._field_Elem;
	{
		auto expr = &((*_77031_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15eca35:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1abe11936_Data> _82117_d = _1abe318bd_evalExpr(_self_, _82021_elem);;
				if ((_82117_d == nullptr)) {
					goto _iter_next_1b15eca35;
				};
				;
				if (_1ab6a7485_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), &((*(_82021_elem))._field_Token))) {
					_1ab6a30eb_checkAssignType((*_self_.alloc)._field_s, false, &((*_77413_arr.alloc)._field_Elem), &(_82117_d), (*_82021_elem.alloc)._field_Token);
				};
				(*(_80913_model))._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_82117_d))._field_Model}));
			}
			_iter_next_1b15eca35:;
			++it;
			goto _iter_begin_1b15eca35;
		}
		_iter_end_1b15eca35:;
	};
	(*_self_.alloc)._field_prefix=_81813_prefix;
	if (_78013_filled) {
		(*_80913_model.alloc)._field_Elems=jule::append((*_80913_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({nullptr}));
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_77413_arr, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80913_model, &__jule_any_type85), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe1c1e4_evalExpSlc(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _84734_s, jule::Ptr<_1abe42d30_TypeKind> _84753_t, jule::Any _84771_first) {
	jule::Ptr<_1abe4ee08_Slc> _84813_slc = jule::new_ptr<_1abe4ee08_Slc>(_1abe4ee08_Slc{._field_Elem=_84753_t});;
	jule::I32 _85213_i = 0LL;;
	jule::Ptr<_1abd4ac16_SliceExprModel> _85313_model = jule::new_ptr<_1abd4ac16_SliceExprModel>(_1abd4ac16_SliceExprModel{._field_ElemKind=_84753_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, (*(_84734_s))._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84771_first != nullptr)) {
		(*(_85313_model))._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({_84771_first}));
		_85213_i=1LL;
	};
	jule::Ptr<_1abe42d30_TypeKind> _86213_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_84813_slc))._field_Elem;
	{
		auto expr = (*_84734_s.alloc)._field_Exprs.slice(_85213_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b1605b4d:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _86421_elem = *it;
			{
				jule::Ptr<_1abe11936_Data> _86517_d = _1abe318bd_evalExpr(_self_, _86421_elem);;
				if ((_86517_d != nullptr)) {
					;
					if (_1ab6a7485_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), &((*(_86421_elem))._field_Token))) {
						_1ab6a30eb_checkAssignType((*_self_.alloc)._field_s, false, &((*_84813_slc.alloc)._field_Elem), &(_86517_d), (*_86421_elem.alloc)._field_Token);
					};
					(*_85313_model.alloc)._field_Elems=jule::append((*_85313_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*_86517_d.alloc)._field_Model}));
				};
			}
			_iter_next_1b1605b4d:;
			++it;
			goto _iter_begin_1b1605b4d;
		}
		_iter_end_1b1605b4d:;
	};
	(*_self_.alloc)._field_prefix=_86213_prefix;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_84813_slc, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85313_model, &__jule_any_type76), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe1c535_evalSliceExpr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2b1d0_SliceExpr> _88537_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1abe46251_Arr((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1b160a56a:;
				{
					return _1abe1bc3d_evalArr(_self_, _88537_s);;
				}
			}
			else if ((_1abe464d7_Slc((*_self_.alloc)._field_prefix) != nullptr)) {
				_case_begin_1b160a614:;
				{
					jule::Ptr<_1abe4ee08_Slc> _89121_pt = _1abe464d7_Slc((*_self_.alloc)._field_prefix);;
					return _1abe1c1e4_evalExpSlc(_self_, _88537_s, (*(_89121_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1b160a48d:;
		};
	};
	jule::Ptr<_1abe42d30_TypeKind> _89613_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88537_s))._field_Exprs.len() == 0LL)) {
		_1abe13bad_pushErr(_self_, (*_88537_s.alloc)._field_Token, jule::Str::lit("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _90413_firstElem = _1abe318bd_evalExpr(_self_, (*_88537_s.alloc)._field_Exprs[0LL]);;
	if ((_90413_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1ab6a7485_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*(_90413_firstElem))._field_Kind), &(_90413_firstElem), &((*((*_88537_s.alloc)._field_Exprs[0LL]))._field_Token));
	jule::Ptr<_1abe11936_Data> _91413_d = _1abe1c1e4_evalExpSlc(_self_, _88537_s, (*(_90413_firstElem))._field_Kind, (*(_90413_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_89613_prefix;
	return _91413_d;;
}



inline void _1abe1c898_checkIntegerIndexingByData(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _92050_d, jule::Ptr<_1abd0a38a_Token> _92064_token) {
	jule::Str _9219_errKey = _1abe3cb60_checkDataForIntegerIndexing(_92050_d, &(_92064_token));;
	{
		auto &_match_expr{ _9219_errKey };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b16132a9:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str::lit("type @ is invalid for indexing", 30)) {
			_case_begin_1b1612e79:;
			{
				_1abe13bad_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_92050_d))))._field_Kind.ptr()), &__jule_any_type4)}));
			}
		}
		else {
			_case_begin_1b1612ae4:;
			{
				_1abe13bad_pushErr(_self_, _92064_token, _9219_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1612d8b:;
	};
}



inline void _1abe1ccb6_indexingPtr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _93235_d, jule::Ptr<_1abe11936_Data>* _93250_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _93269_i) {
	_1abe1c898_checkIntegerIndexingByData(_self_, _93250_index, (*((*(_93269_i))))._field_Token);
	(*((*(_93235_d))))._field_Lvalue=true;
	jule::Ptr<_1abe52bec_Ptr> _93613_ptr = _1abe4599d_Ptr((*((*(_93235_d))))._field_Kind.ptr());;
	{
		
		if (_1abe53736_IsUnsafe(_93613_ptr.ptr())) {
			_case_begin_1b1615d6c:;
			{
				_1abe13bad_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1abe146a3_isUnsafe(_self_)))) {
			_case_begin_1b1615e05:;
			{
				_1abe13bad_pushErr(_self_, (*((*(_93269_i))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1615cd4:;
	};
	(*((*(_93235_d))))._field_Kind=(*(_93613_ptr))._field_Elem;
}



inline void _1abe1d1d4_indexingArr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _94835_d, jule::Ptr<_1abe11936_Data>* _94850_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _94869_i) {
	jule::Ptr<_1abe52229_Arr> _94913_arr = _1abe46251_Arr((*((*(_94835_d))))._field_Kind.ptr());;
	(*((*(_94835_d))))._field_Kind=(*(_94913_arr))._field_Elem;
	_1abe1c898_checkIntegerIndexingByData(_self_, _94850_index, (*((*(_94869_i))))._field_Token);
	(*((*(_94835_d))))._field_Lvalue=true;
	if ((_1abe1233d_IsConst((*(_94850_index)).ptr()) && (_1b9ab0187_AsF64((*((*(_94850_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_94913_arr.alloc)._field_N)))) {
		_1abe13bad_pushErr(_self_, (*((*(_94869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1abe1d602_indexingSlc(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _95835_d, jule::Ptr<_1abe11936_Data>* _95850_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _95869_i) {
	jule::Ptr<_1abe4ee08_Slc> _95913_slc = _1abe464d7_Slc((*((*(_95835_d))))._field_Kind.ptr());;
	(*((*(_95835_d))))._field_Kind=(*(_95913_slc))._field_Elem;
	_1abe1c898_checkIntegerIndexingByData(_self_, _95850_index, (*((*(_95869_i))))._field_Token);
	(*((*(_95835_d))))._field_Lvalue=true;
	if ((!(_1abe1233d_IsConst((*(_95850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95835_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b161d193:;
			{
				jule::Ptr<_1abd4ac16_SliceExprModel> _97017_m = (*((*(_95835_d))))._field_Model.unsafe_cast_ptr<_1abd4ac16_SliceExprModel>();;
				jule::F64 _97113_indx = _1b9ab0187_AsF64((*((*(_95850_index))))._field_Constant.ptr());;
				if ((_97113_indx >= static_cast<jule::F64>((*(_97017_m))._field_Elems.len()))) {
					_1abe13bad_pushErr(_self_, (*((*(_95869_i))))._field_Token, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*((*(_95835_d))))._field_Model=(*(_97017_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_97113_indx))];
					(*((*(_95835_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1b161d12c:;
	};
}



inline void _1abe1da20_indexingMap(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _98135_d, jule::Ptr<_1abe11936_Data>* _98150_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _98169_i) {
	(*((*(_98135_d))))._field_Lvalue=true;
	if (((*(_98150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1abe5159c_Map> _98613_m = _1abe47021_Map((*((*(_98135_d))))._field_Kind.ptr());;
	_1abdea39d_assignTypeChecker _98713_atc = _1abdea39d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_98613_m))._field_Key, ._field_d=(*(_98150_index)), ._field_errorToken=(*((*(_98169_i))))._field_Token};;
	_1abdeb36b_check(&_98713_atc);
	(*((*(_98135_d))))._field_Kind=(*_98613_m.alloc)._field_Val;
}



inline void _1abe1de3d_indexingStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _99735_d, jule::Ptr<_1abe11936_Data>* _99750_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _99769_i) {
	(*((*(_99735_d))))._field_Kind=_1ac02c29e_primU8;
	(*((*(_99735_d))))._field_Mutable=false;
	(*((*(_99735_d))))._field_Lvalue=true;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1abe1c898_checkIntegerIndexingByData(_self_, _99750_index, (*((*(_99769_i))))._field_Token);
	if ((!(_1abe1233d_IsConst((*(_99750_index)).ptr())))) {
		(*((*(_99735_d))))._field_Constant=nullptr;
		(*((*(_99735_d))))._field_untyped=false;
		return;;
	};
	if (_1abe1233d_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_1abd0a38a_Token> _101513_errorToken = (*((*(_99769_i))))._field_Token;;
		jule::I64 _101613_j = _1b9aaeb6a_AsI64((*((*(_99750_index))))._field_Constant.ptr());;
		jule::Str _101713_s = _1b9aae64d_ReadStr((*((*(_99735_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_101613_j) >= _101713_s.len())) {
			_1abe13bad_pushErr(_self_, _101513_errorToken, jule::Str::lit("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1b9ab06e8_SetU64((*((*(_99735_d))))._field_Constant, static_cast<jule::U64>(_101713_s[static_cast<jule::I32>(_101613_j)]));
		};
	};
}



inline void _1abe1e35b_toIndexing(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _102634_d, jule::Ptr<_1abe11936_Data>* _102649_index, jule::Ptr<_1abd2bb3c_IndexingExpr>* _102668_i) {
	{
		
		if ((_1abe4599d_Ptr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16298ec:;
			{
				_1abe1ccb6_indexingPtr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1abe46251_Arr((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1629996:;
			{
				_1abe1d1d4_indexingArr(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1abe464d7_Slc((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1629a0c:;
			{
				_1abe1d602_indexingSlc(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1abe47021_Map((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1629a73:;
			{
				_1abe1da20_indexingMap(_self_, _102634_d, _102649_index, _102668_i);
				return;;
			}
		}
		else if ((_1abe45481_Prim((*((*(_102634_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1629ad9:;
			{
				jule::Ptr<_1abe4a909_Prim> _104113_prim = _1abe45481_Prim((*((*(_102634_d))))._field_Kind);;
				{
					
					if (_1abe4dd91_IsStr(_104113_prim.ptr())) {
						_case_begin_1b162de40:;
						{
							_1abe1de3d_indexingStr(_self_, _102634_d, _102649_index, _102668_i);
							return;;
						}
					}
					_match_end_1b162dd96:;
				};
			}
		}
		_match_end_1b16297a9:;
	};
	_1abe13bad_pushErr(_self_, (*((*(_102668_i))))._field_Token, jule::Str::lit("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_102634_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Bool _1abe1e812_pushGenericsFromExprSubIdent(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27c8c_SubIdentExpr>* _105153_sexpr, jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _105214_generics, jule::Ptr<_1abd24b79_Expr>* _105242_expr) {
	jule::Ptr<_1abd21219_SubIdentTypeDecl> _105313_t = jule::new_ptr<_1abd21219_SubIdentTypeDecl>();;
	if ((!(_1abe3da73_pushSubIdentFromExpr(jule::Any((*(_105153_sexpr)), &__jule_any_type86), &(_105313_t))))) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*(_105242_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_105214_generics)); __jule_push_dest.push(jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Kind=jule::Any(_105313_t, &__jule_any_type87)})); };
	return true;;
}



inline jule::Bool _1abe1ec0d_pushGenericsFromData(jule::Ptr<_1abe1365d_Eval> _self_, jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _106245_generics, jule::Ptr<_1abd24b79_Expr>* _106273_expr) {
	{
		auto &_match_expr{ (*((*(_106273_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b163354e:;
			{
				jule::Ptr<_1abd26c36_UnaryExpr> _106517_u = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd26c36_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_106517_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1b1635474:;
						{
							jule::Ptr<_1abd2236e_PtrTypeDecl> _106821_kind = jule::new_ptr<_1abd2236e_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _106921__generics = jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, 1LL);;
							_1abe1ec0d_pushGenericsFromData(_self_, &(_106921__generics), &((*(_106517_u))._field_Expr));
							(*_106821_kind.alloc)._field_Elem=_106921__generics[0LL];
							{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_106821_kind, &__jule_any_type70)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1b16354da:;
						{
							jule::Ptr<_1abd218e0_SptrTypeDecl> _107721_kind = jule::new_ptr<_1abd218e0_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _107821__generics = jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, 1LL);;
							_1abe1ec0d_pushGenericsFromData(_self_, &(_107821__generics), &((*(_106517_u))._field_Expr));
							(*_107721_kind.alloc)._field_Elem=_107821__generics[0LL];
							{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*((*(_106273_expr))))._field_Token, ._field_Kind=jule::Any(_107721_kind, &__jule_any_type71)})); };
						}
					}
					else {
						_case_begin_1b1634330:;
						{
							_1abe13bad_pushErr(_self_.ptr(), (*(_106517_u))._field_Op, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b16347c5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b16335b5:;
			{
				{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd20845_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b16328e4:;
			{
				jule::Ptr<_1abd27c8c_SubIdentExpr> _109217_sexpr = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd27c8c_SubIdentExpr>();;
				return _1abe1e812_pushGenericsFromExprSubIdent(_self_, &(_109217_sexpr), _106245_generics, _106273_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b163295a:;
			{
				jule::Ptr<_1abd26494_IdentExpr> _109517_ident = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd26494_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*_109517_ident.alloc)._field_Token, ._field_Ident=(*_109517_ident.alloc)._field_Ident, ._field_Binded=(*(_109517_ident))._field_Binded, }), &__jule_any_type74)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b16329c1:;
			{
				{
					auto expr = &((*((*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd2576d_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b163b9ca:;
					if (it != expr_end) {
						jule::Ptr<_1abd24b79_Expr> _110425_texpr = *it;
						{
							if ((!(_1abe1ec0d_pushGenericsFromData(_self_, _106245_generics, &(_110425_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b163b9ca:;
						++it;
						goto _iter_begin_1b163b9ca;
					}
					_iter_end_1b163b9ca:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b1632a37:;
			{
				jule::Ptr<_1abd278b3_NsSelectionExpr> _111017_ns = (*((*(_106273_expr))))._field_Kind.unsafe_cast_ptr<_1abd278b3_NsSelectionExpr>();;
				jule::Ptr<_1abd20e50_IdentTypeDecl> _111117_decl = jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*(_111017_ns))._field_Ident, ._field_Ident=(*((*_111017_ns.alloc)._field_Ident))._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*(_106245_generics)); __jule_push_dest.push(jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*(_111117_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1abd215e3_NamespaceTypeDecl>(_1abd215e3_NamespaceTypeDecl{._field_Idents=(*_111017_ns.alloc)._field_Ns, ._field_Kind=jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*_111117_decl.alloc)._field_Token, ._field_Kind=jule::Any(_111117_decl, &__jule_any_type74)})}), &__jule_any_type91)})); };
			}
		}
		else {
			_case_begin_1b163287d:;
			{
				_1abe13bad_pushErr(_self_.ptr(), (*((*(_106273_expr))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b1632828:;
	};
	return true;;
}



inline void _1abe20071_evalIdentDeclFromIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe11936_Data>* _113250_d, jule::Ptr<_1abd2bb3c_IndexingExpr>* _113265_i) {
	jule::Ptr<_1abd4445c_StructIns> _113313_s = _1abe46a04_Struct((*((*(_113250_d))))._field_Kind.ptr());;
	if ((_113313_s == nullptr)) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*((*(_113265_i))))._field_Expr))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_113250_d))))._field_Kind), &__jule_any_type4)}));
		(*(_113250_d))=nullptr;
		return;;
	};
	jule::Ptr<_1abd20e50_IdentTypeDecl> _114017_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_113265_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b11e8741:;
			{
				jule::Ptr<_1abd26494_IdentExpr> _114317_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1abd26494_IdentExpr>();;
				_114017_decl=jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*_114317_expr.alloc)._field_Token, ._field_Ident=(*_114317_expr.alloc)._field_Ident, ._field_Binded=(*(_114317_expr))._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b11e9b4e:;
			{
				jule::Ptr<_1abd278b3_NsSelectionExpr> _115017_expr = (*((*((*(_113265_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1abd278b3_NsSelectionExpr>();;
				_114017_decl=jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*(_115017_expr))._field_Ident, ._field_Ident=(*((*_115017_expr.alloc)._field_Ident))._field_Kind, });
			}
		}
		else {
			_case_begin_1b11e8cd5:;
			{
				_1abe13bad_pushErr(_self_, (*((*(_113265_i))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_113250_d))=nullptr;
				return;;
			}
		}
		_match_end_1b11e8c80:;
	};
	if ((!(_1abe1ec0d_pushGenericsFromData(_self_, &((*(_114017_decl))._field_Generics), &((*((*(_113265_i))))._field_Index))))) {
		(*(_113250_d))=nullptr;
		return;;
	};
	_113313_s=({ auto _wrap_copy = _1abe26a6c_typeChecker(_self_); _1abe58b37_fromStruct(&_wrap_copy, &(_114017_decl), &((*(_113313_s))._field_Decl)); });
	if ((_113313_s == nullptr)) {
		(*(_113250_d))=nullptr;
		return;;
	};
	(*(*((*(_113250_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_113313_s, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0);
}



inline jule::Bool _1abe20527_checkGenericFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd59681_FnIns>* _117539_f, jule::Ptr<_1abd0a38a_Token>* _117555_et, jule::Any* _117572_model) {
	jule::Bool _11769_ok = _1ab6a6572_reloadFnInsTypes((*(_self_))._field_s, (*(_117539_f)));;
	(*((*(_117539_f))))._field_reloaded=true;
	if ((!(_11769_ok))) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _118113_existInstance = _1abd5821d_appendInstance((*((*(_117539_f))))._field_Decl.ptr(), _117539_f);;
	if ((!(_1ab6a55c6_checkConstraintsFn((*_self_.alloc)._field_s, _117539_f, _117555_et, _118113_existInstance)))) {
		return false;;
	};
	if ((_118113_existInstance != nullptr)) {
		_1abe3d80e_updateModelToGenericIns(_117572_model, &(_118113_existInstance));
		_1ae76c49d_updateRefer(_1abe16bb1_getOwnerRefers(_self_), _117539_f, &(_118113_existInstance));
		(*(_117539_f))=_118113_existInstance;
	} else {
		_1ab6b58c2_checkFnInsCaller((*_self_.alloc)._field_s, _117539_f, (*(_117555_et)));
	};
	return true;;
}



inline void _1abe2088a_evalFnGenericFromIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe11936_Data>* _120450_d, jule::Ptr<_1abd2bb3c_IndexingExpr>* _120465_i) {
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _120513_generics = jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1abe1ec0d_pushGenericsFromData(_self_, &(_120513_generics), &((*((*(_120465_i))))._field_Index))))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1abd59681_FnIns> _121113_f = _1abe4676d_Fn((*((*(_120450_d))))._field_Kind.ptr());;
	jule::I32 _121213_genericsLen = 0LL;;
	if (((*(_121113_f))._field_Decl != nullptr)) {
		_121213_genericsLen=(*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1ab69bb1c_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _121213_genericsLen, _120513_generics.len(), (*((*((*(_120465_i))))._field_Expr))._field_Token)))) {
		(*(_120450_d))=nullptr;
		return;;
	};
	(*_121113_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1abe41449_InsGeneric>>::alloc(0LL, (*(*_121113_f.alloc)._field_Decl.alloc)._field_Generics.len());
	{
		auto expr = &(_120513_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae774593:;
		if (it != expr_end) {
			jule::Ptr<_1abd20845_TypeDecl> _122321_g = *it;
			{
				jule::Ptr<_1abe11936_Data> _122417_k = _1abe26dad_evalType(_self_, _122321_g);;
				if ((_122417_k == nullptr)) {
					(*(_120450_d))=nullptr;
					return;;
				};
				(*_121113_f.alloc)._field_Generics=jule::append((*_121113_f.alloc)._field_Generics,jule::Slice<jule::Ptr<_1abe41449_InsGeneric>>::make({jule::new_ptr<_1abe41449_InsGeneric>(_1abe41449_InsGeneric{._field_Kind=(*(_122417_k))._field_Kind, })}));
			}
			_iter_next_1ae774593:;
			++it;
			goto _iter_begin_1ae774593;
		}
		_iter_end_1ae774593:;
	};
	if (_1abd5ab16_IsBuiltin(_121113_f)) {
		return;;
	};
	if (_1abe20527_checkGenericFn(_self_, &(_121113_f), &((*(*((*(_120465_i))))._field_Expr.alloc)._field_Token), &((*((*(_120450_d))))._field_Model))) {
		(*(*((*(_120450_d))))._field_Kind.alloc)._field_Kind=jule::Trait(_121113_f, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1);
	} else {
		(*(_120450_d))=nullptr;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe20bcb_evalIndexing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2bb3c_IndexingExpr> _124336_i) {
	jule::Ptr<_1abe42d30_TypeKind> _124413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_124413_prefix;
	});;
	jule::Ptr<_1abe11936_Data> _124813_d = _1abe30aa9_evalExprKind(_self_, (*((*(_124336_i))._field_Expr))._field_Kind);;
	if ((_124813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_124813_d))._field_Decl) {
		_1abe20071_evalIdentDeclFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	if ((_1abe4676d_Fn((*(_124813_d))._field_Kind.ptr()) != nullptr)) {
		_1abe2088a_evalFnGenericFromIndexing(_self_, &(_124813_d), &(_124336_i));
		return _124813_d;;
	};
	_1abe11936_Data _126413_oldData = (*(_124813_d));;
	jule::Ptr<_1abe11936_Data> _126613_index = _1abe318bd_evalExpr(_self_, (*_124336_i.alloc)._field_Index);;
	if ((_126613_index == nullptr)) {
		return nullptr;;
	};
	(*(_124813_d))._field_Decl=false;
	_1abe1e35b_toIndexing(_self_, &(_124813_d), &(_126613_index), &(_124336_i));
	if (_1abe1233d_IsConst(_124813_d.ptr())) {
		(*(_124813_d))._field_Decl=false;
		(*(_124813_d))._field_Model=jule::Any((*(_124813_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_124813_d))._field_Decl) {
		(*(_124813_d))._field_Decl=false;
	} else {
		(*(_124813_d))._field_Model=jule::Any(jule::new_ptr<_1abd4b1bc_IndexingExprModel>(_1abd4b1bc_IndexingExprModel{._field_Token=(*_124336_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1abe11936_Data>(_126413_oldData), ._field_Index=_126613_index}), &__jule_any_type44);
	};
	return _124813_d;;
}



inline __jule_tuple_x_1abe11936_Data__jule_tuple_x_1abe11936_Data _1abe2101c_evalSlicingExprs(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2c29c_SlicingExpr>* _129741_s) {
	__jule_tuple_x_1abe11936_Data__jule_tuple_x_1abe11936_Data __jule_func_result;
	jule::Ptr<_1abe42d30_TypeKind> _129813_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_129813_prefix;
	});;
	jule::Ptr<_1abe11936_Data> _130217_l = nullptr;;
	jule::Ptr<_1abe11936_Data> _130317_r = nullptr;;
	if (((*((*(_129741_s))))._field_Start != nullptr)) {
		_130217_l=_1abe318bd_evalExpr(_self_, (*((*(_129741_s))))._field_Start);
		if ((_130217_l != nullptr)) {
			_1abe1c898_checkIntegerIndexingByData(_self_, &(_130217_l), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_130217_l=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02b49b_primInt, ._field_Constant=static__1b9aac915_NewI64(0LL)});
		(*((*(_130217_l))._field_Constant))._field_Kind=jule::Str::lit("int", 3);
		(*_130217_l.alloc)._field_Model=jule::Any((*_130217_l.alloc)._field_Constant, &__jule_any_type19);
	};
	if (((*((*(_129741_s))))._field_To != nullptr)) {
		_130317_r=_1abe318bd_evalExpr(_self_, (*((*(_129741_s))))._field_To);
		if ((_130317_r != nullptr)) {
			_1abe1c898_checkIntegerIndexingByData(_self_, &(_130317_r), (*((*(_129741_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _130217_l;
	__jule_func_result.__jule_result_arg1 = _130317_r;
	return __jule_func_result;;
}



inline void _1abe212c5_slicingArr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _133330_d) {
	jule::Ptr<_1abe42d30_TypeKind> _133413_elemType = (*(_1abe46251_Arr((*((*(_133330_d))))._field_Kind.ptr())))._field_Elem;;
	(*((*(_133330_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4ee08_Slc>(_1abe4ee08_Slc{._field_Elem=_133413_elemType}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)});
	(*((*(_133330_d))))._field_Lvalue=false;
	(*((*(_133330_d))))._field_Mutable=((*((*(_133330_d))))._field_Mutable || (!(_1abe446b1_Mutable(_133413_elemType.ptr()))));
}



inline void _1abe216e3_slicingStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _134830_d, jule::Ptr<_1abe11936_Data>* _134841_l, jule::Ptr<_1abe11936_Data>* _134852_r) {
	(*((*(_134830_d))))._field_Lvalue=false;
	(*((*(_134830_d))))._field_Mutable=true;
	if ((!(_1abe1233d_IsConst((*(_134830_d)).ptr())))) {
		return;;
	};
	if ((((*(_134841_l)) == nullptr) || ((*(_134852_r)) == nullptr))) {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
		return;;
	};
	if ((_1abe1233d_IsConst((*(_134841_l)).ptr()) && _1abe1233d_IsConst((*(_134852_r)).ptr()))) {
		jule::I64 _136213_left = _1b9aaeb6a_AsI64((*((*(_134841_l))))._field_Constant.ptr());;
		if ((_136213_left < 0LL)) {
			return;;
		};
		jule::Str _136713_s = _1b9aae64d_ReadStr((*((*(_134830_d))))._field_Constant);;
		jule::I64 _136817_right = static_cast<jule::I64>(0LL);;
		if (((*(_134852_r)) == nullptr)) {
			_136817_right=static_cast<jule::I64>(_136713_s.len());
		} else {
			_136817_right=_1b9aaeb6a_AsI64((*((*(_134852_r))))._field_Constant);
		};
		if ((_136213_left > _136817_right)) {
			return;;
		};
		_1b9ab0c59_SetStr((*((*(_134830_d))))._field_Constant, _136713_s.slice(static_cast<jule::I32>(_136213_left), static_cast<jule::I32>(_136817_right)));
		(*((*(_134830_d))))._field_Decl=true;
	} else {
		(*((*(_134830_d))))._field_Constant=nullptr;
		(*((*(_134830_d))))._field_untyped=false;
	};
}



inline void _1abe21bbb_checkSlicing(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _138636_d, jule::Ptr<_1abe11936_Data>* _138647_l, jule::Ptr<_1abe11936_Data>* _138658_r, jule::Ptr<_1abd2c29c_SlicingExpr>* _138669_s) {
	{
		
		if ((_1abe46251_Arr((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae79001a:;
			{
				_1abe212c5_slicingArr(_self_, _138636_d);
				return;;
			}
		}
		else if ((_1abe464d7_Slc((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae7900b4:;
			{
				return;;
			}
		}
		else if ((_1abe45481_Prim((*((*(_138636_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae79012a:;
			{
				jule::Ptr<_1abe4a909_Prim> _139413_prim = _1abe45481_Prim((*((*(_138636_d))))._field_Kind);;
				{
					
					if (_1abe4dd91_IsStr(_139413_prim.ptr())) {
						_case_begin_1ae7928ad:;
						{
							_1abe216e3_slicingStr(_self_, _138636_d, _138647_l, _138658_r);
							return;;
						}
					}
					_match_end_1ae792814:;
				};
			}
		}
		_match_end_1ae78ede9:;
	};
	_1abe13bad_pushErr(_self_, (*((*(_138669_s))))._field_Token, jule::Str::lit("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_138636_d))))._field_Kind.ptr()), &__jule_any_type4)}));
}



inline jule::Ptr<_1abe11936_Data> _1abe2200c_evalSlicing(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2c29c_SlicingExpr> _140535_s) {
	jule::Ptr<_1abe11936_Data> _140613_d = _1abe318bd_evalExpr(_self_, (*(_140535_s))._field_Expr);;
	if ((_140613_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _141113_l;
	jule::Ptr<_1abe11936_Data> _141120_r;
	({
		__jule_tuple_x_1abe11936_Data__jule_tuple_x_1abe11936_Data __jule_assign_result = _1abe2101c_evalSlicingExprs(_self_, &(_140535_s));
		_141113_l = __jule_assign_result.__jule_result_arg0;
		_141120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_141113_l == nullptr)) {
		return _140613_d;;
	};
	(*(_140613_d))._field_Decl=false;
	_1abe21bbb_checkSlicing(_self_, &(_140613_d), &(_141113_l), &(_141120_r), &(_140535_s));
	if (_1abe1233d_IsConst(_140613_d.ptr())) {
		(*(_140613_d))._field_Decl=false;
		(*(_140613_d))._field_Model=jule::Any((*(_140613_d))._field_Constant, &__jule_any_type19);
	} else if ((*(_140613_d))._field_Decl) {
		(*(_140613_d))._field_Decl=false;
	} else {
		jule::Ptr<_1abd4c586_SlicingExprModel> _142917_model = jule::new_ptr<_1abd4c586_SlicingExprModel>(_1abd4c586_SlicingExprModel{._field_Token=(*_140535_s.alloc)._field_Token, ._field_Expr=(*(_140613_d))._field_Model, ._field_Left=(*(_141113_l))._field_Model, });;
		if ((_141120_r != nullptr)) {
			(*(_142917_model))._field_Right=(*_141120_r.alloc)._field_Model;
		};
		(*(_140613_d))._field_Model=jule::Any(_142917_model, &__jule_any_type92);
	};
	return _140613_d;;
}



inline void _1abe2242a_castPtr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _144230_t, jule::Ptr<_1abe11936_Data> _144248_d, jule::Ptr<_1abd0a38a_Token> _144258_errorToken) {
	(*(_144248_d))._field_Constant=nullptr;
	(*_144248_d.alloc)._field_untyped=false;
	jule::Ptr<_1abe4e435_Sptr> _14459_sptr = _1abe45717_Sptr((*_144248_d.alloc)._field_Kind.ptr());;
	if ((_14459_sptr != nullptr)) {
		if ((!(_1abe43539_Equal((*(_1abe4599d_Ptr(_144230_t.ptr())))._field_Elem, (*_14459_sptr.alloc)._field_Elem)))) {
			_1abe13bad_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_144230_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((!(_1abe146a3_isUnsafe(_self_)))) {
		_1abe13bad_pushErr(_self_, _144258_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _14589_prim = _1abe45481_Prim((*_144248_d.alloc)._field_Kind);;
	if (((_1abe4599d_Ptr((*_144248_d.alloc)._field_Kind) == nullptr) && ((_14589_prim == nullptr) || (!(_1b9aab859_IsInt(_1abe4ac4a_Str(_14589_prim.ptr()))))))) {
		_1abe13bad_pushErr(_self_, _144258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_144248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_144230_t), &__jule_any_type4)}));
	};
}



inline void _1abe22848_castStruct(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _146433_t, jule::Ptr<_1abe11936_Data> _146451_d, jule::Ptr<_1abd0a38a_Token> _146461_errorToken) {
	(*(_146451_d))._field_Constant=nullptr;
	(*_146451_d.alloc)._field_untyped=false;
	jule::Ptr<_1abd69a59_Trait> _146713_tr = _1abe46c8a_Trait((*_146451_d.alloc)._field_Kind.ptr());;
	if ((_146713_tr == nullptr)) {
		_1abe13bad_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_146433_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _147313_s = _1abe46a04_Struct(_146433_t);;
	_1ae7a3803_pushReference(_self_, &(_147313_s));
	if ((!(_1abd42d1d_IsImplements((*(_147313_s))._field_Decl.ptr(), _146713_tr)))) {
		_1abe13bad_pushErr(_self_, _146461_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_146451_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_146433_t), &__jule_any_type4)}));
	};
}



inline void _1abe22c66_castRef(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _148130_t, jule::Ptr<_1abe11936_Data> _148148_d, jule::Ptr<_1abd0a38a_Token> _148158_errorToken) {
	(*(_148148_d))._field_Constant=nullptr;
	(*_148148_d.alloc)._field_untyped=false;
	jule::Ptr<_1abe4e435_Sptr> _148413_sptr = _1abe45717_Sptr(_148130_t.ptr());;
	jule::Ptr<_1abe52bec_Ptr> _148613_ptr = _1abe4599d_Ptr((*_148148_d.alloc)._field_Kind.ptr());;
	if (((_148613_ptr != nullptr) && _1abe43539_Equal((*(_148413_sptr))._field_Elem, (*_148613_ptr.alloc)._field_Elem))) {
		if ((!(_1abe146a3_isUnsafe(_self_)))) {
			_1abe13bad_pushErr(_self_, _148158_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1abe46a04_Struct((*_148413_sptr.alloc)._field_Elem) != nullptr)) {
		_1abe22848_castStruct(_self_, (*_148413_sptr.alloc)._field_Elem, _148148_d, _148158_errorToken);
		return;;
	};
	_1abe13bad_pushErr(_self_, _148158_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_148148_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_148130_t), &__jule_any_type4)}));
}



inline void _1abe23184_castSlc(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _150430_t, jule::Ptr<_1abe11936_Data> _150448_d, jule::Ptr<_1abd0a38a_Token> _150458_errorToken) {
	jule::Ptr<_1b9aac4c5_Const> _15059_c = (*(_150448_d))._field_Constant;;
	(*_150448_d.alloc)._field_Constant=nullptr;
	(*_150448_d.alloc)._field_untyped=false;
	if ((_1abe45c34_Enum((*_150448_d.alloc)._field_Kind.ptr()) != nullptr)) {
		if (((_1abe45481_Prim((*((*(_1abe45c34_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind))._field_Kind.ptr()) == nullptr) || (!(_1abe4dd91_IsStr(_1abe45481_Prim((*(*(_1abe45c34_Enum((*_150448_d.alloc)._field_Kind)))._field_Kind.alloc)._field_Kind).ptr()))))) {
			_1abe13bad_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_150430_t.ptr()), &__jule_any_type4)}));
			return;;
		};
	} else if (((_1abe45481_Prim((*_150448_d.alloc)._field_Kind.ptr()) == nullptr) || (!(_1abe4dd91_IsStr(_1abe45481_Prim((*_150448_d.alloc)._field_Kind).ptr()))))) {
		_1abe13bad_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_150448_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_150430_t.ptr()), &__jule_any_type4)}));
		return;;
	};
	_150430_t=(*(_1abe464d7_Slc(_150430_t.ptr())))._field_Elem;
	jule::Ptr<_1abe4a909_Prim> _15209_prim = _1abe45481_Prim(_150430_t);;
	if (((_15209_prim == nullptr) || ((!(_1abe4c301_IsU8(_15209_prim.ptr()))) && (!(_1abe4bcd4_IsI32(_15209_prim.ptr())))))) {
		_1abe13bad_pushErr(_self_, _150458_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_150448_d.alloc)._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str(_150430_t), &__jule_any_type4)}));
		return;;
	};
	if ((_15059_c != nullptr)) {
		{
			
			if (_1abe4c301_IsU8(_15209_prim.ptr())) {
				_case_begin_1ae7b766e:;
				{
					jule::Str _153017_s = _1b9aae64d_ReadStr(_15059_c);;
					jule::Ptr<_1abd4ac16_SliceExprModel> _153121_model = jule::new_ptr<_1abd4ac16_SliceExprModel>(_1abd4ac16_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153017_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153017_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ae7b9176:;
						if (it != expr_end) {
							jule::U8 *_153524_b = it;
							{
								jule::Ptr<_1b9aac4c5_Const> _153625_bc = static__1b9aacbce_NewU64(static_cast<jule::U64>((*(_153524_b))));;
								(*(_153625_bc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_153121_model))._field_Elems=jule::append((*_153121_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_153625_bc, &__jule_any_type19)}));
							}
							_iter_next_1ae7b9176:;
							++it;
							goto _iter_begin_1ae7b9176;
						}
						_iter_end_1ae7b9176:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_153121_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			else if (_1abe4bcd4_IsI32(_15209_prim.ptr())) {
				_case_begin_1ae7b7718:;
				{
					jule::Slice<jule::I32> _154317_runes = static_cast<jule::Slice<jule::I32>>(_1b9aae64d_ReadStr(_15059_c));;
					jule::Ptr<_1abd4ac16_SliceExprModel> _154421_model = jule::new_ptr<_1abd4ac16_SliceExprModel>(_1abd4ac16_SliceExprModel{._field_ElemKind=_150430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _154317_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_154317_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ae7bc586:;
						if (it != expr_end) {
							jule::I32 *_154824_r = it;
							{
								jule::Ptr<_1b9aac4c5_Const> _154925_rc = static__1b9aac915_NewI64(static_cast<jule::I64>((*(_154824_r))));;
								(*(_154925_rc))._field_Kind=(*(_15209_prim))._field_Kind;
								(*(_154421_model))._field_Elems=jule::append((*_154421_model.alloc)._field_Elems,jule::Slice<jule::Any>::make({jule::Any(_154925_rc, &__jule_any_type19)}));
							}
							_iter_next_1ae7bc586:;
							++it;
							goto _iter_begin_1ae7bc586;
						}
						_iter_end_1ae7bc586:;
					};
					(*_150448_d.alloc)._field_Model=jule::Any(_154421_model, &__jule_any_type76);
					(*_150448_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1ae7b7592:;
		};
	};
}



inline void _1abe234e7_castStr(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _155930_d, jule::Ptr<_1abd0a38a_Token> _155940_errorToken) {
	if ((_1abe45c34_Enum((*(_155930_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abd6c265_Enum> _156117_e = _1abe45c34_Enum((*_155930_d.alloc)._field_Kind);;
		if (((_1abe45481_Prim((*((*(_156117_e))._field_Kind))._field_Kind.ptr()) != nullptr) && _1abe4dd91_IsStr(_1abe45481_Prim((*(*_156117_e.alloc)._field_Kind.alloc)._field_Kind).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b9aac4c5_Const> _15679_c = (*_155930_d.alloc)._field_Constant;;
	(*_155930_d.alloc)._field_Constant=nullptr;
	(*_155930_d.alloc)._field_untyped=false;
	if ((_1abe45481_Prim((*_155930_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1abe4a909_Prim> _157113_prim = _1abe45481_Prim((*_155930_d.alloc)._field_Kind);;
		if (((!(_1abe4c301_IsU8(_157113_prim.ptr()))) && (!(_1abe4bcd4_IsI32(_157113_prim))))) {
			_1abe13bad_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
			return;;
		};
		if ((_15679_c != nullptr)) {
			{
				
				if (_1abe4c301_IsU8(_157113_prim)) {
					_case_begin_1ae7c4e0c:;
					{
						(*_155930_d.alloc)._field_Constant=static__1b9aad262_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1b9aaee01_AsU64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				else if (_1abe4bcd4_IsI32(_157113_prim)) {
					_case_begin_1ae7c4ea6:;
					{
						(*_155930_d.alloc)._field_Constant=static__1b9aad262_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1b9aaeb6a_AsI64(_15679_c))));
						(*_155930_d.alloc)._field_Model=jule::Any((*_155930_d.alloc)._field_Constant, &__jule_any_type19);
						(*_155930_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1ae7c4cec:;
			};
		};
		return;;
	};
	jule::Ptr<_1abe4ee08_Slc> _159213_s = _1abe464d7_Slc((*_155930_d.alloc)._field_Kind);;
	if ((_159213_s == nullptr)) {
		_1abe13bad_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _159813_t = (*(_159213_s))._field_Elem;;
	jule::Ptr<_1abe4a909_Prim> _15999_prim = _1abe45481_Prim(_159813_t.ptr());;
	if (((_15999_prim == nullptr) || ((!(_1abe4c301_IsU8(_15999_prim.ptr()))) && (!(_1abe4bcd4_IsI32(_15999_prim.ptr())))))) {
		_1abe13bad_pushErr(_self_, _155940_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*_155930_d.alloc)._field_Kind), &__jule_any_type4)}));
		return;;
	};
}



inline void _1abe23915_castInt(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _160630_t, jule::Ptr<_1abe11936_Data> _160648_d, jule::Ptr<_1abd0a38a_Token> _160658_errorToken) {
	if (_1abe1233d_IsConst(_160648_d.ptr())) {
		jule::Ptr<_1abe4a909_Prim> _160813_prim = _1abe45481_Prim(_160630_t.ptr());;
		{
			
			if (_1b9aab282_IsSigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ae7cd487:;
				{
					_1b9ab0440_SetI64((*_160648_d.alloc)._field_Constant.ptr(), _1b9aaeb6a_AsI64((*_160648_d.alloc)._field_Constant));
				}
			}
			else if (_1b9aab590_IsUnsigInt((*(_160813_prim))._field_Kind)) {
				_case_begin_1ae7cd531:;
				{
					_1b9ab06e8_SetU64((*_160648_d.alloc)._field_Constant.ptr(), _1b9aaee01_AsU64((*_160648_d.alloc)._field_Constant));
				}
			}
			_match_end_1ae7cd410:;
		};
	} else {
		(*(_160648_d))._field_Constant=nullptr;
		(*_160648_d.alloc)._field_untyped=false;
	};
	if ((_1abe45c34_Enum((*(_160648_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abd6c265_Enum> _162113_e = _1abe45c34_Enum((*_160648_d.alloc)._field_Kind);;
		if (_1b9aabe31_IsNum(_1abe431e8_Str((*((*(_162113_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1abe45717_Sptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1abe4a909_Prim> _162813_prim = _1abe45481_Prim(_160630_t.ptr());;
		if ((!(_1abe4d874_IsUintptr(_162813_prim.ptr())))) {
			_1abe13bad_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_160630_t), &__jule_any_type4)}));
		};
		return;;
	};
	if ((_1abe4599d_Ptr((*_160648_d.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1abe4a909_Prim> _163513_prim = _1abe45481_Prim(_160630_t);;
		if (_1abe4d874_IsUintptr(_163513_prim.ptr())) {
		} else if ((!(_1abe146a3_isUnsafe(_self_)))) {
			_1abe13bad_pushErr(_self_, _160658_errorToken, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _16449_prim = _1abe45481_Prim((*_160648_d.alloc)._field_Kind);;
	if (((_16449_prim != nullptr) && _1b9aabe31_IsNum(_1abe4ac4a_Str(_16449_prim)))) {
		return;;
	};
	_1abe13bad_pushErr(_self_, _160658_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_160648_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_160630_t), &__jule_any_type4)}));
}



inline void _1abe23d33_castNum(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _165230_t, jule::Ptr<_1abe11936_Data> _165248_d, jule::Ptr<_1abd0a38a_Token> _165258_errorToken) {
	if (_1abe1233d_IsConst(_165248_d.ptr())) {
		jule::Ptr<_1abe4a909_Prim> _165413_prim = _1abe45481_Prim(_165230_t.ptr());;
		{
			
			if (_1b9aabb9a_IsFloat((*(_165413_prim))._field_Kind)) {
				_case_begin_1ae7d97a1:;
				{
					_1b9ab1012_SetF64((*_165248_d.alloc)._field_Constant.ptr(), _1b9ab0187_AsF64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_1b9aab282_IsSigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ae7d984a:;
				{
					_1b9ab0440_SetI64((*_165248_d.alloc)._field_Constant.ptr(), _1b9aaeb6a_AsI64((*_165248_d.alloc)._field_Constant));
				}
			}
			else if (_1b9aab590_IsUnsigInt((*(_165413_prim))._field_Kind)) {
				_case_begin_1ae7d98b1:;
				{
					_1b9ab06e8_SetU64((*_165248_d.alloc)._field_Constant.ptr(), _1b9aaee01_AsU64((*_165248_d.alloc)._field_Constant));
				}
			}
			_match_end_1ae7d96d5:;
		};
	} else {
		(*(_165248_d))._field_Constant=nullptr;
		(*_165248_d.alloc)._field_untyped=false;
	};
	if ((_1abe45c34_Enum((*(_165248_d))._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1abd6c265_Enum> _166913_e = _1abe45c34_Enum((*_165248_d.alloc)._field_Kind);;
		if (_1b9aabe31_IsNum(_1abe431e8_Str((*((*(_166913_e))._field_Kind))._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1abe4a909_Prim> _16759_prim = _1abe45481_Prim((*_165248_d.alloc)._field_Kind);;
	if (((_16759_prim != nullptr) && _1b9aabe31_IsNum(_1abe4ac4a_Str(_16759_prim)))) {
		return;;
	};
	_1abe13bad_pushErr(_self_, _165258_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_165248_d.alloc)._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str(_165230_t.ptr()), &__jule_any_type4)}));
}



inline void _1abe24251_castPrim(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _168331_t, jule::Ptr<_1abe11936_Data> _168349_d, jule::Ptr<_1abd0a38a_Token> _168359_errorToken) {
	jule::Ptr<_1abe4a909_Prim> _16849_prim = _1abe45481_Prim(_168331_t.ptr());;
	{
		
		if (_1abe4e127_IsAny(_16849_prim.ptr())) {
			_case_begin_1ae7e2c60:;
			{
				(*(_168349_d))._field_Constant=nullptr;
				(*_168349_d.alloc)._field_untyped=false;
			}
		}
		else if (_1abe4dd91_IsStr(_16849_prim.ptr())) {
			_case_begin_1ae7e291e:;
			{
				_1abe234e7_castStr(_self_, _168349_d, _168359_errorToken);
			}
		}
		else if (_1b9aab859_IsInt(_1abe4ac4a_Str(_16849_prim.ptr()))) {
			_case_begin_1ae7e2985:;
			{
				_1abe23915_castInt(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else if (_1b9aabe31_IsNum(_1abe4ac4a_Str(_16849_prim.ptr()))) {
			_case_begin_1ae7e29eb:;
			{
				_1abe23d33_castNum(_self_, _168331_t, _168349_d, _168359_errorToken);
			}
		}
		else {
			_case_begin_1ae7e28a8:;
			{
				_1abe13bad_pushErr(_self_, _168359_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str(_168331_t), &__jule_any_type4)}));
			}
		}
		_match_end_1ae7e2842:;
	};
}



inline void _1abe245b4_castConstant(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _170136_t, jule::Ptr<_1abe11936_Data>* _170155_d) {
	if ((((*(_170155_d)) == nullptr) || (!(_1abe1233d_IsConst((*(_170155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _17059_prim = _1abe45481_Prim((*(_170136_t)).ptr());;
	_1abe3d2e2_castConstByType(&((*(_17059_prim))._field_Kind), _170155_d);
	(*((*(_170155_d))))._field_Model=jule::Any((*((*(_170155_d))))._field_Constant, &__jule_any_type19);
}



inline void _1abe249d2_castTypeEnum(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _171036_t, jule::Ptr<_1abe11936_Data>* _171055_d, jule::Ptr<_1abd0a38a_Token>* _171070_errorToken) {
	jule::I32 _17119_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab6a3a58_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_171055_d))))._field_Kind), _171036_t, _171070_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17119_n);;
		_1abe13bad_pushErr(_self_, (*(_171070_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_171055_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_171036_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_171055_d))))._field_Constant=nullptr;
	(*((*(_171055_d))))._field_untyped=false;
}



inline void _1abe24e00_castTypeEnumT(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind>* _172037_t, jule::Ptr<_1abe11936_Data>* _172056_d, jule::Ptr<_1abd0a38a_Token>* _172071_errorToken) {
	jule::I32 _17219_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1ab6a3a58_checkTypeCompatibility((*(_self_))._field_s, _172037_t, &((*((*(_172056_d))))._field_Kind), _172071_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17219_n);;
		_1abe13bad_pushErr(_self_, (*(_172071_errorToken)), jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_172056_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_172037_t)).ptr()), &__jule_any_type4)}));
	};
	(*((*(_172056_d))))._field_Constant=nullptr;
	(*((*(_172056_d))))._field_untyped=false;
}



inline jule::Ptr<_1abe11936_Data> _1abe253a6_evalCastByTypeNData(_1abe1365d_Eval* _self_, jule::Ptr<_1abe42d30_TypeKind> _173042_t, jule::Ptr<_1abe11936_Data> _173060_d, jule::Ptr<_1abd0a38a_Token> _173074_errorToken) {
	if (((_173060_d != nullptr) && (*_173060_d.alloc)._field_Decl)) {
		_1abe13bad_pushErr(_self_, _173074_errorToken, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1abe11d21_IsNil(_173060_d)) {
			_case_begin_1ae80082d:;
			{
				if ((!(_1abe44bcd_NilCompatible(_173042_t.ptr())))) {
					_1abe13bad_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type4),jule::Any(_1abe431e8_Str(_173042_t), &__jule_any_type4)}));
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1abe45481_Prim((*_173060_d.alloc)._field_Kind.ptr()) != nullptr) && _1abe4e127_IsAny(_1abe45481_Prim((*_173060_d.alloc)._field_Kind).ptr()))) {
			_case_begin_1ae8005b9:;
			{
				if ((_1abe45c34_Enum(_173042_t.ptr()) != nullptr)) {
					_1abe13bad_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1abe14021_pushSuggestion(_self_, jule::Str::lit("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1abe45eba_TypeEnum(_173042_t.ptr()) != nullptr)) {
					_1abe13bad_pushErr(_self_, _173074_errorToken, jule::Str::lit("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				(*_173060_d.alloc)._field_Constant=nullptr;
				(*_173060_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1abe45eba_TypeEnum((*_173060_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae800630:;
			{
				_1abe249d2_castTypeEnum(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1abe45eba_TypeEnum(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae800696:;
			{
				_1abe24e00_castTypeEnumT(_self_, &(_173042_t), &(_173060_d), &(_173074_errorToken));
			}
		}
		else if ((_1abe4599d_Ptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae80070c:;
			{
				_1abe2242a_castPtr(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1abe45717_Sptr(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae8013bc:;
			{
				_1abe22c66_castRef(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1abe464d7_Slc(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae801433:;
			{
				_1abe23184_castSlc(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1abe46a04_Struct(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae801499:;
			{
				_1abe22848_castStruct(_self_, _173042_t, _173060_d, _173074_errorToken);
			}
		}
		else if ((_1abe45481_Prim(_173042_t.ptr()) != nullptr)) {
			_case_begin_1ae801510:;
			{
				_1abe24251_castPrim(_self_, _173042_t, _173060_d, _173074_errorToken);
				_1abe245b4_castConstant(_self_, &(_173042_t), &(_173060_d));
			}
		}
		else {
			_case_begin_1ae800498:;
			{
				_1abe13bad_pushErr(_self_, _173074_errorToken, jule::Str::lit("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str(_173042_t.ptr()), &__jule_any_type4)}));
				_173060_d=nullptr;
			}
		}
		_match_end_1ae8003ee:;
	};
	if ((_173060_d == nullptr)) {
		return nullptr;;
	};
	(*_173060_d.alloc)._field_Mutable=((*_173060_d.alloc)._field_Mutable || (!(_1abe446b1_Mutable((*_173060_d.alloc)._field_Kind.ptr()))));
	if (((!((*_173060_d.alloc)._field_Decl)) && ((_1abe45c34_Enum((*_173060_d.alloc)._field_Kind) == nullptr) || (!(_1abe43539_Equal((*((*(_1abe45c34_Enum((*_173060_d.alloc)._field_Kind)))._field_Kind))._field_Kind, _173042_t)))))) {
		_1abe3c5cc_applyCastKind(&(_173060_d), &(_173042_t), &(_173074_errorToken));
		(*((*_173060_d.alloc)._field_Model.cast_ptr<_1abd49e8a_CastingExprModel>(&__jule_any_type93)))._field_Token=_173074_errorToken;
	} else {
		(*_173060_d.alloc)._field_Kind=_173042_t;
	};
	(*_173060_d.alloc)._field_Decl=false;
	(*_173060_d.alloc)._field_Lvalue=false;
	(*_173060_d.alloc)._field_untyped=false;
	if (_1abe1233d_IsConst(_173060_d)) {
		(*((*_173060_d.alloc)._field_Constant))._field_Kind=(*(_1abe45481_Prim(_173042_t.ptr())))._field_Kind;
	};
	return _173060_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe2585c_evalCastT(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe42d30_TypeKind>* _180334_t, jule::Ptr<_1abd24b79_Expr>* _180353_e, jule::Ptr<_1abd0a38a_Token>* _180368_et) {
	jule::Ptr<_1abe42d30_TypeKind> _180413_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_180413_prefix;
	});;
	if ((_1abe464d7_Slc((*(_180334_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_180353_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1ae811685:;
				{
					(*_self_.alloc)._field_prefix=(*(_180334_t));
				}
			}
			_match_end_1ae81161e:;
		};
	};
	jule::Ptr<_1abe11936_Data> _181313_d = _1abe318bd_evalExpr(_self_, (*(_180353_e)));;
	if (((_181313_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _181313_d;;
	};
	return _1abe253a6_evalCastByTypeNData(_self_, (*(_180334_t)), _181313_d, (*(_180368_et)));;
}



inline jule::Ptr<_1abe11936_Data> _1abe25b9d_evalCast(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd274d9_CastExpr> _182032_c) {
	jule::Ptr<_1abe4a002_TypeSymbol> _182113_t = _1abd5e1d0_buildType((*(_182032_c))._field_Kind);;
	jule::Bool _18229_ok = _1ab6a125e_checkType((*(_self_))._field_s, &(_182113_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18229_ok))) {
		return nullptr;;
	};
	return _1abe2585c_evalCastT(_self_, &((*(_182113_t))._field_Kind), &((*_182032_c.alloc)._field_Expr), &((*((*_182032_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1abe11936_Data> _1abe25ede_evalNsSelection(_1abe1365d_Eval* _self_, jule::Ptr<_1abd278b3_NsSelectionExpr> _182934_s) {
	jule::Str _18309_path = _1abe5e874_buildLinkPathByTokens(&((*(_182934_s))._field_Ns));;
	jule::Ptr<_1ab67760e_ImportInfo> _183113_imp = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe60c0a_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>>((void*)__jule_anon_1ae816cc8, jule::Ptr<__jule_anon_1ae816cc8_ctx>::make(__jule_anon_1ae816cc8_ctx{._182934_s=_182934_s,._18309_path=_18309_path}).as<jule::Uintptr>(), __jule_anon_1ae816cc8_ctx_handler));;
	if ((_183113_imp == nullptr)) {
		_1abe13bad_pushErr(_self_, (*_182934_s.alloc)._field_Ns[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_18309_path, &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Trait _184313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_183113_imp, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data1);
	;
	_1abe1441c_disallowBuiltin(_self_);
	jule::Any _184813_def = _1abe1692a_getDef(_self_, &((*((*_182934_s.alloc)._field_Ident))._field_Kind), false);;
	_1abe1421e_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_184313_lookup;
	jule::Ptr<_1abe11936_Data> _185113_d = _1abe1aad8_evalDef(_self_, &(_184813_def), (*_182934_s.alloc)._field_Ident);;
	return _185113_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe26495_evalStructLitExplicit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd4445c_StructIns> _185545_s, jule::Slice<jule::Ptr<_1abd24b79_Expr>> _185613_exprs, jule::Ptr<_1abd0a38a_Token> _185633_errorToken) {
	jule::Bool _18579_ok = _1ab69bb1c_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_185545_s))._field_Decl))._field_Generics.len(), (*_185545_s.alloc)._field_Generics.len(), _185633_errorToken);;
	if ((!(_18579_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*_self_.alloc)._field_field.alloc)._field_Decl))._field_Owner == (*_185545_s.alloc)._field_Decl))) {
		_1abe13bad_pushErr(_self_, _185633_errorToken, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
	};
	_1ae7a3803_pushReference(_self_, &(_185545_s));
	_1abe18cd4_checkDeprecated(_self_, &((*(*_185545_s.alloc)._field_Decl.alloc)._field_Directives), _185633_errorToken);
	_1abe04a17_structLitChecker _187013_slc = _1abe04a17_structLitChecker{._field_e=_self_, ._field_errorToken=_185633_errorToken, ._field_s=_185545_s, };;
	_1abe06255_check(&_187013_slc, &(_185613_exprs));
	jule::Ptr<_1abe11936_Data> _187713_d = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_185545_s, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)}), ._field_Mutable=(!((*_self_.alloc)._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1abd4960a_StructLitExprModel>(_1abd4960a_StructLitExprModel{._field_Strct=_185545_s, ._field_Args=_187013_slc._field_args}), &__jule_any_type95), });;
	if ((*(*_185545_s.alloc)._field_Decl.alloc)._field_Binded) {
		(*((*(_187713_d))._field_Kind))._field_BindIdent=(*(*_185545_s.alloc)._field_Decl.alloc)._field_Ident;
	};
	return _187713_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe267d6_evalStructLit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd29bc3_StructLit> _189337_lit) {
	jule::Ptr<_1abe4a002_TypeSymbol> _189413_t = _1abd5e1d0_buildType((*(_189337_lit))._field_Kind);;
	jule::Bool _18959_ok = _1ab6a125e_checkType((*(_self_))._field_s, &(_189413_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18959_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1abd4445c_StructIns> _190013_s = _1abe46a04_Struct((*(_189413_t))._field_Kind.ptr());;
	if ((_190013_s == nullptr)) {
		if ((_1abe45717_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
			_190013_s=_1abe46a04_Struct((*(_1abe45717_Sptr((*_189413_t.alloc)._field_Kind)))._field_Elem.ptr());
			if ((_190013_s != nullptr)) {
				goto _julec_label_1ae827b1e;
			};
		};
		_1abe13bad_pushErr(_self_, (*((*_189337_lit.alloc)._field_Kind))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1ae827b1e:;
	jule::Ptr<_1abe11936_Data> _191313_d = _1abe26495_evalStructLitExplicit(_self_, _190013_s, (*_189337_lit.alloc)._field_Exprs, (*(*_189337_lit.alloc)._field_Kind.alloc)._field_Token);;
	if ((_1abe45717_Sptr((*_189413_t.alloc)._field_Kind) != nullptr)) {
		jule::Ptr<_1abd4960a_StructLitExprModel> _191517_model = (*(_191313_d))._field_Model.cast_ptr<_1abd4960a_StructLitExprModel>(&__jule_any_type95);;
		_1abe3ac07_makeStructLitAlloc(&(_191313_d), &(_191517_model));
	};
	return _191313_d;;
}



inline _1abe54bdd_typeChecker _1abe26a6c_typeChecker(_1abe1365d_Eval* _self_) {
	return _1ab6a000a_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1abe11936_Data> _1abe26dad_evalType(_1abe1365d_Eval* _self_, jule::Ptr<_1abd20845_TypeDecl> _192531_t) {
	jule::Ptr<_1abe4a002_TypeSymbol> _192613_tk = _1abd5e1d0_buildType(_192531_t);;
	jule::Bool _19279_ok = _1ab6a125e_checkType((*(_self_))._field_s, &(_192613_tk), (*(_self_))._field_lookup);;
	if ((!(_19279_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*(_192613_tk))._field_Kind, ._field_Model=jule::Any((*_192613_tk.alloc)._field_Kind, &__jule_any_type84), ._field_Decl=true, });;
}



inline void _1abe27221_callTypeFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _193835_fc, jule::Ptr<_1abe11936_Data>* _193857_d) {
	if (((*((*(_193835_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
	} else if (((*((*(_193835_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*((*(_193835_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_193857_d))))._field_Kind.ptr()), &__jule_any_type4)}));
	} else if ((*((*(_193835_fc))))._field_IsCo) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	} else if (((*((*(_193835_fc))))._field_Exception != nullptr)) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*(_193835_fc))))._field_Token, jule::Str::lit("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_193857_d))=nullptr;
		return;;
	};
	if (((*((*(_193835_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1abd24b79_Expr> _195417_arg = (*((*(_193835_fc))))._field_Args[0LL];;
		(*(_193857_d))=_1abe2585c_evalCastT(_self_, &((*((*(_193857_d))))._field_Kind), &(_195417_arg), &((*(_195417_arg))._field_Token));
		return;;
	};
	if (((*(_193857_d)) != nullptr)) {
		(*((*(_193857_d))))._field_Decl=false;
	};
}



inline void _1abe27584_callBuiltinFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _196438_fc, jule::Ptr<_1abe11936_Data>* _196460_d) {
	if ((!(_1abd28c27_Unhandled((*(_196438_fc)).ptr())))) {
		_1abe13bad_pushErr(_self_.ptr(), (*((*(_196438_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_196460_d))=(*(_1abe4676d_Fn((*((*(_196460_d))))._field_Kind.ptr())))._field_caller(&(_self_), _196438_fc, _196460_d);
	if (((*(_196460_d)) == nullptr)) {
		return;;
	};
	(*((*(_196460_d))))._field_Mutable=true;
}



inline void _1abe278e7_checkFnOfConcurrentCall(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _197643_f, jule::Ptr<_1abd0a38a_Token> _197654_errorToken) {
	if (_1abe146a3_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_197643_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae8379a8:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> *_198016_p = it;
			{
				if (_1abd552e7_IsSelf((*((*(_198016_p))))._field_Decl.ptr())) {
					if ((!(_1abd5557d_IsRef((*(*(_198016_p)).alloc)._field_Decl)))) {
						_1abe13bad_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1abe14021_pushSuggestion(_self_, jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(*(*(_198016_p)).alloc)._field_Decl.alloc)._field_Reference) {
					_1abe13bad_pushErr(_self_, _197654_errorToken, jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1abe14021_pushSuggestion(_self_, jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1ae8379a8:;
			++it;
			goto _iter_begin_1ae8379a8;
		}
		_iter_end_1ae8379a8:;
	};
}



inline void _1abe27d15_processExceptionalHandler(_1abe1365d_Eval* _self_, jule::Ptr<_1abd59681_FnIns>* _199549_f, jule::Ptr<_1abd288a3_FnCallExpr>* _199565_fc, jule::Ptr<_1abe11936_Data>* _199587_d) {
	jule::Bool _19969_resultNeeded = ((!(_1abd56b23_IsVoid((*((*(_199549_f))))._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1ab65ca34_scopeChecker> _199717_csc = nullptr;;
	jule::Ptr<_1ab655576_Scope> _199817_ch = nullptr;;
	jule::Ptr<_1abd4a83c_FnCallExprModel> _200013_model = (*((*(_199587_d))))._field_Model.cast_ptr<_1abd4a83c_FnCallExprModel>(&__jule_any_type33);;
	jule::Ptr<_1ab65ca34_scopeChecker> _200413_sc = (*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0);;
	_199717_csc=_1ab66eabd_newChildChecker(_200413_sc);
	if (_19969_resultNeeded) {
		(*(_199717_csc))._field_result=(*(_199549_f));
	};
	_199817_ch=_1ab662e24_getChild(_200413_sc);
	(*((*((*(_199565_fc))))._field_Exception))._field_Parent=(*_200413_sc.alloc)._field_tree;
	(*((*_199717_csc.alloc)._field_table))._field_Vars=jule::append((*(*_199717_csc.alloc)._field_table.alloc)._field_Vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({_1abe3b07b_buildErrorVar(&(_199817_ch), _199565_fc)}));
	_1ab663342_checkChildSsc(_200413_sc, &((*((*(_199565_fc))))._field_Exception), &(_199817_ch), &(_199717_csc));
	(*(_200013_model))._field_Assigned=_19969_resultNeeded;
	(*_200013_model.alloc)._field_Except=_199817_ch;
	if ((_19969_resultNeeded && ((*_199717_csc.alloc)._field_result != nullptr))) {
		_1abe13bad_pushErr(_self_, (*((*(_199565_fc))))._field_Token, jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1abe28178_callFn(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr>* _202231_fc, jule::Ptr<_1abe11936_Data>* _202253_d) {
	jule::Ptr<_1abd59681_FnIns> _202313_f = _1abe4676d_Fn((*((*(_202253_d))))._field_Kind.ptr());;
	if (_1abd5ab16_IsBuiltin(_202313_f.ptr())) {
		_1abe27584_callBuiltinFn(_self_, _202231_fc, _202253_d);
		return;;
	};
	if ((_1abe14939_isGlobal(_self_) && (*((*_202313_f.alloc)._field_Decl))._field_Exceptional)) {
		_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((!(_1abd56da9_IsMethod((*_202313_f.alloc)._field_Decl))) && _1abe5d950_hasDirective(&((*(*_202313_f.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("test", 4)))) {
		_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_202253_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_202253_d))))._field_Mutable)) && _1abd56da9_IsMethod((*_202313_f.alloc)._field_Decl)) && (!((*(*_202313_f.alloc)._field_Decl.alloc)._field_Statically))) && (*((*(*_202313_f.alloc)._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((!((*_self_.alloc)._field_immutable))) {
			_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1abd4960a_StructLitExprModel> _204917_lit = _1abe3e535_isLitBased(&((*((*(_202253_d))))._field_Model));;
			if ((_204917_lit == nullptr)) {
				_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1abe0452d_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_204917_lit));
			};
		};
	} else if (((!(_1abe146a3_isUnsafe(_self_))) && (*(*_202313_f.alloc)._field_Decl.alloc)._field_Unsafety)) {
		_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _206113_dynamicAnnotation = ((((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_202313_f.alloc)._field_Generics.len() == 0LL)) && ((*_202313_f.alloc)._field_Params.len() > 0LL));;
	if (_206113_dynamicAnnotation) {
		(*_202313_f.alloc)._field_Generics=jule::Slice<jule::Ptr<_1abe41449_InsGeneric>>::alloc((*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len());
	} else if (((*_202313_f.alloc)._field_Generics.len() != (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len())) {
		_1ab69bb1c_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*_202313_f.alloc)._field_Decl.alloc)._field_Generics.len(), (*_202313_f.alloc)._field_Generics.len(), (*((*(_202231_fc))))._field_Token);
		(*(_202253_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ab6979a3_Sema> _207013_old = (*_self_.alloc)._field_s;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_207013_old != (*_self_.alloc)._field_s)) {
			(*(_207013_old))._field_errors=jule::append((*_207013_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*_self_.alloc)._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_207013_old;
	});;
	_1abe01ad0_fnCallArgChecker _208313_fcac = _1abe01ad0_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_202231_fc))))._field_Args, ._field_errorToken=(*((*(_202231_fc))))._field_Token, ._field_dynamicAnnotation=_206113_dynamicAnnotation, };;
	if ((!(_206113_dynamicAnnotation))) {
		if ((!((*_202313_f.alloc)._field_reloaded))) {
			jule::Bool _209217_ok = _1ab6a6572_reloadFnInsTypes((*_self_.alloc)._field_s, _202313_f);;
			(*_202313_f.alloc)._field_reloaded=true;
			if ((!(_209217_ok))) {
				(*(_202253_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1abd59681_FnIns> _209917_existInstance = _1abd5821d_appendInstance((*_202313_f.alloc)._field_Decl, &(_202313_f));;
		if ((_209917_existInstance != nullptr)) {
			_202313_f=_209917_existInstance;
		};
	} else if ((!(_1ab6a4cce_buildFnNonGenericTypeKinds((*_self_.alloc)._field_s, &(_202313_f), &(_208313_fcac._field_ignored))))) {
		(*(_202253_d))=nullptr;
		return;;
	};
	_208313_fcac._field_f=_202313_f;
	jule::Bool _211013_ok = false;;
	if (((*(*_202313_f.alloc)._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_207013_old, (*_self_.alloc)._field_s);
		_211013_ok=_1abe04187_check(&_208313_fcac);
		std::swap(_207013_old, (*_self_.alloc)._field_s);
	} else {
		_211013_ok=_1abe04187_check(&_208313_fcac);
	};
	if (_206113_dynamicAnnotation) {
		if ((!(_211013_ok))) {
			(*(_202253_d))=nullptr;
			return;;
		};
		if ((!(_1abe20527_checkGenericFn(_self_, &(_202313_f), &((*((*(_202231_fc))))._field_Token), &((*((*(_202253_d))))._field_Model))))) {
			(*(_202253_d))=nullptr;
			return;;
		};
	};
	jule::Any _213013_callModel = (*((*(_202253_d))))._field_Model;;
	if (_1abd56b23_IsVoid((*_202313_f.alloc)._field_Decl)) {
		(*(_202253_d))=_1abe3c7db_buildVoidData();
	} else {
		(*((*(_202253_d))))._field_Kind=(*_202313_f.alloc)._field_Result;
		(*((*(_202253_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1abd4a83c_FnCallExprModel> _213913_model = jule::new_ptr<_1abd4a83c_FnCallExprModel>(_1abd4a83c_FnCallExprModel{._field_Token=(*((*(_202231_fc))))._field_Token, ._field_Func=_202313_f, ._field_IsCo=(*((*(_202231_fc))))._field_IsCo, ._field_Expr=_213013_callModel, ._field_Args=_208313_fcac._field_argModels, });;
	(*((*(_202253_d))))._field_Model=jule::Any(_213913_model, &__jule_any_type33);
	(*((*(_202253_d))))._field_Mutable=true;
	if ((*(*_202313_f.alloc)._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_202231_fc))))._field_IsCo) {
			_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*((*(_202231_fc))))._field_Token, jule::Str::lit("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1ab69a951_pushSuggestion((*_self_.alloc)._field_s, jule::Str::lit("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1abd28c27_Unhandled((*(_202231_fc)).ptr())) {
				_case_begin_1ae85d924:;
				{
					_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1abe14021_pushSuggestion(_self_, jule::Str::lit("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1abd28ead_Ignored((*(_202231_fc)).ptr())) {
				_case_begin_1ae85d616:;
				{
					goto _match_end_1ae85c3b2;
				}
			}
			else {
				_case_begin_1ae85c44a:;
				{
					_1abe27d15_processExceptionalHandler(_self_, &(_202313_f), _202231_fc, _202253_d);
				}
			}
			_match_end_1ae85c3b2:;
		};
	} else if ((!(_1abd28c27_Unhandled((*(_202231_fc)).ptr())))) {
		_1abe13bad_pushErr(_self_, (*((*(_202231_fc))))._field_Token, jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*((*(_202231_fc))))._field_IsCo) {
		_1abe278e7_checkFnOfConcurrentCall(_self_, &((*(_213913_model))._field_Func), (*((*(_202231_fc))))._field_Token);
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe284b9_evalFnCall(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd288a3_FnCallExpr> _217434_fc) {
	jule::Ptr<_1abe42d30_TypeKind> _217513_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_217513_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_217434_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1ae862e89:;
			{
				if ((*((*((*(_217434_fc))._field_Expr))._field_Token))._field_Kind.equal("error", 5)) {
					return _1ac02ee2d_builtinCallerError(&(_self_), &(_217434_fc));;
				};
			}
		}
		_match_end_1ae862e23:;
	};
	jule::Ptr<_1abe11936_Data> _218813_d = _1abe30aa9_evalExprKind(_self_, (*(*_217434_fc.alloc)._field_Expr.alloc)._field_Kind);;
	if ((_218813_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_218813_d))._field_Decl) {
		_1abe27221_callTypeFn(_self_, &(_217434_fc), &(_218813_d));
		return _218813_d;;
	};
	if ((_1abe4676d_Fn((*(_218813_d))._field_Kind.ptr()) == nullptr)) {
		_1abe13bad_pushErr(_self_, (*_217434_fc.alloc)._field_Token, jule::Str::lit("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1abe28178_callFn(_self_, &(_217434_fc), &(_218813_d));
	return _218813_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe288b5_evalEnumStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6c265_Enum> _220737_enm, jule::Ptr<_1abd0a38a_Token> _220753_ident) {
	jule::Ptr<_1abd6b6e8_EnumItem> _220813_item = _1abd6cd59_FindItem(_220737_enm.ptr(), (*(_220753_ident))._field_Kind);;
	if ((_220813_item == nullptr)) {
		_1abe13bad_pushErr(_self_, _220753_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_220737_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_220753_ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _1abe3e26b_evalEnumStatic(&(_220737_enm), &(_220813_item), &(_220753_ident));;
}



inline jule::Ptr<_1abe11936_Data> _1abe28cb1_evalTypeEnumStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd6d970_TypeEnum> _221541_enm, jule::Ptr<_1abd0a38a_Token> _221557_ident) {
	jule::Ptr<_1abd6d398_TypeEnumItem> _221613_item = _1abd6e531_FindItem(_221541_enm.ptr(), (*(_221557_ident))._field_Kind);;
	if ((_221613_item == nullptr)) {
		_1abe13bad_pushErr(_self_, _221557_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_221541_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_221557_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if ((_1abe45c34_Enum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae86b558:;
			{
				return _1abe172aa__evalEnum(_self_, _1abe45c34_Enum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1abe45eba_TypeEnum((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae8697dc:;
			{
				return _1abe179e7__evalTypeEnum(_self_, _1abe45eba_TypeEnum((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else if ((_1abe46a04_Struct((*((*(_221613_item))._field_Kind))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1ae869853:;
			{
				return _1abe18234__evalStruct(_self_, _1abe46a04_Struct((*(*(_221613_item))._field_Kind.alloc)._field_Kind));;
			}
		}
		else {
			_case_begin_1ae869776:;
			{
				jule::Ptr<_1abe11936_Data> _222917_d = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*((*(_221613_item))._field_Kind))._field_Kind, ._field_Decl=true, });;
				(*(_222917_d))._field_Model=jule::Any((*_222917_d.alloc)._field_Kind, &__jule_any_type84);
				return _222917_d;;
			}
		}
		_match_end_1ae869941:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe291ac_evalStructStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd4445c_StructIns> _223839_s, jule::Ptr<_1abd0a38a_Token> _223854_ident) {
	jule::Ptr<_1abe11936_Data> _223913_d = jule::new_ptr<_1abe11936_Data>();;
	;
	jule::Ptr<_1abd566a0_Fn> _224313_method = _1abd454c4_FindMethod(_223839_s.ptr(), (*(_223854_ident))._field_Kind, true);;
	if ((_224313_method != nullptr)) {
		if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_224313_method.alloc)._field_Public, (*_224313_method.alloc)._field_Token)))) {
			_1abe13bad_pushErr(_self_, _223854_ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
			_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1abd59681_FnIns> _225017_ins = _1abd57e10_instance(_224313_method);;
		(*(_225017_ins))._field_Owner=_223839_s;
		_1b15a7c10_pushReference(_self_, &(_225017_ins));
		(*_223913_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd4d851_StructStaticIdentExprModel>(_1abd4d851_StructStaticIdentExprModel{._field_Structure=_223839_s, ._field_Expr=(*_223913_d.alloc)._field_Model, ._field_Method=_225017_ins}), &__jule_any_type96);
		(*_223913_d.alloc)._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_225017_ins, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)});
		return _223913_d;;
	};
	jule::Ptr<_1abda8d2e_Var> _226413_sttc = _1abd45b56_FindStatic(_223839_s, (*_223854_ident.alloc)._field_Kind);;
	if ((_226413_sttc != nullptr)) {
		return _1abe1a2e1_evalVar(_self_, _226413_sttc, _223854_ident);;
	};
	_1abe13bad_pushErr(_self_, _223854_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_223839_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1abe11936_Data> _1abe29663_evalTraitSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _227340_d, jule::Ptr<_1abd69a59_Trait> _227354_trt, jule::Ptr<_1abd0a38a_Token> _227371_ident) {
	jule::Ptr<_1abd566a0_Fn> _227413_f = _1abd6a708_FindMethod(_227354_trt.ptr(), (*(_227371_ident))._field_Kind);;
	if ((_227413_f == nullptr)) {
		_1abe13bad_pushErr(_self_, _227371_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_227354_trt.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_227371_ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abd57e10_instance(_227413_f), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1abd4cb19_TraitSubIdentExprModel>(_1abd4cb19_TraitSubIdentExprModel{._field_Token=_227371_ident, ._field_Expr=(*(_227340_d))._field_Model, ._field_Method=_227413_f, ._field_Trt=_227354_trt}), &__jule_any_type97), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe29bc4_evalStructSubIdentField(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _229347_d, jule::Ptr<_1abd4445c_StructIns>* _229362_s, jule::Ptr<_1abd0a38a_Token>* _229382_tok, jule::Ptr<_1abd438ac_FieldIns>* _2293100_f) {
	jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _229413_model = jule::new_ptr<_1abd4d4aa_StructSubIdentExprModel>(_1abd4d4aa_StructSubIdentExprModel{._field_Token=(*(_229382_tok)), ._field_Expr=jule::new_ptr<_1abe11936_Data>((*((*(_229347_d))))), ._field_Field=(*(_2293100_f)), ._field_Owner=(*(_229362_s))});;
	(*((*(_229347_d))))._field_Model=jule::Any(_229413_model, &__jule_any_type98);
	(*((*(_229347_d))))._field_Kind=(*((*(_2293100_f))))._field_Kind;
	(*((*(_229347_d))))._field_Lvalue=true;
	if (((*((*((*(_2293100_f))))._field_Decl))._field_Mutable && (!((*((*(_229347_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
				_case_begin_1ae87cc84:;
				{
					jule::Ptr<_1ab65ca34_scopeChecker> _230817_scope = _1ab660dcd_getRoot((*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0));;
					(*((*(_229347_d))))._field_Mutable=(((*(_230817_scope))._field_owner != nullptr) && ((*(*_230817_scope.alloc)._field_owner.alloc)._field_Owner == (*(_229362_s))));
				}
			}
			_match_end_1ae87cc2e:;
		};
	};
	return (*(_229347_d));;
}



inline jule::Ptr<_1abe11936_Data> _1abe2a235_evalStructSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _231641_d, jule::Ptr<_1abd4445c_StructIns> _231655_s, jule::Ptr<_1abd27c8c_SubIdentExpr> _231674_si, jule::Bool _231693_ref) {
	jule::Ptr<_1abd438ac_FieldIns> _231713_f = _1abd45815_FindField(_231655_s.ptr(), (*((*(_231674_si))._field_Ident))._field_Kind);;
	if ((_231713_f != nullptr)) {
		if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_231713_f.alloc)._field_Decl))._field_Public, (*(*_231713_f.alloc)._field_Decl.alloc)._field_Token)))) {
			_1abe13bad_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(*_231713_f.alloc)._field_Decl.alloc)._field_Ident, &__jule_any_type4)}));
			_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1abe29bc4_evalStructSubIdentField(_self_, &(_231641_d), &(_231655_s), &((*_231674_si.alloc)._field_Ident), &(_231713_f));;
	};
	;
	jule::Ptr<_1abd566a0_Fn> _232713_m = _1abd454c4_FindMethod(_231655_s, (*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, false);;
	if ((_232713_m == nullptr)) {
		_1abe13bad_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*((*_231655_s.alloc)._field_Decl))._field_Ident, &__jule_any_type4),jule::Any((*(*_231674_si.alloc)._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s, (*(_232713_m))._field_Public, (*(_232713_m))._field_Token)))) {
		_1abe13bad_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_232713_m))._field_Ident, &__jule_any_type4)}));
		_1abe14021_pushSuggestion(_self_, jule::Str::lit("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1abd5557d_IsRef((*(_232713_m))._field_Params[0LL].ptr()) && (!(_231693_ref)))) {
		_1abe13bad_pushErr(_self_, (*_231674_si.alloc)._field_Ident, jule::Str::lit("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1abe18cd4_checkDeprecated(_self_, &((*(_232713_m))._field_Directives), (*_231674_si.alloc)._field_Ident);
	jule::Ptr<_1abd59681_FnIns> _234313_ins = _1abd57e10_instance(_232713_m);;
	(*(_234313_ins))._field_Owner=_231655_s;
	_1b15a7c10_pushReference(_self_, &(_234313_ins));
	jule::Ptr<_1abe11936_Data> _234613_model = jule::new_ptr<_1abe11936_Data>((*(_231641_d)));;
	(*_231641_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd4d4aa_StructSubIdentExprModel>(_1abd4d4aa_StructSubIdentExprModel{._field_Token=(*_231674_si.alloc)._field_Ident, ._field_Expr=_234613_model, ._field_Method=_234313_ins, ._field_Owner=_231655_s}), &__jule_any_type98);
	(*_231641_d.alloc)._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_234313_ins, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)});
	return _231641_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe2a576_evalIntTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _235736_ident) {
	;
	{
		auto &_match_expr{ (*(_235736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae88be19:;
			{
				jule::Ptr<_1b9aac4c5_Const> _236117_c = static__1b9aac915_NewI64(_1b9aa78bb_MaxI(jule::Str::lit("int", 3)));;
				(*(_236117_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b49b_primInt, ._field_Model=jule::Any(_236117_c, &__jule_any_type19), ._field_Constant=_236117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ae88c920:;
			{
				jule::Ptr<_1b9aac4c5_Const> _237017_c = static__1b9aac915_NewI64(static_cast<jule::I64>(_1b9aa7ec6_Min(jule::Str::lit("int", 3))));;
				(*(_237017_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b49b_primInt, ._field_Model=jule::Any(_237017_c, &__jule_any_type19), ._field_Constant=_237017_c});;
			}
		}
		else {
			_case_begin_1ae88b5bc:;
			{
				_1abe13bad_pushErr(_self_, _235736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("int", 3), &__jule_any_type4),jule::Any((*(_235736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae88ba62:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2a8b7_evalUintTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _238437_ident) {
	;
	{
		auto &_match_expr{ (*(_238437_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae890bed:;
			{
				jule::Ptr<_1b9aac4c5_Const> _238817_c = static__1b9aacbce_NewU64(_1b9aa7b85_MaxU(jule::Str::lit("uint", 4)));;
				(*(_238817_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b0d3_primUint, ._field_Model=jule::Any(_238817_c, &__jule_any_type19), ._field_Constant=_238817_c});;
			}
		}
		else {
			_case_begin_1ae8905e3:;
			{
				_1abe13bad_pushErr(_self_, _238437_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("uint", 4), &__jule_any_type4),jule::Any((*(_238437_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae890846:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2ac08_evalI8TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _240235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_240235_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae893e10:;
			{
				jule::Ptr<_1b9aac4c5_Const> _240817_c = static__1b9aac915_NewI64(127LL);;
				(*(_240817_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b6dd_primI8, ._field_Model=jule::Any(_240817_c, &__jule_any_type19), ._field_Constant=_240817_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ae894916:;
			{
				jule::Ptr<_1b9aac4c5_Const> _241717_c = static__1b9aac915_NewI64(-128LL);;
				(*(_241717_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b6dd_primI8, ._field_Model=jule::Any(_241717_c, &__jule_any_type19), ._field_Constant=_241717_c});;
			}
		}
		else {
			_case_begin_1ae89365c:;
			{
				_1abe13bad_pushErr(_self_, _240235_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i8", 2), &__jule_any_type4),jule::Any((*(_240235_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae893a7a:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2b049_evalI16TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _243136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243136_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae8981cd:;
			{
				jule::Ptr<_1b9aac4c5_Const> _243717_c = static__1b9aac915_NewI64(32767LL);;
				(*(_243717_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b985_primI16, ._field_Model=jule::Any(_243717_c, &__jule_any_type19), ._field_Constant=_243717_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ae898bd4:;
			{
				jule::Ptr<_1b9aac4c5_Const> _244617_c = static__1b9aac915_NewI64(-32768LL);;
				(*(_244617_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02b985_primI16, ._field_Model=jule::Any(_244617_c, &__jule_any_type19), ._field_Constant=_244617_c});;
			}
		}
		else {
			_case_begin_1ae89792a:;
			{
				_1abe13bad_pushErr(_self_, _243136_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i16", 3), &__jule_any_type4),jule::Any((*(_243136_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae897d48:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2b38a_evalI32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _246036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246036_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae89c49b:;
			{
				jule::Ptr<_1b9aac4c5_Const> _246617_c = static__1b9aac915_NewI64(2147483647LL);;
				(*(_246617_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02bc3d_primI32, ._field_Model=jule::Any(_246617_c, &__jule_any_type19), ._field_Constant=_246617_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ae89cea2:;
			{
				jule::Ptr<_1b9aac4c5_Const> _247517_c = static__1b9aac915_NewI64(-2147483648LL);;
				(*(_247517_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02bc3d_primI32, ._field_Model=jule::Any(_247517_c, &__jule_any_type19), ._field_Constant=_247517_c});;
			}
		}
		else {
			_case_begin_1ae89bbe8:;
			{
				_1abe13bad_pushErr(_self_, _246036_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i32", 3), &__jule_any_type4),jule::Any((*(_246036_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae89c116:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2b6cb_evalI64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _248936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_248936_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae8a1769:;
			{
				jule::Ptr<_1b9aac4c5_Const> _249517_c = static__1b9aac915_NewI64(jule::MAX_I64);;
				(*(_249517_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02bee6_primI64, ._field_Model=jule::Any(_249517_c, &__jule_any_type19), ._field_Constant=_249517_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1ae8a2270:;
			{
				jule::Ptr<_1b9aac4c5_Const> _250417_c = static__1b9aac915_NewI64(jule::MIN_I64);;
				(*(_250417_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02bee6_primI64, ._field_Model=jule::Any(_250417_c, &__jule_any_type19), ._field_Constant=_250417_c});;
			}
		}
		else {
			_case_begin_1ae8a0eb6:;
			{
				_1abe13bad_pushErr(_self_, _248936_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("i64", 3), &__jule_any_type4),jule::Any((*(_248936_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae8a13d4:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2ba1c_evalU8TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _251835_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_251835_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae8a565d:;
			{
				jule::Ptr<_1b9aac4c5_Const> _252317_c = static__1b9aacbce_NewU64(255LLU);;
				(*(_252317_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02c29e_primU8, ._field_Model=jule::Any(_252317_c, &__jule_any_type19), ._field_Constant=_252317_c});;
			}
		}
		else {
			_case_begin_1ae8a4d66:;
			{
				_1abe13bad_pushErr(_self_, _251835_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u8", 2), &__jule_any_type4),jule::Any((*(_251835_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae8a5262:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2bd5d_evalU16TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _253736_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_253736_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae8a83db:;
			{
				jule::Ptr<_1b9aac4c5_Const> _254217_c = static__1b9aacbce_NewU64(65535LLU);;
				(*(_254217_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02c557_primU16, ._field_Model=jule::Any(_254217_c, &__jule_any_type19), ._field_Constant=_254217_c});;
			}
		}
		else {
			_case_begin_1ae8a7ae4:;
			{
				_1abe13bad_pushErr(_self_, _253736_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u16", 3), &__jule_any_type4),jule::Any((*(_253736_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae8a7ee0:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2c19e_evalU32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _255636_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_255636_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1ae8ab169:;
			{
				jule::Ptr<_1b9aac4c5_Const> _256117_c = static__1b9aacbce_NewU64(4294967295LLU);;
				(*(_256117_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02c810_primU32, ._field_Model=jule::Any(_256117_c, &__jule_any_type19), ._field_Constant=_256117_c});;
			}
		}
		else {
			_case_begin_1ae8aa872:;
			{
				_1abe13bad_pushErr(_self_, _255636_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u32", 3), &__jule_any_type4),jule::Any((*(_255636_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1ae8aac6d:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2c4e0_evalU64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _257536_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_257536_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b1657919:;
			{
				jule::Ptr<_1b9aac4c5_Const> _258017_c = static__1b9aacbce_NewU64(jule::MAX_U64);;
				(*(_258017_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02cce9_primU64, ._field_Model=jule::Any(_258017_c, &__jule_any_type19), ._field_Constant=_258017_c});;
			}
		}
		else {
			_case_begin_1b1657122:;
			{
				_1abe13bad_pushErr(_self_, _257536_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("u64", 3), &__jule_any_type4),jule::Any((*(_257536_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b165751d:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2c831_evalF32TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _259436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_259436_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b165adb2:;
			{
				jule::Ptr<_1b9aac4c5_Const> _260117_c = static__1b9aad52b_NewF64(340282346638528860000000000000000000000.0);;
				(*(_260117_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d03b_primF32, ._field_Model=jule::Any(_260117_c, &__jule_any_type19), ._field_Constant=_260117_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b165b8b8:;
			{
				jule::Ptr<_1b9aac4c5_Const> _261017_c = static__1b9aad52b_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_261017_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d03b_primF32, ._field_Model=jule::Any(_261017_c, &__jule_any_type19), ._field_Constant=_261017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b165b92e:;
			{
				jule::Ptr<_1b9aac4c5_Const> _261917_c = static__1b9aad52b_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_261917_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d03b_primF32, ._field_Model=jule::Any(_261917_c, &__jule_any_type19), ._field_Constant=_261917_c});;
			}
		}
		else {
			_case_begin_1b165a686:;
			{
				_1abe13bad_pushErr(_self_, _259436_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f32", 3), &__jule_any_type4),jule::Any((*(_259436_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b165aa0a:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2cb72_evalF64TypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abd0a38a_Token> _263336_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_263336_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1b1661659:;
			{
				jule::Ptr<_1b9aac4c5_Const> _264017_c = static__1b9aad52b_NewF64(jule::MAX_F64);;
				(*(_264017_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d24a_primF64, ._field_Model=jule::Any(_264017_c, &__jule_any_type19), ._field_Constant=_264017_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1b1662160:;
			{
				jule::Ptr<_1b9aac4c5_Const> _264917_c = static__1b9aad52b_NewF64(jule::MIN_F64);;
				(*(_264917_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d24a_primF64, ._field_Model=jule::Any(_264917_c, &__jule_any_type19), ._field_Constant=_264917_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1b16621c6:;
			{
				jule::Ptr<_1b9aac4c5_Const> _265817_c = static__1b9aad52b_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_265817_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_untyped=true, ._field_Kind=_1ac02d24a_primF64, ._field_Model=jule::Any(_265817_c, &__jule_any_type19), ._field_Constant=_265817_c});;
			}
		}
		else {
			_case_begin_1b1660e2d:;
			{
				_1abe13bad_pushErr(_self_, _263336_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("f64", 3), &__jule_any_type4),jule::Any((*(_263336_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b16612a2:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2d06d_evalPrimStatic(_1abe1365d_Eval* _self_, jule::Str _267233_kind, jule::Ptr<_1abd0a38a_Token> _267244_ident) {
	{
		auto &_match_expr{ _267233_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b1665d45:;
			{
				return _1abe2a576_evalIntTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b16667e6:;
			{
				return _1abe2a8b7_evalUintTypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b166685c:;
			{
				return _1abe2ac08_evalI8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b1665a26:;
			{
				return _1abe2b049_evalI16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b1665a8c:;
			{
				return _1abe2b38a_evalI32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b1665b03:;
			{
				return _1abe2b6cb_evalI64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b1665b69:;
			{
				return _1abe2ba1c_evalU8TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b166694a:;
			{
				return _1abe2bd5d_evalU16TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b16669b1:;
			{
				return _1abe2c19e_evalU32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b1666a27:;
			{
				return _1abe2c4e0_evalU64TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b1666a8d:;
			{
				return _1abe2c831_evalF32TypeStatic(_self_, _267244_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b1666b04:;
			{
				return _1abe2cb72_evalF64TypeStatic(_self_, _267244_ident);;
			}
		}
		else {
			_case_begin_1b16623a2:;
			{
				_1abe13bad_pushErr(_self_, _267244_ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_267233_kind, &__jule_any_type4),jule::Any((*(_267244_ident))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b1662429:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2d469_evalTypeStatic(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _270437_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _270451_si) {
	{
		
		if ((_1abe45481_Prim((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b166b125:;
			{
				return _1abe2d06d_evalPrimStatic(_self_, _1abe4ac4a_Str(_1abe45481_Prim((*_270437_d.alloc)._field_Kind).ptr()), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1abe45c34_Enum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b166be28:;
			{
				return _1abe288b5_evalEnumStatic(_self_, _1abe45c34_Enum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1abe45eba_TypeEnum((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b166be8e:;
			{
				return _1abe28cb1_evalTypeEnumStatic(_self_, _1abe45eba_TypeEnum((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else if ((_1abe46a04_Struct((*(_270437_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b166acc3:;
			{
				return _1abe291ac_evalStructStatic(_self_, _1abe46a04_Struct((*_270437_d.alloc)._field_Kind), (*(_270451_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1b166ac5c:;
			{
				_1abe13bad_pushErr(_self_, (*(_270451_si))._field_Ident, jule::Str::lit("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_270437_d))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b166aba2:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1b1673d64_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd81400_comptimeTypeInfo>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1ab644301_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b16784d9_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd7259a_comptimeStructField>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1abd73e4d_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b167cae8_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd78b12_comptimeEnumField>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1abd79b9b_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b168224b_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd7b5a4_comptimeParam>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1abd7d50c_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b1686ad0_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abd75856_comptimeStatic>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1abd77281_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b168b1de_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1ab64460e_comptimeValue>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1ab646b50_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}

inline jule::Ptr<_1abe11936_Data> _1b16907ed_comptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1ab648558_comptimeFile>* _272057_ct, jule::Ptr<_1abe11936_Data>* _272077_d, jule::Ptr<_1abd27c8c_SubIdentExpr>* _272088_si) {
	jule::Ptr<_1abe11936_Data> _272113_cd = _1ab64a0b5_subIdent((*(_272057_ct)), &((*((*((*(_272088_si))))._field_Ident))._field_Kind));;
	if ((_272113_cd == nullptr)) {
		_1abe13bad_pushErr(_self_, (*((*(_272088_si))))._field_Ident, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_272077_d))))._field_Kind.ptr()), &__jule_any_type4),jule::Any((*(*((*(_272088_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type4)}));
	};
	return _272113_cd;;
}



inline __jule_tuple_x_1abe11936_Data__jule_tuple_bool _1abe2dd1b_tryComptimeObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data>* _272846_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _272860_si) {
	__jule_tuple_x_1abe11936_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1abe48d47_comptimeTypeInfo((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1672280:;
			{
				jule::Ptr<_1abd81400_comptimeTypeInfo> _273117_ct = _1abe48d47_comptimeTypeInfo((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b1673d64_comptimeObjSubIdent(_self_, &(_273117_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe47a5a_comptimeStructField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1671d73:;
			{
				jule::Ptr<_1abd7259a_comptimeStructField> _273417_ct = _1abe47a5a_comptimeStructField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b16784d9_comptimeObjSubIdent(_self_, &(_273417_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe48077_comptimeEnumField((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1671dea:;
			{
				jule::Ptr<_1abd78b12_comptimeEnumField> _273717_ct = _1abe48077_comptimeEnumField((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b167cae8_comptimeObjSubIdent(_self_, &(_273717_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe48594_comptimeParam((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1671e72:;
			{
				jule::Ptr<_1abd7b5a4_comptimeParam> _274017_ct = _1abe48594_comptimeParam((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b168224b_comptimeObjSubIdent(_self_, &(_274017_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe49364_comptimeStatic((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1671ee9:;
			{
				jule::Ptr<_1abd75856_comptimeStatic> _274317_ct = _1abe49364_comptimeStatic((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b1686ad0_comptimeObjSubIdent(_self_, &(_274317_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe495ea_comptimeValue((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1672071:;
			{
				jule::Ptr<_1ab64460e_comptimeValue> _274617_ct = _1abe495ea_comptimeValue((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b168b1de_comptimeObjSubIdent(_self_, &(_274617_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1abe49881_comptimeFile((*((*(_272846_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16720e8:;
			{
				jule::Ptr<_1ab648558_comptimeFile> _274917_ct = _1abe49881_comptimeFile((*((*(_272846_d))))._field_Kind);;
				__jule_func_result.__jule_result_arg0 = _1b16907ed_comptimeObjSubIdent(_self_, &(_274917_ct), _272846_d, &(_272860_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b1671d0c:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b1671c63:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe2e217_evalObjSubIdent(_1abe1365d_Eval* _self_, jule::Ptr<_1abe11936_Data> _275638_d, jule::Ptr<_1abd27c8c_SubIdentExpr> _275652_si) {
	if (_1abd0cc72_IsIgnoreIdent((*((*(_275652_si))._field_Ident))._field_Kind)) {
		_1abe13bad_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1abe11936_Data> _276317_compData;
		jule::Bool _276327_ok;
		({
			__jule_tuple_x_1abe11936_Data__jule_tuple_bool __jule_assign_result = _1abe2dd1b_tryComptimeObjSubIdent(_self_, &(_275638_d), _275652_si);
			_276317_compData = __jule_assign_result.__jule_result_arg0;
			_276327_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_276327_ok) {
			return _276317_compData;;
		};
	};
	jule::Ptr<_1abe42d30_TypeKind> _276913_kind = (*(_275638_d))._field_Kind;;
	{
		
		if ((_1abe4599d_Ptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1695957:;
			{
				jule::Ptr<_1abe52bec_Ptr> _277213_ptr = _1abe4599d_Ptr((*_275638_d.alloc)._field_Kind);;
				if (_1abe53736_IsUnsafe(_277213_ptr.ptr())) {
					goto _match_end_1b16958ad;
				};
				if ((!(_1abe146a3_isUnsafe(_self_)))) {
					_1abe13bad_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_276913_kind=(*(_1abe4599d_Ptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1abe3e821_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		else if ((_1abe45717_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1695a01:;
			{
				_276913_kind=(*(_1abe45717_Sptr((*_275638_d.alloc)._field_Kind)))._field_Elem;
				_1abe3e821_makeImplicitDeref(&(_275638_d), (*_275652_si.alloc)._field_Ident);
			}
		}
		_match_end_1b16958ad:;
	};
	{
		
		if ((_1abe46c8a_Trait((*_275638_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1695e63:;
			{
				return _1abe29663_evalTraitSubIdent(_self_, _275638_d, _1abe46c8a_Trait((*_275638_d.alloc)._field_Kind), (*_275652_si.alloc)._field_Ident);;
			}
		}
		else if ((_1abe46a04_Struct(_276913_kind.ptr()) != nullptr)) {
			_case_begin_1b16990ed:;
			{
				jule::Ptr<_1abd4445c_StructIns> _279013_s = _1abe46a04_Struct(_276913_kind);;
				if (_1abe3ba93_isInstancedStruct(_279013_s)) {
					jule::Bool _279221_usedReferenceElem = (_1abe45717_Sptr((*_275638_d.alloc)._field_Kind.ptr()) != nullptr);;
					return _1abe2a235_evalStructSubIdent(_self_, _275638_d, _1abe46a04_Struct(_276913_kind), _275652_si, _279221_usedReferenceElem);;
				};
			}
		}
		_match_end_1b16994c7:;
	};
	_1abe13bad_pushErr(_self_, (*_275652_si.alloc)._field_Ident, jule::Str::lit("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_275638_d.alloc)._field_Kind.ptr()), &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Ptr<_1abe11936_Data> _1abe2e558_evalSubIdent(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd27c8c_SubIdentExpr> _280036_si) {
	jule::Ptr<_1abe42d30_TypeKind> _280113_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_280113_prefix;
	});;
	jule::Ptr<_1abe11936_Data> _280413_d = _1abe30aa9_evalExprKind(_self_, (*((*(_280036_si))._field_Expr))._field_Kind);;
	if ((_280413_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_280413_d))._field_Decl) {
		return _1abe2d469_evalTypeStatic(_self_, _280413_d, _280036_si);;
	};
	return _1abe2e217_evalObjSubIdent(_self_, _280413_d, _280036_si);;
}



inline jule::Ptr<_1abe11936_Data> _1abe2e899_evalTuple(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2576d_TupleExpr> _281433_tup) {
	jule::Ptr<_1abe509ec_Tuple> _281513_tupT = jule::new_ptr<_1abe509ec_Tuple>();;
	(*_281513_tupT.alloc)._field_Types=jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::alloc(0LL, (*(_281433_tup))._field_Expr.len());
	jule::Ptr<_1abd4e027_TupleExprModel> _281813_model = jule::new_ptr<_1abd4e027_TupleExprModel>(_1abd4e027_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1abe11936_Data>>::alloc(0LL, (*_281433_tup.alloc)._field_Expr.len())});;
	jule::Bool _282213_ok = true;;
	{
		auto expr = &((*_281433_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b16a3e71:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _282321_expr = *it;
			{
				jule::Ptr<_1abe11936_Data> _282417_d = _1abe318bd_evalExpr(_self_, _282321_expr);;
				if ((_282417_d == nullptr)) {
					_282213_ok=false;
					goto _iter_next_1b16a3e71;
				};
				(*_281513_tupT.alloc)._field_Types=jule::append((*_281513_tupT.alloc)._field_Types,jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::make({(*(_282417_d))._field_Kind}));
				(*(_281813_model))._field_Datas=jule::append((*_281813_model.alloc)._field_Datas,jule::Slice<jule::Ptr<_1abe11936_Data>>::make({_282417_d}));
			}
			_iter_next_1b16a3e71:;
			++it;
			goto _iter_begin_1b16a3e71;
		}
		_iter_end_1b16a3e71:;
	};
	if ((!(_282213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_281513_tupT, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data23)}), ._field_Model=jule::Any(_281813_model, &__jule_any_type81), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe2ec95_evalMap(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abe5159c_Map> _284331_m, jule::Ptr<_1abd2a179_BraceLit> _284344_lit) {
	jule::Ptr<_1abd4c003_MapExprModel> _284413_model = jule::new_ptr<_1abd4c003_MapExprModel>(_1abd4c003_MapExprModel{._field_KeyKind=(*(_284331_m))._field_Key, ._field_ValKind=(*_284331_m.alloc)._field_Val, });;
	{
		auto expr = &((*(_284344_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b16a7c33:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _284921_expr = *it;
			{
				{
					auto &_match_expr{ (*(_284921_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type78) {
						_case_begin_1b16a92c8:;
						{
							goto _match_end_1b16a8629;
						}
					}
					else {
						_case_begin_1b16a867e:;
						{
							_1abe13bad_pushErr(_self_.ptr(), (*(_284344_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b16a8629:;
				};
				jule::Ptr<_1abd2a9a4_KeyValPair> _285917_pair = (*(_284921_expr))._field_Kind.cast_ptr<_1abd2a9a4_KeyValPair>(&__jule_any_type78);;
				jule::Ptr<_1abe11936_Data> _286117_key = _1abe318bd_evalExpr(_self_, (*(_285917_pair))._field_Key);;
				if ((_286117_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1abe11936_Data> _286617_val = _1abe318bd_evalExpr(_self_, (*_285917_pair.alloc)._field_Val);;
				if ((_286617_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1ab6a7485_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Key), &(_286117_key), &((*((*_285917_pair.alloc)._field_Key))._field_Token))) {
					_1ab6a30eb_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Key), &(_286117_key), (*(*_285917_pair.alloc)._field_Key.alloc)._field_Token);
				};
				if (_1ab6a7485_checkValidityForInitExpr((*_self_.alloc)._field_s, (!((*_self_.alloc)._field_immutable)), false, &((*_284331_m.alloc)._field_Val), &(_286617_val), &((*((*_285917_pair.alloc)._field_Val))._field_Token))) {
					_1ab6a30eb_checkAssignType((*_self_.alloc)._field_s, false, &((*_284331_m.alloc)._field_Val), &(_286617_val), (*(*_285917_pair.alloc)._field_Val.alloc)._field_Token);
				};
				(*(_284413_model))._field_Entries=jule::append((*_284413_model.alloc)._field_Entries,jule::Slice<jule::Ptr<_1abd4ba4c_KeyValPairExprModel>>::make({jule::new_ptr<_1abd4ba4c_KeyValPairExprModel>(_1abd4ba4c_KeyValPairExprModel{._field_Key=(*(_286117_key))._field_Model, ._field_Val=(*(_286617_val))._field_Model})}));
			}
			_iter_next_1b16a7c33:;
			++it;
			goto _iter_begin_1b16a7c33;
		}
		_iter_end_1b16a7c33:;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_284331_m, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284413_model, &__jule_any_type99), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe300d6_evalBraceLit(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd2a179_BraceLit> _289236_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1b16b2a1d:;
			{
				_1abe13bad_pushErr(_self_, (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abe47021_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b16b2a84:;
			{
				return _1abe2ec95_evalMap(_self_, _1abe47021_Map((*_self_.alloc)._field_prefix), _289236_lit);;
			}
		}
		else if ((_1abe46a04_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b16b2aea:;
			{
				return _1abe26495_evalStructLitExplicit(_self_, _1abe46a04_Struct((*_self_.alloc)._field_prefix), (*(_289236_lit))._field_Exprs, (*_289236_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1b16b1d5d:;
			{
				_1abe13bad_pushErr(_self_.ptr(), (*(_289236_lit))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b16b1c5e:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe30427_evalAnonFunc(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd32505_FnDecl> _290736_decl) {
	_1abe54bdd_typeChecker _290813_tc = _1abe54bdd_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, };;
	jule::Ptr<_1abd59681_FnIns> _291313_ins = _1abe5b8b5_buildFunc(&_290813_tc, _290736_decl);;
	if ((_291313_ins == nullptr)) {
		return nullptr;;
	};
	(*(_291313_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _291813_captured = jule::Slice<jule::Ptr<_1abda8d2e_Var>>::alloc(0LL, 0LL);;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1b16b735d:;
			{
				jule::Ptr<_1ab65ca34_scopeChecker> _292117_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0);;
				jule::Ptr<_1ab65ca34_scopeChecker> _292217_scc = _1ab66eabd_newChildChecker(_292117_sc);;
				(*(_292217_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab65b4b1_scopeLabel>>>(nullptr);
				(*_292217_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab65ba44_scopeGoto>>>(nullptr);
				(*_292217_scc.alloc)._field_owner=_291313_ins;
				(*_292217_scc.alloc)._field_childIndex=0LL;
				(*_292217_scc.alloc)._field_it=0LLU;
				(*_292217_scc.alloc)._field_cse=0LLU;
				(*_292217_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1abda8d2e_Var>>>)((&(_291813_captured))));
				_1ab6b555e_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_291313_ins), &(_292217_scc));
			}
		}
		else {
			_case_begin_1b16b833c:;
			{
				_1ab6b5b7a_checkFnIns((*_self_.alloc)._field_s, &(_291313_ins));
			}
		}
		_match_end_1b16b82d7:;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_291313_ins, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)}), ._field_Model=jule::Any(jule::new_ptr<_1abd4b673_AnonFnExprModel>(_1abd4b673_AnonFnExprModel{._field_Captured=_291813_captured, ._field_Func=_291313_ins, ._field_Global=_1abe14939_isGlobal(_self_)}), &__jule_any_type100), });;
}



inline jule::Ptr<_1abe11936_Data> _1abe30768_evalBinary(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd28243_BinaryExpr> _294534_op) {
	_1abe33d21_binaryEval _294613_bs = static__1abe343c6_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1abe4a909_Prim> _294913_prim = _1abe45481_Prim((*_self_.alloc)._field_prefix);;
		if (((_294913_prim == nullptr) || (!(_1b9aabe31_IsNum(_1abe4ac4a_Str(_294913_prim.ptr())))))) {
			jule::Ptr<_1abe42d30_TypeKind> _295121_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_295121_prefix;
			});;
			return _1abe39d9e_eval(&_294613_bs, &(_294534_op));;
		};
	};
	return _1abe39d9e_eval(&_294613_bs, &(_294534_op));;
}



inline jule::Ptr<_1abe11936_Data> _1abe30aa9_evalExprKind(jule::Ptr<_1abe1365d_Eval> _self_, jule::Any _296036_kind) {
	{
		auto &_match_expr{ _296036_kind };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b16c1bc5:;
			{
				jule::Ptr<_1abd24e43_RangeExpr> _296317_e = _296036_kind.unsafe_cast_ptr<_1abd24e43_RangeExpr>();;
				return _1abe30aa9_evalExprKind(_self_, (*((*(_296317_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b16c1e06:;
			{
				return _1abe161dd_evalLit(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1abd25b14_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b16c1e6c:;
			{
				return _1abe1ae29_evalIdent(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1abd26494_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b16c1ed3:;
			{
				return _1abe1b26a_evalUnary(_self_, _296036_kind.unsafe_cast_ptr<_1abd26c36_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b16c2049:;
			{
				return _1abe1b5ab_evalVariadic(_self_, _296036_kind.unsafe_cast_ptr<_1abd27110_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b16c20b0:;
			{
				return _1abe1b8ec_evalUnsafe(_self_, _296036_kind.unsafe_cast_ptr<_1abd25edd_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b16c2126:;
			{
				return _1abe1c535_evalSliceExpr(_self_, _296036_kind.unsafe_cast_ptr<_1abd2b1d0_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b16c24cd:;
			{
				return _1abe20bcb_evalIndexing(_self_, _296036_kind.unsafe_cast_ptr<_1abd2bb3c_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b16c2544:;
			{
				return _1abe2200c_evalSlicing(_self_, _296036_kind.unsafe_cast_ptr<_1abd2c29c_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b16c25aa:;
			{
				return _1abe25b9d_evalCast(_self_, _296036_kind.unsafe_cast_ptr<_1abd274d9_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b16c2621:;
			{
				return _1abe25ede_evalNsSelection(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1abd278b3_NsSelectionExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b16c2698:;
			{
				return _1abe267d6_evalStructLit(_self_, _296036_kind.unsafe_cast_ptr<_1abd29bc3_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b16c2720:;
			{
				return _1abe26dad_evalType(_self_.ptr(), _296036_kind.unsafe_cast_ptr<_1abd20845_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b16c2797:;
			{
				return _1abe284b9_evalFnCall(_self_, _296036_kind.unsafe_cast_ptr<_1abd288a3_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b16c281e:;
			{
				return _1abe2e558_evalSubIdent(_self_, _296036_kind.unsafe_cast_ptr<_1abd27c8c_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b16c2896:;
			{
				return _1abe2e899_evalTuple(_self_, _296036_kind.unsafe_cast_ptr<_1abd2576d_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b16c291d:;
			{
				return _1abe300d6_evalBraceLit(_self_, _296036_kind.unsafe_cast_ptr<_1abd2a179_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b16c2995:;
			{
				return _1abe30427_evalAnonFunc(_self_, _296036_kind.unsafe_cast_ptr<_1abd32505_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b16c2a1c:;
			{
				return _1abe30768_evalBinary(_self_, _296036_kind.unsafe_cast_ptr<_1abd28243_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1b16c1d90:;
			{
				return nullptr;;
			}
		}
		_match_end_1b16c1d3a:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe30dea_eval1(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _300829_expr) {
	jule::Ptr<_1abe11936_Data> _300913_d = _1abe30aa9_evalExprKind(_self_, (*(_300829_expr))._field_Kind);;
	if (((_300913_d == nullptr) || ((*(_300913_d))._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1abe4676d_Fn((*(_300913_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16ce2ba:;
			{
				jule::Ptr<_1abd59681_FnIns> _301617_f = _1abe4676d_Fn((*(_300913_d))._field_Kind.ptr());;
				if (_1abd5ab16_IsBuiltin(_301617_f.ptr())) {
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*_300829_expr.alloc)._field_Token, jule::Str::lit("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1b16cd8b3;
				};
				if (((*_301617_f.alloc)._field_Generics.len() != (*((*_301617_f.alloc)._field_Decl))._field_Generics.len())) {
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				} else if (((!((*((*_301617_f.alloc)._field_Decl))._field_Statically)) && _1abd56da9_IsMethod((*_301617_f.alloc)._field_Decl))) {
					_1ab69a5dd_pushErr((*_self_.alloc)._field_s, (*_300829_expr.alloc)._field_Token, jule::Str::lit("methods should be invoked", 25), jule::Slice<jule::Any>());
				} else {
					(*_301617_f.alloc)._field_AsAnon=true;
				};
			}
		}
		_match_end_1b16cd8b3:;
	};
	return _300913_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe3123b_eval(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _303628_expr) {
	jule::Ptr<_1abe11936_Data> _303713_d = _1abe30dea_eval1(_self_, _303628_expr);;
	if ((_303713_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1abe4753d_comptime((*(_303713_d))._field_Kind.ptr()))) {
		_1ab69a5dd_pushErr((*_self_.alloc)._field_s.ptr(), (*(_303628_expr))._field_Token, jule::Str::lit("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303713_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe3157c_evalExpr1(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _305133_expr) {
	jule::Ptr<_1abe11936_Data> _305213_d = _1abe30dea_eval1(_self_, _305133_expr);;
	{
		
		if ((_305213_d == nullptr)) {
			_case_begin_1b16d74d2:;
			{
				return nullptr;;
			}
		}
		else if ((*(_305213_d))._field_Decl) {
			_case_begin_1b16d757b:;
			{
				_1abe13bad_pushErr(_self_, (*(_305133_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b16d745a:;
			{
				return _305213_d;;
			}
		}
		_match_end_1b16d73e4:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe318bd_evalExpr(jule::Ptr<_1abe1365d_Eval> _self_, jule::Ptr<_1abd24b79_Expr> _306732_expr) {
	jule::Ptr<_1abe11936_Data> _306813_d = _1abe3123b_eval(_self_, _306732_expr);;
	{
		
		if ((_306813_d == nullptr)) {
			_case_begin_1b16d93c4:;
			{
				return nullptr;;
			}
		}
		else if ((*(_306813_d))._field_Decl) {
			_case_begin_1b16d946d:;
			{
				_1abe13bad_pushErr(_self_, (*(_306732_expr))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b16d934c:;
			{
				return _306813_d;;
			}
		}
		_match_end_1b16d92d6:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abe1365d_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1abe31d85_unaryEval static__1abe322c5_new(jule::Ptr<_1abe1365d_Eval> _308823_e) {
	return _1abe31d85_unaryEval{._field_e=_308823_e, };;
}



inline void _1abe324c3_minus(_1abe31d85_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b16db0eb:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abe45481_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16db4d6:;
			{
				if ((!(_1b9aabe31_IsNum(_1abe431e8_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abe46a04_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16dacaa:;
			{
				if (((*(_1abe46a04_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b16dac44:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b16dab89:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1abe1233d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9ab1ed0_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16e07e8:;
				{
					_1b9ab1012_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b9aae8d4_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b9ab1496_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16e08d6:;
				{
					_1b9ab0440_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b9aadd9a_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b9ab172c_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16e04a7:;
				{
					_1b9ab0440_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (-(_1b9aaeb6a_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b16e0430:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3126:17"));;
				}
			}
			_match_end_1b16e0386:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1abe326c1_plus(_1abe31d85_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b16e5e5d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abe45481_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16e6348:;
			{
				if ((!(_1b9aabe31_IsNum(_1abe431e8_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abe46a04_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b16e5b1c:;
			{
				if (((*(_1abe46a04_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b16e5aa6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b16e59a7:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1abe1233d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9ab1ed0_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16ea65a:;
				{
					_1b9ab1012_SetF64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b9aae8d4_ReadF64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b9ab1496_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16ea748:;
				{
					_1b9ab0440_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b9aadd9a_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b9ab172c_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b16ea319:;
				{
					_1b9ab0440_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (+(_1b9aaeb6a_AsI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b16ea292:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3171:17"));;
				}
			}
			_match_end_1b16ea1e8:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1abe328be_caret(_1abe31d85_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Kind == nullptr)) {
			_case_begin_1b1700c9d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1abe45481_Prim((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1701188:;
			{
				if ((!(_1b9aab859_IsInt(_1abe431e8_Str((*(*(_self_))._field_d.alloc)._field_Kind))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1abe46a04_Struct((*((*(_self_))._field_d))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b170095c:;
			{
				if (((*(_1abe46a04_Struct((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b17008e6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b17007e7:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1abe1233d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9ab1496_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b1705489:;
				{
					_1b9ab0440_SetI64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b9aadd9a_ReadI64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else if (_1b9ab172c_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b1705577:;
				{
					_1b9ab06e8_SetU64((*(*(_self_))._field_d.alloc)._field_Constant, (~(_1b9aae131_ReadU64((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b17050d2:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3214:17"));;
				}
			}
			_match_end_1b1705038:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1abe32abc_excl(_1abe31d85_unaryEval* _self_) {
	jule::Ptr<_1abe4a909_Prim> _32289_t = _1abe45481_Prim((*((*(_self_))._field_d))._field_Kind.ptr());;
	if (((_32289_t == nullptr) || (!(_1abe4db0a_IsBool(_32289_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1abe1233d_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1b9ab19b3_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1b170b704:;
				{
					_1b9ab09a1_SetBool((*(*(_self_))._field_d.alloc)._field_Constant, (!(_1b9aae3b7_ReadBool((*(*(_self_))._field_d.alloc)._field_Constant))));
				}
			}
			else {
				_case_begin_1b170b34c:;
				{
					jule::panic(jule::Str::lit("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3242:17"));;
				}
			}
			_match_end_1b170b292:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
}



inline void _1abe32cba_star(_1abe31d85_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
	{
		
		if ((_1abe4599d_Ptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1710054:;
			{
				if ((!(_1abe146a3_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1abe52bec_Ptr> _326717_t = _1abe4599d_Ptr((*(*(_self_))._field_d.alloc)._field_Kind);;
				if (_1abe53736_IsUnsafe(_326717_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Kind=(*_326717_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1abe45717_Sptr((*(*(_self_))._field_d.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b171043e:;
			{
				(*(*(_self_))._field_d.alloc)._field_Kind=(*(_1abe45717_Sptr((*(*(_self_))._field_d.alloc)._field_Kind)))._field_Elem;
			}
		}
		else {
			_case_begin_1b170eb9c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b170dbbd:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1abe32eb8_amper(_1abe31d85_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b1718623:;
			{
				jule::Ptr<_1abd4960a_StructLitExprModel> _328917_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1abd4960a_StructLitExprModel>();;
				_1abe3ac07_makeStructLitAlloc(&((*(_self_))._field_d), &(_328917_lit));
			}
		}
		else {
			_case_begin_1b1715aa4:;
			{
				{
					
					if (_1abe5dc19_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b1716467:;
						{
							(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe52bec_Ptr>(_1abe52bec_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Kind}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data26)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type110);
						}
					}
					else {
						_case_begin_1b17156a8:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b1716038:;
				};
			}
		}
		_match_end_1b1715a4e:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1abe331b6_typeDecl(_1abe31d85_unaryEval* _self_) {
	_1abe54bdd_typeChecker _331413_tc = _1abe54bdd_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_errorToken=(*((*(_self_))._field_u))._field_Op, };;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b171c12c:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5a0cd_buildPtrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data26)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b171db45:;
			{
				(*((*(_self_))._field_d))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5994b_buildSptrFromType(&_331413_tc, &((*(*(_self_))._field_d.alloc)._field_Kind)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Kind, &__jule_any_type84);
			}
		}
		else {
			_case_begin_1b171b747:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_d))._field_Kind.ptr()), &__jule_any_type4)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b171bc86:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1abe333b4_evalData(_1abe31d85_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b17227b4:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _333917_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1abe3123b_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_333917_prefix;
			}
		}
		else {
			_case_begin_1b171bcec:;
			{
				(*(_self_))._field_d=_1abe3123b_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1b17223b8:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe33705_eval(_1abe31d85_unaryEval* _self_, jule::Ptr<_1abd26c36_UnaryExpr> _334827_u) {
	(*(_self_))._field_u=_334827_u;
	_1abe333b4_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1abe331b6_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _33599_kind = (*((*(_self_))._field_d))._field_Kind;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b1726e39:;
			{
				_1abe324c3_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b1726ea0:;
			{
				_1abe326c1_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b1727016:;
			{
				_1abe328be_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b172707c:;
			{
				_1abe32abc_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b17270e3:;
			{
				_1abe32cba_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b1727159:;
			{
				_1abe32eb8_amper(_self_);
			}
		}
		else {
			_case_begin_1b17268ea:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b1726dc3:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b1727654:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, jule::Str::lit("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str(_33599_kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if (_1abe1233d_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b17255ec:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1b172916c:;
	};
	return (*(_self_))._field_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe31d85_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1abe33d21_binaryEval static__1abe343c6_newPlain(jule::Ptr<_1abe1365d_Eval> _339628_e) {
	return _1abe33d21_binaryEval{._field_e=_339628_e, };;
}



inline _1abe33d21_binaryEval static__1abe3474a_new(jule::Ptr<_1abe1365d_Eval> _340223_e, jule::Ptr<_1abd0a38a_Token> _340237_op) {
	return _1abe33d21_binaryEval{._field_e=_340223_e, ._field_op=_340237_op};;
}



inline jule::Bool _1abe349d1_checkTypeCompatibility(_1abe33d21_binaryEval* _self_) {
	return _1ab6a442c_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1abe34c67_checkStructCommonOperatorCompatibility(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abd59681_FnIns> _341617_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b172e8ae:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b172e56d:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b172e5d4:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b172e64a:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b172e6b1:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b172e727:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b172e78d:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b1730d99:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b1730e10:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b1730e76:;
			{
				_341617_overload=(*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b172deeb:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return false;;
			}
		}
		_match_end_1b172e507:;
	};
	if ((_341617_overload == nullptr)) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
		return false;;
	};
	jule::Ptr<_1abd58608_ParamIns> _344813_p = (*(_341617_overload))._field_Params[1LL];;
	return _1ab6a30eb_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_344813_p))._field_Decl))._field_Reference, &((*_344813_p.alloc)._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1abe11936_Data> _1abe34eed_evalComptimeTypeInfo(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abd81400_comptimeTypeInfo> _345313_r = _1abe48d47_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((_345313_r == nullptr)) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abd81400_comptimeTypeInfo> _345813_l = _1abe48d47_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ae25654d:;
			{
				jule::Ptr<_1b9aac4c5_Const> _346117_constant = static__1b9aace98_NewBool(_1abe43539_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base));;
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_346117_constant, &__jule_any_type19), ._field_Constant=_346117_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ae27d685:;
			{
				jule::Ptr<_1b9aac4c5_Const> _346817_constant = static__1b9aace98_NewBool((!(_1abe43539_Equal((*(_345813_l))._field_base, (*(_345313_r))._field_base))));;
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, ._field_Model=jule::Any(_346817_constant, &__jule_any_type19), ._field_Constant=_346817_constant});;
			}
		}
		else {
			_case_begin_1ae2874e6:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13b4687:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe35284_evalNil(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe44bcd_NilCompatible((*((*(_self_))._field_r))._field_Kind.ptr())))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13b914d:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13b8999:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("nil", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13b8c96:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe3551a_evalEnum(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abd6c265_Enum> _349913_enm = _1abe45c34_Enum((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13bb42a:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _350317_rkind = (*((*(_self_))._field_r))._field_Kind;;
				if ((_1abe45c34_Enum((*(*(_self_))._field_r.alloc)._field_Kind) != nullptr)) {
					_350317_rkind=(*((*(_1abe45c34_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
				if ((!(_1ab6a3a58_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_349913_enm))._field_Kind.alloc)._field_Kind), &(_350317_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		_match_end_1b13bb3b4:;
	};
	if (((_1abe45c34_Enum((*(*(_self_))._field_r.alloc)._field_Kind) == nullptr) || (_349913_enm != _1abe45c34_Enum((*(*(_self_))._field_r.alloc)._field_Kind)))) {
		_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b13c1dd1:;
			{
				if ((!(_1b9aabe31_IsNum(_1abe431e8_Str((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b13c2e15:;
			{
				jule::Ptr<_1abd6b6e8_EnumItem> _353313_first = (*_349913_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1b9ab1496_IsI64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b13c6501:;
						{
							if ((_1b9aadd9a_ReadI64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LL)) {
								goto _julec_label_1b13cb517;
							};
							goto _julec_label_1b13c7711;
						}
					}
					else if (_1b9ab172c_IsU64((*((*((*(_353313_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1b13c65de:;
						{
							if ((_1b9aae131_ReadU64((*(*(*_353313_first.alloc)._field_Value.alloc)._field_Data.alloc)._field_Constant) == 0LLU)) {
								goto _julec_label_1b13cb517;
							};
							goto _julec_label_1b13c7711;
						}
					}
					else {
						_case_begin_1b13c6149:;
						{
							jule::panic(jule::Str::lit("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3546:17"));;
						}
					}
					_match_end_1b13c60d3:;
				};
				_julec_label_1b13c7711:;
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4),jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				_1abe14021_pushSuggestion((*(_self_))._field_e, jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1b13cb517:;
				goto _case_begin_1b13c2e7b;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b13c2e7b:;
			{
				if (((_1abe45481_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind.ptr()) == nullptr) || (!(_1b9aab859_IsInt(_1abe4ac4a_Str(_1abe45481_Prim((*(*_349913_enm.alloc)._field_Kind.alloc)._field_Kind).ptr())))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b13bd95a:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any((*_349913_enm.alloc)._field_Ident, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13c1a29:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe357a1_evalTypeEnum(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abd6d970_TypeEnum> _356613_enm = _1abe45eba_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr());;
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13d1275:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13d0609:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abd6dcb1_Str(_356613_enm.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13d0d79:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe35a37_evalSptr(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13d3662:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13d25c8:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13d32aa:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe35cbd_evalPtr(_1abe33d21_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b13d5895:;
			{
				if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b13d6c2b:;
			{
				if ((_1abe4599d_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1abe53736_IsUnsafe(_1abe4599d_Ptr((*(*(_self_))._field_l.alloc)._field_Kind).ptr())) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
				};
				if ((!(_1abe3bd90_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_self_))._field_r))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b13d50ae:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13d4e16:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe36054_evalArr(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13dd43b:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13d8634:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13dd084:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe362da_evalSlc(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13e0ac0:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13dea36:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13e0718:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe36571_evalStruct(_1abe33d21_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b13e2440:;
			{
				if (((*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b13e2a5b:;
			{
				if (((*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b13e2ac2:;
			{
				if (((*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b13e2b38:;
			{
				if (((*(_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13e2b9e:;
			{
				if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		_match_end_1b13e2374:;
	};
	if ((!(_1abe34c67_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1abe11936_Data> _1abe36807_evalTrait(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b13eda01:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b13ecdb8:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b13ed649:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe36a8d_evalAny(_1abe33d21_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b1400c34:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b140044d:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("any", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b14002a5:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe36d24_evalBool(_1abe33d21_binaryEval* _self_) {
	if ((!(_1abe349d1_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b1402e34:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b1401d9a:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b1402a7c:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe370aa_evalStr(_1abe33d21_binaryEval* _self_) {
	jule::Str _376513_rk = _1abe431e8_Str((*((*(_self_))._field_r))._field_Kind.ptr());;
	if ((!_376513_rk.equal("str", 3))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_376513_rk, &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b1406c07:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b1407a93:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		else {
			_case_begin_1b1405a08:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("str", 3), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b140680b:;
	};
}



inline void _1abe372a8_setTypeToGreater(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abe4a909_Prim> _37909_lp = _1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	jule::Ptr<_1abe4a909_Prim> _37919_rp = _1abe45481_Prim((*((*(_self_))._field_r))._field_Kind);;
	if (_1abe1233d_IsConst((*(_self_))._field_l)) {
		if ((!(_1abe1233d_IsConst((*(_self_))._field_r)))) {
			(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_37919_rp))._field_Kind;
			return;;
		};
		goto _julec_label_1b140c526;
	};
	if (_1abe1233d_IsConst((*(_self_))._field_r)) {
		(*(*(*(_self_))._field_r.alloc)._field_Constant.alloc)._field_Kind=(*(_37909_lp))._field_Kind;
		return;;
	};
	_julec_label_1b140c526:;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*(*(_self_))._field_r.alloc)._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1abe1233d_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
		return;;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return;;
	};
	if (_1b9aaa11b_IsGreater((*_37919_rp.alloc)._field_Kind, (*_37909_lp.alloc)._field_Kind)) {
		(*(*(_self_))._field_l.alloc)._field_Kind=(*(*(_self_))._field_r.alloc)._field_Kind;
		if (_1abe1233d_IsConst((*(_self_))._field_l)) {
			(*(*(*(_self_))._field_l.alloc)._field_Constant.alloc)._field_Kind=(*_37919_rp.alloc)._field_Kind;
		};
	};
}



inline void _1abe37561_checkModData(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _382336_d) {
	if ((!(_1abe1233d_IsConst((*(_382336_d)).ptr())))) {
		if (((_1abe45481_Prim((*((*(_382336_d))))._field_Kind.ptr()) == nullptr) || (!(_1b9aab859_IsInt((*(_1abe45481_Prim((*((*(_382336_d))))._field_Kind)))._field_Kind))))) {
			_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1abde78c8_sigAssignable(jule::Str::lit("i64", 3), _382336_d)) {
			_case_begin_1b1415342:;
			{
				_1b9ab0440_SetI64((*((*(_382336_d))))._field_Constant.ptr(), _1b9aaeb6a_AsI64((*((*(_382336_d))))._field_Constant));
			}
		}
		else if (_1abde7c91_unsigAssignable(jule::Str::lit("u64", 3), _382336_d)) {
			_case_begin_1b1415023:;
			{
				_1b9ab06e8_SetU64((*((*(_382336_d))))._field_Constant.ptr(), _1b9aaee01_AsU64((*((*(_382336_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1b1414eac:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1414e46:;
	};
}



inline void _1abe3775e_mod(_1abe33d21_binaryEval* _self_) {
	_1abe37561_checkModData(_self_, &((*(_self_))._field_l));
	_1abe37561_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1abe37b5a_numbersAreCompatibile(_1abe33d21_binaryEval* _self_, jule::Str* _384537_lk, jule::Str* _384547_rk) {
	if ((!(_1b9aabe31_IsNum((*(_384547_rk)))))) {
		return false;;
	};
	if ((_1abe1233d_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((*(_384537_lk)).equal("f32", 3)) {
		if ((_1abe1233d_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1abde7554_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f32", 3);;
	};
	if ((*(_384537_lk)).equal("f64", 3)) {
		if ((_1abe1233d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1abde7554_floatAssignable(_384537_lk, &((*(_self_))._field_r));;
		};
		return (*(_384547_rk)).equal("f64", 3);;
	};
	if ((_1abe1233d_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1abde8115_intAssignable((*(_384537_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_384537_lk)) == (*(_384547_rk)));;
}



inline jule::Ptr<_1abe11936_Data> _1abe37de1_evalFloat(_1abe33d21_binaryEval* _self_) {
	jule::Str _38719_lk = (*(_1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _38729_rk = (*(_1abe45481_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	if ((!(_1abe37b5a_numbersAreCompatibile(_self_, &(_38719_lk), &(_38729_rk))))) {
		_1ab6a3e76_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b142024d:;
			{
				if (((!(_1abe1233d_IsConst((*(_self_))._field_l))) || (!(_1abde8115_intAssignable(jule::Str::lit("i64", 3), &((*(_self_))._field_l)))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((!(_1abe1233d_IsConst((*(_self_))._field_r))) || (!(_1abde8115_intAssignable(jule::Str::lit("u64", 3), &((*(_self_))._field_r)))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1b9ab0440_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1b9aaeb6a_AsI64((*(*(_self_))._field_l.alloc)._field_Constant));
				_1b9ab06e8_SetU64((*(*(_self_))._field_r.alloc)._field_Constant, _1b9aaee01_AsU64((*(*(_self_))._field_r.alloc)._field_Constant));
				if ((!(_1abe3b6b9_isOkForShifting(&((*(_self_))._field_r))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b14201d7:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b14202c5:;
			{
				_1abe372a8_setTypeToGreater(_self_);
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		_match_end_1b1422371:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b142761d:;
			{
				_1abe372a8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b1428322:;
			{
				if ((!(_1b9aab859_IsInt(_38729_rk)))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_38719_lk, &__jule_any_type4),jule::Any(_38729_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				_1abe3775e_mod(_self_);
				_1abe372a8_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b142099b:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b1426a6d:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe38177_evalInt(_1abe33d21_binaryEval* _self_) {
	jule::Str _39359_lk = (*(_1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr())))._field_Kind;;
	jule::Str _39369_rk = (*(_1abe45481_Prim((*((*(_self_))._field_r))._field_Kind)))._field_Kind;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b142bd4d:;
			{
				if (((!(_1b9aab859_IsInt(_39359_lk))) || (!(_1b9aab859_IsInt(_39369_rk))))) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_39359_lk, &__jule_any_type4),jule::Any(_39369_rk, &__jule_any_type4)}));
					return nullptr;;
				};
				if ((!(_1abe3b6b9_isOkForShifting(&((*(_self_))._field_r))))) {
					_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b142c139:;
	};
	if ((!(_1abe37b5a_numbersAreCompatibile(_self_, &(_39359_lk), &(_39369_rk))))) {
		_1ab6a3e76_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Kind), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b1430967:;
			{
				return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02aa72_primBool, });;
			}
		}
		_match_end_1b1430901:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b143222c:;
			{
				_1abe372a8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b1432e31:;
			{
				_1abe3775e_mod(_self_);
				_1abe372a8_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b1430a55:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e, (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b1431d31:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe3840d_evalPrim(_1abe33d21_binaryEval* _self_) {
	jule::Ptr<_1abe4a909_Prim> _39929_prim = _1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr());;
	{
		
		if (_1abe4db0a_IsBool(_39929_prim.ptr())) {
			_case_begin_1b1435609:;
			{
				return _1abe36d24_evalBool(_self_);;
			}
		}
		else if (_1abe4dd91_IsStr(_39929_prim.ptr())) {
			_case_begin_1b14356a3:;
			{
				return _1abe370aa_evalStr(_self_);;
			}
		}
		_match_end_1b1435582:;
	};
	if ((_1abe45481_Prim((*((*(_self_))._field_r))._field_Kind) == nullptr)) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe4ac4a_Str(_39929_prim.ptr()), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		
		if (_1b9aabb9a_IsFloat((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1b1438123:;
			{
				return _1abe37de1_evalFloat(_self_);;
			}
		}
		else if (_1b9aab859_IsInt((*_39929_prim.alloc)._field_Kind)) {
			_case_begin_1b14381ab:;
			{
				return _1abe38177_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b14380ac:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14367d6:;
	};
}



inline void _1abe3860b_checkSpecialCases(_1abe33d21_binaryEval* _self_) {
	if (((!(_1abe4442a_Comparable((*((*(_self_))._field_l))._field_Kind.ptr()))) && (!(_1abe43e0d_IsNil((*((*(_self_))._field_r))._field_Kind))))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(*(_self_))._field_l.alloc)._field_Kind), &__jule_any_type4)}));
	} else if (((!(_1abe4442a_Comparable((*((*(_self_))._field_r))._field_Kind.ptr()))) && (!(_1abe43e0d_IsNil((*((*(_self_))._field_l))._field_Kind))))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(*(_self_))._field_r.alloc)._field_Kind), &__jule_any_type4)}));
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe38892_evalOp(_1abe33d21_binaryEval* _self_) {
	_1abe3860b_checkSpecialCases(_self_);
	{
		
		if (_1abe44194_Void((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1b143d9ec:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(jule::Str::lit("void", 4), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		else if ((_1abe48d47_comptimeTypeInfo((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b143ed83:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b143ede9;
			}
		}
		else if ((_1abe48d47_comptimeTypeInfo((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b143ede9:;
			{
				return _1abe34eed_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1abe45481_Prim((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr) && _1abe4e127_IsAny(_1abe45481_Prim((*(*(_self_))._field_r.alloc)._field_Kind).ptr()))) {
			_case_begin_1b143d854:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b143d8ba;
			}
		}
		else if (_1abe43e0d_IsNil((*((*(_self_))._field_r))._field_Kind.ptr())) {
			_case_begin_1b143d8ba:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b143eed7;
			}
		}
		else if (_1abe43e0d_IsNil((*((*(_self_))._field_l))._field_Kind.ptr())) {
			_case_begin_1b143eed7:;
			{
				return _1abe35284_evalNil(_self_);;
			}
		}
		else if (((_1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr) && _1abe4e127_IsAny(_1abe45481_Prim((*(*(_self_))._field_l.alloc)._field_Kind).ptr()))) {
			_case_begin_1b144004d:;
			{
				return _1abe36a8d_evalAny(_self_);;
			}
		}
		else if ((_1abe45eba_TypeEnum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b14400b4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b144012a;
			}
		}
		else if ((_1abe45eba_TypeEnum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b144012a:;
			{
				return _1abe357a1_evalTypeEnum(_self_);;
			}
		}
		else if ((_1abe45c34_Enum((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1440191:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b1440207;
			}
		}
		else if ((_1abe45c34_Enum((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1440207:;
			{
				return _1abe3551a_evalEnum(_self_);;
			}
		}
		else if ((_1abe45717_Sptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b144026d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b14402d4;
			}
		}
		else if ((_1abe45717_Sptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b14402d4:;
			{
				return _1abe35a37_evalSptr(_self_);;
			}
		}
		else if ((_1abe4599d_Ptr((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b144034a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b14403b1;
			}
		}
		else if ((_1abe4599d_Ptr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b14403b1:;
			{
				return _1abe35cbd_evalPtr(_self_);;
			}
		}
		else if ((_1abe46251_Arr((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1440427:;
			{
				return _1abe36054_evalArr(_self_);;
			}
		}
		else if ((_1abe464d7_Slc((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b144048d:;
			{
				return _1abe362da_evalSlc(_self_);;
			}
		}
		else if ((_1abe46c8a_Trait((*((*(_self_))._field_r))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1440504:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1b144056a;
			}
		}
		else if ((_1abe46c8a_Trait((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b144056a:;
			{
				return _1abe36807_evalTrait(_self_);;
			}
		}
		else if ((_1abe46a04_Struct((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b14405d1:;
			{
				return _1abe36571_evalStruct(_self_);;
			}
		}
		else if ((_1abe45481_Prim((*((*(_self_))._field_l))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1440647:;
			{
				return _1abe3840d_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b143d25a:;
			{
				_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type4),jule::Any(_1abe431e8_Str((*((*(_self_))._field_l))._field_Kind.ptr()), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b143d634:;
	};
}



inline void _1abe38b4a_evalConst(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _408333_d) {
	{
		
		if (((*(_408333_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1b14534b2:;
			{
				return;;
			}
		}
		else if ((!(_1abe1233d_IsConst((*(_self_))._field_l.ptr()))) || (!(_1abe1233d_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b1453a56:;
			{
				(*((*(_408333_d))))._field_Constant=nullptr;
				(*((*(_408333_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1b14533b3:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b1453b33:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab307a_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b1456064:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool((!(_1b9ab307a_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b14560ca:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab2c39_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b1456141:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab28e8_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b14561a7:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab3a4d_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b145621d:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab33bb_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b1456295:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab3d8e_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b145631c:;
			{
				(*((*(_408333_d))))._field_Constant=static__1b9aace98_NewBool(_1b9ab370c_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b1456394:;
			{
				_1b9ab41d0_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b145641b:;
			{
				_1b9ab4521_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1456493:;
			{
				_1b9ab4862_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b145651a:;
			{
				jule::Bool _412313_ok = _1b9ab4ba3_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_412313_ok)) && (_1b9ab0187_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1abe4a909_Prim> _412817_prim = _1abe45481_Prim((*((*(_408333_d))))._field_Kind.ptr());;
				{
					
					if (_1b9aab282_IsSigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1b1467592:;
						{
							_1b9ab0440_SetI64((*((*(_408333_d))))._field_Constant, _1b9aaeb6a_AsI64((*((*(_408333_d))))._field_Constant));
						}
					}
					else if (_1b9aab590_IsUnsigInt((*(_412817_prim))._field_Kind)) {
						_case_begin_1b146763b:;
						{
							_1b9ab06e8_SetU64((*((*(_408333_d))))._field_Constant, _1b9aaee01_AsU64((*((*(_408333_d))))._field_Constant));
						}
					}
					_match_end_1b146752b:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b1456592:;
			{
				jule::Bool _413613_ok = _1b9ab4ee4_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_413613_ok)) && (_1b9ab0187_AsF64((*(*(_self_))._field_r.alloc)._field_Constant) == 0LL))) {
					_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b1456619:;
			{
				_1b9ab5676_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b1456691:;
			{
				_1b9ab5335_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b1456718:;
			{
				_1b9ab59b7_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b1456790:;
			{
				_1b9ab5d08_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b1456817:;
			{
				_1b9ab6149_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_408333_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1b1455360:;
	};
	(*((*(_408333_d))))._field_Model=jule::Any((*((*(_408333_d))))._field_Constant, &__jule_any_type19);
	_1abe3d006_applyCastModelByEnum(_408333_d, _1abe45c34_Enum((*((*(_408333_d))))._field_Kind.ptr()), &((*(_self_))._field_op));
}



inline void _1abe38e03_checkData(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _416133_d) {
	jule::Ptr<_1abd59681_FnIns> _41629_f = _1abe4676d_Fn((*((*(_416133_d))))._field_Kind.ptr());;
	if ((((_41629_f != nullptr) && ((*_41629_f.alloc)._field_Decl != nullptr)) && _1abd56da9_IsMethod((*_41629_f.alloc)._field_Decl))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str::lit("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1abe39101_checkDatas(_1abe33d21_binaryEval* _self_) {
	_1abe38e03_checkData(_self_, &((*(_self_))._field_l));
	_1abe38e03_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1abe393a9_setModel(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _417332_d) {
	if (_1abe1233d_IsConst((*(_417332_d)).ptr())) {
		if (((_1abe1233d_IsConst((*(_self_))._field_l.ptr()) && _1abe1233d_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1abe11936_Data> _418213_l;
	jule::Ptr<_1abe11936_Data> _418220_r;
	({
		jule::Ptr<_1abe11936_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1abe11936_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_418213_l = ___jule_assign_arg;
		_418220_r = _1___jule_assign_arg;
	});
	if ((!(_1abe1267e_GoodOperand(_418213_l, &(_418220_r))))) {
		std::swap(_418213_l, _418220_r);
	};
	(*((*(_417332_d))))._field_Model=jule::Any(jule::new_ptr<_1abd4885c_BinaryExprModel>(_1abd4885c_BinaryExprModel{._field_Left=jule::new_ptr<_1abd48362_OperandExprModel>(_1abd48362_OperandExprModel{._field_Kind=(*_418213_l.alloc)._field_Kind, ._field_Model=(*_418213_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1abd48362_OperandExprModel>(_1abd48362_OperandExprModel{._field_Kind=(*_418220_r.alloc)._field_Kind, ._field_Model=(*_418220_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type111);
}



inline void _1abe39662_postEval(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _420032_d) {
	(*((*(_420032_d))))._field_Lvalue=false;
	_1abe393a9_setModel(_self_, _420032_d);
}



inline jule::Ptr<_1abe11936_Data> _1abe39a5d_solveExplicit(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abe11936_Data>* _420537_l, jule::Ptr<_1abe11936_Data>* _420552_r) {
	({
		jule::Ptr<_1abe11936_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1abe11936_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1abe39101_checkDatas(_self_);
	jule::Ptr<_1abe11936_Data> _421013_d = _1abe38892_evalOp(_self_);;
	({
		jule::Ptr<_1abe11936_Data> ___jule_assign_arg = (*(_420537_l));
		jule::Ptr<_1abe11936_Data> _1___jule_assign_arg = (*(_420552_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1abe38b4a_evalConst(_self_, &(_421013_d));
	if ((_421013_d != nullptr)) {
		(*_421013_d.alloc)._field_Mutable=true;
		_1abe39662_postEval(_self_, &(_421013_d));
	};
	return _421013_d;;
}



inline jule::Ptr<_1abe11936_Data> _1abe39d9e_eval(_1abe33d21_binaryEval* _self_, jule::Ptr<_1abd28243_BinaryExpr>* _422528_op) {
	if (((*((*((*(_422528_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1abe13bad_pushErr((*(_self_))._field_e.ptr(), (*((*(_422528_op))))._field_Op, jule::Str::lit("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1abe14021_pushSuggestion((*(_self_))._field_e, jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _423213_l = _1abe3157c_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Left);;
	if (((_423213_l == nullptr) || ((*(_423213_l))._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _423713_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_423213_l))._field_Kind;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_423713_prefix;
	});;
	jule::Ptr<_1abe11936_Data> _424013_r = _1abe3157c_evalExpr1((*(_self_))._field_e, (*((*(_422528_op))))._field_Right);;
	if (((_424013_r == nullptr) || ((*(_424013_r))._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_422528_op))))._field_Op;
	jule::Ptr<_1abe11936_Data> _424713_d = _1abe39a5d_solveExplicit(_self_, &(_423213_l), &(_424013_r));;
	if ((((_424713_d != nullptr) && (*(_423213_l))._field_IsRune) && (*(_424013_r))._field_IsRune)) {
		(*_424713_d.alloc)._field_IsRune=true;
	};
	return _424713_d;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe33d21_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe41449_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe4203d_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abe431e8_Str(_1abe42d30_TypeKind* _self_) {
	if (_1abe43e0d_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_209e0d4d9_StrBuilder _7413_kind = static__209e0d918_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_209e0de79_WriteStr(&_7413_kind, jule::Str::lit("...", 3));
	};
	if (_1abe43b77_Binded(_self_)) {
		_209e0de79_WriteStr(&_7413_kind, jule::Str::lit("cpp.", 4));
		_209e0de79_WriteStr(&_7413_kind, (*(_self_))._field_BindIdent);
	} else {
		_209e0de79_WriteStr(&_7413_kind, ((_1abe42879_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1abe423d4_Str((*(_self_))._field_Kind.data));
	};
	return _209e0e771_Str(&_7413_kind);;
}



inline jule::Bool _1abe43539_Equal(jule::Ptr<_1abe42d30_TypeKind> _self_, jule::Ptr<_1abe42d30_TypeKind> _9021_other) {
	if (_1abe43e0d_IsNil(_self_.ptr())) {
		return _1abe43e0d_IsNil(_9021_other.ptr());;
	};
	if (_1abe43b77_Binded(_self_)) {
		return (_1abe43b77_Binded(_9021_other) && ((*_self_.alloc)._field_BindIdent == (*_9021_other.alloc)._field_BindIdent));;
	};
	return ((_1abe42879_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1abe42725_Equal((*_self_.alloc)._field_Kind.data, _9021_other);;
}



inline jule::Bool _1abe43b77_Binded(_1abe42d30_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1abe43e0d_IsNil(_1abe42d30_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1abe44194_Void(_1abe42d30_TypeKind* _self_) {
	jule::Ptr<_1abe4a909_Prim> _1109_prim = _1abe45481_Prim(&(*(_self_)));;
	return ((_1109_prim != nullptr) && (*_1109_prim.alloc)._field_Kind.equal("void", 4));;
}



inline jule::Bool _1abe4442a_Comparable(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _11717__self = _self_;;
		if ((_1abe46a04_Struct(_11717__self) != nullptr)) {
			return (*(_1abe46a04_Struct(_11717__self)))._field_Comparable;;
		};
		return (((_1abe47021_Map(_11717__self) == nullptr) && (_1abe464d7_Slc(_11717__self) == nullptr)) && (_1abe4676d_Fn(_11717__self) == nullptr));;
	};
}



inline jule::Bool _1abe446b1_Mutable(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _12817__self = _self_;;
		if ((_1abe46a04_Struct(_12817__self) != nullptr)) {
			return (*(_1abe46a04_Struct(_12817__self)))._field_Mutable;;
		};
		if ((_1abe46c8a_Trait(_12817__self) != nullptr)) {
			return true;;
		};
		if ((_1abe45481_Prim(_12817__self) != nullptr)) {
			jule::Ptr<_1abe4a909_Prim> _13617_p = _1abe45481_Prim(_12817__self);;
			return _1abe4e127_IsAny(_13617_p.ptr());;
		};
		if ((_1abe46251_Arr(_12817__self) != nullptr)) {
			return _1abe446b1_Mutable((*(_1abe46251_Arr(_12817__self)))._field_Elem.ptr());;
		};
		return (((_1abe464d7_Slc(_12817__self) != nullptr) || (_1abe4599d_Ptr(_12817__self) != nullptr)) || (_1abe45717_Sptr(_12817__self) != nullptr));;
	};
}



inline jule::Bool _1abe44947_Ordered(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _15117__self = _self_;;
		jule::Ptr<_1abe4a909_Prim> _15213_prim = _1abe45481_Prim(_15117__self);;
		if ((_15213_prim != nullptr)) {
			return (_1b9aabe31_IsNum((*_15213_prim.alloc)._field_Kind) || _1abe4dd91_IsStr(_15213_prim));;
		};
		if ((_1abe4599d_Ptr(_15117__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1abd4445c_StructIns> _15913_s = _1abe46a04_Struct(_15117__self);;
		if ((_15913_s != nullptr)) {
			return (((((*_15913_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_15913_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_15913_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1abd6c265_Enum> _16613_enm = _1abe45c34_Enum(_15117__self);;
		if ((_16613_enm != nullptr)) {
			return _1b9aabe31_IsNum(_1abe431e8_Str((*((*_16613_enm.alloc)._field_Kind))._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1abe44bcd_NilCompatible(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _17717__self = _self_;;
		jule::Ptr<_1abe4a909_Prim> _17913_prim = _1abe45481_Prim(_17717__self);;
		if (((_17913_prim != nullptr) && _1abe4e127_IsAny(_17913_prim))) {
			return true;;
		};
		return (((((((_1abe43e0d_IsNil(_17717__self) || (_1abe4676d_Fn(_17717__self) != nullptr)) || (_1abe45717_Sptr(_17717__self) != nullptr)) || (_1abe4599d_Ptr(_17717__self) != nullptr)) || (_1abe46c8a_Trait(_17717__self) != nullptr)) || (_1abe464d7_Slc(_17717__self) != nullptr)) || (_1abe47021_Map(_17717__self) != nullptr)) || (_1abe45eba_TypeEnum(_17717__self) != nullptr));;
	};
}



inline jule::Bool _1abe44e64_PerformsRC(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _19817__self = _self_;;
		jule::Ptr<_1abe4a909_Prim> _19913_prim = _1abe45481_Prim(_19817__self);;
		if ((_19913_prim != nullptr)) {
			return (_1abe4e127_IsAny(_19913_prim) || _1abe4dd91_IsStr(_19913_prim));;
		};
		return (((_1abe45717_Sptr(_19817__self) != nullptr) || (_1abe464d7_Slc(_19817__self) != nullptr)) || (_1abe46c8a_Trait(_19817__self) != nullptr));;
	};
}



inline jule::Bool _1abe451ea_Variadicable(_1abe42d30_TypeKind* _self_) {
	{
		_1abe42d30_TypeKind* _21017__self = _self_;;
		return (_1abe464d7_Slc(_21017__self) != nullptr);;
	};
}



inline jule::Ptr<_1abe4a909_Prim> _1abe45481_Prim(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)) {
			_case_begin_1b14a1a0a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe4a909_Prim>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1b14b4b83:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b4b2d:;
	};
}



inline jule::Ptr<_1abe4e435_Sptr> _1abe45717_Sptr(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)) {
			_case_begin_1b14b57bb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe4e435_Sptr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1b14b59ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b5997:;
	};
}



inline jule::Ptr<_1abe52bec_Ptr> _1abe4599d_Ptr(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data26)) {
			_case_begin_1b14b64e2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe52bec_Ptr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1b14b6745:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b66e0:;
	};
}



inline jule::Ptr<_1abd6c265_Enum> _1abe45c34_Enum(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data3)) {
			_case_begin_1b14b723a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd6c265_Enum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1b14b748d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b7438:;
	};
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1abe45eba_TypeEnum(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)) {
			_case_begin_1b14b7e83:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd6d970_TypeEnum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1b14b81d6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b8181:;
	};
}



inline jule::Ptr<_1abe52229_Arr> _1abe46251_Arr(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data25)) {
			_case_begin_1b14b8bcb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe52229_Arr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1b14b8e2e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b8dc9:;
	};
}



inline jule::Ptr<_1abe4ee08_Slc> _1abe464d7_Slc(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)) {
			_case_begin_1b14b9924:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe4ee08_Slc>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1b14b9b77:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14b9b22:;
	};
}



inline jule::Ptr<_1abd59681_FnIns> _1abe4676d_Fn(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)) {
			_case_begin_1b14ba66c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd59681_FnIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1b14ba8c0:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14ba86a:;
	};
}



inline jule::Ptr<_1abd4445c_StructIns> _1abe46a04_Struct(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)) {
			_case_begin_1b14bb3b5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd4445c_StructIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1b14bb618:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14bb5b3:;
	};
}



inline jule::Ptr<_1abd69a59_Trait> _1abe46c8a_Trait(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data2)) {
			_case_begin_1b14bc10d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd69a59_Trait>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1b14bc361:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14bc30b:;
	};
}



inline jule::Ptr<_1abe5159c_Map> _1abe47021_Map(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data24)) {
			_case_begin_1b14bcd56:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe5159c_Map>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1b14bd0a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14bd054:;
	};
}



inline jule::Ptr<_1abe509ec_Tuple> _1abe472a7_Tup(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data23)) {
			_case_begin_1b14bda9e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abe509ec_Tuple>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1b14bdcd0:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14bdc7a:;
	};
}



inline jule::Bool _1abe4753d_comptime(_1abe42d30_TypeKind* _self_) {
	return (((((((((((((_1abe48ab1_comptimeTypeInfos(_self_) != nullptr) || (_1abe48d47_comptimeTypeInfo(_self_) != nullptr)) || (_1abe477c4_comptimeStructFields(_self_) != nullptr)) || (_1abe47a5a_comptimeStructField(_self_) != nullptr)) || (_1abe47ce1_comptimeEnumFields(_self_) != nullptr)) || (_1abe48077_comptimeEnumField(_self_) != nullptr)) || (_1abe490cd_comptimeStatics(_self_) != nullptr)) || (_1abe49364_comptimeStatic(_self_) != nullptr)) || (_1abe4830d_comptimeParams(_self_) != nullptr)) || (_1abe48594_comptimeParam(_self_) != nullptr)) || (_1abe495ea_comptimeValue(_self_) != nullptr)) || (_1abe49b17_comptimeFiles(_self_) != nullptr)) || (_1abe49881_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1abd7425b_comptimeStructFields> _1abe477c4_comptimeStructFields(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data7)) {
			_case_begin_1b14be96d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd7425b_comptimeStructFields>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1b14c3345:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c32e0:;
	};
}



inline jule::Ptr<_1abd7259a_comptimeStructField> _1abe47a5a_comptimeStructField(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data6)) {
			_case_begin_1b14c3983:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd7259a_comptimeStructField>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1b14c3bd6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c3b81:;
	};
}



inline jule::Ptr<_1abd79ea9_comptimeEnumFields> _1abe47ce1_comptimeEnumFields(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data11)) {
			_case_begin_1b14c4731:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd79ea9_comptimeEnumFields>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1b14c491d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c48b8:;
	};
}



inline jule::Ptr<_1abd78b12_comptimeEnumField> _1abe48077_comptimeEnumField(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data10)) {
			_case_begin_1b14c5402:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd78b12_comptimeEnumField>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1b14c5655:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c5600:;
	};
}



inline jule::Ptr<_1abd7d73d_comptimeParams> _1abe4830d_comptimeParams(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data13)) {
			_case_begin_1b14c614a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd7d73d_comptimeParams>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1b14c639d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c6348:;
	};
}



inline jule::Ptr<_1abd7b5a4_comptimeParam> _1abe48594_comptimeParam(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data12)) {
			_case_begin_1b14c6de8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd7b5a4_comptimeParam>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1b14c70e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c7091:;
	};
}



inline jule::Ptr<_1abd71ac7_comptimeRange> _1abe4882a_comptimeRange(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)) {
			_case_begin_1b14c7b41:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd71ac7_comptimeRange>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1b14c7d3e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c7cd9:;
	};
}



inline jule::Ptr<_1abd7ed05_comptimeTypeInfos> _1abe48ab1_comptimeTypeInfos(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data14)) {
			_case_begin_1b14c8889:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd7ed05_comptimeTypeInfos>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1b14c8a87:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c8a32:;
	};
}



inline jule::Ptr<_1abd81400_comptimeTypeInfo> _1abe48d47_comptimeTypeInfo(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data15)) {
			_case_begin_1b14c957c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd81400_comptimeTypeInfo>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1b14c97d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14c977a:;
	};
}



inline jule::Ptr<_1abd77517_comptimeStatics> _1abe490cd_comptimeStatics(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data9)) {
			_case_begin_1b14ca2c5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd77517_comptimeStatics>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1b14ca528:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14ca4c3:;
	};
}



inline jule::Ptr<_1abd75856_comptimeStatic> _1abe49364_comptimeStatic(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data8)) {
			_case_begin_1b14cb073:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1abd75856_comptimeStatic>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1b14cb271:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14cb21b:;
	};
}



inline jule::Ptr<_1ab64460e_comptimeValue> _1abe495ea_comptimeValue(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data16)) {
			_case_begin_1b14cbcbb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab64460e_comptimeValue>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1b14cbeb9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14cbe64:;
	};
}



inline jule::Ptr<_1ab648558_comptimeFile> _1abe49881_comptimeFile(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data18)) {
			_case_begin_1b14cca14:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab648558_comptimeFile>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1b14ccc12:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14ccbac:;
	};
}



inline jule::Ptr<_1ab646e5d_comptimeFiles> _1abe49b17_comptimeFiles(_1abe42d30_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data17)) {
			_case_begin_1b14cd75c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ab646e5d_comptimeFiles>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1b14cd95a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b14cd905:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abe42d30_TypeKind _Src) {
	_Stream << _1abe431e8_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1abe4a376_checked(_1abe4a002_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe4a002_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abe4ac4a_Str(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1abe4b08b_Equal(jule::Ptr<_1abe4a909_Prim> _self_, jule::Ptr<_1abe42d30_TypeKind> _50821_other) {
	jule::Ptr<_1abe4a909_Prim> _5099_prim = _1abe45481_Prim(_50821_other.ptr());;
	if ((_5099_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5099_prim))._field_Kind);;
}



inline jule::Bool _1abe4b531_IsConstraint(_1abe4a909_Prim* _self_) {
	return ((((!(_1abe4dd91_IsStr(_self_))) && (!(_1abe4e127_IsAny(_self_)))) && (!(_1abe4db0a_IsBool(_self_)))) && (!(_1b9aabe31_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1abe4b7b7_IsI8(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1abe4ba4d_IsI16(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1abe4bcd4_IsI32(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1abe4c06a_IsI64(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1abe4c301_IsU8(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1abe4c587_IsU16(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1abe4c81d_IsU32(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1abe4caa4_IsU64(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1abe4cd3a_IsF32(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1abe4d0c1_IsF64(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1abe4d357_IsInt(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1abe4d5dd_IsUint(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1abe4d874_IsUintptr(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1abe4db0a_IsBool(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1abe4dd91_IsStr(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1abe4e127_IsAny(_1abe4a909_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe4a909_Prim _Src) {
	_Stream << _1abe4ac4a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe4e7a9_Str(_1abe4e435_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1abe431e8_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1abe4eaea_Equal(jule::Ptr<_1abe4e435_Sptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _58521_other) {
	jule::Ptr<_1abe4e435_Sptr> _5869_sptr = _1abe45717_Sptr(_58521_other.ptr());;
	if ((_5869_sptr == nullptr)) {
		return false;;
	};
	return _1abe43539_Equal((*(_self_))._field_Elem, (*(_5869_sptr))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe4e435_Sptr _Src) {
	_Stream << _1abe4e7a9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe5038c_Str(_1abe4ee08_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1abe431e8_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1abe506cd_Equal(jule::Ptr<_1abe4ee08_Slc> _self_, jule::Ptr<_1abe42d30_TypeKind> _60421_other) {
	jule::Ptr<_1abe4ee08_Slc> _6059_slc = _1abe464d7_Slc(_60421_other.ptr());;
	if ((_6059_slc == nullptr)) {
		return false;;
	};
	return _1abe43539_Equal((*(_self_))._field_Elem, (*(_6059_slc))._field_Elem);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe4ee08_Slc _Src) {
	_Stream << _1abe5038c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe50d71_Str(_1abe509ec_Tuple* _self_) {
	_209e0d4d9_StrBuilder _62113_s = static__209e0d918_New(16LL);;
	_209e0e232_WriteByte(&_62113_s, '(');
	_209e0de79_WriteStr(&_62113_s, _1abe431e8_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b14dde76:;
		if (it != expr_end) {
			jule::Ptr<_1abe42d30_TypeKind> *_62416_t = it;
			{
				_209e0e232_WriteByte(&_62113_s, ',');
				_209e0de79_WriteStr(&_62113_s, _1abe431e8_Str((*(_62416_t)).ptr()));
			}
			_iter_next_1b14dde76:;
			++it;
			goto _iter_begin_1b14dde76;
		}
		_iter_end_1b14dde76:;
	};
	_209e0e232_WriteByte(&_62113_s, ')');
	return _209e0e771_Str(&_62113_s);;
}



inline jule::Bool _1abe511b2_Equal(jule::Ptr<_1abe509ec_Tuple> _self_, jule::Ptr<_1abe42d30_TypeKind> _63321_other) {
	jule::Ptr<_1abe509ec_Tuple> _6349_tup = _1abe472a7_Tup(_63321_other.ptr());;
	if ((_6349_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6349_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _64113_i = 0LL;;
	for (; (_64113_i < (*_self_.alloc)._field_Types.len()); (_64113_i)++) {
		{
			if ((!(_1abe43539_Equal((*_self_.alloc)._field_Types[_64113_i], (*(_6349_tup))._field_Types[_64113_i])))) {
				return false;;
			};
		}
	_iter_next_1b14e12b9:;
	}
	_iter_end_1b14e12b9:;;
	return true;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe509ec_Tuple _Src) {
	_Stream << _1abe50d71_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe51921_Str(_1abe5159c_Map* _self_) {
	_209e0d4d9_StrBuilder _66113_s = static__209e0d918_New(16LL);;
	_209e0de79_WriteStr(&_66113_s, jule::Str::lit("map[", 4));
	_209e0de79_WriteStr(&_66113_s, _1abe431e8_Str((*(_self_))._field_Key.ptr()));
	_209e0e232_WriteByte(&_66113_s, ']');
	_209e0de79_WriteStr(&_66113_s, _1abe431e8_Str((*(_self_))._field_Val.ptr()));
	return _209e0e771_Str(&_66113_s);;
}



inline jule::Bool _1abe51c62_Equal(jule::Ptr<_1abe5159c_Map> _self_, jule::Ptr<_1abe42d30_TypeKind> _67021_other) {
	jule::Ptr<_1abe5159c_Map> _6719_m = _1abe47021_Map(_67021_other.ptr());;
	if ((_6719_m == nullptr)) {
		return false;;
	};
	return (_1abe43539_Equal((*(_self_))._field_Key, (*(_6719_m))._field_Key) && _1abe43539_Equal((*_self_.alloc)._field_Val, (*(_6719_m))._field_Val));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe5159c_Map _Src) {
	_Stream << _1abe51921_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe5259d_Str(_1abe52229_Arr* _self_) {
	_209e0d4d9_StrBuilder _68913_s = static__209e0d918_New(16LL);;
	_209e0e232_WriteByte(&_68913_s, '[');
	_209e0de79_WriteStr(&_68913_s, _1b9a9e40c_Itoa((*(_self_))._field_N));
	_209e0e232_WriteByte(&_68913_s, ']');
	_209e0de79_WriteStr(&_68913_s, _1abe431e8_Str((*(_self_))._field_Elem.ptr()));
	return _209e0e771_Str(&_68913_s);;
}



inline jule::Bool _1abe528de_Equal(jule::Ptr<_1abe52229_Arr> _self_, jule::Ptr<_1abe42d30_TypeKind> _69821_other) {
	jule::Ptr<_1abe52229_Arr> _6999_arr = _1abe46251_Arr(_69821_other.ptr());;
	if ((_6999_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_6999_arr))._field_N) && _1abe43539_Equal((*_self_.alloc)._field_Elem, (*(_6999_arr))._field_Elem));;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe52229_Arr _Src) {
	_Stream << _1abe5259d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1abe53071_Str(_1abe52bec_Ptr* _self_) {
	if (_1abe53736_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1abe431e8_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1abe533b2_Equal(jule::Ptr<_1abe52bec_Ptr> _self_, jule::Ptr<_1abe42d30_TypeKind> _72221_other) {
	jule::Ptr<_1abe52bec_Ptr> _7239_ptr = _1abe4599d_Ptr(_72221_other.ptr());;
	{
		
		if ((_7239_ptr == nullptr)) {
			_case_begin_1b17b9372:;
			{
				return false;;
			}
		}
		else if (_1abe53736_IsUnsafe(_7239_ptr.ptr())) {
			_case_begin_1b17b8c23:;
			{
				return _1abe53736_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1b17b87b1:;
			{
				return _1abe43539_Equal((*(_self_))._field_Elem, (*(_7239_ptr))._field_Elem);;
			}
		}
		_match_end_1b17b874a:;
	};
}



inline jule::Bool _1abe53736_IsUnsafe(_1abe52bec_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe52bec_Ptr _Src) {
	_Stream << _1abe53071_Str(&_Src);
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe53bed_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1abe5542a_pushErr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd0a38a_Token> _81226_token, jule::Str _81241_fmt, jule::Slice<jule::Any> _81254_args) {
	_1ab69a5dd_pushErr((*(_self_))._field_s.ptr(), _81226_token, _81241_fmt, _81254_args);
}



inline void _1abe55628_allowBuiltin(_1abe54bdd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1abe55826_disallowBuiltin(_1abe54bdd_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b17bd4b9_pushReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd4445c_StructIns>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1ae7a5b9b_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1abd5d641_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type9));
}

inline void _1b17c0db2_pushReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd69a59_Trait>* _82440_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b17c2aea_Exist((*(_self_))._field_refers.ptr(), (*(_82440_t)))) {
		return;;
	};
	_1abd5d641_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_82440_t)), &__jule_any_type10));
}



inline void _1abe55d87_pushReferenceByKind(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _83443_k) {
	{
		
		if ((_1abe46a04_Struct((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1b17bc100:;
			{
				jule::Ptr<_1abd4445c_StructIns> _83717_t = _1abe46a04_Struct((*(_83443_k)).ptr());;
				_1b17bd4b9_pushReference(_self_, &(_83717_t));
			}
		}
		else if ((_1abe46c8a_Trait((*(_83443_k)).ptr()) != nullptr)) {
			_case_begin_1b17bc199:;
			{
				jule::Ptr<_1abd69a59_Trait> _84017_t = _1abe46c8a_Trait((*(_83443_k)).ptr());;
				_1b17c0db2_pushReference(_self_, &(_84017_t));
			}
		}
		_match_end_1b17bbee0:;
	};
}



inline void _1abe562a5_pushCycleError(_1abe54bdd_typeChecker* _self_, jule::Any _84529_def1, jule::Any _84540_def2, _209e0d4d9_StrBuilder* _84556_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8479_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1b17c4de9, nullptr, nullptr);;
	jule::Str _8579_m = _209e0e771_Str(_84556_message);;
	jule::Str _8589_def1Ident = _8479_getIdent(&(_84529_def1));;
	jule::Str _8599_def2Ident = _8479_getIdent(&(_84540_def2));;
	jule::Str _8609_refersTo = _1eb22e594_Logf(jule::Str::lit("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_8589_def1Ident, &__jule_any_type4),jule::Any(_8599_def2Ident, &__jule_any_type4)}));;
	_209e0de79_WriteStr(_84556_message, _20b0d9a16_Repeat(jule::Str::lit(" ", 1), 7LL));
	_209e0de79_WriteStr(_84556_message, _8609_refersTo);
	_209e0e232_WriteByte(_84556_message, '\n');
	_209e0de79_WriteStr(_84556_message, _8579_m);
}



inline jule::Bool _1abe566a1_checkCrossCycle(_1abe54bdd_typeChecker* _self_, jule::Any _86730_decl, _209e0d4d9_StrBuilder* _86746_message) {
	{
		auto &_match_expr{ _86730_decl };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b17c90b8:;
			{
				jule::Ptr<_1abe4203d_TypeAlias> _87013_ta = _86730_decl.unsafe_cast_ptr<_1abe4203d_TypeAlias>();;
				{
					auto expr = &((*(_87013_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17ca064:;
					if (it != expr_end) {
						jule::Any *_87120_d = it;
						{
							{
								
								if (((*(_87120_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1b17ca85b:;
									{
										_1abe562a5_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								else if ((!(_1abe566a1_checkCrossCycle(_self_, (*(_87120_d)), _86746_message)))) {
									_case_begin_1b17ca8e4:;
									{
										_1abe562a5_pushCycleError(_self_, jule::Any(_87013_ta, &__jule_any_type65), (*(_87120_d)), _86746_message);
										return false;;
									}
								}
								_match_end_1b17ca75c:;
							};
						}
						_iter_next_1b17ca064:;
						++it;
						goto _iter_begin_1b17ca064;
					}
					_iter_end_1b17ca064:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b17c8e31:;
			{
				jule::Ptr<_1abd416ce_Struct> _88213_s = _86730_decl.unsafe_cast_ptr<_1abd416ce_Struct>();;
				{
					auto expr = &((*(_88213_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b17cc3a7:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> *_88320_d = it;
						{
							{
								
								if ((__jule_any_type64_compare((*((*(_self_))._field_referencer))._field_owner, (*(_88320_d))))) {
									_case_begin_1b17ccb9e:;
									{
										_1abe562a5_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								else if ((!(_1abe566a1_checkCrossCycle(_self_, jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message)))) {
									_case_begin_1b17ccc37:;
									{
										_1abe562a5_pushCycleError(_self_, jule::Any(_88213_s, &__jule_any_type64), jule::Any((*(_88320_d)), &__jule_any_type64), _86746_message);
										return false;;
									}
								}
								_match_end_1b17ccaa0:;
							};
						}
						_iter_next_1b17cc3a7:;
						++it;
						goto _iter_begin_1b17cc3a7;
					}
					_iter_end_1b17cc3a7:;
				};
			}
		}
		_match_end_1b17c9063:;
	};
	return true;;
}



inline jule::Bool _1abe56a9c_checkIllegalCycles(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _90138_ident, jule::Any _90165_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90165_decl };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b17cec6c:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1abd416ce_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b17cc6c6:;
			{
				if ((*(_90165_decl.unsafe_cast_ptr<_1abe4203d_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b17cc74d:;
	};
	if ((_90165_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1abe5542a_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_209e0d4d9_StrBuilder _92413_message = static__209e0d918_New(32LL);;
	if ((!(_1abe566a1_checkCrossCycle(_self_, _90165_decl, &(_92413_message))))) {
		jule::Str _92717_errMsg = _209e0e771_Str(&_92413_message);;
		_209e0e96e_Clear(&_92413_message);
		_1abe562a5_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90165_decl, &(_92413_message));
		_92717_errMsg+=_209e0e771_Str(&_92413_message);
		_1abe5542a_pushErr(_self_, (*((*(_90138_ident))))._field_Token, jule::Str::lit("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_92717_errMsg, &__jule_any_type4)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b17d469a:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90165_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b17d3be9:;
			{
				{
					auto &_match_expr{ _90165_decl };
					
					if (_match_expr.type == &__jule_any_type64) {
						_case_begin_1b17d504c:;
						{
							jule::Ptr<_1abd416ce_Struct> _94321_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1abd416ce_Struct>();;
							(*(_94321_s))._field_Depends=jule::append((*_94321_s.alloc)._field_Depends,jule::Slice<jule::Ptr<_1abd416ce_Struct>>::make({_90165_decl.unsafe_cast_ptr<_1abd416ce_Struct>()}));
						}
					}
					_match_end_1b17d4ed6:;
				};
			}
		}
		_match_end_1b17d4645:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1abe56e98_fromTypeAlias(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _95133_decl, jule::Ptr<_1abe4203d_TypeAlias>* _95160_ta) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95160_ta))))._field_Public, (*((*(_95160_ta))))._field_Token)))) {
		_1abe5542a_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_95160_ta))))._field_Used=true;
	if (((*((*(_95133_decl))))._field_Generics.len() > 0LL)) {
		_1abe5542a_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b17da294:;
			if (it != expr_end) {
				jule::Ptr<_1abe4203d_TypeAlias> _96820_bg = *it;
				{
					if (((_96820_bg == (*(_95160_ta))) || (((*((*((*(_95160_ta))))._field_Kind))._field_Kind != nullptr) && _1abe43539_Equal((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind, (*(*(_96820_bg))._field_Kind.alloc)._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b17da294;
					};
				}
				_iter_next_1b17da294:;
				++it;
				goto _iter_begin_1b17da294;
			}
			_iter_end_1b17da294:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b17dc571:;
			if (it != expr_end) {
				jule::Ptr<_1abe4203d_TypeAlias> _97920_bg = *it;
				{
					if ((_97920_bg == (*(_95160_ta)))) {
						_1abe5542a_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95160_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b17dce56:;
						if (it != expr_end) {
							jule::Ptr<_1abe4203d_TypeAlias> _98424_dg = *it;
							{
								if ((_97920_bg == _98424_dg)) {
									_1abe5542a_pushErr(_self_, (*((*(_95133_decl))))._field_Token, jule::Str::lit("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*((*(_95133_decl))))._field_Ident, &__jule_any_type4)}));
									return nullptr;;
								};
							}
							_iter_next_1b17dce56:;
							++it;
							goto _iter_begin_1b17dce56;
						}
						_iter_end_1b17dce56:;
					};
				}
				_iter_next_1b17dc571:;
				++it;
				goto _iter_begin_1b17dc571;
			}
			_iter_end_1b17dc571:;
		};
	};
	jule::Bool _99313_ok = _1abe56a9c_checkIllegalCycles(_self_, _95133_decl, jule::Any((*(_95160_ta)), &__jule_any_type65));;
	if ((!(_99313_ok))) {
		return nullptr;;
	};
	if (((*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind == nullptr)) {
		_99313_ok=_1ab6a7881_checkTypeAliasDeclKind((*(_self_))._field_s, _95160_ta, (*(_self_))._field_lookup);
		if ((!(_99313_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_95160_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>::make({(*(_95160_ta))}));
	};
	jule::Ptr<_1abe42d30_TypeKind> _101213_tk = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Generic=(*((*(_95160_ta))))._field_Generic, ._field_Kind=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_Kind});;
	_1abe55d87_pushReferenceByKind(_self_, &(_101213_tk));
	if ((*((*(_95160_ta))))._field_Binded) {
		(*(_101213_tk))._field_BindIdent=(*((*(_95160_ta))))._field_Ident;
	} else {
		(*(_101213_tk))._field_BindIdent=(*(*(*((*(_95160_ta))))._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent;
	};
	return jule::Trait(_101213_tk, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data19);;
}



inline jule::Ptr<_1abd6c265_Enum> _1abe57394_fromEnum(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _102528_decl, jule::Ptr<_1abd6c265_Enum>* _102555_e) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102555_e))))._field_Public, (*((*(_102555_e))))._field_Token)))) {
		_1abe5542a_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_102528_decl))))._field_Generics.len() > 0LL)) {
		_1abe5542a_pushErr(_self_, (*((*(_102528_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_102528_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_102555_e));;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1abe57790_fromTypeEnum(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _103732_decl, jule::Ptr<_1abd6d970_TypeEnum>* _103759_e) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103759_e))))._field_Public, (*((*(_103759_e))))._field_Token)))) {
		_1abe5542a_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_103732_decl))))._field_Generics.len() > 0LL)) {
		_1abe5542a_pushErr(_self_, (*((*(_103732_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_103732_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	return (*(_103759_e));;
}



inline jule::Ptr<_1abd69a59_Trait> _1abe57b8b_fromTrait(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _104929_decl, jule::Ptr<_1abd69a59_Trait>* _104956_t) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104956_t))))._field_Public, (*((*(_104956_t))))._field_Token)))) {
		_1abe5542a_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_104929_decl))))._field_Generics.len() > 0LL)) {
		_1abe5542a_pushErr(_self_, (*((*(_104929_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_104929_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	_1b17c0db2_pushReference(_self_, _104956_t);
	return (*(_104956_t));;
}



inline jule::Bool _1abe58087_checkStructIns(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd4445c_StructIns>* _106238_ins, jule::Ptr<_1abd0a38a_Token>* _106260_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_106238_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_106238_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type64_compare((*(*(_self_))._field_referencer.alloc)._field_owner, (*((*(_106238_ins))))._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ab6b3e75_precheckStructIns((*(_self_))._field_s, _106238_ins, (*(_106260_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_106238_ins))))._field_Generics.len() > 0LL)) {
		_1ab6b498c_checkStructInsOperators((*(_self_))._field_s, (*(_106238_ins)));
		_1ab6b422d_checkStructIns((*(_self_))._field_s, _106238_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1abe58340_appendUsedStructReference(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd416ce_Struct>* _108349_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b1801b29:;
			{
				jule::Ptr<_1abd416ce_Struct> _108917_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1abd416ce_Struct>();;
				if ((!(_1abd4315e_IsUses(_108917_refS.ptr(), (*(_108349_s)))))) {
					(*_108917_refS.alloc)._field_Uses=jule::append((*_108917_refS.alloc)._field_Uses,jule::Slice<jule::Ptr<_1abd416ce_Struct>>::make({(*(_108349_s))}));
				};
			}
		}
		_match_end_1b1801ac4:;
	};
}



inline jule::Ptr<_1abd4445c_StructIns> _1abe5873b_buildStructInstance(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _109643_decl, jule::Ptr<_1abd416ce_Struct>* _109670_s) {
	jule::Ptr<_1abe53bed_referencer> _109813_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> _110013_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
				_case_begin_1b1804ad8:;
				{
					jule::Ptr<_1ab65ca34_scopeChecker> _110721_sc = (*(_self_))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0);;
					jule::Ptr<_1ab65ca34_scopeChecker> _110821_hard = _1ab661164_getHardRoot(_110721_sc);;
					if ((((*((*(_110821_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Decl != (*(_109670_s))))) {
						goto _match_end_1b1804a83;
					};
					jule::I32 _111217_n = ((*(*_110821_hard.alloc)._field_owner.alloc)._field_Generics.len() + (*((*(*_110821_hard.alloc)._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_110821_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _111217_n);
				}
			}
			_match_end_1b1804a83:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _112213_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1abd4445c_StructIns> _112613_ins = _1abd41b41_instance((*(_109670_s)));;
	(*(_112613_ins))._field_Generics=jule::Slice<jule::Ptr<_1abe41449_InsGeneric>>::alloc(0LL, (*((*(_109643_decl))))._field_Generics.len());
	{
		auto expr = &((*((*(_109643_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1809e0c:;
		if (it != expr_end) {
			jule::Ptr<_1abd20845_TypeDecl> _112821_g = *it;
			{
				jule::Ptr<_1abe42d30_TypeKind> _112917_kind = _1abe5c047_build(_self_, &((*(_112821_g))._field_Kind));;
				if ((_112917_kind == nullptr)) {
					return nullptr;;
				};
				(*_112613_ins.alloc)._field_Generics=jule::append((*_112613_ins.alloc)._field_Generics,jule::Slice<jule::Ptr<_1abe41449_InsGeneric>>::make({jule::new_ptr<_1abe41449_InsGeneric>(_1abe41449_InsGeneric{._field_Kind=_112917_kind, })}));
			}
			_iter_next_1b1809e0c:;
			++it;
			goto _iter_begin_1b1809e0c;
		}
		_iter_end_1b1809e0c:;
	};
	(*(_self_))._field_lookup=_112213_lookup;
	(*(_self_))._field_bannedGenerics=_110013_bannedGenerics;
	(*(_self_))._field_referencer=_109813_referencer;
	return _112613_ins;;
}



inline jule::Ptr<_1abd4445c_StructIns> _1abe58b37_fromStruct(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _114434_decl, jule::Ptr<_1abd416ce_Struct>* _114461_s) {
	if ((!(_1ab69ad4c_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_114461_s))))._field_Public, (*((*(_114461_s))))._field_Token)))) {
		_1abe5542a_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_114434_decl))))._field_Ident, &__jule_any_type4)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_114434_decl))))._field_Generics.len() > 0LL)) {
			_1abe5542a_pushErr(_self_, (*((*(_114434_decl))))._field_Token, jule::Str::lit("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1abd4445c_StructIns>(_1abd4445c_StructIns{._field_Decl=(*(_114461_s)), });;
	};
	jule::Bool _116213_ok = _1abe56a9c_checkIllegalCycles(_self_, _114434_decl, jule::Any((*(_114461_s)), &__jule_any_type64));;
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	_1abe58340_appendUsedStructReference(_self_, _114461_s);
	jule::Ptr<_1abd4445c_StructIns> _116813_ins = _1abe5873b_buildStructInstance(_self_, _114434_decl, _114461_s);;
	if ((_116813_ins == nullptr)) {
		return nullptr;;
	};
	_116213_ok=_1ab69bb1c_checkGenericQuantity((*(_self_))._field_s, (*((*(_116813_ins))._field_Decl))._field_Generics.len(), (*(_116813_ins))._field_Generics.len(), (*((*(_114434_decl))))._field_Token);
	if ((!(_116213_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1abd4445c_StructIns> _117813_existInstance = _1abd41e4e_appendInstance((*(_114461_s)).ptr(), &(_116813_ins));;
	if ((_117813_existInstance != nullptr)) {
		if ((!(_1ab6a5a7c_checkConstraintsStruct((*(_self_))._field_s, &(_116813_ins), &((*((*(_114434_decl))))._field_Token), _117813_existInstance)))) {
			return nullptr;;
		};
		_1b17bd4b9_pushReference(_self_, &(_117813_existInstance));
		return _117813_existInstance;;
	};
	if ((!(_1abe58087_checkStructIns(_self_, &(_116813_ins), &((*((*(_114434_decl))))._field_Token))))) {
		return nullptr;;
	};
	_1b17bd4b9_pushReference(_self_, &(_116813_ins));
	return _116813_ins;;
}



inline jule::Trait _1abe58e78_getDef(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl>* _120230_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1814697:;
		if (it != expr_end) {
			jule::Ptr<_1abd2ca50_GenericDecl> _120316_g = *it;
			{
				if (((*(_120316_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					return jule::Trait(_1abe5ec4d_buildPrimType((*_120316_g.alloc)._field_Ident), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20);;
				};
			}
			_iter_next_1b1814697:;
			++it;
			goto _iter_begin_1b1814697;
		}
		_iter_end_1b1814697:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18149d8:;
		if (it != expr_end) {
			jule::Ptr<_1abe4203d_TypeAlias> _120921_g = *it;
			{
				if (((*(_120921_g))._field_Ident == (*((*(_120230_decl))))._field_Ident)) {
					if (((*((*(_120230_decl))))._field_Generics.len() > 0LL)) {
						_1abe5542a_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
						return nullptr;;
					};
					jule::Ptr<_1abd4445c_StructIns> _121521_st = _1abe46a04_Struct((*((*_120921_g.alloc)._field_Kind))._field_Kind.ptr());;
					if ((_121521_st != nullptr)) {
						jule::Bool _121721_ok = _1abe56a9c_checkIllegalCycles(_self_, _120230_decl, jule::Any((*_121521_st.alloc)._field_Decl, &__jule_any_type64));;
						if ((!(_121721_ok))) {
							return nullptr;;
						};
					};
					return (*(*(*_120921_g.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind;;
				};
			}
			_iter_next_1b18149d8:;
			++it;
			goto _iter_begin_1b18149d8;
		}
		_iter_end_1b18149d8:;
	};
	if ((!((*((*(_120230_decl))))._field_Binded))) {
		jule::Ptr<_1abd6c265_Enum> _122717_e = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe6247b_FindEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_122717_e != nullptr)) {
			return jule::Trait(_1abe57394_fromEnum(_self_, _120230_decl, &(_122717_e)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data3);;
		};
		jule::Ptr<_1abd6d970_TypeEnum> _123217_te = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe627bc_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123217_te != nullptr)) {
			return jule::Trait(_1abe57790_fromTypeEnum(_self_, _120230_decl, &(_123217_te)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data4);;
		};
		jule::Ptr<_1abd69a59_Trait> _123717_t = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe6213a_FindTrait((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident);;
		if ((_123717_t != nullptr)) {
			return jule::Trait(_1abe57b8b_fromTrait(_self_, _120230_decl, &(_123717_t)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1abe5542a_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd416ce_Struct> _124613_s = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe618ed_FindStruct((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if ((_124613_s != nullptr)) {
		return jule::Trait(_1abe58b37_fromStruct(_self_, _120230_decl, &(_124613_s)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0);;
	};
	jule::Ptr<_1abe4203d_TypeAlias> _125113_ta = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe61502_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_120230_decl))))._field_Ident, (*((*(_120230_decl))))._field_Binded);;
	if (((_125113_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_125113_ta=_1ac02d800_findBuiltinTypeAlias((*((*(_120230_decl))))._field_Ident);
	};
	if ((_125113_ta != nullptr)) {
		return _1abe56e98_fromTypeAlias(_self_, _120230_decl, &(_125113_ta));;
	};
	_1abe5542a_pushErr(_self_, (*((*(_120230_decl))))._field_Token, jule::Str::lit("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*((*(_120230_decl))))._field_Ident, &__jule_any_type4)}));
	return nullptr;;
}



inline jule::Trait _1abe592b9_buildIdent(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20e50_IdentTypeDecl> _126333_decl) {
	return _1abe58e78_getDef(_self_, &(_126333_decl));;
}



inline jule::Trait _1abe5960a_buildSubIdent(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd21219_SubIdentTypeDecl> _126736_decl) {
	jule::Trait _126813_ident = _1abe592b9_buildIdent(_self_, (*(_126736_decl))._field_Idents[0LL]);;
	if ((_126813_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _126813_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)) {
			_case_begin_1b18224b8:;
			{
				goto _match_end_1b1822573;
			}
		}
		else {
			_case_begin_1b18225c8:;
			{
				_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1822573:;
	};
	jule::Ptr<_1abd6d970_TypeEnum> _127913_t = _126813_ident.cast_ptr<_1abd6d970_TypeEnum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>> _128013_idents = (*_126736_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_128013_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18240e1:;
		if (it != expr_end) {
			jule::I32 _128113_i = it - expr->begin();
			jule::Ptr<_1abd20e50_IdentTypeDecl> _128116_id = *it;
			{
				jule::Ptr<_1abd6d398_TypeEnumItem> _128217_item = _1abd6e531_FindItem(_127913_t.ptr(), (*(_128116_id))._field_Ident);;
				if ((_128217_item == nullptr)) {
					_1abe5542a_pushErr(_self_, (*_128116_id.alloc)._field_Token, jule::Str::lit("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any((*_127913_t.alloc)._field_Ident, &__jule_any_type4),jule::Any((*_128116_id.alloc)._field_Ident, &__jule_any_type4)}));
					return nullptr;;
				};
				if (((_128013_idents.len() - _128113_i) == 1LL)) {
					_1abe55d87_pushReferenceByKind(_self_, &((*((*(_128217_item))._field_Kind))._field_Kind));
					return jule::Trait((*(*(_128217_item))._field_Kind.alloc)._field_Kind, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data19);;
				};
				_127913_t=_1abe45eba_TypeEnum((*(*(_128217_item))._field_Kind.alloc)._field_Kind.ptr());
				if ((_127913_t == nullptr)) {
					_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b18240e1:;
			++it;
			_128113_i++;
			goto _iter_begin_1b18240e1;
		}
		_iter_end_1b18240e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abe4e435_Sptr> _1abe5994b_buildSptrFromType(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _130141_elem) {
	{
		
		if (((*(_130141_elem)) == nullptr)) {
			_case_begin_1b18287ee:;
			{
				return nullptr;;
			}
		}
		else if ((_1abe46a04_Struct((*(_130141_elem)).ptr()) != nullptr)) {
			_case_begin_1b1828898:;
			{
				jule::Ptr<_1abd4445c_StructIns> _130713_s = _1abe46a04_Struct((*(_130141_elem)).ptr());;
				if ((((*(_130713_s))._field_Decl != nullptr) && (*(*_130713_s.alloc)._field_Decl.alloc)._field_Binded)) {
					_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1abe46251_Arr((*(_130141_elem)).ptr()) != nullptr) && (*(_1abe46251_Arr((*(_130141_elem)).ptr())))._field_Auto)) {
			_case_begin_1b182890e:;
			{
				_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1827ed5:;
	};
	return jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=(*(_130141_elem))});;
}



inline jule::Ptr<_1abe4e435_Sptr> _1abe59c8c_buildSptr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd218e0_SptrTypeDecl> _132132_decl) {
	jule::Bool _13229_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13229_cycleRisk;
	});;
	jule::Ptr<_1abe42d30_TypeKind> _132613_elem = _1abe5c388_checkDecl(_self_, &((*(_132132_decl))._field_Elem));;
	return _1abe5994b_buildSptrFromType(_self_, &(_132613_elem));;
}



inline jule::Ptr<_1abe52bec_Ptr> _1abe5a0cd_buildPtrFromType(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abe42d30_TypeKind>* _133040_elem) {
	{
		
		if (((*(_133040_elem)) == nullptr)) {
			_case_begin_1b182d8d1:;
			{
				return nullptr;;
			}
		}
		else if (((_1abe46251_Arr((*(_133040_elem)).ptr()) != nullptr) && (*(_1abe46251_Arr((*(_133040_elem)).ptr())))._field_Auto)) {
			_case_begin_1b182d97a:;
			{
				_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1abe52bec_Ptr>();;
			}
		}
		_match_end_1b182d7c1:;
	};
	return jule::new_ptr<_1abe52bec_Ptr>(_1abe52bec_Ptr{._field_Elem=(*(_133040_elem))});;
}



inline jule::Ptr<_1abe52bec_Ptr> _1abe5a41e_buildPtr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd2236e_PtrTypeDecl> _134531_decl) {
	jule::Bool _13469_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13469_cycleRisk;
	});;
	jule::Ptr<_1abe42d30_TypeKind> _135017_elem = nullptr;;
	if ((!(_1abd226d2_IsUnsafe(_134531_decl.ptr())))) {
		_135017_elem=_1abe5c388_checkDecl(_self_, &((*_134531_decl.alloc)._field_Elem));
		return _1abe5a0cd_buildPtrFromType(_self_, &(_135017_elem));;
	};
	return jule::new_ptr<_1abe52bec_Ptr>(_1abe52bec_Ptr{._field_Elem=_135017_elem});;
}



inline jule::Ptr<_1abe4ee08_Slc> _1abe5a760_buildSlc(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd21c75_SlcTypeDecl> _136231_decl) {
	jule::Bool _13639_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13639_cycleRisk;
	});;
	jule::Ptr<_1abe42d30_TypeKind> _136713_elem = _1abe5c388_checkDecl(_self_, &((*(_136231_decl))._field_Elem));;
	{
		
		if ((_136713_elem == nullptr)) {
			_case_begin_1b18339b3:;
			{
				return nullptr;;
			}
		}
		else if (((_1abe46251_Arr(_136713_elem.ptr()) != nullptr) && (*(_1abe46251_Arr(_136713_elem)))._field_Auto)) {
			_case_begin_1b1833a5c:;
			{
				_1abe5542a_pushErr(_self_, (*((*_136231_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b183395d:;
	};
	return jule::new_ptr<_1abe4ee08_Slc>(_1abe4ee08_Slc{._field_Elem=_136713_elem});;
}



inline jule::Ptr<_1abe52229_Arr> _1abe5aaa1_buildArr(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd22b11_ArrTypeDecl> _138331_decl) {
	jule::I32 _138413_n = 0LL;;
	if ((!(_1abd22e74_AutoSized(_138331_decl.ptr())))) {
		jule::Ptr<_1abe11936_Data> _138717_size = _1abe318bd_evalExpr(_1ab6a2a8a_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_138331_decl.alloc)._field_Size);;
		if ((_138717_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1abe1233d_IsConst(_138717_size.ptr())))) {
			_1abe5542a_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1abe45481_Prim((*(_138717_size))._field_Kind.ptr()) == nullptr) || (!(_1b9aab859_IsInt((*(_1abe45481_Prim((*(_138717_size))._field_Kind)))._field_Kind))))) {
			_1abe5542a_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138413_n=static_cast<jule::I32>(_1b9aaeb6a_AsI64((*(_138717_size))._field_Constant.ptr()));
		if ((_138413_n < 0LL)) {
			_1abe5542a_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _140517_max = _1b9aa78bb_MaxI(jule::Str::lit("int", 3));;
			if (((_1b9aa0793_BitSize != 64LL) && (static_cast<jule::I64>(_138413_n) > _140517_max))) {
				_1abe5542a_pushErr(_self_, (*((*_138331_decl.alloc)._field_Size))._field_Token, jule::Str::lit("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1abe3dd3c_constoa(&((*(_138717_size))._field_Constant)), &__jule_any_type4),jule::Any(_1b9a9e143_FmtInt(_140517_max, 10LL), &__jule_any_type4)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1abe42d30_TypeKind> _141413_elem = _1abe5c388_checkDecl(_self_, &((*_138331_decl.alloc)._field_Elem));;
	{
		
		if ((_141413_elem == nullptr)) {
			_case_begin_1b183d4c3:;
			{
				return nullptr;;
			}
		}
		else if (((_1abe46251_Arr(_141413_elem.ptr()) != nullptr) && (*(_1abe46251_Arr(_141413_elem)))._field_Auto)) {
			_case_begin_1b183d54a:;
			{
				_1abe5542a_pushErr(_self_, (*((*_138331_decl.alloc)._field_Elem))._field_Token, jule::Str::lit("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b183ba21:;
	};
	return jule::new_ptr<_1abe52229_Arr>(_1abe52229_Arr{._field_Auto=_1abd22e74_AutoSized(_138331_decl), ._field_N=_138413_n, ._field_Elem=_141413_elem});;
}



inline jule::Ptr<_1abe5159c_Map> _1abe5ade2_buildMap(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd2335e_MapTypeDecl> _143231_decl) {
	jule::Bool _14339_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14339_cycleRisk;
	});;
	jule::Ptr<_1abe42d30_TypeKind> _143713_key = _1abe5c388_checkDecl(_self_, &((*(_143231_decl))._field_Key));;
	if ((_143713_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abe42d30_TypeKind> _144213_val = _1abe5c388_checkDecl(_self_, &((*_143231_decl.alloc)._field_Val));;
	if ((_144213_val == nullptr)) {
		return nullptr;;
	};
	if ((_1abe45c34_Enum(_144213_val.ptr()) != nullptr)) {
		_1abe5542a_pushErr(_self_, (*((*_143231_decl.alloc)._field_Val))._field_Token, jule::Str::lit("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1abe5159c_Map>(_1abe5159c_Map{._field_Key=_143713_key, ._field_Val=_144213_val});;
}



inline jule::Ptr<_1abe509ec_Tuple> _1abe5b233_buildTuple(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd22072_TupleTypeDecl> _145633_decl) {
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _145713_types = jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::alloc(0LL, (*(_145633_decl))._field_Types.len());;
	{
		auto expr = &((*_145633_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1844991:;
		if (it != expr_end) {
			jule::Ptr<_1abd20845_TypeDecl> _145821_t = *it;
			{
				jule::Ptr<_1abe42d30_TypeKind> _145917_kind = _1abe5c388_checkDecl(_self_, &(_145821_t));;
				if ((_145917_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> &__jule_push_dest = _145713_types; __jule_push_dest.push(_145917_kind); };
			}
			_iter_next_1b1844991:;
			++it;
			goto _iter_begin_1b1844991;
		}
		_iter_end_1b1844991:;
	};
	return jule::new_ptr<_1abe509ec_Tuple>(_1abe509ec_Tuple{._field_Types=_145713_types});;
}



inline jule::Bool _1abe5b574_checkFuncTypes(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd59681_FnIns>* _146938_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_146938_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18464a9:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _147021_p = *it;
			{
				(*(_147021_p))._field_Kind=_1abe5c047_build(_self_, &((*((*((*((*_147021_p.alloc)._field_Decl))._field_Kind))._field_Decl))._field_Kind));
				__jule_func_result=((*_147021_p.alloc)._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1ab6a6231_checkFnParamKind((*(_self_))._field_s, &(_147021_p));
			}
			_iter_next_1b18464a9:;
			++it;
			goto _iter_begin_1b18464a9;
		}
		_iter_end_1b18464a9:;
	};
	if ((!(_1abd56b23_IsVoid((*((*(_146938_f))))._field_Decl.ptr())))) {
		(*((*(_146938_f))))._field_Result=_1abe5c047_build(_self_, &((*(*((*((*(*((*(_146938_f))))._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_146938_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd59681_FnIns> _1abe5b8b5_buildFunc(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd32505_FnDecl> _148732_decl) {
	jule::Bool _14889_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14889_cycleRisk;
	});;
	if (((*(_148732_decl))._field_Generics.len() > 0LL)) {
		_1abe5542a_pushErr(_self_, (*_148732_decl.alloc)._field_Token, jule::Str::lit("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd566a0_Fn> _149713_f = _1abd60ce7_buildFunc(_148732_decl);;
	jule::I32 _14999_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1ab6b0526_checkAnonFuncDecl((*(_self_))._field_s, &(_149713_f));
	if ((_14999_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1abd59681_FnIns> _150513_ins = _1abd57b79_instanceForce(_149713_f);;
	(*(_150513_ins))._field_Anon=true;
	(*_150513_ins.alloc)._field_AsAnon=true;
	jule::Bool _15099_ok = _1abe5b574_checkFuncTypes(_self_, &(_150513_ins));;
	if ((!(_15099_ok))) {
		return nullptr;;
	};
	return _150513_ins;;
}



inline jule::Trait _1abe5bc06_buildByNamespace(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd215e3_NamespaceTypeDecl> _151739_decl) {
	jule::Str _15189_path = _1abe5e874_buildLinkPathByTokens(&((*(_151739_decl))._field_Idents));;
	jule::Ptr<_1ab67760e_ImportInfo> _151913_imp = ((_1abe62921_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1abe60c0a_SelectPackage((*(_self_))._field_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>>((void*)__jule_anon_1b1850b56, jule::Ptr<__jule_anon_1b1850b56_ctx>::make(__jule_anon_1b1850b56_ctx{._151739_decl=_151739_decl,._15189_path=_15189_path}).as<jule::Uintptr>(), __jule_anon_1b1850b56_ctx_handler));;
	jule::Str _15269_selfIdent = jule::Str::lit("self", 4);;
	if (((_151913_imp == nullptr) || (!(_1ab679b50_isLookupable(_151913_imp.ptr(), &(_15269_selfIdent)))))) {
		_1abe5542a_pushErr(_self_, (*_151739_decl.alloc)._field_Idents[0LL], jule::Str::lit("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_15189_path, &__jule_any_type4)}));
		return nullptr;;
	};
	_1abe55826_disallowBuiltin(_self_);
	jule::Trait _153313_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_151913_imp, (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data1);
	jule::Ptr<_1abe42d30_TypeKind> _153513_kind = _1abe5c388_checkDecl(_self_, &((*_151739_decl.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_153313_lookup;
	_1abe55628_allowBuiltin(_self_);
	return jule::Trait(_153513_kind, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data19);;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1abe5c047_build(_1abe54bdd_typeChecker* _self_, jule::Any* _154129_declKind) {
	jule::Trait _154217_kind = nullptr;;
	{
		auto &_match_expr{ (*(_154129_declKind)) };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b1856640:;
			{
				jule::Trait _154517_t = _1abe592b9_buildIdent(_self_, (*(_154129_declKind)).cast_ptr<_1abd20e50_IdentTypeDecl>(&__jule_any_type74));;
				if ((_154517_t != nullptr)) {
					_154217_kind=_154517_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b1855a5c:;
			{
				jule::Trait _155017_t = _1abe5960a_buildSubIdent(_self_, (*(_154129_declKind)).cast_ptr<_1abd21219_SubIdentTypeDecl>(&__jule_any_type87));;
				if ((_155017_t != nullptr)) {
					_154217_kind=_155017_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b1855c05:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe4e435_Sptr> _155617_t = _1abe59c8c_buildSptr(_self_, (*(_154129_declKind)).cast_ptr<_1abd218e0_SptrTypeDecl>(&__jule_any_type71));;
				if ((_155617_t != nullptr)) {
					_154217_kind=jule::Trait(_155617_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b1855c6b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe52bec_Ptr> _156217_t = _1abe5a41e_buildPtr(_self_, (*(_154129_declKind)).cast_ptr<_1abd2236e_PtrTypeDecl>(&__jule_any_type70));;
				if ((_156217_t != nullptr)) {
					_154217_kind=jule::Trait(_156217_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b1855cd2:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe4ee08_Slc> _156817_t = _1abe5a760_buildSlc(_self_, (*(_154129_declKind)).cast_ptr<_1abd21c75_SlcTypeDecl>(&__jule_any_type69));;
				if ((_156817_t != nullptr)) {
					_154217_kind=jule::Trait(_156817_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b1855d48:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe52229_Arr> _157417_t = _1abe5aaa1_buildArr(_self_, (*(_154129_declKind)).cast_ptr<_1abd22b11_ArrTypeDecl>(&__jule_any_type68));;
				if ((_157417_t != nullptr)) {
					_154217_kind=jule::Trait(_157417_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b1855dae:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe5159c_Map> _158017_t = _1abe5ade2_buildMap(_self_, (*(_154129_declKind)).cast_ptr<_1abd2335e_MapTypeDecl>(&__jule_any_type72));;
				if ((_158017_t != nullptr)) {
					_154217_kind=jule::Trait(_158017_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b1855e25:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abe509ec_Tuple> _158617_t = _1abe5b233_buildTuple(_self_, (*(_154129_declKind)).cast_ptr<_1abd22072_TupleTypeDecl>(&__jule_any_type73));;
				if ((_158617_t != nullptr)) {
					_154217_kind=jule::Trait(_158617_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b185670b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1abd59681_FnIns> _159217_t = _1abe5b8b5_buildFunc(_self_, (*(_154129_declKind)).cast_ptr<_1abd32505_FnDecl>(&__jule_any_type14));;
				if ((_159217_t != nullptr)) {
					_154217_kind=jule::Trait(_159217_t, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b1856772:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _159817_t = _1abe5bc06_buildByNamespace(_self_, (*(_154129_declKind)).cast_ptr<_1abd215e3_NamespaceTypeDecl>(&__jule_any_type91));;
				if ((_159817_t != nullptr)) {
					_154217_kind=_159817_t;
				};
			}
		}
		else {
			_case_begin_1b1855b8e:;
			{
				_1abe5542a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1855b39:;
	};
	if ((_154217_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _154217_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data19)) {
			_case_begin_1b186496c:;
			{
				return _154217_kind.cast_ptr<_1abe42d30_TypeKind>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1b1856b6d:;
			{
				jule::Ptr<_1abe42d30_TypeKind> _161317_tk = jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=_154217_kind});;
				{
					auto &_match_expr{ _154217_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)) {
						_case_begin_1b1862d99:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_161317_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)) {
						_case_begin_1b1862c34:;
						{
							jule::Ptr<_1abd4445c_StructIns> _162017_s = _154217_kind.cast_ptr<_1abd4445c_StructIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data0);;
							if ((((*(_162017_s))._field_Decl != nullptr) && (*(*_162017_s.alloc)._field_Decl.alloc)._field_Binded)) {
								(*(_161317_tk))._field_BindIdent=(*(*_162017_s.alloc)._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1b1862d44:;
				};
				return _161317_tk;;
			}
		}
		_match_end_1b1856ad5:;
	};
}



inline jule::Ptr<_1abe42d30_TypeKind> _1abe5c388_checkDecl(_1abe54bdd_typeChecker* _self_, jule::Ptr<_1abd20845_TypeDecl>* _162933_decl) {
	jule::Ptr<_1abd0a38a_Token> _163113_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_162933_decl))))._field_Token;
	jule::Ptr<_1abe42d30_TypeKind> _163413_kind = _1abe5c047_build(_self_, &((*((*(_162933_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_163113_errorToken;
	return _163413_kind;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abe54bdd_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1abe5ccd4_prim(jule::Str* _165621_ident, jule::Ptr<_1abe4a909_Prim> _165633_t) {
	return ((*(_165633_t))._field_Kind == (*(_165621_ident)));;
}



inline jule::Bool static__1abe5d158_exist(jule::Str* _166022_ident, jule::Ptr<_1abe42d30_TypeKind>* _166039_k) {
	{
		
		if ((_1abe45481_Prim((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869796:;
			{
				return static__1abe5ccd4_prim(_166022_ident, _1abe45481_Prim((*(_166039_k)).ptr()));;
			}
		}
		else if ((_1abe45717_Sptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b186981d:;
			{
				jule::Ptr<_1abe4e435_Sptr> _166517_sptr = _1abe45717_Sptr((*(_166039_k)).ptr());;
				return static__1abe5d158_exist(_166022_ident, &((*(_166517_sptr))._field_Elem));;
			}
		}
		else if ((_1abe4599d_Ptr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869895:;
			{
				jule::Ptr<_1abe52bec_Ptr> _166817_ptr = _1abe4599d_Ptr((*(_166039_k)).ptr());;
				return static__1abe5d158_exist(_166022_ident, &((*(_166817_ptr))._field_Elem));;
			}
		}
		else if ((_1abe464d7_Slc((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b186991c:;
			{
				jule::Ptr<_1abe4ee08_Slc> _167117_slc = _1abe464d7_Slc((*(_166039_k)).ptr());;
				return static__1abe5d158_exist(_166022_ident, &((*(_167117_slc))._field_Elem));;
			}
		}
		else if ((_1abe46251_Arr((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869ad7:;
			{
				jule::Ptr<_1abe52229_Arr> _167417_arr = _1abe46251_Arr((*(_166039_k)).ptr());;
				return static__1abe5d158_exist(_166022_ident, &((*(_167417_arr))._field_Elem));;
			}
		}
		else if ((_1abe47021_Map((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869b4d:;
			{
				jule::Ptr<_1abe5159c_Map> _167717_m = _1abe47021_Map((*(_166039_k)).ptr());;
				return (static__1abe5d158_exist(_166022_ident, &((*(_167717_m))._field_Key)) || static__1abe5d158_exist(_166022_ident, &((*_167717_m.alloc)._field_Val)));;
			}
		}
		else if ((_1abe46a04_Struct((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869bb4:;
			{
				jule::Ptr<_1abd4445c_StructIns> _168117_s = _1abe46a04_Struct((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168117_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1871c87:;
					if (it != expr_end) {
						jule::Ptr<_1abe41449_InsGeneric> _168225_g = *it;
						{
							if (static__1abe5d158_exist(_166022_ident, &((*(_168225_g))._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b1871c87:;
						++it;
						goto _iter_begin_1b1871c87;
					}
					_iter_end_1b1871c87:;
				};
				return false;;
			}
		}
		else if ((_1abe4676d_Fn((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869c2a:;
			{
				jule::Ptr<_1abd59681_FnIns> _168917_f = _1abe4676d_Fn((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_168917_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b18738b0:;
					if (it != expr_end) {
						jule::Ptr<_1abd58608_ParamIns> _169025_p = *it;
						{
							if (_1abd552e7_IsSelf((*(_169025_p))._field_Decl.ptr())) {
								goto _iter_next_1b18738b0;
							};
							if (static__1abe5d158_exist(_166022_ident, &((*_169025_p.alloc)._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b18738b0:;
						++it;
						goto _iter_begin_1b18738b0;
					}
					_iter_end_1b18738b0:;
				};
				if (((*_168917_f.alloc)._field_Result != nullptr)) {
					return static__1abe5d158_exist(_166022_ident, &((*_168917_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1abe472a7_Tup((*(_166039_k)).ptr()) != nullptr)) {
			_case_begin_1b1869ca2:;
			{
				jule::Ptr<_1abe509ec_Tuple> _170317_tup = _1abe472a7_Tup((*(_166039_k)).ptr());;
				{
					auto expr = &((*(_170317_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b18761cb:;
					if (it != expr_end) {
						jule::Ptr<_1abe42d30_TypeKind> _170425_t = *it;
						{
							if (static__1abe5d158_exist(_166022_ident, &(_170425_t))) {
								return true;;
							};
						}
						_iter_next_1b18761cb:;
						++it;
						goto _iter_begin_1b18761cb;
					}
					_iter_end_1b18761cb:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b1869675:;
			{
				return false;;
			}
		}
		_match_end_1b1869576:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1abe5c894_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac899764_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8e2aed_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ac8e3b10_stop(_1ac8e348e_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ac8e3d96_stopped(_1ac8e348e_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ac8e412c_finished(_1ac8e348e_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ac8e43b3_isLastSt(_1ac8e348e_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ac8e4726_pushErr(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd0a38a_Token> _18826_token, jule::Str _18841_fmt) {
	_1ac9124be_pushErr((*(_self_))._field_p.ptr(), _18826_token, _18841_fmt, jule::Slice<jule::Any>());
}



inline void _1ac8e4a89_pushSuggestion(_1ac8e348e_scopeParser* _self_, jule::Str _19333_fmt, jule::Slice<jule::Any> _19346_args) {
	_1ac912832_pushSuggestion((*(_self_))._field_p.ptr(), _19333_fmt, _19346_args);
}



inline void _1ac8e4d42_insertAsNext(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _19736_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ac8e2aed_stmt>(_1ac8e2aed_stmt{._field_tokens=(*(_19736_tokens)), });
}



inline jule::Ptr<_1ac8e2aed_stmt> _1ac8e50c8_next(_1ac8e348e_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1abd30866_ScopeTree> _1ac8e54c4_buildScope(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _20734_tokens, jule::Ptr<_1abd0a38a_Token> _20756_end) {
	jule::Ptr<_1abd30866_ScopeTree> _20813_s = _1ac8e1877_newScope();;
	(*(_20813_s))._field_Parent=(*(_self_))._field_s;
	(*_20813_s.alloc)._field_End=_20756_end;
	_1ac8e348e_scopeParser _21113_ssp = _1ac8e348e_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1ac900347_build(&_21113_ssp, _20734_tokens, &(_20813_s));
	return _20813_s;;
}



inline jule::Ptr<_1abd336b0_VarDecl> _1ac8e5815_buildVarSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _21834_tokens) {
	jule::Ptr<_1abd336b0_VarDecl> _21913_v = _1ac915291_buildVar((*(_self_))._field_p, (*(_21834_tokens)));;
	(*(_21913_v))._field_Scope=(*(_self_))._field_s;
	return _21913_v;;
}



inline jule::Ptr<_1abd33a89_RetSt> _1ac8e5b56_buildRetSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _22433_tokens) {
	jule::Ptr<_1abd33a89_RetSt> _22513_st = jule::new_ptr<_1abd33a89_RetSt>(_1abd33a89_RetSt{._field_Token=_22433_tokens[0LL], });;
	if ((_22433_tokens.len() > 1LL)) {
		(_22433_tokens).mut_slice(1LL);;
		(*(_22513_st))._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, &(_22433_tokens));
	};
	return _22513_st;;
}



inline jule::Ptr<_1abd34309_Iter> _1ac8e5e97_buildWhileNextIter(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _23542_s) {
	jule::Ptr<_1abd34309_Iter> _23613_it = jule::new_ptr<_1abd34309_Iter>(_1abd34309_Iter{._field_Token=(*((*(_23542_s))))._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _23913_tokens = (*((*(_23542_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1abd34b34_WhileKind> _24013_kind = jule::new_ptr<_1abd34b34_WhileKind>();;
	if ((_23913_tokens.len() > 0LL)) {
		(*_24013_kind.alloc)._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, &(_23913_tokens));
	};
	if (_1ac8e43b3_isLastSt(_self_)) {
		_1ac8e4726_pushErr(_self_, (*(_23613_it))._field_Token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	_23913_tokens=(*(_1ac8e50c8_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _25213_stTokens = _1ac90bbd3_getBlockExpr(&(_23913_tokens));;
	if ((_25213_stTokens.len() > 0LL)) {
		jule::Ptr<_1ac8e2aed_stmt> _25417_stmt = jule::new_ptr<_1ac8e2aed_stmt>(_1ac8e2aed_stmt{._field_tokens=_25213_stTokens, ._field_terminated=(*((*(_23542_s))))._field_terminated});;
		(*_24013_kind.alloc)._field_NextToken=_25213_stTokens[0LL];
		(*_24013_kind.alloc)._field_Next=_1ac8eeed4_buildSt(_self_, &(_25417_stmt));
	};
	jule::I32 _26213_i = _25213_stTokens.len();;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _26313_blockTokens = _1ac9101c0_range(&(_26213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_23913_tokens));;
	if ((_26313_blockTokens == nullptr)) {
		_1ac8e3b10_stop(_self_);
		_1ac8e4726_pushErr(_self_, (*_23613_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26213_i < _23913_tokens.len())) {
		_1ac8e4726_pushErr(_self_, _23913_tokens[_26213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_23613_it.alloc)._field_Scope=_1ac8e54c4_buildScope(_self_, &(_26313_blockTokens), _23913_tokens[(_26213_i - 1LL)]);
	(*_23613_it.alloc)._field_Kind=jule::Any(_24013_kind, &__jule_any_type36);
	return _23613_it;;
}



inline jule::Ptr<_1abd34b34_WhileKind> _1ac8e62d8_buildWhileIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28042_tokens) {
	return jule::new_ptr<_1abd34b34_WhileKind>(_1abd34b34_WhileKind{._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, _28042_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac8e6629_getRangeKindKeysTokens(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28646_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _28713_vars;
	jule::Slice<_1eb22e132_Log> _28719_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(_28646_toks, static_cast<jule::U32>(5LLU), true);
		_28713_vars = __jule_assign_result.__jule_result_arg0;
		_28719_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28719_errs);
	return _28713_vars;;
}



inline jule::Ptr<_1abd336b0_VarDecl> _1ac8e696a_buildRangeKindKey(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _29241_tokens) {
	if (((*(_29241_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1abd336b0_VarDecl> _29613_key = jule::new_ptr<_1abd336b0_VarDecl>(_1abd336b0_VarDecl{._field_Token=(*(_29241_tokens))[0LL], ._field_Setter=(*(_29241_tokens))[0LL], });;
	if (((*((*(_29613_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_29613_key.alloc)._field_Mutable=true;
		if (((*(_29241_tokens)).len() == 1LL)) {
			_1ac8e4726_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		};
		(*_29613_key.alloc)._field_Token=(*(_29241_tokens))[1LL];
	} else if (((*(_29241_tokens)).len() > 1LL)) {
		_1ac8e4726_pushErr(_self_, (*(_29241_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	if (((*((*(_29613_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac8e4726_pushErr(_self_, (*_29613_key.alloc)._field_Token, jule::Str::lit("invalid syntax", 14));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_29613_key.alloc)._field_Ident=(*(*_29613_key.alloc)._field_Token.alloc)._field_Kind;
	return _29613_key;;
}



inline jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _1ac8e6cab_buildRangeKindKeys(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b87cc3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1ac8e696a_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1b1b87cc3:;
			++it;
			goto _iter_begin_1b1b87cc3;
		}
		_iter_end_1b1b87cc3:;
	};
	return _31917_keys;;
}



inline void _1ac8e711e_setupRangeKindKeysPlain(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _32713_keyTokens = _1ac8e6629_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32713_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32713_keyTokens.len() > 2LL)) {
		_1ac8e4726_pushErr(_self_, (*((*(_32647_rng))))._field_InToken, jule::Str::lit("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _33413_keys = _1ac8e6cab_buildRangeKindKeys(_self_, &(_32713_keyTokens));;
	(*((*(_32647_rng))))._field_KeyA=_33413_keys[0LL];
	if ((_33413_keys.len() > 1LL)) {
		(*((*(_32647_rng))))._field_KeyB=_33413_keys[1LL];
	};
}



inline void _1ac8e7482_setupRangeKindKeysExplicit(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _34172_tokens) {
	jule::I32 _34213_i = 0LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _34313_rang = _1ac9101c0_range(&(_34213_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34172_tokens);;
	if ((_34213_i < (*(_34172_tokens)).len())) {
		_1ac8e4726_pushErr(_self_, (*((*(_34150_rng))))._field_InToken, jule::Str::lit("invalid syntax", 14));
	};
	_1ac8e711e_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34313_rang));
}



inline void _1ac8e77e5_setupRangeKindKeys(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1abd3553b_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35064_tokens) {
	if (((*((*(_35064_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1ac8e7482_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1ac8e711e_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1abd3553b_RangeKind> _1ac8e7c9b_buildRangeIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _35914_exprTokens, jule::Ptr<_1abd0a38a_Token>* _35941_inToken) {
	jule::Ptr<_1abd3553b_RangeKind> _36013_rng = jule::new_ptr<_1abd3553b_RangeKind>(_1abd3553b_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1ac8e4726_pushErr(_self_, (*(_36013_rng))._field_InToken, jule::Str::lit("expression missing", 18));
		return _36013_rng;;
	};
	(*_36013_rng.alloc)._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1ac8e77e5_setupRangeKindKeys(_self_, &(_36013_rng), _35842_var_tokens);
	};
	return _36013_rng;;
}



inline jule::Any _1ac8e8197_buildCommonIterKind(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37443_tokens, jule::Ptr<_1abd0a38a_Token>* _37462_err_tok) {
	jule::I32 _37513_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1b92690:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1b93141:;
						{
							(_37513_braceN)++;
							goto _iter_next_1b1b92690;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1b9351a:;
						{
							(_37513_braceN)--;
						}
					}
					_match_end_1b1b9342c:;
				};
				if ((_37513_braceN != 0LL)) {
					goto _iter_next_1b1b92690;
				};
				{
					auto &_match_expr{ (*(_37621_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1b1b94719:;
						{
							jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39321_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39421_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1ac8e7c9b_buildRangeIterKind(_self_, &(_39321_declTokens), &(_39421_exprTokens), &(_37621_tok)), &__jule_any_type38);;
						}
					}
					_match_end_1b1b94c03:;
				};
			}
			_iter_next_1b1b92690:;
			++it;
			_37614_i++;
			goto _iter_begin_1b1b92690;
		}
		_iter_end_1b1b92690:;
	};
	return jule::Any(_1ac8e62d8_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type36);;
}



inline jule::Ptr<_1abd34309_Iter> _1ac8e84d8_buildCommonIter(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _40138_tokens) {
	jule::Ptr<_1abd34309_Iter> _40213_it = jule::new_ptr<_1abd34309_Iter>(_1abd34309_Iter{._field_Token=_40138_tokens[0LL], });;
	(_40138_tokens).mut_slice(1LL);;
	if ((_40138_tokens.len() == 0LL)) {
		_1ac8e3b10_stop(_self_);
		_1ac8e4726_pushErr(_self_, (*(_40213_it))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _41213_exprTokens = _1ac90bbd3_getBlockExpr(&(_40138_tokens));;
	if ((_41213_exprTokens.len() > 0LL)) {
		(*_40213_it.alloc)._field_Kind=_1ac8e8197_buildCommonIterKind(_self_, &(_41213_exprTokens), &((*_40213_it.alloc)._field_Token));
	};
	jule::I32 _41613_i = _41213_exprTokens.len();;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _41713_scopeTokens = _1ac9101c0_range(&(_41613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40138_tokens));;
	if ((_41713_scopeTokens == nullptr)) {
		_1ac8e3b10_stop(_self_);
		_1ac8e4726_pushErr(_self_, (*_40213_it.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41613_i < _40138_tokens.len())) {
		_1ac8e4726_pushErr(_self_, _40138_tokens[_41613_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_40213_it.alloc)._field_Scope=_1ac8e54c4_buildScope(_self_, &(_41713_scopeTokens), _40138_tokens[(_41613_i - 1LL)]);
	return _40213_it;;
}



inline jule::Ptr<_1abd34309_Iter> _1ac8e8829_buildIterSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _43135_st) {
	if ((*((*(_43135_st))))._field_terminated) {
		return _1ac8e5e97_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1ac8e84d8_buildCommonIter(_self_, (*((*(_43135_st))))._field_tokens);;
}



inline jule::Ptr<_1abd35915_BreakSt> _1ac8e8b6a_buildBreakSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _43836_tokens) {
	jule::Ptr<_1abd35915_BreakSt> _43913_brk = jule::new_ptr<_1abd35915_BreakSt>(_1abd35915_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*((*(_43836_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ac8e4726_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_43913_brk))._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1ac8e4726_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _43913_brk;;
}



inline jule::Ptr<_1abd35cde_ContSt> _1ac8e8eab_buildContSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _45635_tokens) {
	jule::Ptr<_1abd35cde_ContSt> _45713_cont = jule::new_ptr<_1abd35cde_ContSt>(_1abd35cde_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*((*(_45635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ac8e4726_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			(*(_45713_cont))._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1ac8e4726_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
			};
		};
	};
	return _45713_cont;;
}



inline jule::Ptr<_1abd36295_If> _1ac8e92ec_buildIf(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _47431_tokens) {
	jule::Ptr<_1abd36295_If> _47513_model = jule::new_ptr<_1abd36295_If>(_1abd36295_If{._field_Token=(*(_47431_tokens))[0LL], });;
	((*(_47431_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _47913_exprTokens = _1ac90bbd3_getBlockExpr(_47431_tokens);;
	jule::I32 _48013_i = 0LL;;
	if ((_47913_exprTokens.len() == 0LL)) {
		_1ac8e4726_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("expression missing", 18));
	} else {
		_48013_i=_47913_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _48613_scopeTokens = _1ac9101c0_range(&(_48013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47431_tokens);;
	if ((_48613_scopeTokens == nullptr)) {
		_1ac8e3b10_stop(_self_);
		_1ac8e4726_pushErr(_self_, (*(_47513_model))._field_Token, jule::Str::lit("body is not exist", 17));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd0a38a_Token> _49313_end = (*(_47431_tokens))[(_48013_i - 1LL)];;
	if ((_48013_i < (*(_47431_tokens)).len())) {
		if (((*((*(_47431_tokens))[_48013_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_47431_tokens))).mut_slice(_48013_i);;
		} else {
			_1ac8e4726_pushErr(_self_, (*(_47431_tokens))[_48013_i], jule::Str::lit("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	(*_47513_model.alloc)._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, &(_47913_exprTokens));
	(*_47513_model.alloc)._field_Scope=_1ac8e54c4_buildScope(_self_, &(_48613_scopeTokens), _49313_end);
	return _47513_model;;
}



inline jule::Ptr<_1abd3666e_Else> _1ac8e963d_buildElse(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _50733_tokens) {
	jule::Ptr<_1abd3666e_Else> _50813_els = jule::new_ptr<_1abd3666e_Else>(_1abd3666e_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	((*(_50733_tokens))).mut_slice(1LL);;
	jule::I32 _51213_i = 0LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _51313_scopeTokens = _1ac9101c0_range(&(_51213_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50733_tokens);;
	if ((_51313_scopeTokens == nullptr)) {
		if ((_51213_i < (*(_50733_tokens)).len())) {
			_1ac8e4726_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("else's cannot have any expression", 33));
		} else {
			_1ac8e3b10_stop(_self_);
			_1ac8e4726_pushErr(_self_, (*(_50813_els))._field_Token, jule::Str::lit("body is not exist", 17));
			_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51213_i < (*(_50733_tokens)).len())) {
		_1ac8e4726_pushErr(_self_, (*(_50733_tokens))[_51213_i], jule::Str::lit("invalid syntax", 14));
	};
	(*(_50813_els))._field_Scope=_1ac8e54c4_buildScope(_self_, &(_51313_scopeTokens), (*(_50733_tokens))[(_51213_i - 1LL)]);
	return _50813_els;;
}



inline jule::Ptr<_1abd36b25_Conditional> _1ac8e997e_buildIfElseChain(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _53139_tokens) {
	jule::Ptr<_1abd36b25_Conditional> _53213_chain = jule::new_ptr<_1abd36b25_Conditional>(_1abd36b25_Conditional{._field_Head=_1ac8e92ec_buildIf(_self_, &(_53139_tokens)), });;
	if (((*(_53213_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if (((*(_53139_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1b1baeaec;
			};
			if (((_53139_tokens.len() > 1LL) && ((*(_53139_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_53139_tokens).mut_slice(1LL);;
				jule::Ptr<_1abd36295_If> _54421_elif = _1ac8e92ec_buildIf(_self_, &(_53139_tokens));;
				(*_53213_chain.alloc)._field_Tail=jule::append((*_53213_chain.alloc)._field_Tail,jule::Slice<jule::Ptr<_1abd36295_If>>::make({_54421_elif}));
				goto _iter_next_1b1baeaec;
			};
			(*_53213_chain.alloc)._field_Default=_1ac8e963d_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1b1baeaec;
		}
	_iter_next_1b1baeaec:;
	}
	_iter_end_1b1baeaec:;;
	return _53213_chain;;
}



inline jule::Ptr<_1abd24b79_Expr> _1ac8e9cc0_buildCoCallSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _55436_tokens) {
	jule::Ptr<_1abd0a38a_Token> _5559_token = _55436_tokens[0LL];;
	(_55436_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd24b79_Expr> _55713_e = _1ac912b73_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55713_e == nullptr)) {
		return _55713_e;;
	};
	{
		auto &_match_expr{ (*(_55713_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b1bb3c44:;
			{
				(*((*(_55713_e))._field_Kind.unsafe_cast_ptr<_1abd288a3_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b1bb4272:;
			{
				_1ac8e4726_pushErr(_self_, _5559_token, jule::Str::lit("statement must have function call expression", 44));
			}
		}
		_match_end_1b1bb421c:;
	};
	return _55713_e;;
}



inline jule::Ptr<_1abd2d303_GotoSt> _1ac8ea111_buildGotoSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _57035_tokens) {
	jule::Ptr<_1abd2d303_GotoSt> _57113_gt = jule::new_ptr<_1abd2d303_GotoSt>(_1abd2d303_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1ac8e4726_pushErr(_self_, (*(_57113_gt))._field_Token, jule::Str::lit("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1ac8e4726_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1abd0a38a_Token> _58013_identToken = (*(_57035_tokens))[1LL];;
	if (((*(_58013_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac8e4726_pushErr(_self_, _58013_identToken, jule::Str::lit("invalid syntax", 14));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57113_gt;;
	};
	(*(_57113_gt))._field_Label=_58013_identToken;
	return _57113_gt;;
}



inline jule::Ptr<_1abd2d600_FallSt> _1ac8ea452_buildFallSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _59035_tokens) {
	jule::Ptr<_1abd2d600_FallSt> _59113_fll = jule::new_ptr<_1abd2d600_FallSt>(_1abd2d600_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1ac8e4726_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str::lit("invalid syntax", 14));
	};
	return _59113_fll;;
}



inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac8ea793_buildTypeAliasSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _60040_tokens) {
	jule::Ptr<_1abd37362_TypeAliasDecl> _60113_tad = _1ac914416_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	(*(_60113_tad))._field_Scope=(*(_self_))._field_s;
	return _60113_tad;;
}



inline void _1ac8eac6b_pushCaseExpr(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _60635_tokens, jule::Ptr<_1abd0a38a_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I32 _61217_i = 0LL;;
		jule::Ptr<_1abd20845_TypeDecl> _61317_t;
		jule::Bool _61320_ok;
		({
			__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61217_i)), true);
			_61317_t = __jule_assign_result.__jule_result_arg0;
			_61320_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61320_ok) {
			{ jule::Slice<jule::Ptr<_1abd24b79_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1abd24b79_Expr>(_1abd24b79_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61317_t, &__jule_any_type89)})); };
			if ((_61217_i < _60635_tokens.len())) {
				_1ac8e4726_pushErr(_self_, _60635_tokens[_61217_i], jule::Str::lit("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1abd24b79_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1ac912b73_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline __jule_tuple_sx_1abd24b79_Expr__jule_tuple_bool _1ac8eb222_buildCaseExprs(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _62938_tokens, jule::Ptr<_1abd0a38a_Token>* _62961_colon, jule::Bool _62976_typeMatch) {
	__jule_tuple_sx_1abd24b79_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _63013_exprs = jule::Slice<jule::Ptr<_1abd24b79_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63113_braceN = 0LL;;
	jule::I32 _63213_j = 0LL;;
	{
		auto expr = _62938_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1bc068a:;
		if (it != expr_end) {
			jule::I32 _63314_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _63321_tok = *it;
			{
				{
					auto &_match_expr{ (*(_63321_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b1bc19dd:;
						{
							(_63113_braceN)++;
							goto _iter_next_1b1bc068a;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b1bc1db7:;
						{
							(_63113_braceN)--;
							goto _iter_next_1b1bc068a;
						}
					}
					_match_end_1b1bc1cc9:;
				};
				if ((_63113_braceN != 0LL)) {
					goto _iter_next_1b1bc068a;
				};
				{
					
					if (((*(_63321_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1b1bc3539:;
						{
							jule::Slice<jule::Ptr<_1abd0a38a_Token>> _65217_exprTokens = (*(_62938_tokens)).slice(_63213_j, _63314_i);;
							if ((_65217_exprTokens.len() == 0LL)) {
								_1ac8e4726_pushErr(_self_, _63321_tok, jule::Str::lit("expression missing", 18));
							} else {
								_1ac8eac6b_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							};
							_63213_j=(_63314_i + 1LL);
						}
					}
					else if (((*(_63321_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1b1bc35a0:;
						{
							(*(_62961_colon))=_63321_tok;
							_1ac8eac6b_pushCaseExpr(_self_, (*(_62938_tokens)).slice(_63213_j, _63314_i), _63321_tok, _62976_typeMatch, &(_63013_exprs));
							((*(_62938_tokens))).mut_slice((_63314_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _63013_exprs;
							__jule_func_result.__jule_result_arg1 = (((_63314_i - _63213_j) == 0LL) || (_63013_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1b1bc3429:;
				};
			}
			_iter_next_1b1bc068a:;
			++it;
			_63314_i++;
			goto _iter_begin_1b1bc068a;
		}
		_iter_end_1b1bc068a:;
	};
	_1ac8e4726_pushErr(_self_, (*(_62938_tokens))[0LL], jule::Str::lit("invalid syntax", 14));
	(*(_62938_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd30866_ScopeTree> _1ac8eb563_buildCaseScope(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _67138_tokens) {
	jule::I32 _67213_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67417_i = 0LL;;
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67517_next;
			({
				__jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool __jule_assign_result = _1ac8e27bd_skipSt(&(_67417_i), (*(_67138_tokens)).slice(_67213_n));
				_67517_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67517_next.len() == 0LL)) {
				goto _iter_end_1b1bc7153;
			};
			jule::Ptr<_1abd0a38a_Token> _67913_tok = _67517_next[0LL];;
			if (((*(_67913_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_67213_n+=_67417_i;
				goto _iter_next_1b1bc7153;
			};
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _68417_scopeTokens = (*(_67138_tokens)).slice(0LL, _67213_n);;
			jule::Ptr<_1abd30866_ScopeTree> _68517_scope = _1ac8e54c4_buildScope(_self_, &(_68417_scopeTokens), (*(_67138_tokens))[_67213_n]);;
			((*(_67138_tokens))).mut_slice(_67213_n);;
			return _68517_scope;;
		}
	_iter_next_1b1bc7153:;
	}
	_iter_end_1b1bc7153:;;
	jule::Ptr<_1abd0a38a_Token> _68917_end;;
	if (((*(_67138_tokens)).len() > 0LL)) {
		_68917_end=(*(_67138_tokens))[((*(_67138_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1abd30866_ScopeTree> _69313_scope = _1ac8e54c4_buildScope(_self_, _67138_tokens, _68917_end);;
	(*(_67138_tokens))=nullptr;
	return _69313_scope;;
}



inline __jule_tuple_x_1abd37818_Case__jule_tuple_bool _1ac8eb95e_buildCase(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _69833_tokens, jule::Bool _69851_typeMatch) {
	__jule_tuple_x_1abd37818_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abd37818_Case> _69913_c = jule::new_ptr<_1abd37818_Case>(_1abd37818_Case{._field_Token=(*(_69833_tokens))[0LL], });;
	((*(_69833_tokens))).mut_slice(1LL);;
	jule::Ptr<_1abd0a38a_Token> _70317_colon = nullptr;;
	jule::Bool _70418_ok;
	({
		__jule_tuple_sx_1abd24b79_Expr__jule_tuple_bool __jule_assign_result = _1ac8eb222_buildCaseExprs(_self_, _69833_tokens, &(_70317_colon), _69851_typeMatch);
		(*(_69913_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_70418_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_69913_c.alloc)._field_Scope=_1ac8eb563_buildCaseScope(_self_, _69833_tokens);
	if (((*((*_69913_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*_69913_c.alloc)._field_Scope.alloc)._field_End=_70317_colon;
	};
	jule::Bool _7099_isDefault = (_70418_ok && ((*_69913_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _69913_c;
	__jule_func_result.__jule_result_arg1 = _7099_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1abd37818_Case__jule_tuple_x_1abd3666e_Else _1ac8ebd5a_buildCases(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _71333_tokens, jule::Bool _71351_typeMatch) {
	__jule_tuple_sx_1abd37818_Case__jule_tuple_x_1abd3666e_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1abd37818_Case>> _71417_cases = nullptr;;
	jule::Ptr<_1abd3666e_Else> _71517_def = nullptr;;
	jule::Bool _71613_defNotLast = false;;
	while ((_71333_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1abd0a38a_Token> _71817_tok = _71333_tokens[0LL];;
			if (((*(_71817_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1ac8e4726_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				goto _iter_end_1b1bd5529;
			};
			jule::Ptr<_1abd37818_Case> _72317_c;
			jule::Bool _72320_isDefault;
			({
				__jule_tuple_x_1abd37818_Case__jule_tuple_bool __jule_assign_result = _1ac8eb95e_buildCase(_self_, &(_71333_tokens), _71351_typeMatch);
				_72317_c = __jule_assign_result.__jule_result_arg0;
				_72320_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72320_isDefault) {
				(*(_72317_c))._field_Token=_71817_tok;
				if ((_71517_def == nullptr)) {
					_71517_def=jule::new_ptr<_1abd3666e_Else>(_1abd3666e_Else{._field_Token=(*_72317_c.alloc)._field_Token, ._field_Scope=(*_72317_c.alloc)._field_Scope});
				} else {
					_1ac8e4726_pushErr(_self_, _71817_tok, jule::Str::lit("invalid syntax", 14));
				};
			} else {
				_71613_defNotLast=(_71613_defNotLast || (_71517_def != nullptr));
				{ jule::Slice<jule::Ptr<_1abd37818_Case>> &__jule_push_dest = _71417_cases; __jule_push_dest.push(_72317_c); };
			};
		}
	_iter_next_1b1bd5529:;
	}
	_iter_end_1b1bd5529:;;
	if (_71613_defNotLast) {
		_1ac8e4726_pushErr(_self_, (*(_71517_def))._field_Token, jule::Str::lit("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71417_cases;
	__jule_func_result.__jule_result_arg1 = _71517_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd38132_MatchCase> _1ac8ec19b_buildMatchCase(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _74737_tokens) {
	jule::Ptr<_1abd38132_MatchCase> _74813_m = jule::new_ptr<_1abd38132_MatchCase>(_1abd38132_MatchCase{._field_Token=_74737_tokens[0LL], });;
	(_74737_tokens).mut_slice(1LL);;
	if (((_74737_tokens.len() > 0LL) && ((*(_74737_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_74813_m))._field_TypeMatch=true;
		(_74737_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _75813_exprTokens = _1ac90bbd3_getBlockExpr(&(_74737_tokens));;
	if ((_75813_exprTokens.len() > 0LL)) {
		(*_74813_m.alloc)._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, &(_75813_exprTokens));
	} else if ((*_74813_m.alloc)._field_TypeMatch) {
		_1ac8e4726_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("expression missing", 18));
	};
	jule::I32 _76513_i = _75813_exprTokens.len();;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _76613_blockToks = _1ac9101c0_range(&(_76513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74737_tokens));;
	if ((_76613_blockToks == nullptr)) {
		_1ac8e3b10_stop(_self_);
		_1ac8e4726_pushErr(_self_, (*_74813_m.alloc)._field_Token, jule::Str::lit("body is not exist", 17));
		_1ac8e4a89_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76513_i < _74737_tokens.len())) {
		_1ac8e4726_pushErr(_self_, _74737_tokens[_76513_i], jule::Str::lit("invalid syntax", 14));
	};
	(*_74813_m.alloc)._field_End=_74737_tokens[(_76513_i - 1LL)];
	({
		__jule_tuple_sx_1abd37818_Case__jule_tuple_x_1abd3666e_Else __jule_assign_result = _1ac8ebd5a_buildCases(_self_, _76613_blockToks, (*_74813_m.alloc)._field_TypeMatch);
		(*_74813_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_74813_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _74813_m;;
}



inline jule::Ptr<_1abd30866_ScopeTree> _1ac8ec4dc_buildScopeSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _78035_tokens) {
	jule::Bool _78113_isUnsafe = false;;
	jule::Bool _78213_isDeferred = false;;
	jule::Ptr<_1abd0a38a_Token> _78313_token = _78035_tokens[0LL];;
	if (((*(_78313_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_78113_isUnsafe=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1ac8e4726_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
		_78313_token=_78035_tokens[0LL];
		if (((*_78313_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_78213_isDeferred=true;
			(_78035_tokens).mut_slice(1LL);;
			if ((_78035_tokens.len() == 0LL)) {
				_1ac8e4726_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if (((*(_78313_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_78213_isDeferred=true;
		(_78035_tokens).mut_slice(1LL);;
		if ((_78035_tokens.len() == 0LL)) {
			_1ac8e4726_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _80913_i = 0LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _81013_scopeTokens = _1ac9101c0_range(&(_80913_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78035_tokens));;
	if ((_81013_scopeTokens == nullptr)) {
		_1ac8e4726_pushErr(_self_, _78313_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	} else if ((_80913_i < _78035_tokens.len())) {
		_1ac8e4726_pushErr(_self_, _78035_tokens[_80913_i], jule::Str::lit("invalid syntax", 14));
	};
	jule::Ptr<_1abd30866_ScopeTree> _81713_scope = _1ac8e54c4_buildScope(_self_, &(_81013_scopeTokens), _78035_tokens[(_80913_i - 1LL)]);;
	(*(_81713_scope))._field_Unsafety=_78113_isUnsafe;
	(*_81713_scope.alloc)._field_Deferred=_78213_isDeferred;
	return _81713_scope;;
}



inline jule::Ptr<_1abd2ce29_LabelSt> _1ac8ec82d_buildLabelSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _82336_tokens) {
	jule::Ptr<_1abd2ce29_LabelSt> _82413_lbl = jule::new_ptr<_1abd2ce29_LabelSt>(_1abd2ce29_LabelSt{._field_Token=(*(_82336_tokens))[0LL], ._field_Ident=(*((*(_82336_tokens))[0LL]))._field_Kind});;
	if (((*(_82336_tokens)).len() > 2LL)) {
		((*(_82336_tokens))).mut_slice(2LL);;
		_1ac8e4d42_insertAsNext(_self_, _82336_tokens);
	};
	return _82413_lbl;;
}



inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ecb6e_buildIdSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _83833_tokens) {
	__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_83833_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1abd0a38a_Token> _84313_token = (*(_83833_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_84313_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b1bead47:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ac8ec82d_buildLabelSt(_self_, _83833_tokens), &__jule_any_type55);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b1beb9a2:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac90d61e_assignInfo> _1ac8eceb0_buildAssignInfo(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _85239_tokens) {
	jule::Ptr<_1ac90d61e_assignInfo> _85313_info = jule::new_ptr<_1ac90d61e_assignInfo>(_1ac90d61e_assignInfo{._field_ok=true});;
	jule::I32 _85613_braceN = 0LL;;
	{
		auto expr = _85239_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1bed1bd:;
		if (it != expr_end) {
			jule::I32 _85714_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _85721_token = *it;
			{
				{
					auto &_match_expr{ (*(_85721_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1bedb4c:;
						{
							(_85613_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1bee004:;
						{
							(_85613_braceN)--;
						}
					}
					_match_end_1b1bede16:;
				};
				{
					
					if ((_85613_braceN > 0LL)) {
						_case_begin_1b1c0018c:;
						{
							goto _iter_next_1b1bed1bd;
						}
					}
					else if (((!(_1abd101d6_IsAssignOp((*(_85721_token))._field_Id))) && ((*_85721_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1b1c00203:;
						{
							goto _iter_next_1b1bed1bd;
						}
					}
					_match_end_1b1c00137:;
				};
				(*(_85313_info))._field_l=(*(_85239_tokens)).slice(0LL, _85714_i);
				if (((*_85313_info.alloc)._field_l.len() == 0LL)) {
					(*_85313_info.alloc)._field_ok=false;
				};
				(*_85313_info.alloc)._field_setter=_85721_token;
				if (((_85714_i + 1LL) >= (*(_85239_tokens)).len())) {
					(*_85313_info.alloc)._field_r=nullptr;
					(*_85313_info.alloc)._field_ok=_1abd0ee1c_IsPostfixOp((*((*_85313_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1b1bed1bd;
				};
				(*_85313_info.alloc)._field_r=(*(_85239_tokens)).slice((_85714_i + 1LL));
				if (_1abd0ee1c_IsPostfixOp((*(*_85313_info.alloc)._field_setter.alloc)._field_Id)) {
					if (((*_85313_info.alloc)._field_r.len() > 0LL)) {
						_1ac8e4726_pushErr(_self_, (*_85313_info.alloc)._field_r[0LL], jule::Str::lit("invalid syntax", 14));
						(*_85313_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1b1bed1bd;
			}
			_iter_next_1b1bed1bd:;
			++it;
			_85714_i++;
			goto _iter_begin_1b1bed1bd;
		}
		_iter_end_1b1bed1bd:;
	};
	return _85313_info;;
}



inline jule::Ptr<_1abd2dc60_AssignLeft> _1ac8ed301_buildAssignL(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _89736_tokens) {
	jule::Ptr<_1abd2dc60_AssignLeft> _89813_l = jule::new_ptr<_1abd2dc60_AssignLeft>(_1abd2dc60_AssignLeft{._field_Token=(*(_89736_tokens))[0LL], });;
	if (((*((*(_89736_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_89813_l))._field_Ident=(*((*_89813_l.alloc)._field_Token))._field_Kind;
	};
	(*_89813_l.alloc)._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, _89736_tokens);
	return _89813_l;;
}



inline jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> _1ac8ed642_buildAssignLs(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _90837_parts) {
	jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> _90917_lefts = nullptr;;
	{
		auto expr = _90837_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1c07bbc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _91021_part = *it;
			{
				jule::Ptr<_1abd2dc60_AssignLeft> _91117_l = _1ac8ed301_buildAssignL(_self_, &(_91021_part));;
				{ jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> &__jule_push_dest = _90917_lefts; __jule_push_dest.push(_91117_l); };
			}
			_iter_next_1b1c07bbc:;
			++it;
			goto _iter_begin_1b1c07bbc;
		}
		_iter_end_1b1c07bbc:;
	};
	return _90917_lefts;;
}



inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ed983_buildPlainAssign(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _91740_tokens) {
	__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac90d61e_assignInfo> _91813_info = _1ac8eceb0_buildAssignInfo(_self_, _91740_tokens);;
	if ((!((*(_91813_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd2e2e3_AssignSt> _92313_assign = jule::new_ptr<_1abd2e2e3_AssignSt>(_1abd2e2e3_AssignSt{._field_Setter=(*_91813_info.alloc)._field_setter, });;
	if (((*((*_91813_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_92313_assign))._field_Declarative=true;
		(*_92313_assign.alloc)._field_Right=_1ac912b73_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
		jule::Bool _93113_ok = _1ac8edd7e_buildDeclAssign1(_self_, &((*_91813_info.alloc)._field_l), &(_92313_assign));;
		if ((!(_93113_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_92313_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1abd2dc60_AssignLeft> _94017_left = (*_92313_assign.alloc)._field_Left[0LL];;
		jule::Ptr<_1abd336b0_VarDecl> _94117_decl = jule::new_ptr<_1abd336b0_VarDecl>(_1abd336b0_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_94017_left))._field_Token, ._field_Setter=(*_92313_assign.alloc)._field_Setter, ._field_Ident=(*_94017_left.alloc)._field_Ident, ._field_Mutable=(*_94017_left.alloc)._field_Mutable, ._field_Reference=(*_94017_left.alloc)._field_Reference, ._field_Expr=(*_92313_assign.alloc)._field_Right});;
		__jule_func_result.__jule_result_arg0 = jule::Any(_94117_decl, &__jule_any_type16);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _95313_parts;
	jule::Slice<_1eb22e132_Log> _95320_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&((*_91813_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_95313_parts = __jule_assign_result.__jule_result_arg0;
		_95320_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95320_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_95320_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_92313_assign.alloc)._field_Left=_1ac8ed642_buildAssignLs(_self_, &(_95313_parts));
	if (((*_91813_info.alloc)._field_r != nullptr)) {
		(*_92313_assign.alloc)._field_Right=_1ac912b73_buildExpr((*(_self_))._field_p, &((*_91813_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_92313_assign, &__jule_any_type57);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ac8edd7e_buildDeclAssign1(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _96740_lefts, jule::Ptr<_1abd2e2e3_AssignSt>* _96762_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _96913_parts;
	jule::Slice<_1eb22e132_Log> _96920_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(_96740_lefts, static_cast<jule::U32>(5LLU), true);
		_96913_parts = __jule_assign_result.__jule_result_arg0;
		_96920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96920_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_96920_errs);
		return false;;
	};
	{
		auto expr = &(_96913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1c143c1:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _97521_part = *it;
			{
				jule::Bool _97617_isMut = false;;
				jule::Bool _97717_isRef = false;;
				jule::Ptr<_1abd0a38a_Token> _97913_token = _97521_part[0LL];;
				if (((*(_97913_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_97617_isMut=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1ac8e4726_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if (((*(_97521_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_97717_isRef=true;
					(_97521_part).mut_slice(1LL);;
					if ((_97521_part.len() == 0LL)) {
						_1ac8e4726_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
						return false;;
					};
				};
				if ((((*(_97521_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_97521_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1ac8e4726_pushErr(_self_, _97913_token, jule::Str::lit("invalid syntax", 14));
					return false;;
				};
				jule::Ptr<_1abd2dc60_AssignLeft> _100317_l = _1ac8ed301_buildAssignL(_self_, &(_97521_part));;
				(*(_100317_l))._field_Mutable=_97617_isMut;
				(*_100317_l.alloc)._field_Reference=_97717_isRef;
				{ jule::Slice<jule::Ptr<_1abd2dc60_AssignLeft>> &__jule_push_dest = (*((*(_96762_assign))))._field_Left; __jule_push_dest.push(_100317_l); };
			}
			_iter_next_1b1c143c1:;
			++it;
			goto _iter_begin_1b1c143c1;
		}
		_iter_end_1b1c143c1:;
	};
	return true;;
}



inline __jule_tuple_x_1abd2e2e3_AssignSt__jule_tuple_bool _1ac8ee1c0_buildDeclAssign(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _101238_tokens) {
	__jule_tuple_x_1abd2e2e3_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_101238_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_101238_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd0a38a_Token> _101813_token = _101238_tokens[0LL];;
	if (((*(_101813_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1abd2e2e3_AssignSt> _102313_assign = jule::new_ptr<_1abd2e2e3_AssignSt>(_1abd2e2e3_AssignSt{._field_Declarative=true, });;
	jule::I32 _102713_i = 0LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _102813_rang = _1ac9101c0_range(&(_102713_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_101238_tokens));;
	if ((_102813_rang == nullptr)) {
		_1ac8e4726_pushErr(_self_, _101813_token, jule::Str::lit("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_102713_i + 1LL) < _101238_tokens.len())) {
		(*(_102313_assign))._field_Setter=_101238_tokens[_102713_i];
		if (((*((*_102313_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ac8e4726_pushErr(_self_, (*_102313_assign.alloc)._field_Setter, jule::Str::lit("invalid syntax", 14));
		};
		(_102713_i)++;
		jule::Slice<jule::Ptr<_1abd0a38a_Token>> _103817_exprTokens = _101238_tokens.slice(_102713_i);;
		(*_102313_assign.alloc)._field_Right=_1ac912b73_buildExpr((*(_self_))._field_p, &(_103817_exprTokens));
	};
	jule::Bool _10429_ok = _1ac8edd7e_buildDeclAssign1(_self_, &(_102813_rang), &(_102313_assign));;
	__jule_func_result.__jule_result_arg0 = _102313_assign;
	__jule_func_result.__jule_result_arg1 = _10429_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1abd2eea3_StmtData__jule_tuple_bool _1ac8ee511_buildAssignSt(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _104637_tokens) {
	__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ac90d9c6_checkAssignTokens(_104637_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_104637_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b1c239eb:;
			{
				({
					__jule_tuple_x_1abd2e2e3_AssignSt__jule_tuple_bool __jule_assign_result = _1ac8ee1c0_buildDeclAssign(_self_, (*(_104637_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type57);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b1c22b71:;
			{
				({
					__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_assign_result = _1ac8ed983_buildPlainAssign(_self_, _104637_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b1c23116:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1abd2554d_UseExpr> _1ac8ee852_buildUseExpr(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _105936_tokens) {
	if (((*(_105936_tokens)).len() == 1LL)) {
		_1ac8e4726_pushErr(_self_, (*(_105936_tokens))[0LL], jule::Str::lit("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1abd2554d_UseExpr> _106413_ue = jule::new_ptr<_1abd2554d_UseExpr>(_1abd2554d_UseExpr{._field_Token=(*(_105936_tokens))[0LL], });;
	((*(_105936_tokens))).mut_slice(1LL);;
	(*(_106413_ue))._field_Expr=_1ac912b73_buildExpr((*(_self_))._field_p, _105936_tokens);
	return _106413_ue;;
}



inline jule::Any _1ac8eeb93_buildConstSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _107236_st) {
	if (((*((*(_107236_st))))._field_tokens.len() == 1LL)) {
		_1ac8e4726_pushErr(_self_, (*((*(_107236_st))))._field_tokens[0LL], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_107236_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b1c27d63:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1abd34309_Iter> _108017_iter = _1ac8e8829_buildIterSt(_self_, _107236_st);;
				if ((_108017_iter != nullptr)) {
					(*_108017_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_108017_iter, &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b1c27b87:;
			{
				((*((*(_107236_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1abd38132_MatchCase> _108717_mt = _1ac8ec19b_buildMatchCase(_self_, (*((*(_107236_st))))._field_tokens);;
				if ((_108717_mt != nullptr)) {
					(*_108717_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_108717_mt, &__jule_any_type58);;
			}
		}
		else {
			_case_begin_1b1c266be:;
			{
				return jule::Any(_1ac8e5815_buildVarSt(_self_, &((*((*(_107236_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		_match_end_1b1c276c0:;
	};
}



inline jule::Any _1ac8eeed4_buildSt(_1ac8e348e_scopeParser* _self_, jule::Ptr<_1ac8e2aed_stmt>* _109731_st) {
	jule::Ptr<_1abd0a38a_Token> _109813_token = (*((*(_109731_st))))._field_tokens[0LL];;
	if (((*(_109813_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _110017_s;
		jule::Bool _110020_ok;
		({
			__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_assign_result = _1ac8ecb6e_buildIdSt(_self_, &((*((*(_109731_st))))._field_tokens));
			_110017_s = __jule_assign_result.__jule_result_arg0;
			_110020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_110020_ok) {
			return _110017_s;;
		};
	};
	jule::Any _110613_s;
	jule::Bool _110616_ok;
	({
		__jule_tuple__1abd2eea3_StmtData__jule_tuple_bool __jule_assign_result = _1ac8ee511_buildAssignSt(_self_, &((*((*(_109731_st))))._field_tokens));
		_110613_s = __jule_assign_result.__jule_result_arg0;
		_110616_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_110616_ok) {
		return _110613_s;;
	};
	{
		auto &_match_expr{ (*(_109813_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b1c2d93a:;
			{
				return jule::Any(_1ac8ee852_buildUseExpr(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b1c2ddd0:;
			{
				return _1ac8eeb93_buildConstSt(_self_, _109731_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b1c2de46:;
			{
				return jule::Any(_1ac8e5815_buildVarSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1b1c2deac:;
			{
				return jule::Any(_1ac8e5b56_buildRetSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b1c2e023:;
			{
				return jule::Any(_1ac8e8829_buildIterSt(_self_, _109731_st), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b1c2e09a:;
			{
				return jule::Any(_1ac8e8b6a_buildBreakSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1b1c2e122:;
			{
				return jule::Any(_1ac8e8eab_buildContSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1b1c2e199:;
			{
				return jule::Any(_1ac8e997e_buildIfElseChain(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b1c2e221:;
			{
				return jule::Any(_1ac8e9cc0_buildCoCallSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1b1c2e298:;
			{
				return jule::Any(_1ac8ea111_buildGotoSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1b1c2e320:;
			{
				return jule::Any(_1ac8ea452_buildFallSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b1c2e397:;
			{
				return jule::Any(_1ac8ea793_buildTypeAliasSt(_self_, &((*((*(_109731_st))))._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b1c2e41e:;
			{
				return jule::Any(_1ac8ec19b_buildMatchCase(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b1c2e496:;
			{
				if (((*((*(_109731_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1b1c2dc26;
				};
				if ((((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_109731_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1ac8ec4dc_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b1c2e51d:;
			{
				return jule::Any(_1ac8ec4dc_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b1c2e595:;
			{
				return jule::Any(_1ac8ec4dc_buildScopeSt(_self_, (*((*(_109731_st))))._field_tokens), &__jule_any_type50);;
			}
		}
		_match_end_1b1c2dc26:;
	};
	jule::Ptr<_1abd24b79_Expr> _115313_expr = _1ac912b73_buildExpr((*(_self_))._field_p, &((*((*(_109731_st))))._field_tokens));;
	if ((_115313_expr != nullptr)) {
		return jule::Any(_115313_expr, &__jule_any_type51);;
	};
	_1ac8e4726_pushErr(_self_, _109813_token, jule::Str::lit("invalid syntax", 14));
	return nullptr;;
}



inline void _1ac900347_build(_1ac8e348e_scopeParser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _116129_tokens, jule::Ptr<_1abd30866_ScopeTree>* _116152_s) {
	if (((*(_116152_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ac8e2ea5_splitStmts(_116129_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_116152_s));
	while (((!(_1ac8e43b3_isLastSt(_self_))) && (!(_1ac8e412c_finished(_self_))))) {
		{
			jule::Ptr<_1ac8e2aed_stmt> _116917_st = _1ac8e50c8_next(_self_);;
			jule::Any _117017_data = _1ac8eeed4_buildSt(_self_, &(_116917_st));;
			if ((_117017_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,jule::Slice<_1abd30206_Stmt>::make({_1abd30206_Stmt{._field_Token=(*(_116917_st))._field_tokens[0LL], ._field_Data=_117017_data}}));
			};
			if (_1ac8e3d96_stopped(_self_)) {
				goto _iter_end_1b1c3b805;
			};
		}
	_iter_next_1b1c3b805:;
	}
	_iter_end_1b1c3b805:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac8e348e_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ac90169a_pushErr(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1ac9124be_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1ac901a0d_pushSuggestion(_1ac900db4_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1ac912832_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1abd2576d_TupleExpr> _1ac901d4e_buildTuple(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _5434_parts) {
	jule::Ptr<_1abd2576d_TupleExpr> _5513_tuple = jule::new_ptr<_1abd2576d_TupleExpr>(_1abd2576d_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1abd24b79_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1206b17:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _5821_part = *it;
			{
				(*(_5513_tuple))._field_Expr=jule::append((*_5513_tuple.alloc)._field_Expr,jule::Slice<jule::Ptr<_1abd24b79_Expr>>::make({_1ac90b243_buildFromTokens(_self_, _5821_part)}));
			}
			_iter_next_1b1206b17:;
			++it;
			goto _iter_begin_1b1206b17;
		}
		_iter_end_1b1206b17:;
	};
	return _5513_tuple;;
}



inline jule::Ptr<_1abd25b14_LitExpr> _1ac902190_buildLit(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _6427_token) {
	return jule::new_ptr<_1abd25b14_LitExpr>(_1abd25b14_LitExpr{._field_Token=_6427_token, ._field_Value=(*(_6427_token))._field_Kind});;
}



inline jule::Any _1ac902822_buildSingle(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _7534_token) {
	{
		auto &_match_expr{ (*(_7534_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1b1208aa3:;
			{
				return jule::Any(_1ac902190_buildLit(_self_, _7534_token), &__jule_any_type102);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1b1208b2a:;
			{
				return jule::Any(jule::new_ptr<_1abd27110_VariadicExpr>(_1abd27110_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type75);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1b1208b91:;
			{
				return jule::Any(_1ac90c62e_buildIdentExpr(&(_7534_token)), &__jule_any_type79);;
			}
		}
		_match_end_1b12089e8:;
	};
	_1ac90169a_pushErr(_self_, _7534_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1abd26494_IdentExpr> _1ac902b63_buildBindIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _9238_tokens) {
	if (((*((*(_9238_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_9238_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1ac90169a_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd0a38a_Token> _10013_token = (*(_9238_tokens))[2LL];;
	if (((*(_10013_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac90169a_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd26494_IdentExpr> _10613_expr = _1ac90c62e_buildIdentExpr(&(_10013_token));;
	(*(_10613_expr))._field_Binded=true;
	return _10613_expr;;
}



inline jule::Ptr<_1abd26c36_UnaryExpr> _1ac902ea4_buildUnary(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _11133_tokens) {
	jule::Ptr<_1abd0a38a_Token> _11213_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1ac90169a_pushErr(_self_, _11213_op, jule::Str::lit("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1abd0aac7_IsUnaryOp((*(_11213_op))._field_Id)))) {
		_1ac90169a_pushErr(_self_, _11213_op, jule::Str::lit("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any((*_11213_op.alloc)._field_Kind, &__jule_any_type4)}));
		return nullptr;;
	};
	(_11133_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1abd26c36_UnaryExpr>(_1abd26c36_UnaryExpr{._field_Op=_11213_op, ._field_Expr=_1ac90b243_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1abd27c8c_SubIdentExpr> _1ac9032e5_buildObjSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _13239_tokens) {
	jule::I32 _13313_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1abd0a38a_Token> _13413_identToken = _13239_tokens[_13313_i];;
	(_13313_i)--;
	(_13239_tokens).mut_slice(0LL, _13313_i);;
	if ((_13239_tokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, _13413_identToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abd27c8c_SubIdentExpr>(_1abd27c8c_SubIdentExpr{._field_Expr=_1ac90b243_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13413_identToken});;
}



inline jule::Ptr<_1abd278b3_NsSelectionExpr> _1ac903636_buildNsSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _14739_tokens) {
	jule::Ptr<_1abd278b3_NsSelectionExpr> _14813_ns = jule::new_ptr<_1abd278b3_NsSelectionExpr>();;
	if ((((*(_14739_tokens)).len() == 3LL) && ((*((*(_14739_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*_14813_ns.alloc)._field_Ns=(*(_14739_tokens)).slice(0LL, 1LL);
		(*_14813_ns.alloc)._field_Ident=(*(_14739_tokens))[2LL];
	} else {
		{
			auto expr = _14739_tokens;
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b12151ca:;
			if (it != expr_end) {
				jule::I32 _15418_i = it - expr->begin();
				jule::Ptr<_1abd0a38a_Token> _15425_token = *it;
				{
					if (((_15418_i & 1LL) == 0LL)) {
						if (((*(_15425_token))._field_Id != static_cast<jule::U32>(1LLU))) {
							_1ac90169a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
						};
						(*_14813_ns.alloc)._field_Ns=jule::append((*_14813_ns.alloc)._field_Ns,jule::Slice<jule::Ptr<_1abd0a38a_Token>>::make({_15425_token}));
					} else if (((*(_15425_token))._field_Id != static_cast<jule::U32>(19LLU))) {
						_1ac90169a_pushErr(_self_, _15425_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b12151ca:;
				++it;
				_15418_i++;
				goto _iter_begin_1b12151ca;
			}
			_iter_end_1b12151ca:;
		};
		(*_14813_ns.alloc)._field_Ident=(*_14813_ns.alloc)._field_Ns[((*_14813_ns.alloc)._field_Ns.len() - 1LL)];
		((*(_14813_ns))._field_Ns).mut_slice(0LL, ((*(_14813_ns))._field_Ns.len() - 1LL));;
	};
	return _14813_ns;;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac903977_buildType(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _17233_tokens) {
	jule::I32 _17313_i = 0LL;;
	jule::Ptr<_1abd20845_TypeDecl> _17413_t;
	jule::Bool _17416_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, _17233_tokens, (&(_17313_i)), false);
		_17413_t = __jule_assign_result.__jule_result_arg0;
		_17416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_17416_ok))) {
		_1ac90169a_pushErr(_self_, (*(_17233_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_17313_i < (*(_17233_tokens)).len())) {
		_1ac90169a_pushErr(_self_, (*(_17233_tokens))[_17313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _17413_t;;
}



inline jule::Any _1ac903cb8_buildSubIdent(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _18637_tokens) {
	jule::I32 _1879_i = ((*(_18637_tokens)).len() - 2LL);;
	jule::Ptr<_1abd0a38a_Token> _1889_token = (*(_18637_tokens))[_1879_i];;
	{
		auto &_match_expr{ (*(_1889_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1b121d205:;
			{
				return jule::Any(_1ac9032e5_buildObjSubIdent(_self_, (*(_18637_tokens))), &__jule_any_type86);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b121d810:;
			{
				return jule::Any(_1ac903636_buildNsSubIdent(_self_, _18637_tokens), &__jule_any_type90);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b121d876:;
			{
				return jule::Any(_1ac903977_buildType(_self_, _18637_tokens), &__jule_any_type89);;
			}
		}
		_match_end_1b121d48b:;
	};
	if (_1ac90ccc2_isAnonFnHead(_18637_tokens)) {
		return jule::Any(_1ac903977_buildType(_self_, _18637_tokens), &__jule_any_type89);;
	};
	_1ac90169a_pushErr(_self_, _1889_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1abd27110_VariadicExpr> _1ac904109_buildVariadic(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _20836_tokens) {
	jule::Ptr<_1abd0a38a_Token> _20913_token = _20836_tokens[(_20836_tokens.len() - 1LL)];;
	(_20836_tokens).mut_slice(0LL, (_20836_tokens.len() - 1LL));;
	return jule::new_ptr<_1abd27110_VariadicExpr>(_1abd27110_VariadicExpr{._field_Token=_20913_token, ._field_Expr=_1ac90b243_buildFromTokens(_self_, _20836_tokens)});;
}



inline jule::Ptr<_1abd24e43_RangeExpr> _1ac90444a_buildBetweenParentheses(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _21746_tokens) {
	if ((_21746_tokens.len() == 2LL)) {
		_1ac90169a_pushErr(_self_, _21746_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_21746_tokens).mut_slice(1LL, (_21746_tokens.len() - 1LL));;
	return jule::new_ptr<_1abd24e43_RangeExpr>(_1abd24e43_RangeExpr{._field_Expr=_1ac90b243_buildFromTokens(_self_, _21746_tokens)});;
}



inline jule::Ptr<_1abd274d9_CastExpr> _1ac90478b_tryBuildCast(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _22936_tokens) {
	jule::I32 _23013_rangeN = 0LL;;
	{
		auto expr = _22936_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b122401e:;
		if (it != expr_end) {
			jule::I32 _23113_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _23116_token = *it;
			{
				{
					auto &_match_expr{ (*(_23116_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1224a14:;
						{
							(_23013_rangeN)++;
							goto _iter_next_1b122401e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1224ddd:;
						{
							(_23013_rangeN)--;
						}
					}
					_match_end_1b1224d00:;
				};
				if ((_23013_rangeN > 0LL)) {
					goto _iter_next_1b122401e;
				} else if (((_23113_i + 1LL) == (*(_22936_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _25017_typeTokens = (*(_22936_tokens)).slice(0LL, (_23113_i + 1LL));;
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _25117_exprTokens = (*(_22936_tokens)).slice((_23113_i + 1LL));;
				if ((_25117_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1abd0a38a_Token> _25813_tok = _25117_exprTokens[0LL];;
				if (((*(_25813_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1abd274d9_CastExpr> _26317_cast = jule::new_ptr<_1abd274d9_CastExpr>(_1abd274d9_CastExpr{});;
				if ((_25117_exprTokens.len() == 2LL)) {
					_1ac90169a_pushErr(_self_, _25117_exprTokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
					_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_25017_typeTokens.len() == 2LL)) {
					_1ac90169a_pushErr(_self_, _25017_typeTokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					(_25017_typeTokens).mut_slice(1LL, (_25017_typeTokens.len() - 1LL));;
					jule::I32 _27721_typeIndex = 0LL;;
					jule::Ptr<_1abd20845_TypeDecl> _27821_t;
					jule::Bool _27824_ok;
					({
						__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &(_25017_typeTokens), (&(_27721_typeIndex)), true);
						_27821_t = __jule_assign_result.__jule_result_arg0;
						_27824_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_27824_ok && (_27721_typeIndex < _25017_typeTokens.len()))) {
						_1ac90169a_pushErr(_self_, _25017_typeTokens[_27721_typeIndex], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_27824_ok))) {
						return _26317_cast;;
					};
					(*(_26317_cast))._field_Kind=_27821_t;
					if ((_25117_exprTokens.len() > 2LL)) {
						jule::I32 _28825_j = 0LL;;
						_1ac9101c0_range(&(_28825_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_25117_exprTokens));
						if ((_28825_j < _25117_exprTokens.len())) {
							return nullptr;;
						};
						(_25117_exprTokens).mut_slice(0LL, _28825_j);;
						(*_26317_cast.alloc)._field_Expr=_1ac90b243_buildFromTokens(_self_, _25117_exprTokens);
					};
				};
				return _26317_cast;;
			}
			_iter_next_1b122401e:;
			++it;
			_23113_i++;
			goto _iter_begin_1b122401e;
		}
		_iter_end_1b122401e:;
	};
	return nullptr;;
}



inline void _1ac904ba9_pushArg(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd24b79_Expr>>* _30331_args, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _30350_tokens, jule::Ptr<_1abd0a38a_Token> _30368_err_token) {
	if ((_30350_tokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, _30368_err_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1abd24b79_Expr>> &__jule_push_dest = (*(_30331_args)); __jule_push_dest.push(_1ac90b243_buildFromTokens(_self_, _30350_tokens)); };
}



inline jule::Slice<jule::Ptr<_1abd24b79_Expr>> _1ac904eea_buildArgs(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _31232_tokens) {
	if ((_31232_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _31817_args = nullptr;;
	jule::I32 _31913_last = 0LL;;
	jule::I32 _32013_rangeN = 0LL;;
	(_31232_tokens).mut_slice(1LL, (_31232_tokens.len() - 1LL));;
	{
		auto expr = &(_31232_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d42d18:;
		if (it != expr_end) {
			jule::I32 _32213_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _32216_token = *it;
			{
				{
					auto &_match_expr{ (*(_32216_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1d43621:;
						{
							(_32013_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1d439ea:;
						{
							(_32013_rangeN)--;
						}
					}
					_match_end_1b1d4390c:;
				};
				if (((_32013_rangeN > 0LL) || ((*(_32216_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b1d42d18;
				};
				_1ac904ba9_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last, _32213_i), _32216_token);
				_31913_last=(_32213_i + 1LL);
			}
			_iter_next_1b1d42d18:;
			++it;
			_32213_i++;
			goto _iter_begin_1b1d42d18;
		}
		_iter_end_1b1d42d18:;
	};
	if ((_31913_last < _31232_tokens.len())) {
		if ((_31913_last == 0LL)) {
			if ((_31232_tokens.len() > 0LL)) {
				_1ac904ba9_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[_31913_last]);
			};
		} else {
			_1ac904ba9_pushArg(_self_, &(_31817_args), _31232_tokens.slice(_31913_last), _31232_tokens[(_31913_last - 1LL)]);
		};
	};
	return _31817_args;;
}



inline jule::Ptr<_1abd288a3_FnCallExpr> _1ac9057e2_buildFnCall(_1ac900db4_exprBuilder* _self_, jule::Ptr<_1abd0a38a_Token>* _37835_token, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37855_expr, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37876_args) {
	return jule::new_ptr<_1abd288a3_FnCallExpr>(_1abd288a3_FnCallExpr{._field_Token=(*(_37835_token)), ._field_Expr=_1ac90b243_buildFromTokens(_self_, (*(_37855_expr))), ._field_Args=_1ac904eea_buildArgs(_self_, (*(_37876_args))), });;
}



inline jule::Any _1ac905b33_buildParenthesesRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _38645_tokens) {
	jule::Ptr<_1abd0a38a_Token> _38713_token = (*(_38645_tokens))[0LL];;
	if (((*(_38713_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1abd274d9_CastExpr> _38917_expr = _1ac90478b_tryBuildCast(_self_, _38645_tokens);;
		if ((_38917_expr != nullptr)) {
			return jule::Any(_38917_expr, &__jule_any_type106);;
		};
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39413_exprTokens;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39429_argsTokens;
	({
		__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_assign_result = _1ac910489_rangeLast(_38645_tokens);
		_39413_exprTokens = __jule_assign_result.__jule_result_arg0;
		_39429_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_39413_exprTokens.len() == 0LL)) {
		return jule::Any(_1ac90444a_buildBetweenParentheses(_self_, _39429_argsTokens), &__jule_any_type101);;
	};
	if (_1ac90ccc2_isAnonFnHead(&(_39413_exprTokens))) {
		return jule::Any(_1ac903977_buildType(_self_, _38645_tokens), &__jule_any_type89);;
	};
	return jule::Any(_1ac9057e2_buildFnCall(_self_, &(_38713_token), &(_39413_exprTokens), &(_39429_argsTokens)), &__jule_any_type82);;
}



inline jule::Ptr<_1abd25edd_UnsafeExpr> _1ac905e74_buildUnsafeExpr(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _40838_tokens) {
	jule::Ptr<_1abd0a38a_Token> _40913_token = _40838_tokens[0LL];;
	(_40838_tokens).mut_slice(1LL);;
	jule::I32 _41113_i = 0LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _41213_rangeTokens = _1ac9101c0_range(&(_41113_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40838_tokens));;
	if ((_41213_rangeTokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, _40838_tokens[0LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abd25edd_UnsafeExpr>(_1abd25edd_UnsafeExpr{._field_Token=_40913_token, ._field_Expr=_1ac90b243_buildFromTokens(_self_, _41213_rangeTokens)});;
}



inline jule::Ptr<_1abd32505_FnDecl> _1ac9062b5_buildAnonFn(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _42335_tokens) {
	jule::Ptr<_1abd32505_FnDecl> _42413_f = _1ac91865c_buildFn((*(_self_))._field_p, _42335_tokens, false, false);;
	if ((!(_1abd32868_IsAnon(_42413_f.ptr())))) {
		_1ac90169a_pushErr(_self_, (*_42413_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _42413_f;;
}



inline jule::Any _1ac906606_buildUnsafe(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _43235_tokens) {
	{
		auto &_match_expr{ (*((*(_43235_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b1d55e80:;
			{
				return jule::Any(_1ac9062b5_buildAnonFn(_self_, _43235_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b1d55347:;
			{
				return jule::Any(_1ac905e74_buildUnsafeExpr(_self_, (*(_43235_tokens))), &__jule_any_type103);;
			}
		}
		_match_end_1b1d55787:;
	};
}



inline void _1ac906a24_pushRangeLitPart(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _44239_part, jule::Ptr<_1abd0a38a_Token> _4439_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>* _44334_parts) {
	if ((_44239_part.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, _4439_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> &__jule_push_dest = (*(_44334_parts)); __jule_push_dest.push(_44239_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac906d65_getBraceRangeLitExprParts(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _45348_tokens) {
	if ((_45348_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _45917_parts = nullptr;;
	jule::I32 _46113_last = 0LL;;
	jule::I32 _46213_rangeN = 0LL;;
	(_45348_tokens).mut_slice(1LL, (_45348_tokens.len() - 1LL));;
	{
		auto expr = &(_45348_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d598bd:;
		if (it != expr_end) {
			jule::I32 _46413_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _46416_token = *it;
			{
				{
					auto &_match_expr{ (*(_46416_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1d5a1c6:;
						{
							(_46213_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1d5a5a0:;
						{
							(_46213_rangeN)--;
						}
					}
					_match_end_1b1d5a4b2:;
				};
				if (((_46213_rangeN > 0LL) || ((*(_46416_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b1d598bd;
				};
				_1ac906a24_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last, _46413_i), _46416_token, &(_45917_parts));
				_46113_last=(_46413_i + 1LL);
			}
			_iter_next_1b1d598bd:;
			++it;
			_46413_i++;
			goto _iter_begin_1b1d598bd;
		}
		_iter_end_1b1d598bd:;
	};
	if ((_46113_last < _45348_tokens.len())) {
		if ((_46113_last == 0LL)) {
			if ((_45348_tokens.len() > 0LL)) {
				_1ac906a24_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[_46113_last], &(_45917_parts));
			};
		} else {
			_1ac906a24_pushRangeLitPart(_self_, _45348_tokens.slice(_46113_last), _45348_tokens[(_46113_last - 1LL)], &(_45917_parts));
		};
	};
	return _45917_parts;;
}



inline jule::Ptr<_1abd29398_FieldExprPair> _1ac9071a6_buildFieldExprPair(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _49541_tokens) {
	if (((_49541_tokens.len() - 2LL) == 0LL)) {
		_1ac90169a_pushErr(_self_, _49541_tokens[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd29398_FieldExprPair> _50013_pair = jule::new_ptr<_1abd29398_FieldExprPair>(_1abd29398_FieldExprPair{._field_Field=_49541_tokens[0LL], });;
	(_49541_tokens).mut_slice(2LL);;
	(*(_50013_pair))._field_Expr=_1ac90b243_buildFromTokens(_self_, _49541_tokens);
	return _50013_pair;;
}



inline jule::Ptr<_1abd24b79_Expr> _1ac9074e7_buildStructLitExpr(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _50842_tokens) {
	jule::Ptr<_1abd0a38a_Token> _50913_token = (*(_50842_tokens))[0LL];;
	if ((((*(_50913_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_50842_tokens)).len() > 1LL))) {
		_50913_token=(*(_50842_tokens))[1LL];
		if (((*_50913_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1abd24b79_Expr>(_1abd24b79_Expr{._field_Token=_50913_token, ._field_End=(*(_50842_tokens))[((*(_50842_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ac9071a6_buildFieldExprPair(_self_, (*(_50842_tokens))), &__jule_any_type77)});;
		};
	};
	return _1ac90b243_buildFromTokens(_self_, (*(_50842_tokens)));;
}



inline jule::Slice<jule::Ptr<_1abd24b79_Expr>> _1ac907838_buildStructLitExprs(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _52343_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _52413_parts = _1ac906d65_getBraceRangeLitExprParts(_self_, (*(_52343_tokens)));;
	if ((_52413_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd24b79_Expr>> _52913_pairs = jule::Slice<jule::Ptr<_1abd24b79_Expr>>::alloc(0LL, _52413_parts.len());;
	{
		auto expr = &(_52413_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d63dc2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _53021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd24b79_Expr>> &__jule_push_dest = _52913_pairs; __jule_push_dest.push(_1ac9074e7_buildStructLitExpr(_self_, &(_53021_part))); };
			}
			_iter_next_1b1d63dc2:;
			++it;
			goto _iter_begin_1b1d63dc2;
		}
		_iter_end_1b1d63dc2:;
	};
	return _52913_pairs;;
}



inline jule::Ptr<_1abd29bc3_StructLit> _1ac907b79_buildTypedStructLiteral(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _53646_tokens) {
	jule::I32 _53713_i = 0LL;;
	jule::Ptr<_1abd20845_TypeDecl> _53813_t;
	jule::Bool _53816_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &(_53646_tokens), (&(_53713_i)), true);
		_53813_t = __jule_assign_result.__jule_result_arg0;
		_53816_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_53816_ok))) {
		return nullptr;;
	} else if ((_53713_i >= _53646_tokens.len())) {
		_1ac90169a_pushErr(_self_, _53646_tokens[_53713_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_53646_tokens).mut_slice(_53713_i);;
	jule::Ptr<_1abd0a38a_Token> _5479_token = _53646_tokens[0LL];;
	if (((*(_5479_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1ac90169a_pushErr(_self_, _5479_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abd29bc3_StructLit>(_1abd29bc3_StructLit{._field_End=_53646_tokens[(_53646_tokens.len() - 1LL)], ._field_Kind=_53813_t, ._field_Exprs=_1ac907838_buildStructLitExprs(_self_, &(_53646_tokens))});;
}



inline jule::Ptr<_1abd24b79_Expr> _1ac907eba_buildBraceLitPart(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _56041_tokens) {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _56113_l;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _56120_r;
	({
		__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_assign_result = _1ac90c09b_splitDelim(_56041_tokens, static_cast<jule::U32>(8LLU));
		_56113_l = __jule_assign_result.__jule_result_arg0;
		_56120_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_56113_l != nullptr)) {
		return jule::new_ptr<_1abd24b79_Expr>(_1abd24b79_Expr{._field_Token=(*(_56041_tokens))[0LL], ._field_End=(*(_56041_tokens))[((*(_56041_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1abd2a9a4_KeyValPair>(_1abd2a9a4_KeyValPair{._field_Key=_1ac90b243_buildFromTokens(_self_, _56113_l), ._field_Val=_1ac90b243_buildFromTokens(_self_, _56120_r), ._field_Colon=(*(_56041_tokens))[_56113_l.len()]}), &__jule_any_type78)});;
	};
	return _1ac90b243_buildFromTokens(_self_, (*(_56041_tokens)));;
}



inline jule::Ptr<_1abd2a179_BraceLit> _1ac90830b_buildBraceLit(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _57737_tokens) {
	jule::Ptr<_1abd2a179_BraceLit> _57813_lit = jule::new_ptr<_1abd2a179_BraceLit>(_1abd2a179_BraceLit{._field_Token=(*(_57737_tokens))[0LL], ._field_End=(*(_57737_tokens))[((*(_57737_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _58313_parts = _1ac906d65_getBraceRangeLitExprParts(_self_, (*(_57737_tokens)));;
	if ((_58313_parts == nullptr)) {
		return _57813_lit;;
	};
	(*(_57813_lit))._field_Exprs=jule::Slice<jule::Ptr<_1abd24b79_Expr>>::alloc(0LL, _58313_parts.len());
	{
		auto expr = &(_58313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d6d75b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _58921_part = *it;
			{
				(*_57813_lit.alloc)._field_Exprs=jule::append((*_57813_lit.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1abd24b79_Expr>>::make({_1ac907eba_buildBraceLitPart(_self_, &(_58921_part))}));
			}
			_iter_next_1b1d6d75b:;
			++it;
			goto _iter_begin_1b1d6d75b;
		}
		_iter_end_1b1d6d75b:;
	};
	return _57813_lit;;
}



inline jule::Any _1ac90864c_buildBraceRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _59639_tokens) {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _59713_exprTokens;
	jule::I32 _59725_rangeN;
	({
		__jule_tuple_sx_1abd0a38a_Token__jule_tuple_int __jule_assign_result = _1ac90c8e8_getRangeExprTokens(_59639_tokens);
		_59713_exprTokens = __jule_assign_result.__jule_result_arg0;
		_59725_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_59713_exprTokens.len() == 0LL)) {
			_case_begin_1b1d70384:;
			{
				return jule::Any(_1ac90830b_buildBraceLit(_self_, _59639_tokens), &__jule_any_type108);;
			}
		}
		else if ((_59725_rangeN > 0LL)) {
			_case_begin_1b1d7042d:;
			{
				_1ac90169a_pushErr(_self_, (*(_59639_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1d702eb:;
	};
	jule::Ptr<_1abd0a38a_Token> _6089_elseToken = _59713_exprTokens[(_59713_exprTokens.len() - 1LL)];;
	if (((*(_59713_exprTokens[(_59713_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_59713_exprTokens).mut_slice(0LL, (_59713_exprTokens.len() - 1LL));;
		jule::Any _61117_d = _1ac90aab1_build(_self_, &(_59713_exprTokens));;
		if ((_61117_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _61117_d };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1b1d73b5c:;
				{
					((*(_59639_tokens))).mut_slice((_59713_exprTokens.len() + 1LL));;
					jule::I32 _61821_i = 0LL;;
					jule::Slice<jule::Ptr<_1abd0a38a_Token>> _61921_rangeTokens = _1ac9101c0_range(&(_61821_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _59639_tokens);;
					jule::Ptr<_1abd288a3_FnCallExpr> _62021_model = _61117_d.unsafe_cast_ptr<_1abd288a3_FnCallExpr>();;
					if (_1abd28ead_Ignored(_62021_model.ptr())) {
						_1ac90169a_pushErr(_self_, _6089_elseToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					(*_62021_model.alloc)._field_Exception=_1ac913668_buildScope((*(_self_))._field_p, &(_61921_rangeTokens), (*(_59639_tokens))[(_61821_i - 1LL)]);
					return _61117_d;;
				}
			}
			else {
				_case_begin_1b1d73189:;
				{
					_1ac90169a_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b1d73134:;
		};
	};
	{
		auto &_match_expr{ (*(_59713_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b1d77cb5:;
			{
				return _1ac906606_buildUnsafe(_self_, _59639_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b1d77d2b:;
			{
				return jule::Any(_1ac9062b5_buildAnonFn(_self_, _59639_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b1d77d92:;
			{
				return jule::Any(_1ac907b79_buildTypedStructLiteral(_self_, (*(_59639_tokens))), &__jule_any_type107);;
			}
		}
		else {
			_case_begin_1b1d73200:;
			{
				_1ac90169a_pushErr(_self_, _59713_exprTokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1d77237:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac90898d_getEnumerableParts(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _64841_tokens) {
	(_64841_tokens).mut_slice(1LL, (_64841_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _65013_parts;
	jule::Slice<_1eb22e132_Log> _65020_errors;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&(_64841_tokens), static_cast<jule::U32>(5LLU), true);
		_65013_parts = __jule_assign_result.__jule_result_arg0;
		_65020_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_65020_errors);
	return _65013_parts;;
}



inline jule::Ptr<_1abd2b1d0_SliceExpr> _1ac908cce_buildSlice(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _65533_tokens) {
	jule::Ptr<_1abd2b1d0_SliceExpr> _65613_slc = jule::new_ptr<_1abd2b1d0_SliceExpr>(_1abd2b1d0_SliceExpr{._field_Token=_65533_tokens[0LL], ._field_End=_65533_tokens[(_65533_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _66113_parts = _1ac90898d_getEnumerableParts(_self_, _65533_tokens);;
	if ((_66113_parts.len() == 0LL)) {
		return _65613_slc;;
	};
	(*(_65613_slc))._field_Exprs=jule::Slice<jule::Ptr<_1abd24b79_Expr>>::alloc(0LL, _66113_parts.len());
	{
		auto expr = &(_66113_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d7cc98:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _66721_p = *it;
			{
				if ((_66721_p.len() == 0LL)) {
					goto _iter_next_1b1d7cc98;
				};
				(*_65613_slc.alloc)._field_Exprs=jule::append((*_65613_slc.alloc)._field_Exprs,jule::Slice<jule::Ptr<_1abd24b79_Expr>>::make({_1ac90b243_buildFromTokens(_self_, _66721_p)}));
			}
			_iter_next_1b1d7cc98:;
			++it;
			goto _iter_begin_1b1d7cc98;
		}
		_iter_end_1b1d7cc98:;
	};
	return _65613_slc;;
}



inline jule::Ptr<_1abd2bb3c_IndexingExpr> _1ac909285_buildIndexing(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67736_exprTokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67813_tokens, jule::Ptr<_1abd0a38a_Token> _67835_errorToken) {
	jule::Ptr<_1abd0a38a_Token> _67913_end = _67813_tokens[(_67813_tokens.len() - 1LL)];;
	(_67813_tokens).mut_slice(1LL, (_67813_tokens.len() - 1LL));;
	if ((_67813_tokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, _67835_errorToken, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd24b79_Expr> _68513_expr = _1ac90b243_buildFromTokens(_self_, _67736_exprTokens);;
	if ((_68513_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd24b79_Expr> _68913_index = _1ac90b243_buildFromTokens(_self_, _67813_tokens);;
	if ((_68913_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd2bb3c_IndexingExpr>(_1abd2bb3c_IndexingExpr{._field_Token=_67835_errorToken, ._field_End=_67913_end, ._field_Expr=_68513_expr, ._field_Index=_68913_index});;
}



inline jule::Ptr<_1abd2c29c_SlicingExpr> _1ac9098a1_buildSlicing(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70136_exprTokens, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70163_start, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _70214_to, jule::Ptr<_1abd0a38a_Token>* _70233_errorToken, jule::Ptr<_1abd0a38a_Token> _70257_end) {
	jule::Ptr<_1abd2c29c_SlicingExpr> _70313_slc = jule::new_ptr<_1abd2c29c_SlicingExpr>(_1abd2c29c_SlicingExpr{._field_Token=(*(_70233_errorToken)), ._field_End=_70257_end, ._field_Expr=_1ac90b243_buildFromTokens(_self_, (*(_70136_exprTokens))), });;
	if (((*(_70163_start)).len() > 0LL)) {
		(*(_70313_slc))._field_Start=_1ac90b243_buildFromTokens(_self_, (*(_70163_start)));
	};
	if (((*(_70214_to)).len() > 0LL)) {
		(*_70313_slc.alloc)._field_To=_1ac90b243_buildFromTokens(_self_, (*(_70214_to)));
	};
	return _70313_slc;;
}



inline jule::Any _1ac909be2_buildBracketRange(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _71740_tokens) {
	jule::Ptr<_1abd0a38a_Token> _71813_errorToken = _71740_tokens[0LL];;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _71913_exprTokens;
	jule::I32 _71925_rangeN;
	({
		__jule_tuple_sx_1abd0a38a_Token__jule_tuple_int __jule_assign_result = _1ac90c8e8_getRangeExprTokens(&(_71740_tokens));
		_71913_exprTokens = __jule_assign_result.__jule_result_arg0;
		_71925_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_71913_exprTokens.len() == 0LL)) {
		return jule::Any(_1ac908cce_buildSlice(_self_, _71740_tokens), &__jule_any_type94);;
	} else if ((_71925_rangeN > 0LL)) {
		_1ac90169a_pushErr(_self_, _71813_errorToken, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_71740_tokens).mut_slice(_71913_exprTokens.len());;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _73413_splitTokens = _71740_tokens.slice(1LL, (_71740_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _73513_start;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _73524_to;
	({
		__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_assign_result = _1ac90c09b_splitDelim(&(_73413_splitTokens), static_cast<jule::U32>(8LLU));
		_73513_start = __jule_assign_result.__jule_result_arg0;
		_73524_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_73513_start != nullptr) || (_73524_to != nullptr))) {
		return jule::Any(_1ac9098a1_buildSlicing(_self_, &(_71913_exprTokens), &(_73513_start), &(_73524_to), &(_71813_errorToken), _71740_tokens[(_71740_tokens.len() - 1LL)]), &__jule_any_type105);;
	};
	return jule::Any(_1ac909285_buildIndexing(_self_, _71913_exprTokens, _71740_tokens, _71813_errorToken), &__jule_any_type104);;
}



inline jule::Any _1ac90a033_buildExclRight(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _74238_tokens) {
	jule::Ptr<_1abd0a38a_Token> _7439_token = (*(_74238_tokens))[((*(_74238_tokens)).len() - 1LL)];;
	((*(_74238_tokens))).mut_slice(0LL, ((*(_74238_tokens)).len() - 1LL));;
	jule::Any _74513_d = _1ac90aab1_build(_self_, _74238_tokens);;
	if ((_74513_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _74513_d };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b1d8ad72:;
			{
				(*(_74513_d.unsafe_cast_ptr<_1abd288a3_FnCallExpr>()))._field_Exception=jule::new_ptr<_1abd30866_ScopeTree>(_1abd30866_ScopeTree{._field_Deferred=true, });
				return _74513_d;;
			}
		}
		_match_end_1b1d8ad1c:;
	};
	_1ac90169a_pushErr(_self_, _7439_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ac90a374_buildData(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _76033_tokens) {
	{
		auto _match_expr{ (*(_76033_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b1d8c4c2:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b1d8c549:;
			{
				return _1ac902822_buildSingle(_self_, (*(_76033_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b1d8c5b0:;
			{
				if (((*((*(_76033_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1ac902b63_buildBindIdent(_self_, _76033_tokens), &__jule_any_type79);;
				};
			}
		}
		_match_end_1b1d8c329:;
	};
	jule::Ptr<_1abd0a38a_Token> _77213_token = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
	if (((*(_77213_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1ac904109_buildVariadic(_self_, (*(_76033_tokens))), &__jule_any_type75);;
	};
	_77213_token=(*(_76033_tokens))[0LL];
	if (_1abd0aac7_IsUnaryOp((*_77213_token.alloc)._field_Id)) {
		if (((*(_76033_tokens)).len() > 1LL)) {
			_77213_token=(*(_76033_tokens))[1LL];
			if (((*_77213_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1ac903977_buildType(_self_, _76033_tokens), &__jule_any_type89);;
			};
		};
		return jule::Any(_1ac902ea4_buildUnary(_self_, (*(_76033_tokens))), &__jule_any_type88);;
	};
	if (((*(_76033_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_77213_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1b1d92076:;
				{
					if (((*(_76033_tokens)).len() > 3LL)) {
						jule::Ptr<_1abd0a38a_Token> _79821_t = (*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];;
						if (((*(_79821_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1b1d91ecc;
						};
					};
					jule::Ptr<_1abd0a38a_Token> _80417_next = (*(_76033_tokens))[1LL];;
					if (((*(_80417_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1b1d91ecc;
					};
					return jule::Any(_1ac903977_buildType(_self_, _76033_tokens), &__jule_any_type89);;
				}
			}
			_match_end_1b1d91ecc:;
		};
	};
	_77213_token=(*(_76033_tokens))[((*(_76033_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_77213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b1d95233:;
			{
				return _1ac903cb8_buildSubIdent(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b1d952aa:;
			{
				return _1ac90a033_buildExclRight(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b1d95321:;
			{
				return _1ac905b33_buildParenthesesRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b1d95387:;
			{
				return _1ac90864c_buildBraceRange(_self_, _76033_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b1d953ed:;
			{
				return _1ac909be2_buildBracketRange(_self_, (*(_76033_tokens)));;
			}
		}
		_match_end_1b1d951cd:;
	};
	_1ac90169a_pushErr(_self_, _77213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ac90a770_buildBinary(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _82935_tokens, jule::I32 _82953_i) {
	jule::Ptr<_1abd0a38a_Token> _83013_op = (*(_82935_tokens))[_82953_i];;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _83113_leftTokens = (*(_82935_tokens)).slice(0LL, _82953_i);;
	if ((_1ac90b60b_isTypeOp(&((*(_83013_op))._field_Id)) && _1ac90b919_isTypeRange(&(_83113_leftTokens)))) {
		return jule::Any(_1ac903977_buildType(_self_, _82935_tokens), &__jule_any_type89);;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _83613_rightTokens = (*(_82935_tokens)).slice((_82953_i + 1LL));;
	if ((_83113_leftTokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83613_rightTokens.len() == 0LL)) {
		_1ac90169a_pushErr(_self_, (*(_82935_tokens))[_82953_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac901a0d_pushSuggestion(_self_, jule::Str::lit("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1abd28243_BinaryExpr>(_1abd28243_BinaryExpr{._field_Left=_1ac90b243_buildFromTokens(_self_, _83113_leftTokens), ._field_Right=_1ac90b243_buildFromTokens(_self_, _83613_rightTokens), ._field_Op=_83013_op}), &__jule_any_type109);;
}



inline jule::Any _1ac90aab1_build(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _85429_tokens) {
	if (((*((*(_85429_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1ac903977_buildType(_self_, _85429_tokens), &__jule_any_type89);;
	};
	jule::I32 _8589_i = _1ac90c365_findLowestPrecOp(_85429_tokens);;
	if ((_8589_i == -1LL)) {
		return _1ac90a374_buildData(_self_, _85429_tokens);;
	};
	return _1ac90a770_buildBinary(_self_, _85429_tokens, _8589_i);;
}



inline jule::Any _1ac90ae02_buildKind(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _86533_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _86613_parts;
	jule::Slice<_1eb22e132_Log> _86620_errors;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(_86533_tokens, static_cast<jule::U32>(5LLU), true);
		_86613_parts = __jule_assign_result.__jule_result_arg0;
		_86620_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86620_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_86620_errors);
		return nullptr;;
	} else if ((_86613_parts.len() > 1LL)) {
		return jule::Any(_1ac901d4e_buildTuple(_self_, &(_86613_parts)), &__jule_any_type80);;
	};
	return _1ac90aab1_build(_self_, _86533_tokens);;
}



inline jule::Ptr<_1abd24b79_Expr> _1ac90b243_buildFromTokens(_1ac900db4_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _87638_tokens) {
	if ((_87638_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _88013_kind = _1ac90ae02_buildKind(_self_, &(_87638_tokens));;
	if ((_88013_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd24b79_Expr>(_1abd24b79_Expr{._field_Token=_87638_tokens[0LL], ._field_End=_87638_tokens[(_87638_tokens.len() - 1LL)], ._field_Kind=_88013_kind});;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac900db4_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac90d61e_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ac911d1a_stop(_1ac911a1d_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ac9120a1_stopped(_1ac911a1d_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ac9124be_pushErr(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token> _20826_token, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac911105_compilerErr(&(_20826_token), &(_20841_fmt), _20854_args)); };
}



inline void _1ac912832_pushSuggestion(_1ac911a1d_parser* _self_, jule::Str _21333_fmt, jule::Slice<jule::Any> _21346_args) {
	{
		_1ac91149b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _21333_fmt, _21346_args);
	};
}



inline jule::Ptr<_1abd24b79_Expr> _1ac912b73_buildExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _21734_tokens) {
	return _1ac90b243_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_21734_tokens)));;
}



inline jule::Ptr<_1abd1ec62_Directive> _1ac912eb4_buildDirective(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _22137_tokens) {
	if ((_22137_tokens.len() == 1LL)) {
		_1ac9124be_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_22137_tokens[1LL]))._field_Column != ((*(_22137_tokens[0LL]))._field_Column + 1LL))) {
		_1ac9124be_pushErr(_self_, _22137_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abd1ec62_Directive>(_1abd1ec62_Directive{._field_Tag=_22137_tokens[1LL], ._field_Args=_22137_tokens.slice(2LL)});;
}



inline void _1ac91326c_pushDirective(_1ac911a1d_parser* _self_, jule::Ptr<_1abd1ec62_Directive> _23636_d) {
	if ((_23636_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1dc2161:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _24116_pd = *it;
			{
				if (((*((*(_23636_d))._field_Tag))._field_Kind == (*(*(_24116_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b1dc2161:;
			++it;
			goto _iter_begin_1b1dc2161;
		}
		_iter_end_1b1dc2161:;
	};
	{ jule::Slice<jule::Ptr<_1abd1ec62_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_23636_d); };
}



inline jule::Ptr<_1abd30866_ScopeTree> _1ac913668_buildScope(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _24935_tokens, jule::Ptr<_1abd0a38a_Token> _24957_end) {
	jule::Ptr<_1abd30866_ScopeTree> _25013_s = _1ac8e1877_newScope();;
	(*(_25013_s))._field_End=_24957_end;
	_1ac8e348e_scopeParser _25213_sp = _1ac8e348e_scopeParser{._field_p=_self_, };;
	_1ac900347_build(&_25213_sp, _24935_tokens, &(_25013_s));
	return _25013_s;;
}



inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac913b1e__buildType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _25942_tokens, jule::I32* _26013_i, jule::Bool _26022_err) {
	__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ac923b40_typeBuilder _26113_tb = _1ac923b40_typeBuilder{._field_p=_self_, ._field_tokens=(*(_25942_tokens)), ._field_i=_26013_i, ._field_err=_26022_err};;
	__jule_func_result = std::move(_1ac926b21_build(&_26113_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac9140c5_buildType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _27141_tokens, jule::I32* _27213_i, jule::Bool _27222_err) {
	__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abd0a38a_Token> _2739_token = (*(_27141_tokens))[(*(_27213_i))];;
	jule::Ptr<_1abd20845_TypeDecl> _27413_t;
	jule::Bool _27416_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac913b1e__buildType(_self_, _27141_tokens, _27213_i, _27222_err);
		_27413_t = __jule_assign_result.__jule_result_arg0;
		_27416_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_27222_err && (!(_27416_ok)))) {
		_1ac9124be_pushErr(_self_, _2739_token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _27413_t;
	__jule_func_result.__jule_result_arg1 = _27416_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac914416_buildTypeAliasDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _28143_tokens) {
	jule::I32 _28213_i = 1LL;;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1ac9124be_pushErr(_self_.ptr(), (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd37362_TypeAliasDecl> _28713_tad = jule::new_ptr<_1abd37362_TypeAliasDecl>(_1abd37362_TypeAliasDecl{._field_Token=(*(_28143_tokens))[1LL], ._field_Ident=(*((*(_28143_tokens))[1LL]))._field_Kind, });;
	jule::Ptr<_1abd0a38a_Token> _29113_token = (*(_28143_tokens))[_28213_i];;
	if (((*(_29113_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, _29113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	_29113_token=(*(_28143_tokens))[_28213_i];
	if (((*_29113_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_1ac9124be_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	(_28213_i)++;
	if ((_28213_i >= (*(_28143_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_28143_tokens))[(_28213_i - 1LL)], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return _28713_tad;;
	};
	jule::Ptr<_1abd20845_TypeDecl> _31213_t;
	jule::Bool _31216_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _28143_tokens, (&(_28213_i)), true);
		_31213_t = __jule_assign_result.__jule_result_arg0;
		_31216_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_28713_tad))._field_Kind=_31213_t;
	if ((_31216_ok && (_28213_i < (*(_28143_tokens)).len()))) {
		_1ac9124be_pushErr(_self_, (*(_28143_tokens))[_28213_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_28713_tad.alloc)._field_Public=_1ab694a6b_IsPub((*_28713_tad.alloc)._field_Ident);
	return _28713_tad;;
}



inline void _1ac914779_buildVarTypeAndExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd336b0_VarDecl>* _32144_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _32162_tokens) {
	jule::I32 _32213_i = 0LL;;
	jule::Ptr<_1abd0a38a_Token> _32313_tok = (*(_32162_tokens))[_32213_i];;
	if (((*(_32313_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_32213_i)++;
		if (((_32213_i >= (*(_32162_tokens)).len()) || ((*((*(_32162_tokens))[_32213_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1ac9124be_pushErr(_self_.ptr(), _32313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1abd20845_TypeDecl> _33017_t;
		jule::Bool _33020_ok;
		({
			__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _32162_tokens, (&(_32213_i)), true);
			_33017_t = __jule_assign_result.__jule_result_arg0;
			_33020_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_33020_ok) {
			(*((*(_32144_v))))._field_Kind=_33017_t;
			if ((_32213_i >= (*(_32162_tokens)).len())) {
				return;;
			};
			_32313_tok=(*(_32162_tokens))[_32213_i];
		};
	};
	if (((*_32313_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_1ac9124be_pushErr(_self_, _32313_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Setter=_32313_tok;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _34613_exprTokens = (*(_32162_tokens)).slice((_32213_i + 1LL));;
	if ((_34613_exprTokens.len() == 0LL)) {
		_1ac9124be_pushErr(_self_, _32313_tok, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32144_v))))._field_Expr=_1ac912b73_buildExpr(_self_, &(_34613_exprTokens));
}



inline void _1ac914adc_buildVarCommon(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd336b0_VarDecl>* _35439_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _35456_tokens) {
	(*((*(_35439_v))))._field_Token=_35456_tokens[0LL];
	if (((*((*((*(_35439_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_.ptr(), (*((*(_35439_v))))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_35439_v))))._field_Ident=(*(*((*(_35439_v))))._field_Token.alloc)._field_Kind;
	(*((*(_35439_v))))._field_Public=_1ab694a6b_IsPub((*((*(_35439_v))))._field_Ident);
	(*((*(_35439_v))))._field_Kind=nullptr;
	if ((_35456_tokens.len() > 1LL)) {
		(_35456_tokens).mut_slice(1LL);;
		_1ac914779_buildVarTypeAndExpr(_self_, _35439_v, &(_35456_tokens));
	};
}



inline void _1ac914e50_buildVarBegin(_1ac911a1d_parser* _self_, jule::Ptr<_1abd336b0_VarDecl>* _37037_v, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _37055_tokens) {
	jule::Ptr<_1abd0a38a_Token> _3719_tok = (*(_37055_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3719_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b1ddcd2a:;
			{
				(*((*(_37037_v))))._field_Statically=true;
				goto _case_begin_1b1ddc9a6;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b1ddc9a6:;
			{
				if (((*(_37055_tokens)).len() == 1LL)) {
					(*(_37055_tokens))=nullptr;
					_1ac9124be_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				((*(_37055_tokens))).mut_slice(1LL);;
				if (((*((*(_37055_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_37037_v))))._field_Mutable=true;
					((*(_37055_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b1ddc698:;
			{
				(*((*(_37037_v))))._field_Constant=true;
				((*(_37055_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1b1ddc368:;
			{
				(*(_37055_tokens))=nullptr;
				_1ac9124be_pushErr(_self_, _3719_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1ddc643:;
	};
}



inline jule::Ptr<_1abd336b0_VarDecl> _1ac915291_buildVar(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _39832_tokens) {
	jule::Ptr<_1abd336b0_VarDecl> _39913_v = jule::new_ptr<_1abd336b0_VarDecl>(_1abd336b0_VarDecl{._field_Token=_39832_tokens[0LL], });;
	_1ac914e50_buildVarBegin(_self_.ptr(), &(_39913_v), &(_39832_tokens));
	if ((_39832_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_39832_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_39913_v))._field_Reference=true;
		if ((_39832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_39832_tokens).mut_slice(1LL);;
	};
	_1ac914adc_buildVarCommon(_self_, &(_39913_v), _39832_tokens);
	return _39913_v;;
}



inline jule::Ptr<_1abd2ca50_GenericDecl> _1ac9155d2_buildGeneric(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _41737_tokens) {
	jule::Ptr<_1abd2ca50_GenericDecl> _41813_g = jule::new_ptr<_1abd2ca50_GenericDecl>(_1abd2ca50_GenericDecl{._field_Token=(*(_41737_tokens))[0LL], });;
	if (((*((*(_41813_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_.ptr(), (*_41813_g.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_41813_g.alloc)._field_Ident=(*(*_41813_g.alloc)._field_Token.alloc)._field_Kind;
	if (((*(_41737_tokens)).len() > 1LL)) {
		if (((*((*(_41737_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1ac9124be_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_41737_tokens)).len() == 2LL)) {
			_1ac9124be_pushErr(_self_, (*(_41737_tokens))[1LL], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1abd0a38a_Token>> _43517_constraintTokens = (*(_41737_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _43617_parts;
		jule::Slice<_1eb22e132_Log> _43624_errors;
		({
			__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&(_43517_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_43617_parts = __jule_assign_result.__jule_result_arg0;
			_43624_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_43624_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_43624_errors);
			return nullptr;;
		};
		(*_41813_g.alloc)._field_Constraint=jule::new_ptr<_1abd2c599_Constraint>(_1abd2c599_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, _43617_parts.len())});
		{
			auto expr = &(_43617_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1dea2aa:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _44225_part = *it;
				{
					jule::I32 _44321_i = 0LL;;
					jule::Ptr<_1abd20845_TypeDecl> _44421_kind;
					({
						__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_44225_part), (&(_44321_i)), true);
						_44421_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_41813_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*_41813_g.alloc)._field_Constraint.alloc)._field_Mask,jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::make({_44421_kind}));
					if ((_44321_i < _44225_part.len())) {
						_1ac9124be_pushErr(_self_, _44225_part[_44321_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b1dea2aa:;
				++it;
				goto _iter_begin_1b1dea2aa;
			}
			_iter_end_1b1dea2aa:;
		};
	};
	return _41813_g;;
}



inline jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _1ac9159cd_buildGenerics(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _45438_tokens, jule::Ptr<_1abd0a38a_Token>* _45457_errorToken) {
	if (((*(_45438_tokens)).len() == 0LL)) {
		_1ac9124be_pushErr(_self_.ptr(), (*(_45457_errorToken)), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _46013_parts;
	jule::Slice<_1eb22e132_Log> _46020_errors;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(_45438_tokens, static_cast<jule::U32>(5LLU), true);
		_46013_parts = __jule_assign_result.__jule_result_arg0;
		_46020_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_46020_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_46020_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> _46613_generics = jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>::alloc(0LL, _46013_parts.len());;
	{
		auto expr = &(_46013_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e0038c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _46721_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>> &__jule_push_dest = _46613_generics; __jule_push_dest.push(_1ac9155d2_buildGeneric(_self_, &(_46721_part))); };
			}
			_iter_next_1b1e0038c:;
			++it;
			goto _iter_begin_1b1e0038c;
		}
		_iter_end_1b1e0038c:;
	};
	return _46613_generics;;
}



inline jule::Ptr<_1abd310a3_ParamDecl> _1ac915d1e_buildSelfParam(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _47437_tokens) {
	if ((_47437_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1abd310a3_ParamDecl> _47913_param = jule::new_ptr<_1abd310a3_ParamDecl>();;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_47913_param.alloc)._field_Mutable=true;
		if ((_47437_tokens.len() == 1LL)) {
			_1ac9124be_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	_209e0d4d9_StrBuilder _49113_ident = static__209e0d918_New(5LL);;
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		_209e0de79_WriteStr(&_49113_ident, jule::Str::lit("&", 1));
		if ((_47437_tokens.len() == 1LL)) {
			_1ac9124be_pushErr(_self_, _47437_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_47437_tokens).mut_slice(1LL);;
	};
	if (((*(_47437_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		_209e0de79_WriteStr(&_49113_ident, jule::Str::lit("self", 4));
		(*_47913_param.alloc)._field_Token=_47437_tokens[0LL];
		if ((_47437_tokens.len() != 1LL)) {
			_1ac9124be_pushErr(_self_, _47437_tokens[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	(*_47913_param.alloc)._field_Ident=_209e0e771_Str(&_49113_ident);
	return _47913_param;;
}



inline void _1ac91623c_paramTypeBegin(_1ac911a1d_parser* _self_, jule::Ptr<_1abd310a3_ParamDecl>* _51438_param, jule::I32* _51462_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _51471_tokens) {
	for (; ((*(_51462_i)) < (*(_51471_tokens)).len()); ((*(_51462_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _51613_token = (*(_51471_tokens))[(*(_51462_i))];;
			if (((*(_51613_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_51438_param))))._field_Variadic) {
				_1ac9124be_pushErr(_self_, _51613_token, jule::Str::lit("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b1e077c3;
			};
			(*((*(_51438_param))))._field_Variadic=true;
		}
	_iter_next_1b1e077c3:;
	}
	_iter_end_1b1e077c3:;;
}



inline void _1ac9165a0_buildParamType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd310a3_ParamDecl>* _52939_param, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _52963_tokens) {
	jule::I32 _53013_i = 0LL;;
	_1ac91623c_paramTypeBegin(_self_.ptr(), _52939_param, &(_53013_i), _52963_tokens);
	if ((_53013_i >= (*(_52963_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _52963_tokens, (&(_53013_i)), true);
		(*((*(_52939_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_53013_i < (*(_52963_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_52963_tokens))[_53013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ac916913_buildParamBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd310a3_ParamDecl>* _54239_param, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _54262_tokens) {
	jule::Ptr<_1abd0a38a_Token> _54313_tok = _54262_tokens[0LL];;
	if ((_54262_tokens.len() == 1LL)) {
		(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
		return;;
	} else if ((_54262_tokens.len() < 3LL)) {
		_1ac9124be_pushErr(_self_.ptr(), _54313_tok, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_54262_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_54239_param))))._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ac9165a0_buildParamType(_self_, _54239_param, &(_54262_tokens));
		return;;
	};
	(*((*(_54239_param))))._field_Ident=(*(_54313_tok))._field_Kind;
	(_54262_tokens).mut_slice(2LL);;
	_1ac9165a0_buildParamType(_self_, _54239_param, &(_54262_tokens));
}



inline jule::Ptr<_1abd310a3_ParamDecl> _1ac916c54_buildParam(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _56234_tokens) {
	jule::Ptr<_1abd310a3_ParamDecl> _56313_param = jule::new_ptr<_1abd310a3_ParamDecl>(_1abd310a3_ParamDecl{._field_Token=_56234_tokens[0LL], });;
	if (((*((*(_56313_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_56313_param.alloc)._field_Mutable=true;
		if ((_56234_tokens.len() == 1LL)) {
			_1ac9124be_pushErr(_self_.ptr(), _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_56234_tokens).mut_slice(1LL);;
		(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
	};
	if ((_56234_tokens.len() >= 3LL)) {
		if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_56234_tokens.len() == 1LL)) {
				_1ac9124be_pushErr(_self_, _56234_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_56234_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_56234_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_56313_param.alloc)._field_Reference=true;
				(_56234_tokens).mut_slice(1LL);;
				(*_56313_param.alloc)._field_Token=_56234_tokens[0LL];
			};
		};
	};
	if (((*(*_56313_param.alloc)._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_56313_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
		_1ac9165a0_buildParamType(_self_, &(_56313_param), &(_56234_tokens));
	} else {
		_1ac916913_buildParamBody(_self_, &(_56313_param), _56234_tokens);
	};
	return _56313_param;;
}



inline void _1ac91700c_checkParams(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>>* _60535_params) {
	{
		auto expr = _60535_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e177d3:;
		if (it != expr_end) {
			jule::Ptr<_1abd310a3_ParamDecl> _60621_param = *it;
			{
				if ((_1abd31427_IsSelf(_60621_param.ptr()) || ((*_60621_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1b1e177d3;
				};
				if (((*_60621_param.alloc)._field_Token == nullptr)) {
					_1ac9124be_pushErr(_self_, (*_60621_param.alloc)._field_Token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
				} else {
					(*_60621_param.alloc)._field_Kind=jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*_60621_param.alloc)._field_Token, ._field_Ident=(*((*_60621_param.alloc)._field_Token))._field_Kind, }), &__jule_any_type74)});
					(*_60621_param.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
				};
			}
			_iter_next_1b1e177d3:;
			++it;
			goto _iter_begin_1b1e177d3;
		}
		_iter_end_1b1e177d3:;
	};
}



inline jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> _1ac917408_buildParams(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _62536_tokens, jule::Bool _62554_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _62613_parts;
	jule::Slice<_1eb22e132_Log> _62620_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(_62536_tokens, static_cast<jule::U32>(5LLU), true);
		_62613_parts = __jule_assign_result.__jule_result_arg0;
		_62620_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62620_errs);
	if ((_62613_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> _63217_params = nullptr;;
	if ((_62554_method && (_62613_parts.len() > 0LL))) {
		jule::Ptr<_1abd310a3_ParamDecl> _63417_param = _1ac915d1e_buildSelfParam(_self_, _62613_parts[0LL]);;
		if (((_63417_param != nullptr) && _1abd31427_IsSelf(_63417_param))) {
			{ jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_63417_param); };
			(_62613_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_62613_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e1e103:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _64121_part = *it;
			{
				if ((_64121_part.len() == 0LL)) {
					goto _iter_next_1b1e1e103;
				};
				jule::Ptr<_1abd310a3_ParamDecl> _64517_param = _1ac916c54_buildParam(_self_, _64121_part);;
				if ((_64517_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>> &__jule_push_dest = _63217_params; __jule_push_dest.push(_64517_param); };
				};
			}
			_iter_next_1b1e1e103:;
			++it;
			goto _iter_begin_1b1e1e103;
		}
		_iter_end_1b1e1e103:;
	};
	_1ac91700c_checkParams(_self_, &(_63217_params));
	return _63217_params;;
}



inline __jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool _1ac917804_buildMultiRetType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _65542_tokens, jule::I32* _65565_i) {
	__jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1abd23738_RetTypeDecl>();
	((*(_65565_i)))++;
	if (((*(_65565_i)) >= (*(_65542_tokens)).len())) {
		((*(_65565_i)))--;
		({
			__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _65542_tokens, _65565_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_65565_i)))--;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _66513_rangeTokens = _1ac9101c0_range(_65565_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _65542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _66713_parts;
	jule::Slice<_1eb22e132_Log> _66720_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&(_66513_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_66713_parts = __jule_assign_result.__jule_result_arg0;
		_66720_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_66720_errs);
	if ((_66713_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _67313_types = jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, _66713_parts.len());;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::Slice<jule::Ptr<_1abd0a38a_Token>>::alloc(0LL, _66713_parts.len());
	{
		auto expr = &(_66713_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e24ed8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _67521_part = *it;
			{
				if ((_67521_part.len() == 0LL)) {
					goto _iter_next_1b1e24ed8;
				};
				jule::Ptr<_1abd0a38a_Token> _67917_token = _67521_part[0LL];;
				jule::I32 _68017_offset = 0LL;;
				if ((_67521_part.len() > 1LL)) {
					_67917_token=_67521_part[1LL];
					if (((*(_67917_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_68017_offset=2LL;
						if ((_67521_part.len() < 3LL)) {
							_1ac9124be_pushErr(_self_, _67917_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b1e24ed8;
						};
					};
				};
				_67917_token=_67521_part[0LL];
				if ((_68017_offset != 2LL)) {
					jule::Ptr<_1abd0a38a_Token> _69621_newToken = jule::new_ptr<_1abd0a38a_Token>((*_67917_token.alloc));;
					(*_69621_newToken.alloc)._field_Kind=jule::Str::lit("<anonymous>", 11);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1abd0a38a_Token>>::make({_69621_newToken}));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,jule::Slice<jule::Ptr<_1abd0a38a_Token>>::make({_67917_token}));
				};
				jule::Ptr<_1abd20845_TypeDecl> _70317_tk;
				({
					__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_67521_part), (&(_68017_offset)), true);
					_70317_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_68017_offset < _67521_part.len())) {
					_1ac9124be_pushErr(_self_, _67521_part[_68017_offset], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = _67313_types; __jule_push_dest.push(_70317_tk); };
			}
			_iter_next_1b1e24ed8:;
			++it;
			goto _iter_begin_1b1e24ed8;
		}
		_iter_end_1b1e24ed8:;
	};
	if ((_67313_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*(_65542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1abd22072_TupleTypeDecl>(_1abd22072_TupleTypeDecl{._field_Types=_67313_types}), &__jule_any_type73)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_67313_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool _1ac917c00_buildRetType(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _72637_tokens, jule::I32* _72660_i) {
	__jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1abd23738_RetTypeDecl>();
	if (((*(_72660_i)) >= (*(_72637_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1abd0a38a_Token> _73213_token = (*(_72637_tokens))[(*(_72660_i))];;
	{
		auto &_match_expr{ (*(_73213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b1e2dd9e:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1b1e2de26:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b1e2de8c:;
			{
				if ((((*(_72660_i)) + 1LL) >= (*(_72637_tokens)).len())) {
					_1ac9124be_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_72660_i)))++;
				_73213_token=(*(_72637_tokens))[(*(_72660_i))];
				{
					auto &_match_expr{ (*(_73213_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1e301ad:;
						{
							({
								__jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac917804_buildMultiRetType(_self_, _72637_tokens, _72660_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b1e30d90:;
						{
							_1ac9124be_pushErr(_self_, _73213_token, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b1e30d07:;
				};
				({
					__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _72637_tokens, _72660_i, true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b1e2dd49:;
	};
	((*(_72660_i)))++;
	_1ac9124be_pushErr(_self_.ptr(), _73213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1abd32505_FnDecl> _1ac9181a6_buildFnPrototype(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _76541_tokens, jule::I32* _76564_i, jule::Bool _76572_method) {
	jule::Ptr<_1abd32505_FnDecl> _76613_f = jule::new_ptr<_1abd32505_FnDecl>(_1abd32505_FnDecl{._field_Token=(*(_76541_tokens))[(*(_76564_i))], });;
	if (((*((*(_76613_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_76613_f.alloc)._field_Statically=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1ac9124be_pushErr(_self_.ptr(), (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	if (((*(*_76613_f.alloc)._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_76613_f.alloc)._field_Unsafety=true;
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1ac9124be_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Token=(*(_76541_tokens))[(*(_76564_i))];
	};
	((*(_76564_i)))++;
	if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd0a38a_Token> _7999_tok = (*(_76541_tokens))[(*(_76564_i))];;
	if (((*(_7999_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_76564_i)))++;
		if (((*(_76564_i)) >= (*(_76541_tokens)).len())) {
			_1ac9124be_pushErr(_self_, (*_76613_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_76613_f.alloc)._field_Ident=(*_7999_tok.alloc)._field_Kind;
	} else {
		(*_76613_f.alloc)._field_Ident=jule::Str::lit("<anonymous>", 11);
	};
	jule::Ptr<_1abd0a38a_Token> _8119_errorToken = (*(_76541_tokens))[(*(_76564_i))];;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _81213_genericsTokens = _1ac9101c0_range(_76564_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _76541_tokens);;
	if ((_81213_genericsTokens != nullptr)) {
		(*_76613_f.alloc)._field_Generics=_1ac9159cd_buildGenerics(_self_, &(_81213_genericsTokens), &(_8119_errorToken));
	};
	if (((*((*(_76541_tokens))[(*(_76564_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1ac9124be_pushErr(_self_, (*(_76541_tokens))[(*(_76564_i))], jule::Str::lit("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _82213_paramsToks = _1ac9101c0_range(_76564_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _76541_tokens);;
	if ((_82213_paramsToks.len() > 0LL)) {
		(*_76613_f.alloc)._field_Params=_1ac917408_buildParams(_self_, &(_82213_paramsToks), _76572_method);
	};
	if (((*(_76564_i)) < (*(_76541_tokens)).len())) {
		jule::Ptr<_1abd0a38a_Token> _82813_token = (*(_76541_tokens))[(*(_76564_i))];;
		if (((*(_82813_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_76613_f.alloc)._field_Exceptional=true;
			((*(_76564_i)))++;
		};
	};
	(*_76613_f.alloc)._field_Public=_1ab694a6b_IsPub((*_76613_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1abd23738_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ac917c00_buildRetType(_self_, _76541_tokens, _76564_i);
		(*_76613_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _76613_f;;
}



inline jule::Ptr<_1abd32505_FnDecl> _1ac91865c_buildFn(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _84232_tokens, jule::Bool _84250_method, jule::Bool _84264_prototype) {
	jule::I32 _84313_i = 0LL;;
	jule::Ptr<_1abd32505_FnDecl> _84413_f = _1ac9181a6_buildFnPrototype(_self_, _84232_tokens, &(_84313_i), _84250_method);;
	if (_84264_prototype) {
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1ac9124be_pushErr(_self_, (*(_84232_tokens))[(_84313_i + 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _84413_f;;
	} else if ((_84413_f == nullptr)) {
		return _84413_f;;
	};
	if ((_84313_i >= (*(_84232_tokens)).len())) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*(_84413_f))._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _86013_blockTokens = _1ac9101c0_range(&(_84313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _84232_tokens);;
	if ((_86013_blockTokens != nullptr)) {
		(*_84413_f.alloc)._field_Scope=_1ac913668_buildScope(_self_, &(_86013_blockTokens), (*(_84232_tokens))[(_84313_i - 1LL)]);
		(*((*_84413_f.alloc)._field_Scope))._field_Unsafety=(*_84413_f.alloc)._field_Unsafety;
		if ((_84313_i < (*(_84232_tokens)).len())) {
			_1ac9124be_pushErr(_self_, (*(_84232_tokens))[_84313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*_84413_f.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _84413_f;;
}



inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac91899d_getUseDeclSelectors(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _87642_tokens) {
	jule::I32 _87713_i = 0LL;;
	_87642_tokens=_1ac9101c0_range(&(_87713_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_87642_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _87913_parts;
	jule::Slice<_1eb22e132_Log> _87920_errs;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&(_87642_tokens), static_cast<jule::U32>(5LLU), true);
		_87913_parts = __jule_assign_result.__jule_result_arg0;
		_87920_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_87920_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_87920_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _88513_selectors = jule::Slice<jule::Ptr<_1abd0a38a_Token>>::alloc(0LL, _87913_parts.len());;
	{
		auto expr = &(_87913_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e49408:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _88621_part = *it;
			{
				if ((_88621_part.len() > 1LL)) {
					_1ac9124be_pushErr(_self_, _88621_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1abd0a38a_Token> _89017_tok = _88621_part[0LL];;
				if ((((*(_89017_tok))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_89017_tok.alloc)._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1ac9124be_pushErr(_self_, _89017_tok, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b1e49408;
				};
				{ jule::Slice<jule::Ptr<_1abd0a38a_Token>> &__jule_push_dest = _88513_selectors; __jule_push_dest.push(_89017_tok); };
			}
			_iter_next_1b1e49408:;
			++it;
			goto _iter_begin_1b1e49408;
		}
		_iter_end_1b1e49408:;
	};
	return _88513_selectors;;
}



inline void _1ac918d11_buildBindUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _90140_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _90157_tokens) {
	if (((*(_90157_tokens)).len() > 1LL)) {
		_1ac9124be_pushErr(_self_, (*(_90157_tokens))[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd0a38a_Token> _9059_token = (*(_90157_tokens))[0LL];;
	if ((((*(_9059_token))._field_Id != static_cast<jule::U32>(4LLU)) || (((*_9059_token.alloc)._field_Kind[0LL] != '`') && ((*_9059_token.alloc)._field_Kind[0LL] != '\"')))) {
		_1ac9124be_pushErr(_self_, _9059_token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_90140_decl))))._field_Binded=true;
	(*((*(_90140_decl))))._field_LinkPath=(*_9059_token.alloc)._field_Kind.slice(1LL, ((*_9059_token.alloc)._field_Kind.len() - 1LL));
}



inline jule::Str _1ac919152_useDeclTokstoa(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _91434_tokens) {
	jule::I32 _91513_n = 0LL;;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e5194e:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_91616_token = it;
			{
				if ((((*((*(_91616_token))))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_91616_token)).alloc)._field_Id != static_cast<jule::U32>(19LLU)))) {
					_1ac9124be_pushErr(_self_, (*(_91616_token)), jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_91513_n+=(*(*(_91616_token)).alloc)._field_Kind.len();
			}
			_iter_next_1b1e5194e:;
			++it;
			goto _iter_begin_1b1e5194e;
		}
		_iter_end_1b1e5194e:;
	};
	_209e0d4d9_StrBuilder _92213_s = static__209e0d918_New(_91513_n);;
	{
		auto expr = _91434_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1e517ea:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_92316_token = it;
			{
				_209e0de79_WriteStr(&_92213_s, (*((*(_92316_token))))._field_Kind);
			}
			_iter_next_1b1e517ea:;
			++it;
			goto _iter_begin_1b1e517ea;
		}
		_iter_end_1b1e517ea:;
	};
	return _209e0e771_Str(&_92213_s);;
}



inline void _1ac9194b5_buildStdUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _92939_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _92959_tokens) {
	(*((*(_92939_decl))))._field_Std=true;
	jule::Ptr<_1abd0a38a_Token> _93213_token = _92959_tokens[0LL];;
	if ((_92959_tokens.len() < 3LL)) {
		_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(_92959_tokens).mut_slice(2LL);;
	_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ (*(_93213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b1e56404:;
			{
				_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b1e5647b:;
			{
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _94521_selectors = nullptr;;
				({
					__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_assign_result = _1ac910489_rangeLast(&(_92959_tokens));
					_92959_tokens = __jule_assign_result.__jule_result_arg0;
					_94521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_92939_decl))))._field_Selected=_1ac91899d_getUseDeclSelectors(_self_, _94521_selectors);
				if ((_92959_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1e564e2:;
			{
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_93213_token=_92959_tokens[(_92959_tokens.len() - 1LL)];
				if (((*(_93213_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_92959_tokens).mut_slice(0LL, (_92959_tokens.len() - 1LL));;
				if ((_92959_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _93213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_92939_decl))))._field_Full=true;
			}
		}
		_match_end_1b1e5639e:;
	};
	if (((_92959_tokens.len() == 1LL) && ((*(_92959_tokens[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		(*((*(_92939_decl))))._field_LinkPath=jule::Str::lit("std::unsafe", 11);
	} else {
		(*((*(_92939_decl))))._field_LinkPath=(jule::Str::lit("std::", 5) + _1ac919152_useDeclTokstoa(_self_, &(_92959_tokens)));
	};
}



inline void _1ac919828_buildIdentUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _98741_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _98761_tokens) {
	(*((*(_98741_decl))))._field_Std=false;
	jule::Ptr<_1abd0a38a_Token> _99013_token = _98761_tokens[(_98761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ (*(_99013_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b1e5eebd:;
			{
				_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b1e60e25:;
			{
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _99621_selectors = nullptr;;
				({
					__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_assign_result = _1ac910489_rangeLast(&(_98761_tokens));
					_98761_tokens = __jule_assign_result.__jule_result_arg0;
					_99621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*((*(_98741_decl))))._field_Selected=_1ac91899d_getUseDeclSelectors(_self_, _99621_selectors);
				if ((_98761_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1e60e8b:;
			{
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99013_token=_98761_tokens[(_98761_tokens.len() - 1LL)];
				if (((*(_99013_token))._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(_98761_tokens).mut_slice(0LL, (_98761_tokens.len() - 1LL));;
				if ((_98761_tokens.len() == 0LL)) {
					_1ac9124be_pushErr(_self_, _99013_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*((*(_98741_decl))))._field_Full=true;
			}
		}
		_match_end_1b1e60d04:;
	};
	(*((*(_98741_decl))))._field_LinkPath=_1ac919152_useDeclTokstoa(_self_, &(_98761_tokens));
}



inline void _1ac919b8b_parseUseDecl(_1ac911a1d_parser* _self_, jule::Ptr<_1abd3894b_UseDecl>* _103536_decl, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _103556_tokens) {
	if ((*((*(_103536_decl))))._field_Binded) {
		_1ac918d11_buildBindUseDecl(_self_, _103536_decl, &(_103556_tokens));
		return;;
	};
	jule::Ptr<_1abd0a38a_Token> _104113_token = _103556_tokens[0LL];;
	if (((*(_104113_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_103556_tokens.len() > 2LL) && ((*(_103556_tokens[1LL]))._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*((*(_103536_decl))))._field_Alias=(*_104113_token.alloc)._field_Kind;
		if (((*(_103556_tokens[2LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ac9124be_pushErr(_self_, _104113_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		(_103556_tokens).mut_slice(2LL);;
		_104113_token=_103556_tokens[0LL];
	};
	;
	{
		
		if ((*_104113_token.alloc)._field_Kind.equal("std", 3)) {
			_case_begin_1b1e6d0ec:;
			{
				_1ac9194b5_buildStdUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		else {
			_case_begin_1b1e6cc45:;
			{
				_1ac919828_buildIdentUseDecl(_self_, _103536_decl, _103556_tokens);
			}
		}
		_match_end_1b1e6cbce:;
	};
}



inline jule::Ptr<_1abd3894b_UseDecl> _1ac91a087_buildUseDecl(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _106935_tokens, jule::Bool _106953_binded) {
	jule::Ptr<_1abd3894b_UseDecl> _107013_decl = jule::new_ptr<_1abd3894b_UseDecl>(_1abd3894b_UseDecl{._field_Token=_106935_tokens[0LL], ._field_Binded=_106953_binded, });;
	if ((_106935_tokens.len() < 2LL)) {
		_1ac9124be_pushErr(_self_, (*(_107013_decl))._field_Token, jule::Str::lit("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_106935_tokens).mut_slice(1LL);;
	_1ac919b8b_parseUseDecl(_self_, &(_107013_decl), _106935_tokens);
	return _107013_decl;;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac91a483_buildTypeEnumItemKind(jule::Ptr<_1ac911a1d_parser> _self_, jule::I32* _108346_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _108359_tokens) {
	jule::I32 _108413_braceN = 0LL;;
	jule::I32 _10859_exprStart = (*(_108346_i));;
	for (; ((*(_108346_i)) < (*(_108359_tokens)).len()); ((*(_108346_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _108713_t = (*(_108359_tokens))[(*(_108346_i))];;
			{
				auto &_match_expr{ (*(_108713_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1e72145:;
					{
						(_108413_braceN)++;
						goto _iter_next_1b1e715c8;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1e72453:;
					{
						(_108413_braceN)--;
					}
				}
				_match_end_1b1e723ed:;
			};
			if ((_108413_braceN > 0LL)) {
				goto _iter_next_1b1e715c8;
			};
			if ((((*(_108713_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_108346_i)) + 1LL) >= (*(_108359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _110325_kindTokens = nullptr;;
				if (((*_108713_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart, (*(_108346_i)));
				} else {
					_110325_kindTokens=(*(_108359_tokens)).slice(_10859_exprStart);
				};
				jule::I32 _110921_j = 0LL;;
				jule::Ptr<_1abd20845_TypeDecl> _111021_kind;
				({
					__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_110325_kindTokens), (&(_110921_j)), true);
					_111021_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_110921_j < _110325_kindTokens.len())) {
					_1ac9124be_pushErr(_self_, _110325_kindTokens[_110921_j], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111021_kind;;
			};
		}
	_iter_next_1b1e715c8:;
	}
	_iter_end_1b1e715c8:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>> _1ac91a7c4_buildTypeEnumItems(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _112043_tokens) {
	jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>> _112113_items = jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _112213_i = 0LL;;
	for (; (_112213_i < (*(_112043_tokens)).len()); (_112213_i)++) {
		{
			jule::Ptr<_1abd0a38a_Token> _112417_t = (*(_112043_tokens))[_112213_i];;
			jule::Ptr<_1abd3a2dd_TypeEnumItemDecl> _112517_item = jule::new_ptr<_1abd3a2dd_TypeEnumItemDecl>();;
			(*_112517_item.alloc)._field_Token=_112417_t;
			if ((((*((*_112517_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_112043_tokens)).len() - _112213_i) > 2LL))) {
				_112417_t=(*(_112043_tokens))[(_112213_i + 1LL)];
				if (((*(_112417_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_112517_item.alloc)._field_Ident=(*(*_112517_item.alloc)._field_Token.alloc)._field_Kind;
					_112213_i+=2LL;
					if (((_112213_i >= (*(_112043_tokens)).len()) || ((*((*(_112043_tokens))[_112213_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1ac9124be_pushErr(_self_.ptr(), _112417_t, jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b1e772c1;
					};
				};
			};
			(*_112517_item.alloc)._field_Kind=_1ac91a483_buildTypeEnumItemKind(_self_, &(_112213_i), _112043_tokens);
			{ jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>> &__jule_push_dest = _112113_items; __jule_push_dest.push(_112517_item); };
		}
	_iter_next_1b1e772c1:;
	}
	_iter_end_1b1e772c1:;;
	return _112113_items;;
}



inline jule::Ptr<_1abd3a94d_TypeEnumDecl> _1ac91ab15_buildTypeEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _114442_tokens) {
	jule::I32 _114513_i = 1LL;;
	jule::Ptr<_1abd3a94d_TypeEnumDecl> _114613_e = jule::new_ptr<_1abd3a94d_TypeEnumDecl>(_1abd3a94d_TypeEnumDecl{._field_Token=(*(_114442_tokens))[_114513_i], });;
	if (((*((*(_114613_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_.ptr(), (*_114613_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Ident=(*(*_114613_e.alloc)._field_Token.alloc)._field_Kind;
	_114513_i+=3LL;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _115613_itemTokens = _1ac9101c0_range(&(_114513_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _114442_tokens);;
	if ((_115613_itemTokens == nullptr)) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*_114613_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _114613_e;;
	} else if ((_114513_i < (*(_114442_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_114442_tokens))[_114513_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_114613_e.alloc)._field_Public=_1ab694a6b_IsPub((*_114613_e.alloc)._field_Ident);
	(*_114613_e.alloc)._field_End=(*(_114442_tokens))[(_114513_i - 1LL)];
	(*_114613_e.alloc)._field_Items=_1ac91a7c4_buildTypeEnumItems(_self_, &(_115613_itemTokens));
	return _114613_e;;
}



inline jule::Ptr<_1abd24b79_Expr> _1ac91b011_buildEnumItemExpr(jule::Ptr<_1ac911a1d_parser> _self_, jule::I32* _117142_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _117155_tokens) {
	jule::I32 _117213_braceN = 0LL;;
	jule::I32 _11739_exprStart = (*(_117142_i));;
	for (; ((*(_117142_i)) < (*(_117155_tokens)).len()); ((*(_117142_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _117513_t = (*(_117155_tokens))[(*(_117142_i))];;
			{
				auto &_match_expr{ (*(_117513_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1e84ee3:;
					{
						(_117213_braceN)++;
						goto _iter_next_1b1e84476;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1e85301:;
					{
						(_117213_braceN)--;
					}
				}
				_match_end_1b1e8529b:;
			};
			if ((_117213_braceN > 0LL)) {
				goto _iter_next_1b1e84476;
			};
			if ((((*(_117513_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_117142_i)) + 1LL) >= (*(_117155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _119125_exprTokens = nullptr;;
				if (((*_117513_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart, (*(_117142_i)));
				} else {
					_119125_exprTokens=(*(_117155_tokens)).slice(_11739_exprStart);
				};
				return _1ac912b73_buildExpr(_self_, &(_119125_exprTokens));;
			};
		}
	_iter_next_1b1e84476:;
	}
	_iter_end_1b1e84476:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> _1ac91b352_buildEnumItems(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _120339_tokens) {
	jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> _120413_items = jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _120513_i = 0LL;;
	for (; (_120513_i < (*(_120339_tokens)).len()); (_120513_i)++) {
		{
			jule::Ptr<_1abd0a38a_Token> _120717_t = (*(_120339_tokens))[_120513_i];;
			jule::Ptr<_1abd38e02_EnumItemDecl> _120817_item = jule::new_ptr<_1abd38e02_EnumItemDecl>();;
			(*_120817_item.alloc)._field_Token=_120717_t;
			if (((*((*_120817_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1ac9124be_pushErr(_self_.ptr(), (*_120817_item.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			(*_120817_item.alloc)._field_Ident=(*(*_120817_item.alloc)._field_Token.alloc)._field_Kind;
			if ((((_120513_i + 1LL) >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[(_120513_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_120513_i + 1LL) < (*(_120339_tokens)).len())) {
					(_120513_i)++;
				};
				{ jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
				goto _iter_next_1b1e88d93;
			};
			(_120513_i)++;
			_120717_t=(*(_120339_tokens))[_120513_i];
			(_120513_i)++;
			if (((*(_120717_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1ac9124be_pushErr(_self_, _120717_t, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b1e88d93;
			};
			if (((_120513_i >= (*(_120339_tokens)).len()) || ((*((*(_120339_tokens))[_120513_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1ac9124be_pushErr(_self_, _120717_t, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b1e88d93;
			};
			(*_120817_item.alloc)._field_Expr=_1ac91b011_buildEnumItemExpr(_self_, &(_120513_i), _120339_tokens);
			{ jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>> &__jule_push_dest = _120413_items; __jule_push_dest.push(_120817_item); };
		}
	_iter_next_1b1e88d93:;
	}
	_iter_end_1b1e88d93:;;
	return _120413_items;;
}



inline jule::Ptr<_1abd399b3_EnumDecl> _1ac91b693_buildEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _124038_tokens) {
	if (((*(_124038_tokens)).len() < 3LL)) {
		_1ac9124be_pushErr(_self_.ptr(), (*(_124038_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd399b3_EnumDecl> _124513_e = jule::new_ptr<_1abd399b3_EnumDecl>(_1abd399b3_EnumDecl{._field_Token=(*(_124038_tokens))[1LL], });;
	if (((*((*(_124513_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Ident=(*(*_124513_e.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _125313_i = 2LL;;
	if (((*((*(_124038_tokens))[_125313_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_125313_i)++;
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1ac9124be_pushErr(_self_, (*(_124038_tokens))[(_125313_i - 1LL)], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return _124513_e;;
		};
		({
			__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, _124038_tokens, (&(_125313_i)), true);
			(*_124513_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_125313_i >= (*(_124038_tokens)).len())) {
			_1ac911d1a_stop(_self_);
			_1ac9124be_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
			_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _124513_e;;
		};
	} else {
		(*_124513_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _127013_itemTokens = _1ac9101c0_range(&(_125313_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _124038_tokens);;
	if ((_127013_itemTokens == nullptr)) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*_124513_e.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _124513_e;;
	} else if ((_125313_i < (*(_124038_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_124038_tokens))[_125313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_124513_e.alloc)._field_Public=_1ab694a6b_IsPub((*_124513_e.alloc)._field_Ident);
	(*_124513_e.alloc)._field_End=(*(_124038_tokens))[(_125313_i - 1LL)];
	(*_124513_e.alloc)._field_Items=_1ac91b352_buildEnumItems(_self_, &(_127013_itemTokens));
	return _124513_e;;
}



inline jule::Any _1ac91b9d4_buildNodeEnumDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _128542_tokens) {
	if ((((*(_128542_tokens)).len() > 3LL) && ((*((*(_128542_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_128542_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1ac91ab15_buildTypeEnumDecl(_self_, _128542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ac91b693_buildEnumDecl(_self_, _128542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1abd3ac17_FieldDecl> _1ac91bd25_buildField(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _129434_tokens) {
	jule::Ptr<_1abd3ac17_FieldDecl> _129513_f = jule::new_ptr<_1abd3ac17_FieldDecl>();;
	(*_129513_f.alloc)._field_Mutable=((*(_129434_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_129513_f.alloc)._field_Mutable) {
		if ((_129434_tokens.len() == 1LL)) {
			_1ac9124be_pushErr(_self_.ptr(), _129434_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(1LL);;
	};
	(*_129513_f.alloc)._field_Token=_129434_tokens[0LL];
	if (((*((*_129513_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, (*_129513_f.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_129513_f.alloc)._field_Ident=(*(*_129513_f.alloc)._field_Token.alloc)._field_Kind;
	if ((_129434_tokens.len() == 1LL)) {
		_1ac9124be_pushErr(_self_, _129434_tokens[0LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_129434_tokens.len() < 3LL) || ((*(_129434_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1ac9124be_pushErr(_self_, _129434_tokens[1LL], jule::Str::lit("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_129434_tokens).mut_slice(2LL);;
	jule::I32 _132313_i = 0LL;;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_129434_tokens), (&(_132313_i)), true);
		(*_129513_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_132313_i < _129434_tokens.len())) {
		jule::Ptr<_1abd0a38a_Token> _132613_token = _129434_tokens[_132313_i];;
		if (((*(_132613_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ac9124be_pushErr(_self_, _129434_tokens[_132313_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_132313_i)++;
		if ((_132313_i >= _129434_tokens.len())) {
			_1ac9124be_pushErr(_self_, _132613_token, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_129434_tokens).mut_slice(_132313_i);;
		(*_129513_f.alloc)._field_Default=_1ac912b73_buildExpr(_self_, &(_129434_tokens));
	};
	(*_129513_f.alloc)._field_Public=_1ab694a6b_IsPub((*_129513_f.alloc)._field_Ident);
	return _129513_f;;
}



inline jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>> _1ac91c166_buildStructDeclFields(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _134345_tokens) {
	jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>> _134417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _134513_stmts = _1ac8e2ea5_splitStmts(&(_134345_tokens));;
	{
		auto expr = &(_134513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1eae0d8:;
		if (it != expr_end) {
			jule::Ptr<_1ac8e2aed_stmt> _134621_stmt = *it;
			{
				_134345_tokens=(*(_134621_stmt))._field_tokens;
				jule::Ptr<_1abd3ac17_FieldDecl> _134817_f = _1ac91bd25_buildField(_self_, _134345_tokens);;
				{ jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>> &__jule_push_dest = _134417_fields; __jule_push_dest.push(_134817_f); };
			}
			_iter_next_1b1eae0d8:;
			++it;
			goto _iter_begin_1b1eae0d8;
		}
		_iter_end_1b1eae0d8:;
	};
	return _134417_fields;;
}



inline jule::Ptr<_1abd3b60d_StructDecl> _1ac91c4a7_buildStructDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _135440_tokens) {
	if (((*(_135440_tokens)).len() < 3LL)) {
		_1ac9124be_pushErr(_self_.ptr(), (*(_135440_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _136013_i = 1LL;;
	jule::Ptr<_1abd3b60d_StructDecl> _136113_s = jule::new_ptr<_1abd3b60d_StructDecl>(_1abd3b60d_StructDecl{._field_Token=(*(_135440_tokens))[_136013_i], });;
	if (((*((*(_136113_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136013_i)++;
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	(*_136113_s.alloc)._field_Ident=(*(*_136113_s.alloc)._field_Token.alloc)._field_Kind;
	jule::Ptr<_1abd0a38a_Token> _13759_errorToken = (*(_135440_tokens))[_136013_i];;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _137613_genericsTokens = _1ac9101c0_range(&(_136013_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _135440_tokens);;
	if ((_137613_genericsTokens != nullptr)) {
		(*_136113_s.alloc)._field_Generics=_1ac9159cd_buildGenerics(_self_, &(_137613_genericsTokens), &(_13759_errorToken));
	};
	if ((_136013_i >= (*(_135440_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_135440_tokens))[(_136013_i - 1LL)], jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _138613_bodyTokens = _1ac9101c0_range(&(_136013_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _135440_tokens);;
	if ((_138613_bodyTokens == nullptr)) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*_136113_s.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136113_s;;
	};
	if ((_136013_i < (*(_135440_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_135440_tokens))[_136013_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_136113_s.alloc)._field_Public=_1ab694a6b_IsPub((*_136113_s.alloc)._field_Ident);
	(*_136113_s.alloc)._field_Fields=_1ac91c166_buildStructDeclFields(_self_, _138613_bodyTokens);
	(*_136113_s.alloc)._field_End=(*(_135440_tokens))[(_136013_i - 1LL)];
	return _136113_s;;
}



inline void _1ac91c760_checkMethodReceiver(_1ac911a1d_parser* _self_, jule::Ptr<_1abd32505_FnDecl>* _140239_f) {
	if ((*((*(_140239_f))))._field_Statically) {
		if ((((*((*(_140239_f))))._field_Params.len() > 0LL) && _1abd31427_IsSelf((*((*(_140239_f))))._field_Params[0LL].ptr()))) {
			_1ac9124be_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_140239_f))))._field_Params.len() == 0LL)) {
		_1ac9124be_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abd310a3_ParamDecl> _14149_param = (*((*(_140239_f))))._field_Params[0LL];;
	if ((!(_1abd31427_IsSelf(_14149_param.ptr())))) {
		_1ac9124be_pushErr(_self_, (*((*(_140239_f))))._field_Token, jule::Str::lit("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ac91cac3_buildTraitBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3bd4a_TraitDecl>* _142139_t, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _142158_tokens) {
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _142213_stmts = _1ac8e2ea5_splitStmts(&(_142158_tokens));;
	{
		auto expr = &(_142213_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1ebea88:;
		if (it != expr_end) {
			jule::Ptr<_1ac8e2aed_stmt> _142321_stmt = *it;
			{
				_142158_tokens=(*(_142321_stmt))._field_tokens;
				if ((_142158_tokens.len() == 0LL)) {
					goto _iter_next_1b1ebea88;
				};
				{
					auto &_match_expr{ (*(_142158_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1b1ec353c:;
						{
							jule::Ptr<_1abd32505_FnDecl> _143021_f = _1ac91865c_buildFn(_self_, &(_142158_tokens), true, true);;
							if ((_143021_f == nullptr)) {
								goto _match_end_1b1ec0d0e;
							};
							_1ac91c760_checkMethodReceiver(_self_, &(_143021_f));
							if (((*(_143021_f))._field_Generics.len() > 0LL)) {
								_1ac9124be_pushErr(_self_, (*(_143021_f))._field_Token, jule::Str::lit("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1abd32505_FnDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Methods; __jule_push_dest.push(_143021_f); };
						}
					}
					else {
						_case_begin_1b1ec0616:;
						{
							jule::I32 _144021_i = 0LL;;
							jule::Ptr<_1abd20845_TypeDecl> _144121_ti;
							jule::Bool _144125_ok;
							({
								__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_142158_tokens), (&(_144021_i)), true);
								_144121_ti = __jule_assign_result.__jule_result_arg0;
								_144125_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144125_ok))) {
								goto _match_end_1b1ec0d0e;
							};
							if ((_144021_i < _142158_tokens.len())) {
								_1ac9124be_pushErr(_self_, _142158_tokens[_144021_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = (*((*(_142139_t))))._field_Inherits; __jule_push_dest.push(_144121_ti); };
						}
					}
					_match_end_1b1ec0d0e:;
				};
			}
			_iter_next_1b1ebea88:;
			++it;
			goto _iter_begin_1b1ebea88;
		}
		_iter_end_1b1ebea88:;
	};
}



inline jule::Ptr<_1abd3bd4a_TraitDecl> _1ac91ce14_buildTraitDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _145339_tokens) {
	if (((*(_145339_tokens)).len() < 3LL)) {
		_1ac9124be_pushErr(_self_.ptr(), (*(_145339_tokens))[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd3bd4a_TraitDecl> _145813_t = jule::new_ptr<_1abd3bd4a_TraitDecl>(_1abd3bd4a_TraitDecl{._field_Token=(*(_145339_tokens))[1LL], });;
	if (((*((*(_145813_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9124be_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Ident=(*(*_145813_t.alloc)._field_Token.alloc)._field_Kind;
	jule::I32 _146613_i = 2LL;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _146713_bodyTokens = _1ac9101c0_range(&(_146613_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _145339_tokens);;
	if ((_146713_bodyTokens == nullptr)) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, (*_145813_t.alloc)._field_Token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_146613_i < (*(_145339_tokens)).len())) {
		_1ac9124be_pushErr(_self_, (*(_145339_tokens))[_146613_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_145813_t.alloc)._field_Public=_1ab694a6b_IsPub((*_145813_t.alloc)._field_Ident);
	_1ac91cac3_buildTraitBody(_self_, &(_145813_t), _146713_bodyTokens);
	(*_145813_t.alloc)._field_End=(*(_145339_tokens))[(_146613_i - 1LL)];
	return _145813_t;;
}



inline jule::Ptr<_1abd32505_FnDecl> _1ac91d255_buildBindFn(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _148335_tokens) {
	(_148335_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd32505_FnDecl> _148513_f = _1ac91865c_buildFn(_self_, &(_148335_tokens), false, true);;
	if ((_148513_f != nullptr)) {
		(*_148513_f.alloc)._field_Public=false;
		(*_148513_f.alloc)._field_Binded=true;
	};
	return _148513_f;;
}



inline jule::Ptr<_1abd336b0_VarDecl> _1ac91d596_buildBindVar(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _149336_tokens) {
	(_149336_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd336b0_VarDecl> _149513_v = _1ac915291_buildVar(_self_, _149336_tokens);;
	if ((_149513_v != nullptr)) {
		(*_149513_v.alloc)._field_Public=false;
		(*_149513_v.alloc)._field_Binded=true;
		if (((*_149513_v.alloc)._field_Expr != nullptr)) {
			_1ac9124be_pushErr(_self_, (*_149513_v.alloc)._field_Token, jule::Str::lit("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _149513_v;;
}



inline jule::Ptr<_1abd3b60d_StructDecl> _1ac91d8d7_buildBindStruct(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _150639_tokens) {
	(_150639_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd3b60d_StructDecl> _150813_s = _1ac91c4a7_buildStructDecl(_self_, &(_150639_tokens));;
	if ((_150813_s != nullptr)) {
		(*_150813_s.alloc)._field_Public=false;
		{
			auto expr = &((*_150813_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1ed25d4:;
			if (it != expr_end) {
				jule::Ptr<_1abd3ac17_FieldDecl> _151125_f = *it;
				{
					(*(_151125_f))._field_Public=true;
				}
				_iter_next_1b1ed25d4:;
				++it;
				goto _iter_begin_1b1ed25d4;
			}
			_iter_end_1b1ed25d4:;
		};
		(*_150813_s.alloc)._field_Binded=true;
	};
	return _150813_s;;
}



inline jule::Ptr<_1abd37362_TypeAliasDecl> _1ac91dc28_buildBindTypeAlias(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _152042_tokens) {
	(_152042_tokens).mut_slice(1LL);;
	jule::Ptr<_1abd37362_TypeAliasDecl> _152213_t = _1ac914416_buildTypeAliasDecl(_self_, &(_152042_tokens));;
	if ((_152213_t != nullptr)) {
		(*_152213_t.alloc)._field_Public=false;
		(*_152213_t.alloc)._field_Binded=true;
	};
	return _152213_t;;
}



inline jule::Ptr<_1abd3894b_UseDecl> _1ac91e069_buildBindUse(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _153036_tokens) {
	if ((_153036_tokens.len() == 1LL)) {
		_1ac9124be_pushErr(_self_.ptr(), _153036_tokens[0LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_153036_tokens).mut_slice(1LL);;
	;
	return _1ac91a087_buildUseDecl(_self_, _153036_tokens, true);;
}



inline jule::Any _1ac91e3aa_buildBind(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _154134_tokens) {
	jule::Ptr<_1abd0a38a_Token> _154213_token = (*(_154134_tokens))[0LL];;
	if (((*(_154134_tokens)).len() == 1LL)) {
		_1ac9124be_pushErr(_self_.ptr(), _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154213_token=(*(_154134_tokens))[1LL];
	{
		auto &_match_expr{ (*(_154213_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b1ed83a9:;
			{
				return jule::Any(_1ac91d255_buildBindFn(_self_, (*(_154134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b1ed8420:;
			{
				return jule::Any(_1ac91d596_buildBindVar(_self_, (*(_154134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b1ed8035:;
			{
				return jule::Any(_1ac91d8d7_buildBindStruct(_self_, (*(_154134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b1ed80ac:;
			{
				return jule::Any(_1ac91dc28_buildBindTypeAlias(_self_, (*(_154134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b1ed79c4:;
			{
				_1ac9124be_pushErr(_self_, _154213_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b1ed7ebe:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd32505_FnDecl> _1ac91e6eb_getMethod(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _156534_tokens) {
	jule::I32 _156613_i = 0LL;;
	jule::Ptr<_1abd0a38a_Token> _156713_token = (*(_156534_tokens))[_156613_i];;
	if (((*(_156713_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1ac9124be_pushErr(_self_.ptr(), _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_156613_i + 1LL) >= (*(_156534_tokens)).len())) {
			_1ac9124be_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_156613_i)++;
		_156713_token=(*(_156534_tokens))[_156613_i];
	};
	if (((*_156713_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_1ac9124be_pushErr(_self_, _156713_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ac91865c_buildFn(_self_, _156534_tokens, true, false);;
}



inline void _1ac91ea5e_parseImplBody(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3c4aa_Impl>* _159438_ipl, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _159455_tokens) {
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _159513_stmts = _1ac8e2ea5_splitStmts(_159455_tokens);;
	{
		auto expr = &(_159513_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1ee0d95:;
		if (it != expr_end) {
			jule::Ptr<_1ac8e2aed_stmt> _159621_stmt = *it;
			{
				(*(_159455_tokens))=(*(_159621_stmt))._field_tokens;
				jule::Ptr<_1abd0a38a_Token> _159817_token = (*(_159455_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1b1ee146c:;
						{
							_1ac91326c_pushDirective(_self_.ptr(), _1ac912eb4_buildDirective(_self_, (*(_159455_tokens))));
							goto _iter_next_1b1ee0d95;
						}
					}
					_match_end_1b1ee20a5:;
				};
				{
					auto &_match_expr{ (*(_159817_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1b1ee32c6:;
						{
							jule::Ptr<_1abd336b0_VarDecl> _160721_v = _1ac915291_buildVar(_self_, (*(_159455_tokens)));;
							if ((_160721_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Statics; __jule_push_dest.push(_160721_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b1ee333c:;
						{
							jule::Ptr<_1abd32505_FnDecl> _161421_f = _1ac91e6eb_getMethod(_self_, _159455_tokens);;
							if ((_161421_f != nullptr)) {
								_1ac91c760_checkMethodReceiver(_self_, &(_161421_f));
								_1ac920499_applyFnMeta(_self_, &(_161421_f));
								{ jule::Slice<jule::Ptr<_1abd32505_FnDecl>> &__jule_push_dest = (*((*(_159438_ipl))))._field_Methods; __jule_push_dest.push(_161421_f); };
							};
						}
					}
					else {
						_case_begin_1b1ee21e8:;
						{
							_1ac9124be_pushErr(_self_, _159817_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b1ee0d95;
						}
					}
					_match_end_1b1ee26b0:;
				};
			}
			_iter_next_1b1ee0d95:;
			++it;
			goto _iter_begin_1b1ee0d95;
		}
		_iter_end_1b1ee0d95:;
	};
}



inline jule::Ptr<_1abd3c4aa_Impl> _1ac91eda0_buildImpl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _162733_tokens) {
	jule::Ptr<_1abd0a38a_Token> _162813_token = _162733_tokens[0LL];;
	if ((_162733_tokens.len() < 2LL)) {
		_1ac9124be_pushErr(_self_.ptr(), _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _163413_i = 1LL;;
	jule::Ptr<_1abd20845_TypeDecl> _163613_base;
	jule::Bool _163623_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		_163613_base = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1ac9124be_pushErr(_self_, _162813_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abd3c4aa_Impl> _164513_ipl = jule::new_ptr<_1abd3c4aa_Impl>(_1abd3c4aa_Impl{._field_Base=_163613_base, });;
	_162813_token=_162733_tokens[_163413_i];
	if (((*(_162813_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_162813_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_164513_ipl))._field_Base, (*_164513_ipl.alloc)._field_Dest);
			goto _julec_label_1b1eeee81;
		};
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_163413_i)++;
	if ((_163413_i >= _162733_tokens.len())) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType(_self_, &(_162733_tokens), (&(_163413_i)), true);
		(*_164513_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_163623_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_163623_ok))) {
		return nullptr;;
	};
	if ((_163413_i >= _162733_tokens.len())) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b1eeee81:;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _168313_bodyTokens = _1ac9101c0_range(&(_163413_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_162733_tokens));;
	if ((_168313_bodyTokens == nullptr)) {
		_1ac911d1a_stop(_self_);
		_1ac9124be_pushErr(_self_, _162813_token, jule::Str::lit("body is not exist", 17), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_163413_i < _162733_tokens.len())) {
		_1ac9124be_pushErr(_self_, _162733_tokens[_163413_i], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	(*_164513_ipl.alloc)._field_End=_162733_tokens[(_163413_i - 1LL)];
	_1ac91ea5e_parseImplBody(_self_, &(_164513_ipl), &(_168313_bodyTokens));
	return _164513_ipl;;
}



inline jule::Any _1ac9201e1_buildNodeData(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _169838_tokens) {
	jule::Ptr<_1abd0a38a_Token> _169913_token = (*(_169838_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_169913_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b2004d32:;
			{
				jule::Ptr<_1abd32505_FnDecl> _170317_f = _1ac91865c_buildFn(_self_, _169838_tokens, false, false);;
				if ((_170317_f != nullptr)) {
					(*_170317_f.alloc)._field_Global=true;
				};
				return jule::Any(_170317_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b200542b:;
			{
				return jule::Any(_1ac915291_buildVar(_self_, (*(_169838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b2005492:;
			{
				return jule::Any(_1ac914416_buildTypeAliasDecl(_self_, _169838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1b2004947:;
			{
				return _1ac91b9d4_buildNodeEnumDecl(_self_, _169838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b20049ad:;
			{
				return jule::Any(_1ac91c4a7_buildStructDecl(_self_, _169838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1b2004a24:;
			{
				return jule::Any(_1ac91ce14_buildTraitDecl(_self_, _169838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1b2004a8a:;
			{
				return jule::Any(_1ac91eda0_buildImpl(_self_, (*(_169838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b2004b01:;
			{
				return _1ac91e3aa_buildBind(_self_, _169838_tokens);;
			}
		}
		else {
			_case_begin_1b200465b:;
			{
				_1ac9124be_pushErr(_self_.ptr(), _169913_token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b20048e2:;
	};
}



inline void _1ac920499_applyFnMeta(_1ac911a1d_parser* _self_, jule::Ptr<_1abd32505_FnDecl>* _173135_f) {
	(*((*(_173135_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ac920752_applyMeta(_1ac911a1d_parser* _self_, _1abd1e844_Node* _173633_node) {
	{
		auto &_match_expr{ (*(_173633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b200b3bb:;
			{
				jule::Ptr<_1abd336b0_VarDecl> _173917_v = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1abd336b0_VarDecl>();;
				if ((_173917_v == nullptr)) {
					return;;
				};
				(*(_173917_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b200b135:;
			{
				jule::Ptr<_1abd32505_FnDecl> _174617_f = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1abd32505_FnDecl>();;
				if ((_174617_f == nullptr)) {
					return;;
				};
				_1ac920499_applyFnMeta(_self_, &(_174617_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b200b465:;
			{
				jule::Ptr<_1abd3b60d_StructDecl> _175217_sd = (*(_173633_node))._field_Data.unsafe_cast_ptr<_1abd3b60d_StructDecl>();;
				if ((_175217_sd == nullptr)) {
					return;;
				};
				(*(_175217_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b200b344:;
	};
}



inline void _1ac920a0a_pushUseDecl(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd3894b_UseDecl>* _176136_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_UseDecls,jule::Slice<jule::Ptr<_1abd3894b_UseDecl>>::make({(*(_176136_decl))}));
	if (((*(*_self_.alloc)._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1ac9124be_pushErr(_self_, (*((*(_176136_decl))))._field_Token, jule::Str::lit("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1ac912832_pushSuggestion(_self_, jule::Str::lit("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ac920d4b_pushMetaNodes(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _176938_tokens) {
	{
		auto &_match_expr{ (*((*(_176938_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b2012713:;
			{
				;
				jule::Ptr<_1abd3894b_UseDecl> _177317_decl = _1ac91a087_buildUseDecl(_self_.ptr(), (*(_176938_tokens)), false);;
				_1ac920a0a_pushUseDecl(_self_, &(_177317_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b201278a:;
			{
				if ((((*(_176938_tokens)).len() > 1LL) && ((*((*(_176938_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1abd3894b_UseDecl> _177821_decl = _1ac91e069_buildBindUse(_self_, (*(_176938_tokens)));;
					_1ac920a0a_pushUseDecl(_self_, &(_177821_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1b2012801:;
			{
				_1ac91326c_pushDirective(_self_.ptr(), _1ac912eb4_buildDirective(_self_, (*(_176938_tokens))));
				return true;;
			}
		}
		_match_end_1b2012614:;
	};
	return false;;
}



inline _1abd1e844_Node _1ac92118c_parseNode(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _178934_st) {
	_1abd1e844_Node _179013_node = _1abd1e844_Node{._field_Token=(*(_178934_st))[0LL], };;
	if (_1ac920d4b_pushMetaNodes(_self_, _178934_st)) {
		return _179013_node;;
	};
	jule::Any _179813_data = _1ac9201e1_buildNodeData(_self_, _178934_st);;
	if ((_179813_data == nullptr)) {
		return _179013_node;;
	};
	_179013_node._field_Data=_179813_data;
	_1ac920752_applyMeta(_self_, &(_179013_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ac9124be_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _179013_node;;
}



inline void _1ac921445_appendNode(jule::Ptr<_1ac911a1d_parser> _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _181335_st) {
	if (((*(_181335_st)).len() == 0LL)) {
		return;;
	};
	_1abd1e844_Node _181713_node = _1ac92118c_parseNode(_self_, _181335_st);;
	if (((_181713_node._field_Data != nullptr) && (!(_1ac9120a1_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_Nodes,jule::Slice<_1abd1e844_Node>::make({_181713_node}));
	};
}



inline void _1ac92191d_removeRange(_1ac911a1d_parser* _self_, jule::I32 _182330_i, jule::U32 _182338_id, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _182352_tokens, jule::Slice<jule::I32>* _182375_ranges) {
	jule::U32 _18249_close = _1ac910bc6_getCloseOfBrace(_182338_id);;
	for (; (_182330_i >= 0LL); (_182330_i)--) {
		{
			jule::Ptr<_1abd0a38a_Token> _182613_tok = (*(_182352_tokens))[(*(_182375_ranges))[_182330_i]];;
			if (((*(_182613_tok))._field_Id != _18249_close)) {
				goto _iter_next_1b201c982;
			};
			(*(_182375_ranges))=jule::append((*(_182375_ranges)).slice(0LL, _182330_i),(*(_182375_ranges)).slice((_182330_i + 1LL)));
			goto _iter_end_1b201c982;
		}
	_iter_next_1b201c982:;
	}
	_iter_end_1b201c982:;;
}



inline void _1ac921d3b_pushWrongOrderCloseErr(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token>* _183542_t, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _183554_tokens, jule::Slice<jule::I32>* _183573_ranges) {
	{
		auto &_match_expr{ (*((*(_183554_tokens))[(*(_183573_ranges))[((*(_183573_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1b201ec92:;
			{
				_1ac9124be_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b201ed19:;
			{
				_1ac9124be_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b201ed80:;
			{
				_1ac9124be_pushErr(_self_, (*(_183542_t)), jule::Str::lit("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b201eb93:;
	};
}



inline void _1ac922314_pushRangeClose(_1ac911a1d_parser* _self_, jule::Ptr<_1abd0a38a_Token> _184633_t, jule::U32 _184644_left, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _184660_tokens, jule::Slice<jule::I32>* _184683_ranges) {
	jule::I32 _18479_n = (*(_184683_ranges)).len();;
	if ((_18479_n == 0LL)) {
		{
			auto &_match_expr{ (*(_184633_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1b2022965:;
				{
					_1ac9124be_pushErr(_self_, _184633_t, jule::Str::lit("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1b20229dc:;
				{
					_1ac9124be_pushErr(_self_, _184633_t, jule::Str::lit("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1b2022a53:;
				{
					_1ac9124be_pushErr(_self_, _184633_t, jule::Str::lit("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b20228aa:;
		};
		return;;
	} else if (((*((*(_184660_tokens))[(*(_184683_ranges))[(_18479_n - 1LL)]]))._field_Id != _184644_left)) {
		_1ac921d3b_pushWrongOrderCloseErr(_self_, &(_184633_t), _184660_tokens, _184683_ranges);
	};
	_1ac92191d_removeRange(_self_, (_18479_n - 1LL), (*(_184633_t))._field_Id, _184660_tokens, _184683_ranges);
}



inline void _1ac9225bc_checkRanges(_1ac911a1d_parser* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _186431_tokens) {
	jule::Slice<jule::I32> _186517_ranges = nullptr;;
	{
		auto expr = _186431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2024b98:;
		if (it != expr_end) {
			jule::I32 _186713_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> *_186716_token = it;
			{
				{
					auto &_match_expr{ (*((*(_186716_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b20268d1:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _186517_ranges; __jule_push_dest.push(_186713_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b2026969:;
						{
							_1ac922314_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(74LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1b20269d0:;
						{
							_1ac922314_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(72LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b2026a46:;
						{
							_1ac922314_pushRangeClose(_self_, (*(_186716_token)), static_cast<jule::U32>(76LLU), _186431_tokens, &(_186517_ranges));
						}
					}
					_match_end_1b2026826:;
				};
			}
			_iter_next_1b2024b98:;
			++it;
			_186713_i++;
			goto _iter_begin_1b2024b98;
		}
		_iter_end_1b2024b98:;
	};
	{
		auto expr = &(_186517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2025b22:;
		if (it != expr_end) {
			jule::I32 _188216_i = *it;
			{
				jule::Ptr<_1abd0a38a_Token> _188313_token = (*(_186431_tokens))[_188216_i];;
				{
					auto &_match_expr{ (*(_188313_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b20298b2:;
						{
							_1ac9124be_pushErr(_self_, _188313_token, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b2029928:;
						{
							_1ac9124be_pushErr(_self_, _188313_token, jule::Str::lit("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b202998e:;
						{
							_1ac9124be_pushErr(_self_, _188313_token, jule::Str::lit("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b202985c:;
				};
			}
			_iter_next_1b2025b22:;
			++it;
			goto _iter_begin_1b2025b22;
		}
		_iter_end_1b2025b22:;
	};
}



inline void _1ac922875_parse(jule::Ptr<_1ac911a1d_parser> _self_, jule::Ptr<_1abd10b21_File>* _189530_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1abd1d931_Ast>(_1abd1d931_Ast{._field_File=(*(_189530_f)), });
	(*_self_.alloc)._field_ep=jule::new_ptr<_1ac900db4_exprBuilder>(_1ac900db4_exprBuilder{._field_p=_self_});
	_1ac9225bc_checkRanges(_self_, &((*((*(_189530_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _190813_stmts = _1ac8e2ea5_splitStmts(&((*((*(_189530_f))))._field_Tokens));;
	jule::I32 _191113_i = 0LL;;
	for (; (_191113_i < _190813_stmts.len()); (_191113_i)++) {
		{
			jule::Ptr<_1ac8e2aed_stmt> _191317_stmt = _190813_stmts[_191113_i];;
			if (((*(_191317_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_191317_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1b202d234;
			};
			if ((!(_1eb230d8c_IsTopDirective((*((*_191317_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1b202d234;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*_self_.alloc)._field_ast.alloc)._field_TopDirectives,jule::Slice<jule::Ptr<_1abd1ec62_Directive>>::make({_1ac912eb4_buildDirective(_self_, (*_191317_stmt.alloc)._field_tokens)}));
		}
	_iter_next_1b202d234:;
	}
	_iter_end_1b202d234:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_191113_i < _190813_stmts.len()) && (!(_1ac9120a1_stopped(_self_)))); (_191113_i)++) {
		{
			_1ac921445_appendNode(_self_, &((*(_190813_stmts[_191113_i]))._field_tokens));
		}
	_iter_next_1b203159a:;
	}
	_iter_end_1b203159a:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ac9124be_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac911a1d_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ac9241d4_pushErr(_1ac923b40_typeBuilder* _self_, jule::Ptr<_1abd0a38a_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1ac9124be_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ac924547_pushSuggestion(_1ac923b40_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1ac912832_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac9247cd_buildNamespace(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd20845_TypeDecl> _5513_t = jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1abd215e3_NamespaceTypeDecl> _5913_nst = jule::new_ptr<_1abd215e3_NamespaceTypeDecl>();;
	jule::I32 _6013_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _6217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6013_n & 1LL) == 0LL)) {
				if (((*(_6217_token))._field_Id != static_cast<jule::U32>(1LLU))) {
					_1ac9241d4_pushErr(_self_, _6217_token, jule::Str::lit("invalid syntax", 14));
					_1ac924547_pushSuggestion(_self_, jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				(*_5913_nst.alloc)._field_Idents=jule::append((*_5913_nst.alloc)._field_Idents,jule::Slice<jule::Ptr<_1abd0a38a_Token>>::make({_6217_token}));
			} else if (((*(_6217_token))._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1b2036d0e;
			};
			(_6013_n)++;
		}
	_iter_next_1b2036d0e:;
	}
	_iter_end_1b2036d0e:;;
	((*(_5913_nst))._field_Idents).mut_slice(0LL, ((*(_5913_nst))._field_Idents.len() - 1LL));;
	((*((*(_self_))._field_i)))--;
	(*_5913_nst.alloc)._field_Kind=_1ac925081_buildIdent(_self_);
	(*(_5513_t))._field_Kind=jule::Any(_5913_nst, &__jule_any_type91);
	return _5513_t;;
}



inline jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _1ac924a64_buildGenerics(_1ac923b40_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1abd0a38a_Token> _889_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_889_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _9313_parts = _1ac924cea_identGenerics(_self_);;
	if ((_9313_parts.len() == 0LL)) {
		_1ac9241d4_pushErr(_self_, _889_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> _9913_types = jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>::alloc(0LL, _9313_parts.len());;
	{
		auto expr = &(_9313_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19325c8:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _10021_part = *it;
			{
				jule::I32 _10117_j = 0LL;;
				jule::Ptr<_1abd20845_TypeDecl> _10217_t;
				({
					__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &(_10021_part), (&(_10117_j)), true);
					_10217_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10117_j < _10021_part.len())) {
					_1ac9241d4_pushErr(_self_, _10021_part[_10117_j], jule::Str::lit("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1abd20845_TypeDecl>> &__jule_push_dest = _9913_types; __jule_push_dest.push(_10217_t); };
			}
			_iter_next_1b19325c8:;
			++it;
			goto _iter_begin_1b19325c8;
		}
		_iter_end_1b19325c8:;
	};
	return _9913_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac924cea_identGenerics(_1ac923b40_typeBuilder* _self_) {
	jule::I32 _1129_first = (*((*(_self_))._field_i));;
	jule::I32 _11313_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _11513_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_11513_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1b1936445:;
					{
						(_11313_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1b1936753:;
					{
						(_11313_rangeN)--;
					}
				}
				_match_end_1b19366ed:;
			};
			if ((_11313_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b19355dc;
			};
		}
	_iter_next_1b19355dc:;
	}
	_iter_end_1b19355dc:;;
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _12713_tokens = (*(_self_))._field_tokens.slice((_1129_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _12813_parts;
	jule::Slice<_1eb22e132_Log> _12820_errors;
	({
		__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac910940_parts(&(_12713_tokens), static_cast<jule::U32>(5LLU), true);
		_12813_parts = __jule_assign_result.__jule_result_arg0;
		_12820_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12820_errors);
	};
	return _12813_parts;;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac925081_buildIdent(_1ac923b40_typeBuilder* _self_) {
	jule::Bool _13613_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13613_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1ac9247cd_buildNamespace(_self_);;
	};
	jule::Ptr<_1abd0a38a_Token> _14013_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1abd20e50_IdentTypeDecl> _14113_it = jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=_14013_token, ._field_Ident=(*(_14013_token))._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abd20845_TypeDecl> _14713_itd = jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_14113_it, &__jule_any_type74)});;
	if (((!(_13613_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_14113_it))._field_Generics=_1ac924a64_buildGenerics(_self_);
		return _14713_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ac9241d4_pushErr(_self_, _14013_token, jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ac9241d4_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("invalid syntax", 14));
		return _14713_itd;;
	};
	jule::Ptr<_1abd21219_SubIdentTypeDecl> _16413_sit = jule::new_ptr<_1abd21219_SubIdentTypeDecl>();;
	(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>>::make({_14113_it}));
	jule::Ptr<_1abd20845_TypeDecl> _16613_ident = _1ac925081_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_16613_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b1942330:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>>::make({(*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1abd20e50_IdentTypeDecl>()}));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b193b923:;
			{
				(*_16413_sit.alloc)._field_Idents=jule::append((*_16413_sit.alloc)._field_Idents,(*((*(_16613_ident))._field_Kind.unsafe_cast_ptr<_1abd21219_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1b1940053:;
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_14013_token, ._field_Kind=jule::Any(_16413_sit, &__jule_any_type87)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac925317_buildCppLink(_1ac923b40_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1ac9241d4_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1abd20845_TypeDecl> _18513_t = _1ac925081_buildIdent(_self_);;
	(*((*(_18513_t))._field_Kind.cast_ptr<_1abd20e50_IdentTypeDecl>(&__jule_any_type74)))._field_Binded=true;
	return _18513_t;;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac92559d_buildFn(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _19113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1abd32505_FnDecl> _19213_f = _1ac9181a6_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19213_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abd32868_IsAnon(_19213_f.ptr())))) {
		_1ac9241d4_pushErr(_self_, (*(_19213_f))._field_Token, jule::Str::lit("invalid syntax", 14));
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_19113_token, ._field_Kind=jule::Any(_19213_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac925834_buildPtr(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _20613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, _20613_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1abd2236e_PtrTypeDecl>(_1abd2236e_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type70)});;
	};
	jule::Ptr<_1abd20845_TypeDecl> _22313_elem = _1ac92688a_step(_self_);;
	if ((_22313_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_20613_token, ._field_Kind=jule::Any(jule::new_ptr<_1abd2236e_PtrTypeDecl>(_1abd2236e_PtrTypeDecl{._field_Elem=_22313_elem}), &__jule_any_type70)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac925aba_buildSptr(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _23713_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, _23713_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abd20845_TypeDecl> _24413_elem = _1ac92688a_step(_self_);;
	if ((_24413_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_23713_token, ._field_Kind=jule::Any(jule::new_ptr<_1abd218e0_SptrTypeDecl>(_1abd218e0_SptrTypeDecl{._field_Elem=_24413_elem}), &__jule_any_type71)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac925d51_buildSlc(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _25813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abd20845_TypeDecl> _26013_elem = _1ac92688a_step(_self_);;
	if ((_26013_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_25813_token, ._field_Kind=jule::Any(jule::new_ptr<_1abd21c75_SlcTypeDecl>(_1abd21c75_SlcTypeDecl{._field_Elem=_26013_elem}), &__jule_any_type69)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac9260d7_buildArr(_1ac923b40_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _27313_exprTokens = _1ac9101c0_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1abd20845_TypeDecl> _27913_elem = _1ac92688a_step(_self_);;
	if ((_27913_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd22b11_ArrTypeDecl> _28413_arrt = jule::new_ptr<_1abd22b11_ArrTypeDecl>(_1abd22b11_ArrTypeDecl{._field_Elem=_27913_elem, });;
	jule::Ptr<_1abd0a38a_Token> _28813_token = _27313_exprTokens[0LL];;
	if (((_27313_exprTokens.len() == 1LL) && ((*(_28813_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_28413_arrt))._field_Size=_1ac912b73_buildExpr((*(_self_))._field_p, &(_27313_exprTokens));
	};
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_28813_token, ._field_Kind=jule::Any(_28413_arrt, &__jule_any_type68)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac92636d_buildMap(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _30213_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _31013_keyTokens = _1ac9101c0_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str::lit("type missing", 12));
		return nullptr;;
	} else if ((_31013_keyTokens.len() == 0LL)) {
		_1ac9241d4_pushErr(_self_, _30213_mapToken, jule::Str::lit("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1abd2335e_MapTypeDecl> _31913_mapt = jule::new_ptr<_1abd2335e_MapTypeDecl>();;
	jule::I32 _32013_j = 0LL;;
	jule::Ptr<_1abd20845_TypeDecl> _32113_keyt;
	jule::Bool _32123_ok;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &(_31013_keyTokens), (&(_32013_j)), (*(_self_))._field_err);
		_32113_keyt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	} else if ((_32013_j < _31013_keyTokens.len())) {
		_1ac9241d4_pushErr(_self_, _31013_keyTokens[_32013_j], jule::Str::lit("invalid syntax", 14));
	};
	(*_31913_mapt.alloc)._field_Key=_32113_keyt;
	jule::Ptr<_1abd20845_TypeDecl> _32913_valt;
	({
		__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_assign_result = _1ac9140c5_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32913_valt = __jule_assign_result.__jule_result_arg0;
		_32123_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32123_ok))) {
		return nullptr;;
	};
	(*_31913_mapt.alloc)._field_Val=_32913_valt;
	return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Token=_30213_mapToken, ._field_Kind=jule::Any(_31913_mapt, &__jule_any_type72)});;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac926604_buildEnumerable(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _34113_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ac9241d4_pushErr(_self_, _34113_token, jule::Str::lit("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34113_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_34113_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1ac925d51_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ac9260d7_buildArr(_self_);;
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac92688a_step(_1ac923b40_typeBuilder* _self_) {
	jule::Ptr<_1abd0a38a_Token> _3569_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3569_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b1962240:;
			{
				return _1ac925081_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b1962691:;
			{
				return _1ac925317_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b19627b2:;
			{
				return _1ac92559d_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1961e32:;
			{
				return _1ac925834_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b1961e98:;
			{
				return _1ac925aba_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b196200e:;
			{
				return jule::new_ptr<_1abd20845_TypeDecl>(_1abd20845_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1abd218e0_SptrTypeDecl>(_1abd218e0_SptrTypeDecl{._field_Elem=_1ac925aba_buildSptr(_self_)}), &__jule_any_type71)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b1962075:;
			{
				return _1ac926604_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1b19620ec:;
			{
				return _1ac92636d_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b1961b13:;
			{
				((*((*(_self_))._field_i)))++;
				_1ac9241d4_pushErr(_self_, _3569_token, jule::Str::lit("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b1961dcc:;
	};
}



inline __jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool _1ac926b21_build(_1ac923b40_typeBuilder* _self_) {
	__jule_tuple_x_1abd20845_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abd20845_TypeDecl> _38813_root = _1ac92688a_step(_self_);;
	if ((_38813_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ac92337b_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38813_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac923b40_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac17be37_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1ac17d961_pushErr(_1ac17d411_directiveEval* _self_, jule::Ptr<_1abd0a38a_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2126_t))._field_Row, ._field_Column=(*_2126_t.alloc)._field_Column, ._field_Path=(*((*_2126_t.alloc)._field_File))._field_Path, ._field_Text=_1eb22e594_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _1ac17dd5c_splitOperans(_1ac17d411_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _3413_parts = jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3513_i = 0LL;;
	jule::I32 _3613_rangeN = 0LL;;
	jule::I32 _3713_last = 0LL;;
	for (; (_3513_i < ((*(_3349_tokens)).len() - 1LL)); (_3513_i)++) {
		{
			jule::Ptr<_1abd0a38a_Token> _3913_b = (*(_3349_tokens))[_3513_i];;
			{
				auto &_match_expr{ (*(_3913_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1987265:;
					{
						(_3613_rangeN)++;
						goto _iter_next_1b19867d6;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1987573:;
					{
						(_3613_rangeN)--;
					}
				}
				_match_end_1b198751d:;
			};
			if (((_3613_rangeN > 0LL) || ((*(_3913_b))._field_Id != _3331_op))) {
				goto _iter_next_1b19867d6;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last, _3513_i)); };
			_3713_last=(_3513_i + 1LL);
		}
	_iter_next_1b19867d6:;
	}
	_iter_end_1b19867d6:;;
	if ((_3713_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> &__jule_push_dest = _3413_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3713_last)); };
	} else {
		_1ac17d961_pushErr(_self_, (*(_3349_tokens))[(_3713_last - 1LL)], jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3413_parts;;
}



inline jule::Bool _1ac17e19d_evalDirectiveIdent(_1ac17d411_directiveEval* _self_, jule::Str _6433_ident) {
	if ((_6433_ident).empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b198a422:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1b198a422:;
			++it;
			goto _iter_begin_1b198a422;
		}
		_iter_end_1b198a422:;
	};
	return false;;
}



inline jule::Bool _1ac17e4de_evalDirectivePart(_1ac17d411_directiveEval* _self_, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _7840_part) {
	jule::Bool _799_logicalNot = ((*(_7840_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_799_logicalNot) {
		(_7840_part).mut_slice(1LL);;
	};
	if ((_7840_part.len() > 1LL)) {
		_1ac17d961_pushErr(_self_, _7840_part[1LL], jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8913_result = _1ac17e19d_evalDirectiveIdent(_self_, (*(_7840_part[0LL]))._field_Kind);;
	if (_799_logicalNot) {
		_8913_result=(!(_8913_result));
	};
	return _8913_result;;
}



inline jule::Bool _1ac17e775_eval(_1ac17d411_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ac17d961_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10213_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _10413_logicalOrParts = _1ac17dd5c_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_10413_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10413_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1990856:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _10921_part = *it;
			{
				jule::Bool _11017_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> _11117_logicalAndParts = _1ac17dd5c_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11117_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11117_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b199202d:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1abd0a38a_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1abd0a38a_Token> _11717_first = _11625_andPart[0LL];;
							if (((*(_11717_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1abd0a38a_Token> _11921_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if (((*(_11921_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1ac17d961_pushErr(_self_, _11717_first, jule::Str::lit("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								(_11625_andPart).mut_slice(1LL, (_11625_andPart.len() - 1LL));;
							};
							_11017_and=(_11017_and && _1ac17e4de_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1b199202d:;
						++it;
						goto _iter_begin_1b199202d;
					}
					_iter_end_1b199202d:;
				};
				_10213_result=(_10213_result || _11017_and);
			}
			_iter_next_1b1990856:;
			++it;
			goto _iter_begin_1b1990856;
		}
		_iter_end_1b1990856:;
	};
	return _10213_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac17d411_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac927b33_JuleImporter> static__1ac92802e_New(_1ac17be37_CompileInfo _5819_info) {
	jule::Ptr<_1ac927b33_JuleImporter> _5913_imp = jule::new_ptr<_1ac927b33_JuleImporter>(_1ac927b33_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_20b1a024c_PathStdlib}), });;
	_1ac17c7b7_initVars(&((*(_5913_imp))._field_vars), &(_5819_info));
	return _5913_imp;;
}



inline jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _1ac9282b5_AllPackages(_1ac927b33_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ac928705_SetModPath(_1ac927b33_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ac92898b_GetModPath(_1ac927b33_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ac928ccc_ModById(_1ac927b33_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ac92911d_GetImport(_1ac927b33_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1998683:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _8821_p = *it;
			{
				if (((*(_8821_p))._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b1998683:;
			++it;
			goto _iter_begin_1b1998683;
		}
		_iter_end_1b1998683:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log _1ac929519_ImportPackage(_1ac927b33_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_func_result;
	jule::Slice<jule::Ptr<_209c238a4_DirEntry>> _9713_dirents = ({
		auto except = static__20b0e64c3_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1eb22e132_Log>::make({_1ac927649_flatCompilerErr((jule::Str::lit("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_209c238a4_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10213_newMod = _1ab693e55_FindModuleFileDeep(_9632_path);;
		if ((_10213_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10213_newMod;
			jule::Slice<_1eb22e132_Log> _10521_errs = _1ab69421e_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10521_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10521_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1abd1d931_Ast>> _11213_asts = jule::Slice<jule::Ptr<_1abd1d931_Ast>>::alloc(0LL, _9713_dirents.len());;
	{
		auto expr = &(_9713_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1999cd3:;
		if (it != expr_end) {
			jule::Ptr<_209c238a4_DirEntry> _11316_dirent = *it;
			{
				if ((_209c27347_IsDir((*(_11316_dirent))._field_Stat.ptr()) || (!(_20b0da253_HasSuffix((*_11316_dirent.alloc)._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1b1999cd3;
				};
				jule::Str _11913__path = _20b0e500a_Join(jule::Slice<jule::Str>::make({_9632_path,(*_11316_dirent.alloc)._field_Name}));;
				jule::Ptr<_1abd10b21_File> _12017_file = _1abd11eeb_NewFileSet(_11913__path);;
				_1abd1103e_Fill(_12017_file.ptr(), _1ac92733b_readBuff((*_12017_file.alloc)._field_Path));
				jule::Slice<_1eb22e132_Log> _12217_errors = _1abd1d4d0_Lex(_12017_file, static_cast<jule::I32>(0LL));;
				if ((_12217_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12217_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac899764_FileInfo> _12717_finfo = _1ac89c4ae_ParseFile(_12017_file);;
				if (((*(_12717_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_12717_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ac15ba60_isPassFileAnnotation((*_11316_dirent.alloc)._field_Name)))) {
					goto _iter_next_1b1999cd3;
				};
				jule::Bool _13713_r;
				jule::Slice<_1eb22e132_Log> _13720_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac929c01_isPassBuildDirectives(_self_, &((*_12717_finfo.alloc)._field_Ast));
					_13713_r = __jule_assign_result.__jule_result_arg0;
					_13720_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13720_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13720_logs;
					return __jule_func_result;;
				};
				if ((!(_13713_r))) {
					goto _iter_next_1b1999cd3;
				};
				{ jule::Slice<jule::Ptr<_1abd1d931_Ast>> &__jule_push_dest = _11213_asts; __jule_push_dest.push((*_12717_finfo.alloc)._field_Ast); };
			}
			_iter_next_1b1999cd3:;
			++it;
			goto _iter_begin_1b1999cd3;
		}
		_iter_end_1b1999cd3:;
	};
	__jule_func_result.__jule_result_arg0 = _11213_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac9297c2_Imported(_1ac927b33_JuleImporter* _self_, jule::Ptr<_1ab67760e_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b199c962:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _15516_p = *it;
			{
				if ((((*(_15516_p))._field_Binded == (*(_15331_imp))._field_Binded) && ((*_15516_p.alloc)._field_LinkPath == (*_15331_imp.alloc)._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b199c962:;
			++it;
			goto _iter_begin_1b199c962;
		}
		_iter_end_1b199c962:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b19a4eb9:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						(*_15331_imp.alloc)._field_ModId=_16217_i;
						goto _julec_label_1b19a563a;
					};
				}
				_iter_next_1b19a4eb9:;
				++it;
				_16217_i++;
				goto _iter_begin_1b19a4eb9;
			}
			_iter_end_1b19a4eb9:;
		};
		(*_15331_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1b19a563a:;
	};
	{ jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1eb22e132_Log _1ac929c01_isPassBuildDirectives(_1ac927b33_JuleImporter* _self_, jule::Ptr<_1abd1d931_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1eb22e132_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_17945_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19a8077:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _18021_td = *it;
			{
				if ((!(*((*(_18021_td))._field_Tag))._field_Kind.equal("build", 5))) {
					goto _iter_next_1b19a8077;
				};
				_1ac17d411_directiveEval _18417_de = _1ac17d411_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18813_result = _1ac17e775_eval(&_18417_de);;
				if ((_18417_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18417_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18813_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b19a8077:;
			++it;
			goto _iter_begin_1b19a8077;
		}
		_iter_end_1b19a8077:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac927b33_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac937ec8_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1aca7a58d_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1acaae78c_optimizeChild(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _3938_s) {
	jule::Ptr<_1acaae2a3_scopeDeadCode> _4013_sdc = jule::new_ptr<_1acaae2a3_scopeDeadCode>(_1acaae2a3_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*((*(_3938_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1acab21a7_optimizeStmts(_4013_sdc);
	};
}



inline void _1acaaea45_optimizeBodyChildExceptional(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _5053_s) {
	jule::Ptr<_1acaae2a3_scopeDeadCode> _5113_sdc = jule::new_ptr<_1acaae2a3_scopeDeadCode>(_1acaae2a3_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*((*(_5053_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1acab21a7_optimizeStmts(_5113_sdc);
	};
}



inline void _1acaaeced_optimizeBodyChild(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab655576_Scope>* _6142_s) {
	jule::Ptr<_1acaae2a3_scopeDeadCode> _6213_sdc = jule::new_ptr<_1acaae2a3_scopeDeadCode>(_1acaae2a3_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*((*(_6142_s))))._field_Stmts)), ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, });;
	{
		_1acab21a7_optimizeStmts(_6213_sdc);
	};
}



inline void _1acab00a6_optimizeExprModel(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1acab353d_exprDeadCode _729_edc = static__1acab3b7b_new(&(_self_));;
	_1acab9aa5_optimize(&_729_edc, _7142_model);
}



inline void _1acab02a4_eliminateFollowed(_1acaae2a3_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_stmts))).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1acaae2a3_scopeDeadCode> _8313_parent = (*(_self_))._field_parent;;
	while ((_8313_parent != nullptr)) {
		{
			{
				((*((*(_8313_parent))._field_stmts))).mut_slice(0LL, ((*(_8313_parent))._field_i + 1LL));;
			};
			_8313_parent=(*_8313_parent.alloc)._field_parent;
		}
	_iter_next_1b212762a:;
	}
	_iter_end_1b212762a:;;
}



inline void _1acab055c_pushGoto(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6582e3_GotoSt> _9232_gt) {
	jule::I32 _9313_i = 0LL;;
	for (; (_9313_i < (*((*(_self_))._field_labels)).len()); (_9313_i)++) {
		{
			if (((*(_9232_gt))._field_Ident == (*((*(*_self_.alloc)._field_labels.alloc)[_9313_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b212a4c9:;
	}
	_iter_end_1b212a4c9:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*_self_.alloc)._field_gotos.alloc),jule::Slice<jule::Ptr<_1ab6582e3_GotoSt>>::make({_9232_gt}));
}



inline void _1acab0815_pushLabel(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab657e19_Label> _10233_l) {
	jule::I32 _10313_i = 0LL;;
	while ((_10313_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_10233_l))._field_Ident == (*((*(*_self_.alloc)._field_gotos.alloc)[_10313_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_10313_i), (*((*(_self_))._field_gotos)).slice((_10313_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1b212c6a7;
			};
			(_10313_i)++;
		}
	_iter_next_1b212c6a7:;
	}
	_iter_end_1b212c6a7:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*_self_.alloc)._field_labels.alloc),jule::Slice<jule::Ptr<_1ab657e19_Label>>::make({_10233_l}));
}



inline void _1acab0abd_optimizeRangeIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6573ad_RangeIter> _11541_it) {
	_1acab00a6_optimizeExprModel(_self_, &((*((*(_11541_it))._field_Expr))._field_Model));
	_1acaaeced_optimizeBodyChild(_self_, &((*_11541_it.alloc)._field_Scope));
}



inline void _1acab0d76_optimizeWhileIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab656962_WhileIter> _12041_it) {
	_1acab00a6_optimizeExprModel(_self_, &((*(_12041_it))._field_Expr));
	if (((*_12041_it.alloc)._field_Next != nullptr)) {
		_1acab1ea9_optimizeStmt(_self_, (*_12041_it.alloc)._field_Next);
	};
	_1acaaeced_optimizeBodyChild(_self_, &((*_12041_it.alloc)._field_Scope));
}



inline void _1acab112e_optimizeInfIter(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6564ab_InfIter> _12839_it) {
	_1acaaeced_optimizeBodyChild(_self_, &((*(_12839_it))._field_Scope));
}



inline void _1acab13d7_optimizeConditional(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab6561ae_Conditional> _13243_c) {
	{
		auto expr = &((*(_13243_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2134516:;
		if (it != expr_end) {
			jule::Ptr<_1ab655994_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1acab00a6_optimizeExprModel(_self_, &((*_13321_case.alloc)._field_Expr));
					_1acaaeced_optimizeBodyChild(_self_, &((*_13321_case.alloc)._field_Scope));
				};
			}
			_iter_next_1b2134516:;
			++it;
			goto _iter_begin_1b2134516;
		}
		_iter_end_1b2134516:;
	};
	if (((*_13243_c.alloc)._field_Default != nullptr)) {
		if (((*_13243_c.alloc)._field_Elifs.len() == 0LL)) {
			_1acaae78c_optimizeChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1acaaeced_optimizeBodyChild(_self_, &((*(*_13243_c.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1acab1690_optimizeMatch(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab659789_Match> _15037_m) {
	{
		auto expr = &((*(_15037_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2137a47:;
		if (it != expr_end) {
			jule::Ptr<_1ab65a2b2_Case> _15121_case = *it;
			{
				{
					auto expr = &((*(_15121_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b21384b5:;
					if (it != expr_end) {
						jule::Ptr<_1abe11936_Data> _15225_expr = *it;
						{
							_1acab00a6_optimizeExprModel(_self_, &((*(_15225_expr))._field_Model));
						}
						_iter_next_1b21384b5:;
						++it;
						goto _iter_begin_1b21384b5;
					}
					_iter_end_1b21384b5:;
				};
				_1acaaeced_optimizeBodyChild(_self_, &((*_15121_case.alloc)._field_Scope));
			}
			_iter_next_1b2137a47:;
			++it;
			goto _iter_begin_1b2137a47;
		}
		_iter_end_1b2137a47:;
	};
	if (((*_15037_m.alloc)._field_Default != nullptr)) {
		if (((*_15037_m.alloc)._field_Cases.len() == 0LL)) {
			_1acaae78c_optimizeChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		} else {
			_1acaaeced_optimizeBodyChild(_self_, &((*(*_15037_m.alloc)._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1acab1948_optimizeAssign(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab658b73_Assign> _16838_assign) {
	_1acab00a6_optimizeExprModel(_self_, &((*((*(_16838_assign))._field_Left))._field_Model));
	_1acab00a6_optimizeExprModel(_self_, &((*((*_16838_assign.alloc)._field_Right))._field_Model));
}



inline void _1acab1c01_optimizeMultiAssign(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Ptr<_1ab659129_MultiAssign> _17343_assign) {
	{
		auto expr = &((*(_17343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b213c83d:;
		if (it != expr_end) {
			jule::Ptr<_1abe11936_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1acab00a6_optimizeExprModel(_self_, &((*_17421_l.alloc)._field_Model));
				};
			}
			_iter_next_1b213c83d:;
			++it;
			goto _iter_begin_1b213c83d;
		}
		_iter_end_1b213c83d:;
	};
	_1acab00a6_optimizeExprModel(_self_, &((*_17343_assign.alloc)._field_Right));
}



inline void _1acab1ea9_optimizeStmt(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b213e4aa:;
			{
				jule::Ptr<_1ab655576_Scope> _18517_scope = _18236_st.unsafe_cast_ptr<_1ab655576_Scope>();;
				if ((*(_18517_scope))._field_Deferred) {
					_1acab24d7_eliminateDeadCodeOfScope(_18517_scope);
				} else {
					_1acaae78c_optimizeChild(_self_, &(_18517_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b213e235:;
			{
				_1acab0abd_optimizeRangeIter(_self_, _18236_st.unsafe_cast_ptr<_1ab6573ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b213e532:;
			{
				_1acab0d76_optimizeWhileIter(_self_, _18236_st.unsafe_cast_ptr<_1ab656962_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b213e5a9:;
			{
				_1acab112e_optimizeInfIter(_self_, _18236_st.unsafe_cast_ptr<_1ab6564ab_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b213e631:;
			{
				_1acab13d7_optimizeConditional(_self_, _18236_st.unsafe_cast_ptr<_1ab6561ae_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b213e6a8:;
			{
				_1acab1690_optimizeMatch(_self_, _18236_st.unsafe_cast_ptr<_1ab659789_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b213e730:;
			{
				_1acab1948_optimizeAssign(_self_, _18236_st.unsafe_cast_ptr<_1ab658b73_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b213e7a7:;
			{
				_1acab1c01_optimizeMultiAssign(_self_, _18236_st.unsafe_cast_ptr<_1ab659129_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b213e82e:;
			{
				jule::Ptr<_1abe11936_Data> _20617_d = _18236_st.unsafe_cast_ptr<_1abe11936_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1b213e367;
				};
				{
					auto &_match_expr{ (*(_20617_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type28) {
						_case_begin_1b21455e3:;
						{
							_1acab02a4_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1b2145879:;
						{
							_1acab00a6_optimizeExprModel(_self_, &((*(_20617_d))._field_Model));
						}
					}
					_match_end_1b2145824:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b213e8a6:;
			{
				_1acab02a4_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b213e92d:;
			{
				_1acab055c_pushGoto(_self_, _18236_st.unsafe_cast_ptr<_1ab6582e3_GotoSt>());
				_1acab02a4_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b213e9a5:;
			{
				_1acab0815_pushLabel(_self_, _18236_st.unsafe_cast_ptr<_1ab657e19_Label>());
			}
		}
		_match_end_1b213e367:;
	};
}



inline void _1acab21a7_optimizeStmts(jule::Ptr<_1acaae2a3_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_stmts)).len()); ((*_self_.alloc)._field_i)++) {
		{
			_1acab1ea9_optimizeStmt(_self_, (*((*_self_.alloc)._field_stmts))[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b2148283:;
	}
	_iter_end_1b2148283:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1acaae2a3_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1acab353d_exprDeadCode static__1acab3b7b_new(jule::Ptr<_1acaae2a3_scopeDeadCode>* _4824_s) {
	return _1acab353d_exprDeadCode{._field_s=(*(_4824_s))};;
}



inline void _1acab3e34_binary(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _5425_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_5425_m))._field_Left))._field_Model));
	_1acab9aa5_optimize(_self_, &((*((*_5425_m.alloc)._field_Right))._field_Model));
}



inline void _1acab41dc_unary(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _5924_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_5924_m))._field_Expr))._field_Model));
}



inline void _1acab4495_structureLit(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _6331_m) {
	{
		auto expr = &((*(_6331_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b214bae4:;
		if (it != expr_end) {
			jule::Ptr<_1abd49264_StructArgExprModel> _6421_arg = *it;
			{
				_1acab9aa5_optimize(_self_, &((*((*(_6421_arg))._field_Expr))._field_Model));
			}
			_iter_next_1b214bae4:;
			++it;
			goto _iter_begin_1b214bae4;
		}
		_iter_end_1b214bae4:;
	};
}



inline void _1acab474d_allocStructure(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _6933_m) {
	_1acab4495_structureLit(_self_, (*(_6933_m))._field_Lit);
}



inline void _1acab4a06_casting(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _7326_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_7326_m))._field_Expr))._field_Model));
}



inline void _1acab4cae_args(_1acab353d_exprDeadCode* _self_, jule::Slice<jule::Any>* _7724_args) {
	{
		auto expr = _7724_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b214e1e0:;
		if (it != expr_end) {
			jule::Any _7821_arg = *it;
			{
				_1acab9aa5_optimize(_self_, &(_7821_arg));
			}
			_iter_next_1b214e1e0:;
			++it;
			goto _iter_begin_1b214e1e0;
		}
		_iter_end_1b214e1e0:;
	};
}



inline void _1acab5067_funcCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _8327_m) {
	_1acab9aa5_optimize(_self_, &((*(_8327_m))._field_Expr));
	_1acab4cae_args(_self_, &((*_8327_m.alloc)._field_Args));
	if (((*_8327_m.alloc)._field_Except != nullptr)) {
		_1acaaea45_optimizeBodyChildExceptional((*(_self_))._field_s, &((*_8327_m.alloc)._field_Except));
	};
}



inline void _1acab5320_slice(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _9124_m) {
	_1acab4cae_args(_self_, &((*(_9124_m))._field_Elems));
}



inline void _1acab55c8_array(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _9524_m) {
	if ((((*(_9524_m))._field_Elems.len() == 2LL) && ((*_9524_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1acab9aa5_optimize(_self_, &((*_9524_m.alloc)._field_Elems[0LL]));
	};
	_1acab4cae_args(_self_, &((*_9524_m.alloc)._field_Elems));
}



inline void _1acab5881_indexing(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _10227_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_10227_m))._field_Expr))._field_Model));
	_1acab9aa5_optimize(_self_, &((*((*_10227_m.alloc)._field_Index))._field_Model));
}



inline void _1acab5b39_anonFunc(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _10727_m) {
	_1acab24d7_eliminateDeadCodeOfScope((*((*(_10727_m))._field_Func))._field_Scope);
}



inline void _1acab5de2_mapExpr(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4c003_MapExprModel> _11126_m) {
	{
		auto expr = &((*(_11126_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2154ed7:;
		if (it != expr_end) {
			jule::Ptr<_1abd4ba4c_KeyValPairExprModel> _11221_pair = *it;
			{
				_1acab9aa5_optimize(_self_, &((*(_11221_pair))._field_Key));
				_1acab9aa5_optimize(_self_, &((*_11221_pair.alloc)._field_Val));
			}
			_iter_next_1b2154ed7:;
			++it;
			goto _iter_begin_1b2154ed7;
		}
		_iter_end_1b2154ed7:;
	};
}



inline void _1acab619a_slicing(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _11826_m) {
	_1acab9aa5_optimize(_self_, &((*(_11826_m))._field_Expr));
	_1acab9aa5_optimize(_self_, &((*_11826_m.alloc)._field_Left));
	if (((*_11826_m.alloc)._field_Right != nullptr)) {
		_1acab9aa5_optimize(_self_, &((*_11826_m.alloc)._field_Right));
	};
}



inline void _1acab6453_traitSub(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _12627_m) {
	_1acab9aa5_optimize(_self_, &((*(_12627_m))._field_Expr));
}



inline void _1acab670b_structureSub(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _13031_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_13031_m))._field_Expr))._field_Model));
}



inline void _1acab69b4_tuple(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e027_TupleExprModel> _13424_m) {
	{
		auto expr = &((*(_13424_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2159816:;
		if (it != expr_end) {
			jule::Ptr<_1abe11936_Data> _13521_d = *it;
			{
				_1acab9aa5_optimize(_self_, &((*(_13521_d))._field_Model));
			}
			_iter_next_1b2159816:;
			++it;
			goto _iter_begin_1b2159816;
		}
		_iter_end_1b2159816:;
	};
}



inline void _1acab6c6c_newCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _14026_m) {
	if (((*(_14026_m))._field_Init != nullptr)) {
		_1acab9aa5_optimize(_self_, &((*_14026_m.alloc)._field_Init));
	};
}



inline void _1acab7025_outCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _14626_m) {
	_1acab9aa5_optimize(_self_, &((*(_14626_m))._field_Expr));
}



inline void _1acab72cd_outlnCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _15028_m) {
	_1acab9aa5_optimize(_self_, &((*(_15028_m))._field_Expr));
}



inline void _1acab7586_panicCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _15428_m) {
	_1acab9aa5_optimize(_self_, &((*(_15428_m))._field_Expr));
}



inline void _1acab783e_assertCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _15829_m) {
	_1acab9aa5_optimize(_self_, &((*(_15829_m))._field_Expr));
}



inline void _1acab7ae7_errorCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _16228_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_16228_m))._field_Err))._field_Model));
}



inline void _1acab7da0_makeCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _16627_m) {
	if (((*(_16627_m))._field_Len != nullptr)) {
		_1acab9aa5_optimize(_self_, &((*_16627_m.alloc)._field_Len));
	};
	if (((*_16627_m.alloc)._field_Cap != nullptr)) {
		_1acab9aa5_optimize(_self_, &((*_16627_m.alloc)._field_Cap));
	};
}



inline void _1acab8158_appendCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _17529_m) {
	_1acab9aa5_optimize(_self_, &((*(_17529_m))._field_Dest));
	_1acab9aa5_optimize(_self_, &((*_17529_m.alloc)._field_Elements));
}



inline void _1acab8411_lenCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _18026_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_18026_m))._field_Expr))._field_Model));
}



inline void _1acab86b9_capCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _18426_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_18426_m))._field_Expr))._field_Model));
}



inline void _1acab8972_deleteCall(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _18829_m) {
	_1acab9aa5_optimize(_self_, &((*((*(_18829_m))._field_Dest))._field_Model));
	if (((*_18829_m.alloc)._field_Key != nullptr)) {
		_1acab9aa5_optimize(_self_, &((*(*_18829_m.alloc)._field_Key.alloc)._field_Model));
	};
}



inline void _1acab8c2a_sizeof(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd527de_SizeofExprModel> _19525_m) {
	_1acab9aa5_optimize(_self_, &((*(_19525_m))._field_Expr));
}



inline void _1acab8ed3_alignof(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _19926_m) {
	_1acab9aa5_optimize(_self_, &((*(_19926_m))._field_Expr));
}



inline void _1acab928b_integratedToStr(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _20334_m) {
	_1acab9aa5_optimize(_self_, &((*(_20334_m))._field_Expr));
}



inline void _1acab9544_free(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53746_FreeExprModel> _20723_m) {
	_1acab9aa5_optimize(_self_, &((*(_20723_m))._field_Expr));
}



inline void _1acab97ec_backendEmit(_1acab353d_exprDeadCode* _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _21130_m) {
	_1acab4cae_args(_self_, &((*(_21130_m))._field_Exprs));
}



inline void _1acab9aa5_optimize(_1acab353d_exprDeadCode* _self_, jule::Any* _21528_model) {
	{
		auto &_match_expr{ (*(_21528_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b2167aee:;
			{
				_1acab3e34_binary(_self_, (*(_21528_model)).cast_ptr<_1abd4885c_BinaryExprModel>(&__jule_any_type111));
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b2167725:;
			{
				_1acab41dc_unary(_self_, (*(_21528_model)).cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b2167b76:;
			{
				_1acab4495_structureLit(_self_, (*(_21528_model)).cast_ptr<_1abd4960a_StructLitExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b2167bed:;
			{
				_1acab474d_allocStructure(_self_, (*(_21528_model)).cast_ptr<_1abd49907_AllocStructLitExprModel>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b2167c75:;
			{
				_1acab4a06_casting(_self_, (*(_21528_model)).cast_ptr<_1abd49e8a_CastingExprModel>(&__jule_any_type93));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b2167cec:;
			{
				_1acab5067_funcCall(_self_, (*(_21528_model)).cast_ptr<_1abd4a83c_FnCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b2167d74:;
			{
				_1acab5320_slice(_self_, (*(_21528_model)).cast_ptr<_1abd4ac16_SliceExprModel>(&__jule_any_type76));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b2167deb:;
			{
				_1acab55c8_array(_self_, (*(_21528_model)).cast_ptr<_1abd4dc2a_ArrayExprModel>(&__jule_any_type85));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b2167e73:;
			{
				_1acab5881_indexing(_self_, (*(_21528_model)).cast_ptr<_1abd4b1bc_IndexingExprModel>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b2167eea:;
			{
				_1acab5b39_anonFunc(_self_, (*(_21528_model)).cast_ptr<_1abd4b673_AnonFnExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b2168072:;
			{
				_1acab5de2_mapExpr(_self_, (*(_21528_model)).cast_ptr<_1abd4c003_MapExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b21680e9:;
			{
				_1acab619a_slicing(_self_, (*(_21528_model)).cast_ptr<_1abd4c586_SlicingExprModel>(&__jule_any_type92));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b2168171:;
			{
				_1acab6453_traitSub(_self_, (*(_21528_model)).cast_ptr<_1abd4cb19_TraitSubIdentExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b21681e8:;
			{
				_1acab670b_structureSub(_self_, (*(_21528_model)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b2168270:;
			{
				_1acab69b4_tuple(_self_, (*(_21528_model)).cast_ptr<_1abd4e027_TupleExprModel>(&__jule_any_type81));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b21682e7:;
			{
				_1acab7025_outCall(_self_, (*(_21528_model)).cast_ptr<_1abd4e401_BuiltinOutCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b216836e:;
			{
				_1acab72cd_outlnCall(_self_, (*(_21528_model)).cast_ptr<_1abd4e7ca_BuiltinOutlnCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b21683e6:;
			{
				_1acab6c6c_newCall(_self_, (*(_21528_model)).cast_ptr<_1abd4eba4_BuiltinNewCallExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b216846d:;
			{
				_1acab7586_panicCall(_self_, (*(_21528_model)).cast_ptr<_1abd5007d_BuiltinPanicCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b21684e5:;
			{
				_1acab783e_assertCall(_self_, (*(_21528_model)).cast_ptr<_1abd50534_BuiltinAssertCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b216856c:;
			{
				_1acab7ae7_errorCall(_self_, (*(_21528_model)).cast_ptr<_1abd5213a_BuiltinErrorCallExprModel>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b21685e4:;
			{
				_1acab7da0_makeCall(_self_, (*(_21528_model)).cast_ptr<_1abd509da_BuiltinMakeCallExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b216866b:;
			{
				_1acab8158_appendCall(_self_, (*(_21528_model)).cast_ptr<_1abd50db4_BuiltinAppendCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b21686e3:;
			{
				_1acab8411_lenCall(_self_, (*(_21528_model)).cast_ptr<_1abd511b1_BuiltinLenCallExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b216876a:;
			{
				_1acab86b9_capCall(_self_, (*(_21528_model)).cast_ptr<_1abd514ad_BuiltinCapCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b21687e2:;
			{
				_1acab8972_deleteCall(_self_, (*(_21528_model)).cast_ptr<_1abd51887_BuiltinDeleteCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b2168869:;
			{
				_1acab8c2a_sizeof(_self_, (*(_21528_model)).cast_ptr<_1abd527de_SizeofExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b21688e1:;
			{
				_1acab8ed3_alignof(_self_, (*(_21528_model)).cast_ptr<_1abd529cb_AlignofExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b2168968:;
			{
				_1acab928b_integratedToStr(_self_, (*(_21528_model)).cast_ptr<_1abd53070_IntegratedToStrExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b21689e0:;
			{
				_1acab9544_free(_self_, (*(_21528_model)).cast_ptr<_1abd53746_FreeExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2168a67:;
			{
				_1acab97ec_backendEmit(_self_, (*(_21528_model)).cast_ptr<_1abd53449_BackendEmitExprModel>(&__jule_any_type24));
			}
		}
		_match_end_1b2167857:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1acab353d_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03b467_ExceptionalForwardingExprModel _Src) {
	_Stream << "ExceptionalForwardingExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03b7db_SwapExprModel _Src) {
	_Stream << "SwapExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03bbb5_EmptyCompareExprModel _Src) {
	_Stream << "EmptyCompareExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Neg:" << _Src._field_Neg;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03c039_RefExprModel _Src) {
	_Stream << "RefExprModel{";
	_Stream << "Var:" << _Src._field_Var;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03c4ac_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03ca40_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03cd3c_UnsafeBinaryExprModel _Src) {
	_Stream << "UnsafeBinaryExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03d1c2_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03d59b_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03d975_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03dd4e_StrRuneIter _Src) {
	_Stream << "StrRuneIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03e14b_UnsafeDerefExprModel _Src) {
	_Stream << "UnsafeDerefExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac03e448_UnsafeCastingExprModel _Src) {
	_Stream << "UnsafeCastingExprModel{";
	_Stream << "Base:" << _Src._field_Base;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac04012a_nilVar _Src) {
	_Stream << "nilVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "safe:" << _Src._field_safe;
	_Stream << "}";
	return _Stream;
}



inline void _1ac0408cd_pushVar(_1ac04046b_nils* _self_, jule::Uintptr _2926_var, jule::Bool _2940_safe) {
	if (((!(_1ac9539e9_Access)) || (_2926_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21ce1d7:;
		if (it != expr_end) {
			_1ac04012a_nilVar _3421_v = *it;
			{
				if ((_3421_v._field_var == _2926_var)) {
					_3421_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1b21ce1d7:;
			++it;
			goto _iter_begin_1b21ce1d7;
		}
		_iter_end_1b21ce1d7:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21cde95:;
		if (it != expr_end) {
			_1ac04012a_nilVar _4121_v = *it;
			{
				if ((_4121_v._field_var == 0LLU)) {
					_4121_v._field_var=_2926_var;
					_4121_v._field_safe=_2940_safe;
					return;;
				};
			}
			_iter_next_1b21cde95:;
			++it;
			goto _iter_begin_1b21cde95;
		}
		_iter_end_1b21cde95:;
	};
	{ jule::Slice<_1ac04012a_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ac04012a_nilVar{._field_var=_2926_var, ._field_safe=_2940_safe}); };
}



inline jule::Bool _1ac040c1e_removeVar(_1ac04046b_nils* _self_, jule::Uintptr _5228_var) {
	if ((_5228_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b21d18c1:;
			if (it != expr_end) {
				_1ac04012a_nilVar _5425_v = *it;
				{
					if ((_5425_v._field_var == _5228_var)) {
						_5425_v._field_var=0LLU;
						_5425_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1b21d18c1:;
				++it;
				goto _iter_begin_1b21d18c1;
			}
			_iter_end_1b21d18c1:;
		};
	};
	return false;;
}



inline jule::Bool _1ac041060_isSafe(_1ac04046b_nils* _self_, jule::Uintptr _6625_var) {
	if ((_6625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b21d3032:;
			if (it != expr_end) {
				_1ac04012a_nilVar _6820_v = *it;
				{
					if ((_6820_v._field_var == _6625_var)) {
						return _6820_v._field_safe;;
					};
				}
				_iter_next_1b21d3032:;
				++it;
				goto _iter_begin_1b21d3032;
			}
			_iter_end_1b21d3032:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac04046b_nils _Src) {
	_Stream << "nils{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac939639_scopeOptimizer> static__1ac939bab_new(jule::Ptr<_1ab655576_Scope> _5123_scope) {
	jule::Ptr<_1ac939639_scopeOptimizer> _5213_sc = jule::new_ptr<_1ac939639_scopeOptimizer>(_1ac939639_scopeOptimizer{._field_scope=_5123_scope, ._field_data=jule::new_ptr<_1ac94d807_data>(_1ac94d807_data{._field_boundary=jule::new_ptr<_1ac9501ee_boundary>(), ._field_nils=jule::new_ptr<_1ac04046b_nils>(), ._field_dynamic=jule::new_ptr<_1ac94ab78_dynamic>()})});;
	return _5213_sc;;
}



inline void _1ac939e64_setCurrentStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Any _6338_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_6338_stmt))))));
}



inline void _1ac93a162_removeCurrent(jule::Ptr<_1ac939639_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*_self_.alloc)._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1ac93a3e8_isLastStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_) {
	jule::Ptr<_1ac939639_scopeOptimizer> _7313_r = _self_;;
	for (; (_7313_r != nullptr); _7313_r=(*_7313_r.alloc)._field_parent) {
		{
			if ((((*((*_7313_r.alloc)._field_scope))._field_Stmts.len() - (*_7313_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1b21e025e:;
	}
	_iter_end_1b21e025e:;;
	return true;;
}



inline jule::Bool _1ac93a67e_isIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_) {
	jule::Ptr<_1ac939639_scopeOptimizer> _8313_r = (*(_self_))._field_parent;;
	for (; (_8313_r != nullptr); _8313_r=(*_8313_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_8313_r))._field_scope))._field_Stmts[(*(_8313_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35) {
					_case_begin_1b21e29c0:;
					{
						return true;;
					}
				}
				_match_end_1b21e2937:;
			};
		}
	_iter_next_1b21e1d54:;
	}
	_iter_end_1b21e1d54:;;
	return false;;
}



inline void _1ac93a937_optimizeData(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1abe11936_Data> _9536_d) {
	{
		auto &_match_expr{ (*(_9536_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b21e3b69:;
			{
				jule::Ptr<_1abd4a83c_FnCallExprModel> _9817_m = (*(_9536_d))._field_Model.unsafe_cast_ptr<_1abd4a83c_FnCallExprModel>();;
				if (_1eb3d059c_Production) {
					if (((!(_1abd5ab16_IsBuiltin((*(_9817_m))._field_Func.ptr()))) && _1ac935b1e_IsStdPackage(&((*((*((*((*(*_9817_m.alloc)._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("debug", 5)))) {
						_1ac939e64_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1ac9416eb_optimizeData(&((*(_9536_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1ac954e6d_Exceptional && (*(*(*_9817_m.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) && ((*_9817_m.alloc)._field_Except != nullptr)) && ((*(*_9817_m.alloc)._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ac934777_IsForwarded(&((*_9817_m.alloc)._field_Except))) && _1ac93a3e8_isLastStmt(_self_)) && (!(_1ac93a67e_isIter(_self_))))) {
					_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03b467_ExceptionalForwardingExprModel>(_1ac03b467_ExceptionalForwardingExprModel{._field_Expr=_9817_m}), &__jule_any_type120));
				};
				return;;
			}
		}
		_match_end_1b21e3b03:;
	};
	static__1ac9416eb_optimizeData(&((*_9536_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ac93abe0_optimizeVar(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1abda8d2e_Var> _12135_v) {
	if (((*(_12135_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ac041acc_isNilValidType((*((*_12135_v.alloc)._field_Kind))._field_Kind)) && _1ac041813_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*(*_12135_v.alloc)._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1ac0408cd_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ac041e1d_getNilVar(jule::Any(_12135_v, &__jule_any_type8)), true);
		};
		if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1abe42d30_TypeKind> _13021_kind = _1ac94c44e_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_12135_v.alloc)._field_Kind.alloc)._field_Kind, (*(*(*_12135_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);;
			if ((_13021_kind != nullptr)) {
				if (_1ac94c020_isDynamicValidType((*(*_12135_v.alloc)._field_Kind.alloc)._field_Kind)) {
					_1ac94b0da_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ac94c790_getDynamicVar(jule::Any(_12135_v, &__jule_any_type8)), _13021_kind);
				};
			};
		};
		static__1ac9416eb_optimizeData(&((*(*(*_12135_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1ac93ae98_optimizeConditional(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6561ae_Conditional> _14243_c) {
	_1ac94d30c_dataCheckpoint _14313_checkpoint = _1ac94db7b_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2202161:;
		if (it != expr_end) {
			jule::Ptr<_1ab655994_If> _14421_elif = *it;
			{
				static__1ac9416eb_optimizeData(&((*(_14421_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1ac93db27_optimizeChild(_self_, (*_14421_elif.alloc)._field_Scope);
				if ((((*(_14243_c))._field_Elifs.len() > 1LL) || ((*_14243_c.alloc)._field_Default != nullptr))) {
					_1ac94de34_loadCheckpoint((*_self_.alloc)._field_data, &(_14313_checkpoint));
				};
			}
			_iter_next_1b2202161:;
			++it;
			goto _iter_begin_1b2202161;
		}
		_iter_end_1b2202161:;
	};
	if (((*_14243_c.alloc)._field_Default != nullptr)) {
		_1ac93db27_optimizeChild(_self_, (*(*_14243_c.alloc)._field_Default.alloc)._field_Scope);
		_1ac94de34_loadCheckpoint((*_self_.alloc)._field_data, &(_14313_checkpoint));
	};
	if ((!(_1ac954423_Cond))) {
		return;;
	};
	jule::Bool _16013_constCase = false;;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2205c9c:;
		if (it != expr_end) {
			jule::I32 _16314_i = it - expr->begin();
			jule::Ptr<_1ab655994_If> _16321_elif = *it;
			{
				if ((!(_1ac93e1dd_isConstantValidConditionalCase(&(_16321_elif))))) {
					goto _iter_next_1b2205c9c;
				};
				_16013_constCase=true;
				((*(_14243_c))._field_Elifs).mut_slice(0LL, _16314_i);;
				(*_14243_c.alloc)._field_Default=jule::new_ptr<_1ab655c91_Else>(_1ab655c91_Else{._field_Scope=(*(_16321_elif))._field_Scope});
				goto _iter_end_1b2205c9c;
			}
			_iter_next_1b2205c9c:;
			++it;
			_16314_i++;
			goto _iter_begin_1b2205c9c;
		}
		_iter_end_1b2205c9c:;
	};
	if (((*_14243_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab655994_If>* _18013_i = (&((*_14243_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1ab655994_If>* _1819_end = (&((*_14243_c.alloc)._field_Elifs[((*_14243_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_18013_i <= _1819_end); (_18013_i)++) {
		{
			{
				if (_1ac93eb06_isUnreachableConditionalCase(&((*(_18013_i))))) {
					(*(_18013_i))=nullptr;
				};
			};
		}
	_iter_next_1b220893c:;
	}
	_iter_end_1b220893c:;;
	if (((*_14243_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_16013_constCase))) {
		return;;
	};
	jule::I32 _19913_only = -1LL;;
	{
		auto expr = &((*_14243_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b220ac5d:;
		if (it != expr_end) {
			jule::I32 _20013_j = it - expr->begin();
			jule::Ptr<_1ab655994_If> _20016_elif = *it;
			{
				if ((_20016_elif != nullptr)) {
					if ((_19913_only != -1LL)) {
						return;;
					};
					_19913_only=_20013_j;
				};
			}
			_iter_next_1b220ac5d:;
			++it;
			_20013_j++;
			goto _iter_begin_1b220ac5d;
		}
		_iter_end_1b220ac5d:;
	};
	if ((_19913_only != -1LL)) {
		_1ac939e64_setCurrentStmt(_self_, jule::Any((*((*_14243_c.alloc)._field_Elifs[_19913_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1ac93b3b6_buildDefaultConstantTrueCase(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab65a2b2_Case> _21652_case, jule::I32* _21670_i, jule::Ptr<_1ab659789_Match>* _21683_m) {
	(*(_21652_case))._field_Exprs=nullptr;
	jule::I32 _2189_start = (*(_21670_i));;
	_julec_label_1b220d249:;
	for (;;) {
		{
			if (((*((*_21652_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b220d2d2;
			};
			jule::Any *_22418_stmt = &((*(*_21652_case.alloc)._field_Scope.alloc)._field_Stmts[((*(*_21652_case.alloc)._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_22418_stmt)) };
				
				if (_match_expr.type == &__jule_any_type47) {
					_case_begin_1b2210911:;
					{
						((*(_21670_i)))++;
						if (((*(_21670_i)) >= (*((*(_21683_m))))._field_Cases.len())) {
							(*(_22418_stmt))=jule::Any((*((*((*(_21683_m))))._field_Default))._field_Scope, &__jule_any_type21);
							goto _iter_end_1b220d2d2;
						};
						_21652_case=(*((*(_21683_m))))._field_Cases[(*(_21670_i))];
						(*(_22418_stmt))=jule::Any((*_21652_case.alloc)._field_Scope, &__jule_any_type21);
					}
				}
				else {
					_case_begin_1b2210a21:;
					{
						goto _iter_end_1b220d2d2;
					}
				}
				_match_end_1b22108ab:;
			};
		}
	_iter_next_1b220d2d2:;
	}
	_iter_end_1b220d2d2:;;
	(*((*(_21683_m))))._field_Default=(*((*(_21683_m))))._field_Cases[_2189_start];
	((*((*(_21683_m))))._field_Cases).mut_slice(0LL, _2189_start);;
}



inline void _1ac93b66e_optimizeMatch(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659789_Match> _24237_m) {
	jule::Uintptr _24313_var = 0LLU;;
	if ((_1ac9554ce_Dynamic && (*(_24237_m))._field_TypeMatch)) {
		_24313_var=_1ac94c790_getDynamicVar((*((*_24237_m.alloc)._field_Expr))._field_Model);
	};
	_1ac94d30c_dataCheckpoint _24713_checkpoint = _1ac94db7b_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2215086:;
		if (it != expr_end) {
			jule::Ptr<_1ab65a2b2_Case> _24821_case = *it;
			{
				{
					auto expr = &((*(_24821_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b221596b:;
					if (it != expr_end) {
						jule::Ptr<_1abe11936_Data> _24925_expr = *it;
						{
							static__1ac9416eb_optimizeData(&((*(_24925_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1b221596b:;
						++it;
						goto _iter_begin_1b221596b;
					}
					_iter_end_1b221596b:;
				};
				if ((((*_24821_case.alloc)._field_Exprs.len() == 1LL) && ((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1abe42d30_TypeKind> _25421_kind = _1ac94c44e_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_24821_case.alloc)._field_Exprs[0LL]))._field_Kind, nullptr);;
					if ((_25421_kind != nullptr)) {
						_1ac94b0da_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24313_var, _25421_kind);
					} else {
						_1ac94b42b_removeVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _24313_var);
					};
				};
				_1ac93db27_optimizeChild(_self_, (*_24821_case.alloc)._field_Scope);
				if ((((*_24237_m.alloc)._field_Cases.len() > 1LL) || ((*_24237_m.alloc)._field_Default != nullptr))) {
					_1ac94de34_loadCheckpoint((*_self_.alloc)._field_data, &(_24713_checkpoint));
				};
			}
			_iter_next_1b2215086:;
			++it;
			goto _iter_begin_1b2215086;
		}
		_iter_end_1b2215086:;
	};
	if (((*_24237_m.alloc)._field_Default != nullptr)) {
		_1ac93db27_optimizeChild(_self_, (*(*_24237_m.alloc)._field_Default.alloc)._field_Scope);
		_1ac94de34_loadCheckpoint((*_self_.alloc)._field_data, &(_24713_checkpoint));
	};
	if ((!(_1ac954423_Cond))) {
		return;;
	};
	jule::Bool _27513_constCase = false;;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b221c3ac:;
		if (it != expr_end) {
			jule::I32 _27818_i = it - expr->begin();
			jule::Ptr<_1ab65a2b2_Case> _27825_case = *it;
			{
				if ((!(_1ac93e7b5_isConstantValidMatchCase(&(_27825_case))))) {
					goto _iter_next_1b221c3ac;
				};
				_27513_constCase=true;
				_1ac93b3b6_buildDefaultConstantTrueCase(_self_, _27825_case, &(_27818_i), &(_24237_m));
				goto _iter_end_1b221c3ac;
			}
			_iter_next_1b221c3ac:;
			++it;
			_27818_i++;
			goto _iter_begin_1b221c3ac;
		}
		_iter_end_1b221c3ac:;
	};
	if (((*_24237_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ab65a2b2_Case>* _29213_i = (&((*_24237_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1ab65a2b2_Case>* _2939_end = (&((*_24237_m.alloc)._field_Cases[((*_24237_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_29213_i <= _2939_end); (_29213_i)++) {
		{
			{
				if (_1ac93ed8c_isUnreachableMatchCase(&((*(_29213_i))))) {
					(*(_29213_i))=nullptr;
				};
			};
		}
	_iter_next_1b221eea3:;
	}
	_iter_end_1b221eea3:;;
	if ((!(_27513_constCase))) {
		return;;
	};
	jule::I32 _30713_only = -1LL;;
	{
		auto expr = &((*_24237_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b222123a:;
		if (it != expr_end) {
			jule::I32 _30813_j = it - expr->begin();
			jule::Ptr<_1ab65a2b2_Case> _30816_case = *it;
			{
				if ((_30816_case != nullptr)) {
					if ((_30713_only != -1LL)) {
						return;;
					};
					_30713_only=_30813_j;
				};
			}
			_iter_next_1b222123a:;
			++it;
			_30813_j++;
			goto _iter_begin_1b222123a;
		}
		_iter_end_1b222123a:;
	};
	if ((_30713_only != -1LL)) {
		_1ac939e64_setCurrentStmt(_self_, jule::Any((*((*_24237_m.alloc)._field_Cases[_30713_only]))._field_Scope, &__jule_any_type21));
	};
}



inline void _1ac93b927_optimizeRangeIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6573ad_RangeIter> _32441_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32441_it))._field_KeyA != nullptr))) {
		_1ac950661_pushVar((*(*_self_.alloc)._field_data.alloc)._field_boundary, _1ac952630_getBoundaryVar((*((*_32441_it.alloc)._field_Expr))._field_Model), jule::Any((*_32441_it.alloc)._field_KeyA, &__jule_any_type8));
	};
	_1ac93db27_optimizeChild(_self_, (*_32441_it.alloc)._field_Scope);
	if (_1ac955226_Iter) {
		{
			auto &_match_expr{ (*((*(_32441_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type93) {
				_case_begin_1b2225d99:;
				{
					jule::Ptr<_1abd49e8a_CastingExprModel> _33621_cem = (*((*(_32441_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1abd49e8a_CastingExprModel>();;
					jule::Ptr<_1abe4a909_Prim> _33717_eprim = _1abe45481_Prim((*(_33621_cem))._field_ExprKind.ptr());;
					if (((_33717_eprim == nullptr) || (!(_1abe4dd91_IsStr(_33717_eprim.ptr()))))) {
						goto _match_end_1b2225d33;
					};
					jule::Ptr<_1abe4ee08_Slc> _34121_s = _1abe464d7_Slc((*_33621_cem.alloc)._field_Kind.ptr());;
					if ((_34121_s == nullptr)) {
						goto _match_end_1b2225d33;
					};
					jule::Ptr<_1abe4a909_Prim> _34517_prim = _1abe45481_Prim((*(_34121_s))._field_Elem.ptr());;
					if ((_34517_prim == nullptr)) {
						goto _match_end_1b2225d33;
					};
					{
						
						if (_1abe4c301_IsU8(_34517_prim.ptr())) {
							_case_begin_1b222974e:;
							{
								(*_32441_it.alloc)._field_Expr=(*_33621_cem.alloc)._field_Expr;
							}
						}
						else if (_1abe4bcd4_IsI32(_34517_prim.ptr())) {
							_case_begin_1b22298d6:;
							{
								static__1ac9416eb_optimizeData(&((*((*_33621_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03dd4e_StrRuneIter>(_1ac03dd4e_StrRuneIter{._field_Expr=(*_33621_cem.alloc)._field_Expr, ._field_Base=_32441_it}), &__jule_any_type121));
								return;;
							}
						}
						_match_end_1b2229573:;
					};
				}
			}
			_match_end_1b2225d33:;
		};
	};
	static__1ac9416eb_optimizeData(&((*(*_32441_it.alloc)._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1ac93bbd0_optimizeWhileIter(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab656962_WhileIter> _36941_it) {
	static__1ac9416eb_optimizeData(&((*(_36941_it))._field_Expr), &((*(_self_))._field_data));
	_1ac93d86e_optimizeStmt(_self_, (*_36941_it.alloc)._field_Next);
	_1ac93db27_optimizeChild(_self_, (*_36941_it.alloc)._field_Scope);
}



inline jule::Bool _1ac93c021_substr(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _37530_a) {
	if (((*((*(_37530_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37530_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b222e754:;
			{
				jule::Ptr<_1abd4c586_SlicingExprModel> _38117_sem = (*((*(_37530_a))._field_Right))._field_Model.unsafe_cast_ptr<_1abd4c586_SlicingExprModel>();;
				if (_1ac03a82e_equalModels((*((*_37530_a.alloc)._field_Left))._field_Model, (*(_38117_sem))._field_Expr)) {
					_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03ca40_MutSlicingExprModel>(_1ac03ca40_MutSlicingExprModel{._field_Token=(*_38117_sem.alloc)._field_Token, ._field_Expr=(*_38117_sem.alloc)._field_Expr, ._field_Left=(*_38117_sem.alloc)._field_Left, ._field_Right=(*_38117_sem.alloc)._field_Right}), &__jule_any_type122));
					return true;;
				};
			}
		}
		_match_end_1b222e6dd:;
	};
	return false;;
}



inline jule::Bool _1ac93c362_strAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _39533_a) {
	if ((!(_1ac954665_Str))) {
		return false;;
	};
	jule::Ptr<_1abe4a909_Prim> _3999_lp = _1abe45481_Prim((*((*(_39533_a))._field_Left))._field_Kind.ptr());;
	if (((_3999_lp == nullptr) || (!(_1abe4dd91_IsStr(_3999_lp.ptr()))))) {
		return false;;
	};
	return _1ac93c021_substr(_self_, _39533_a);;
}



inline jule::Bool _1ac93c6a3_sliceAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _40635_a) {
	if (((!(_1ac95490c_Slice)) || (_1abe464d7_Slc((*((*(_40635_a))._field_Left))._field_Kind.ptr()) == nullptr))) {
		return false;;
	};
	return _1ac93c021_substr(_self_, _40635_a);;
}



inline void _1ac93c95b_optimizePostfix(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab6586bc_Postfix> _41439_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1ac951cd3_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(_41439_postfix))._field_Expr);
	};
	static__1ac9416eb_optimizeData(&((*_41439_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline void _1ac93cc14_optimizeAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab658b73_Assign> _42138_assign) {
	if ((((*((*(_42138_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1ac03a82e_equalModels((*((*_42138_assign.alloc)._field_Left))._field_Model, (*((*_42138_assign.alloc)._field_Right))._field_Model))) {
		_1ac93a162_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1ac95209c_isBoundaryRiskyType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
			_1ac951cd3_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
		if (_1ac041813_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model)) {
			if (_1ac041acc_isNilValidType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
				;
				_1ac0408cd_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ac041e1d_getNilVar((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1ac04144a_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1abe42d30_TypeKind> _44517_kind = _1ac94c44e_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42138_assign.alloc)._field_Right.alloc)._field_Kind, (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model);;
		if ((_44517_kind != nullptr)) {
			if (_1ac94c020_isDynamicValidType((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind)) {
				_1ac94b0da_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ac94c790_getDynamicVar((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), _44517_kind);
			};
		} else {
			_1ac94bc12_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*(*_42138_assign.alloc)._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1ac93c362_strAssign(_self_, _42138_assign) || _1ac93c6a3_sliceAssign(_self_, _42138_assign)) {
			_case_begin_1b22425e1:;
			{
				return;;
			}
		}
		_match_end_1b22408b9:;
	};
	static__1ac9416eb_optimizeData(&((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1ac9416eb_optimizeData(&((*(*_42138_assign.alloc)._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_42138_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b2244527:;
			{
				if (((!(_1ac953741_Math)) || (_1abe46a04_Struct((*(*_42138_assign.alloc)._field_Left.alloc)._field_Kind.ptr()) != nullptr))) {
					goto _match_end_1b22444b1;
				};
				jule::U32 _47113_oldId;
				jule::Str _47120_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*(*_42138_assign.alloc)._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind;
					_47113_oldId = ___jule_assign_arg;
					_47120_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_42138_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1b22472c7:;
						{
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("/", 1);
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1b224733d:;
						{
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("%", 1);
						}
					}
					else {
						_case_begin_1b2246a79:;
						{
							jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/opt/scope.jule:480:17"));;
						}
					}
					_match_end_1b2246d98:;
				};
				jule::Any _48217_model = jule::Any(jule::new_ptr<_1abd4885c_BinaryExprModel>(_1abd4885c_BinaryExprModel{._field_Left=(*_42138_assign.alloc)._field_Left, ._field_Right=(*_42138_assign.alloc)._field_Right, ._field_Op=(*_42138_assign.alloc)._field_Op}), &__jule_any_type111);;
				static__1ac9416eb_optimizeData(&(_48217_model), &((*_self_.alloc)._field_data));
				{
					auto &_match_expr{ _48217_model };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1b224a74d:;
						{
							(*_42138_assign.alloc)._field_Right=jule::new_ptr<_1abd48362_OperandExprModel>((*(*_42138_assign.alloc)._field_Right.alloc));
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
							(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("=", 1);
							(*(*_42138_assign.alloc)._field_Right.alloc)._field_Model=_48217_model;
							return;;
						}
					}
					_match_end_1b224a440:;
				};
				(*(*_42138_assign.alloc)._field_Op.alloc)._field_Id=_47113_oldId;
				(*(*_42138_assign.alloc)._field_Op.alloc)._field_Kind=_47120_oldKind;
				return;;
			}
		}
		_match_end_1b22444b1:;
	};
	if (_1ac953444_Append) {
		{
			auto &_match_expr{ (*((*(_42138_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type25) {
				_case_begin_1b224d3aa:;
				{
					jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _50421_m = (*(*_42138_assign.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1abd50db4_BuiltinAppendCallExprModel>(&__jule_any_type25);;
					if ((!(_1ac949a45_areSameLvalueExprModel(&((*(*_42138_assign.alloc)._field_Left.alloc)._field_Model), &((*(_50421_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_50421_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type76) {
							_case_begin_1b224e873:;
							{
								_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03d59b_PushToSliceExprModel>(_1ac03d59b_PushToSliceExprModel{._field_Dest=(*_50421_m.alloc)._field_Dest, ._field_Elems=(*(_50421_m))._field_Elements.unsafe_cast_ptr<_1abd4ac16_SliceExprModel>()}), &__jule_any_type123));
							}
						}
						else {
							_case_begin_1b224ee06:;
							{
								_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03d975_AppendToSliceExprModel>(_1ac03d975_AppendToSliceExprModel{._field_Dest=(*(*_42138_assign.alloc)._field_Left.alloc)._field_Model, ._field_Slice=(*_50421_m.alloc)._field_Elements}), &__jule_any_type124));
							}
						}
						_match_end_1b224eda1:;
					};
				}
			}
			_match_end_1b224d344:;
		};
	};
}



inline jule::Bool _1ac93d055_tryOptimizeSwap(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659129_MultiAssign>* _52640_assign) {
	if (((((!(_1ac954bb5_Assign)) || ((*((*(_52640_assign))))._field_Left.len() != 2LL)) || ((*((*(_52640_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_52640_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1abd4e027_TupleExprModel> _53117_tup;;
	{
		auto &_match_expr{ (*((*(_52640_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b2253a0e:;
			{
				_53117_tup=(*((*(_52640_assign))))._field_Right.unsafe_cast_ptr<_1abd4e027_TupleExprModel>();
			}
		}
		_match_end_1b2253998:;
	};
	if (((_53117_tup == nullptr) || ((*(_53117_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1ac03a82e_equalModels((*((*((*(_52640_assign))))._field_Left[0LL]))._field_Model, (*((*(_53117_tup))._field_Datas[0LL]))._field_Model) && _1ac03a82e_equalModels((*((*((*(_52640_assign))))._field_Left[1LL]))._field_Model, (*((*(_53117_tup))._field_Datas[1LL]))._field_Model))) {
		_1ac93a162_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1ac03a82e_equalModels((*((*((*(_52640_assign))))._field_Left[0LL]))._field_Model, (*((*(_53117_tup))._field_Datas[1LL]))._field_Model))) || (!(_1ac03a82e_equalModels((*((*((*(_52640_assign))))._field_Left[1LL]))._field_Model, (*((*(_53117_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1ac03b7db_SwapExprModel> _55313_model = jule::new_ptr<_1ac03b7db_SwapExprModel>(_1ac03b7db_SwapExprModel{._field_Left=(*((*(_52640_assign))))._field_Left[0LL], ._field_Right=(*((*(_52640_assign))))._field_Left[1LL]});;
	static__1ac9416eb_optimizeData(&((*((*(_55313_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1ac9416eb_optimizeData(&((*((*_55313_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1ac939e64_setCurrentStmt(_self_, jule::Any(_55313_model, &__jule_any_type125));
	return true;;
}



inline void _1ac93d30d_optimizeMultiAssign(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab659129_MultiAssign> _56343_assign) {
	if (_1ac93d055_tryOptimizeSwap(_self_, &(_56343_assign))) {
		return;;
	};
	jule::Ptr<_1abd4e027_TupleExprModel> _57013_tup = static_cast<jule::Ptr<_1abd4e027_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_56343_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b2262369:;
			{
				_57013_tup=(*(_56343_assign))._field_Right.unsafe_cast_ptr<_1abd4e027_TupleExprModel>();
			}
		}
		_match_end_1b2262303:;
	};
	{
		auto expr = &((*(_56343_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b226149a:;
		if (it != expr_end) {
			jule::I32 _57514_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _57521_l = *it;
			{
				if ((_57521_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1ac95209c_isBoundaryRiskyType((*_57521_l.alloc)._field_Kind)) {
							_1ac951cd3_possibleBoundaryRemove(&((*(*_self_.alloc)._field_data.alloc)._field_boundary), (*_57521_l.alloc)._field_Model);
						};
					};
					if (((*(*_self_.alloc)._field_data.alloc)._field_nils != nullptr)) {
						if (((_57013_tup != nullptr) && _1ac041813_isGuaranteedNonNilExpr(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Model))) {
							if (_1ac041acc_isNilValidType((*_57521_l.alloc)._field_Kind)) {
								;
								_1ac0408cd_pushVar((*(*_self_.alloc)._field_data.alloc)._field_nils, _1ac041e1d_getNilVar((*_57521_l.alloc)._field_Model), true);
							};
						} else {
							_1ac04144a_possibleNilRemove(&((*(*_self_.alloc)._field_data.alloc)._field_nils), (*_57521_l.alloc)._field_Model);
						};
					};
					if ((((*(*_self_.alloc)._field_data.alloc)._field_dynamic != nullptr) && (_57013_tup != nullptr))) {
						jule::Ptr<_1abe42d30_TypeKind> _59325_kind = _1ac94c44e_isTypeGuaranteedDynamicData(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Kind, (*((*_57013_tup.alloc)._field_Datas[_57514_i]))._field_Model);;
						if ((_59325_kind != nullptr)) {
							if (_1ac94c020_isDynamicValidType((*_57521_l.alloc)._field_Kind)) {
								_1ac94b0da_pushVar((*(*_self_.alloc)._field_data.alloc)._field_dynamic, _1ac94c790_getDynamicVar((*_57521_l.alloc)._field_Model), _59325_kind);
							};
						} else {
							_1ac94bc12_possibleDynamicRemove(&((*(*_self_.alloc)._field_data.alloc)._field_dynamic), (*_57521_l.alloc)._field_Model);
						};
					};
					static__1ac9416eb_optimizeData(&((*_57521_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1b226149a:;
			++it;
			_57514_i++;
			goto _iter_begin_1b226149a;
		}
		_iter_end_1b226149a:;
	};
	static__1ac9416eb_optimizeData(&((*_56343_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1ac93d5b6_optimizeRet(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab65ad51_RetSt> _60935_r) {
	static__1ac9416eb_optimizeData(&((*(_60935_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1ac954e6d_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_60935_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b226d067:;
			{
				goto _match_end_1b226d3ca;
			}
		}
		else {
			_case_begin_1b226d430:;
			{
				return;;
			}
		}
		_match_end_1b226d3ca:;
	};
	jule::Ptr<_1abd4a83c_FnCallExprModel> _62313_fc = (*_60935_r.alloc)._field_Expr.cast_ptr<_1abd4a83c_FnCallExprModel>(&__jule_any_type33);;
	if (((((!((*((*((*(_62313_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_62313_fc.alloc)._field_Except == nullptr)) || ((*((*_62313_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ac934777_IsForwarded(&((*_62313_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1ac939e64_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac03b467_ExceptionalForwardingExprModel>(_1ac03b467_ExceptionalForwardingExprModel{._field_Expr=_62313_fc}), &__jule_any_type120));
}



inline void _1ac93d86e_optimizeStmt(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Any _63336_stmt) {
	{
		auto &_match_expr{ _63336_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b227182e:;
			{
				_1ac93db27_optimizeChild(_self_, _63336_stmt.unsafe_cast_ptr<_1ab655576_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b2271576:;
			{
				_1ac93a937_optimizeData(_self_, _63336_stmt.unsafe_cast_ptr<_1abe11936_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2271895:;
			{
				_1ac93abe0_optimizeVar(_self_, _63336_stmt.unsafe_cast_ptr<_1abda8d2e_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b227190b:;
			{
				_1ac93ae98_optimizeConditional(_self_, _63336_stmt.unsafe_cast_ptr<_1ab6561ae_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b2271972:;
			{
				_1ac93b927_optimizeRangeIter(_self_, _63336_stmt.unsafe_cast_ptr<_1ab6573ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b22719e9:;
			{
				_1ac93bbd0_optimizeWhileIter(_self_, _63336_stmt.unsafe_cast_ptr<_1ab656962_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b2271a71:;
			{
				_1ac93db27_optimizeChild(_self_, (*(_63336_stmt.unsafe_cast_ptr<_1ab6564ab_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b2271ae8:;
			{
				_1ac93cc14_optimizeAssign(_self_, _63336_stmt.unsafe_cast_ptr<_1ab658b73_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b2271b70:;
			{
				_1ac93d30d_optimizeMultiAssign(_self_, _63336_stmt.unsafe_cast_ptr<_1ab659129_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b2271be7:;
			{
				_1ac93b66e_optimizeMatch(_self_, _63336_stmt.unsafe_cast_ptr<_1ab659789_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b2271c6e:;
			{
				_1ac93d5b6_optimizeRet(_self_, _63336_stmt.unsafe_cast_ptr<_1ab65ad51_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b2271ce6:;
			{
				_1ac93c95b_optimizePostfix(_self_, _63336_stmt.unsafe_cast_ptr<_1ab6586bc_Postfix>());
			}
		}
		_match_end_1b22716db:;
	};
}



inline void _1ac93db27_optimizeChild(jule::Ptr<_1ac939639_scopeOptimizer> _self_, jule::Ptr<_1ab655576_Scope> _66237_child) {
	jule::Ptr<_1ac939639_scopeOptimizer> _66313_so = static__1ac939bab_new(_66237_child);;
	(*(_66313_so))._field_parent=_self_;
	(*_66313_so.alloc)._field_data=(*(_self_))._field_data;
	_1ac93dd25_optimize(_66313_so);
}



inline void _1ac93dd25_optimize(jule::Ptr<_1ac939639_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ac93d86e_optimizeStmt(_self_, (*(*_self_.alloc)._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1b1c5ac64:;
	}
	_iter_end_1b1c5ac64:;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac939639_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac941410_optimize(jule::Any* _5829_model) {
	static__1ac9416eb_optimizeData(_5829_model, &(_1ac94ce11_emptyData));
}



inline void static__1ac9416eb_optimizeData(jule::Any* _6233_model, jule::Ptr<_1ac94d807_data>* _6256_d) {
	if (_1acaba116_exprEnabled) {
		jule::Ptr<_1ac940cb1_exprOptimizer> _6517_exop = jule::new_ptr<_1ac940cb1_exprOptimizer>(_1ac940cb1_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_6233_model)), ._field_data=(*(_6256_d))});;
		_1ac949209_do(_6517_exop.ptr());
	};
}



inline jule::Bool _1ac941a3c_selfCmpCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _7331_m) {
	if ((!(_1ac03a82e_equalModels((*((*((*(_7331_m))))._field_Left))._field_Model, (*((*((*(_7331_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_7331_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b1c6a4e3:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b9aace98_NewBool(true), &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b1c6a8de:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1b9aace98_NewBool(false), &__jule_any_type19);
				return true;;
			}
		}
		else {
			_case_begin_1b1c693b0:;
			{
				return false;;
			}
		}
		_match_end_1b1c6a47c:;
	};
}



inline jule::Bool _1ac941d7d_boolCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _9728_m) {
	jule::Ptr<_1abe4a909_Prim> _989_lp = _1abe45481_Prim((*((*((*(_9728_m))))._field_Left))._field_Kind.ptr());;
	if (((_989_lp == nullptr) || (!(_1abe4db0a_IsBool(_989_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1c6ec9a:;
			{
				std::swap((*((*(_9728_m))))._field_Left, (*((*(_9728_m))))._field_Right);
			}
		}
		else {
			_case_begin_1b1c6dea8:;
			{
				{
					auto &_match_expr{ (*((*((*(_9728_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b1c6d293:;
						{
							goto _match_end_1b1c6e7c2;
						}
					}
					else {
						_case_begin_1b1c6e827:;
						{
							return false;;
						}
					}
					_match_end_1b1c6e7c2:;
				};
			}
		}
		_match_end_1b1c6de53:;
	};
	jule::Ptr<_1b9aac4c5_Const> _11513_c = (*((*((*(_9728_m))))._field_Right))._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*((*(_9728_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b1c718b2:;
			{
				if (_1b9aae3b7_ReadBool(_11513_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				} else {
					_1b9ab09a1_SetBool(_11513_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b1c7195b:;
			{
				if (_1b9aae3b7_ReadBool(_11513_c.ptr())) {
					_1b9ab09a1_SetBool(_11513_c, true);
					(*((*(_self_))._field_model))=jule::Any(_11513_c, &__jule_any_type19);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_9728_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1b1c6ea25:;
		}
		_match_end_1b1c7183a:;
	};
	return false;;
}



inline jule::Bool _1ac9421be_strCond(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _15026_m) {
	jule::Ptr<_1abe4a909_Prim> _1519_lp = _1abe45481_Prim((*((*(_15026_m))._field_Left))._field_Kind.ptr());;
	if (((_1519_lp == nullptr) || (!(_1abe4dd91_IsStr(_1519_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_15026_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*_15026_m.alloc)._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1c784bd:;
			{
				std::swap((*_15026_m.alloc)._field_Left, (*_15026_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1b1c776cb:;
			{
				{
					auto &_match_expr{ (*((*(_15026_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b1c76246:;
						{
							goto _match_end_1b1c77ee5;
						}
					}
					else {
						_case_begin_1b1c7804a:;
						{
							return false;;
						}
					}
					_match_end_1b1c77ee5:;
				};
			}
		}
		_match_end_1b1c77676:;
	};
	jule::Ptr<_1b9aac4c5_Const> _17113_c = (*((*_15026_m.alloc)._field_Right))._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ (*((*(_15026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b1c78259:;
			{
				if ((_1b9aae64d_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _17521_model = jule::Any(jule::new_ptr<_1ac03bbb5_EmptyCompareExprModel>(_1ac03bbb5_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17521_model))))));
					goto _match_end_1b1c79ee7;
				};
				jule::Any _18217_model = jule::Any(jule::new_ptr<_1ac03c4ac_StrCompExprModel>(_1ac03c4ac_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_18217_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b1c7a091:;
			{
				if ((_1b9aae64d_ReadStr(_17113_c.ptr())).empty()) {
					jule::Any _19021_model = jule::Any(jule::new_ptr<_1ac03bbb5_EmptyCompareExprModel>(_1ac03bbb5_EmptyCompareExprModel{._field_Expr=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type126);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_19021_model))))));
					goto _match_end_1b1c79ee7;
				};
				jule::Any _19717_model = jule::Any(jule::new_ptr<_1ac03c4ac_StrCompExprModel>(_1ac03c4ac_StrCompExprModel{._field_Left=(*(*_15026_m.alloc)._field_Left.alloc)._field_Model, ._field_Right=_17113_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_19717_model))))));
			}
		}
		_match_end_1b1c79ee7:;
	};
	return true;;
}



inline jule::Bool _1ac942675_tryNeutralElement1(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _20738_m, jule::Ptr<_1b9aac4c5_Const> _20763_c, jule::Ptr<_1abd48362_OperandExprModel>* _20775_nc) {
	if (_1b9ab1c49_IsStr(_20763_c.ptr())) {
		if ((!(_1ac954665_Str))) {
			return false;;
		};
		if (((_1b9aae64d_ReadStr(_20763_c)).empty() && ((*((*((*(_20738_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_20775_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ac953741_Math)) || (_1b9ab0187_AsF64(_20763_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_20738_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b1c83b8d:;
			{
				if (((*(_20775_nc)) == (*((*(_20738_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1c8484d:;
			{
				_1b9ab0440_SetI64(_20763_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_20763_c, &__jule_any_type19);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b1c848b4:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_20775_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1b1c8471b:;
	};
	return false;;
}



inline jule::Bool _1ac9429b6_tryNeutralElement(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _25137_m) {
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1c87d3a:;
			{
				jule::Ptr<_1b9aac4c5_Const> _25517_c = (*((*((*(_25137_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1b9aac4c5_Const>();;
				return _1ac942675_tryNeutralElement1(_self_, _25137_m, _25517_c, &((*((*(_25137_m))))._field_Right));;
			}
		}
		_match_end_1b1c87cc4:;
	};
	{
		auto &_match_expr{ (*((*((*(_25137_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1c882ad:;
			{
				jule::Ptr<_1b9aac4c5_Const> _26017_c = (*((*((*(_25137_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1b9aac4c5_Const>();;
				return _1ac942675_tryNeutralElement1(_self_, _25137_m, _26017_c, &((*((*(_25137_m))))._field_Left));;
			}
		}
		_match_end_1b1c88247:;
	};
	return false;;
}



inline void _1ac942c6e_checkBinaryForBoundary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _26642_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b1c8b756:;
			{
				jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _27217_blc = (*((*((*(_26642_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1abd511b1_BuiltinLenCallExprModel>();;
				if ((!(_1ac952366_isBoundaryValidType((*((*(_27217_blc))._field_Expr))._field_Kind)))) {
					return;;
				};
				if ((((*((*((*(_26642_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1b1c8e9bd:;
							{
								jule::Ptr<_1b9aac4c5_Const> _28425_c = jule::new_ptr<_1b9aac4c5_Const>((*((*((*((*(_26642_m))))._field_Right))._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19))));;
								_1b9ab4521_Sub(_28425_c, (*(static__1b9aac915_NewI64(1LL))));
								_1ac950661_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ac952630_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_28425_c, &__jule_any_type19));
							}
						}
						_match_end_1b1c8e957:;
					};
					return;;
				};
				_1ac950661_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ac952630_getBoundaryVar((*(*_27217_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b1c8b6e0:;
	};
	{
		auto &_match_expr{ (*((*((*(_26642_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b1c8bcc8:;
			{
				jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _29517_blc = (*((*((*(_26642_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1abd511b1_BuiltinLenCallExprModel>();;
				if ((!(_1ac952366_isBoundaryValidType((*(*(_29517_blc))._field_Expr.alloc)._field_Kind)))) {
					return;;
				};
				if ((((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_26642_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_26642_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_26642_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type19) {
							_case_begin_1b1c96442:;
							{
								jule::Ptr<_1b9aac4c5_Const> _30725_c = jule::new_ptr<_1b9aac4c5_Const>((*((*((*((*(_26642_m))))._field_Left))._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19))));;
								_1b9ab4521_Sub(_30725_c, (*(static__1b9aac915_NewI64(1LL))));
								_1ac950661_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ac952630_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), jule::Any(_30725_c, &__jule_any_type19));
							}
						}
						_match_end_1b1c963cb:;
					};
					return;;
				};
				_1ac950661_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1ac952630_getBoundaryVar((*(*_29517_blc.alloc)._field_Expr.alloc)._field_Model), (*(*((*(_26642_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1b1c8bc62:;
	};
}



inline void _1ac943027_checkBinaryForNil(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel>* _31837_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _32213_var = _1ac041e1d_getNilVar((*((*((*(_31837_m))))._field_Left))._field_Model);;
	if ((_32213_var != 0LLU)) {
		if ((!(_1ac041acc_isNilValidType((*(*((*(_31837_m))))._field_Left.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1b1c9bc94:;
				{
					_1ac0408cd_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*((*((*(_31837_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1b1c9bc2d:;
		};
		return;;
	};
	_32213_var=_1ac041e1d_getNilVar((*((*((*(_31837_m))))._field_Right))._field_Model);
	if ((_32213_var != 0LLU)) {
		if ((!(_1ac041acc_isNilValidType((*(*((*(_31837_m))))._field_Right.alloc)._field_Kind)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_31837_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type19) {
				_case_begin_1b1c9e439:;
				{
					_1ac0408cd_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _32213_var, ((*(*((*(_31837_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1b1c9e3c3:;
		};
		return;;
	};
}



inline void _1ac9432d0_binary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _35025_m) {
	_1ac942c6e_checkBinaryForBoundary(_self_, &(_35025_m));
	_1ac943027_checkBinaryForNil(_self_, &(_35025_m));
	static__1ac9416eb_optimizeData(&((*((*(_35025_m))._field_Left))._field_Model), &((*(_self_))._field_data));
	static__1ac9416eb_optimizeData(&((*((*_35025_m.alloc)._field_Right))._field_Model), &((*(_self_))._field_data));
	if (_1ac954423_Cond) {
		{
			
			if (_1ac9421be_strCond(_self_, _35025_m) || _1ac941d7d_boolCond(_self_, &(_35025_m)) || _1ac941a3c_selfCmpCond(_self_, &(_35025_m))) {
				_case_begin_1b1ca2151:;
				{
					return;;
				}
			}
			_match_end_1b1ca2074:;
		};
	};
	if (_1ac9429b6_tryNeutralElement(_self_, &(_35025_m))) {
		return;;
	};
	if ((!(_1ac953741_Math))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1ca156d:;
			{
				goto _match_end_1b1ca342c;
			}
		}
		else {
			_case_begin_1b1ca3482:;
			{
				return;;
			}
		}
		_match_end_1b1ca342c:;
	};
	jule::Ptr<_1abe4a909_Prim> _3869_lp = _1abe45481_Prim((*(*_35025_m.alloc)._field_Left.alloc)._field_Kind.ptr());;
	if ((_3869_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _3909_rp = _1abe45481_Prim((*(*_35025_m.alloc)._field_Right.alloc)._field_Kind);;
	if ((_3909_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35025_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1ca6155:;
			{
				jule::Bool _39713_ok;
				jule::U64 _39717_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac94967c_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_39713_ok = __jule_assign_result.__jule_result_arg0;
					_39717_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_39713_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(56LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("<<", 2);
					jule::Ptr<_1b9aac4c5_Const> _40121_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
					_1b9ab06e8_SetU64(_40121_c.ptr(), _39717_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b1ca5c59:;
			{
				jule::Bool _40813_ok;
				jule::U64 _40817_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac94967c_checkForBitShiftOpt(&((*_35025_m.alloc)._field_Left), &((*_35025_m.alloc)._field_Right));
					_40813_ok = __jule_assign_result.__jule_result_arg0;
					_40817_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_40813_ok) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(57LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit(">>", 2);
					jule::Ptr<_1b9aac4c5_Const> _41221_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
					_1b9ab06e8_SetU64(_41221_c.ptr(), _40817_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b1ca5cd1:;
			{
				jule::Ptr<_1b9aac4c5_Const> _41917_c = (*(*_35025_m.alloc)._field_Right.alloc)._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
				if ((_1b9ab0187_AsF64(_41917_c.ptr()) == 2LL)) {
					(*((*_35025_m.alloc)._field_Op))._field_Id=static_cast<jule::U32>(65LLU);
					(*(*_35025_m.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("&", 1);
					_1b9ab0440_SetI64(_41917_c, 1LL);
					return;;
				};
			}
		}
		else {
			_case_begin_1b1ca5891:;
			{
				return;;
			}
		}
		_match_end_1b1ca5be3:;
	};
	jule::Any _43413_model = jule::Any(jule::new_ptr<_1ac03cd3c_UnsafeBinaryExprModel>(_1ac03cd3c_UnsafeBinaryExprModel{._field_Node=_35025_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_43413_model))))));
}



inline void _1ac943588_unary(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _43824_m) {
	static__1ac9416eb_optimizeData(&((*((*(_43824_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	if ((!(_1ac95405a_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_43824_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b1cb08bd:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1b1cb1968:;
						{
							jule::Ptr<_1abd48c36_UnaryExprModel> _44721_um = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>();;
							if (((*((*(_44721_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*(*_44721_um.alloc)._field_Expr.alloc)._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1b1cb1902:;
				};
				if ((!(_1ac9539e9_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ac041acc_isNilValidType((*(*_43824_m.alloc)._field_Expr.alloc)._field_Kind))) {
					jule::Uintptr _46117_var = _1ac041e1d_getNilVar((*(*_43824_m.alloc)._field_Expr.alloc)._field_Model);;
					if (_1ac041060_isSafe((*(*(_self_))._field_data.alloc)._field_nils, _46117_var)) {
						jule::Any _46325_model = jule::Any(jule::new_ptr<_1ac03e14b_UnsafeDerefExprModel>(_1ac03e14b_UnsafeDerefExprModel{._field_Base=_43824_m}), &__jule_any_type129);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_46325_model))))));
						return;;
					};
					_1ac0408cd_pushVar((*(*(_self_))._field_data.alloc)._field_nils, _46117_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b1cb0cdb:;
			{
				{
					auto &_match_expr{ (*((*(_43824_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b1cb7463:;
						{
							jule::Ptr<_1abda8d2e_Var> _47321_v = (*((*(_43824_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
							if ((*(_47321_v))._field_Reference) {
								jule::Any _47525_model = jule::Any(jule::new_ptr<_1ac03c039_RefExprModel>(_1ac03c039_RefExprModel{._field_Var=_47321_v}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_47525_model))))));
							};
						}
					}
					_match_end_1b1cb73ec:;
				};
			}
		}
		_match_end_1b1cb0b87:;
	};
}



inline void _1ac943841_structureLit(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _48231_m) {
	{
		auto expr = &((*(_48231_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1cb7809:;
		if (it != expr_end) {
			jule::Ptr<_1abd49264_StructArgExprModel> _48321_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1ac95209c_isBoundaryRiskyType((*((*(_48321_arg))._field_Expr))._field_Kind)) {
						_1ac951cd3_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_48321_arg, &__jule_any_type131));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1ac04144a_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1ac94bc12_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model);
				};
				static__1ac9416eb_optimizeData(&((*(*_48321_arg.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1b1cb7809:;
			++it;
			goto _iter_begin_1b1cb7809;
		}
		_iter_end_1b1cb7809:;
	};
}



inline void _1ac943ae9_allocStructure(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _49933_m) {
	_1ac943841_structureLit(_self_, (*(_49933_m))._field_Lit);
}



inline void _1ac943da2_casting(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _50326_m) {
	jule::Bool _5049_valid = _1ac94c020_isDynamicValidType((*(_50326_m))._field_ExprKind);;
	jule::Uintptr _5059_var = _1ac94c790_getDynamicVar((*((*_50326_m.alloc)._field_Expr))._field_Model);;
	if (((_5049_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1ac94b827_isFits((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind))) {
		jule::Any _50717_model = jule::Any(jule::new_ptr<_1ac03e448_UnsafeCastingExprModel>(_1ac03e448_UnsafeCastingExprModel{._field_Base=_50326_m}), &__jule_any_type132);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_50717_model))))));
		return;;
	};
	static__1ac9416eb_optimizeData(&((*(*_50326_m.alloc)._field_Expr.alloc)._field_Model), &((*(_self_))._field_data));
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5049_valid)) {
		_1ac94b0da_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _5059_var, (*_50326_m.alloc)._field_Kind);
	};
}



inline void _1ac944215_args(_1ac940cb1_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1abd58608_ParamIns>> _51723_params, jule::Slice<jule::Any>* _51749_args) {
	{
		auto expr = _51749_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1cc3cee:;
		if (it != expr_end) {
			jule::I32 _51814_i = it - expr->begin();
			jule::Any _51821_arg = *it;
			{
				if ((_51814_i < _51723_params.len())) {
					jule::Ptr<_1abd58608_ParamIns> _52021_p = _51723_params[_51814_i];;
					if (((*((*(_52021_p))._field_Decl))._field_Mutable && (*(*_52021_p.alloc)._field_Decl.alloc)._field_Reference)) {
						if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
							if (_1ac95209c_isBoundaryRiskyType((*_52021_p.alloc)._field_Kind)) {
								_1ac951cd3_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _51821_arg);
							};
						};
						if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
							_1ac04144a_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _51821_arg);
						};
						if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
							_1ac94bc12_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _51821_arg);
						};
					};
				};
				static__1ac9416eb_optimizeData(&(_51821_arg), &((*(_self_))._field_data));
				(*(_51749_args))[_51814_i]=_51821_arg;
			}
			_iter_next_1b1cc3cee:;
			++it;
			_51814_i++;
			goto _iter_begin_1b1cc3cee;
		}
		_iter_end_1b1cc3cee:;
	};
}



inline void _1ac9444bd_scope(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1ab655576_Scope>* _54025_s) {
	jule::Ptr<_1ac939639_scopeOptimizer> _54113_scopt = static__1ac939bab_new((*(_54025_s)));;
	(*(_54113_scopt))._field_data=(*(_self_))._field_data;
	_1ac93dd25_optimize(_54113_scopt);
}



inline void _1ac944776_funcCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _54627_m) {
	static__1ac9416eb_optimizeData(&((*(_54627_m))._field_Expr), &((*(_self_))._field_data));
	_1ac944215_args(_self_, (*((*_54627_m.alloc)._field_Func))._field_Params, &((*_54627_m.alloc)._field_Args));
	if (((*_54627_m.alloc)._field_Except != nullptr)) {
		_1ac9444bd_scope(_self_, &((*_54627_m.alloc)._field_Except));
	};
}



inline void _1ac944a2e_slice(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _55424_m) {
	_1ac944215_args(_self_, nullptr, &((*(_55424_m))._field_Elems));
}



inline void _1ac944cd7_array(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _55824_m) {
	if ((((*(_55824_m))._field_Elems.len() == 2LL) && ((*_55824_m.alloc)._field_Elems[1LL] == nullptr))) {
		jule::Any _56017_elem = (*_55824_m.alloc)._field_Elems[0LL];;
		static__1ac9416eb_optimizeData(&(_56017_elem), &((*(_self_))._field_data));
		(*_55824_m.alloc)._field_Elems[0LL]=_56017_elem;
	};
	_1ac944215_args(_self_, nullptr, &((*_55824_m.alloc)._field_Elems));
}



inline void _1ac945090_indexing(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _56727_m) {
	static__1ac9416eb_optimizeData(&((*((*(_56727_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
	static__1ac9416eb_optimizeData(&((*((*_56727_m.alloc)._field_Index))._field_Model), &((*(_self_))._field_data));
	if ((!(_1ac9539e9_Access))) {
		return;;
	};
	jule::Bool _5749_array = (_1abe46251_Arr((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr);;
	if ((_5749_array && _1abe1233d_IsConst((*_56727_m.alloc)._field_Index))) {
		jule::Any _57717_model = jule::Any(jule::new_ptr<_1ac03d1c2_UnsafeIndexingExprModel>(_1ac03d1c2_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_57717_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1ac952366_isBoundaryValidType((*(*_56727_m.alloc)._field_Expr.alloc)._field_Kind))) {
		jule::Uintptr _58313_var = _1ac952630_getBoundaryVar((*(*_56727_m.alloc)._field_Expr.alloc)._field_Model);;
		if (_1ac950d9d_fitsMaxSize((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model)) {
			jule::Any _58521_model = jule::Any(jule::new_ptr<_1ac03d1c2_UnsafeIndexingExprModel>(_1ac03d1c2_UnsafeIndexingExprModel{._field_Node=_56727_m}), &__jule_any_type133);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_58521_model))))));
			return;;
		};
		_1ac950661_pushVar((*(*(_self_))._field_data.alloc)._field_boundary, _58313_var, (*(*_56727_m.alloc)._field_Index.alloc)._field_Model);
	};
}



inline void _1ac945348_anonFunc(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _59327_m) {
	_1ac9444bd_scope(_self_, &((*((*(_59327_m))._field_Func))._field_Scope));
}



inline void _1ac945601_mapExpr(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4c003_MapExprModel> _59726_m) {
	{
		auto expr = &((*(_59726_m))._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1cd7197:;
		if (it != expr_end) {
			jule::Ptr<_1abd4ba4c_KeyValPairExprModel> _59821_pair = *it;
			{
				static__1ac9416eb_optimizeData(&((*(_59821_pair))._field_Key), &((*(_self_))._field_data));
				static__1ac9416eb_optimizeData(&((*_59821_pair.alloc)._field_Val), &((*(_self_))._field_data));
			}
			_iter_next_1b1cd7197:;
			++it;
			goto _iter_begin_1b1cd7197;
		}
		_iter_end_1b1cd7197:;
	};
}



inline void _1ac9458a9_slicing(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _60426_m) {
	static__1ac9416eb_optimizeData(&((*(_60426_m))._field_Expr), &((*(_self_))._field_data));
	static__1ac9416eb_optimizeData(&((*_60426_m.alloc)._field_Left), &((*(_self_))._field_data));
	if (((*_60426_m.alloc)._field_Right != nullptr)) {
		static__1ac9416eb_optimizeData(&((*_60426_m.alloc)._field_Right), &((*(_self_))._field_data));
	};
}



inline void _1ac945b62_traitSub(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _61227_m) {
	static__1ac9416eb_optimizeData(&((*(_61227_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac945e1a_structureSub(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _61631_m) {
	static__1ac9416eb_optimizeData(&((*((*(_61631_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ac9461c3_tuple(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e027_TupleExprModel> _62024_m) {
	{
		auto expr = &((*(_62024_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1cdb487:;
		if (it != expr_end) {
			jule::Ptr<_1abe11936_Data> _62121_d = *it;
			{
				static__1ac9416eb_optimizeData(&((*(_62121_d))._field_Model), &((*(_self_))._field_data));
			}
			_iter_next_1b1cdb487:;
			++it;
			goto _iter_begin_1b1cdb487;
		}
		_iter_end_1b1cdb487:;
	};
}



inline void _1ac94647b_newCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _62626_m) {
	if (((*(_62626_m))._field_Init != nullptr)) {
		static__1ac9416eb_optimizeData(&((*_62626_m.alloc)._field_Init), &((*(_self_))._field_data));
	};
}



inline void _1ac946734_outCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _63226_m) {
	static__1ac9416eb_optimizeData(&((*(_63226_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac9469dc_outlnCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _63628_m) {
	static__1ac9416eb_optimizeData(&((*(_63628_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac946c95_panicCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _64028_m) {
	static__1ac9416eb_optimizeData(&((*(_64028_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac94704d_assertCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _64429_m) {
	static__1ac9416eb_optimizeData(&((*(_64429_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac947306_errorCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _64828_m) {
	static__1ac9416eb_optimizeData(&((*((*(_64828_m))._field_Err))._field_Model), &((*(_self_))._field_data));
}



inline void _1ac9475ae_makeCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _65227_m) {
	if (((*(_65227_m))._field_Len != nullptr)) {
		static__1ac9416eb_optimizeData(&((*_65227_m.alloc)._field_Len), &((*(_self_))._field_data));
	};
	if (((*_65227_m.alloc)._field_Cap != nullptr)) {
		static__1ac9416eb_optimizeData(&((*_65227_m.alloc)._field_Cap), &((*(_self_))._field_data));
	};
}



inline void _1ac947867_appendCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _66129_m) {
	static__1ac9416eb_optimizeData(&((*(_66129_m))._field_Dest), &((*(_self_))._field_data));
	static__1ac9416eb_optimizeData(&((*_66129_m.alloc)._field_Elements), &((*(_self_))._field_data));
}



inline void _1ac947b20_lenCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _66626_m) {
	static__1ac9416eb_optimizeData(&((*((*(_66626_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ac947dc8_capCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _67026_m) {
	static__1ac9416eb_optimizeData(&((*((*(_67026_m))._field_Expr))._field_Model), &((*(_self_))._field_data));
}



inline void _1ac948181_deleteCall(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _67429_m) {
	static__1ac9416eb_optimizeData(&((*((*(_67429_m))._field_Dest))._field_Model), &((*(_self_))._field_data));
	if (((*_67429_m.alloc)._field_Key != nullptr)) {
		static__1ac9416eb_optimizeData(&((*(*_67429_m.alloc)._field_Key.alloc)._field_Model), &((*(_self_))._field_data));
	};
}



inline void _1ac948439_sizeof(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd527de_SizeofExprModel> _68125_m) {
	static__1ac9416eb_optimizeData(&((*(_68125_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac9486e2_alignof(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _68526_m) {
	static__1ac9416eb_optimizeData(&((*(_68526_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac94899a_integratedToStr(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _68934_m) {
	static__1ac9416eb_optimizeData(&((*(_68934_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac948c53_free(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53746_FreeExprModel> _69323_m) {
	static__1ac9416eb_optimizeData(&((*(_69323_m))._field_Expr), &((*(_self_))._field_data));
}



inline void _1ac94900b_backendEmit(_1ac940cb1_exprOptimizer* _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _69730_m) {
	_1ac944215_args(_self_, nullptr, &((*(_69730_m))._field_Exprs));
}



inline void _1ac949209_do(_1ac940cb1_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b1ce9b9e:;
			{
				_1ac9432d0_binary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4885c_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b1ce9671:;
			{
				_1ac943588_unary(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd48c36_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b1ce9c26:;
			{
				_1ac943841_structureLit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4960a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1ce9c9d:;
			{
				_1ac943ae9_allocStructure(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd49907_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b1ce9d25:;
			{
				_1ac943da2_casting(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd49e8a_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b1ce9d9c:;
			{
				_1ac944776_funcCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4a83c_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b1ce9e24:;
			{
				_1ac944a2e_slice(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4ac16_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b1ce9e9b:;
			{
				_1ac944cd7_array(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4dc2a_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b1cea023:;
			{
				_1ac945090_indexing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4b1bc_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b1cea09a:;
			{
				_1ac945348_anonFunc(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4b673_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b1cea122:;
			{
				_1ac945601_mapExpr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4c003_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b1cea199:;
			{
				_1ac9458a9_slicing(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4c586_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b1cea221:;
			{
				_1ac945b62_traitSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4cb19_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1cea298:;
			{
				_1ac945e1a_structureSub(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b1cea320:;
			{
				_1ac9461c3_tuple(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4e027_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b1cea397:;
			{
				_1ac946734_outCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4e401_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b1cea41e:;
			{
				_1ac9469dc_outlnCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4e7ca_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b1cea496:;
			{
				_1ac94647b_newCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd4eba4_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b1cea51d:;
			{
				_1ac946c95_panicCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd5007d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b1cea595:;
			{
				_1ac94704d_assertCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd50534_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b1cea61c:;
			{
				_1ac947306_errorCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd5213a_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b1cea694:;
			{
				_1ac9475ae_makeCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd509da_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b1cea71b:;
			{
				_1ac947867_appendCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd50db4_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b1cea793:;
			{
				_1ac947b20_lenCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd511b1_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b1cea81a:;
			{
				_1ac947dc8_capCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd514ad_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b1cea892:;
			{
				_1ac948181_deleteCall(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd51887_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b1cea919:;
			{
				_1ac948439_sizeof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd527de_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b1cea991:;
			{
				_1ac9486e2_alignof(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd529cb_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b1ceaa18:;
			{
				_1ac94899a_integratedToStr(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd53070_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b1ceaa90:;
			{
				_1ac948c53_free(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd53746_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b1ceab17:;
			{
				_1ac94900b_backendEmit(_self_, (*((*(_self_))._field_model)).unsafe_cast_ptr<_1abd53449_BackendEmitExprModel>());
			}
		}
		_match_end_1b1ce9907:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ac940cb1_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94a837_dynamicVar _Src) {
	_Stream << "dynamicVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline void _1ac94b0da_pushVar(jule::Ptr<_1ac94ab78_dynamic> _self_, jule::Uintptr _3227_var, jule::Ptr<_1abe42d30_TypeKind> _3245_kind) {
	if (((!(_1ac9554ce_Dynamic)) || (_3227_var == 0LLU))) {
		return;;
	};
	_3245_kind=_1ac94c44e_isTypeGuaranteedDynamicData(&(_self_), _3245_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d173c5:;
		if (it != expr_end) {
			_1ac94a837_dynamicVar _3821_v = *it;
			{
				if ((_3821_v._field_var == _3227_var)) {
					_3821_v._field_kind=_3245_kind;
					return;;
				};
			}
			_iter_next_1b1d173c5:;
			++it;
			goto _iter_begin_1b1d173c5;
		}
		_iter_end_1b1d173c5:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d17d87:;
		if (it != expr_end) {
			_1ac94a837_dynamicVar _4521_v = *it;
			{
				if ((_4521_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _3227_var;
						jule::Ptr<_1abe42d30_TypeKind> _1___jule_assign_arg = _3245_kind;
						_4521_v._field_var = ___jule_assign_arg;
						_4521_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1b1d17d87:;
			++it;
			goto _iter_begin_1b1d17d87;
		}
		_iter_end_1b1d17d87:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,jule::Slice<_1ac94a837_dynamicVar>::make({_1ac94a837_dynamicVar{._field_var=_3227_var, ._field_kind=_3245_kind}}));
}



inline jule::Bool _1ac94b42b_removeVar(_1ac94ab78_dynamic* _self_, jule::Uintptr _5528_var) {
	if ((_5528_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1d1a043:;
			if (it != expr_end) {
				_1ac94a837_dynamicVar _5725_v = *it;
				{
					if ((_5725_v._field_var == _5528_var)) {
						_5725_v._field_var=0LLU;
						_5725_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1b1d1a043:;
				++it;
				goto _iter_begin_1b1d1a043;
			}
			_iter_end_1b1d1a043:;
		};
	};
	return false;;
}



inline jule::Bool _1ac94b827_isFits(_1ac94ab78_dynamic* _self_, jule::Uintptr _6925_var, jule::Ptr<_1abe42d30_TypeKind> _6939_kind) {
	if ((_6925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1d1b8c4:;
			if (it != expr_end) {
				_1ac94a837_dynamicVar _7120_v = *it;
				{
					if ((_7120_v._field_var == _6925_var)) {
						return ((_7120_v._field_kind != nullptr) && _1abe43539_Equal(_7120_v._field_kind, _6939_kind));;
					};
				}
				_iter_next_1b1d1b8c4:;
				++it;
				goto _iter_begin_1b1d1b8c4;
			}
			_iter_end_1b1d1b8c4:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94ab78_dynamic _Src) {
	_Stream << "dynamic{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline _1ac94d30c_dataCheckpoint _1ac94db7b_getCheckpoint(_1ac94d807_data* _self_) {
	_1ac94d30c_dataCheckpoint _2513_c = _1ac94d30c_dataCheckpoint{};;
	_2513_c._field_boundary._field_vars=jule::append(jule::Slice<_1ac94edad_boundaryVar>::alloc(0LL, 0LL),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_2513_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d1d794:;
		if (it != expr_end) {
			jule::I32 _2713_i = it - expr->begin();
			{
				_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize=jule::append(jule::Slice<jule::Any>::alloc(0LL, 0LL, jule::Any(nullptr)),_2513_c._field_boundary._field_vars[_2713_i]._field_maxSize);
			}
			_iter_next_1b1d1d794:;
			++it;
			_2713_i++;
			goto _iter_begin_1b1d1d794;
		}
		_iter_end_1b1d1d794:;
	};
	_2513_c._field_nils._field_vars=jule::append(jule::Slice<_1ac04012a_nilVar>::alloc(0LL, 0LL),(*((*(_self_))._field_nils))._field_vars);
	_2513_c._field_dynamic._field_vars=jule::append(jule::Slice<_1ac94a837_dynamicVar>::alloc(0LL, 0LL),(*((*(_self_))._field_dynamic))._field_vars);
	return _2513_c;;
}



inline void _1ac94de34_loadCheckpoint(_1ac94d807_data* _self_, _1ac94d30c_dataCheckpoint* _3538_c) {
	(*((*(_self_))._field_boundary))=(*(_3538_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_3538_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_3538_c))._field_dynamic;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94d807_data _Src) {
	_Stream << "data{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94edad_boundaryVar _Src) {
	_Stream << "boundaryVar{";
	_Stream << "var:" << _Src._field_var << ", ";
	_Stream << "maxSize:" << _Src._field_maxSize;
	_Stream << "}";
	return _Stream;
}



inline void _1ac950661_pushVar(_1ac9501ee_boundary* _self_, jule::Uintptr _2426_var, jule::Any _2444_maxSize) {
	if (((!(_1ac9539e9_Access)) || (_2426_var == 0LLU))) {
		return;;
	};
	if ((!(_1ac951266_isValidBoundaryInfo(_2444_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d328b8:;
		if (it != expr_end) {
			_1ac94edad_boundaryVar _3221_v = *it;
			{
				if ((_3221_v._field_var == _2426_var)) {
					{
						auto expr = &(_3221_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1d33633:;
						if (it != expr_end) {
							jule::I32 _3421_i = it - expr->begin();
							jule::Any _3424_max = *it;
							{
								if (_1ac9519a3_fitsSize(_2444_maxSize, _3424_max)) {
									_3221_v._field_maxSize[_3421_i]=_2444_maxSize;
									return;;
								};
							}
							_iter_next_1b1d33633:;
							++it;
							_3421_i++;
							goto _iter_begin_1b1d33633;
						}
						_iter_end_1b1d33633:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3221_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1b1d328b8:;
			++it;
			goto _iter_begin_1b1d328b8;
		}
		_iter_end_1b1d328b8:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d33204:;
		if (it != expr_end) {
			_1ac94edad_boundaryVar _4621_v = *it;
			{
				if ((_4621_v._field_var == 0LLU)) {
					_4621_v._field_var=_2426_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4621_v._field_maxSize; __jule_push_dest.push(_2444_maxSize); };
					return;;
				};
			}
			_iter_next_1b1d33204:;
			++it;
			goto _iter_begin_1b1d33204;
		}
		_iter_end_1b1d33204:;
	};
	{ jule::Slice<_1ac94edad_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ac94edad_boundaryVar{._field_var=_2426_var, ._field_maxSize=jule::Slice<jule::Any>::make({_2444_maxSize})}); };
}



inline jule::Bool _1ac950d9d_fitsMaxSize(_1ac9501ee_boundary* _self_, jule::Uintptr _7130_var, jule::Any _7144_expr) {
	if ((_7130_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1d37eb7:;
			if (it != expr_end) {
				_1ac94edad_boundaryVar _7320_v = *it;
				{
					if ((_7320_v._field_var == _7130_var)) {
						return (_1ac95162e_fitsMaxSize(_7320_v._field_maxSize, _7144_expr) != -1LL);;
					};
				}
				_iter_next_1b1d37eb7:;
				++it;
				goto _iter_begin_1b1d37eb7;
			}
			_iter_end_1b1d37eb7:;
		};
	};
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac9501ee_boundary _Src) {
	_Stream << "boundary{";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1acaba589_Optimizer> static__1acabaa0c_New(jule::Ptr<_1ac92a43d_IR>* _2624_ir) {
	return jule::new_ptr<_1acaba589_Optimizer>(_1acaba589_Optimizer{._field_ir=(*(_2624_ir))});;
}



inline void _1acabacb5_optimizeGlobal(_1acaba589_Optimizer* _self_, jule::Ptr<_1abda8d2e_Var>* _3238_v) {
	if ((!((*((*(_3238_v))))._field_Binded))) {
		static__1ac941410_optimize(&((*((*((*((*(_3238_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1acabb06d_optimizeFunction(_1acaba589_Optimizer* _self_, jule::Ptr<_1abd566a0_Fn>* _3840_func) {
	if ((*((*(_3840_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3840_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23c0c69:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _4221_ins = *it;
			{
				jule::Ptr<_1ac939639_scopeOptimizer> _4317_so = static__1ac939bab_new((*(_4221_ins))._field_Scope);;
				_1ac93dd25_optimize(_4317_so);
			}
			_iter_next_1b23c0c69:;
			++it;
			goto _iter_begin_1b23c0c69;
		}
		_iter_end_1b23c0c69:;
	};
}



inline void _1acabb326_optimizeStruct(_1acaba589_Optimizer* _self_, jule::Ptr<_1abd416ce_Struct>* _4838_s) {
	if ((*((*(_4838_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4838_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23c241e:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _5221_ins = *it;
			{
				{
					auto expr = &((*(_5221_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23c2d15:;
					if (it != expr_end) {
						jule::Ptr<_1abd438ac_FieldIns> _5325_f = *it;
						{
							if (((*(_5325_f))._field_Default != nullptr)) {
								static__1ac941410_optimize(&((*(*_5325_f.alloc)._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1b23c2d15:;
						++it;
						goto _iter_begin_1b23c2d15;
					}
					_iter_end_1b23c2d15:;
				};
				{
					auto expr = &((*_5221_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23c3255:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _5825_m = *it;
						{
							_1acabb06d_optimizeFunction(_self_, &(_5825_m));
						}
						_iter_next_1b23c3255:;
						++it;
						goto _iter_begin_1b23c3255;
					}
					_iter_end_1b23c3255:;
				};
			}
			_iter_next_1b23c241e:;
			++it;
			goto _iter_begin_1b23c241e;
		}
		_iter_end_1b23c241e:;
	};
}



inline void _1acabb5ce_optimizeGlobals(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _6439_p) {
	{
		auto expr = &((*((*(_6439_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23c4575:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _6521_f = *it;
			{
				{
					auto expr = &((*(_6521_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23c5378:;
					if (it != expr_end) {
						jule::Ptr<_1abda8d2e_Var> _6625_v = *it;
						{
							_1acabacb5_optimizeGlobal(_self_, &(_6625_v));
						}
						_iter_next_1b23c5378:;
						++it;
						goto _iter_begin_1b23c5378;
					}
					_iter_end_1b23c5378:;
				};
			}
			_iter_next_1b23c4575:;
			++it;
			goto _iter_begin_1b23c4575;
		}
		_iter_end_1b23c4575:;
	};
}



inline void _1acabb887_optimizeFunctions(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _7241_p) {
	{
		auto expr = &((*((*(_7241_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23c590b:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _7321_f = *it;
			{
				{
					auto expr = &((*(_7321_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23c6775:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _7425_func = *it;
						{
							_1acabb06d_optimizeFunction(_self_, &(_7425_func));
						}
						_iter_next_1b23c6775:;
						++it;
						goto _iter_begin_1b23c6775;
					}
					_iter_end_1b23c6775:;
				};
			}
			_iter_next_1b23c590b:;
			++it;
			goto _iter_begin_1b23c590b;
		}
		_iter_end_1b23c590b:;
	};
}



inline void _1acabbb40_optimizeStructs(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _8039_p) {
	{
		auto expr = &((*((*(_8039_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23c6d08:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _8121_f = *it;
			{
				{
					auto expr = &((*(_8121_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23c7b72:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _8225_s = *it;
						{
							_1acabb326_optimizeStruct(_self_, &(_8225_s));
						}
						_iter_next_1b23c7b72:;
						++it;
						goto _iter_begin_1b23c7b72;
					}
					_iter_end_1b23c7b72:;
				};
			}
			_iter_next_1b23c6d08:;
			++it;
			goto _iter_begin_1b23c6d08;
		}
		_iter_end_1b23c6d08:;
	};
}



inline void _1acabbde8_optimizePackage(_1acaba589_Optimizer* _self_, jule::Ptr<_1ab67a535_Package>* _8839_p) {
	_1acabb5ce_optimizeGlobals(_self_, _8839_p);
	_1acabb887_optimizeFunctions(_self_, _8839_p);
	_1acabbb40_optimizeStructs(_self_, _8839_p);
}



inline void _1acabc0e6_Optimize(_1acaba589_Optimizer* _self_) {
	_1acabc38d_detectEnabled();
	if (_1ac95318b_Deadcode) {
		_1acaad48e_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1acaba38b_scopeEnabled || _1acaba116_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b23c9b63:;
			if (it != expr_end) {
				jule::Ptr<_1ab67760e_ImportInfo> _10425_u = *it;
				{
					if ((!((*(_10425_u))._field_Binded))) {
						_1acabbde8_optimizePackage(_self_, &((*_10425_u.alloc)._field_Package));
					};
				}
				_iter_next_1b23c9b63:;
				++it;
				goto _iter_begin_1b23c9b63;
			}
			_iter_end_1b23c9b63:;
		};
		_1acabbde8_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1ac95318b_Deadcode) {
		_1acab2e44_EliminateScopes(&((*(_self_))._field_ir));
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1acaba589_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ac607add_Reset(void) {
	jule::out(jule::Str::lit("\033[0m", 4));
}



inline void static__1ac60901d_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ac607add_Reset();
}





std::ostream &operator<<(std::ostream &_Stream, _1ac608c65_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ac60a926_LogFlat(_1eb22e132_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1ac60ab57_LogError(_1eb22e132_Log* _1925_l) {
	jule::out(jule::Str::lit("\033[31m", 5));
	jule::out(jule::Str::lit("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1ac607add_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str::lit("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b9a9e40c_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str::lit(":", 1));
		jule::out(_1b9a9e40c_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3617_line = _20b0e1501_TrimLeft((*(_1925_l))._field_Line, jule::Str::lit("\r\n\v\b ", 5));;
		jule::I32 _3717_offset = (((*(_1925_l))._field_Line.len() - _3617_line.len()) + 1LL);;
		jule::I32 _3817_oldLen = _3617_line.len();;
		_3617_line=_20b0e1501_TrimLeft(_3617_line, jule::Str::lit("\t", 1));
		if ((_3817_oldLen != _3617_line.len())) {
			_3717_offset+=((_3817_oldLen - _3617_line.len()) << 3LLU);
		};
		jule::out(jule::Str::lit("\n  ", 3));
		jule::Str _4413_row = _1b9a9e40c_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4413_row);
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_3617_line);
		jule::out(jule::Str::lit("\n  ", 3));
		jule::out(_20b0d9a16_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
		jule::out(jule::Str::lit(" | ", 3));
		jule::out(_20b0d9a16_Repeat(jule::Str::lit(" ", 1), ((*(_1925_l))._field_Column - _3717_offset)));
		jule::out(jule::Str::lit("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str::lit("\n  ", 3));
			jule::out(_20b0d9a16_Repeat(jule::Str::lit(" ", 1), _4413_row.len()));
			jule::out(jule::Str::lit(" | ", 3));
			static__1ac60901d_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str::lit("\n", 1));
}



inline void static__1ac60ad88_Log(_1eb22e132_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1b23d3d37:;
			{
				static__1ac60a926_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1b23d7742:;
			{
				static__1ac60ab57_LogError(_6520_l);
			}
		}
		_match_end_1b23d7654:;
	};
}



inline void static__1ac60b0b9_PrintLogs(jule::Slice<_1eb22e132_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23d8226:;
		if (it != expr_end) {
			_1eb22e132_Log *_7616_l = it;
			{
				static__1ac60ad88_Log(_7616_l);
			}
			_iter_next_1b23d8226:;
			++it;
			goto _iter_begin_1b23d8226;
		}
		_iter_end_1b23d8226:;
	};
	jule::out(jule::Str::lit("=== ", 4));
	jule::out(_1b9a9e40c_Itoa((*(_7526_logs)).len()));
	jule::outln(jule::Str::lit(" error generated ===", 20));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac60a64b_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad423e25_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1ad4245eb_Time static__1ad4249a3_Unix(jule::U64 _9120_sec) {
	return _1ad4245eb_Time{._field_sec=_9120_sec};;
}



inline _1ad4245eb_Time static__1ad424bb2_Now(void) {
	return static__1ad4249a3_Unix(_1ad4266db_unix());;
}



inline _1ad423e25_AbsTime _1ad42639a_Abs(_1ad4245eb_Time* _self_) {
	jule::U64 _1279_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12813_days = (_1279_secs / 86400LLU);;
	jule::U64 _12913_remSecs = (_1279_secs % 86400LL);;
	if ((_12913_remSecs < 0LLU)) {
		_12913_remSecs+=86400LLU;
		(_12813_days)--;
	};
	jule::U64 _13513_qcCycles = (_12813_days / 146097LLU);;
	jule::U64 _13613_remDays = (_12813_days % 146097LL);;
	if ((_13613_remDays < 0LLU)) {
		_13613_remDays+=146097LLU;
		(_13513_qcCycles)--;
	};
	jule::U64 _14213_cCycles = (_13613_remDays / 36524LLU);;
	if ((_14213_cCycles == 4LLU)) {
		(_14213_cCycles)--;
	};
	_13613_remDays-=(_14213_cCycles * 36524LLU);
	jule::U64 _14813_qCycles = (_13613_remDays / 1461LLU);;
	if ((_14813_qCycles == 25LLU)) {
		(_14813_qCycles)--;
	};
	_13613_remDays-=(_14813_qCycles * 1461LLU);
	jule::U64 _15413_remYears = (_13613_remDays / 365LLU);;
	if ((_15413_remYears == 4LLU)) {
		(_15413_remYears)--;
	};
	_13613_remDays-=(_15413_remYears * 365LLU);
	jule::U64 _16013_leap = static_cast<jule::U64>(0LLU);;
	if (((_15413_remYears == 0LLU) && ((_14813_qCycles > 0LLU) || (_14213_cCycles == 0LLU)))) {
		_16013_leap=1LLU;
	};
	jule::U64 _16413_yDay = (((_13613_remDays + 31LLU) + 28LLU) + _16013_leap);;
	if ((_16413_yDay >= (365LLU + _16013_leap))) {
		_16413_yDay-=(365LLU + _16013_leap);
	};
	jule::U64 _16913_months = static_cast<jule::U64>(0LLU);;
	for (; (_1ad423386_mdays[static_cast<jule::I32>(_16913_months)] <= _13613_remDays); (_16913_months)++) {
		{
			_13613_remDays-=_1ad423386_mdays[static_cast<jule::I32>(_16913_months)];
		}
	_iter_next_1b24160cd:;
	}
	_iter_end_1b24160cd:;;
	_1ad423e25_AbsTime _17413_t = _1ad423e25_AbsTime{};;
	_17413_t._field_Year=((((_15413_remYears + (4LLU * _14813_qCycles)) + (100LLU * _14213_cCycles)) + (400LLU * _13513_qcCycles)) + 100LLU);
	_17413_t._field_Month=(_16913_months + 2LLU);
	if ((_17413_t._field_Month >= 12LLU)) {
		_17413_t._field_Month-=12LLU;
		(_17413_t._field_Year)++;
	};
	_17413_t._field_Month+=1LLU;
	_17413_t._field_Year+=1900LLU;
	_17413_t._field_Day=(_13613_remDays + 1LLU);
	_17413_t._field_WeekDay=((3LLU + _12813_days) % 7LL);
	if ((_17413_t._field_WeekDay < 0LLU)) {
		_17413_t._field_WeekDay+=7LLU;
	};
	_17413_t._field_YearDay=_16413_yDay;
	_17413_t._field_Hour=(_12913_remSecs / 3600LLU);
	_17413_t._field_Minute=((_12913_remSecs / 60LLU) % 60LL);
	_17413_t._field_Second=(_12913_remSecs % 60LL);
	return _17413_t;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad4245eb_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad353d00_scopeCoder> static__1ad354460_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _7324_oc) {
	return jule::new_ptr<_1ad353d00_scopeCoder>(_1ad353d00_scopeCoder{._field_oc=(*(_7324_oc))});;
}



inline void _1b227c7c4_iterHead(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _8032_it, jule::Bool* _8044_ref, jule::Str _8055_begin) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ac952d8e_Copy && _1ad35b126_isCopyOptimizable(&((*((*(_8032_it))))._field_Expr)))) {
		(*(_8044_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_8032_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b2280b3a:;
				{
					jule::Ptr<_1abda8d2e_Var> _8917_v = (*((*((*(_8032_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
					if ((*(_8917_v))._field_Reference) {
						_1ad36c148_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
						goto _match_end_1b228129a;
					};
					goto _case_begin_1b2281300;
				}
			}
			else {
				_case_begin_1b2281300:;
				{
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1ad36c148_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b228129a:;
		};
	} else {
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_8032_it))))._field_Expr))._field_Model);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_8044_ref))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("begin();\n", 9));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_8044_ref))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("end();\n", 7));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, _8055_begin);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
}



inline void _1ad354b36_rangeIndexIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _12939_it) {
	_209e0d4d9_StrBuilder _13013_sb = static__209e0d918_New(64LL);;
	static__1ad375607_iterBegin(&(_13013_sb), static_cast<jule::Uintptr>((*(_12939_it))));
	jule::Str _1329_begin = _209e0e771_Str(&_13013_sb);;
	_209e0e96e_Clear(&_13013_sb);
	static__1ad375bce_iterNext(&(_13013_sb), static_cast<jule::Uintptr>((*(_12939_it))));
	jule::Str _1359_next = _209e0e771_Str(&_13013_sb);;
	jule::Bool _13713_ref = false;;
	_1b227c7c4_iterHead(_self_, _12939_it, &(_13713_ref), _1329_begin);
	if (((*((*(_12939_it))))._field_KeyA != nullptr)) {
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12939_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b228d296, jule::Ptr<__jule_anon_1b228d296_ctx>::make(__jule_anon_1b228d296_ctx{._self_=_self_,._13713_ref=_13713_ref}).as<jule::Uintptr>(), __jule_anon_1b228d296_ctx_handler));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_12939_it))))._field_KeyB != nullptr)) {
		(*(*((*(_12939_it))))._field_KeyB.alloc)._field_Reference=(_1ac952d8e_Copy && _1ad35b4de_isIterCopyOptimizable(&((*((*(_12939_it))))._field_Expr), &((*((*(_12939_it))))._field_KeyB)));
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_12939_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b2291d8d, jule::Ptr<__jule_anon_1b2291d8d_ctx>::make(__jule_anon_1b2291d8d_ctx{._self_=_self_,._12939_it=_12939_it}).as<jule::Uintptr>(), __jule_anon_1b2291d8d_ctx_handler));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad35a389_scope(_self_, (*((*(_12939_it))))._field_Scope);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, _1359_next);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((*((*(_12939_it))))._field_KeyA != nullptr)) {
		static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_12939_it))))._field_KeyA);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1ad43032c_write((*_self_.alloc)._field_oc, _1329_begin);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad3758e3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_12939_it))));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad354dde_rangeHashmapIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter>* _19641_it) {
	_209e0d4d9_StrBuilder _19713_sb = static__209e0d918_New(64LL);;
	static__1ad375607_iterBegin(&(_19713_sb), static_cast<jule::Uintptr>((*(_19641_it))));
	jule::Str _1999_begin = _209e0e771_Str(&_19713_sb);;
	_209e0e96e_Clear(&_19713_sb);
	static__1ad375bce_iterNext(&(_19713_sb), static_cast<jule::Uintptr>((*(_19641_it))));
	jule::Str _2029_next = _209e0e771_Str(&_19713_sb);;
	jule::Bool _20413_ref = false;;
	_1b227c7c4_iterHead(_self_, _19641_it, &(_20413_ref), _1999_begin);
	if (((*((*(_19641_it))))._field_KeyA != nullptr)) {
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19641_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b22a1364, jule::Ptr<__jule_anon_1b22a1364_ctx>::make(__jule_anon_1b22a1364_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b22a1364_ctx_handler));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	if (((*((*(_19641_it))))._field_KeyB != nullptr)) {
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_19641_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1b22a37d9, jule::Ptr<__jule_anon_1b22a37d9_ctx>::make(__jule_anon_1b22a37d9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b22a37d9_ctx_handler));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad35a389_scope(_self_, (*((*(_19641_it))))._field_Scope);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, _2029_next);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("++it;\n", 6));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1ad43032c_write((*_self_.alloc)._field_oc, _1999_begin);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad3758e3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_19641_it))));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad355197_strRuneIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03dd4e_StrRuneIter> _24335_it) {
	_209e0d4d9_StrBuilder _24413_sb = static__209e0d918_New(64LL);;
	static__1ad375607_iterBegin(&(_24413_sb), static_cast<jule::Uintptr>((*(_24335_it))._field_Base));
	jule::Str _2469_begin = _209e0e771_Str(&_24413_sb);;
	_209e0e96e_Clear(&_24413_sb);
	static__1ad375bce_iterNext(&(_24413_sb), static_cast<jule::Uintptr>((*_24335_it.alloc)._field_Base));
	jule::Str _2499_next = _209e0e771_Str(&_24413_sb);;
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	jule::Bool _25513_ref = false;;
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ac952d8e_Copy && _1ad35b126_isCopyOptimizable(&((*_24335_it.alloc)._field_Expr)))) {
		_25513_ref=true;
		{
			auto &_match_expr{ (*((*(_24335_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b22b182a:;
				{
					jule::Ptr<_1abda8d2e_Var> _26117_v = (*((*(_24335_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
					if ((*(_26117_v))._field_Reference) {
						_1ad36c148_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1b22b1e8a;
					};
					goto _case_begin_1b22b1ee0;
				}
			}
			else {
				_case_begin_1b22b1ee0:;
				{
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1ad36c148_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1b22b1e8a:;
		};
	} else {
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_24335_it.alloc)._field_Expr))._field_Model);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("char *it = expr", 15));
	if (_25513_ref) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("operator char*();\n", 18));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("const char *end = it + expr", 27));
	if (_25513_ref) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("len();\n", 7));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((*((*_24335_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1b22bc77b, jule::Ptr<__jule_anon_1b22bc77b_ctx>::make(__jule_anon_1b22bc77b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b22bc77b_ctx_handler));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("std::size_t len;\n", 17));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		_1ad437488_varInitExpr((*_self_.alloc)._field_oc, &((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB), nullptr);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, _2469_begin);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("std::tie(", 9));
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB != nullptr)) {
		static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24335_it.alloc)._field_Base.alloc)._field_KeyB);
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("std::ignore", 11));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", len) = jule::utf8_decode_rune_str(it, end - it", 48));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad35a389_scope(_self_, (*(*_24335_it.alloc)._field_Base.alloc)._field_Scope);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, _2499_next);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("it += len;\n", 11));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_24335_it.alloc)._field_Base.alloc)._field_KeyA);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("++;\n", 4));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("goto ", 5));
	_1ad43032c_write((*_self_.alloc)._field_oc, _2469_begin);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad355450_ifCase(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655994_If> _35130_i) {
	if (((*(_35130_i))._field_Expr != nullptr)) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_35130_i.alloc)._field_Expr);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	};
	_1ad35a389_scope(_self_, (*_35130_i.alloc)._field_Scope);
}



inline void _1ad355708_conditional(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6561ae_Conditional> _36035_c) {
	jule::Bool _36113_writed = false;;
	{
		auto expr = &((*(_36035_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b22d26d6:;
		if (it != expr_end) {
			jule::Ptr<_1ab655994_If> _36221_elif = *it;
			{
				if ((_36221_elif == nullptr)) {
					goto _iter_next_1b22d26d6;
				};
				if (_36113_writed) {
					_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_36113_writed=true;
				_1ad355450_ifCase(_self_, _36221_elif);
			}
			_iter_next_1b22d26d6:;
			++it;
			goto _iter_begin_1b22d26d6;
		}
		_iter_end_1b22d26d6:;
	};
	if (((*_36035_c.alloc)._field_Default != nullptr)) {
		if (_36113_writed) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ad35a389_scope(_self_, (*(*_36035_c.alloc)._field_Default.alloc)._field_Scope);
	};
}



inline void _1ad3559b1_infIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6564ab_InfIter> _38031_it) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad35a389_scope(_self_, (*(_38031_it))._field_Scope);
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad375bce_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38031_it));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad3758e3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38031_it));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad355c69_whileIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab656962_WhileIter> _39733_it) {
	if ((((*(_39733_it))._field_Expr != nullptr) && ((*_39733_it.alloc)._field_Next == nullptr))) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39733_it.alloc)._field_Expr);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39733_it))._field_Expr != nullptr)) {
			_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_39733_it.alloc)._field_Expr);
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
		if (((*_39733_it.alloc)._field_Next != nullptr)) {
			_1ad359d28_st(_self_, (*_39733_it.alloc)._field_Next);
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39733_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad35a389_scope(_self_, (*_39733_it.alloc)._field_Scope);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad375bce_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39733_it));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad3758e3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39733_it));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ad356022_rangeIter(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6573ad_RangeIter> _43633_it) {
	{
		
		if ((_1abe464d7_Slc((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b22e8004:;
			{
				_1ad354b36_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		else if ((_1abe46251_Arr((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b22e7bb3:;
			{
				_1ad354b36_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		else if ((_1abe47021_Map((*((*(_43633_it))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b22e7c29:;
			{
				_1ad354dde_rangeHashmapIter(_self_, &(_43633_it));
			}
		}
		else {
			_case_begin_1b22e7b4c:;
			{
				_1ad354b36_rangeIndexIter(_self_, &(_43633_it));
			}
		}
		_match_end_1b22e7a4d:;
	};
}



inline void _1ad3562ca_cont(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657743_ContSt> _44924_c) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad375bce_iterNext(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_44924_c))._field_It);
}



inline void _1ad356583_label(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657e19_Label> _45425_l) {
	static__1ad375eba_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45425_l));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":", 1));
}



inline void _1ad35683b_gotoSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6582e3_GotoSt> _45926_gt) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad375eba_label(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_45926_gt))._field_Label));
}



inline void _1ad356ae4_postfix(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab6586bc_Postfix> _46431_p) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_46431_p))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	_1ad43032c_write((*_self_.alloc)._field_oc, (*_46431_p.alloc)._field_Op);
}



inline void _1ad356d9c_assign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab658b73_Assign> _47130_a) {
	_1ad36277b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47130_a))._field_Left))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, (*((*_47130_a.alloc)._field_Op))._field_Kind);
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47130_a.alloc)._field_Right))._field_Model);
}



inline void _1ad357155_mapLookupAssign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _47740_a) {
	jule::Ptr<_1abd4b1bc_IndexingExprModel> _47813_iem = (*((*(_47740_a))))._field_Right.cast_ptr<_1abd4b1bc_IndexingExprModel>(&__jule_any_type44);;
	_1ad36277b_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*(_47813_iem))._field_Expr))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".lookup(", 8));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_47813_iem.alloc)._field_Index))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_47740_a))))._field_Left[0LL] != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47740_a))))._field_Left[0LL]))._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_47740_a))))._field_Left[1LL] != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*((*(_47740_a))))._field_Left[1LL]))._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad35740d_multiAssignTup(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _50039_a) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	jule::Ptr<_1abd4e027_TupleExprModel> _50413_tup = (*((*(_50039_a))))._field_Right.cast_ptr<_1abd4e027_TupleExprModel>(&__jule_any_type81);;
	{
		auto expr = &((*(_50413_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b230d5ad:;
		if (it != expr_end) {
			jule::I32 _50614_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _50621_r = *it;
			{
				_1ad430bce_indent((*_self_.alloc)._field_oc);
				jule::Ptr<_1abe11936_Data> _50817_l = (*((*(_50039_a))))._field_Left[_50614_i];;
				if ((_50817_l != nullptr)) {
					{
						auto &_match_expr{ (*(_50817_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b23113b3:;
							{
								jule::Ptr<_1abda8d2e_Var> _51225_v = (*(_50817_l))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
								if (((*(_51225_v))._field_Reference && (!(_1abda9208_IsInitialized(_51225_v))))) {
									static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _51225_v);
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = &(", 5));
									_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_50621_r))._field_Model);
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
									(*((*(_50039_a))))._field_Left[_50614_i]=nullptr;
									goto _iter_next_1b230d5ad;
								};
							}
						}
						_match_end_1b231135d:;
					};
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_50817_l.alloc)._field_Kind);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
					static__1ad37356c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1ad353591_assignArgName, static_cast<jule::Uintptr>(_50614_i));
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_50621_r.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b230d5ad:;
			++it;
			_50614_i++;
			goto _iter_begin_1b230d5ad;
		}
		_iter_end_1b230d5ad:;
	};
	{
		auto expr = &((*((*(_50039_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23172a9:;
		if (it != expr_end) {
			jule::I32 _53314_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _53321_l = *it;
			{
				if ((_53321_l == nullptr)) {
					goto _iter_next_1b23172a9;
				};
				_1ad430bce_indent((*_self_.alloc)._field_oc);
				_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_53321_l))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				static__1ad37356c_toOut(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1ad353591_assignArgName, static_cast<jule::Uintptr>(_53314_i));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b23172a9:;
			++it;
			_53314_i++;
			goto _iter_begin_1b23172a9;
		}
		_iter_end_1b23172a9:;
	};
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad3576b6_multiAssignFn(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign>* _54938_a) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	jule::Ptr<_1abd4a83c_FnCallExprModel> _55413_f = (*((*(_54938_a))))._field_Right.cast_ptr<_1abd4a83c_FnCallExprModel>(&__jule_any_type33);;
	_1ad449ab6_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_55413_f))._field_Func))._field_Result));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_54938_a))))._field_Right);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1abe509ec_Tuple> _56013_tup = _1abe472a7_Tup((*(*_55413_f.alloc)._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_54938_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2321ba9:;
		if (it != expr_end) {
			jule::I32 _56114_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _56121_l = *it;
			{
				if ((_56121_l != nullptr)) {
					;
					_1ad430bce_indent((*_self_.alloc)._field_oc);
					_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_56121_l.alloc)._field_Model);
					{
						
						if (_1abe43539_Equal((*(_56013_tup))._field_Types[_56114_i], (*_56121_l.alloc)._field_Kind)) {
							_case_begin_1b232d105:;
							{
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
								_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_56114_i));
							}
						}
						else if (_1ac934d4e_IsAny(&((*_56121_l.alloc)._field_Kind))) {
							_case_begin_1b232a014:;
							{
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
								_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_56114_i));
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
								_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, (*(_56013_tup))._field_Types[_56114_i])));
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						else {
							_case_begin_1b232321b:;
							{
								if ((_1abe46c8a_Trait((*(_56013_tup))._field_Types[_56114_i].ptr()) != nullptr)) {
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
									jule::Ptr<_1abd69a59_Trait> _58029_t1 = _1abe46c8a_Trait((*_56121_l.alloc)._field_Kind.ptr());;
									jule::Ptr<_1abd69a59_Trait> _58129_t2 = _1abe46c8a_Trait((*_56013_tup.alloc)._field_Types[_56114_i].ptr());;
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
									_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_56114_i));
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".map<", 5));
									static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _58029_t1);
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
									_1ad4323b7_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _58029_t1, _58129_t2);
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
									goto _match_end_1b232423e;
								};
								jule::Ptr<_1abd69a59_Trait> _59121_t = _1abe46c8a_Trait((*_56121_l.alloc)._field_Kind);;
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
								_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_56114_i));
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
								static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _59121_t);
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
								_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ac937802_FindTraitTypeOffset(_59121_t, (*_56013_tup.alloc)._field_Types[_56114_i])));
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
							}
						}
						_match_end_1b232423e:;
					};
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				};
			}
			_iter_next_1b2321ba9:;
			++it;
			_56114_i++;
			goto _iter_begin_1b2321ba9;
		}
		_iter_end_1b2321ba9:;
	};
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad35796e_multiAssign(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659129_MultiAssign> _60935_a) {
	{
		auto expr = &((*(_60935_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2333b44:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _61221_d = *it;
			{
				_1ad437488_varInitExpr((*(_self_))._field_oc, &(_61221_d), nullptr);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
				_1ad430bce_indent((*_self_.alloc)._field_oc);
			}
			_iter_next_1b2333b44:;
			++it;
			goto _iter_begin_1b2333b44;
		}
		_iter_end_1b2333b44:;
	};
	{
		auto &_match_expr{ (*(_60935_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b233435e:;
			{
				_1ad357155_mapLookupAssign(_self_, &(_60935_a));
				return;;
			}
		}
		_match_end_1b2334309:;
	};
	{
		auto &_match_expr{ (*(_60935_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b23365e7:;
			{
				_1ad35740d_multiAssignTup(_self_, &(_60935_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b2335d44:;
			{
				_1ad3576b6_multiAssignFn(_self_, &(_60935_a));
			}
		}
		else {
			_case_begin_1b2335ccd:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:631:13"));;
			}
		}
		_match_end_1b2335c78:;
	};
}



inline jule::Fn<void> _1ad357cb0_matchExpr(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _63533_m) {
	if ((!(_1abe1233d_IsConst((*(_63533_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b23381dc, jule::Ptr<__jule_anon_1b23381dc_ctx>::make(__jule_anon_1b23381dc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b23381dc_ctx_handler);;
	};
	if (((!(_1b9ab19b3_IsBool((*(*_63533_m.alloc)._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1b9aae3b7_ReadBool((*(*_63533_m.alloc)._field_Expr.alloc)._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1b23394eb, jule::Ptr<__jule_anon_1b23394eb_ctx>::make(__jule_anon_1b23394eb_ctx{._self_=_self_,._63533_m=_63533_m}).as<jule::Uintptr>(), __jule_anon_1b23394eb_ctx_handler);;
	};
	return nullptr;;
}



inline void _1ad358123_case(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _64528_m, jule::Ptr<_1ab65a2b2_Case> _64543_c) {
	if ((((*(_64543_c))._field_Exprs.len() != 0LL) && (!((*(_64528_m))._field_Comptime)))) {
		if ((((*_64528_m.alloc)._field_Cases.len() > 0LL) && ((*_64528_m.alloc)._field_Cases[0LL] == _64543_c))) {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_64543_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b233d621:;
			if (it != expr_end) {
				jule::I32 _65218_i = it - expr->begin();
				jule::Ptr<_1abe11936_Data> _65225_expr = *it;
				{
					{
						
						if ((!((*_64528_m.alloc)._field_TypeMatch))) {
							_case_begin_1b2347042:;
							{
								jule::Fn<void> _65521_caseExpr = _1ad357cb0_matchExpr(_self_, _64528_m);;
								if (_1abe1267e_GoodOperand((*_64528_m.alloc)._field_Expr.ptr(), &(_65225_expr))) {
									if ((_65521_caseExpr != nullptr)) {
										_65521_caseExpr();
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_65225_expr))._field_Model);
								} else {
									_1ad36277b_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_65225_expr))._field_Model);
									if ((_65521_caseExpr != nullptr)) {
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
										_65521_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b233e303:;
							{
								_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1abe42d30_TypeKind> _67125_tk = (*(_65225_expr))._field_Model.cast_ptr<_1abe42d30_TypeKind>(&__jule_any_type84);;
								if ((_1abe46c8a_Trait((*((*_64528_m.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".type_is(", 9));
									_1ad35ed61_boolean((*(*_self_.alloc)._field_oc.alloc)._field_ec, (_1abe45717_Sptr((*_65225_expr.alloc)._field_Kind) != nullptr));
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1abe46c8a_Trait((*(*_64528_m.alloc)._field_Expr.alloc)._field_Kind));
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
									_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ac937802_FindTraitTypeOffset(_1abe46c8a_Trait((*(*_64528_m.alloc)._field_Expr.alloc)._field_Kind), (*_65225_expr.alloc)._field_Kind)));
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _68125_j = _1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, _67125_tk);;
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_68125_j));
								};
							}
						}
						_match_end_1b233e204:;
					};
					if ((((*_64543_c.alloc)._field_Exprs.len() - _65218_i) > 1LL)) {
						_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1b233d621:;
				++it;
				_65218_i++;
				goto _iter_begin_1b233d621;
			}
			_iter_end_1b233d621:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_64528_m))._field_Default == _64543_c) && ((*_64528_m.alloc)._field_Cases.len() != 0LL))) {
		_1ad430bce_indent((*(_self_))._field_oc);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("else ", 5));
	};
	_1ad4307d3_addIndent((*(_self_))._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad376592_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_64543_c));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_64543_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ad430bce_indent((*_self_.alloc)._field_oc);
		_1ad35a389_scope(_self_, (*_64543_c.alloc)._field_Scope);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	};
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad3583cb_matchSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab659789_Match> _71531_m) {
	if ((((*(_71531_m))._field_Cases.len() == 0LL) && ((*_71531_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_71531_m.alloc)._field_Comptime && (((*_71531_m.alloc)._field_Default == nullptr) || ((*((*((*_71531_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((!((*_71531_m.alloc)._field_Comptime)) && (!(_1abe1233d_IsConst((*_71531_m.alloc)._field_Expr.ptr()))))) {
		if ((_1ac952d8e_Copy && _1ad35b126_isCopyOptimizable(&((*_71531_m.alloc)._field_Expr)))) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(*_71531_m.alloc)._field_Expr.alloc)._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" };\n", 4));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
	};
	if (((*_71531_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_71531_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2359a9e:;
			if (it != expr_end) {
				jule::Ptr<_1ab65a2b2_Case> _74325_c = *it;
				{
					if ((_74325_c == nullptr)) {
						goto _iter_next_1b2359a9e;
					};
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1ad430bce_indent((*_self_.alloc)._field_oc);
					_1ad358123_case(_self_, _71531_m, _74325_c);
				}
				_iter_next_1b2359a9e:;
				++it;
				goto _iter_begin_1b2359a9e;
			}
			_iter_end_1b2359a9e:;
		};
	};
	if (((*_71531_m.alloc)._field_Default != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		_1ad358123_case(_self_, _71531_m, (*_71531_m.alloc)._field_Default);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad3762a6_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_71531_m));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(":;", 2));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad358684_fallSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65a9aa_FallSt> _77026_f) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ad376592_caseBegin(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77026_f))._field_DestCase);
}



inline void _1ad35893c_breakSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab657b1c_BreakSt> _77527_b) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_77527_b))._field_It != 0LLU)) {
		static__1ad3758e3_iterEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_77527_b.alloc)._field_It);
	} else {
		static__1ad3762a6_matchEnd(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_77527_b))._field_Mtch);
	};
}



inline void _1ad358be5_setResult(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65ad51_RetSt> _78433_r) {
	if (((*((*((*((*(_78433_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78433_r.alloc)._field_Expr);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		_1ad430bce_indent((*_self_.alloc)._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_78433_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b23649ee:;
			{
				jule::Slice<jule::Ptr<_1abe11936_Data>> _79417_datas = (*((*(_78433_r))._field_Expr.unsafe_cast_ptr<_1abd4e027_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_79417_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b23686c3:;
					if (it != expr_end) {
						jule::I32 _79517_i = it - expr->begin();
						jule::Ptr<_1abe11936_Data> _79520_data = *it;
						{
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_79517_i));
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_79520_data))._field_Model);
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
							_1ad430bce_indent((*_self_.alloc)._field_oc);
						}
						_iter_next_1b23686c3:;
						++it;
						_79517_i++;
						goto _iter_begin_1b23686c3;
					}
					_iter_end_1b23686c3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b236768e:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1ad36c148_model((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_78433_r.alloc)._field_Expr);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1b23672b5:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:808:13"));;
			}
		}
		_match_end_1b2367260:;
	};
}



inline void _1ad358e9d_retSt(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab65ad51_RetSt> _81229_r) {
	if (_1abd56b23_IsVoid((*((*(_81229_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*(*_81229_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_81229_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*(*_81229_r.alloc)._field_Func.alloc)._field_Decl.alloc)._field_Exceptional) {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_81229_r.alloc)._field_Func.alloc)._field_Result);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=", 10));
			_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81229_r.alloc)._field_Expr);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
		} else {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_81229_r.alloc)._field_Expr);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_81229_r))._field_Expr != nullptr)) {
		_1ad358be5_setResult(_self_, _81229_r);
	};
	if ((*((*((*_81229_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ad449ab6_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*(*_81229_r.alloc)._field_Func.alloc)._field_Result));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ad359256_var(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abda8d2e_Var> _84827_v) {
	if ((!((*(_84827_v))._field_Constant))) {
		_1ad437741_var((*(_self_))._field_oc, _84827_v);
	};
}



inline void _1ad35950e_mutSlicing(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03ca40_MutSlicingExprModel> _85434_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*(_85434_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1eb3d059c_Production))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_85434_m.alloc)._field_Token));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85434_m.alloc)._field_Left);
	if (((*_85434_m.alloc)._field_Right != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*_85434_m.alloc)._field_Right);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad3597b7_swap(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03b7db_SwapExprModel> _87128_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_87128_m))._field_Left))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1ad36277b_possibleRefExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*_87128_m.alloc)._field_Right))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad359a70_exceptionalForwarding(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ac03b467_ExceptionalForwardingExprModel> _87945_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1ad36445e_pureFuncCall((*(*_self_.alloc)._field_oc.alloc)._field_ec, &((*(_87945_m))._field_Expr));
}



inline void _1ad359d28_st(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Any _88526_st) {
	if ((_88526_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _88526_st };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b2385646:;
			{
				_1ad35a389_scope(_self_, _88526_st.unsafe_cast_ptr<_1ab655576_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b23858cc:;
			{
				_1ad359256_var(_self_, _88526_st.unsafe_cast_ptr<_1abda8d2e_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b2385943:;
			{
				_1ad36c148_model((*((*(_self_))._field_oc))._field_ec, (*(_88526_st.unsafe_cast_ptr<_1abe11936_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b23861a2:;
			{
				_1ad355708_conditional(_self_, _88526_st.unsafe_cast_ptr<_1ab6561ae_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b2386218:;
			{
				_1ad3559b1_infIter(_self_, _88526_st.unsafe_cast_ptr<_1ab6564ab_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b238627e:;
			{
				_1ad355c69_whileIter(_self_, _88526_st.unsafe_cast_ptr<_1ab656962_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b23862e5:;
			{
				_1ad356022_rangeIter(_self_, _88526_st.unsafe_cast_ptr<_1ab6573ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b238635b:;
			{
				_1ad3562ca_cont(_self_, _88526_st.unsafe_cast_ptr<_1ab657743_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b23863c2:;
			{
				_1ad356583_label(_self_, _88526_st.unsafe_cast_ptr<_1ab657e19_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b2386438:;
			{
				_1ad35683b_gotoSt(_self_, _88526_st.unsafe_cast_ptr<_1ab6582e3_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b238649e:;
			{
				_1ad356ae4_postfix(_self_, _88526_st.unsafe_cast_ptr<_1ab6586bc_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b2386515:;
			{
				_1ad356d9c_assign(_self_, _88526_st.unsafe_cast_ptr<_1ab658b73_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b238657b:;
			{
				_1ad35796e_multiAssign(_self_, _88526_st.unsafe_cast_ptr<_1ab659129_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b23865e2:;
			{
				_1ad3583cb_matchSt(_self_, _88526_st.unsafe_cast_ptr<_1ab659789_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b2386669:;
			{
				_1ad358684_fallSt(_self_, _88526_st.unsafe_cast_ptr<_1ab65a9aa_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b23866e1:;
			{
				_1ad35893c_breakSt(_self_, _88526_st.unsafe_cast_ptr<_1ab657b1c_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b2386768:;
			{
				_1ad358e9d_retSt(_self_, _88526_st.unsafe_cast_ptr<_1ab65ad51_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b23867e0:;
			{
				_1ad369871_pushToSlice((*((*(_self_))._field_oc))._field_ec, _88526_st.unsafe_cast_ptr<_1ac03d59b_PushToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b2386867:;
			{
				_1ad369b29_appendToSlice((*((*(_self_))._field_oc))._field_ec, _88526_st.unsafe_cast_ptr<_1ac03d975_AppendToSliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b23868de:;
			{
				_1ad35950e_mutSlicing(_self_, _88526_st.unsafe_cast_ptr<_1ac03ca40_MutSlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b2386966:;
			{
				_1ad3597b7_swap(_self_, _88526_st.unsafe_cast_ptr<_1ac03b7db_SwapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b23869dd:;
			{
				_1ad359a70_exceptionalForwarding(_self_, _88526_st.unsafe_cast_ptr<_1ac03b467_ExceptionalForwardingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b2386a65:;
			{
				_1ad355197_strRuneIter(_self_, _88526_st.unsafe_cast_ptr<_1ac03dd4e_StrRuneIter>());
			}
		}
		else {
			_case_begin_1b2385459:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b23852c2:;
	};
}



inline void _1ad35a0d1_scopeStmts(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655576_Scope>* _94135_s) {
	{
		auto expr = &((*((*(_94135_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24a6e60:;
		if (it != expr_end) {
			jule::Any _94221_st = *it;
			{
				_1ad430bce_indent((*(_self_))._field_oc);
				_1ad359d28_st(_self_, _94221_st);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b24a6e60:;
			++it;
			goto _iter_begin_1b24a6e60;
		}
		_iter_end_1b24a6e60:;
	};
}



inline void _1ad35a389_scope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1ab655576_Scope> _95029_s) {
	_1ad4307d3_addIndent((*(_self_))._field_oc);
	if ((*(_95029_s))._field_Deferred) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1ad35a0d1_scopeStmts(_self_, &(_95029_s));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if ((*_95029_s.alloc)._field_Deferred) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ad35a642_commonFuncScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _96540_f) {
	if ((!(_1abd56b23_IsVoid((*((*(_96540_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1abe509ec_Tuple> _96717_tup = _1abe472a7_Tup((*((*(_96540_f))))._field_Result.ptr());;
		if ((_96717_tup != nullptr)) {
			_1ad430bce_indent((*(_self_))._field_oc);
			_1ad4493e0_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _96717_tup);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_96717_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b24b01bb:;
				if (it != expr_end) {
					jule::I32 _97222_i = it - expr->begin();
					jule::Ptr<_1abe42d30_TypeKind> _97229_t = *it;
					{
						if (_1ad44b733_shouldInitialized(&(_97229_t))) {
							_1ad430bce_indent((*_self_.alloc)._field_oc);
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_97222_i));
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
							_1ad36c401_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, _97229_t);
							_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1b24b01bb:;
					++it;
					_97222_i++;
					goto _iter_begin_1b24b01bb;
				}
				_iter_end_1b24b01bb:;
			};
		} else if (((*((*(*((*(_96540_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1ad430bce_indent((*(_self_))._field_oc);
			_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_96540_f))))._field_Result);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ad44b733_shouldInitialized(&((*((*(_96540_f))))._field_Result))) {
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1ad36c401_initExpr((*(*_self_.alloc)._field_oc.alloc)._field_ec, (*((*(_96540_f))))._field_Result);
			};
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ad35a0d1_scopeStmts(_self_, &((*((*(_96540_f))))._field_Scope));
	if (((*(*((*(_96540_f))))._field_Decl.alloc)._field_Exceptional && _1abd56b23_IsVoid((*((*(_96540_f))))._field_Decl))) {
		_1ad430bce_indent((*_self_.alloc)._field_oc);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1ad35a9a5_anonFuncScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _100537_m, jule::Str _100558_ident) {
	if (((*((*(_100537_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _10099_closure = _1ac935190_IsClosure(&(_100537_m));;
	if (_10099_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*(*_self_.alloc)._field_oc.alloc)._field_ec.alloc)._field_varPrefixes,jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1abda8d2e_Var>>>::make({jule::__new_closure<jule::Bool,jule::Ptr<_1abda8d2e_Var>>((void*)__jule_anon_1b24bc382, jule::Ptr<__jule_anon_1b24bc382_ctx>::make(__jule_anon_1b24bc382_ctx{._self_=_self_,._100537_m=_100537_m}).as<jule::Uintptr>(), __jule_anon_1b24bc382_ctx_handler)}));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	if (_10099_closure) {
		_1ad430bce_indent((*_self_.alloc)._field_oc);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1ad43032c_write((*_self_.alloc)._field_oc, _100558_ident);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1ad43032c_write((*_self_.alloc)._field_oc, _100558_ident);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1ad35a642_commonFuncScope(_self_, &((*_100537_m.alloc)._field_Func));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
	if (_10099_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1ad35ac5d_funcScope(jule::Ptr<_1ad353d00_scopeCoder> _self_, jule::Ptr<_1abd59681_FnIns> _103733_f) {
	if (((*(_103733_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad35a642_commonFuncScope(_self_, &(_103733_f));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad353d00_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad35e437_exprCoder> static__1ad35e800_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _11424_oc) {
	return jule::new_ptr<_1ad35e437_exprCoder>(_1ad35e437_exprCoder{._field_oc=(*(_11424_oc)), });;
}



inline void _1ad35eaa8_string(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _12027_c) {
	jule::Str _1219_content = _1b9aae64d_ReadStr((*(_12027_c)).ptr());;
	if ((_1219_content.len() == 0LL)) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _1269_len = _1b9a9e143_FmtInt(static_cast<jule::I64>(_1219_content.len()), 10LL);;
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::lit(", 6));
	_1ad36d1e3_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1219_content);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1ad43032c_write((*_self_.alloc)._field_oc, _1269_len);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad35ed61_boolean(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Bool _13527_b) {
	if (_13527_b) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ad36005e_nilLit(jule::Ptr<_1ad35e437_exprCoder> _self_) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ad3603a0_ftoaSpecialCases(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::F64* _14737_x) {
	{
		
		if (_1b9a4db1a_IsNaN((*(_14737_x)))) {
			_case_begin_1b24dbe51:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1b9a4e29c_IsInf((*(_14737_x)), 1LL)) {
			_case_begin_1b24dbeea:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1b9a4e29c_IsInf((*(_14737_x)), -1LL)) {
			_case_begin_1b24dc072:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b24dbdb8:;
			{
				return false;;
			}
		}
		_match_end_1b24dbcb9:;
	};
	return true;;
}



inline void _1ad360658_float32(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _16128_c) {
	jule::F64 _1629_x = _1b9ab0187_AsF64((*(_16128_c)).ptr());;
	if (_1ad3603a0_ftoaSpecialCases(_self_, &(_1629_x))) {
		return;;
	};
	{
		
		if ((_1629_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b24e1186:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_1629_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b24e0251:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b24e01da:;
			{
				_1ad36d589_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1629_x, 32LL);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1b24e00a8:;
	};
}



inline void _1ad360911_float64(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const>* _18028_c) {
	jule::F64 _1819_x = _1b9ab0187_AsF64((*(_18028_c)).ptr());;
	if (_1ad3603a0_ftoaSpecialCases(_self_, &(_1819_x))) {
		return;;
	};
	{
		
		if ((_1819_x == jule::MAX_F64)) {
			_case_begin_1b24e3b17:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1819_x == jule::MIN_F64)) {
			_case_begin_1b24e373d:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b24e36c7:;
			{
				_1ad36d589_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1819_x, 64LL);
			}
		}
		_match_end_1b24e3595:;
	};
}



inline void _1ad360bb9_constant(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1b9aac4c5_Const> _19832_c) {
	{
		
		if (_1b9ab1c49_IsStr(_19832_c.ptr())) {
			_case_begin_1b24e5971:;
			{
				_1ad35eaa8_string(_self_, &(_19832_c));
			}
		}
		else if (_1b9ab19b3_IsBool(_19832_c.ptr())) {
			_case_begin_1b24e59d7:;
			{
				_1ad35ed61_boolean(_self_, _1b9aae3b7_ReadBool(_19832_c));
			}
		}
		else if (_1b9ab1ed0_IsF64(_19832_c.ptr())) {
			_case_begin_1b24e5a4d:;
			{
				{
					
					if ((*_19832_c.alloc)._field_Kind.equal("f32", 3)) {
						_case_begin_1b24e8424:;
						{
							_1ad360658_float32(_self_, &(_19832_c));
						}
					}
					else {
						_case_begin_1b24e808e:;
						{
							_1ad360911_float64(_self_, &(_19832_c));
						}
					}
					_match_end_1b24e7e90:;
				};
			}
		}
		else if (_1b9ab1496_IsI64(_19832_c.ptr())) {
			_case_begin_1b24e5ab4:;
			{
				_1ad36d875_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1b9aadd9a_ReadI64(_19832_c));
			}
		}
		else if (_1b9ab172c_IsU64(_19832_c.ptr())) {
			_case_begin_1b24e5b2a:;
			{
				_1ad36db61_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1b9aae131_ReadU64(_19832_c));
			}
		}
		else if (_1b9ab2266_IsNil(_19832_c.ptr())) {
			_case_begin_1b24e5b91:;
			{
				_1ad36005e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b24e590a:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b24e580b:;
	};
}



inline void _1ad3610d7_divByZeroBinary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd0a38a_Token>* _22236_op, jule::Ptr<_1abd48362_OperandExprModel>* _22253_l, jule::Ptr<_1abd48362_OperandExprModel>* _22280_r) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::", 6));
	{
		auto &_match_expr{ (*((*(_22236_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b24eb5d1:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b24ec071:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("mod(", 4));
			}
		}
		_match_end_1b24ebed8:;
	};
	if ((!(_1eb3d059c_Production))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1ad432670_locInfo((*_self_.alloc)._field_oc, _22236_op);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\",", 2));
	};
	_1ad36277b_possibleRefExpr(_self_, (*((*(_22253_l))))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1ad36277b_possibleRefExpr(_self_, (*((*(_22280_r))))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad361390_unsafeBinary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _24436_m) {
	if ((((*((*(_24436_m))._field_Op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*_24436_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1ac934d4e_IsAny(&((*((*_24436_m.alloc)._field_Left))._field_Kind))) {
			if (((!(_1abe43e0d_IsNil((*((*_24436_m.alloc)._field_Right))._field_Kind.ptr()))) && (!(_1ac934d4e_IsAny(&((*(*_24436_m.alloc)._field_Right.alloc)._field_Kind)))))) {
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				if (((*(*_24436_m.alloc)._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU))) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("!", 1));
				};
				jule::I32 _25421_i = _1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, (*(*_24436_m.alloc)._field_Right.alloc)._field_Kind);;
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_any_type", 15));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_25421_i));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_compare(", 9));
				_1ad36277b_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Left.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1ad36277b_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Right.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			};
		};
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Left.alloc)._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1ad43032c_write((*_self_.alloc)._field_oc, (*(*_24436_m.alloc)._field_Op.alloc)._field_Kind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
	_1ad36277b_possibleRefExpr(_self_, (*(*_24436_m.alloc)._field_Right.alloc)._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad361648_binary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4885c_BinaryExprModel> _27530_m) {
	{
		auto &_match_expr{ (*((*(_27530_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b250d219:;
			{
				if ((_1abe46a04_Struct((*((*(_27530_m))._field_Left))._field_Kind.ptr()) == nullptr)) {
					_1ad3610d7_divByZeroBinary(_self_, &((*_27530_m.alloc)._field_Op), &((*_27530_m.alloc)._field_Left), &((*_27530_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1b250d15e:;
	};
	_1ad361390_unsafeBinary(_self_, _27530_m);
}



inline void _1ad361901_var(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abda8d2e_Var> _28727_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2510491:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1abda8d2e_Var>> _28816_prefix = *it;
			{
				if (_28816_prefix(_28727_m)) {
					return;;
				};
			}
			_iter_next_1b2510491:;
			++it;
			goto _iter_begin_1b2510491;
		}
		_iter_end_1b2510491:;
	};
	if ((*(_28727_m))._field_Binded) {
		jule::Ptr<_1abd1ec62_Directive> _29413_d = _1ac93657b_FindDirective(&((*_28727_m.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_29413_d != nullptr)) {
			_1ad4305d5_writeBytes((*_self_.alloc)._field_oc, _1ad43c56a_concatAllParts((*_29413_d.alloc)._field_Args));
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _28727_m);
}



inline void _1ad361ba9_structureIns(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4445c_StructIns> _30336_m) {
	_1ad442dbc_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _30336_m);
}



inline void _1ad361e62_unary(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd48c36_UnaryExprModel> _30729_m) {
	{
		auto &_match_expr{ (*((*(_30729_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b2514770:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1ad36277b_possibleRefExpr(_self_, (*((*(_30729_m))._field_Expr))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b2514d58:;
			{
				if ((_1eb3d059c_Production || (_1abe45717_Sptr((*((*(_30729_m))._field_Expr))._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b2514c6a;
				};
				_1ad36277b_possibleRefExpr(_self_, (*(*_30729_m.alloc)._field_Expr.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_30729_m.alloc)._field_Op));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1b2514c6a:;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad43032c_write((*_self_.alloc)._field_oc, (*((*(_30729_m))._field_Op))._field_Kind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr(_self_, (*((*_30729_m.alloc)._field_Expr))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
}



inline void _1ad36221a_structureLit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4960a_StructLitExprModel> _33136_m) {
	if ((*((*((*(_33136_m))._field_Strct))._field_Decl))._field_Binded) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1ad442dbc_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_33136_m.alloc)._field_Strct);
	if ((*(*(*_33136_m.alloc)._field_Strct.alloc)._field_Decl.alloc)._field_Binded) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	if (((*_33136_m.alloc)._field_Args.len() > 0LL)) {
		_julec_label_1b252001c:;
		{
			auto expr = &((*(*_33136_m.alloc)._field_Strct.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b25201b5:;
			if (it != expr_end) {
				jule::I32 _34417_i = it - expr->begin();
				jule::Ptr<_1abd438ac_FieldIns> _34420_f = *it;
				{
					{
						auto expr = &((*_33136_m.alloc)._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b252101d:;
						if (it != expr_end) {
							jule::Ptr<_1abd49264_StructArgExprModel> _34529_arg = *it;
							{
								if (((*(_34529_arg))._field_Field == _34420_f)) {
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
									static__1ad375030_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_34529_arg.alloc)._field_Field))._field_Decl));
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
									_1ad36277b_possibleRefExpr(_self_, (*((*_34529_arg.alloc)._field_Expr))._field_Model);
									if ((((*(*_33136_m.alloc)._field_Strct.alloc)._field_Fields.len() - _34417_i) > 1LL)) {
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
									};
									goto _iter_next_1b25201b5;
								};
							}
							_iter_next_1b252101d:;
							++it;
							goto _iter_begin_1b252101d;
						}
						_iter_end_1b252101d:;
					};
				}
				_iter_next_1b25201b5:;
				++it;
				_34417_i++;
				goto _iter_begin_1b25201b5;
			}
			_iter_end_1b25201b5:;
		};
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad3624c3_allocStructure(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49907_AllocStructLitExprModel> _36238_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1ad374c44_structureIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_36238_m))._field_Lit))._field_Strct));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1ad36221a_structureLit(_self_, (*_36238_m.alloc)._field_Lit);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36277b_possibleRefExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _37035_expr) {
	{
		auto &_match_expr{ _37035_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b252d1d4:;
			{
				jule::Ptr<_1abda8d2e_Var> _37313_v = _37035_expr.unsafe_cast_ptr<_1abda8d2e_Var>();;
				if ((*(_37313_v))._field_Reference) {
					_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ad36c148_model(_self_, _37035_expr);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1b252d17e:;
	};
	_1ad36c148_model(_self_, _37035_expr);
}



inline void _1ad362b99_castTraitFromTrait(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49e8a_CastingExprModel>* _38443_m, jule::Ptr<_1abd69a59_Trait> _38469_t1, jule::Ptr<_1abd69a59_Trait> _38485_t2) {
	_1ad36277b_possibleRefExpr(_self_, (*((*((*(_38443_m))))._field_Expr))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1ad4323b7_pushAndWriteMaskMapper((*_self_.alloc)._field_oc, _38469_t1, _38485_t2);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad362e52_casting(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd49e8a_CastingExprModel> _39731_m) {
	{
		
		if (_1ac934d4e_IsAny(&((*(_39731_m))._field_Kind))) {
			_case_begin_1b2532c99:;
			{
				if (_1abe43e0d_IsNil((*_39731_m.alloc)._field_ExprKind.ptr())) {
					_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1abe45eba_TypeEnum((*_39731_m.alloc)._field_ExprKind) != nullptr)) {
					_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _40813_i = _1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, (*_39731_m.alloc)._field_ExprKind);;
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_39731_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b2535c9c:;
						{
							jule::Ptr<_1abe4a909_Prim> _41217_prim = _1abe45481_Prim((*_39731_m.alloc)._field_ExprKind);;
							if (((_41217_prim != nullptr) && _1b9aab859_IsInt((*_41217_prim.alloc)._field_Kind))) {
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
								_1ad440639_prim((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _41217_prim);
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
								_1ad36277b_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1b2536b7c;
							};
							goto _case_begin_1b2536bd2;
						}
					}
					else {
						_case_begin_1b2536bd2:;
						{
							_1ad36277b_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1b2536b7c:;
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_40813_i));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ac934d4e_IsAny(&((*(_39731_m))._field_ExprKind))) {
			_case_begin_1b2532d43:;
			{
				_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1abe45717_Sptr((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1abe45717_Sptr((*_39731_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1eb3d059c_Production))) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_39731_m.alloc)._field_Token));
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, (*_39731_m.alloc)._field_Kind)));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1abe4599d_Ptr((*(_39731_m))._field_ExprKind.ptr()) != nullptr) || (_1abe4599d_Ptr((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2532da9:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")(", 2));
				_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1abe46c8a_Trait((*(_39731_m))._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b2532e20:;
			{
				if ((_1abe46c8a_Trait((*_39731_m.alloc)._field_Kind.ptr()) != nullptr)) {
					_1ad362b99_castTraitFromTrait(_self_, &(_39731_m), _1abe46c8a_Trait((*_39731_m.alloc)._field_Kind), _1abe46c8a_Trait((*_39731_m.alloc)._field_ExprKind));
					return;;
				};
				_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1abe45717_Sptr((*_39731_m.alloc)._field_Kind) != nullptr)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1abe45717_Sptr((*_39731_m.alloc)._field_Kind)))._field_Elem);
				} else {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("cast<", 5));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1eb3d059c_Production))) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_39731_m.alloc)._field_Token));
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1abe46c8a_Trait((*_39731_m.alloc)._field_ExprKind));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ac937802_FindTraitTypeOffset(_1abe46c8a_Trait((*_39731_m.alloc)._field_ExprKind), (*_39731_m.alloc)._field_Kind)));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1abe46c8a_Trait((*(_39731_m))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2532e86:;
			{
				_1ad444b16_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
				_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1abe46c8a_Trait((*_39731_m.alloc)._field_Kind));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_1ac937802_FindTraitTypeOffset(_1abe46c8a_Trait((*_39731_m.alloc)._field_Kind), (*_39731_m.alloc)._field_ExprKind)));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b2532b23:;
	};
	jule::Ptr<_1abe4a909_Prim> _4949_prim = _1abe45481_Prim((*(_39731_m))._field_Kind.ptr());;
	jule::Ptr<_1abe4a909_Prim> _4959_eprim = _1abe45481_Prim((*_39731_m.alloc)._field_ExprKind.ptr());;
	if ((((_4959_eprim != nullptr) && (_4949_prim != nullptr)) && _1abe4dd91_IsStr(_4949_prim))) {
		if (_1abe4c301_IsU8(_4959_eprim)) {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_byte(", 21));
		} else {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::from_rune(", 21));
		};
		_1ad36277b_possibleRefExpr(_self_, (*((*_39731_m.alloc)._field_Expr))._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("static_cast<", 12));
	_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_39731_m.alloc)._field_Kind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	_1ad36277b_possibleRefExpr(_self_, (*(*_39731_m.alloc)._field_Expr.alloc)._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36320a_models(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Slice<jule::Any> _51330_args) {
	if ((_51330_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_51330_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2560e92:;
		if (it != expr_end) {
			jule::I32 _51714_i = it - expr->begin();
			jule::Any _51721_a = *it;
			{
				_1ad36277b_possibleRefExpr(_self_, _51721_a);
				if (((_51330_args.len() - _51714_i) > 1LL)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
				};
			}
			_iter_next_1b2560e92:;
			++it;
			_51714_i++;
			goto _iter_begin_1b2560e92;
		}
		_iter_end_1b2560e92:;
	};
}



inline void _1ad3634b3_args(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _52529_m) {
	jule::I32 _52613_j = 0LL;;
	if (((((*((*((*(_52529_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_52529_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_52529_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1abd552e7_IsSelf((*((*(*((*(_52529_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_52613_j)++;
	};
	{
		auto expr = &((*((*(_52529_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2564160:;
		if (it != expr_end) {
			jule::I32 _53113_i = it - expr->begin();
			jule::Any _53116_arg = *it;
			{
				jule::Ptr<_1abd58608_ParamIns> _53213_p = (*(*((*(_52529_m))))._field_Func.alloc)._field_Params[_52613_j];;
				if ((((*(_53213_p))._field_Decl != nullptr) && (*(*_53213_p.alloc)._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _53116_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b2566e54:;
							{
								jule::Ptr<_1abda8d2e_Var> _53621_v = _53116_arg.unsafe_cast_ptr<_1abda8d2e_Var>();;
								if ((*(_53621_v))._field_Reference) {
									_1ad36c148_model(_self_, _53116_arg);
									goto _julec_label_1b256689e;
								};
							}
						}
						_match_end_1b2566dee:;
					};
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1ad36c148_model(_self_, _53116_arg);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1b256689e;
				};
				_1ad36277b_possibleRefExpr(_self_, _53116_arg);
				_julec_label_1b256689e:;
				if ((((*((*(_52529_m))))._field_Args.len() - _53113_i) > 1LL)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_52613_j)++;
			}
			_iter_next_1b2564160:;
			++it;
			_53113_i++;
			goto _iter_begin_1b2564160;
		}
		_iter_end_1b2564160:;
	};
}



inline void _1ad36376b_modelForCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _55636_expr) {
	{
		auto &_match_expr{ _55636_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b256bc8e:;
			{
				_1ad366ce1_funcIns(_self_, _55636_expr.unsafe_cast_ptr<_1abd59681_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b256bae6:;
			{
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _56217_ssie = _55636_expr.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>();;
				if (((*(_56217_ssie))._field_Method != nullptr)) {
					_1ad366ce1_funcIns(_self_, (*_56217_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1b256bc28:;
	};
	_1ad36277b_possibleRefExpr(_self_, _55636_expr);
}



inline void _1ad363a24_pushCallInf(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _57132_m) {
	if ((_1eb3d059c_Production || (!((*((*((*(_57132_m))))._field_Func))._field_Anon)))) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_57132_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_57132_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b2570798:;
				{
					if ((*((*((*((*((*((*(_57132_m))))._field_Expr.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1b2570743:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".call", 5));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(\"", 2));
	_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*((*(_57132_m))))._field_Token));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_57132_m))))._field_Args.len() != 0LL)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ad363d65_isWrapped(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _59434_m) {
	if ((((!(_1abd5ab16_IsBuiltin((*((*(_59434_m))))._field_Func.ptr()))) && ((*((*(*((*(_59434_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1abd552e7_IsSelf((*(*(*((*(_59434_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_59434_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b2575506:;
				{
					jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _59821_ssie = (*((*(_59434_m))))._field_Expr.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>();;
					{
						
						if (_1abd5557d_IsRef((*(*(*((*(_59434_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()) || (_1abe45717_Sptr((*((*(_59821_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b25771d9:;
							{
								goto _match_end_1b257644c;
							}
						}
						else {
							_case_begin_1b25764b3:;
							{
								if ((_1abe46a04_Struct((*((*(_59821_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									if ((!((*(*_59821_ssie.alloc)._field_Expr.alloc)._field_Lvalue))) {
										_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1ad36c148_model(_self_, (*(*_59821_ssie.alloc)._field_Expr.alloc)._field_Model);
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b257644c:;
					};
				}
			}
			_match_end_1b25754a1:;
		};
	};
	return false;;
}



inline jule::Bool _1ad3641a6_writeReceiver(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _61837_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _61837_m };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b257bc9e:;
			{
				_1ad36277b_possibleRefExpr(_self_, (*((*(_61837_m.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b257be9c:;
			{
				_1ad36277b_possibleRefExpr(_self_, (*((*((*(_61837_m.unsafe_cast_ptr<_1ac03e14b_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b257be36:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:627:13"));;
			}
		}
		_match_end_1b257bdd1:;
	};
}



inline void _1ad36445e_pureFuncCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _63137_m) {
	jule::Bool _6329_wrapped = _1ad363d65_isWrapped(_self_, _63137_m);;
	_1ad36376b_modelForCall(_self_, (*((*(_63137_m))))._field_Expr);
	if ((!(_1abd5ab16_IsBuiltin((*((*(_63137_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_63137_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1ac936944_HasDirective(&((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("cdef", 4))))) {
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b25810a0:;
					if (it != expr_end) {
						jule::I32 _63826_i = it - expr->begin();
						jule::Ptr<_1abe41449_InsGeneric> _63833_g = *it;
						{
							_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_63833_g))._field_Kind);
							if ((((*(*((*(_63137_m))))._field_Func.alloc)._field_Generics.len() - _63826_i) > 1LL)) {
								_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1b25810a0:;
						++it;
						_63826_i++;
						goto _iter_begin_1b25810a0;
					}
					_iter_end_1b25810a0:;
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ad363a24_pushCallInf(_self_, _63137_m);
	if (((*(*((*(_63137_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_63137_m))))._field_Func.alloc)._field_Anon)))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1abd5ab16_IsBuiltin((*((*(_63137_m))))._field_Func))) && ((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params.len() > 0LL)) && _1abd552e7_IsSelf((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_63137_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1b2587caa:;
				{
					jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _66221_ssie = (*((*(_63137_m))))._field_Expr.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>();;
					{
						
						if (_1abd5557d_IsRef((*(*(*((*(_63137_m))))._field_Func.alloc)._field_Decl.alloc)._field_Params[0LL].ptr())) {
							_case_begin_1b258c683:;
							{
								_1ad3641a6_writeReceiver(_self_, (*((*(_66221_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1abe45717_Sptr((*((*(_66221_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b2588d77:;
							{
								jule::Bool _66921_safe = _1ad3641a6_writeReceiver(_self_, (*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model);;
								if (_66921_safe) {
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1eb3d059c_Production))) {
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
										_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*((*(_63137_m))))._field_Token));
										_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
									};
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1b2588cde:;
							{
								if ((_1abe46a04_Struct((*((*(_66221_ssie))._field_Expr))._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_66221_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b25895d6:;
											{
												jule::Ptr<_1abda8d2e_Var> _68329_v = (*((*(_66221_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
												if ((*(_68329_v))._field_Reference) {
													goto _match_end_1b2589aae;
												};
												goto _case_begin_1b2589b14;
											}
										}
										else {
											_case_begin_1b2589b14:;
											{
												_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1b2589aae:;
									};
								};
								if (_6329_wrapped) {
									_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1abe4599d_Ptr((*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
									_1ad36c148_model(_self_, (*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model);
								} else {
									_1ad36277b_possibleRefExpr(_self_, (*((*((*(*_66221_ssie.alloc)._field_Expr.alloc)._field_Model.cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1b2588c78:;
					};
					if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1b2587969:;
				{
					_1ad36277b_possibleRefExpr(_self_, (*((*((*(_63137_m))))._field_Expr.unsafe_cast_ptr<_1abd4cb19_TraitSubIdentExprModel>()))._field_Expr);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_63137_m))))._field_Args.len() > 0LL)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1b2587c44:;
		};
	};
	_1ad3634b3_args(_self_, _63137_m);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_6329_wrapped) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ad364717_coFuncCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel>* _72135_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_209e0d4d9_StrBuilder _72413_head = static__209e0d918_New(32LL);;
	_209e0de79_WriteStr(&_72413_head, jule::Str::lit("std::thread([", 13));
	if (((*((*((*(_72135_m))))._field_Func))._field_Owner != nullptr)) {
		_209e0de79_WriteStr(&_72413_head, jule::Str::lit("_self_", 6));
		if (((*((*(_72135_m))))._field_Args.len() > 0LL)) {
			_209e0de79_WriteStr(&_72413_head, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_72135_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b259bab0:;
		if (it != expr_end) {
			jule::I32 _73213_i = it - expr->begin();
			jule::Any _73216_arg = *it;
			{
				if ((_73213_i > 0LL)) {
					_209e0de79_WriteStr(&_72413_head, jule::Str::lit(", ", 2));
				};
				{
					auto &_match_expr{ _73216_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b259d100:;
						{
							jule::Ptr<_1abda8d2e_Var> _73821_v = _73216_arg.unsafe_cast_ptr<_1abda8d2e_Var>();;
							static__1ad37531b_var(&(_72413_head), _73821_v);
							goto _iter_next_1b259bab0;
						}
					}
					_match_end_1b259c86e:;
				};
				jule::Str _74213_name = (jule::Str::lit("_co_arg_", 8) + _1b9a9e40c_Itoa(_73213_i));;
				_209e0de79_WriteStr(&_72413_head, _74213_name);
				_1ad430bce_indent((*_self_.alloc)._field_oc);
				_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(*((*(_72135_m))))._field_Func.alloc)._field_Params[_73213_i]))._field_Kind);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				if ((*((*((*(*((*(_72135_m))))._field_Func.alloc)._field_Params[_73213_i]))._field_Decl))._field_Reference) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, _74213_name);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
				_1ad36277b_possibleRefExpr(_self_, _73216_arg);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
				jule::Any _75413_argS = jule::Any(_74213_name, &__jule_any_type4);;
				(*((*(_72135_m))))._field_Args[_73213_i]=(*(((jule::Any*)((&(_75413_argS))))));
			}
			_iter_next_1b259bab0:;
			++it;
			_73213_i++;
			goto _iter_begin_1b259bab0;
		}
		_iter_end_1b259bab0:;
	};
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_209e0dbc1_Write(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _209e10222_Buf(&_72413_head));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("](void) mutable -> void {\n", 26));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad36445e_pureFuncCall(_self_, _72135_m);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}).detach();\n", 13));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad364a7a_writeUseExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _77237_f, jule::Ptr<_1abe11936_Data> _77252_d) {
	if ((_1abe472a7_Tup((*(_77252_d))._field_Kind.ptr()) == nullptr)) {
		_1ad36277b_possibleRefExpr(_self_, (*_77252_d.alloc)._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1abd4e027_TupleExprModel> _77813_tup = (*_77252_d.alloc)._field_Model.cast_ptr<_1abd4e027_TupleExprModel>(&__jule_any_type81);;
	_1ad4493e0_tup((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _1abe472a7_Tup((*((*(_77237_f))))._field_Result.ptr()));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_77813_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b25ab5e7:;
		if (it != expr_end) {
			jule::I32 _78113_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _78116_data = *it;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_78113_i));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
				_1ad36277b_possibleRefExpr(_self_, (*(_78116_data))._field_Model);
				if ((((*(_77813_tup))._field_Datas.len() - _78113_i) > 1LL)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b25ab5e7:;
			++it;
			_78113_i++;
			goto _iter_begin_1b25ab5e7;
		}
		_iter_end_1b25ab5e7:;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("};", 2));
}



inline void _1ad364d33_funcCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4a83c_FnCallExprModel> _79332_m) {
	if ((*(_79332_m))._field_IsCo) {
		_1ad364717_coFuncCall(_self_, &(_79332_m));
		return;;
	};
	if (((_1abd5ab16_IsBuiltin((*_79332_m.alloc)._field_Func.ptr()) || (!((*((*(*_79332_m.alloc)._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_79332_m.alloc)._field_Except != nullptr) && ((*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1ad36445e_pureFuncCall(_self_, &(_79332_m));
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("({\n", 3));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto except = ", 14));
	_1ad36445e_pureFuncCall(_self_, &(_79332_m));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if (((*_79332_m.alloc)._field_Except != nullptr)) {
		if ((((*(*_79332_m.alloc)._field_Func.alloc)._field_Result == nullptr) || (!((*_79332_m.alloc)._field_Assigned)))) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ad35a389_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79332_m.alloc)._field_Except);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _82117_forwarded = _1ac934777_IsForwarded(&((*_79332_m.alloc)._field_Except));;
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_82117_forwarded) {
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _82621_stmt = (*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts[((*(*_79332_m.alloc)._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _82621_stmt };
				
				if (_match_expr.type == &__jule_any_type23) {
					_case_begin_1b25ba1d8:;
					{
						((*((*(_79332_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_79332_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{\n", 2));
						_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
						_1ad35a0d1_scopeStmts((*(*_self_.alloc)._field_oc.alloc)._field_sc, &((*_79332_m.alloc)._field_Except));
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1ad430bce_indent((*_self_.alloc)._field_oc);
						_1ad364a7a_writeUseExpr(_self_, &((*_79332_m.alloc)._field_Func), _82621_stmt.unsafe_cast_ptr<_1abe11936_Data>());
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
						_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
						_1ad430bce_indent((*_self_.alloc)._field_oc);
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1b25bb6e5:;
					{
						_1ad35a389_scope((*(*_self_.alloc)._field_oc.alloc)._field_sc, (*_79332_m.alloc)._field_Except);
					}
				}
				_match_end_1b25bb690:;
			};
			if (_82117_forwarded) {
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" ", 1));
				_1ad36c401_initExpr(_self_, (*(*_79332_m.alloc)._field_Func.alloc)._field_Result);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";}", 2));
			};
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_79332_m.alloc)._field_Token));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1abd56b23_IsVoid((*(*_79332_m.alloc)._field_Func.alloc)._field_Decl)))) {
			_1ad430bce_indent((*_self_.alloc)._field_oc);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	};
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad3650db_slice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4ac16_SliceExprModel> _86629_m) {
	if (((*(_86629_m))._field_Elems.len() == 0LL)) {
		_1ad442020_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86629_m.alloc)._field_ElemKind);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ad442020_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_86629_m.alloc)._field_ElemKind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::make({", 8));
	_1ad36320a_models(_self_, (*_86629_m.alloc)._field_Elems);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad365394_indexing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4b1bc_IndexingExprModel> _87832_m) {
	{
		auto &_match_expr{ (*((*(_87832_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b25ccd88:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1eb3d059c_Production))) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
					_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*(_87832_m))._field_Token));
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _88913_s = _1b9aae64d_ReadStr((*((*(_87832_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1b9aac4c5_Const>().ptr());;
				_1ad36d1e3_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _88913_s);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("), ", 3));
				_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_88913_s.len()));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				_1ad36277b_possibleRefExpr(_self_, (*((*_87832_m.alloc)._field_Index))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1b25ccd33:;
	};
	_1ad36277b_possibleRefExpr(_self_, (*((*_87832_m.alloc)._field_Expr))._field_Model);
	{
		
		if (_1eb3d059c_Production || (_1abe4599d_Ptr((*(*_87832_m.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1abe47021_Map((*(*_87832_m.alloc)._field_Expr.alloc)._field_Kind) != nullptr) || _1ac934a85_IsExprComesFromBind(&((*_87832_m.alloc)._field_Expr))) {
			_case_begin_1b25d6b1c:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1ad36277b_possibleRefExpr(_self_, (*(*_87832_m.alloc)._field_Index.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b25cce32:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".at(\"", 5));
				_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_87832_m.alloc)._field_Token));
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
				_1ad36277b_possibleRefExpr(_self_, (*(*_87832_m.alloc)._field_Index.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b25d4510:;
	};
}



inline void _1ad36564c_unsafeIndexing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d1c2_UnsafeIndexingExprModel> _91838_m) {
	_1ad36277b_possibleRefExpr(_self_, (*((*((*(_91838_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1eb3d059c_Production || (_1abe4599d_Ptr((*(*(*_91838_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind.ptr()) != nullptr) || (_1abe47021_Map((*(*(*_91838_m.alloc)._field_Node.alloc)._field_Expr.alloc)._field_Kind) != nullptr)) {
			_case_begin_1b25da956:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1ad36277b_possibleRefExpr(_self_, (*((*(*_91838_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1b25d99ee:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1ad36277b_possibleRefExpr(_self_, (*((*(*_91838_m.alloc)._field_Node.alloc)._field_Index))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1b25da59e:;
	};
}



inline void _1ad365905_anonFunc(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel> _93532_m) {
	jule::Bool _9369_closure = _1ac935190_IsClosure(&(_93532_m));;
	jule::Str _9379_ident = _1ad4316a2_pushAnonFn((*(_self_))._field_oc, &(_93532_m));;
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1ad444440_anonFunc((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_93532_m))._field_Func);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">((void*)", 9));
	_1ad43032c_write((*_self_.alloc)._field_oc, _9379_ident);
	if (_9369_closure) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1ad43032c_write((*_self_.alloc)._field_oc, _9379_ident);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx", 4));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">::make(", 8));
		_1ad43032c_write((*_self_.alloc)._field_oc, _9379_ident);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_93532_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b25e5257:;
			if (it != expr_end) {
				jule::I32 _94918_i = it - expr->begin();
				jule::Ptr<_1abda8d2e_Var> _94925_v = *it;
				{
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
					static__1ad37531b_var(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _94925_v);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1ad361901_var(_self_, _94925_v);
					if ((((*_93532_m.alloc)._field_Captured.len() - _94918_i) > 1LL)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b25e5257:;
				++it;
				_94918_i++;
				goto _iter_begin_1b25e5257;
			}
			_iter_end_1b25e5257:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1ad43032c_write((*_self_.alloc)._field_oc, _9379_ident);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1ad365bad_mapExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4c003_MapExprModel> _96631_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Map<", 10));
	_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_96631_m))._field_KeyKind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_96631_m.alloc)._field_ValKind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">({", 3));
	if (((*_96631_m.alloc)._field_Entries.len() > 0LL)) {
		{
			auto expr = &((*_96631_m.alloc)._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b25ed628:;
			if (it != expr_end) {
				jule::I32 _97318_i = it - expr->begin();
				jule::Ptr<_1abd4ba4c_KeyValPairExprModel> _97325_pair = *it;
				{
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
					_1ad36277b_possibleRefExpr(_self_, (*(_97325_pair))._field_Key);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					_1ad36277b_possibleRefExpr(_self_, (*_97325_pair.alloc)._field_Val);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
					if ((((*_96631_m.alloc)._field_Entries.len() - _97318_i) > 1LL)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1b25ed628:;
				++it;
				_97318_i++;
				goto _iter_begin_1b25ed628;
			}
			_iter_end_1b25ed628:;
		};
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
}



inline void _1ad365e66_slicing(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4c586_SlicingExprModel> _98731_m) {
	_1ad36277b_possibleRefExpr(_self_, (*(_98731_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1eb3d059c_Production))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_98731_m.alloc)._field_Token));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ad36277b_possibleRefExpr(_self_, (*_98731_m.alloc)._field_Left);
	if (((*_98731_m.alloc)._field_Right != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1ad36277b_possibleRefExpr(_self_, (*_98731_m.alloc)._field_Right);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36621e_traitSub(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4cb19_TraitSubIdentExprModel> _100332_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1ad374381_traitDecl(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_100332_m))._field_Trt);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("MptrData", 8));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("*)", 2));
	_1ad36277b_possibleRefExpr(_self_, (*_100332_m.alloc)._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1eb3d059c_Production))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
		_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_100332_m.alloc)._field_Token));
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("))->", 4));
	static__1ad373ca9_func(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*_100332_m.alloc)._field_Method));
}



inline void _1ad3664c7_structureSub(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _101936_m) {
	_1ad36277b_possibleRefExpr(_self_, (*((*(_101936_m))._field_Expr))._field_Model);
	if (((*_101936_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1ad375030_field(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*_101936_m.alloc)._field_Field))._field_Decl));
}



inline void _1ad366780_array(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4dc2a_ArrayExprModel> _102829_m) {
	_1ad443230_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_102829_m))._field_Kind);
	if (((*_102829_m.alloc)._field_Elems.len() == 0LL)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_102829_m.alloc)._field_Elems.len() == 2LL) && ((*_102829_m.alloc)._field_Elems[1LL] == nullptr))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1ad36277b_possibleRefExpr(_self_, (*_102829_m.alloc)._field_Elems[0LL]);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("({", 2));
	_1ad36320a_models(_self_, (*_102829_m.alloc)._field_Elems);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("})", 2));
	return;;
}



inline void _1ad366a38_funcInsCommon(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns> _105137_m) {
	_1ad4447a3_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _105137_m);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ad366ce1_funcIns(_self_, _105137_m);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad366ce1_funcIns(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd59681_FnIns> _105831_m) {
	if ((((*(_105831_m))._field_Decl != nullptr) && (*(*_105831_m.alloc)._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1abd1ec62_Directive> _106013_d = _1ac93657b_FindDirective(&((*(*_105831_m.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
		if ((_106013_d != nullptr)) {
			_1ad4305d5_writeBytes((*(_self_))._field_oc, _1ad43c56a_concatAllParts((*_106013_d.alloc)._field_Args));
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ad374095_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_105831_m));
}



inline void _1ad367099_tuple(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e027_TupleExprModel> _106929_m) {
	{
		auto expr = &((*_106929_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2619a95:;
		if (it != expr_end) {
			jule::I32 _107014_i = it - expr->begin();
			jule::Ptr<_1abe11936_Data> _107021_d = *it;
			{
				_1ad36277b_possibleRefExpr(_self_, (*(_107021_d))._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_106929_m))._field_Datas.len() - _107014_i) > 1LL)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
					_1ad430bce_indent((*_self_.alloc)._field_oc);
				};
			}
			_iter_next_1b2619a95:;
			++it;
			_107014_i++;
			goto _iter_begin_1b2619a95;
		}
		_iter_end_1b2619a95:;
	};
}



inline void _1ad367352_newCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4eba4_BuiltinNewCallExprModel> _108031_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_108031_m))._field_Kind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(", 2));
	if (((*_108031_m.alloc)._field_Init != nullptr)) {
		_1ad36277b_possibleRefExpr(_self_, (*_108031_m.alloc)._field_Init);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36760a_outCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e401_BuiltinOutCallExprModel> _109031_m) {
	if (((*(_109031_m))._field_Debug && _1eb3d059c_Production)) {
		return;;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::out(", 10));
	_1ad36277b_possibleRefExpr(_self_, (*_109031_m.alloc)._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad3678b3_outlnCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4e7ca_BuiltinOutlnCallExprModel> _109933_m) {
	if (((*(_109933_m))._field_Debug && _1eb3d059c_Production)) {
		return;;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::outln(", 12));
	_1ad36277b_possibleRefExpr(_self_, (*_109933_m.alloc)._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad367b6b_panicCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd5007d_BuiltinPanicCallExprModel> _110833_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::panic(", 12));
	_1ad36277b_possibleRefExpr(_self_, (*(_110833_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_110833_m.alloc)._field_Token));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad367e24_assertCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _111634_m) {
	if (_1eb3d059c_Production) {
		return;;
	};
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("if (!(", 6));
	_1ad36277b_possibleRefExpr(_self_, (*(_111634_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")) jule::panic(jule::Str(", 25));
	_1ad36d1e3_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*_111634_m.alloc)._field_Log);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") + jule::Str(\"\\nlocation: ", 27));
	_1ad432670_locInfo((*_self_.alloc)._field_oc, &((*_111634_m.alloc)._field_Token));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ad3681cc_errorCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd5213a_BuiltinErrorCallExprModel> _112933_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1abd56b23_IsVoid((*((*(_112933_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_112933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b262b007:;
				{
					jule::Ptr<_1abda8d2e_Var> _113417_v = (*((*(_112933_m))._field_Err))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
					if ((*(_113417_v))._field_Ident.equal("error", 5)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1b262aea2:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ad449ab6_codeMut1((*((*(*_self_.alloc)._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &((*((*(_112933_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_112933_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b263046d:;
				{
					jule::Ptr<_1abda8d2e_Var> _114617_v = (*((*(_112933_m))._field_Err))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>();;
					if ((*(_114617_v))._field_Ident.equal("error", 5)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1b2630418:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1ad36277b_possibleRefExpr(_self_, (*((*(_112933_m))._field_Err))._field_Model);
	jule::I32 _11559_i = _1ad4319e3_pushAnyType((*_self_.alloc)._field_oc, (*(*_112933_m.alloc)._field_Err.alloc)._field_Kind);;
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_11559_i));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")}", 2));
}



inline void _1ad368485_copyCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd51c61_BuiltinCopyCallExprModel> _116132_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1ad36277b_possibleRefExpr(_self_, (*((*(_116132_m))._field_Dest))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1ad36277b_possibleRefExpr(_self_, (*((*_116132_m.alloc)._field_Src))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36873d_lenCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd511b1_BuiltinLenCallExprModel> _116931_m) {
	_1ad36277b_possibleRefExpr(_self_, (*((*(_116931_m))._field_Expr))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ad3689e6_capCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd514ad_BuiltinCapCallExprModel> _117431_m) {
	_1ad36277b_possibleRefExpr(_self_, (*((*(_117431_m))._field_Expr))._field_Model);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ad368c9e_deleteCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _117934_m) {
	_1ad36277b_possibleRefExpr(_self_, (*((*(_117934_m))._field_Dest))._field_Model);
	if (((*_117934_m.alloc)._field_Key != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".del(", 5));
		_1ad36277b_possibleRefExpr(_self_, (*(*_117934_m.alloc)._field_Key.alloc)._field_Model);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".clear()", 8));
	};
}



inline void _1ad369057_makeCallSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel>* _119038_m) {
	jule::Ptr<_1abe4ee08_Slc> _119113_slice = _1abe464d7_Slc((*((*(_119038_m))))._field_Kind.ptr());;
	_1ad444b16_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_119038_m))))._field_Kind);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad36277b_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Len);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_119038_m))))._field_Cap != nullptr)) {
		_1ad36277b_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Cap);
	} else {
		_1ad36277b_possibleRefExpr(_self_, (*((*(_119038_m))))._field_Len);
	};
	if (_1ad44b733_shouldInitialized(&((*(_119113_slice))._field_Elem))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1ad36c401_initExpr(_self_, (*_119113_slice.alloc)._field_Elem);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad369310_makeCallStr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel>* _120836_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("::alloc(", 8));
	_1ad36277b_possibleRefExpr(_self_, (*((*(_120836_m))))._field_Len);
	if (((*((*(_120836_m))))._field_Cap != nullptr)) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
		_1ad36277b_possibleRefExpr(_self_, (*((*(_120836_m))))._field_Cap);
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad3695b8_makeCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _121932_m) {
	if ((_1abe464d7_Slc((*(_121932_m))._field_Kind.ptr()) != nullptr)) {
		_1ad369057_makeCallSlice(_self_, &(_121932_m));
		return;;
	};
	_1ad369310_makeCallStr(_self_, &(_121932_m));
}



inline void _1ad369871_pushToSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d59b_PushToSliceExprModel> _122735_m) {
	;
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ad442020_asSlice((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_122735_m))._field_Elems))._field_ElemKind);
	jule::Bool _123513_ptr = false;;
	{
		auto &_match_expr{ (*(_122735_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b2647a18:;
			{
				jule::Ptr<_1abd48c36_UnaryExprModel> _123917_u = (*(_122735_m))._field_Dest.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>();;
				if ((_1abe4599d_Ptr((*((*(_123917_u))._field_Expr))._field_Kind.ptr()) != nullptr)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ad36277b_possibleRefExpr(_self_, (*(*_123917_u.alloc)._field_Expr.alloc)._field_Model);
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
					_123513_ptr=true;
					goto _match_end_1b2649762;
				};
				goto _case_begin_1b26497b7;
			}
		}
		else {
			_case_begin_1b26497b7:;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ad36277b_possibleRefExpr(_self_, (*_122735_m.alloc)._field_Dest);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1b2649762:;
	};
	if (((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_123513_ptr) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ad36277b_possibleRefExpr(_self_, (*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems[0LL]);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_123513_ptr) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems.len()));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*_122735_m.alloc)._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b265122a:;
		if (it != expr_end) {
			jule::Any _127321_e = *it;
			{
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_123513_ptr) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ad36277b_possibleRefExpr(_self_, _127321_e);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1b265122a:;
			++it;
			goto _iter_begin_1b265122a;
		}
		_iter_end_1b265122a:;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
}



inline void _1ad369b29_appendToSlice(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03d975_AppendToSliceExprModel> _128737_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr(_self_, (*(_128737_m))._field_Dest);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(").append(", 9));
	_1ad36277b_possibleRefExpr(_self_, (*_128737_m.alloc)._field_Slice);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(");", 2));
}



inline void _1ad369dd2_appendCall(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd50db4_BuiltinAppendCallExprModel> _129534_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ad36277b_possibleRefExpr(_self_, (*(_129534_m))._field_Dest);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(",", 1));
	_1ad36277b_possibleRefExpr(_self_, (*_129534_m.alloc)._field_Elements);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36a18a_sizeof(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd527de_SizeofExprModel> _130330_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ad36277b_possibleRefExpr(_self_, (*(_130330_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36a443_alignof(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd529cb_AlignofExprModel> _130931_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ad36277b_possibleRefExpr(_self_, (*(_130931_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36a6eb_runeLit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd52c73_RuneExprModel> _131527_m) {
	if (((*(_131527_m))._field_Code <= 127LL)) {
		_209e0e232_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
		jule::Str _131817_b = _1ad36cac7_sbtoa(static_cast<jule::U8>((*_131527_m.alloc)._field_Code));;
		if (_131817_b.equal("'", 1)) {
			_209e0e232_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\\');
		};
		_209e0de79_WriteStr(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _131817_b);
		_209e0e232_WriteByte(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, '\'');
		return;;
	};
	_1ad36d875_itoa(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_131527_m.alloc)._field_Code));
}



inline void _1ad36a9a4_structureStatic(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd4d851_StructStaticIdentExprModel> _132939_m) {
	static__1ad374095_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_132939_m))._field_Method));
}



inline void _1ad36ac5c_integratedToStr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53070_IntegratedToStrExprModel> _133339_m) {
	_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("jule::to_str(", 13));
	_1ad36277b_possibleRefExpr(_self_, (*(_133339_m))._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
}



inline void _1ad36b015_backendEmit(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53449_BackendEmitExprModel> _133935_m) {
	if (((*(_133935_m))._field_Exprs.len() == 0LL)) {
		_1ad43032c_write((*(_self_))._field_oc, (*_133935_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _13449_n = _209e0ec05_Len(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _134513_args = jule::Slice<jule::Any>::alloc((*_133935_m.alloc)._field_Exprs.len(), (*_133935_m.alloc)._field_Exprs.len());;
	{
		auto expr = &((*_133935_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2664ace:;
		if (it != expr_end) {
			jule::I32 _134614_i = it - expr->begin();
			jule::Any _134621_expr = *it;
			{
				_1ad36277b_possibleRefExpr(_self_, _134621_expr);
				jule::Slice<jule::U8> _134817_buf = _209e10222_Buf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf);;
				_134513_args[_134614_i]=jule::Any(static_cast<jule::Str>(_134817_buf.slice(_13449_n)), &__jule_any_type4);
				{
					_209e104ca_SetBuf(&(*(*_self_.alloc)._field_oc.alloc)._field_Buf, _134817_buf.slice(0LL, _13449_n));
				};
			}
			_iter_next_1b2664ace:;
			++it;
			_134614_i++;
			goto _iter_begin_1b2664ace;
		}
		_iter_end_1b2664ace:;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, _1ac028d5b_Format((*_133935_m.alloc)._field_Code, _134513_args));
}



inline void _1ad36b2bd_free(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abd53746_FreeExprModel> _135528_m) {
	_1ad36277b_possibleRefExpr(_self_, (*(_135528_m))._field_Expr);
	if (_1eb3cee92_RC) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ad36b576_strComp(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03c4ac_StrCompExprModel> _136431_m) {
	if ((*(_136431_m))._field_NotEq) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _13689_s = _1b9aae64d_ReadStr((*_136431_m.alloc)._field_Right.ptr());;
	_1ad36277b_possibleRefExpr(_self_, (*_136431_m.alloc)._field_Left);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1ad36d1e3_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _13689_s);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
	_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_13689_s.len()));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if ((*_136431_m.alloc)._field_NotEq) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ad36b82e_emptyCompare(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03bbb5_EmptyCompareExprModel> _138036_m) {
	if ((*(_138036_m))._field_Neg) {
		_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1ad36277b_possibleRefExpr(_self_, (*_138036_m.alloc)._field_Expr);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ad36bad7_unsafeDeref(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03e14b_UnsafeDerefExprModel> _138935_m) {
	{
		
		if ((_1abe45717_Sptr((*((*((*(_138935_m))._field_Base))._field_Expr))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b267358d:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ad36277b_possibleRefExpr(_self_, (*(*(*_138935_m.alloc)._field_Base.alloc)._field_Expr.alloc)._field_Model);
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1b26731d6:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1396:13"));;
			}
		}
		_match_end_1b26730d7:;
	};
}



inline void _1ad36bd90_unsafeCasting(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1ac03e448_UnsafeCastingExprModel> _140037_m) {
	{
		
		if (_1ac934d4e_IsAny(&((*((*(_140037_m))._field_Base))._field_ExprKind))) {
			_case_begin_1b267623e:;
			{
				_1ad36277b_possibleRefExpr(_self_, (*((*(*_140037_m.alloc)._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1abe45717_Sptr((*(*_140037_m.alloc)._field_Base.alloc)._field_Kind.ptr()) != nullptr)) {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(_1abe45717_Sptr((*(*_140037_m.alloc)._field_Base.alloc)._field_Kind)))._field_Elem);
				} else {
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*(*_140037_m.alloc)._field_Base.alloc)._field_Kind);
				};
				_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1b2675d87:;
			{
				jule::panic(jule::Str::lit("implementation mistake, this panic call should be unreachable", 61) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1413:13"));;
			}
		}
		_match_end_1b2675c99:;
	};
}



inline void _1ad36c148_model(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Any _141729_m) {
	{
		auto &_match_expr{ _141729_m };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b267b909:;
			{
				_1ad43032c_write((*(_self_))._field_oc, _141729_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1b267baa2:;
			{
				_1ad444b16_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _141729_m.unsafe_cast_ptr<_1abe42d30_TypeKind>());
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b267bb18:;
			{
				_1ad360bb9_constant(_self_, _141729_m.unsafe_cast_ptr<_1b9aac4c5_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b267bb7e:;
			{
				_1ad361901_var(_self_, _141729_m.unsafe_cast_ptr<_1abda8d2e_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b267bbe5:;
			{
				_1ad361ba9_structureIns(_self_, _141729_m.unsafe_cast_ptr<_1abd4445c_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b267bc5b:;
			{
				_1ad366a38_funcInsCommon(_self_, _141729_m.unsafe_cast_ptr<_1abd59681_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b267bcc2:;
			{
				_1ad361390_unsafeBinary(_self_, (*(_141729_m.unsafe_cast_ptr<_1ac03cd3c_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b267c91b:;
			{
				_1ad361648_binary(_self_, _141729_m.unsafe_cast_ptr<_1abd4885c_BinaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b267c982:;
			{
				_1ad361e62_unary(_self_, _141729_m.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b267c9e8:;
			{
				_1ad36221a_structureLit(_self_, _141729_m.unsafe_cast_ptr<_1abd4960a_StructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b267ca5e:;
			{
				_1ad3624c3_allocStructure(_self_, _141729_m.unsafe_cast_ptr<_1abd49907_AllocStructLitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b267cac5:;
			{
				_1ad362e52_casting(_self_, _141729_m.unsafe_cast_ptr<_1abd49e8a_CastingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b267cb3b:;
			{
				_1ad364d33_funcCall(_self_, _141729_m.unsafe_cast_ptr<_1abd4a83c_FnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b267cba2:;
			{
				_1ad3650db_slice(_self_, _141729_m.unsafe_cast_ptr<_1abd4ac16_SliceExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b267cc29:;
			{
				_1ad366780_array(_self_, _141729_m.unsafe_cast_ptr<_1abd4dc2a_ArrayExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b267cca1:;
			{
				_1ad36564c_unsafeIndexing(_self_, _141729_m.unsafe_cast_ptr<_1ac03d1c2_UnsafeIndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b267cd28:;
			{
				_1ad365394_indexing(_self_, _141729_m.unsafe_cast_ptr<_1abd4b1bc_IndexingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b267cda0:;
			{
				_1ad365905_anonFunc(_self_, _141729_m.unsafe_cast_ptr<_1abd4b673_AnonFnExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b267ce27:;
			{
				_1ad365bad_mapExpr(_self_, _141729_m.unsafe_cast_ptr<_1abd4c003_MapExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b2682d50:;
			{
				_1ad365e66_slicing(_self_, _141729_m.unsafe_cast_ptr<_1abd4c586_SlicingExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b2682db6:;
			{
				_1ad36621e_traitSub(_self_, _141729_m.unsafe_cast_ptr<_1abd4cb19_TraitSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b2682e2c:;
			{
				_1ad3664c7_structureSub(_self_, _141729_m.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b2682e93:;
			{
				_1ad367099_tuple(_self_, _141729_m.unsafe_cast_ptr<_1abd4e027_TupleExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b2683009:;
			{
				_1ad36760a_outCall(_self_, _141729_m.unsafe_cast_ptr<_1abd4e401_BuiltinOutCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b2683081:;
			{
				_1ad3678b3_outlnCall(_self_, _141729_m.unsafe_cast_ptr<_1abd4e7ca_BuiltinOutlnCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b2683108:;
			{
				_1ad367352_newCall(_self_, _141729_m.unsafe_cast_ptr<_1abd4eba4_BuiltinNewCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b2683180:;
			{
				_1ad367b6b_panicCall(_self_, _141729_m.unsafe_cast_ptr<_1abd5007d_BuiltinPanicCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b2683207:;
			{
				_1ad367e24_assertCall(_self_, _141729_m.unsafe_cast_ptr<_1abd50534_BuiltinAssertCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b268327e:;
			{
				_1ad3681cc_errorCall(_self_, _141729_m.unsafe_cast_ptr<_1abd5213a_BuiltinErrorCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b2683306:;
			{
				_1ad3695b8_makeCall(_self_, _141729_m.unsafe_cast_ptr<_1abd509da_BuiltinMakeCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b268337d:;
			{
				_1ad369dd2_appendCall(_self_, _141729_m.unsafe_cast_ptr<_1abd50db4_BuiltinAppendCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b2683405:;
			{
				_1ad368485_copyCall(_self_, _141729_m.unsafe_cast_ptr<_1abd51c61_BuiltinCopyCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b268347c:;
			{
				_1ad36873d_lenCall(_self_, _141729_m.unsafe_cast_ptr<_1abd511b1_BuiltinLenCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b2683504:;
			{
				_1ad3689e6_capCall(_self_, _141729_m.unsafe_cast_ptr<_1abd514ad_BuiltinCapCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b268357b:;
			{
				_1ad368c9e_deleteCall(_self_, _141729_m.unsafe_cast_ptr<_1abd51887_BuiltinDeleteCallExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b2683603:;
			{
				_1ad36a18a_sizeof(_self_, _141729_m.unsafe_cast_ptr<_1abd527de_SizeofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b268367a:;
			{
				_1ad36a443_alignof(_self_, _141729_m.unsafe_cast_ptr<_1abd529cb_AlignofExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b2683702:;
			{
				_1ad36a6eb_runeLit(_self_, _141729_m.unsafe_cast_ptr<_1abd52c73_RuneExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b2683779:;
			{
				_1ad36a9a4_structureStatic(_self_, _141729_m.unsafe_cast_ptr<_1abd4d851_StructStaticIdentExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b2683801:;
			{
				_1ad36ac5c_integratedToStr(_self_, _141729_m.unsafe_cast_ptr<_1abd53070_IntegratedToStrExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2683878:;
			{
				_1ad36b015_backendEmit(_self_, _141729_m.unsafe_cast_ptr<_1abd53449_BackendEmitExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b2683900:;
			{
				_1ad36b2bd_free(_self_, _141729_m.unsafe_cast_ptr<_1abd53746_FreeExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b2683977:;
			{
				_1ad36b576_strComp(_self_, _141729_m.unsafe_cast_ptr<_1ac03c4ac_StrCompExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b26839ee:;
			{
				_1ad361901_var(_self_, (*(_141729_m.unsafe_cast_ptr<_1ac03c039_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b2683a76:;
			{
				_1ad36b82e_emptyCompare(_self_, _141729_m.unsafe_cast_ptr<_1ac03bbb5_EmptyCompareExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b2683aed:;
			{
				_1ad36bad7_unsafeDeref(_self_, _141729_m.unsafe_cast_ptr<_1ac03e14b_UnsafeDerefExprModel>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b2683b75:;
			{
				_1ad36bd90_unsafeCasting(_self_, _141729_m.unsafe_cast_ptr<_1ac03e448_UnsafeCastingExprModel>());
			}
		}
		else {
			_case_begin_1b267ba3b:;
			{
				_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b267b9d6:;
	};
}



inline void _1ad36c401_initExpr(jule::Ptr<_1ad35e437_exprCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _151832_t) {
	if (_1abe44bcd_NilCompatible(_151832_t.ptr())) {
		if ((_1abe4599d_Ptr(_151832_t) != nullptr)) {
			_1ad43032c_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ad444b16_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1abe509ec_Tuple> _152813_tup = _1abe472a7_Tup(_151832_t);;
	if ((_152813_tup != nullptr)) {
		_1ad4493e0_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _152813_tup);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_152813_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b23a6799:;
			if (it != expr_end) {
				jule::I32 _153218_i = it - expr->begin();
				jule::Ptr<_1abe42d30_TypeKind> _153225_tt = *it;
				{
					if ((!(_1ad44b733_shouldInitialized(&(_153225_tt))))) {
						goto _iter_next_1b23a6799;
					};
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ad43032c_write((*_self_.alloc)._field_oc, _1b9a9e40c_Itoa(_153218_i));
					_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("=", 1));
					_1ad36c401_initExpr(_self_, _153225_tt);
					if ((((*_152813_tup.alloc)._field_Types.len() - _153218_i) > 1LL)) {
						_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1b23a6799:;
				++it;
				_153218_i++;
				goto _iter_begin_1b23a6799;
			}
			_iter_end_1b23a6799:;
		};
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1abd6c265_Enum> _154713_enm = _1abe45c34_Enum(_151832_t);;
	if ((_154713_enm != nullptr)) {
		_1ad36c148_model(_self_, (*((*((*((*_154713_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _15529_prim = _1abe45481_Prim(_151832_t);;
	if ((_15529_prim != nullptr)) {
		if (_1b9aabe31_IsNum((*_15529_prim.alloc)._field_Kind)) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("0", 1));
		} else if (_1abe4db0a_IsBool(_15529_prim)) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("false", 5));
		} else if (_1abe4dd91_IsStr(_15529_prim)) {
			_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1abe46251_Arr(_151832_t) != nullptr)) {
		jule::Ptr<_1abe52229_Arr> _156417_arr = _1abe46251_Arr(_151832_t);;
		_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1ad36c401_initExpr(_self_, (*(_156417_arr))._field_Elem);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	jule::Ptr<_1abd4445c_StructIns> _157113_s = _1abe46a04_Struct(_151832_t);;
	if ((((_157113_s != nullptr) && (*((*_157113_s.alloc)._field_Decl))._field_Binded) && (_1ac93657b_FindDirective(&((*(*_157113_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("typedef", 7)) == nullptr))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
		_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ad444b16_kind((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _151832_t);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("()", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad35e437_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "varPrefixes:" << _Src._field_varPrefixes;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad36ec3e_TestCoder> static__1ad3701b2_New(jule::Ptr<_1ad42eb78_ObjectCoder>* _2924_oc) {
	return jule::new_ptr<_1ad36ec3e_TestCoder>(_1ad36ec3e_TestCoder{._field_oc=(*(_2924_oc))});;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ad370448_findTestingPackage(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b23a1d49:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _3621_imp = *it;
			{
				if ((*(_3621_imp))._field_LinkPath.equal("std::testing", 12)) {
					return _3621_imp;;
				};
			}
			_iter_next_1b23a1d49:;
			++it;
			goto _iter_begin_1b23a1d49;
		}
		_iter_end_1b23a1d49:;
	};
	return nullptr;;
}



inline void _1ad370701_appendTest(jule::Ptr<_1ad36ec3e_TestCoder> _self_, jule::Ptr<_1abd59681_FnIns> _4434_f) {
	_1ad430bce_indent((*(_self_))._field_oc);
	_1ad370e3d_callTmReset(_self_);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(";\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1ad36d1e3_cstrLit(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), (*((*(_4434_f))._field_Decl))._field_Ident);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" << std::endl;\n", 15));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	static__1ad374095_funcIns(&((*(*_self_.alloc)._field_oc.alloc)._field_Buf), &(_4434_f));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1ad3709a9_appendPackageTests(jule::Ptr<_1ad36ec3e_TestCoder> _self_, jule::Ptr<_1ab67a535_Package>* _5943_p) {
	{
		auto expr = &((*((*(_5943_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b27e4d80:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _6021_file = *it;
			{
				{
					auto expr = &((*(_6021_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b27e57ed:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _6125_f = *it;
						{
							if (_1ac936944_HasDirective(&((*(_6125_f))._field_Directives), jule::Str::lit("test", 4))) {
								_1ad370701_appendTest(_self_, (*_6125_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1b27e57ed:;
						++it;
						goto _iter_begin_1b27e57ed;
					}
					_iter_end_1b27e57ed:;
				};
			}
			_iter_next_1b27e4d80:;
			++it;
			goto _iter_begin_1b27e4d80;
		}
		_iter_end_1b27e4d80:;
	};
}



inline jule::Bool _1ad370c40_readyTestingPackage(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	jule::Ptr<_1ab67760e_ImportInfo> _7013_p = _1ad370448_findTestingPackage(_self_);;
	if ((_7013_p == nullptr)) {
		return false;;
	};
	(*_self_.alloc)._field_t=(*(_1ab6787db_FindStruct(_7013_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	(*_self_.alloc)._field_tmReset=_1abd454c4_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1abd454c4_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1abd454c4_FindMethod((*_self_.alloc)._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1ad370e3d_callTmReset(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	static__1ad373ca9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad37113b_callTmFailed(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	static__1ad373ca9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad371339_callTmSkipped(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	static__1ad373ca9_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ad371537_Serialize(jule::Ptr<_1ad36ec3e_TestCoder> _self_) {
	_1ad43bea4_serializeHead((*(_self_))._field_oc);
	__JULE_DEFER({
		_1ad43b943_end((*_self_.alloc)._field_oc);
	});;
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	if ((!(_1ad370c40_readyTestingPackage(_self_)))) {
		_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}", 1));
		_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
		return;;
	};
	_209e0d4d9_StrBuilder _11813_tb = static__209e0d918_New(40LL);;
	_1ad442dbc_structureIns((*(*_self_.alloc)._field_oc.alloc)._field_tc.ptr(), &(_11813_tb), (*_self_.alloc)._field_t);
	_1ad440d10_asSptr((*(*_self_.alloc)._field_oc.alloc)._field_tc, &((*(*_self_.alloc)._field_oc.alloc)._field_Buf), _209e10222_Buf(&_11813_tb));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ad4305d5_writeBytes((*_self_.alloc)._field_oc, _209e10222_Buf(&_11813_tb));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ad4307d3_addIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("++total;\n", 9));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (", 4));
	_1ad37113b_callTmFailed(_self_);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("else if (", 9));
	_1ad371339_callTmSkipped(_self_);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("};\n", 3));
	_1ad3709a9_appendPackageTests(_self_, &((*((*(*_self_.alloc)._field_oc.alloc)._field_ir))._field_Main));
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("\n\n", 2));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ad4309d1_doneIndent((*_self_.alloc)._field_oc);
	_1ad430bce_indent((*_self_.alloc)._field_oc);
	_1ad43032c_write((*_self_.alloc)._field_oc, jule::Str::lit("}\n", 2));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad36ec3e_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1ad3731c6_writeIdentTo(_209e0d4d9_StrBuilder* _3533_buf, jule::Str* _3551_ident) {
	{
		auto expr = _3551_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28102c9:;
		if (it != expr_end) {
			jule::U8 *_3616_b = it;
			{
				if (((*(_3616_b)) >= 128LLU)) {
					goto _julec_label_1b2811473;
				};
			}
			_iter_next_1b28102c9:;
			++it;
			goto _iter_begin_1b28102c9;
		}
		_iter_end_1b28102c9:;
	};
	_209e0de79_WriteStr(_3533_buf, (*(_3551_ident)));
	return;;
	_julec_label_1b2811473:;
	{
		auto expr = _3551_ident;
		char *it = expr->operator char*();
		const char *end = it + expr->len();
		std::size_t len;
		jule::I32 _4616_r;
		_iter_begin_1b281185d:;
		std::tie(_4616_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				if ((_4616_r < 128LL)) {
					_209e0e232_WriteByte(_3533_buf, static_cast<jule::U8>(_4616_r));
					goto _iter_next_1b281185d;
				};
				_209e0de79_WriteStr(_3533_buf, _1b9a9e143_FmtInt(static_cast<jule::I64>(_4616_r), 15LL));
			}
			_iter_next_1b281185d:;
			it += len;
			goto _iter_begin_1b281185d;
		}
	};
}



inline void static__1ad37356c_toOut(_209e0d4d9_StrBuilder* _6326_buf, jule::Str _6343_ident, jule::Uintptr _6355_addr) {
	_209e0e232_WriteByte(_6326_buf, '_');
	if ((_6355_addr != 0LLU)) {
		_209e0de79_WriteStr(_6326_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_6355_addr), 15LL));
		_209e0e232_WriteByte(_6326_buf, '_');
	};
	static__1ad3731c6_writeIdentTo(_6326_buf, &(_6343_ident));
}



inline void static__1ad3739bd_toLocal(_209e0d4d9_StrBuilder* _7828_buf, jule::I32 _7845_row, jule::I32 _7855_col, jule::Str* _7866_ident) {
	_209e0e232_WriteByte(_7828_buf, '_');
	_209e0de79_WriteStr(_7828_buf, _1b9a9e40c_Itoa(_7845_row));
	_209e0de79_WriteStr(_7828_buf, _1b9a9e40c_Itoa(_7855_col));
	_209e0e232_WriteByte(_7828_buf, '_');
	static__1ad3731c6_writeIdentTo(_7828_buf, _7866_ident);
}



inline void static__1ad373ca9_func(_209e0d4d9_StrBuilder* _8625_buf, jule::Ptr<_1abd566a0_Fn>* _8643_f) {
	{
		
		if ((*((*(_8643_f))))._field_Binded) {
			_case_begin_1b2816126:;
			{
				_209e0de79_WriteStr(_8625_buf, (*((*(_8643_f))))._field_Ident);
				return;;
			}
		}
		else if ((*((*(_8643_f))))._field_Ident.equal("main", 4)) {
			_case_begin_1b28161c0:;
			{
				_209e0de79_WriteStr(_8625_buf, jule::Str::lit("entry_point", 11));
				return;;
			}
		}
		else if (_1abd56da9_IsMethod((*(_8643_f)).ptr())) {
			_case_begin_1b2816236:;
			{
				if ((*((*(_8643_f))))._field_Statically) {
					_209e0de79_WriteStr(_8625_buf, jule::Str::lit("static_", 7));
				};
			}
		}
		_match_end_1b2815ec2:;
	};
	static__1ad37356c_toOut(_8625_buf, (*((*(_8643_f))))._field_Ident, static_cast<jule::Uintptr>((*(_8643_f))));
}



inline void static__1ad374095_funcIns(_209e0d4d9_StrBuilder* _10228_buf, jule::Ptr<_1abd59681_FnIns>* _10246_f) {
	if (_1abd5ab16_IsBuiltin((*(_10246_f)).ptr())) {
		_209e0de79_WriteStr(_10228_buf, jule::Str::lit("jule::", 6));
		_209e0de79_WriteStr(_10228_buf, (*((*((*(_10246_f))))._field_Decl))._field_Ident);
		return;;
	};
	if (((*(*((*(_10246_f))))._field_Decl.alloc)._field_Binded || ((*((*(_10246_f))))._field_Generics.len() == 0LL))) {
		static__1ad373ca9_func(_10228_buf, &((*((*(_10246_f))))._field_Decl));
		return;;
	};
	static__1ad37356c_toOut(_10228_buf, (*(*((*(_10246_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_10246_f))));
}



inline void static__1ad374381_traitDecl(_209e0d4d9_StrBuilder* _11730_buf, jule::Ptr<_1abd69a59_Trait> _11747_t) {
	static__1ad37356c_toOut(_11730_buf, (*(_11747_t))._field_Ident, static_cast<jule::Uintptr>(_11747_t));
}



inline void static__1ad37466c_param(_209e0d4d9_StrBuilder* _12126_buf, jule::Ptr<_1abd54bcb_Param>* _12144_p) {
	if ((_1abd0d03b_IsAnonIdent((*((*(_12144_p))))._field_Ident) || _1abd0cc72_IsIgnoreIdent((*((*(_12144_p))))._field_Ident))) {
		return;;
	};
	if (_1abd552e7_IsSelf((*(_12144_p)).ptr())) {
		_209e0de79_WriteStr(_12126_buf, jule::Str::lit("_self_", 6));
		return;;
	};
	if (((*((*(_12144_p))))._field_Token == nullptr)) {
		static__1ad3739bd_toLocal(_12126_buf, 0LL, 0LL, &((*((*(_12144_p))))._field_Ident));
		return;;
	};
	static__1ad3739bd_toLocal(_12126_buf, (*((*((*(_12144_p))))._field_Token))._field_Row, (*((*((*(_12144_p))))._field_Token))._field_Column, &((*((*(_12144_p))))._field_Ident));
}



inline void static__1ad374958_structure(_209e0d4d9_StrBuilder* _13630_buf, jule::Ptr<_1abd416ce_Struct>* _13648_s) {
	if ((*((*(_13648_s))))._field_Binded) {
		if ((!(_1ac936944_HasDirective(&((*((*(_13648_s))))._field_Directives), jule::Str::lit("typedef", 7))))) {
			_209e0de79_WriteStr(_13630_buf, jule::Str::lit("struct ", 7));
		};
		_209e0de79_WriteStr(_13630_buf, (*((*(_13648_s))))._field_Ident);
		return;;
	};
	static__1ad37356c_toOut(_13630_buf, (*((*(_13648_s))))._field_Ident, static_cast<jule::Uintptr>((*(_13648_s))));
}



inline void static__1ad374c44_structureIns(_209e0d4d9_StrBuilder* _14733_buf, jule::Ptr<_1abd4445c_StructIns>* _14751_s) {
	if (((*((*((*(_14751_s))))._field_Decl))._field_Binded || ((*((*(_14751_s))))._field_Generics.len() == 0LL))) {
		static__1ad374958_structure(_14733_buf, &((*((*(_14751_s))))._field_Decl));
		return;;
	};
	static__1ad37356c_toOut(_14733_buf, (*(*((*(_14751_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14751_s))));
}



inline void static__1ad375030_field(_209e0d4d9_StrBuilder* _15526_buf, jule::Ptr<_1abd3d7a8_Field>* _15544_f) {
	if ((*((*((*(_15544_f))))._field_Owner))._field_Binded) {
		_209e0de79_WriteStr(_15526_buf, (*((*(_15544_f))))._field_Ident);
		return;;
	};
	_209e0de79_WriteStr(_15526_buf, jule::Str::lit("_field_", 7));
	static__1ad3731c6_writeIdentTo(_15526_buf, &((*((*(_15544_f))))._field_Ident));
}



inline void static__1ad37531b_var(_209e0d4d9_StrBuilder* _16524_buf, jule::Ptr<_1abda8d2e_Var> _16545_v) {
	{
		
		if ((*(_16545_v))._field_Binded) {
			_case_begin_1b2824893:;
			{
				_209e0de79_WriteStr(_16524_buf, (*_16545_v.alloc)._field_Ident);
			}
		}
		else if ((*(_16545_v))._field_Ident.equal("error", 5)) {
			_case_begin_1b2824909:;
			{
				_209e0de79_WriteStr(_16524_buf, jule::Str::lit("except.error", 12));
			}
		}
		else if ((*(_16545_v))._field_Ident.equal("self", 4)) {
			_case_begin_1b2824970:;
			{
				_209e0de79_WriteStr(_16524_buf, jule::Str::lit("_self_", 6));
			}
		}
		else if (((*(_16545_v))._field_RetOrder == -1LL)) {
			_case_begin_1b28249d6:;
			{
				_209e0de79_WriteStr(_16524_buf, jule::Str::lit("__jule_func_result", 18));
			}
		}
		else if (((*(_16545_v))._field_RetOrder >= 0LL)) {
			_case_begin_1b2824a4c:;
			{
				_209e0de79_WriteStr(_16524_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
				_209e0de79_WriteStr(_16524_buf, _1b9a9e40c_Itoa((*_16545_v.alloc)._field_RetOrder));
			}
		}
		else if (((*(_16545_v))._field_Scope != nullptr)) {
			_case_begin_1b2824ab3:;
			{
				static__1ad3739bd_toLocal(_16524_buf, (*((*_16545_v.alloc)._field_Token))._field_Row, (*(*_16545_v.alloc)._field_Token.alloc)._field_Column, &((*_16545_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1b282482c:;
			{
				static__1ad37356c_toOut(_16524_buf, (*(_16545_v))._field_Ident, static_cast<jule::Uintptr>(_16545_v));
			}
		}
		_match_end_1b282472d:;
	};
}



inline void static__1ad375607_iterBegin(_209e0d4d9_StrBuilder* _18730_buf, jule::Uintptr _18747_it) {
	_209e0de79_WriteStr(_18730_buf, jule::Str::lit("_iter_begin_", 12));
	_209e0de79_WriteStr(_18730_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_18747_it), 15LL));
}



inline void static__1ad3758e3_iterEnd(_209e0d4d9_StrBuilder* _19228_buf, jule::Uintptr _19245_it) {
	_209e0de79_WriteStr(_19228_buf, jule::Str::lit("_iter_end_", 10));
	_209e0de79_WriteStr(_19228_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_19245_it), 15LL));
}



inline void static__1ad375bce_iterNext(_209e0d4d9_StrBuilder* _19729_buf, jule::Uintptr _19746_it) {
	_209e0de79_WriteStr(_19729_buf, jule::Str::lit("_iter_next_", 11));
	_209e0de79_WriteStr(_19729_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_19746_it), 15LL));
}



inline void static__1ad375eba_label(_209e0d4d9_StrBuilder* _20226_buf, jule::Uintptr _20243_u) {
	_209e0de79_WriteStr(_20226_buf, jule::Str::lit("_julec_label_", 13));
	_209e0de79_WriteStr(_20226_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_20243_u), 15LL));
}



inline void static__1ad3762a6_matchEnd(_209e0d4d9_StrBuilder* _20729_buf, jule::Uintptr _20746_m) {
	_209e0de79_WriteStr(_20729_buf, jule::Str::lit("_match_end_", 11));
	_209e0de79_WriteStr(_20729_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_20746_m), 15LL));
}



inline void static__1ad376592_caseBegin(_209e0d4d9_StrBuilder* _21230_buf, jule::Uintptr _21247_c) {
	_209e0de79_WriteStr(_21230_buf, jule::Str::lit("_case_begin_", 12));
	_209e0de79_WriteStr(_21230_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_21247_c), 15LL));
}





std::ostream &operator<<(std::ostream &_Stream, _1ad372bba_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad42cdc9_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad42d2e7_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad42d6c1_anonHash _Src) {
	_Stream << "anonHash{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1ad43e1c6_Str(_1ad43dd0d_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ad43e517_Equal(jule::Ptr<_1ad43dd0d_customType> _self_, jule::Ptr<_1abe42d30_TypeKind> _4421_k) {
	return false;;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad43dd0d_customType _Src) {
	_Stream << _1ad43e1c6_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1ad43e946_typeCoder> static__1ad43ee63_new(jule::Ptr<_1ad42eb78_ObjectCoder>* _6924_oc) {
	jule::Ptr<_1ad43e946_typeCoder> _7013_tc = jule::new_ptr<_1ad43e946_typeCoder>(_1ad43e946_typeCoder{._field_oc=(*(_6924_oc)), });;
	(*(_7013_tc))._field_rc=static__1ad447a09_new(&(_7013_tc));
	return _7013_tc;;
}



inline void _1ad4402c6_toType(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _7630_buf, jule::Str _7651_id) {
	if ((!_7651_id.equal("uintptr", 7))) {
		_7651_id=_1b9aa1574_RealKindOf(_7651_id);
	};
	_209e0de79_WriteStr(_7630_buf, jule::Str::lit("jule::", 6));
	if (((97LL <= _7651_id[0LL]) && (_7651_id[0LL] <= 122LLU))) {
		_209e0e232_WriteByte(_7630_buf, (_7651_id[0LL] - 32LLU));
	} else {
		_209e0e232_WriteByte(_7630_buf, _7651_id[0LL]);
	};
	_209e0de79_WriteStr(_7630_buf, _7651_id.slice(1LL));
}



inline void _1ad440639_prim(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _9028_buf, jule::Ptr<_1abe4a909_Prim> _9045_p) {
	_1ad4402c6_toType(_self_, _9028_buf, (*(_9045_p))._field_Kind);
}



inline void _1ad44099c_tuple(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _9529_buf, jule::Ptr<_1abe509ec_Tuple> _9550_t) {
	_209e0de79_WriteStr(_9529_buf, jule::Str::lit("std::tuple<", 11));
	{
		auto expr = &((*_9550_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20a87ba:;
		if (it != expr_end) {
			jule::I32 _9714_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _9721_tk = *it;
			{
				_1ad444b16_kind(_self_, _9529_buf, _9721_tk);
				if ((((*(_9550_t))._field_Types.len() - _9714_i) > 1LL)) {
					_209e0e232_WriteByte(_9529_buf, ',');
				};
			}
			_iter_next_1b20a87ba:;
			++it;
			_9714_i++;
			goto _iter_begin_1b20a87ba;
		}
		_iter_end_1b20a87ba:;
	};
	_209e0e232_WriteByte(_9529_buf, '>');
}



inline void _1ad440d10_asSptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _10730_buf, jule::Slice<jule::U8> _10747_elem) {
	_209e0de79_WriteStr(_10730_buf, jule::Str::lit("jule::Ptr<", 10));
	_209e0dbc1_Write(_10730_buf, _10747_elem);
	_209e0e232_WriteByte(_10730_buf, '>');
}



inline void _1ad441173_sptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _11428_buf, jule::Ptr<_1abe4e435_Sptr> _11449_sptr) {
	_209e0de79_WriteStr(_11428_buf, jule::Str::lit("jule::Ptr<", 10));
	_1ad444b16_kind(_self_, _11428_buf, (*(_11449_sptr))._field_Elem);
	_209e0e232_WriteByte(_11428_buf, '>');
}



inline void _1ad4414d6_ptr(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _12127_buf, jule::Ptr<_1abe52bec_Ptr> _12148_p) {
	;
	if (_1abe53736_IsUnsafe(_12148_p.ptr())) {
		_209e0de79_WriteStr(_12127_buf, jule::Str::lit("void*", 5));
	} else {
		_1ad444b16_kind(_self_, _12127_buf, (*(_12148_p))._field_Elem);
		_209e0de79_WriteStr(_12127_buf, jule::Str::lit("*", 1));
	};
}



inline void _1ad441849_enumDecl(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _13232_buf, jule::Ptr<_1abd6c265_Enum> _13253_e) {
	_1ad444b16_kind(_self_, _13232_buf, (*((*(_13253_e))._field_Kind))._field_Kind);
}



inline void _1ad441bac_typeEnumDecl(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _13736_buf, jule::Ptr<_1abd6d970_TypeEnum> _13757_e) {
	_209e0de79_WriteStr(_13736_buf, jule::Str::lit("jule::Any", 9));
}



inline void _1ad442020_asSlice(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _14131_buf, jule::Ptr<_1abe42d30_TypeKind> _14152_elem) {
	_209e0de79_WriteStr(_14131_buf, jule::Str::lit("jule::Slice<", 12));
	_1ad444b16_kind(_self_, _14131_buf, _14152_elem);
	_209e0e232_WriteByte(_14131_buf, '>');
}



inline void _1ad442383_slice(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _14829_buf, jule::Ptr<_1abe4ee08_Slc> _14850_s) {
	_1ad442020_asSlice(_self_, _14829_buf, (*(_14850_s))._field_Elem);
}



inline void _1ad4426e6_mapType(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _15331_buf, jule::Ptr<_1abe5159c_Map> _15352_m) {
	_209e0de79_WriteStr(_15331_buf, jule::Str::lit("jule::Map<", 10));
	_1ad444b16_kind(_self_, _15331_buf, (*(_15352_m))._field_Key);
	_209e0e232_WriteByte(_15331_buf, ',');
	_1ad444b16_kind(_self_, _15331_buf, (*_15352_m.alloc)._field_Val);
	_209e0e232_WriteByte(_15331_buf, '>');
}



inline void _1ad442dbc_structureIns(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _16736_buf, jule::Ptr<_1abd4445c_StructIns> _16757_s) {
	if ((!((*((*(_16757_s))._field_Decl))._field_Binded))) {
		static__1ad374c44_structureIns(_16736_buf, &(_16757_s));
		return;;
	};
	jule::Ptr<_1abd1ec62_Directive> _1729_d = _1ac93657b_FindDirective(&((*(*_16757_s.alloc)._field_Decl.alloc)._field_Directives), jule::Str::lit("namespace", 9));;
	if ((_1729_d != nullptr)) {
		_209e0dbc1_Write(_16736_buf, _1ad43c56a_concatAllParts((*_1729_d.alloc)._field_Args));
		_209e0de79_WriteStr(_16736_buf, jule::Str::lit("::", 2));
	};
	static__1ad374c44_structureIns(_16736_buf, &(_16757_s));
	if (((*_16757_s.alloc)._field_Generics.len() > 0LL)) {
		_209e0e232_WriteByte(_16736_buf, '<');
		{
			auto expr = &((*_16757_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b20b5266:;
			if (it != expr_end) {
				jule::I32 _18018_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> _18025_g = *it;
				{
					_1ad444b16_kind(_self_, _16736_buf, (*(_18025_g))._field_Kind);
					if ((((*_16757_s.alloc)._field_Generics.len() - _18018_i) > 1LL)) {
						_209e0e232_WriteByte(_16736_buf, ',');
					};
				}
				_iter_next_1b20b5266:;
				++it;
				_18018_i++;
				goto _iter_begin_1b20b5266;
			}
			_iter_end_1b20b5266:;
		};
		_209e0e232_WriteByte(_16736_buf, '>');
	};
}



inline void _1ad443230_array(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _19129_buf, jule::Ptr<_1abe52229_Arr> _19150_a) {
	_209e0de79_WriteStr(_19129_buf, jule::Str::lit("jule::Array<", 12));
	_1ad444b16_kind(_self_, _19129_buf, (*(_19150_a))._field_Elem);
	_209e0e232_WriteByte(_19129_buf, ',');
	_209e0de79_WriteStr(_19129_buf, _1b9a9e40c_Itoa((*_19150_a.alloc)._field_N));
	_209e0e232_WriteByte(_19129_buf, '>');
}



inline void _1ad443906_paramIns(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _21432_buf, jule::Ptr<_1abd58608_ParamIns>* _21454_p) {
	if ((*((*((*(_21454_p))))._field_Decl))._field_Variadic) {
		_209e0de79_WriteStr(_21432_buf, jule::Str::lit("jule::Slice<", 12));
		_1ad444b16_kind(_self_, _21432_buf, (*((*(_21454_p))))._field_Kind);
		_209e0e232_WriteByte(_21432_buf, '>');
	} else {
		_1ad444b16_kind(_self_, _21432_buf, (*((*(_21454_p))))._field_Kind);
	};
	if ((*((*((*(_21454_p))))._field_Decl))._field_Reference) {
		_209e0e232_WriteByte(_21432_buf, '*');
	};
}



inline void _1ad4440cc_funcInsResult(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _24637_s, jule::Ptr<_1abd59681_FnIns>* _24657_f) {
	if (_1abd56b23_IsVoid((*((*(_24657_f))))._field_Decl.ptr())) {
		if ((*(*((*(_24657_f))))._field_Decl.alloc)._field_Exceptional) {
			_209e0de79_WriteStr(_24637_s, jule::Str::lit("jule::VoidExceptional", 21));
		} else {
			_209e0de79_WriteStr(_24637_s, jule::Str::lit("void", 4));
		};
		return;;
	};
	if ((*(*((*(_24657_f))))._field_Decl.alloc)._field_Exceptional) {
		_209e0de79_WriteStr(_24637_s, jule::Str::lit("jule::Exceptional<", 18));
		_1ad449ab6_codeMut1((*(_self_))._field_rc.ptr(), _24637_s, &((*((*(_24657_f))))._field_Result));
		_209e0e232_WriteByte(_24637_s, '>');
		return;;
	};
	_1ad449ab6_codeMut1((*(_self_))._field_rc, _24637_s, &((*((*(_24657_f))))._field_Result));
}



inline void _1ad444440_anonFunc(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _26432_buf, jule::Ptr<_1abd59681_FnIns> _26453_f) {
	if ((((*(_26453_f))._field_Result != nullptr) && (_1abe472a7_Tup((*_26453_f.alloc)._field_Result) != nullptr))) {
		_1ad431c9b_pushResultIns((*(_self_))._field_oc, &(_26453_f));
	};
	_1ad4440cc_funcInsResult(_self_, _26432_buf, &(_26453_f));
	if (((*_26453_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	_209e0e232_WriteByte(_26432_buf, ',');
	{
		auto expr = &((*_26453_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20c7a09:;
		if (it != expr_end) {
			jule::I32 _27314_i = it - expr->begin();
			jule::Ptr<_1abd58608_ParamIns> _27321_param = *it;
			{
				if (_1abd552e7_IsSelf((*(_27321_param))._field_Decl.ptr())) {
					goto _iter_next_1b20c7a09;
				};
				_1ad443906_paramIns(_self_, _26432_buf, &(_27321_param));
				if ((((*_26453_f.alloc)._field_Params.len() - _27314_i) > 1LL)) {
					_209e0e232_WriteByte(_26432_buf, ',');
				};
			}
			_iter_next_1b20c7a09:;
			++it;
			_27314_i++;
			goto _iter_begin_1b20c7a09;
		}
		_iter_end_1b20c7a09:;
	};
}



inline void _1ad4447a3_func(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _28528_buf, jule::Ptr<_1abd59681_FnIns> _28549_f) {
	_209e0de79_WriteStr(_28528_buf, jule::Str::lit("jule::Fn<", 9));
	_1ad444440_anonFunc(_self_, _28528_buf, _28549_f);
	_209e0e232_WriteByte(_28528_buf, '>');
}



inline void _1ad444b16_kind(_1ad43e946_typeCoder* _self_, _209e0d4d9_StrBuilder* _29228_buf, jule::Ptr<_1abe42d30_TypeKind> _29249_k) {
	{
		
		if ((_1abe46a04_Struct(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb216:;
			{
				_1ad442dbc_structureIns(_self_, _29228_buf, _1abe46a04_Struct(_29249_k));
				return;;
			}
		}
		else if (_1abe43b77_Binded(_29249_k.ptr())) {
			_case_begin_1b20cb2b0:;
			{
				_209e0de79_WriteStr(_29228_buf, (*_29249_k.alloc)._field_BindIdent);
				return;;
			}
		}
		else if ((_1abe45481_Prim(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb326:;
			{
				_1ad440639_prim(_self_, _29228_buf, _1abe45481_Prim(_29249_k));
				return;;
			}
		}
		else if ((_1abe472a7_Tup(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb38c:;
			{
				_1ad44099c_tuple(_self_, _29228_buf, _1abe472a7_Tup(_29249_k));
				return;;
			}
		}
		else if ((_1abe45717_Sptr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb403:;
			{
				_1ad441173_sptr(_self_, _29228_buf, _1abe45717_Sptr(_29249_k));
				return;;
			}
		}
		else if ((_1abe4599d_Ptr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb47a:;
			{
				_1ad4414d6_ptr(_self_, _29228_buf, _1abe4599d_Ptr(_29249_k));
				return;;
			}
		}
		else if ((_1abe45c34_Enum(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb502:;
			{
				_1ad441849_enumDecl(_self_, _29228_buf, _1abe45c34_Enum(_29249_k));
				return;;
			}
		}
		else if ((_1abe45eba_TypeEnum(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb579:;
			{
				_1ad441bac_typeEnumDecl(_self_, _29228_buf, _1abe45eba_TypeEnum(_29249_k));
				return;;
			}
		}
		else if ((_1abe464d7_Slc(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb601:;
			{
				_1ad442383_slice(_self_, _29228_buf, _1abe464d7_Slc(_29249_k));
				return;;
			}
		}
		else if ((_1abe47021_Map(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb678:;
			{
				_1ad4426e6_mapType(_self_, _29228_buf, _1abe47021_Map(_29249_k));
				return;;
			}
		}
		else if ((_1abe46c8a_Trait(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb700:;
			{
				_209e0de79_WriteStr(_29228_buf, jule::Str::lit("jule::Trait", 11));
				return;;
			}
		}
		else if ((_1abe46251_Arr(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb777:;
			{
				_1ad443230_array(_self_, _29228_buf, _1abe46251_Arr(_29249_k));
				return;;
			}
		}
		else if ((_1abe4676d_Fn(_29249_k.ptr()) != nullptr)) {
			_case_begin_1b20cb7ee:;
			{
				_1ad4447a3_func(_self_, _29228_buf, _1abe4676d_Fn(_29249_k));
				return;;
			}
		}
		_match_end_1b20cb03a:;
	};
	{
		auto &_match_expr{ (*(_29249_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data27)) {
			_case_begin_1b20cb887:;
			{
				_209e0de79_WriteStr(_29228_buf, (*((*(_29249_k))._field_Kind.cast_ptr<_1ad43dd0d_customType>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data27)))._field_kind);
			}
		}
		else {
			_case_begin_1b20d4e89:;
			{
				_209e0de79_WriteStr(_29228_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
			}
		}
		_match_end_1b20d4e34:;
	};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad43e946_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad447531_resultCoder> static__1ad447a09_new(jule::Ptr<_1ad43e946_typeCoder>* _35924_tc) {
	return jule::new_ptr<_1ad447531_resultCoder>(_1ad447531_resultCoder{._field_tc=(*(_35924_tc))});;
}



inline void _1ad447d6c_ptr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _36327_s, jule::Ptr<_1abe52bec_Ptr> _36346_p) {
	_209e0de79_WriteStr(_36327_s, jule::Str::lit("p", 1));
	_1ad449753_codeMut(_self_, _36327_s, &((*(_36346_p))._field_Elem));
}



inline void _1ad4481d0_sptr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _36828_s, jule::Ptr<_1abe4e435_Sptr> _36847_p) {
	_209e0de79_WriteStr(_36828_s, jule::Str::lit("x", 1));
	_1ad449753_codeMut(_self_, _36828_s, &((*(_36847_p))._field_Elem));
}



inline void _1ad448543_mapType(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _37331_s, jule::Ptr<_1abe5159c_Map> _37350_p) {
	_209e0de79_WriteStr(_37331_s, jule::Str::lit("m", 1));
	_1ad449753_codeMut(_self_, _37331_s, &((*(_37350_p))._field_Key));
	_1ad449753_codeMut(_self_, _37331_s, &((*_37350_p.alloc)._field_Val));
}



inline void _1ad4488a6_slice(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _37929_s, jule::Ptr<_1abe4ee08_Slc> _37948_slc) {
	_209e0de79_WriteStr(_37929_s, jule::Str::lit("s", 1));
	_1ad449753_codeMut(_self_, _37929_s, &((*(_37948_slc))._field_Elem));
}



inline void _1ad448c19_arr(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _38427_s, jule::Ptr<_1abe52229_Arr> _38446_arr) {
	_209e0de79_WriteStr(_38427_s, jule::Str::lit("a", 1));
	_209e0de79_WriteStr(_38427_s, _1b9a9e143_FmtInt(static_cast<jule::I64>((*(_38446_arr))._field_N), 16LL));
	_1ad449753_codeMut(_self_, _38427_s, &((*_38446_arr.alloc)._field_Elem));
}



inline void _1ad44907c_func(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _39028_s, jule::Ptr<_1abd59681_FnIns> _39047_f) {
	_209e0de79_WriteStr(_39028_s, jule::Str::lit("f", 1));
	{
		auto expr = &((*(_39047_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20dc436:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _39221_p = *it;
			{
				if ((*((*(_39221_p))._field_Decl))._field_Reference) {
					_209e0de79_WriteStr(_39028_s, jule::Str::lit("r", 1));
				};
				_1ad449753_codeMut(_self_, _39028_s, &((*_39221_p.alloc)._field_Kind));
			}
			_iter_next_1b20dc436:;
			++it;
			goto _iter_begin_1b20dc436;
		}
		_iter_end_1b20dc436:;
	};
	if (((*_39047_f.alloc)._field_Result != nullptr)) {
		_1ad449753_codeMut(_self_, _39028_s, &((*_39047_f.alloc)._field_Result));
	};
}



inline void _1ad4493e0_tup(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _40327_s, jule::Ptr<_1abe509ec_Tuple> _40346_tup) {
	{
		auto expr = &((*(_40346_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20dea87:;
		if (it != expr_end) {
			jule::Ptr<_1abe42d30_TypeKind> _40421_t = *it;
			{
				_209e0de79_WriteStr(_40327_s, jule::Str::lit("__jule_tuple_", 13));
				_1ad449753_codeMut(_self_, _40327_s, &(_40421_t));
			}
			_iter_next_1b20dea87:;
			++it;
			goto _iter_begin_1b20dea87;
		}
		_iter_end_1b20dea87:;
	};
}



inline void _1ad449753_codeMut(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _41031_s, jule::Ptr<_1abe42d30_TypeKind>* _41051_t) {
	{
		auto &_match_expr{ (*((*(_41051_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data26)) {
			_case_begin_1b20e0c97:;
			{
				_1ad447d6c_ptr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe52bec_Ptr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)) {
			_case_begin_1b20e14b2:;
			{
				_1ad4481d0_sptr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe4e435_Sptr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data21));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data24)) {
			_case_begin_1b20e114e:;
			{
				_1ad448543_mapType(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe5159c_Map>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)) {
			_case_begin_1b20e11b5:;
			{
				_1ad4488a6_slice(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe4ee08_Slc>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data22));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data25)) {
			_case_begin_1b20e122b:;
			{
				_1ad448c19_arr(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe52229_Arr>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data25));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)) {
			_case_begin_1b20e1292:;
			{
				_1ad44907c_func(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abd59681_FnIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data3)) {
			_case_begin_1b20e1704:;
			{
				jule::Ptr<_1abd6c265_Enum> _42513_te = (*((*(_41051_t))))._field_Kind.cast_ptr<_1abd6c265_Enum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data3);;
				static__1ad37356c_toOut(_41031_s, (*(_42513_te))._field_Ident, static_cast<jule::Uintptr>(_42513_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data4)) {
			_case_begin_1b20e176a:;
			{
				jule::Ptr<_1abd6d970_TypeEnum> _42813_te = (*((*(_41051_t))))._field_Kind.cast_ptr<_1abd6d970_TypeEnum>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data4);;
				static__1ad37356c_toOut(_41031_s, (*(_42813_te))._field_Ident, static_cast<jule::Uintptr>(_42813_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)) {
			_case_begin_1b20e17d1:;
			{
				jule::Ptr<_1abd4445c_StructIns> _43117_si = (*((*(_41051_t))))._field_Kind.cast_ptr<_1abd4445c_StructIns>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data0);;
				static__1ad374c44_structureIns(_41031_s, &(_43117_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data2)) {
			_case_begin_1b20e1847:;
			{
				jule::Ptr<_1abd69a59_Trait> _43417_trt = (*((*(_41051_t))))._field_Kind.cast_ptr<_1abd69a59_Trait>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data2);;
				static__1ad374381_traitDecl(_41031_s, _43417_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)) {
			_case_begin_1b20e18be:;
			{
				_209e0de79_WriteStr(_41031_s, (*((*((*(_41051_t))))._field_Kind.cast_ptr<_1abe4a909_Prim>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)))._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe42879_Kind_mptr_data23)) {
			_case_begin_1b20e1946:;
			{
				_1ad4493e0_tup(_self_, _41031_s, (*((*(_41051_t))))._field_Kind.cast_ptr<_1abe509ec_Tuple>((jule::Trait::Type*)&_1abe42879_Kind_mptr_data23));
			}
		}
		else {
			_case_begin_1b20e10d8:;
			{
				jule::panic(jule::Str::lit("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:441:13"));;
			}
		}
		_match_end_1b20e1083:;
	};
}



inline void _1ad449ab6_codeMut1(_1ad447531_resultCoder* _self_, _209e0d4d9_StrBuilder* _44532_s, jule::Ptr<_1abe42d30_TypeKind>* _44552_t) {
	jule::Ptr<_1abe509ec_Tuple> _44613_tup = _1abe472a7_Tup((*(_44552_t)).ptr());;
	if ((_44613_tup != nullptr)) {
		_1ad4493e0_tup(_self_, _44532_s, _44613_tup);
	} else {
		_1ad444b16_kind((*(_self_))._field_tc.ptr(), _44532_s, (*(_44552_t)));
	};
}



inline jule::Slice<jule::U8> _1ad449dc4_code(_1ad447531_resultCoder* _self_, jule::Ptr<_1abe42d30_TypeKind>* _45428_t) {
	_209e0d4d9_StrBuilder _45513_s = static__209e0d918_New(20LL);;
	_1ad449753_codeMut(_self_, &(_45513_s), _45428_t);
	return _209e10222_Buf(&_45513_s);;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad447531_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b20ecaea_Name(_1b20ec6cc_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b20ecc4e_What(_1b20ec6cc_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b20ecda3_Reset(_1b20ec6cc_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b20ed007_Short(_1b20ec6cc_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b20ec6cc_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b2949e6e_Name(_1b294a2e3_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b294a5ce_What(_1b294a2e3_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b294a722_Reset(_1b294a2e3_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b294a865_Short(_1b294a2e3_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b294a2e3_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b294d5d2_Name(_1b294d956_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b294dc42_What(_1b294d956_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b294dd85_Reset(_1b294d956_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b294dec8_Short(_1b294d956_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b294d956_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b2951c89_Name(_1b295210d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b29523e9_What(_1b295210d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b295253c_Reset(_1b295210d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b2952680_Short(_1b295210d_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b295210d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b29553ec_Name(_1b2955771_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b2955a5c_What(_1b2955771_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b2955ba0_Reset(_1b2955771_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b2955ce3_Short(_1b2955771_Flag* _self_) {
	return (*(_self_))._field_short;;
}





std::ostream &operator<<(std::ostream &_Stream, _1b2955771_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad4b7c33_FlagSet> static__1ad4b801e_New(void) {
	return jule::new_ptr<_1ad4b7c33_FlagSet>(_1ad4b7c33_FlagSet{._field_flags=jule::Slice<jule::Trait>::alloc(0LL, 20LL)});;
}



inline jule::Trait _1ad4b84c5_FindFlag(_1ad4b7c33_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2960715:;
		if (it != expr_end) {
			jule::Trait _7221_flag = *it;
			{
				if ((((_1ad4b6160_CommonFlagMptrData*)_7221_flag.safe_type())->_1ad48501e_Name(_7221_flag.data) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b2960715:;
			++it;
			goto _iter_begin_1b2960715;
		}
		_iter_end_1b2960715:;
	};
	return nullptr;;
}



inline jule::Trait _1ad4b8816_FindFlagShort(_1ad4b7c33_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2961590:;
		if (it != expr_end) {
			jule::Trait _8221_flag = *it;
			{
				if ((((_1ad4b6160_CommonFlagMptrData*)_8221_flag.safe_type())->_1ad485162_Short(_8221_flag.data) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b2961590:;
			++it;
			goto _iter_begin_1b2961590;
		}
		_iter_end_1b2961590:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ad4b8ddd_Parse(_1ad4b7c33_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1ad4ba6e7_argParser _11613_ap = _1ad4ba6e7_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1ad4bbbe3_parse(&_11613_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_11613_ap._field_content};;
}



inline jule::Ptr<_1b2955771_Flag> _1b29b875c_addFlagCommon(_1ad4b7c33_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1ad4b84c5_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1ad4b8816_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1b2955771_Flag> _14013_flag = jule::new_ptr<_1b2955771_Flag>(_1b2955771_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data4)); };
	return _14013_flag;;
}

inline jule::Ptr<_1b295210d_Flag> _1b29c0a61_addFlagCommon(_1ad4b7c33_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	if ((_1ad4b84c5_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:133:13"));;
	};
	if (((_13146_short != 0LL) && (_1ad4b8816_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str::lit("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:13"));;
	};
	jule::Ptr<_1b295210d_Flag> _14013_flag = jule::new_ptr<_1b295210d_Flag>(_1b295210d_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_14013_flag, (jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data3)); };
	return _14013_flag;;
}



inline void _1b29b602e_AddVar(_1ad4b7c33_FlagSet* _self_, jule::Ptr<jule::Str> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	if ((_16762_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:13"));;
	};
	jule::Ptr<_1b2955771_Flag> _17113_flag = _1b29b875c_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_17113_flag))._field_default=(*(_16762_var));
	(*_17113_flag.alloc)._field_data=_16762_var;
}

inline void _1b29bd377_AddVar(_1ad4b7c33_FlagSet* _self_, jule::Ptr<jule::Bool> _16762_var, jule::Str _16771_name, jule::I32 _16782_short, jule::Str _16795_what) {
	if ((_16762_var == nullptr)) {
		jule::panic(jule::Str::lit("std::flag: FlatSet.AddVar[T]: variable is nil", 45) + jule::Str("\nlocation: std/flag/flag.jule:169:13"));;
	};
	jule::Ptr<_1b295210d_Flag> _17113_flag = _1b29c0a61_addFlagCommon(_self_, _16771_name, _16782_short, _16795_what);;
	(*(_17113_flag))._field_default=(*(_16762_var));
	(*_17113_flag.alloc)._field_data=_16762_var;
}





std::ostream &operator<<(std::ostream &_Stream, _1ad4b7c33_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b2968454_parseInteger(_1ad4ba6e7_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18539_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18531_s))).empty()) {
			_case_begin_1b296b04a:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b296b413:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b296aa94:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b296ab0a:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18531_s))[0LL] == '0')) {
			_case_begin_1b296ab71:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b296aa2d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b296a92e:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b2970dc9_parseInteger(_1ad4ba6e7_argParser* _self_, jule::Str* _18531_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18539_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18531_s))).empty()) {
			_case_begin_1b297397b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1b2973d44:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1b29734c5:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_20b0d9dce_HasPrefix((*(_18531_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1b297353b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18531_s))[0LL] == '0')) {
			_case_begin_1b29735a2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b297345e:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18539_parser((*(_18531_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b2973360:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ad4bb011_getData(_1ad4ba6e7_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ad4bb286_processFlag(_1ad4ba6e7_argParser* _self_, jule::Trait* _21235_flag) {
	{
		auto &_match_expr{ (*(_21235_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data3)) {
			_case_begin_1b2965660:;
			{
				jule::Ptr<_1b295210d_Flag> _21517_bf = (*(_21235_flag)).cast_ptr<_1b295210d_Flag>((jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data3);;
				(*((*(_21517_bf))._field_data))=(!((*_21517_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1b296560a:;
	};
	jule::Str _2209_data = _1ad4bb011_getData(_self_);;
	if ((_2209_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad4b6160_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1ad48501e_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type4)};
	};
	{
		auto &_match_expr{ (*(_21235_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data0)) {
			_case_begin_1b296750d:;
			{
				jule::Ptr<_1b20ec6cc_Flag> _22717_intf = (*(_21235_flag)).cast_ptr<_1b20ec6cc_Flag>((jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data0);;
				jule::Bool _22827_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b2968454_parseInteger(_self_, &(_2209_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1b2968795, nullptr, nullptr));
					(*((*(_22717_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22827_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22827_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad4b6160_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1ad48501e_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data1)) {
			_case_begin_1b2966dd1:;
			{
				jule::Ptr<_1b294a2e3_Flag> _23517_uintf = (*(_21235_flag)).cast_ptr<_1b294a2e3_Flag>((jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data1);;
				jule::Bool _23628_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b2970dc9_parseInteger(_self_, &(_2209_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1b297165a, nullptr, nullptr));
					(*((*(_23517_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23628_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23628_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad4b6160_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1ad48501e_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type4)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data2)) {
			_case_begin_1b2967574:;
			{
				jule::Ptr<_1b294d956_Flag> _24317_ff = (*(_21235_flag)).cast_ptr<_1b294d956_Flag>((jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data2);;
				(*((*(_24317_ff))._field_data))=({
					auto except = _1b9a8e551_ParseFloat(_2209_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1ad4b6160_CommonFlagMptrData*)(*(_21235_flag)).safe_type())->_1ad48501e_Name((*(_21235_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type4)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data4)) {
			_case_begin_1b29675eb:;
			{
				(*((*((*(_21235_flag)).cast_ptr<_1b2955771_Flag>((jule::Trait::Type*)&_1ad4b6160_CommonFlag_mptr_data4)))._field_data))=_2209_data;
			}
		}
		_match_end_1b2966ce3:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad4bb53e_singleDash(_1ad4ba6e7_argParser* _self_, jule::Str* _25230_arg) {
	if (((*(_25230_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25230_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	{
		auto expr = (*(_25230_arg)).slice(1LL);
		char *it = expr.operator char*();
		const char *end = it + expr.len();
		std::size_t len;
		jule::I32 _25716_r;
		_iter_begin_1b268a044:;
		std::tie(_25716_r, len) = jule::utf8_decode_rune_str(it, end - it);
		if (it < end) {
			{
				jule::Trait _25817_flag = _1ad4b8816_FindFlagShort(&(*(_self_))._field_set, _25716_r);;
				if ((_25817_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25230_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + jule::Str::from_rune(_25716_r)), &__jule_any_type4)};
				};
				({
					auto except = _1ad4bb286_processFlag(_self_, &(_25817_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1b268a044:;
			it += len;
			goto _iter_begin_1b268a044;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad4bb7e7_doubleDash(_1ad4ba6e7_argParser* _self_, jule::Str* _26630_arg) {
	if (((*(_26630_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26630_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type4)};
	};
	jule::Trait _27013_flag = _1ad4b84c5_FindFlag(&(*(_self_))._field_set, (*(_26630_arg)).slice(2LL));;
	if ((_27013_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26630_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type4)};
	};
	return _1ad4bb286_processFlag(_self_, &(_27013_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad4bb9e5_tryArg(_1ad4ba6e7_argParser* _self_) {
	jule::Str _2789_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2789_arg[0LL] == '-')) {
		if (((_2789_arg.len() > 1LL) && (_2789_arg[1LL] == '-'))) {
			({
				auto except = _1ad4bb7e7_doubleDash(_self_, &(_2789_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1ad4bb53e_singleDash(_self_, &(_2789_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2789_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad4bbbe3_parse(_1ad4ba6e7_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ad4bb9e5_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1b2979410:;
	}
	_iter_end_1b2979410:;;
	return jule::VoidExceptional{};
}





std::ostream &operator<<(std::ostream &_Stream, _1ad4ba6e7_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad42eb78_ObjectCoder> static__1ad430074_New(jule::Ptr<_1ac92a43d_IR>* _11524_ir, _1ad42cdc9_SerializationInfo _11533_info) {
	jule::Ptr<_1ad42eb78_ObjectCoder> _11613_oc = jule::new_ptr<_1ad42eb78_ObjectCoder>(_1ad42eb78_ObjectCoder{._field_ir=(*(_11524_ir)), ._field_info=_11533_info, });;
	(*(_11613_oc))._field_ec=static__1ad35e800_new(&(_11613_oc));
	(*_11613_oc.alloc)._field_sc=static__1ad354460_new(&(_11613_oc));
	(*_11613_oc.alloc)._field_tc=static__1ad43ee63_new(&(_11613_oc));
	return _11613_oc;;
}



inline void _1ad43032c_write(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Str _12625_s) {
	_209e0de79_WriteStr(&(*(_self_))._field_Buf, _12625_s);
}



inline void _1ad4305d5_writeBytes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _13030_b) {
	_209e0dbc1_Write(&(*(_self_))._field_Buf, _13030_b);
}



inline void _1ad4307d3_addIndent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,jule::Slice<jule::U8>::make({9LLU}));
}



inline void _1ad4309d1_doneIndent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1ad430bce_indent(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_209e0dbc1_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
}



inline jule::I32 _1ad431020_findAnyType(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind>* _14936_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2838ce7:;
		if (it != expr_end) {
			jule::I32 _15014_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _15021_at = *it;
			{
				if (_1abe43539_Equal(_15021_at, (*(_14936_t)))) {
					return _15014_i;;
				};
			}
			_iter_next_1b2838ce7:;
			++it;
			_15014_i++;
			goto _iter_begin_1b2838ce7;
		}
		_iter_end_1b2838ce7:;
	};
	return -1LL;;
}



inline jule::I32 _1ad431361_pushDealloc(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _15835_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b283a249:;
		if (it != expr_end) {
			jule::I32 _15913_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _15916_dt = *it;
			{
				if (_1abe43539_Equal(_15916_dt, _15835_t)) {
					return _15913_i;;
				};
			}
			_iter_next_1b283a249:;
			++it;
			_15913_i++;
			goto _iter_begin_1b283a249;
		}
		_iter_end_1b283a249:;
	};
	jule::I32 _1649_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::make({_15835_t}));
	_209e0de79_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
	_209e0de79_WriteStr(&(*_self_.alloc)._field_deallocObj, _1b9a9e40c_Itoa(_1649_i));
	_209e0de79_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
	_1ad444b16_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _15835_t);
	_209e0de79_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
	return _1649_i;;
}



inline jule::Str _1ad4316a2_pushAnonFn(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _17435_m) {
	jule::Str __jule_func_result;
	jule::Bool _1759_closure = _1ac935190_IsClosure(_17435_m);;
	if (_1759_closure) {
		_209e0de79_WriteStr(&(*(_self_))._field_anonObj, jule::Str::lit("struct ", 7));
		jule::I32 _17913_l = _209e0ec05_Len(&(*_self_.alloc)._field_anonObj);;
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17435_m))))._field_Func)), 15LL));
		__jule_func_result=static_cast<jule::Str>(_209e10222_Buf(&(*_self_.alloc)._field_anonObj).slice(_17913_l));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
		{
			auto expr = &((*((*(_17435_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2841ad0:;
			if (it != expr_end) {
				jule::Ptr<_1abda8d2e_Var> _18425_v = *it;
				{
					_209e0e232_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
					_1ad444b16_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_18425_v))._field_Kind))._field_Kind);
					_209e0e232_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
					if ((*_18425_v.alloc)._field_Reference) {
						_209e0e232_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
					};
					static__1ad37531b_var(&((*_self_.alloc)._field_anonObj), _18425_v);
					_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b2841ad0:;
				++it;
				goto _iter_begin_1b2841ad0;
			}
			_iter_end_1b2841ad0:;
		};
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_17435_m))))._field_Func)), 15LL);
	};
	(*(_self_))._field_anons=jule::append((*_self_.alloc)._field_anons,jule::Slice<jule::Ptr<_1ad42d6c1_anonHash>>::make({jule::new_ptr<_1ad42d6c1_anonHash>(_1ad42d6c1_anonHash{._field_expr=(*(_17435_m)), ._field_ident=__jule_func_result})}));
	_1ad437aa4_anonFuncInsDecl(_self_, _17435_m, __jule_func_result);
	_209e0e232_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
	return __jule_func_result;;
}



inline jule::I32 _1ad4319e3_pushAnyType(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abe42d30_TypeKind> _21435_t) {
	if ((_1abe45c34_Enum(_21435_t.ptr()) != nullptr)) {
		_21435_t=(*((*(_1abe45c34_Enum(_21435_t)))._field_Kind))._field_Kind;
	};
	jule::I32 _21813_i = _1ad431020_findAnyType(_self_, &(_21435_t));;
	if ((_21813_i != -1LL)) {
		return _21813_i;;
	};
	_21813_i=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::make({_21435_t}));
	jule::Str _2249_si = _1b9a9e40c_Itoa(_21813_i);;
	if ((_1abe45717_Sptr(_21435_t) != nullptr)) {
		_209e0d4d9_StrBuilder _22617_elemKind = static__209e0d918_New(40LL);;
		_1ad444b16_kind((*_self_.alloc)._field_tc.ptr(), &(_22617_elemKind), (*(_1abe45717_Sptr(_21435_t)))._field_Elem);
		jule::I32 _23013_di = _1ad431361_pushDealloc(_self_, (*(_1abe45717_Sptr(_21435_t)))._field_Elem);;
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _1b9a9e40c_Itoa(_23013_di));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 50));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
		_1ad440d10_asSptr((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_anyObj), _209e10222_Buf(&_22617_elemKind));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _24913_comparable = _1abe4442a_Comparable(_21435_t);;
		_209e0d4d9_StrBuilder _25017_kindB = static__209e0d918_New(40LL);;
		_1ad444b16_kind((*_self_.alloc)._field_tc.ptr(), &(_25017_kindB), _21435_t);
		jule::Slice<jule::U8> _25213_kind = _209e10222_Buf(&_25017_kindB);;
		jule::I32 _25513_di = _1ad431361_pushDealloc(_self_, _21435_t);;
		if (_24913_comparable) {
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc) == *reinterpret_cast<", 31));
			_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(other); }\n", 13));
		};
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1abe4599d_Ptr(_21435_t) == nullptr)) {
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
			_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
		} else {
			_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
		};
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _1b9a9e40c_Itoa(_25513_di));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", ", 2));
		if (_24913_comparable) {
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".eq=__jule_any_type", 19));
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, ", 5));
		};
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(".to_str=__jule_any_type", 23));
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
		_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
		if (_24913_comparable) {
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _25213_kind);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_any_type", 19));
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _2249_si);
			_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _21813_i;;
}



inline void _1ad431c9b_pushResultIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _31338_f) {
	jule::Str _3149_s = static_cast<jule::Str>(_1ad449dc4_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_31338_f))))._field_Result)));;
	jule::Bool _31512_ok;
	(*_self_.alloc)._field_resultMap.lookup(_3149_s, nullptr, &(_31512_ok));
	if (_31512_ok) {
		return;;
	};
	(*_self_.alloc)._field_resultMap[_3149_s]=false;
	_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
	_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, _3149_s);
	_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
	{
		auto expr = &((*(_1abe472a7_Tup((*((*(_31338_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2866220:;
		if (it != expr_end) {
			jule::I32 _32314_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> _32321_t = *it;
			{
				_209e0e232_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
				_1ad444b16_kind((*_self_.alloc)._field_tc, &((*_self_.alloc)._field_resultDecls), _32321_t);
				_209e0e232_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
				_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
				_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, _1b9a9e40c_Itoa(_32314_i));
				_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b2866220:;
			++it;
			_32314_i++;
			goto _iter_begin_1b2866220;
		}
		_iter_end_1b2866220:;
	};
	_209e0de79_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
}



inline void _1ad432054_pushResult(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _33435_f) {
	if ((_1abd56b23_IsVoid((*(_33435_f)).ptr()) || ((*((*((*(_33435_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _33813_n = (*((*(_33435_f))))._field_Instances.len();;
	if (((*((*(_33435_f))))._field_Generics.len() == 0LL)) {
		_33813_n=1LL;
	};
	{
		auto expr = (*((*(_33435_f))))._field_Instances.slice(0LL, _33813_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b286b2be:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _34221_ins = *it;
			{
				_1ad431c9b_pushResultIns(_self_, &(_34221_ins));
			}
			_iter_next_1b286b2be:;
			++it;
			goto _iter_begin_1b286b2be;
		}
		_iter_end_1b286b2be:;
	};
}



inline void _1ad4323b7_pushAndWriteMaskMapper(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait> _34746_t1, jule::Ptr<_1abd69a59_Trait> _34762_t2) {
	_209e0d4d9_StrBuilder _34813_ident = static__209e0d918_New(32LL);;
	_209e0de79_WriteStr(&_34813_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
	_209e0de79_WriteStr(&_34813_ident, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34762_t2)), 15LL));
	_209e0de79_WriteStr(&_34813_ident, jule::Str::lit("_to_", 4));
	_209e0de79_WriteStr(&_34813_ident, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_34746_t1)), 15LL));
	_209e0dbc1_Write(&(*(_self_))._field_Buf, _209e10222_Buf(&_34813_ident));
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b286e13a:;
		if (it != expr_end) {
			_1ad42d2e7_traitCast _35616_m = *it;
			{
				if (((_35616_m._field_t1 == _34746_t1) && (_35616_m._field_t2 == _34762_t2))) {
					return;;
				};
			}
			_iter_next_1b286e13a:;
			++it;
			goto _iter_begin_1b286e13a;
		}
		_iter_end_1b286e13a:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,jule::Slice<_1ad42d2e7_traitCast>::make({_1ad42d2e7_traitCast{._field_t1=_34746_t1, ._field_t2=_34762_t2}}));
	;
	_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
	_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _209e10222_Buf(&_34813_ident));
	_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
	_209e0d4d9_StrBuilder _37013_t1Ident = static__209e0d918_New(16LL);;
	_209e0d4d9_StrBuilder _37113_t2Ident = static__209e0d918_New(16LL);;
	static__1ad374381_traitDecl(&(_37013_t1Ident), _34746_t1);
	static__1ad374381_traitDecl(&(_37113_t2Ident), _34762_t2);
	{
		auto expr = &((*(_34746_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b286e756:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _37521_s1 = *it;
			{
				{
					auto expr = &((*(_34762_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2873738:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _37620_s2 = *it;
						{
							if ((_37521_s1 == _37620_s2)) {
								{
									auto expr = &((*(_37521_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b28745c4:;
									if (it != expr_end) {
										jule::Ptr<_1abd4445c_StructIns> _37833_s1i = *it;
										{
											jule::I32 _37925_i1 = _1ac93747d_FindTraitTypeOffsetS(_34746_t1, _37833_s1i);;
											jule::I32 _38025_i2 = _1ac93747d_FindTraitTypeOffsetS(_34762_t2, _37833_s1i);;
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
											_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _209e10222_Buf(&_37113_t2Ident));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _1b9a9e40c_Itoa(_38025_i2));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
											_209e0dbc1_Write(&(*_self_.alloc)._field_anyObj, _209e10222_Buf(&_37013_t1Ident));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, _1b9a9e40c_Itoa(_37925_i1));
											_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
										}
										_iter_next_1b28745c4:;
										++it;
										goto _iter_begin_1b28745c4;
									}
									_iter_end_1b28745c4:;
								};
							};
						}
						_iter_next_1b2873738:;
						++it;
						goto _iter_begin_1b2873738;
					}
					_iter_end_1b2873738:;
				};
			}
			_iter_next_1b286e756:;
			++it;
			goto _iter_begin_1b286e756;
		}
		_iter_end_1b286e756:;
	};
	_209e0de79_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" jule::panic(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 114));
}



inline void _1ad432670_locInfo(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd0a38a_Token>* _39828_t) {
	jule::Str *_39910_loc = &((*((*((*(_39828_t))))._field_File))._field_Path);;
	if (_1eb3d059c_Production) {
		{
			
			if (_20b0d9dce_HasPrefix((*(_39910_loc)), _20b1a024c_PathStdlib)) {
				_case_begin_1b2879a80:;
				{
					_1ad36cdb3_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)).slice((_20b0e5bed_Dir(_20b1a024c_PathStdlib).len() + 1LL)));
				}
			}
			else if (_20b0d9dce_HasPrefix((*(_39910_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1b2879b6d:;
				{
					_1ad36cdb3_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_39910_loc)).slice((_20b0e5bed_Dir((*(*_self_.alloc)._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b28796b7:;
				{
					_1ad36cdb3_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)));
				}
			}
			_match_end_1b28795eb:;
		};
	} else {
		_1ad36cdb3_cstrBytes(&((*(_self_))._field_Buf), (*(_39910_loc)));
	};
	_1ad43032c_write(_self_, jule::Str::lit(":", 1));
	_1ad43032c_write(_self_, _1b9a9e40c_Itoa((*((*(_39828_t))))._field_Row));
	_1ad43032c_write(_self_, jule::Str::lit(":", 1));
	_1ad43032c_write(_self_, _1b9a9e40c_Itoa((*((*(_39828_t))))._field_Column));
}



inline void _1ad43286d_head(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad4245eb_Time _4259_time = static__1ad424bb2_Now();;
	_1ad423e25_AbsTime _4269_abs = _1ad42639a_Abs(&_4259_time);;
	_1ad43032c_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ad43032c_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ad43032c_write(_self_, jule::Str::lit("jule0.0.16 @master", 18));
	_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
	_1ad43032c_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ad43032c_write(_self_, _1b9a9dc7a_FmtUint(_4269_abs._field_Day, 10LL));
	_1ad43032c_write(_self_, jule::Str::lit("/", 1));
	_1ad43032c_write(_self_, _1b9a9dc7a_FmtUint(_4269_abs._field_Month, 10LL));
	_1ad43032c_write(_self_, jule::Str::lit("/", 1));
	_1ad43032c_write(_self_, _1b9a9dc7a_FmtUint(_4269_abs._field_Year, 10LL));
	_1ad43032c_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ad43032c_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
	_1ad43032c_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1eb3d059c_Production) {
		_1ad43032c_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1eb3cee92_RC))) {
		_1ad43032c_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1eb3d035a_Safety))) {
		_1ad43032c_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ad432a6b_links(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ad43032c_write(_self_, _20b1a0a00_PathApi);
	_1ad43032c_write(_self_, jule::Str::lit("\"\n\n", 3));
}



inline void _1ad432a6b_links(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28861c9:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _46316_used = *it;
			{
				{
					
					if ((!((*(_46316_used))._field_Binded))) {
						_case_begin_1b2886edd:;
						{
							goto _iter_next_1b28861c9;
						}
					}
					else if (_1eb221a1a_IsStdHeaderPath((*(_46316_used))._field_Path)) {
						_case_begin_1b2887076:;
						{
							_1ad43032c_write(_self_, jule::Str::lit("#include ", 9));
							_1ad43032c_write(_self_, (*_46316_used.alloc)._field_Path);
							_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1eb221ce5_IsValidHeaderExt(_20b0e5291_Ext((*(_46316_used))._field_Path))) {
						_case_begin_1b28870dc:;
						{
							_1ad43032c_write(_self_, jule::Str::lit("#include \"", 10));
							_1ad43032c_write(_self_, (*_46316_used.alloc)._field_Path);
							_1ad43032c_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1b2886d9a:;
				};
			}
			_iter_next_1b28861c9:;
			++it;
			goto _iter_begin_1b28861c9;
		}
		_iter_end_1b28861c9:;
	};
}



inline void _1ad432d24_prepareStructure(_1ad42eb78_ObjectCoder* _self_, jule::Ptr<_1abd416ce_Struct>* _47940_s) {
	{
		auto expr = &((*((*(_47940_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2888dbe:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _48021_ins = *it;
			{
				{
					auto expr = &((*(_48021_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b288a80a:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _48125_m = *it;
						{
							if ((*(_48125_m))._field_Statically) {
								goto _iter_next_1b288a80a;
							};
							{
								auto expr = &((*_48125_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b288b2de:;
								if (it != expr_end) {
									jule::Ptr<_1abd59681_FnIns> _48529_mins = *it;
									{
										jule::Ptr<_1abd58608_ParamIns> _48625_p = (*(_48529_mins))._field_Params[0LL];;
										_209e0d4d9_StrBuilder _48725_kind = static__209e0d918_New(40LL);;
										_1ad444b16_kind((*(_self_))._field_tc.ptr(), &(_48725_kind), (*(_48625_p))._field_Kind);
										if ((!(_1abd5557d_IsRef((*_48625_p.alloc)._field_Decl.ptr())))) {
											_209e0de79_WriteStr(&_48725_kind, jule::Str::lit("*", 1));
										};
										(*_48625_p.alloc)._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1ad43dd0d_customType>(_1ad43dd0d_customType{._field_kind=_209e0e771_Str(&_48725_kind)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data27)});
									}
									_iter_next_1b288b2de:;
									++it;
									goto _iter_begin_1b288b2de;
								}
								_iter_end_1b288b2de:;
							};
						}
						_iter_next_1b288a80a:;
						++it;
						goto _iter_begin_1b288a80a;
					}
					_iter_end_1b288a80a:;
				};
			}
			_iter_next_1b2888dbe:;
			++it;
			goto _iter_begin_1b2888dbe;
		}
		_iter_end_1b2888dbe:;
	};
}



inline void _1ad433022_prepareStructures(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b288a772:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _50321_s = *it;
			{
				if (((*(_50321_s))._field_Token != nullptr)) {
					_1ad432d24_prepareStructure(_self_.ptr(), &(_50321_s));
				};
			}
			_iter_next_1b288a772:;
			++it;
			goto _iter_begin_1b288a772;
		}
		_iter_end_1b288a772:;
	};
}



inline void _1ad4332ca_structurePlainDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _51043_s) {
	{
		auto expr = &((*((*(_51043_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2890931:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _51121_ins = *it;
			{
				_1ad43032c_write(_self_, jule::Str::lit("struct ", 7));
				static__1ad374c44_structureIns(&((*_self_.alloc)._field_Buf), &(_51121_ins));
				_1ad43032c_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b2890931:;
			++it;
			goto _iter_begin_1b2890931;
		}
		_iter_end_1b2890931:;
	};
}



inline void _1ad4334c8_structurePlainDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2891e1b:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _51921_s = *it;
			{
				if (((*(_51921_s))._field_Token != nullptr)) {
					_1ad4332ca_structurePlainDecl(_self_, &(_51921_s));
				};
			}
			_iter_next_1b2891e1b:;
			++it;
			goto _iter_begin_1b2891e1b;
		}
		_iter_end_1b2891e1b:;
	};
}



inline void _1ad433781_fieldDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd438ac_FieldIns>* _52634_f) {
	_1ad444b16_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_52634_f))))._field_Kind);
	_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
	static__1ad375030_field(&((*_self_.alloc)._field_Buf), &((*((*(_52634_f))))._field_Decl));
	if (((*((*(_52634_f))))._field_Default == nullptr)) {
		if (_1ad44b733_shouldInitialized(&((*((*(_52634_f))))._field_Kind))) {
			_1ad43032c_write(_self_, jule::Str::lit(" = ", 3));
			_1ad36c401_initExpr((*_self_.alloc)._field_ec, (*((*(_52634_f))))._field_Kind);
		};
	} else {
		_1ad43032c_write(_self_, jule::Str::lit(" = ", 3));
		_1ad36277b_possibleRefExpr((*_self_.alloc)._field_ec, (*((*((*(_52634_f))))._field_Default))._field_Model);
	};
	_1ad43032c_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad433a39_structureDestructor(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _54444_s) {
	;
	jule::Ptr<_1abd566a0_Fn> _5479_disposeMethod = _1abd454c4_FindMethod((*(_54444_s)).ptr(), jule::Str::lit("Dispose", 7), false);;
	jule::Bool _54813_disposed = static__1abdaa2c5_Dispose(_5479_disposeMethod);;
	if ((!(_54813_disposed))) {
		return;;
	};
	_1ad43032c_write(_self_, jule::Str::lit("~", 1));
	static__1ad374c44_structureIns(&((*_self_.alloc)._field_Buf), _54444_s);
	_1ad43032c_write(_self_, jule::Str::lit("(void) { ", 9));
	static__1ad373ca9_func(&((*_self_.alloc)._field_Buf), &(_5479_disposeMethod));
	_1ad43032c_write(_self_, jule::Str::lit("(this); }", 9));
}



inline void _1ad433d9c_structureOperatorEq(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _56039_ident, jule::Ptr<_1abd4445c_StructIns>* _56059_s) {
	if ((!((*((*(_56059_s))))._field_Comparable))) {
		return;;
	};
	if (((*((*(_56059_s))))._field_Operators._field_Eq != nullptr)) {
		_1ad43462d_structureOperator(_self_, _56039_ident, &((*((*(_56059_s))))._field_Operators._field_Eq), jule::Str::lit("==", 2));
		return;;
	};
	_1ad430bce_indent(_self_);
	if (_1ac953ca2_Inline) {
		_1ad43032c_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad43032c_write(_self_, jule::Str::lit("bool operator==(", 16));
	_1ad4305d5_writeBytes(_self_, _56039_ident);
	_1ad43032c_write(_self_, jule::Str::lit(" _other) {", 10));
	if (((*((*(_56059_s))))._field_Fields.len() > 0LL)) {
		_1ad4307d3_addIndent(_self_);
		_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
		_1ad430bce_indent(_self_);
		_1ad43032c_write(_self_, jule::Str::lit("return ", 7));
		_1ad4307d3_addIndent(_self_);
		jule::Bool _58317_writed = false;;
		{
			auto expr = &((*((*(_56059_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b28a0006:;
			if (it != expr_end) {
				jule::Ptr<_1abd438ac_FieldIns> _58425_f = *it;
				{
					jule::Ptr<_1abd4445c_StructIns> _58617_strct = _1abe46a04_Struct((*(_58425_f))._field_Kind.ptr());;
					if ((((_58617_strct != nullptr) && ((*_58617_strct.alloc)._field_Decl != nullptr)) && (*(*_58617_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						goto _iter_next_1b28a0006;
					};
					if (_58317_writed) {
						_1ad43032c_write(_self_, jule::Str::lit(" &&", 3));
					};
					_58317_writed=true;
					_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
					_1ad430bce_indent(_self_);
					_1ad43032c_write(_self_, jule::Str::lit("this->", 6));
					_209e0d4d9_StrBuilder _59721_fIdent = static__209e0d918_New((*((*_58425_f.alloc)._field_Decl))._field_Ident.len());;
					static__1ad375030_field(&(_59721_fIdent), &((*_58425_f.alloc)._field_Decl));
					_1ad4305d5_writeBytes(_self_, _209e10222_Buf(&_59721_fIdent));
					_1ad43032c_write(_self_, jule::Str::lit(" == _other.", 11));
					_1ad4305d5_writeBytes(_self_, _209e10222_Buf(&_59721_fIdent));
				}
				_iter_next_1b28a0006:;
				++it;
				goto _iter_begin_1b28a0006;
			}
			_iter_end_1b28a0006:;
		};
		_1ad4309d1_doneIndent(_self_);
		if ((!(_58317_writed))) {
			_1ad43032c_write(_self_, jule::Str::lit("true", 4));
		};
		_1ad43032c_write(_self_, jule::Str::lit(";\n", 2));
		_1ad4309d1_doneIndent(_self_);
		_1ad430bce_indent(_self_);
		_1ad43032c_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ad43032c_write(_self_, jule::Str::lit(" return true; }", 15));
	};
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ad434210_structureOperatorNotEq(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _61742_ident, jule::Ptr<_1abd4445c_StructIns>* _61762_s) {
	if ((!((*((*(_61762_s))))._field_Comparable))) {
		return;;
	};
	_1ad430bce_indent(_self_);
	if (_1ac953ca2_Inline) {
		_1ad43032c_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ad43032c_write(_self_, jule::Str::lit("bool operator!=(", 16));
	_1ad4305d5_writeBytes(_self_, _61742_ident);
	_1ad43032c_write(_self_, jule::Str::lit(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1ad43462d_structureOperator(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Slice<jule::U8> _63137_ident, jule::Ptr<_1abd59681_FnIns>* _63157_f, jule::Str _63168_op) {
	if (((*(_63157_f)) == nullptr)) {
		return;;
	};
	jule::Bool _6369_unary = ((*((*(_63157_f))))._field_Params.len() == 1LL);;
	jule::Bool _6379_assignment = _1abd56b23_IsVoid((*((*(_63157_f))))._field_Decl.ptr());;
	_1ad430bce_indent(_self_);
	if (_1ac953ca2_Inline) {
		_1ad43032c_write(_self_, jule::Str::lit("inline ", 7));
	};
	if (_6379_assignment) {
		_1ad4305d5_writeBytes(_self_, _63137_ident);
		_1ad43032c_write(_self_, jule::Str::lit("&", 1));
	} else {
		if ((_1abe45481_Prim((*((*(_63157_f))))._field_Result.ptr()) == nullptr)) {
			_1ad4305d5_writeBytes(_self_, _63137_ident);
		} else {
			_1ad43032c_write(_self_, jule::Str::lit("jule::Bool", 10));
		};
	};
	_1ad43032c_write(_self_, jule::Str::lit(" operator", 9));
	_1ad43032c_write(_self_, _63168_op);
	_1ad43032c_write(_self_, jule::Str::lit("(", 1));
	if ((!(_6369_unary))) {
		jule::Ptr<_1abd58608_ParamIns> _65917_p = (*((*(_63157_f))))._field_Params[1LL];;
		_1ad443906_paramIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), &(_65917_p));
		_1ad43032c_write(_self_, jule::Str::lit(" _other", 7));
	};
	_1ad43032c_write(_self_, jule::Str::lit(") { ", 4));
	if ((!(_6379_assignment))) {
		_1ad43032c_write(_self_, jule::Str::lit("return ", 7));
	};
	static__1ad374095_funcIns(&((*_self_.alloc)._field_Buf), _63157_f);
	if ((!(_6369_unary))) {
		_1ad43032c_write(_self_, jule::Str::lit("(this, _other); ", 16));
		if (_6379_assignment) {
			_1ad43032c_write(_self_, jule::Str::lit("return *this; ", 14));
		};
		_1ad43032c_write(_self_, jule::Str::lit("}", 1));
	} else {
		_1ad43032c_write(_self_, jule::Str::lit("(this); }", 9));
	};
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
}



inline void _1ad4348d6_structureOperators(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _68043_s) {
	_209e0d4d9_StrBuilder _68113_sb = static__209e0d918_New(40LL);;
	static__1ad374c44_structureIns(&(_68113_sb), _68043_s);
	jule::Slice<jule::U8> _6839_ident = _209e10222_Buf(&_68113_sb);;
	_1ad433d9c_structureOperatorEq(_self_, _6839_ident, _68043_s);
	_1ad434210_structureOperatorNotEq(_self_, _6839_ident, _68043_s);
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Gt), jule::Str::lit(">", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_GtEq), jule::Str::lit(">=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Lt), jule::Str::lit("<", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_LtEq), jule::Str::lit("<=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Shl), jule::Str::lit("<<", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Shr), jule::Str::lit(">>", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Add), jule::Str::lit("+", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Sub), jule::Str::lit("-", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Div), jule::Str::lit("/", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Mul), jule::Str::lit("*", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Mod), jule::Str::lit("%", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitAnd), jule::Str::lit("&", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitOr), jule::Str::lit("|", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitXor), jule::Str::lit("^", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Neg), jule::Str::lit("-", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_Pos), jule::Str::lit("+", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitNot), jule::Str::lit("~", 1));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_AddAssign), jule::Str::lit("+=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_SubAssign), jule::Str::lit("-=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_DivAssign), jule::Str::lit("/=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_MulAssign), jule::Str::lit("*=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ModAssign), jule::Str::lit("%=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ShlAssign), jule::Str::lit("<<=", 3));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_ShrAssign), jule::Str::lit(">>=", 3));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitOrAssign), jule::Str::lit("|=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitAndAssign), jule::Str::lit("&=", 2));
	_1ad43462d_structureOperator(_self_, _6839_ident, &((*((*(_68043_s))))._field_Operators._field_BitXorAssign), jule::Str::lit("^=", 2));
}



inline void _1ad434b8e_structureInsDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _72141_s) {
	{
		auto expr = &((*((*(_72141_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28c2c0a:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _72221_m = *it;
			{
				if (_1ad43c878_isHeadDecl(&(_72221_m))) {
					_1ad435ee2_funcDecl(_self_, &(_72221_m), false);
				};
			}
			_iter_next_1b28c2c0a:;
			++it;
			goto _iter_begin_1b28c2c0a;
		}
		_iter_end_1b28c2c0a:;
	};
	_1ad43032c_write(_self_, jule::Str::lit("struct ", 7));
	static__1ad374c44_structureIns(&((*_self_.alloc)._field_Buf), _72141_s);
	_1ad43032c_write(_self_, jule::Str::lit(" {\n", 3));
	_1ad4307d3_addIndent(_self_);
	{
		auto expr = &((*((*(_72141_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28c3513:;
		if (it != expr_end) {
			jule::Ptr<_1abd438ac_FieldIns> _73321_f = *it;
			{
				_1ad430bce_indent(_self_);
				_1ad433781_fieldDecl(_self_, &(_73321_f));
				_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1b28c3513:;
			++it;
			goto _iter_begin_1b28c3513;
		}
		_iter_end_1b28c3513:;
	};
	_1ad430bce_indent(_self_);
	_1ad433a39_structureDestructor(_self_, _72141_s);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad4348d6_structureOperators(_self_, _72141_s);
	_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
	_1ad4309d1_doneIndent(_self_);
	_1ad430bce_indent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("};", 2));
}



inline void _1ad434e47_structureDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _75138_s) {
	{
		auto expr = &((*((*(_75138_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28c8271:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _75221_ins = *it;
			{
				_1ad434b8e_structureInsDecl(_self_, &(_75221_ins));
			}
			_iter_next_1b28c8271:;
			++it;
			goto _iter_begin_1b28c8271;
		}
		_iter_end_1b28c8271:;
	};
}



inline void _1ad435145_structureDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28c89e1:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _75821_s = *it;
			{
				if (((*(_75821_s))._field_Token != nullptr)) {
					_1ad434e47_structureDecl(_self_, &(_75821_s));
					_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1b28c89e1:;
			++it;
			goto _iter_begin_1b28c89e1;
		}
		_iter_end_1b28c89e1:;
	};
}



inline void _1ad435343_structureMethodDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28c9a03:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _76721_s = *it;
			{
				if (((*(_76721_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_76721_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b28cbac1:;
						if (it != expr_end) {
							jule::Ptr<_1abd4445c_StructIns> _76929_ins = *it;
							{
								{
									auto expr = &((*(_76929_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b28cc50b:;
									if (it != expr_end) {
										jule::Ptr<_1abd566a0_Fn> _77033_m = *it;
										{
											if ((!(_1ad43c878_isHeadDecl(&(_77033_m))))) {
												_1ad432054_pushResult(_self_, &(_77033_m));
												_1ad435ee2_funcDecl(_self_, &(_77033_m), false);
											};
										}
										_iter_next_1b28cc50b:;
										++it;
										goto _iter_begin_1b28cc50b;
									}
									_iter_end_1b28cc50b:;
								};
							}
							_iter_next_1b28cbac1:;
							++it;
							goto _iter_begin_1b28cbac1;
						}
						_iter_end_1b28cbac1:;
					};
				};
			}
			_iter_next_1b28c9a03:;
			++it;
			goto _iter_begin_1b28c9a03;
		}
		_iter_end_1b28c9a03:;
	};
}



inline void _1ad43581b_funcHead(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _78533_buf, jule::Ptr<_1abd59681_FnIns>* _78555_f, jule::Bool _78566_ptr, jule::Str _78577_ident) {
	if ((((!(_78566_ptr)) && _1ac953ca2_Inline) && (!(_1abd57140_IsEntryPoint((*((*(_78555_f))))._field_Decl.ptr()))))) {
		_209e0de79_WriteStr(_78533_buf, jule::Str::lit("inline ", 7));
	};
	_1ad4440cc_funcInsResult((*(_self_))._field_tc.ptr(), _78533_buf, _78555_f);
	if (_78566_ptr) {
		_209e0de79_WriteStr(_78533_buf, jule::Str::lit("(*", 2));
		static__1ad374095_funcIns(_78533_buf, _78555_f);
		_209e0e232_WriteByte(_78533_buf, ')');
	} else {
		_209e0e232_WriteByte(_78533_buf, ' ');
		if ((_78577_ident).empty()) {
			static__1ad374095_funcIns(_78533_buf, _78555_f);
		} else {
			_209e0de79_WriteStr(_78533_buf, _78577_ident);
		};
	};
}



inline void _1ad435b7e_funcDeclIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _80436_f, jule::Bool _80447_ptr) {
	_1ad430bce_indent(_self_);
	_1ad43581b_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80436_f, _80447_ptr, jule::Str());
	_1ad437125_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80436_f);
	_1ad43032c_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ad435ee2_funcDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _81133_f, jule::Bool _81141_ptr) {
	{
		auto expr = &((*((*(_81133_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28d36ee:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _81221_c = *it;
			{
				_1ad435b7e_funcDeclIns(_self_, &(_81221_c), _81141_ptr);
			}
			_iter_next_1b28d36ee:;
			++it;
			goto _iter_begin_1b28d36ee;
		}
		_iter_end_1b28d36ee:;
	};
}



inline void _1ad43629a_funcDeclTrait(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _81738_f) {
	{
		auto expr = &((*((*(_81738_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28d4612:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _81821_c = *it;
			{
				jule::Ptr<_1abe42d30_TypeKind> _81917_k = (*((*(_81821_c))._field_Params[0LL]))._field_Kind;;
				(*((*_81821_c.alloc)._field_Params[0LL]))._field_Kind=_1ad42cb76_generalGCPtr;
				_1ad435b7e_funcDeclIns(_self_, &(_81821_c), true);
				(*((*_81821_c.alloc)._field_Params[0LL]))._field_Kind=_81917_k;
			}
			_iter_next_1b28d4612:;
			++it;
			goto _iter_begin_1b28d4612;
		}
		_iter_end_1b28d4612:;
	};
}



inline void _1ad436498_funcDecls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ac92cad3_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b28d7329, jule::Ptr<__jule_anon_1b28d7329_ctx>::make(__jule_anon_1b28d7329_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b28d7329_ctx_handler));
}



inline void _1ad436751_traitDataTypeMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _83945_t) {
	_1ac92d980_IterTraitMethods(_83945_t, jule::__new_closure<void,jule::Ptr<_1abd566a0_Fn>*>((void*)__jule_anon_1b28d8825, jule::Ptr<__jule_anon_1b28d8825_ctx>::make(__jule_anon_1b28d8825_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b28d8825_ctx_handler));
}



inline void _1ad43694e_traitDataTypes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ac92cad3_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b28dde35, jule::Ptr<__jule_anon_1b28dde35_ctx>::make(__jule_anon_1b28dde35_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b28dde35_ctx_handler));
}



inline void _1ad436cb2_paramIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _87533_buf, jule::Ptr<_1abd58608_ParamIns>* _87555_p) {
	_1ad443906_paramIns((*(_self_))._field_tc.ptr(), _87533_buf, _87555_p);
	_209e0e232_WriteByte(_87533_buf, ' ');
	static__1ad37466c_param(_87533_buf, &((*((*(_87555_p))))._field_Decl));
}



inline void _1ad437125_paramsIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _88134_buf, jule::Ptr<_1abd59681_FnIns>* _88156_f) {
	if (((!((*((*(_88156_f))))._field_AsAnon)) && ((*((*(_88156_f))))._field_Params.len() == 0LL))) {
		_209e0de79_WriteStr(_88134_buf, jule::Str::lit("(void)", 6));
		return;;
	};
	_209e0e232_WriteByte(_88134_buf, '(');
	if ((*((*(_88156_f))))._field_AsAnon) {
		_209e0de79_WriteStr(_88134_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
		if (((*((*(_88156_f))))._field_Params.len() > 0LL)) {
			_209e0de79_WriteStr(_88134_buf, jule::Str::lit(", ", 2));
		};
	};
	{
		auto expr = &((*((*(_88156_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28e74e3:;
		if (it != expr_end) {
			jule::I32 _89314_i = it - expr->begin();
			jule::Ptr<_1abd58608_ParamIns> _89321_p = *it;
			{
				_1ad436cb2_paramIns(_self_, _88134_buf, &(_89321_p));
				if ((((*((*(_88156_f))))._field_Params.len() - _89314_i) > 1LL)) {
					_209e0de79_WriteStr(_88134_buf, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1b28e74e3:;
			++it;
			_89314_i++;
			goto _iter_begin_1b28e74e3;
		}
		_iter_end_1b28e74e3:;
	};
	_209e0e232_WriteByte(_88134_buf, ')');
}



inline void _1ad437488_varInitExpr(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abda8d2e_Var>* _90236_v, jule::Fn<void> _90245_init) {
	if ((*((*(_90236_v))))._field_Statically) {
		_1ad43032c_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ad444b16_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90236_v))))._field_Kind))._field_Kind);
	_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90236_v))))._field_Reference) {
		_1ad43032c_write(_self_, jule::Str::lit("*", 1));
	};
	static__1ad37531b_var(&((*_self_.alloc)._field_Buf), (*(_90236_v)));
	if ((_90245_init != nullptr)) {
		_1ad43032c_write(_self_, jule::Str::lit(" = ", 3));
		_90245_init();
	};
	_1ad43032c_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ad437741_var(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abda8d2e_Var> _92027_v) {
	if (_1abd0cc72_IsIgnoreIdent((*(_92027_v))._field_Ident)) {
		return;;
	};
	if ((((*_92027_v.alloc)._field_Value != nullptr) && ((*(*_92027_v.alloc)._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*_92027_v.alloc)._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92027_v.alloc)._field_Reference) {
				_1ad437488_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1b28ee990, jule::Ptr<__jule_anon_1b28ee990_ctx>::make(__jule_anon_1b28ee990_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1b28ee990_ctx_handler));
			} else {
				_1ad437488_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1b2901a91, jule::Ptr<__jule_anon_1b2901a91_ctx>::make(__jule_anon_1b2901a91_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1b2901a91_ctx_handler));
			};
			return;;
		};
		_1ad437488_varInitExpr(_self_, &(_92027_v), nullptr);
		return;;
	};
	if ((*_92027_v.alloc)._field_Reference) {
		_1ad437488_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1b203a296, jule::Ptr<__jule_anon_1b203a296_ctx>::make(__jule_anon_1b203a296_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b203a296_ctx_handler));
		return;;
	};
	if (_1ad44b733_shouldInitialized(&((*((*_92027_v.alloc)._field_Kind))._field_Kind))) {
		_1ad437488_varInitExpr(_self_, &(_92027_v), jule::__new_closure<void>((void*)__jule_anon_1b203b3da, jule::Ptr<__jule_anon_1b203b3da_ctx>::make(__jule_anon_1b203b3da_ctx{._self_=_self_,._92027_v=_92027_v}).as<jule::Uintptr>(), __jule_anon_1b203b3da_ctx_handler));
		return;;
	};
	_1ad437488_varInitExpr(_self_, &(_92027_v), nullptr);
}



inline void _1ad437aa4_anonFuncInsDecl(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _95140_m, jule::Str _95161_ident) {
	_1ad43581b_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95140_m))))._field_Func), false, _95161_ident);
	_1ad437125_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95140_m))))._field_Func));
	_209e0e232_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
}



inline void _1ad437e17_anonFuncIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4b673_AnonFnExprModel>* _95736_m, jule::Str _95757_ident) {
	_1ad43581b_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95736_m))))._field_Func), false, _95757_ident);
	_1ad437125_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95736_m))))._field_Func));
	_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
	_1ad35a9a5_anonFuncScope((*_self_.alloc)._field_sc, (*(_95736_m)), _95757_ident);
	if (((*((*((*(_95736_m))))._field_Func))._field_Scope != nullptr)) {
		_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ad43827a_funcIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd59681_FnIns>* _96732_f, jule::Str _96743_ident) {
	_1ad43581b_funcHead(_self_, &((*_self_.alloc)._field_Buf), _96732_f, false, _96743_ident);
	_1ad437125_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _96732_f);
	_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
	_1ad35ac5d_funcScope((*_self_.alloc)._field_sc, (*(_96732_f)));
	if (((*((*(_96732_f))))._field_Scope != nullptr)) {
		_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ad438533_func(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _97729_f) {
	{
		auto expr = &((*((*(_97729_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2045092:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _97821_ins = *it;
			{
				_1ad43827a_funcIns(_self_, &(_97821_ins), jule::Str());
			}
			_iter_next_1b2045092:;
			++it;
			goto _iter_begin_1b2045092;
		}
		_iter_end_1b2045092:;
	};
}



inline void _1ad438896_funcTrait(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _98330_s, jule::Ptr<_1abd59681_FnIns>* _98350_f) {
	(*((*(_98350_f))))._field_Scope=nullptr;
	_209e0d4d9_StrBuilder _98613_nident = static__209e0d918_New(30LL);;
	_209e0de79_WriteStr(&_98613_nident, jule::Str::lit("__jule_trait_method_", 20));
	_209e0de79_WriteStr(&_98613_nident, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98350_f)))), 15LL));
	_209e0de79_WriteStr(&_98613_nident, jule::Str::lit("_", 1));
	_209e0de79_WriteStr(&_98613_nident, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98330_s)))), 15LL));
	jule::Ptr<_1abe42d30_TypeKind> _99213_k = (*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind;;
	(*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind=_1ad42cb76_generalGCPtr;
	_1ad43827a_funcIns(_self_, _98350_f, _209e0e771_Str(&_98613_nident));
	(*((*((*(_98350_f))))._field_Params[0LL]))._field_Kind=_99213_k;
}



inline __jule_tuple_x_1abd59681_FnIns__jule_tuple_bool _1ad438bd7_findTraitMetMap(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd566a0_Fn>* _99840_m) {
	__jule_tuple_x_1abd59681_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abd59681_FnIns> _99913_mins = (*((*(_99840_m))))._field_Instances[0LL];;
	{
		auto expr = &((*(_self_))._field_traitMetMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b204a85b:;
		if (it != expr_end) {
			jule::Ptr<_1abd59681_FnIns> _100018_f = it->first;
			{
				if (((((*((*(_100018_f))._field_Decl))._field_Public == (*((*(_99840_m))))._field_Public) && ((*(*_100018_f.alloc)._field_Decl.alloc)._field_Ident == (*((*(_99840_m))))._field_Ident)) && _1abd5a2a8_EqualFn(_100018_f, &(_99913_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100018_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b204a85b:;
			++it;
			goto _iter_begin_1b204a85b;
		}
		_iter_end_1b204a85b:;
	};
	__jule_func_result.__jule_result_arg0 = _99913_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1ad43904a_traitWrapper(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _101037_t, jule::Ptr<_1abd566a0_Fn>* _101053_m) {
	_julec_label_1b204d067:;
	{
		auto expr = &((*((*(_101037_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b204d210:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _101221_imp = *it;
			{
				jule::Ptr<_1abd59681_FnIns> _101317_mepf;
				jule::Bool _101323_exist;
				({
					__jule_tuple_x_1abd59681_FnIns__jule_tuple_bool __jule_assign_result = _1ad438bd7_findTraitMetMap(_self_, _101053_m);
					_101317_mepf = __jule_assign_result.__jule_result_arg0;
					_101323_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101323_exist) {
					jule::Slice<jule::Uintptr> _101621_vals = (*_self_.alloc)._field_traitMetMap[_101317_mepf];;
					{
						auto expr = &(_101621_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2050069:;
						if (it != expr_end) {
							jule::Uintptr _101724_val = *it;
							{
								if ((_101724_val == static_cast<jule::Uintptr>(_101221_imp))) {
									goto _iter_next_1b204d210;
								};
							}
							_iter_next_1b2050069:;
							++it;
							goto _iter_begin_1b2050069;
						}
						_iter_end_1b2050069:;
					};
					(*_self_.alloc)._field_traitMetMap[_101317_mepf]=jule::append(_101621_vals,jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101221_imp)}));
				} else {
					(*_self_.alloc)._field_traitMetMap[_101317_mepf]=jule::append(jule::Slice<jule::Uintptr>::alloc(0LL, 0LL, 0),jule::Slice<jule::Uintptr>::make({static_cast<jule::Uintptr>(_101221_imp)}));
				};
				{
					auto expr = &((*(_101221_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2050a5e:;
					if (it != expr_end) {
						jule::Ptr<_1abd4445c_StructIns> _102725_ins = *it;
						{
							_1ad438896_funcTrait(_self_, &(_102725_ins), &(_101317_mepf));
							jule::Ptr<_1abd566a0_Fn> _103021_sm = _1abd454c4_FindMethod(_102725_ins.ptr(), (*((*(_101053_m))))._field_Ident, false);;
							if (((_103021_sm == nullptr) || ((*(_103021_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1ad4307d3_addIndent(_self_);
							_1ad43032c_write(_self_, jule::Str::lit("{\n", 2));
							_1ad430bce_indent(_self_);
							if (((*((*(_101053_m))))._field_Exceptional || (!(_1abd56b23_IsVoid((*(_101053_m)).ptr()))))) {
								_1ad43032c_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1ad373ca9_func(&((*_self_.alloc)._field_Buf), &(_103021_sm));
							_1ad43032c_write(_self_, jule::Str::lit("(", 1));
							_1ad43032c_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1ad442dbc_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102725_ins);
							_1ad43032c_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _104717_ptr = (!(_1abd5557d_IsRef((*((*(_101053_m))))._field_Params[0LL].ptr())));;
							if (_104717_ptr) {
								_1ad43032c_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101053_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1b20576d1:;
								if (it != expr_end) {
									jule::Ptr<_1abd54bcb_Param> _105124_mp = *it;
									{
										_1ad43032c_write(_self_, jule::Str::lit(", ", 2));
										static__1ad37466c_param(&((*_self_.alloc)._field_Buf), &(_105124_mp));
									}
									_iter_next_1b20576d1:;
									++it;
									goto _iter_begin_1b20576d1;
								}
								_iter_end_1b20576d1:;
							};
							_1ad43032c_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1ad4309d1_doneIndent(_self_);
						}
						_iter_next_1b2050a5e:;
						++it;
						goto _iter_begin_1b2050a5e;
					}
					_iter_end_1b2050a5e:;
				};
			}
			_iter_next_1b204d210:;
			++it;
			goto _iter_begin_1b204d210;
		}
		_iter_end_1b204d210:;
	};
}



inline void _1ad439248_traitWrappers(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ac92cad3_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b2059a24, jule::Ptr<__jule_anon_1b2059a24_ctx>::make(__jule_anon_1b2059a24_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2059a24_ctx_handler));
}



inline void _1ad4395ab_traitDataMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _107641_t, jule::Ptr<_1abd4445c_StructIns> _107652_s) {
	_1ac92d980_IterTraitMethods(_107641_t, jule::__new_closure<void,jule::Ptr<_1abd566a0_Fn>*>((void*)__jule_anon_1b205adee, jule::Ptr<__jule_anon_1b205adee_ctx>::make(__jule_anon_1b205adee_ctx{._self_=_self_,._107652_s=_107652_s}).as<jule::Uintptr>(), __jule_anon_1b205adee_ctx_handler));
}



inline void _1ad4399c9_traitData(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd69a59_Trait>* _109334_t, jule::I32 _109345_i, jule::Ptr<_1abd4445c_StructIns>* _109358_s) {
	_209e0d4d9_StrBuilder _109413_ident = static__209e0d918_New((*((*(_109334_t))))._field_Ident.len());;
	static__1ad374381_traitDecl(&(_109413_ident), (*(_109334_t)));
	_1ad43032c_write(_self_, jule::Str::lit("static ", 7));
	_1ad4305d5_writeBytes(_self_, _209e10222_Buf(&_109413_ident));
	_1ad43032c_write(_self_, jule::Str::lit("MptrData ", 9));
	_1ad4305d5_writeBytes(_self_, _209e10222_Buf(&_109413_ident));
	_1ad43032c_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1ad43032c_write(_self_, _1b9a9e40c_Itoa(_109345_i));
	_1ad43032c_write(_self_, jule::Str::lit(" {\n", 3));
	_1ad4307d3_addIndent(_self_);
	_1ad430bce_indent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1ad43032c_write(_self_, _1b9a9e40c_Itoa(_1ad431361_pushDealloc(_self_, jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*(_109358_s)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)}))));
	_1ad43032c_write(_self_, jule::Str::lit(",\n", 2));
	_1ad4395ab_traitDataMethods(_self_, _109334_t, (*(_109358_s)));
	_1ad4309d1_doneIndent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1ad439bc7_traitDatas(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ac92cad3_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b2068879, jule::Ptr<__jule_anon_1b2068879_ctx>::make(__jule_anon_1b2068879_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2068879_ctx_handler));
}



inline void _1ad439dc5_globals(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20680c6:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _113021_v = *it;
			{
				_1ad444b16_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_113021_v))._field_Kind))._field_Kind);
				_1ad43032c_write(_self_, jule::Str::lit(" ", 1));
				static__1ad37531b_var(&((*_self_.alloc)._field_Buf), _113021_v);
				_1ad43032c_write(_self_, jule::Str::lit(" = ", 3));
				_1ad36c148_model((*_self_.alloc)._field_ec, (*((*((*_113021_v.alloc)._field_Value))._field_Data))._field_Model);
				_1ad43032c_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1b20680c6:;
			++it;
			goto _iter_begin_1b20680c6;
		}
		_iter_end_1b20680c6:;
	};
}



inline void _1ad43a0c3_decls(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad4334c8_structurePlainDecls(_self_);
	_1ad435145_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_209e0ec05_Len(&(*_self_.alloc)._field_Buf);
	_1ad435343_structureMethodDecls(_self_);
	_1ad436498_funcDecls(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad43694e_traitDataTypes(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_209e0ec05_Len(&(*_self_.alloc)._field_Buf);
	_1ad439248_traitWrappers(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad439bc7_traitDatas(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_209e0ec05_Len(&(*_self_.alloc)._field_Buf);
	_1ad439dc5_globals(_self_);
}



inline void _1ad43a37b_structureMethods(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _115841_s) {
	{
		auto expr = &((*((*(_115841_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20745ee:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _115921_f = *it;
			{
				_1ad438533_func(_self_, &(_115921_f));
				_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b20745ee:;
			++it;
			goto _iter_begin_1b20745ee;
		}
		_iter_end_1b20745ee:;
	};
}



inline void _1ad43a634_structureOstream(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _116541_s) {
	_1ad430bce_indent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	static__1ad374c44_structureIns(&((*_self_.alloc)._field_Buf), _116541_s);
	_1ad43032c_write(_self_, jule::Str::lit(" _Src) {\n", 9));
	_1ad4307d3_addIndent(_self_);
	_1ad430bce_indent(_self_);
	jule::Ptr<_1abd566a0_Fn> _117313_fts = _1abd454c4_FindMethod((*(_116541_s)).ptr(), jule::Str::lit("Str", 3), false);;
	if (static__1abdaa58e_Str(_117313_fts)) {
		_1ad43032c_write(_self_, jule::Str::lit("_Stream << ", 11));
		static__1ad373ca9_func(&((*_self_.alloc)._field_Buf), &(_117313_fts));
		_1ad43032c_write(_self_, jule::Str::lit("(&_Src);\n", 9));
	} else {
		_1ad43032c_write(_self_, jule::Str::lit("_Stream << \"", 12));
		_1ad36cdb3_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*((*(_116541_s))))._field_Decl))._field_Ident);
		_1ad43032c_write(_self_, jule::Str::lit("{\";\n", 4));
		{
			auto expr = &((*((*(_116541_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b207923b:;
			if (it != expr_end) {
				jule::I32 _118318_i = it - expr->begin();
				jule::Ptr<_1abd438ac_FieldIns> _118325_f = *it;
				{
					_1ad430bce_indent(_self_);
					_1ad43032c_write(_self_, jule::Str::lit("_Stream << \"", 12));
					_1ad36cdb3_cstrBytes(&((*_self_.alloc)._field_Buf), (*((*(_118325_f))._field_Decl))._field_Ident);
					_1ad43032c_write(_self_, jule::Str::lit(":", 1));
					jule::Ptr<_1abd4445c_StructIns> _119017_strct = _1abe46a04_Struct((*_118325_f.alloc)._field_Kind.ptr());;
					if ((((_119017_strct != nullptr) && ((*_119017_strct.alloc)._field_Decl != nullptr)) && (*(*_119017_strct.alloc)._field_Decl.alloc)._field_Binded)) {
						_1ad43032c_write(_self_, jule::Str::lit(" cpp.", 5));
						static__1ad375030_field(&((*_self_.alloc)._field_Buf), &((*_118325_f.alloc)._field_Decl));
						_1ad43032c_write(_self_, jule::Str::lit("\"", 1));
					} else {
						_1ad43032c_write(_self_, jule::Str::lit("\" << _Src.", 10));
						static__1ad375030_field(&((*_self_.alloc)._field_Buf), &((*_118325_f.alloc)._field_Decl));
					};
					if (((_118318_i + 1LL) < (*((*(_116541_s))))._field_Fields.len())) {
						_1ad43032c_write(_self_, jule::Str::lit(" << \", \"", 8));
					};
					_1ad43032c_write(_self_, jule::Str::lit(";\n", 2));
				}
				_iter_next_1b207923b:;
				++it;
				_118318_i++;
				goto _iter_begin_1b207923b;
			}
			_iter_end_1b207923b:;
		};
		_1ad430bce_indent(_self_);
		_1ad43032c_write(_self_, jule::Str::lit("_Stream << \"}\";\n", 16));
	};
	_1ad430bce_indent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("return _Stream;\n", 16));
	_1ad4309d1_doneIndent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("}", 1));
}



inline void _1ad43a8dc_structureIns(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd4445c_StructIns>* _121637_s) {
	_1ad43a37b_structureMethods(_self_, _121637_s);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad43a634_structureOstream(_self_, _121637_s);
}



inline void _1ad43ab95_structure(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1abd416ce_Struct>* _122234_s) {
	{
		auto expr = &((*((*(_122234_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b208361e:;
		if (it != expr_end) {
			jule::Ptr<_1abd4445c_StructIns> _122321_ins = *it;
			{
				_1ad43a8dc_structureIns(_self_, &(_122321_ins));
				_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1b208361e:;
			++it;
			goto _iter_begin_1b208361e;
		}
		_iter_end_1b208361e:;
	};
}



inline void _1ad43ad93_structures(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2083d6c:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> _123021_s = *it;
			{
				if (((*(_123021_s))._field_Token != nullptr)) {
					_1ad43ab95_structure(_self_, &(_123021_s));
					_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b2083d6c:;
			++it;
			goto _iter_begin_1b2083d6c;
		}
		_iter_end_1b2083d6c:;
	};
}



inline void _1ad43b091_funcs(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ac92cad3_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b2086941, jule::Ptr<__jule_anon_1b2086941_ctx>::make(__jule_anon_1b2086941_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2086941_ctx_handler));
}



inline void _1ad43b349_pushInit(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, jule::Ptr<_1ab67a535_Package>* _125433_pkg) {
	_1ac92ce13_IterFiles(_125433_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b2087e1a, jule::Ptr<__jule_anon_1b2087e1a_ctx>::make(__jule_anon_1b2087e1a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2087e1a_ctx_handler));
}



inline void _1ad43b547_anonHashes(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_julec_label_1b208b924:;
	jule::Slice<jule::Ptr<_1ad42d6c1_anonHash>> _127113_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_127113_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b208b429:;
		if (it != expr_end) {
			jule::Ptr<_1ad42d6c1_anonHash> _127321_h = *it;
			{
				_1ad437e17_anonFuncIns(_self_, &((*(_127321_h))._field_expr), (*_127321_h.alloc)._field_ident);
			}
			_iter_next_1b208b429:;
			++it;
			goto _iter_begin_1b208b429;
		}
		_iter_end_1b208b429:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1b208b924;
	};
}



inline void _1ad43b745_initCaller(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad43032c_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ad4307d3_addIndent(_self_);
	_1ac92cad3_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1ab67a535_Package>*>((void*)__jule_anon_1b2090be2, jule::Ptr<__jule_anon_1b2090be2_ctx>::make(__jule_anon_1b2090be2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1b2090be2_ctx_handler));
	_1ad4309d1_doneIndent(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ad43b943_end(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad43032c_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1eb3cebd9_Test) {
		_1ad43032c_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		_1ad43032c_write(_self_, jule::Str::lit("entry_point();", 14));
	};
	_1ad43032c_write(_self_, jule::Str::lit("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1ad43bca6_insertBuf(jule::Ptr<_1ad42eb78_ObjectCoder> _self_, _209e0d4d9_StrBuilder* _131134_buf, jule::I32 _131151_pos) {
	if ((_209e0ec05_Len(_131134_buf) > 0LL)) {
		jule::Slice<jule::U8> _131317_head = jule::Slice<jule::U8>::alloc(0LL, (_209e0ec05_Len(&(*(_self_))._field_Buf) + _209e0ec05_Len(_131134_buf)), 0);;
		(_131317_head).append(_209e10222_Buf(&(*_self_.alloc)._field_Buf).slice(0LL, _131151_pos));;
		(_131317_head).append(_209e10222_Buf(_131134_buf));;
		(_131317_head).append(_209e10222_Buf(&(*_self_.alloc)._field_Buf).slice(_131151_pos));;
		{
			_209e104ca_SetBuf(&(*_self_.alloc)._field_Buf, _131317_head);
		};
	};
}



inline void _1ad43bea4_serializeHead(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad433022_prepareStructures(_self_);
	_1ad43286d_head(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
	_1ad43a0c3_decls(_self_);
	_1ad43bca6_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_209e0ec05_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_209e0ec05_Len(&(*_self_.alloc)._field_resultDecls);
	_1ad43032c_write(_self_, jule::Str::lit("\n", 1));
	_1ad43ad93_structures(_self_);
	_1ad43b091_funcs(_self_);
	_1ad43b745_initCaller(_self_);
	_1ad43032c_write(_self_, jule::Str::lit("\n\n", 2));
	_1ad43b547_anonHashes(_self_);
	_1ad43bca6_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_209e0ec05_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_209e0ec05_Len(&(*_self_.alloc)._field_deallocObj);
	_1ad43bca6_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_209e0ec05_Len(&(*_self_.alloc)._field_anyObj);
	_1ad43bca6_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_209e0ec05_Len(&(*_self_.alloc)._field_anonObj);
}



inline void _1ad43c1a2_Serialize(jule::Ptr<_1ad42eb78_ObjectCoder> _self_) {
	_1ad43bea4_serializeHead(_self_);
	_1ad43b943_end(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1ad42eb78_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Buf:" << _Src._field_Buf << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "anonObj:" << _Src._field_anonObj << ", ";
	_Stream << "deallocObj:" << _Src._field_deallocObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "anons:" << _Src._field_anons << ", ";
	_Stream << "deallocated:" << _Src._field_deallocated << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "traitMetMap:" << _Src._field_traitMetMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos << ", ";
	_Stream << "wrapPos:" << _Src._field_wrapPos;
	_Stream << "}";
	return _Stream;
}





std::ostream &operator<<(std::ostream &_Stream, _1ac94d30c_dataCheckpoint _Src) {
	_Stream << "dataCheckpoint{";
	_Stream << "boundary:" << _Src._field_boundary << ", ";
	_Stream << "nils:" << _Src._field_nils << ", ";
	_Stream << "dynamic:" << _Src._field_dynamic;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aca7a9ab_ObjectDeadCode> static__1acaaaac9_new(jule::Ptr<_1ac92a43d_IR>* _3524_ir) {
	return jule::new_ptr<_1aca7a9ab_ObjectDeadCode>(_1aca7a9ab_ObjectDeadCode{._field_ir=(*(_3524_ir))});;
}



inline jule::Bool _1b1a327e9_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd69a59_Trait>* _4130_t) {
	jule::Slice<jule::Ptr<_1abd69a59_Trait>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b1a34510:;
			{
				_4217_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1b1a34378:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a355aa:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b1a355aa:;
			++it;
			_5313_i++;
			goto _iter_begin_1b1a355aa;
		}
		_iter_end_1b1a355aa:;
	};
	return false;;
}

inline jule::Bool _1b1a3824a_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd59681_FnIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1abd59681_FnIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b1a39d40:;
			{
				_4217_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1b1a39c85:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a39cda:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b1a39cda:;
			++it;
			_5313_i++;
			goto _iter_begin_1b1a39cda;
		}
		_iter_end_1b1a39cda:;
	};
	return false;;
}

inline jule::Bool _1b1a3e097_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd4445c_StructIns>* _4130_t) {
	jule::Slice<jule::Ptr<_1abd4445c_StructIns>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b1a4395e:;
			{
				_4217_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1b1a4383d:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a448c7:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b1a448c7:;
			++it;
			_5313_i++;
			goto _iter_begin_1b1a448c7;
		}
		_iter_end_1b1a448c7:;
	};
	return false;;
}

inline jule::Bool _1b1a462e1_isLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abda8d2e_Var>* _4130_t) {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _4217_live = nullptr;;
	{
		
{
			_case_begin_1b1a47ba5:;
			{
				_4217_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1b1a47d2b:;
	};
	{
		auto expr = &(_4217_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a48711:;
		if (it != expr_end) {
			jule::I32 _5313_i = it - expr->begin();
			{
				if ((_4217_live[_5313_i] == (*(_4130_t)))) {
					return true;;
				};
			}
			_iter_next_1b1a48711:;
			++it;
			_5313_i++;
			goto _iter_begin_1b1a48711;
		}
		_iter_end_1b1a48711:;
	};
	return false;;
}



inline void _1b1a32b90_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd69a59_Trait> _6135_t) {
	{
		
{
			_case_begin_1b1a36622:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,jule::Slice<jule::Ptr<_1abd69a59_Trait>>::make({_6135_t}));
			}
		}
		_match_end_1b1a35973:;
	};
}

inline void _1b1a385e1_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd59681_FnIns> _6135_t) {
	{
		
{
			_case_begin_1b1a3c3c5:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1abd59681_FnIns>>::make({_6135_t}));
			}
		}
		_match_end_1b1a3b9ce:;
	};
}

inline void _1b1a3e64c_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd4445c_StructIns> _6135_t) {
	{
		
{
			_case_begin_1b1a40cd0:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,jule::Slice<jule::Ptr<_1abd4445c_StructIns>>::make({_6135_t}));
			}
		}
		_match_end_1b1a40153:;
	};
}

inline void _1b1a46687_pushLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abda8d2e_Var> _6135_t) {
	{
		
{
			_case_begin_1b1a4a3d3:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,jule::Slice<jule::Ptr<_1abda8d2e_Var>>::make({_6135_t}));
			}
		}
		_match_end_1b1a49855:;
	};
}



inline void _1acaab3c1_setReferencesAsLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abd5c860_ReferenceStack>* _7444_rs) {
	if (((*(_7444_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7813_i = 0LL;;
	for (; (_7813_i < _1abd5d047_Len((*(_7444_rs)).ptr())); (_7813_i)++) {
		{
			jule::Any _8017_ref = _1abd5d388_At((*(_7444_rs)).ptr(), _7813_i);;
			{
				auto &_match_expr{ _8017_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b1a314eb:;
					{
						jule::Ptr<_1abd69a59_Trait> _8321_t = _8017_ref.unsafe_cast_ptr<_1abd69a59_Trait>();;
						if (_1b1a327e9_isLive(_self_, &(_8321_t))) {
							goto _iter_next_1b1a3071a;
						};
						_1b1a32b90_pushLive(_self_, _8321_t);
						{
							auto expr = &((*(_8321_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b1a32277:;
							if (it != expr_end) {
								jule::Ptr<_1abd566a0_Fn> _8829_ins = *it;
								{
									{
										auto expr = &((*(_8829_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b1a36710:;
										if (it != expr_end) {
											jule::Ptr<_1abd59681_FnIns> _8933_mins = *it;
											{
												if (_1b1a3824a_isLive(_self_, &(_8933_mins))) {
													goto _iter_next_1b1a36710;
												};
												_1b1a385e1_pushLive(_self_, _8933_mins);
												_1acaab3c1_setReferencesAsLive(_self_, &((*(_8933_mins))._field_Refers));
											}
											_iter_next_1b1a36710:;
											++it;
											goto _iter_begin_1b1a36710;
										}
										_iter_end_1b1a36710:;
									};
								}
								_iter_next_1b1a32277:;
								++it;
								goto _iter_begin_1b1a32277;
							}
							_iter_end_1b1a32277:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b1a31331:;
					{
						jule::Ptr<_1abd59681_FnIns> _9821_f = _8017_ref.unsafe_cast_ptr<_1abd59681_FnIns>();;
						if (_1b1a3824a_isLive(_self_, &(_9821_f))) {
							goto _match_end_1b1a313a8;
						};
						if ((((*(_9821_f))._field_Owner != nullptr) && (!((*((*_9821_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1b1a3e097_isLive(_self_, &((*_9821_f.alloc)._field_Owner))))) {
								_1b1a3e64c_pushLive(_self_, (*_9821_f.alloc)._field_Owner);
								_1acaab3c1_setReferencesAsLive(_self_, &((*(*_9821_f.alloc)._field_Owner.alloc)._field_Refers));
							};
						};
						_1b1a385e1_pushLive(_self_, _9821_f);
						_1acaab3c1_setReferencesAsLive(_self_, &((*_9821_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b1a31562:;
					{
						jule::Ptr<_1abda8d2e_Var> _11121_v = _8017_ref.unsafe_cast_ptr<_1abda8d2e_Var>();;
						if (_1b1a462e1_isLive(_self_, &(_11121_v))) {
							goto _match_end_1b1a313a8;
						};
						_1b1a46687_pushLive(_self_, _11121_v);
						_1acaab3c1_setReferencesAsLive(_self_, &((*(_11121_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b1a315c8:;
					{
						jule::Ptr<_1abd4445c_StructIns> _11821_s = _8017_ref.unsafe_cast_ptr<_1abd4445c_StructIns>();;
						if (_1b1a3e097_isLive(_self_, &(_11821_s))) {
							goto _match_end_1b1a313a8;
						};
						_1b1a3e64c_pushLive(_self_, _11821_s);
						_1acaab3c1_setReferencesAsLive(_self_, &((*(_11821_s))._field_Refers));
						{
							auto expr = &((*_11821_s.alloc)._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b1a4c748:;
							if (it != expr_end) {
								jule::Ptr<_1abd566a0_Fn> _12429_m = *it;
								{
									{
										auto expr = &((*(_12429_m))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b1a4d42a:;
										if (it != expr_end) {
											jule::Ptr<_1abd59681_FnIns> _12533_ins = *it;
											{
												if (_1b1a3824a_isLive(_self_, &(_12533_ins))) {
													goto _iter_next_1b1a4d42a;
												};
												if (_1ac93579a_IsTraitMethod(&(_11821_s), &(_12533_ins))) {
													_1b1a385e1_pushLive(_self_, _12533_ins);
													_1acaab3c1_setReferencesAsLive(_self_, &((*(_12533_ins))._field_Refers));
												};
												;
												;
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Eq)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Gt)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_GtEq)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Lt)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_LtEq)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shl)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Shr)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Add)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Sub)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Div)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mul)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Mod)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAnd)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOr)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXor)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Neg)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_Pos)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitNot)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_AddAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_SubAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_DivAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_MulAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ModAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShlAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_ShrAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitOrAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitAndAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
												{
													if ((_12533_ins == (*_11821_s.alloc)._field_Operators._field_BitXorAssign)) {
														_1b1a385e1_pushLive(_self_, _12533_ins);
														_1acaab3c1_setReferencesAsLive(_self_, &((*_12533_ins.alloc)._field_Refers));
													};
												};
											}
											_iter_next_1b1a4d42a:;
											++it;
											goto _iter_begin_1b1a4d42a;
										}
										_iter_end_1b1a4d42a:;
									};
								}
								_iter_next_1b1a4c748:;
								++it;
								goto _iter_begin_1b1a4c748;
							}
							_iter_end_1b1a4c748:;
						};
					}
				}
				_match_end_1b1a313a8:;
			};
		}
	_iter_next_1b1a3071a:;
	}
	_iter_end_1b1a3071a:;;
}



inline void _1acaab679_inits(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _15630_pkg) {
	{
		auto expr = &((*((*(_15630_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a5055e:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _15721_file = *it;
			{
				{
					auto expr = &((*(_15721_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1a4d282:;
					if (it != expr_end) {
						jule::Ptr<_1abd566a0_Fn> _15825_f = *it;
						{
							if ((*(_15825_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1abd59681_FnIns> _16025_ins = (*_15825_f.alloc)._field_Instances[0LL];;
								(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1abd59681_FnIns>>::make({_16025_ins}));
								_1acaab3c1_setReferencesAsLive(_self_, &((*(_16025_ins))._field_Refers));
							};
						}
						_iter_next_1b1a4d282:;
						++it;
						goto _iter_begin_1b1a4d282;
					}
					_iter_end_1b1a4d282:;
				};
			}
			_iter_next_1b1a5055e:;
			++it;
			goto _iter_begin_1b1a5055e;
		}
		_iter_end_1b1a5055e:;
	};
}



inline void _1acaab932_collectLivePackage(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _16843_pkg) {
	_1acaab679_inits(_self_, _16843_pkg);
	if (_1eb3cebd9_Test) {
		{
			auto expr = &((*((*(_16843_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1a6bda5:;
			if (it != expr_end) {
				jule::Ptr<_1abe0b5bd_SymbolTable> _17425_file = *it;
				{
					{
						auto expr = &((*(_17425_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1a6c7e0:;
						if (it != expr_end) {
							jule::Ptr<_1abd566a0_Fn> _17529_f = *it;
							{
								if (_1ac936944_HasDirective(&((*(_17529_f))._field_Directives), jule::Str::lit("test", 4))) {
									jule::Ptr<_1abd59681_FnIns> _17729_ins = (*_17529_f.alloc)._field_Instances[0LL];;
									(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1abd59681_FnIns>>::make({_17729_ins}));
									_1acaab3c1_setReferencesAsLive(_self_, &((*(_17729_ins))._field_Refers));
								};
							}
							_iter_next_1b1a6c7e0:;
							++it;
							goto _iter_begin_1b1a6c7e0;
						}
						_iter_end_1b1a6c7e0:;
					};
				}
				_iter_next_1b1a6bda5:;
				++it;
				goto _iter_begin_1b1a6bda5;
			}
			_iter_end_1b1a6bda5:;
		};
	};
}



inline void _1acaabb30_collectLive(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a6c757:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _18721_used = *it;
			{
				if ((!((*(_18721_used))._field_Binded))) {
					_1acaab932_collectLivePackage(_self_, &((*_18721_used.alloc)._field_Package));
				};
			}
			_iter_next_1b1a6c757:;
			++it;
			goto _iter_begin_1b1a6c757;
		}
		_iter_end_1b1a6c757:;
	};
	_1acaab932_collectLivePackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
	jule::Ptr<_1abd566a0_Fn> _19513_main = _1ab67bab9_FindFn((*(*_self_.alloc)._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	jule::Ptr<_1abd59681_FnIns> _19613_ins = (*(_19513_main))._field_Instances[0LL];;
	(*_self_.alloc)._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,jule::Slice<jule::Ptr<_1abd59681_FnIns>>::make({_19613_ins}));
	_1acaab3c1_setReferencesAsLive(_self_, &((*(_19613_ins))._field_Refers));
}



inline void _1acaabdd8_removeDeadGlobals(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _20142_vars) {
	jule::I32 _20213_i = 0LL;;
	while ((_20213_i < (*(_20142_vars)).len())) {
		{
			jule::Ptr<_1abda8d2e_Var> _20413_v = (*(_20142_vars))[_20213_i];;
			if (_1b1a462e1_isLive(_self_, &(_20413_v))) {
				(_20213_i)++;
				goto _iter_next_1b21064d8;
			};
			(*(_20142_vars))=jule::append((*(_20142_vars)).slice(0LL, _20213_i),(*(_20142_vars)).slice((_20213_i + 1LL)));
		}
	_iter_next_1b21064d8:;
	}
	_iter_end_1b21064d8:;;
}



inline void _1acaac191_removeDeadFns(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _21338_funcs) {
	jule::I32 _21413_i = 0LL;;
	while ((_21413_i < (*(_21338_funcs)).len())) {
		{
			jule::Ptr<_1abd566a0_Fn> _21617_f = (*(_21338_funcs))[_21413_i];;
			jule::I32 _21717_j = 0LL;;
			while ((_21717_j < (*(_21617_f))._field_Instances.len())) {
				{
					jule::Ptr<_1abd59681_FnIns> _21917_ins = (*_21617_f.alloc)._field_Instances[_21717_j];;
					if (_1b1a3824a_isLive(_self_, &(_21917_ins))) {
						(_21717_j)++;
						goto _iter_next_1b2108c38;
					};
					(*_21617_f.alloc)._field_Instances=jule::append((*_21617_f.alloc)._field_Instances.slice(0LL, _21717_j),(*_21617_f.alloc)._field_Instances.slice((_21717_j + 1LL)));
				}
			_iter_next_1b2108c38:;
			}
			_iter_end_1b2108c38:;;
			if (((*_21617_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_21338_funcs))=jule::append((*(_21338_funcs)).slice(0LL, _21413_i),(*(_21338_funcs)).slice((_21413_i + 1LL)));
				goto _iter_next_1b2108089;
			};
			(_21413_i)++;
		}
	_iter_next_1b2108089:;
	}
	_iter_end_1b2108089:;;
}



inline void _1acaac449_removeDeadStructs(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _23442_structs) {
	jule::I32 _23513_i = 0LL;;
	while ((_23513_i < (*(_23442_structs)).len())) {
		{
			jule::Ptr<_1abd416ce_Struct> _23717_s = (*(_23442_structs))[_23513_i];;
			jule::I32 _23817_j = 0LL;;
			while ((_23817_j < (*(_23717_s))._field_Instances.len())) {
				{
					jule::Ptr<_1abd4445c_StructIns> _24021_ins = (*_23717_s.alloc)._field_Instances[_23817_j];;
					_1acaac191_removeDeadFns(_self_, &((*(_24021_ins))._field_Methods));
					if ((((*_24021_ins.alloc)._field_Methods.len() != 0LL) || _1b1a3e097_isLive(_self_, &(_24021_ins)))) {
						(_23817_j)++;
						goto _iter_next_1b210c973;
					};
					(*_23717_s.alloc)._field_Instances=jule::append((*_23717_s.alloc)._field_Instances.slice(0LL, _23817_j),(*_23717_s.alloc)._field_Instances.slice((_23817_j + 1LL)));
				}
			_iter_next_1b210c973:;
			}
			_iter_end_1b210c973:;;
			if (((*_23717_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_23442_structs))=jule::append((*(_23442_structs)).slice(0LL, _23513_i),(*(_23442_structs)).slice((_23513_i + 1LL)));
				goto _iter_next_1b210bcc4;
			};
			(_23513_i)++;
		}
	_iter_next_1b210bcc4:;
	}
	_iter_end_1b210bcc4:;;
}



inline void _1acaac702_removeDeadTraits(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1abd69a59_Trait>>* _25641_traits) {
	jule::I32 _25713_i = 0LL;;
	while ((_25713_i < (*(_25641_traits)).len())) {
		{
			jule::Ptr<_1abd69a59_Trait> _25917_t = (*(_25641_traits))[_25713_i];;
			if ((!(_1b1a327e9_isLive(_self_, &(_25917_t))))) {
				(*(_25641_traits))=jule::append((*(_25641_traits)).slice(0LL, _25713_i),(*(_25641_traits)).slice((_25713_i + 1LL)));
				goto _iter_next_1b211156a;
			};
			jule::I32 _26417_j = 0LL;;
			while ((_26417_j < (*(_25917_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1abd416ce_Struct> _26617_s = (*_25917_t.alloc)._field_Implemented[_26417_j];;
					if (((*(_26617_s))._field_Instances.len() > 0LL)) {
						(_26417_j)++;
						goto _iter_next_1b2111e94;
					};
					(*_25917_t.alloc)._field_Implemented=jule::append((*_25917_t.alloc)._field_Implemented.slice(0LL, _26417_j),(*_25917_t.alloc)._field_Implemented.slice((_26417_j + 1LL)));
				}
			_iter_next_1b2111e94:;
			}
			_iter_end_1b2111e94:;;
			(_25713_i)++;
		}
	_iter_next_1b211156a:;
	}
	_iter_end_1b211156a:;;
}



inline void _1acaac9aa_removeDeadsFile(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1abe0b5bd_SymbolTable>* _27740_file) {
	_1acaac191_removeDeadFns(_self_, &((*((*(_27740_file))))._field_Funcs));
	_1acaac449_removeDeadStructs(_self_, &((*((*(_27740_file))))._field_Structs));
	_1acaac702_removeDeadTraits(_self_, &((*((*(_27740_file))))._field_Traits));
	_1acaabdd8_removeDeadGlobals(_self_, &((*((*(_27740_file))))._field_Vars));
}



inline void _1acaacc63_removeDeadsPackage(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_, jule::Ptr<_1ab67a535_Package>* _28443_pkg) {
	{
		auto expr = &((*((*(_28443_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2116b14:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _28521_file = *it;
			{
				_1acaac9aa_removeDeadsFile(_self_, &(_28521_file));
			}
			_iter_next_1b2116b14:;
			++it;
			goto _iter_begin_1b2116b14;
		}
		_iter_end_1b2116b14:;
	};
}



inline void _1acaace61_removeDeads(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2117384:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _29121_used = *it;
			{
				if ((!((*(_29121_used))._field_Binded))) {
					_1acaacc63_removeDeadsPackage(_self_, &((*_29121_used.alloc)._field_Package));
				};
			}
			_iter_next_1b2117384:;
			++it;
			goto _iter_begin_1b2117384;
		}
		_iter_end_1b2117384:;
	};
	_1acaacc63_removeDeadsPackage(_self_, &((*(*_self_.alloc)._field_ir.alloc)._field_Main));
}



inline void _1acaad15e_elimanate(jule::Ptr<_1aca7a9ab_ObjectDeadCode> _self_) {
	_1acaabb30_collectLive(_self_);
	_1acaace61_removeDeads(_self_);
}





std::ostream &operator<<(std::ostream &_Stream, _1aca7a9ab_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ac92a43d_IR__jule_tuple_s_1eb22e132_Log static__1ac92a8d3_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1ac92a43d_IR__jule_tuple_s_1eb22e132_Log __jule_func_result;
	jule::Ptr<_1ac927b33_JuleImporter> _2813_importer = static__1ac92802e_New(_1ac92c3b8_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1abd1d931_Ast>> _2913_files;
	jule::Slice<_1eb22e132_Log> _2924_logs;
	({
		__jule_tuple_sx_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac929519_ImportPackage(_2813_importer.ptr(), _2721_path, true);
		_2913_files = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Str _339_root = _2721_path;;
	if ((_2913_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab67a535_Package> _3913_pkg;
	({
		__jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1abe640b5_AnalyzePackage(_2913_files, jule::Trait(_2813_importer, (jule::Trait::Type*)&_1ab6746e9_Importer_mptr_data0), _2732_flags);
		_3913_pkg = __jule_assign_result.__jule_result_arg0;
		_2924_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2924_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2924_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac92a43d_IR> _4413_ir = jule::new_ptr<_1ac92a43d_IR>(_1ac92a43d_IR{._field_Root=_339_root, ._field_Main=_3913_pkg, ._field_Used=_1ac9282b5_AllPackages(_2813_importer), });;
	(*(_4413_ir))._field_Passes=_1ac92c1a9_getAllUniquePasses(&((*_4413_ir.alloc)._field_Main), (*_4413_ir.alloc)._field_Used);
	__jule_func_result.__jule_result_arg0 = _4413_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ac92adbc_appendStructs(_1ac92a43d_IR* _self_, jule::Ptr<_1ab67a535_Package>* _5633_p, jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _5657_buffer) {
	{
		auto expr = &((*((*(_5633_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19c8152:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &((*(_5721_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19c8a9d:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _5825_s = *it;
						{
							if ((!((*(_5825_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1abd416ce_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1b19c8a9d:;
						++it;
						goto _iter_begin_1b19c8a9d;
					}
					_iter_end_1b19c8a9d:;
				};
			}
			_iter_next_1b19c8152:;
			++it;
			goto _iter_begin_1b19c8152;
		}
		_iter_end_1b19c8152:;
	};
}



inline jule::Slice<jule::Ptr<_1abd416ce_Struct>> _1ac92b153_GetAllStructures(_1ac92a43d_IR* _self_) {
	jule::Slice<jule::Ptr<_1abd416ce_Struct>> _6917_buffer = nullptr;;
	_1ac92adbc_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19c9c47:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _7121_u = *it;
			{
				if ((!((*(_7121_u))._field_Binded))) {
					_1ac92adbc_appendStructs(_self_, &((*_7121_u.alloc)._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b19c9c47:;
			++it;
			goto _iter_begin_1b19c9c47;
		}
		_iter_end_1b19c9c47:;
	};
	return _6917_buffer;;
}



inline void _1ac92b4b6_appendGlobals(_1ac92a43d_IR* _self_, jule::Ptr<_1ab67a535_Package>* _7933_p, jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _7957_buffer) {
	{
		auto expr = &((*((*(_7933_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19cb397:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &((*(_8021_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19cbce3:;
					if (it != expr_end) {
						jule::Ptr<_1abda8d2e_Var> _8125_v = *it;
						{
							if (((((*(_8125_v))._field_Token != nullptr) && (!((*_8125_v.alloc)._field_Binded))) && (!((*_8125_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1b19cbce3:;
						++it;
						goto _iter_begin_1b19cbce3;
					}
					_iter_end_1b19cbce3:;
				};
			}
			_iter_next_1b19cb397:;
			++it;
			goto _iter_begin_1b19cb397;
		}
		_iter_end_1b19cb397:;
	};
}



inline jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1ac92b74c_GetAllGlobals(_1ac92a43d_IR* _self_) {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _9217_buffer = nullptr;;
	_1ac92b4b6_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19cd6eb:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _9421_u = *it;
			{
				if ((!((*(_9421_u))._field_Binded))) {
					_1ac92b4b6_appendGlobals(_self_, &((*_9421_u.alloc)._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b19cd6eb:;
			++it;
			goto _iter_begin_1b19cd6eb;
		}
		_iter_end_1b19cd6eb:;
	};
	return _9217_buffer;;
}



inline void _1ac92b94a_Order(_1ac92a43d_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ac92b153_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ac92b74c_GetAllGlobals(_self_);
	_1b19d02d0_order(&((*(_self_))._field_Ordered._field_Structs));
	_1b19d5934_order(&((*(_self_))._field_Ordered._field_Globals));
}





std::ostream &operator<<(std::ostream &_Stream, _1ac92a43d_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1abd447d1_Str(_1abd4445c_StructIns* _self_) {
	_209e0d4d9_StrBuilder _23913_kind = static__209e0d918_New(32LL);;
	_209e0de79_WriteStr(&_23913_kind, (*((*(_self_))._field_Decl))._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_209e0e232_WriteByte(&_23913_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b017c51c:;
			if (it != expr_end) {
				jule::I32 _24317_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> *_24320_g = it;
				{
					_209e0de79_WriteStr(&_23913_kind, _1abe431e8_Str((*((*(_24320_g))))._field_Kind.ptr()));
					if ((_24317_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_209e0e232_WriteByte(&_23913_kind, ',');
					};
				}
				_iter_next_1b017c51c:;
				++it;
				_24317_i++;
				goto _iter_begin_1b017c51c;
			}
			_iter_end_1b017c51c:;
		};
		_209e0e232_WriteByte(&_23913_kind, ']');
	};
	return _209e0e771_Str(&_23913_kind);;
}



inline jule::Bool _1abd44b22_Equal(jule::Ptr<_1abd4445c_StructIns> _self_, jule::Ptr<_1abe42d30_TypeKind> _25521_other) {
	jule::Ptr<_1abd4445c_StructIns> _2569_s = _1abe46a04_Struct(_25521_other.ptr());;
	if ((_2569_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2569_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2569_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _26913_i = 0LL;;
	for (; (_26913_i < (*_self_.alloc)._field_Generics.len()); (_26913_i)++) {
		{
			if ((!(_1abe43539_Equal((*((*_self_.alloc)._field_Generics[_26913_i]))._field_Kind, (*((*(_2569_s))._field_Generics[_26913_i]))._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b0180ae7:;
	}
	_iter_end_1b0180ae7:;;
	return true;;
}



inline jule::Bool _1abd450c8_Same(_1abd4445c_StructIns* _self_, jule::Ptr<_1abd4445c_StructIns> _28319_s) {
	if ((((*(_self_))._field_Decl != (*(_28319_s))._field_Decl) || ((*_28319_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0184128:;
		if (it != expr_end) {
			jule::I32 _28713_i = it - expr->begin();
			jule::Ptr<_1abe41449_InsGeneric> *_28716_g = it;
			{
				jule::Ptr<_1abe41449_InsGeneric> _28813_g2 = (*_28319_s.alloc)._field_Generics[_28713_i];;
				if ((((*((*((*(_28716_g))))._field_Kind))._field_BindIdent != (*(*(_28813_g2))._field_Kind.alloc)._field_BindIdent) || (!(_1abe43539_Equal((*(*(_28716_g)).alloc)._field_Kind, (*_28813_g2.alloc)._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b0184128:;
			++it;
			_28713_i++;
			goto _iter_begin_1b0184128;
		}
		_iter_end_1b0184128:;
	};
	return true;;
}



inline jule::Ptr<_1abd566a0_Fn> _1abd454c4_FindMethod(_1abd4445c_StructIns* _self_, jule::Str _29829_ident, jule::Bool _29841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b0186b53:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _29921_f = *it;
			{
				if ((((*(_29921_f))._field_Statically == _29841_statically) && ((*_29921_f.alloc)._field_Ident == _29829_ident))) {
					return _29921_f;;
				};
			}
			_iter_next_1b0186b53:;
			++it;
			goto _iter_begin_1b0186b53;
		}
		_iter_end_1b0186b53:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd438ac_FieldIns> _1abd45815_FindField(_1abd4445c_StructIns* _self_, jule::Str _30928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01871c5:;
		if (it != expr_end) {
			jule::Ptr<_1abd438ac_FieldIns> _31021_f = *it;
			{
				if (((*((*(_31021_f))._field_Decl))._field_Ident == _30928_ident)) {
					return _31021_f;;
				};
			}
			_iter_next_1b01871c5:;
			++it;
			goto _iter_begin_1b01871c5;
		}
		_iter_end_1b01871c5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abda8d2e_Var> _1abd45b56_FindStatic(_1abd4445c_StructIns* _self_, jule::Str _32029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b018912d:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _32121_v = *it;
			{
				if (((*(_32121_v))._field_Ident == _32029_ident)) {
					return _32121_v;;
				};
			}
			_iter_next_1b018912d:;
			++it;
			goto _iter_begin_1b018912d;
		}
		_iter_end_1b018912d:;
	};
	return nullptr;;
}





std::ostream &operator<<(std::ostream &_Stream, _1abd4445c_StructIns _Src) {
	_Stream << _1abd447d1_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1eb2db310_Cmd> static__1eb2db70b_New(jule::Str _2619_path) {
	return jule::new_ptr<_1eb2db310_Cmd>(_1eb2db310_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1eb2db909_Spawn(_1eb2db310_Cmd* _self_) {
	return _20b19c238_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1eb2dbd8d_Wait(_1eb2db310_Cmd* _self_) {
	return _20b19c678_wait(_self_);
}



inline jule::VoidExceptional _20b19c238_spawn(_1eb2db310_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		jule::panic(jule::Str::lit("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_windows.jule:43:13"));;
	};
	STARTUPINFOW _4513_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _4613_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_4513_startupInfo)), sizeof(_4513_startupInfo));
		ZeroMemory((&(_4613_processInfo)), sizeof(_4613_processInfo));
	};
	_4513_startupInfo.cb=sizeof(_4513_startupInfo);
	jule::Slice<jule::Str> _5213_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
	_5213_args[0LL]=(*(_self_))._field_path;
	(_5213_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _559_argv = _209bd25ee_UTF16FromStr(_20b19cce9_makeCmdLine(_5213_args));;
	jule::Slice<jule::U16> _569_env = ({
		auto except = _20b19d1c3_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _5713_envp = (&(_569_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_5713_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_559_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _5713_envp, nullptr, (&(_4513_startupInfo)), (&(_4613_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_20b19e3e4_getLastProcessError(), &__jule_any_type0)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_4613_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_4613_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _20b19c678_wait(_1eb2db310_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		jule::panic(jule::Str::lit("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_windows.jule:86:13"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _8913_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_8913_exitCode)));
		_209c0b639_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_209c0b639_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_8913_exitCode)};;
}





std::ostream &operator<<(std::ostream &_Stream, _1eb2db310_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline jule::I32 _209bd1686_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _209bd1950_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _209bd1c91_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _889_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4c99c0:;
		if (it != expr_end) {
			jule::I32 *_8912_v = it;
			{
				if (((*(_8912_v)) >= 65536LL)) {
					(_889_n)++;
				};
			}
			_iter_next_1ad4c99c0:;
			++it;
			goto _iter_begin_1ad4c99c0;
		}
		_iter_end_1ad4c99c0:;
	};
	jule::Slice<jule::U16> _959_a = jule::Slice<jule::U16>::alloc(_889_n, _889_n, 0);;
	_889_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4cac02:;
		if (it != expr_end) {
			jule::I32 *_9712_v = it;
			{
				{
					
					if (((0LL <= (*(_9712_v))) && ((*(_9712_v)) < 55296LL)) || ((57344LL <= (*(_9712_v))) && ((*(_9712_v)) < 65536LL))) {
						_case_begin_1ad4cb96c:;
						{
							_959_a[_889_n]=static_cast<jule::U16>((*(_9712_v)));
							(_889_n)++;
						}
					}
					else if (((65536LL <= (*(_9712_v))) && ((*(_9712_v)) <= 1114111LL))) {
						_case_begin_1ad4cb64d:;
						{
							jule::I32 _10513_r1;
							jule::I32 _10517_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _209bd1950_EncodeRune((*(_9712_v)));
								_10513_r1 = __jule_assign_result.__jule_result_arg0;
								_10517_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_959_a[_889_n]=static_cast<jule::U16>(_10513_r1);
							_959_a[(_889_n + 1LL)]=static_cast<jule::U16>(_10517_r2);
							_889_n+=2LL;
						}
					}
					else {
						_case_begin_1ad4cb5d7:;
						{
							_959_a[_889_n]=static_cast<jule::U16>(65533LLU);
							(_889_n)++;
						}
					}
					_match_end_1ad4cb4d8:;
				};
			}
			_iter_next_1ad4cac02:;
			++it;
			goto _iter_begin_1ad4cac02;
		}
		_iter_end_1ad4cac02:;
	};
	return _959_a.slice(0LL, _889_n);;
}



inline jule::Slice<jule::I32> _209bd2027_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1209_a = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len(), 0);;
	jule::I32 _1219_n = 0LL;;
	jule::I32 _1229_i = 0LL;;
	for (; (_1229_i < _11911_s.len()); (_1229_i)++) {
		{
			jule::U16 _1249_r = _11911_s[_1229_i];;
			{
				
				if ((_1249_r < 55296LLU) || (57344LL <= _1249_r)) {
					_case_begin_1ad4d1268:;
					{
						_1209_a[_1219_n]=static_cast<jule::I32>(_1249_r);
					}
				}
				else if (((((_1249_r < 56320LLU) && ((_1229_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1229_i + 1LL)])) && (_11911_s[(_1229_i + 1LL)] < 57344LLU))) {
					_case_begin_1ad4d1037:;
					{
						_1209_a[_1219_n]=_209bd1686_DecodeRune(static_cast<jule::I32>(_1249_r), static_cast<jule::I32>(_11911_s[(_1229_i + 1LL)]));
						(_1229_i)++;
					}
				}
				else {
					_case_begin_1ad4d0b80:;
					{
						_1209_a[_1219_n]=65533LL;
					}
				}
				_match_end_1ad4d0b19:;
			};
			(_1219_n)++;
		}
	_iter_next_1ad4cdbc2:;
	}
	_iter_end_1ad4cdbc2:;;
	return _1209_a.slice(0LL, _1219_n);;
}



inline jule::Slice<jule::U16> _209bd239b_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1ad4d3c2c:;
			{
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_14929_r)}));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1ad4d3cc6:;
			{
				jule::I32 _1569_r1;
				jule::I32 _15613_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _209bd1950_EncodeRune(_14929_r);
					_1569_r1 = __jule_assign_result.__jule_result_arg0;
					_15613_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,jule::Slice<jule::U16>::make({static_cast<jule::U16>(_1569_r1),static_cast<jule::U16>(_15613_r2)}));;
			}
		}
		_match_end_1ad4d3b3e:;
	};
	return jule::append(_14919_a,jule::Slice<jule::U16>::make({65533LLU}));;
}



inline jule::Slice<jule::U16> _209bd25ee_UTF16FromStr(jule::Str _1417_s) {
	;
	jule::Slice<jule::I32> _205_runes = static_cast<jule::Slice<jule::I32>>(_1417_s);;
	jule::Slice<jule::U16> _219_buff = jule::Slice<jule::U16>::alloc(0LL, _205_runes.len(), 0);;
	{
		auto expr = &(_205_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4de650:;
		if (it != expr_end) {
			jule::I32 *_2212_r = it;
			{
				if (((*(_2212_r)) == 0LL)) {
					goto _iter_end_1ad4de650;
				};
				_219_buff=_209bd239b_AppendRune(_219_buff, (*(_2212_r)));
			}
			_iter_next_1ad4de650:;
			++it;
			goto _iter_begin_1ad4de650;
		}
		_iter_end_1ad4de650:;
	};
	return _209bd239b_AppendRune(_219_buff, 0LL);;
}



inline jule::Str _209bd290c_UTF16ToStr(jule::Slice<jule::U16> _3415_s) {
	if ((_3415_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _389_codePage = _3415_s;;
	{
		auto expr = &(_3415_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad4e1e16:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U16 *_3912_v = it;
			{
				if (((*(_3912_v)) == 0LLU)) {
					(_389_codePage).mut_slice(0LL, _399_i);;
					goto _iter_end_1ad4e1e16;
				};
			}
			_iter_next_1ad4e1e16:;
			++it;
			_399_i++;
			goto _iter_begin_1ad4e1e16;
		}
		_iter_end_1ad4e1e16:;
	};
	return static_cast<jule::Str>(_209bd2027_Decode(_389_codePage));;
}



inline jule::Str _209bd2bc6_U16PtrToStr(jule::U16* _5023_s) {
	if ((_5023_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5513_codePage;;
	jule::I32 _569_i = 0LL;;
	for (; ; (_569_i)++) {
		{
			jule::U16 _589_r = _5023_s[_569_i];;
			if ((_589_r == 0LLU)) {
				return static_cast<jule::Str>(_209bd2027_Decode(_5513_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5513_codePage; __jule_push_dest.push(_589_r); };
		}
	_iter_next_1ad4e3027:;
	}
	_iter_end_1ad4e3027:;;
	return jule::Str();;
}



inline jule::I32 _209872c62_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _209c0b370_GetStdHandle(jule::Uintptr _6417_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6417_stdh)));;
}



inline jule::Bool _209c0b639_CloseHandle(jule::Uintptr _6523_stdh) {
	return CloseHandle(((void*)(_6523_stdh)));;
}



inline jule::I32 _209c0b9ad_Wstat(jule::U16* _6817_path, struct _stat* _6833_stat) {
	return _wstat(((wchar_t*)(_6817_path)), _6833_stat);;
}



inline jule::I32 _209c0bddc_Wopen(jule::U16* _7317_path, jule::I32 _7329_flag, jule::I32 _7340_mode) {
	return _wopen(((wchar_t*)((&(_7317_path[0LL])))), _7329_flag, _7340_mode);;
}



inline jule::U32 _209c0c0eb_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _209c0c470_GetCurrentDirectory(jule::U32 _8231_bufflen, jule::U16* _8249_buff) {
	return GetCurrentDirectoryW(_8231_bufflen, ((wchar_t*)(_8249_buff)));;
}



inline jule::Bool _209c0ca03_DeleteFile(jule::U16* _9322_path) {
	return DeleteFileW(((wchar_t*)(_9322_path)));;
}



inline jule::Bool _209c0ccbc_CreateDirectory(jule::U16* _9827_path) {
	return CreateDirectoryW(((wchar_t*)(_9827_path)), nullptr);;
}



inline jule::Bool _209c0d086_RemoveDirectory(jule::U16* _10327_path) {
	return RemoveDirectoryW(((wchar_t*)(_10327_path)));;
}



inline jule::U32 _209c0d570_GetFullPathName(jule::U16* _10827_path, jule::U32 _10839_bufflen, jule::U16* _1095_buff, jule::U16** _10917_fname) {
	return GetFullPathNameW(((wchar_t*)(_10827_path)), _10839_bufflen, ((wchar_t*)(_1095_buff)), ((wchar_t**)(_10917_fname)));;
}



inline jule::Bool _209c0d8e4_GetConsoleMode(jule::Uintptr _11419_handle, jule::I32* _11440_mode) {
	return GetConsoleMode(((HANDLE)(_11419_handle)), ((DWORD*)(_11440_mode)));;
}



inline jule::Bool _209c0deee_SetConsoleMode(jule::Uintptr _11919_handle, jule::I32 _11935_mode) {
	return SetConsoleMode(((HANDLE)(_11919_handle)), static_cast<DWORD>(_11935_mode));;
}



inline jule::Bool _209c0e54e_WriteConsole(jule::Uintptr _12424_handle, jule::U16* _12440_buffer, jule::I32 _12454_toWrite, jule::I32* _12510_written, void* _12524_reserved) {
	return WriteConsoleW(((HANDLE)(_12424_handle)), ((void*)(_12440_buffer)), static_cast<DWORD>(_12454_toWrite), ((DWORD*)((*(_12510_written)))), _12524_reserved);;
}



inline jule::Bool _209c0ea38_ReadConsole(jule::Uintptr _13223_handle, jule::U16* _13243_buffer, jule::I32 _13257_toRead, jule::I32* _13310_readed) {
	return ReadConsoleW(((HANDLE)(_13223_handle)), ((void*)(_13243_buffer)), static_cast<DWORD>(_13257_toRead), ((DWORD*)(_13310_readed)), nullptr);;
}



inline jule::Uintptr _209c100bb_FindFirstFile(jule::U16* _14425_path, WIN32_FIND_DATAW* _14441_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14425_path)), _14441_data)));;
}



inline jule::I32 _209c10440_FindNextFile(jule::Uintptr _14924_h, WIN32_FIND_DATAW* _14939_data) {
	return FindNextFileW(((HANDLE)(_14924_h)), _14939_data);;
}



inline jule::I32 _209c10709_FindClose(jule::Uintptr _15414_h) {
	return FindClose(((HANDLE)(_15414_h)));;
}



inline jule::I32 _209c127d8_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _209c12bb2_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _209c13069_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _209c1329a_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _209d2e87d_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1865_p0 = _18215_p[0LL];;
	jule::U8 _1875_x = _209d2d5e6_first[static_cast<jule::I32>(_1865_p0)];;
	if ((_1875_x >= 240LLU)) {
		jule::I32 _1929_mask = static_cast<jule::I32>(((_1875_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1929_mask))) | (65533LL & _1929_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1955_sz = static_cast<jule::I32>((_1875_x & 7LLU));;
	_209d2db9b_acceptRange _1965_accept = _209d2e042_acceptRanges[static_cast<jule::I32>((_1875_x >> 4LLU))];;
	if ((_18215_p.len() < _1955_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2005_b1 = _18215_p[1LL];;
	if (((_2005_b1 < _1965_accept._field_lo) || (_1965_accept._field_hi < _2005_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1865_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2005_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2075_b2 = _18215_p[2LL];;
	if (((_2075_b2 < 128LLU) || (191LL < _2075_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1955_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1865_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2075_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2145_b3 = _18215_p[3LL];;
	if (((_2145_b3 < 128LLU) || (191LL < _2145_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1865_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2005_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2075_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2145_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _209d2ebbe_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2335_s0 = _22918_s[0LL];;
	jule::U8 _2345_x = _209d2d5e6_first[static_cast<jule::I32>(_2335_s0)];;
	if ((_2345_x >= 240LLU)) {
		jule::I32 _2399_mask = static_cast<jule::I32>(((_2345_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2399_mask))) | (65533LL & _2399_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2425_sz = static_cast<jule::I32>((_2345_x & 7LLU));;
	_209d2db9b_acceptRange _2435_accept = _209d2e042_acceptRanges[static_cast<jule::I32>((_2345_x >> 4LLU))];;
	if ((_22918_s.len() < _2425_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2475_s1 = _22918_s[1LL];;
	if (((_2475_s1 < _2435_accept._field_lo) || (_2435_accept._field_hi < _2475_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2335_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2475_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2545_s2 = _22918_s[2LL];;
	if (((_2545_s2 < 128LLU) || (191LL < _2545_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2425_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2335_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2545_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2615_s3 = _22918_s[3LL];;
	if (((_2615_s3 < 128LLU) || (191LL < _2615_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2335_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2475_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2545_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2615_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _209d3021e_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3215_end = _31722_s.len();;
	jule::I32 _3229_start = (_3215_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3229_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3309_lim = (_3215_end - 4LL);;
	if ((_3309_lim < 0LL)) {
		_3309_lim=0LL;
	};
	(_3229_start)--;
	for (; (_3229_start >= _3309_lim); (_3229_start)--) {
		{
			if (_209d3193a_RuneStart(_31722_s[_3229_start])) {
				goto _iter_end_1ad584162;
			};
		}
	_iter_next_1ad584162:;
	}
	_iter_end_1ad584162:;;
	if ((_3229_start < 0LL)) {
		_3229_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_31722_s.slice(_3229_start, _3215_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3229_start + __jule_func_result.__jule_result_arg1) != _3215_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _209d304d8_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1ad58731e:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1ad58771a:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1ad587792:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1ad587819:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1ad587891:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1ad587385:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1ad5872a8:;
			{
				return -1LL;;
			}
		}
		_match_end_1ad586ab0:;
	};
}



inline jule::I32 _209d3096c_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3765_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3765_i <= 127LLU)) {
			_case_begin_1ad58c038:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3765_i <= 2047LLU)) {
			_case_begin_1ad58c764:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3765_i > 1114111LLU) || ((55296LL <= _3765_i) && (_3765_i <= 57343LLU))) {
			_case_begin_1ad58a2bc:;
			{
				_37434_r=65533LL;
				goto _case_begin_1ad58c621;
			}
		}
		else if ((_3765_i <= 65535LLU)) {
			_case_begin_1ad58c621:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1ad589e04:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1ad589d8d:;
	};
}



inline jule::Slice<jule::U8> _209d30c69_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(_40530_r)}));;
	};
	return _209d310dd_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _209d310dd_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4145_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4145_i <= 2047LLU)) {
			_case_begin_1ad594a13:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(192LL | static_cast<jule::U8>((_41242_r >> 6LL))),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else if ((_4145_i > 1114111LLU) || ((55296LL <= _4145_i) && (_4145_i <= 57343LLU))) {
			_case_begin_1ad5935e4:;
			{
				_41242_r=128LL;
				goto _case_begin_1ad59365a;
			}
		}
		else if ((_4145_i <= 65535LLU)) {
			_case_begin_1ad59365a:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(224LL | static_cast<jule::U8>((_41242_r >> 12LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		else {
			_case_begin_1ad592d96:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({(240LL | static_cast<jule::U8>((_41242_r >> 18LL))),(128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)),(128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)),(128LL | (static_cast<jule::U8>(_41242_r) & 63LLU))}));;
			}
		}
		_match_end_1ad592d30:;
	};
}



inline jule::I32 _209d31671_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4749_i = 0LL;;
	for (; (_4749_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47613_c = _47317_s[_4749_i];;
			if ((_47613_c < 128LLU)) {
				(_4749_i)++;
				goto _iter_next_1ad5980ee;
			};
			jule::U8 _4829_x = _209d2d5e6_first[static_cast<jule::I32>(_47613_c)];;
			if ((_4829_x == 241LLU)) {
				(_4749_i)++;
				goto _iter_next_1ad5980ee;
			};
			jule::I32 _48713_size = static_cast<jule::I32>((_4829_x & 7LLU));;
			if (((_4749_i + _48713_size) > _47317_s.len())) {
				(_4749_i)++;
				goto _iter_next_1ad5980ee;
			};
			_209d2db9b_acceptRange _4929_accept = _209d2e042_acceptRanges[static_cast<jule::I32>((_4829_x >> 4LLU))];;
			_47613_c=_47317_s[(_4749_i + 1LL)];
			if (((_47613_c < _4929_accept._field_lo) || (_4929_accept._field_hi < _47613_c))) {
				_48713_size=1LL;
			} else if ((_48713_size == 2LL)) {
			} else {
				_47613_c=_47317_s[(_4749_i + 2LL)];
				if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
					_48713_size=1LL;
				} else if ((_48713_size == 3LL)) {
				} else {
					_47613_c=_47317_s[(_4749_i + 3LL)];
					if (((_47613_c < 128LLU) || (191LL < _47613_c))) {
						_48713_size=1LL;
					};
				};
			};
			_4749_i+=_48713_size;
		}
	_iter_next_1ad5980ee:;
	}
	_iter_end_1ad5980ee:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _209d3193a_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline void _209d38cb6_handleRW(jule::Slice<jule::U8>* _514_b) {
}



inline void _209d38755_HandleRW(jule::Slice<jule::U8>* _814_b) {
	_209d38cb6_handleRW(_814_b);
}



inline jule::Str _209e019c7_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _119_s = jule::Str();;
	{
		_119_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_119_s._len = _1018_n;
		_119_s._slice = _108_b;
	};
	return _119_s;;
}



inline jule::Slice<jule::U8> _1ad5c503d_Slice(jule::U8* _2316_e, jule::I32 _2326_n) {
	jule::Slice<jule::U8> _249_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_249_buf.data = jule::Ptr<jule::U8>::make(_2316_e, nullptr);
		_249_buf._len = _2326_n;
		_249_buf._cap = _2326_n;
		_249_buf._slice = _2316_e;
	};
	return _249_buf;;
}



inline jule::Slice<jule::U8> _209e0c76e_StrBytes(jule::Str _4113_s) {
	if ((_4113_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1ad5c503d_Slice((&(_4113_s[0LL])), _4113_s.len());;
}



inline jule::Str _209e0ca05_BytesStr(jule::Slice<jule::U8> _5013_b) {
	if ((_5013_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _209e019c7_Str((&(_5013_b[0LL])), _5013_b.len());;
}



inline jule::Str _209e0ccbe_StrFromBytes(jule::Slice<jule::U8> _5817_b) {
	return (*(((jule::Str*)((&(_5817_b))))));;
}



inline jule::I32 _209e3ba34_getLastOsErrorWindows(void) {
	jule::U32 _165_err = _209c0c0eb_GetLastError();;
	{
		auto &_match_expr{ _165_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1ad5d9b79:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1ad5d9be0:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ad5d9c56:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1ad5d9cbc:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1ad5d6a55:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1ad5d6b32:;
	};
}



inline jule::Slice<jule::Str> _209e3d096_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _209e3d508_WorkingDir(void) {
	return _209e3de43_getwd();
}



inline jule::Exceptional<jule::Str> _209e3de43_getwd(void) {
	jule::Array<jule::U16,261> _1513_buf = jule::Array<jule::U16,261>(0);;
	jule::U32 _165_n = _209c0c470_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_1513_buf[0LL])));;
	if ((_165_n == 0LLU)) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_209e3ba34_getLastOsErrorWindows(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Str>{.result=_209bd2bc6_U16PtrToStr((&(_1513_buf[0LL])))};;
}



inline jule::Bool _20b02c272_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_20b08ed51__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _20b098299_isExcludingLatin(_20b036248_Letter, _7613_r);;
}



inline jule::Bool _20b09761c_is16(jule::Slice<_20b09587e_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ae45e8cc:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_20b09587e_Range16* _19413_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < (*(_19413_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_19413_range))._field_Hi)) {
							return (((*(_19413_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_19413_range))._field_Lo),(*(_19413_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ae45e8cc:;
				++it;
				_19313_i++;
				goto _iter_begin_1ae45e8cc;
			}
			_iter_end_1ae45e8cc:;
		};
		return false;;
	};
	jule::I32 _2089_lo = 0LL;;
	jule::I32 _2099_hi = _1919_ranges.len();;
	while ((_2089_lo < _2099_hi)) {
		{
			jule::I32 _2119_m = (_2089_lo + ((_2099_hi - _2089_lo) >> 1LLU));;
			_20b09587e_Range16* _2129_range = (&(_1919_ranges[_2119_m]));;
			{
				if ((((*(_2129_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2129_range))._field_Hi))) {
					return (((*(_2129_range))._field_Stride == 1LLU) || (jule::mod((_19128_r - (*(_2129_range))._field_Lo),(*(_2129_range))._field_Stride) == 0LLU));;
				};
				if ((_19128_r < (*(_2129_range))._field_Lo)) {
					_2099_hi=_2119_m;
				} else {
					_2089_lo=(_2119_m + 1LL);
				};
			};
		}
	_iter_next_1ae45d6de:;
	}
	_iter_end_1ae45d6de:;;
	return false;;
}



inline jule::Bool _20b097991_is32(jule::Slice<_20b095dac_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ae4660a9:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_20b095dac_Range32* _23113_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < (*(_23113_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_23113_range))._field_Hi)) {
							return (((*(_23113_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_23113_range))._field_Lo),(*(_23113_range))._field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1ae4660a9:;
				++it;
				_23013_i++;
				goto _iter_begin_1ae4660a9;
			}
			_iter_end_1ae4660a9:;
		};
		return false;;
	};
	jule::I32 _2459_lo = 0LL;;
	jule::I32 _2469_hi = _2289_ranges.len();;
	while ((_2459_lo < _2469_hi)) {
		{
			jule::I32 _2489_m = (_2459_lo + ((_2469_hi - _2459_lo) >> 1LLU));;
			_20b095dac_Range32* _2499_range = (&(_2289_ranges[_2489_m]));;
			{
				if ((((*(_2499_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2499_range))._field_Hi))) {
					return (((*(_2499_range))._field_Stride == 1LLU) || (jule::mod((_22828_r - (*(_2499_range))._field_Lo),(*(_2499_range))._field_Stride) == 0LLU));;
				};
				if ((_22828_r < (*(_2499_range))._field_Lo)) {
					_2469_hi=_2489_m;
				} else {
					_2459_lo=(_2489_m + 1LL);
				};
			};
		}
	_iter_next_1ae4659d2:;
	}
	_iter_end_1ae4659d2:;;
	return false;;
}



inline jule::Bool _20b098299_isExcludingLatin(jule::Ptr<_20b096330_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_20b09587e_Range16> *_28010_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2829_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_28010_R16)).len() > _2829_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28010_R16))[((*(_28010_R16)).len() - 1LL)]._field_Hi)))) {
			return _20b09761c_is16((*(_28010_R16)).slice(_2829_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_20b095dac_Range32> *_2876_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2876_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2876_R32))[0LL]._field_Lo)))) {
		return _20b097991_is32((*(_2876_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _20b0984db_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_20b08ed51__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _20b098299_isExcludingLatin(_20b042375_Upper, _29512_r);;
}



inline jule::I32 _20b0d8c68_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _469_it = _4535_end;;
	for (; (_469_it >= _4517_begin); (_469_it)--) {
		{
			{
				if (((*(_469_it)) == _4547_b)) {
					return ((jule::I32)((_469_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1ae47ba1a:;
	}
	_iter_end_1ae47ba1a:;;
	return -1LL;;
}



inline jule::I32 _20b0d9395_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae47db4e:;
		if (it != expr_end) {
			jule::I32 _709_i = it - expr->begin();
			jule::U8 *_7012_se = it;
			{
				if (((*(_7012_se)) == _6824_b)) {
					return _709_i;;
				};
			}
			_iter_next_1ae47db4e:;
			++it;
			_709_i++;
			goto _iter_begin_1ae47db4e;
		}
		_iter_end_1ae47db4e:;
	};
	return -1LL;;
}



inline jule::I32 _20b0d9719_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _20b0d8c68_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _20b0d9a16_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > jule::div(2147483647LL,_1123_n))) {
		jule::panic(jule::Str::lit("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:16:9"));;
	};
	_209e0d4d9_StrBuilder _189_ss = static__209e0d918_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			_209e0de79_WriteStr(&_189_ss, _1111_s);
		}
	_iter_next_1ae494c53:;
	}
	_iter_end_1ae494c53:;;
	return _209e0e771_Str(&_189_ss);;
}



inline jule::Bool _20b0d9dce_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _20b0da253_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _20b0da709_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_20b0d9dce_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1ae49888e:;
	}
	_iter_end_1ae49888e:;;
	return -1LL;;
}



inline jule::I32 _20b0daa4a_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _20b0da709_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _20b0dae79_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _639_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_639_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1ae49b5d9:;
	for (; (_639_j >= 0LL); (_639_j)--) {
		{
			jule::I32 _6913_k = _639_j;;
			jule::I32 _7013_z = 0LL;;
			for (; (_7013_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_6913_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_7013_z + 1LL);
				_6913_k = ___jule_assign_arg;
				_7013_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_6913_k] != _6223_sub[_7013_z])) {
						goto _iter_next_1ae49b243;
					};
				}
			_iter_next_1ae49c222:;
			}
			_iter_end_1ae49c222:;;
			return _639_j;;
		}
	_iter_next_1ae49b243:;
	}
	_iter_end_1ae49b243:;;
	return -1LL;;
}



inline jule::I32 _20b0db2ed_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _20b0dae79_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _20b0dcad5_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _20b0d9719_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _20b0dce59_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1569_i = 0LL;;
	while ((_1569_i < _15513_s.len())) {
		{
			jule::I32 _1589_br;
			jule::I32 _15813_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_15513_s.slice(_1569_i));
				_1589_br = __jule_assign_result.__jule_result_arg0;
				_15813_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1589_br)) {
				return _1569_i;;
			};
			_1569_i+=_15813_n;
		}
	_iter_next_1ae4a4acb:;
	}
	_iter_end_1ae4a4acb:;;
	return -1LL;;
}



inline jule::I32 _20b0dd883_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1869_i = 0LL;;
	while ((_1869_i < _18512_s.len())) {
		{
			jule::I32 _1889_r;
			jule::I32 _18812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_18512_s.slice(_1869_i));
				_1889_r = __jule_assign_result.__jule_result_arg0;
				_18812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b0dce59_FindRune(_18520_runes, _1889_r) != -1LL)) {
				return _1869_i;;
			};
			_1869_i+=_18812_n;
		}
	_iter_next_1ae4a7e0e:;
	}
	_iter_end_1ae4a7e0e:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _20b0de026_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2169_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2169_cap=16LLU;
	};
	jule::Slice<jule::Str> _2209_parts = jule::Slice<jule::Str>::alloc(0LL, _2169_cap);;
	if ((_21532_n == 0LL)) {
		return _2209_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2279_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2299_j = _20b0da709_FindAt(_21510_s, _21518_sub, _2279_i);;
			if ((_2299_j == -1LL)) {
				goto _iter_end_1ae4acae5;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i, _2299_j)); };
			_2279_i=(_2299_j + _21518_sub.len());
		}
	_iter_next_1ae4acae5:;
	}
	_iter_end_1ae4acae5:;;
	if (((_21532_n > 0LL) && (_2279_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2209_parts; __jule_push_dest.push(_21510_s.slice(_2279_i)); };
	};
	return _2209_parts;;
}



inline jule::Bool _20b0de39a_Contains(jule::Str _24313_s, jule::Str _24321_sub) {
	return (_20b0da709_FindAt(_24313_s, _24321_sub, 0LL) != -1LL);;
}



inline jule::Bool _20b0dee17_ContainsAny(jule::Str _25816_s, jule::Str _25824_runes) {
	return (_20b0dd883_FindAny(_25816_s, _25824_runes) != -1LL);;
}



inline jule::I32 _20b0e028b_Count(jule::Str _26410_s, jule::Str _26418_sub) {
	if ((_26418_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2689_n = 0LL;;
	jule::I32 _2699_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2719_j = _20b0da709_FindAt(_26410_s, _26418_sub, _2699_i);;
			if ((_2719_j == -1LL)) {
				goto _iter_end_1ae4b2c60;
			};
			(_2689_n)++;
			_2699_i=(_2719_j + _26418_sub.len());
		}
	_iter_next_1ae4b2c60:;
	}
	_iter_end_1ae4b2c60:;;
	return _2689_n;;
}



inline jule::Str _20b0e0775_Replace(jule::Str _28412_s, jule::Str _28420_sub, jule::Str _28430_new, jule::I32 _28444_n) {
	if (((_28444_n == 0LL) || (_28420_sub == _28430_new))) {
		return _28412_s;;
	};
	jule::I32 _2895_m = _20b0e028b_Count(_28412_s, _28420_sub);;
	if ((_2895_m == 0LL)) {
		return _28412_s;;
	};
	if (((_28444_n < 0LL) || (_2895_m < _28444_n))) {
		_28444_n=_2895_m;
	};
	_209e0d4d9_StrBuilder _2979_ss = static__209e0d918_New(((_28412_s.len() + (_28444_n * (_28430_new.len() - _28420_sub.len()))) + 1LL));;
	jule::I32 _2989_i = 0LL;;
	for (; (_28444_n > 0LL); (_28444_n)--) {
		{
			jule::I32 _3009_j = _20b0da709_FindAt(_28412_s, _28420_sub, _2989_i);;
			if ((_3009_j == -1LL)) {
				goto _iter_end_1ae4b6725;
			};
			_209e0de79_WriteStr(&_2979_ss, _28412_s.slice(_2989_i, _3009_j));
			_209e0de79_WriteStr(&_2979_ss, _28430_new);
			_2989_i=(_3009_j + _28420_sub.len());
		}
	_iter_next_1ae4b6725:;
	}
	_iter_end_1ae4b6725:;;
	_209e0de79_WriteStr(&_2979_ss, _28412_s.slice(_2989_i));
	return _209e0e771_Str(&_2979_ss);;
}



inline jule::Str _20b0e1501_TrimLeft(jule::Str _34117_s, jule::Str _34125_cutset) {
	jule::I32 _3429_i = 0LL;;
	while ((_3429_i < _34117_s.len())) {
		{
			jule::I32 _3449_r;
			jule::I32 _34412_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_34117_s.slice(_3429_i));
				_3449_r = __jule_assign_result.__jule_result_arg0;
				_34412_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b0dce59_FindRune(_34125_cutset, _3449_r) == -1LL)) {
				return _34117_s.slice(_3429_i);;
			};
			_3429_i+=_34412_n;
		}
	_iter_next_1ae4bb0ed:;
	}
	_iter_end_1ae4bb0ed:;;
	return jule::Str();;
}



inline jule::Str _20b0e1875_TrimRight(jule::Str _35514_s, jule::Str _35522_cutset) {
	jule::I32 _3569_i = _35514_s.len();;
	while ((_3569_i > 0LL)) {
		{
			jule::I32 _3589_r;
			jule::I32 _35812_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d3021e_DecodeLastRuneStr(_35514_s.slice(0LL, _3569_i));
				_3589_r = __jule_assign_result.__jule_result_arg0;
				_35812_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_20b0dce59_FindRune(_35522_cutset, _3589_r) == -1LL)) {
				return _35514_s.slice(0LL, _3569_i);;
			};
			_3569_i-=_35812_n;
		}
	_iter_next_1ae4bd2ba:;
	}
	_iter_end_1ae4bd2ba:;;
	return jule::Str();;
}



inline jule::Str _20b0e1be9_Trim(jule::Str _3699_s, jule::Str _36917_cutset) {
	return _20b0e1501_TrimLeft(_20b0e1875_TrimRight(_3699_s, _36917_cutset), _36917_cutset);;
}



inline jule::Bool _209e11036_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _209e11344_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _209e1160d_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _209e11bd5_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _885_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _885_c) && (_885_c <= 'z')) || (('A' <= _885_c) && (_885_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_209e11344_isSlash(_8318_path[0LL]))) || (!(_209e11344_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _965_p1;
	jule::Str _9613_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _209e11e9e_cutPath(_8318_path.slice(2LL));
		_965_p1 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _979_p2 = jule::Str();;
	jule::Bool _989_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _209e11e9e_cutPath(_9613_rest);
		_979_p2 = __jule_assign_result.__jule_result_arg0;
		_9613_rest = __jule_assign_result.__jule_result_arg1;
		_989_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_989_ok))) {
		return _8318_path.len();;
	};
	if (((!_965_p1.equal(".", 1)) && (!_965_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
	};
	if (((((_979_p2.len() == 3LL) && (_209e1160d_toUpper(_979_p2[0LL]) == 'U')) && (_209e1160d_toUpper(_979_p2[1LL]) == 'N')) && (_209e1160d_toUpper(_979_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _209e11e9e_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _209e11e9e_cutPath(_9613_rest);
			_9613_rest = __jule_assign_result.__jule_result_arg1;
			_989_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_989_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9613_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _209e11e9e_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae4d9db9:;
		if (it != expr_end) {
			jule::I32 _1219_i = it - expr->begin();
			{
				if (_209e11344_isSlash(_12012_path[_1219_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1219_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1219_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1ae4d9db9:;
			++it;
			_1219_i++;
			goto _iter_begin_1ae4d9db9;
		}
		_iter_end_1ae4d9db9:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _209e12268_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1305_utf16Name = _209bd25ee_UTF16FromStr(_12913_name);;
	jule::U16* _1315_p = (&(_1305_utf16Name[0LL]));;
	jule::U32 _1329_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _13413_buf = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1329_n), static_cast<jule::I32>(_1329_n), 0);;
			_1329_n=_209c0d570_GetFullPathName(_1315_p, static_cast<jule::U32>(_13413_buf.len()), (&(_13413_buf[0LL])), nullptr);
			if ((_1329_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1329_n <= static_cast<jule::U32>(_13413_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _209bd290c_UTF16ToStr(_13413_buf.slice(0LL, static_cast<jule::I32>(_1329_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1ae4da507:;
	}
	_iter_end_1ae4da507:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _209e12642_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _209e12268_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _20b0e45e2_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _209e12884_join(jule::Slice<jule::Str> _16013_elem) {
	_209e0d4d9_StrBuilder _1619_s = static__209e0d918_New(16LL);;
	jule::U8 _1629_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_16013_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae4e1299:;
		if (it != expr_end) {
			jule::Str _16317_e = *it;
			{
				{
					
					if ((_209e0ec05_Len(&_1619_s) == 0LL)) {
						_case_begin_1ae4e2047:;
					}
					else if (_209e11344_isSlash(_1629_lastChar)) {
						_case_begin_1ae4e2410:;
						{
							while (((_16317_e.len() > 0LL) && _209e11344_isSlash(_16317_e[0LL]))) {
								{
									(_16317_e).mut_slice(1LL);;
								}
							_iter_next_1ae4e2a3c:;
							}
							_iter_end_1ae4e2a3c:;;
						}
					}
					else if ((_1629_lastChar == ':')) {
						_case_begin_1ae4e1c28:;
					}
					else {
						_case_begin_1ae4e1bb2:;
						{
							_209e0e232_WriteByte(&_1619_s, '\\');
							_1629_lastChar='\\';
						}
					}
					_match_end_1ae4e1ab3:;
				};
				if ((_16317_e.len() > 0LL)) {
					_209e0de79_WriteStr(&_1619_s, _16317_e);
					_1629_lastChar=_16317_e[(_16317_e.len() - 1LL)];
				};
			}
			_iter_next_1ae4e1299:;
			++it;
			goto _iter_begin_1ae4e1299;
		}
		_iter_end_1ae4e1299:;
	};
	if ((_209e0ec05_Len(&_1619_s) == 0LL)) {
		return jule::Str();;
	};
	return _20b0e45e2_Clean(_209e0e771_Str(&_1619_s));;
}



inline jule::Str _20b0e45e2_Clean(jule::Str _10914_path) {
	jule::Str _1105_originalPath = _10914_path;;
	jule::I32 _1115_volLen = _209e11bd5_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1115_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1115_volLen > 1LL) && _209e11036_IsPathSep(_1105_originalPath[0LL])) && _209e11036_IsPathSep(_1105_originalPath[1LL]))) {
			return _20b0e4bb9_FromSlash(_1105_originalPath);;
		};
		return (_1105_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1205_rooted = _209e11036_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1275_n = _10914_path.len();;
	_20b0e3789_lazyBuff _1289_out = _20b0e3789_lazyBuff{._field_path=_10914_path, ._field_volAndPath=_1105_originalPath, ._field_volLen=_1115_volLen};;
	jule::I32 _1339_r;
	jule::I32 _13316_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1339_r = ___jule_assign_arg;
		_13316_dotdot = _1___jule_assign_arg;
	});
	if (_1205_rooted) {
		_20b0e3e93_append(&_1289_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1339_r = ___jule_assign_arg;
			_13316_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1339_r < _1275_n)) {
		{
			{
				
				if (_209e11036_IsPathSep(_10914_path[_1339_r])) {
					_case_begin_1ab4ca484:;
					{
						(_1339_r)++;
					}
				}
				else if (((_10914_path[_1339_r] == '.') && (((_1339_r + 1LL) == _1275_n) || _209e11036_IsPathSep(_10914_path[(_1339_r + 1LL)])))) {
					_case_begin_1ab4caad3:;
					{
						(_1339_r)++;
					}
				}
				else if ((((_10914_path[_1339_r] == '.') && (_10914_path[(_1339_r + 1LL)] == '.')) && (((_1339_r + 2LL) == _1275_n) || _209e11036_IsPathSep(_10914_path[(_1339_r + 2LL)])))) {
					_case_begin_1ab4cab49:;
					{
						_1339_r+=2LL;
						{
							
							if ((_1289_out._field_w > _13316_dotdot)) {
								_case_begin_1ab4cd652:;
								{
									(_1289_out._field_w)--;
									while (((_1289_out._field_w > _13316_dotdot) && (!(_209e11036_IsPathSep(_20b0e3bda_index(&_1289_out, _1289_out._field_w)))))) {
										{
											(_1289_out._field_w)--;
										}
									_iter_next_1ab4cddd3:;
									}
									_iter_end_1ab4cddd3:;;
								}
							}
							else if ((!(_1205_rooted))) {
								_case_begin_1ab4cd6eb:;
								{
									if ((_1289_out._field_w > 0LL)) {
										_20b0e3e93_append(&_1289_out, 92LLU);
									};
									_20b0e3e93_append(&_1289_out, '.');
									_20b0e3e93_append(&_1289_out, '.');
									_13316_dotdot=_1289_out._field_w;
								}
							}
							_match_end_1ab4cd2de:;
						};
					}
				}
				else {
					_case_begin_1adcdbca4:;
					{
						if (((_1205_rooted && (_1289_out._field_w != 1LL)) || ((!(_1205_rooted)) && (_1289_out._field_w != 0LL)))) {
							_20b0e3e93_append(&_1289_out, 92LLU);
						};
						if ((((_1289_out._field_w == 0LL) && (_1289_out._field_volLen == 0LL)) && (_1339_r != 0LL))) {
							jule::I32 _17621_i = _1339_r;;
							for (; ((_17621_i < _1275_n) && (!(_209e11036_IsPathSep(_10914_path[_17621_i])))); (_17621_i)++) {
								{
									if ((_10914_path[_17621_i] == ':')) {
										_20b0e3e93_append(&_1289_out, '.');
										_20b0e3e93_append(&_1289_out, 92LLU);
										goto _iter_end_1adcdd778;
									};
								}
							_iter_next_1adcdd778:;
							}
							_iter_end_1adcdd778:;;
						};
						for (; ((_1339_r < _1275_n) && (!(_209e11036_IsPathSep(_10914_path[_1339_r])))); (_1339_r)++) {
							{
								_20b0e3e93_append(&_1289_out, _10914_path[_1339_r]);
							}
						_iter_next_1adcddbc9:;
						}
						_iter_end_1adcddbc9:;;
					}
				}
				_match_end_1adcdbc0a:;
			};
		}
	_iter_next_1adcdb369:;
	}
	_iter_end_1adcdb369:;;
	if ((_1289_out._field_w == 0LL)) {
		_20b0e3e93_append(&_1289_out, '.');
	};
	return _20b0e4bb9_FromSlash(_20b0e4229_string(&_1289_out));;
}



inline jule::Str _20b0e4bb9_FromSlash(jule::Str _21214_path) {
	;
	return _20b0e0775_Replace(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1), -1LL);;
}



inline jule::Str _20b0e500a_Join(jule::Slice<jule::Str> _2269_elem) {
	return _209e12884_join(_2269_elem);;
}



inline jule::Str _20b0e5291_Ext(jule::Str _2318_path) {
	jule::I32 _2329_i = (_2318_path.len() - 1LL);;
	for (; ((_2329_i >= 0LL) && (!(_209e11036_IsPathSep(_2318_path[_2329_i])))); (_2329_i)--) {
		{
			if ((_2318_path[_2329_i] == '.')) {
				return _2318_path.slice(_2329_i);;
			};
		}
	_iter_next_1ab4d314b:;
	}
	_iter_end_1ab4d314b:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _20b0e555a_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_209e12642_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _20b0e5824_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _209e11036_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1ab4d449e:;
	}
	_iter_end_1ab4d449e:;;
	(_25213_path).mut_slice(_20b0e5e40_VolumeName(_25213_path).len());;
	jule::I32 _2639_i = (_25213_path.len() - 1LL);;
	while (((_2639_i >= 0LL) && (!(_209e11036_IsPathSep(_25213_path[_2639_i]))))) {
		{
			(_2639_i)--;
		}
	_iter_next_1ab4d489a:;
	}
	_iter_end_1ab4d489a:;;
	if ((_2639_i >= 0LL)) {
		(_25213_path).mut_slice((_2639_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _20b0e5bed_Dir(jule::Str _2838_path) {
	jule::Str _2845_vol = _20b0e5e40_VolumeName(_2838_path);;
	jule::I32 _2859_i = (_2838_path.len() - 1LL);;
	while (((_2859_i >= _2845_vol.len()) && (!(_209e11036_IsPathSep(_2838_path[_2859_i]))))) {
		{
			(_2859_i)--;
		}
	_iter_next_1ab4d811d:;
	}
	_iter_end_1ab4d811d:;;
	jule::Str _2895_dir = _20b0e45e2_Clean(_2838_path.slice(_2845_vol.len(), (_2859_i + 1LL)));;
	if ((_2895_dir.equal(".", 1) && (_2845_vol.len() > 2LL))) {
		return _2845_vol;;
	};
	return (_2845_vol + _2895_dir);;
}



inline jule::Str _20b0e5e40_VolumeName(jule::Str _30115_path) {
	return _20b0e4bb9_FromSlash(_30115_path.slice(0LL, _209e11bd5_volumeNameLen(_30115_path)));;
}



inline jule::I32 _209c232ee_getLastFsError(void) {
	jule::I32 _725_err = _209872c62_GetLastErrno();;
	{
		auto &_match_expr{ _725_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1ab4eb153:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1ab4eb054:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1ab4ea98d:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1ab4eaa04:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1ab4eaa6a:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1ab4eaae2:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1ab4eab69:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1ab4eabe1:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1ab4eb2eb:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1ab4eb373:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1ab4eb3ea:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1ab4eb472:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1ab4eb4e9:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1ab4eb571:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1ab4eb5e8:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1ab4eb670:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1ab4eb6e7:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1ab4eb76e:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1ab4eb7e6:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1ab4eb86d:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1ab4eb8e5:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1ab4eb96c:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1ab4eb9e4:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1ab4eba6b:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1ab4ebae3:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1ab4ebb6a:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1ab4ebbe2:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1ab4ebc69:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1ab4ea828:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1ab4ea938:;
	};
}



inline jule::Bool _209d3a636_isConsoleHandle(jule::Uintptr _11620_handle) {
	return (((_11620_handle == _209c0aa67_STDIN) || (_11620_handle == _209c0ad0e_STDOUT)) || (_11620_handle == _209c0b10b_STDERR));;
}



inline void _20b19ca30_appendEscapeArg(_209e0d4d9_StrBuilder* _10225_s, jule::Str _10240_arg) {
	if ((_10240_arg.len() == 0LL)) {
		_209e0de79_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
		return;;
	};
	jule::Bool _1089_needsBackslash = false;;
	jule::Bool _1099_hasSpace = false;;
	jule::I32 _1109_i = 0LL;;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			{
				auto &_match_expr{ _10240_arg[_1109_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1ab54072a:;
					{
						_1089_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1ab540a27:;
					{
						_1099_hasSpace=true;
					}
				}
				_match_end_1ab540917:;
			};
		}
	_iter_next_1ab540285:;
	}
	_iter_end_1ab540285:;;
	if (((!(_1089_needsBackslash)) && (!(_1099_hasSpace)))) {
		_209e0de79_WriteStr(_10225_s, _10240_arg);
		return;;
	};
	if ((!(_1089_needsBackslash))) {
		_209e0e232_WriteByte(_10225_s, '\"');
		_209e0de79_WriteStr(_10225_s, _10240_arg);
		_209e0e232_WriteByte(_10225_s, '\"');
		return;;
	};
	if (_1099_hasSpace) {
		_209e0e232_WriteByte(_10225_s, '\"');
	};
	jule::I32 _1369_slashes = 0LL;;
	_1109_i=0LL;
	for (; (_1109_i < _10240_arg.len()); (_1109_i)++) {
		{
			jule::U8 _1399_c = _10240_arg[_1109_i];;
			{
				auto &_match_expr{ _1399_c };
				
				if (_match_expr == '\\') {
					_case_begin_1ab543d6b:;
					{
						(_1369_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1ab543e37:;
					{
						for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
							{
								_209e0e232_WriteByte(_10225_s, '\\');
							}
						_iter_next_1ab544641:;
						}
						_iter_end_1ab544641:;;
						_209e0e232_WriteByte(_10225_s, '\\');
					}
				}
				else {
					_case_begin_1ab5438e8:;
					{
						_1369_slashes=0LL;
					}
				}
				_match_end_1ab543a08:;
			};
			_209e0e232_WriteByte(_10225_s, _1399_c);
		}
	_iter_next_1ab543123:;
	}
	_iter_end_1ab543123:;;
	if (_1099_hasSpace) {
		for (; (_1369_slashes > 0LL); (_1369_slashes)--) {
			{
				_209e0e232_WriteByte(_10225_s, '\\');
			}
		_iter_next_1ab5451d0:;
		}
		_iter_end_1ab5451d0:;;
		_209e0e232_WriteByte(_10225_s, '\"');
	};
}



inline jule::Str _20b19cce9_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_209e0d4d9_StrBuilder _1649_s = static__209e0d918_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab545e06:;
		if (it != expr_end) {
			jule::Str *_16512_arg = it;
			{
				if ((_209e0ec05_Len(&_1649_s) > 0LL)) {
					_209e0e232_WriteByte(&_1649_s, ' ');
				};
				_20b19ca30_appendEscapeArg(&(_1649_s), (*(_16512_arg)));
			}
			_iter_next_1ab545e06:;
			++it;
			goto _iter_begin_1ab545e06;
		}
		_iter_end_1ab545e06:;
	};
	return _209e0e771_Str(&_1649_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _20b19d1c3_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_209bd1c91_Encode(jule::Slice<jule::I32>::make({0LL,0LL}))};;
	};
	jule::I32 _1839_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab547831:;
		if (it != expr_end) {
			jule::Str *_18412_s = it;
			{
				if ((_20b0d9395_FindByteStr((*(_18412_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
				};
				_1839_n+=((*(_18412_s)).len() + 1LL);
			}
			_iter_next_1ab547831:;
			++it;
			goto _iter_begin_1ab547831;
		}
		_iter_end_1ab547831:;
	};
	(_1839_n)++;
	jule::Slice<jule::U16> _1919_b = jule::Slice<jule::U16>::alloc(0LL, _1839_n, 0);;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab54715a:;
		if (it != expr_end) {
			jule::Str *_19212_s = it;
			{
				{
					auto expr = _19212_s;
					char *it = expr->operator char*();
					const char *end = it + expr->len();
					std::size_t len;
					jule::I32 _19316_c;
					_iter_begin_1ab549c51:;
					std::tie(_19316_c, len) = jule::utf8_decode_rune_str(it, end - it);
					if (it < end) {
						{
							_1919_b=_209bd239b_AppendRune(_1919_b, _19316_c);
						}
						_iter_next_1ab549c51:;
						it += len;
						goto _iter_begin_1ab549c51;
					}
				};
				_1919_b=_209bd239b_AppendRune(_1919_b, 0LL);
			}
			_iter_next_1ab54715a:;
			++it;
			goto _iter_begin_1ab54715a;
		}
		_iter_end_1ab54715a:;
	};
	_1919_b=_209bd239b_AppendRune(_1919_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1919_b};;
}



inline jule::I32 _20b19e1c4_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1ab54b1d6:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1ab54aa65:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1ab54a4d2:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1ab54a68b:;
	};
}



inline jule::I32 _20b19e3e4_getLastProcessError(void) {
	return _20b19e1c4_processErrorFromCode(static_cast<jule::I32>(_209c0c0eb_GetLastError()));;
}



inline void _20b19ec0d_Exit(jule::I32 _129_code) {
	_209c1329a_Exit(_129_code);
}



inline jule::Str _20b19ee1c_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1eb221a1a_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1eb221ce5_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1eb18de71_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae60a3b3:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ae60a3b3:;
			++it;
			goto _iter_begin_1ae60a3b3;
		}
		_iter_end_1ae60a3b3:;
	};
	return false;;
}



inline jule::Bool _1eb2220ae_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1eb18e1a2_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae60a957:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1ae60a957:;
			++it;
			goto _iter_begin_1ae60a957;
		}
		_iter_end_1ae60a957:;
	};
	{
		auto expr = &(_1eb21ed26_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae60b590:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1ae60b590:;
			++it;
			goto _iter_begin_1ae60b590;
		}
		_iter_end_1ae60b590:;
	};
	return false;;
}



inline jule::Str _1eb22e594_Logf(jule::Str _3239_fmt, jule::Slice<jule::Any> _32322_args) {
	return _1eb230034_applyFmt(_3239_fmt, _32322_args);;
}



inline jule::Str _1eb22e8a2_argToStr(jule::Any _32713_arg) {
	{
		auto &_match_expr{ _32713_arg };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1ae60cad0:;
			{
				return _32713_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1ae60d251:;
			{
				return jule::Str::from_byte(_32713_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1ae60d2c8:;
			{
				return jule::Str::from_rune(_32713_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1ae60cd11:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1ae60ccab:;
	};
}



inline jule::I32 _1eb22eb6b_findNextFmt(jule::Str _34016_fmt) {
	{
		auto expr = &(_34016_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae60ce21:;
		if (it != expr_end) {
			jule::I32 _3419_i = it - expr->begin();
			jule::U8 *_34112_b = it;
			{
				if (((*(_34112_b)) == '@')) {
					return _3419_i;;
				};
			}
			_iter_next_1ae60ce21:;
			++it;
			_3419_i++;
			goto _iter_begin_1ae60ce21;
		}
		_iter_end_1ae60ce21:;
	};
	return -1LL;;
}



inline jule::Str _1eb230034_applyFmt(jule::Str _34917_fmt, jule::Slice<jule::Any> _34927_args) {
	_209e0d4d9_StrBuilder _3509_s = static__209e0d918_New(32LL);;
	{
		auto expr = &(_34927_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae60ed35:;
		if (it != expr_end) {
			jule::Any *_35112_arg = it;
			{
				jule::I32 _3529_i = _1eb22eb6b_findNextFmt(_34917_fmt);;
				if ((_3529_i == -1LL)) {
					goto _iter_end_1ae60ed35;
				};
				_209e0de79_WriteStr(&_3509_s, _34917_fmt.slice(0LL, _3529_i));
				_209e0de79_WriteStr(&_3509_s, _1eb22e8a2_argToStr((*(_35112_arg))));
				(_34917_fmt).mut_slice((_3529_i + 1LL));;
			}
			_iter_next_1ae60ed35:;
			++it;
			goto _iter_begin_1ae60ed35;
		}
		_iter_end_1ae60ed35:;
	};
	_209e0de79_WriteStr(&_3509_s, _34917_fmt);
	return _209e0e771_Str(&_3509_s);;
}



inline jule::Bool _1eb230d8c_IsTopDirective(jule::Str _2219_directive) {
	return (_2219_directive.equal("pass", 4) || _2219_directive.equal("build", 5));;
}



inline jule::Bool _1eb2322ab_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1eb2325b9_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1eb232883_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1eb232bc4_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1eb232e5a_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1eb233224_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1eb2334dd_IsUnix(jule::Str _5511_os) {
	return (_1eb2325b9_IsDarwin(_5511_os) || _1eb232883_IsLinux(_5511_os));;
}



inline jule::Bool _1eb2338b7_Is32Bit(jule::Str _5812_arch) {
	return _1eb232bc4_IsI386(_5812_arch);;
}



inline jule::Bool _1eb233b09_Is64Bit(jule::Str _6112_arch) {
	return (_1eb232e5a_IsAmd64(_6112_arch) || _1eb233224_IsArm64(_6112_arch));;
}



inline void _20b1a11a4_init(void) {
	jule::Str _259_path = _20b19ee1c_Executable();;
	if ((_259_path).empty()) {
		jule::panic(jule::Str::lit("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_20b1a0703_PathWd=({
			auto except = _209e3d508_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str::lit("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_20b1a045b_PathExec=_20b0e5bed_Dir(_259_path);
		_20b1a024c_PathStdlib=_20b0e500a_Join(jule::Slice<jule::Str>::make({_20b1a045b_PathExec,jule::Str::lit("..", 2),jule::Str::lit("std", 3)}));
		_20b1a0a00_PathApi=_20b0e500a_Join(jule::Slice<jule::Str>::make({_20b1a045b_PathExec,jule::Str::lit("..", 2),jule::Str::lit("api", 3),jule::Str::lit("jule.hpp", 8)}));
	};
}



inline jule::I32 _1b9a3b795_LeadingZeros64(jule::U64 _6119_x) {
	return (64LL - _1b9a4412c_Len64(_6119_x));;
}



inline jule::I32 _1b9a3c6db_TrailingZeros(jule::U32 _8318_x) {
	;
	return _1b9a3d38a_TrailingZeros64(static_cast<jule::U64>(_8318_x));;
}



inline jule::I32 _1b9a3d0c1_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1b9a3bdd3__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1b9a3d38a_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1b9a3c477__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1b9a43d63_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35214_x))));
	return __jule_func_result;;
}



inline jule::I32 _1b9a4412c_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36614_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b9a44db9_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=((_41510_x + _41518_y) + _41526_carry);
	__jule_func_result.__jule_result_arg1=(((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1b9a466c3_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5015_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5025_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5035_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5045_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5055_w0 = (_5015_x0 * _5035_y0);;
	jule::U64 _5065_t = ((_5025_x1 * _5035_y0) + (_5055_w0 >> 32LLU));;
	jule::U64 _5079_w1 = (_5065_t & 4294967295LLU);;
	jule::U64 _5085_w2 = (_5065_t >> 32LLU);;
	_5079_w1+=(_5015_x0 * _5045_y1);
	__jule_func_result.__jule_result_arg0=(((_5025_x1 * _5045_y1) + _5085_w2) + (_5079_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(_49910_x * _49918_y);
	return __jule_func_result;;
}



inline jule::U32 _1b994d311_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1b994d61e_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1b994d8d8_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1b994dc29_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1b995128c_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ae6e4348:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1b9a4e29c_IsInf(_4714_f, 0LL) || _1b9a4db1a_IsNaN(_4714_f)) {
			_case_begin_1ae6e43e2:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ae6e426b:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b9a4e566_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _569_x = _1b994d8d8_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_569_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_569_x=(_569_x & 9227875636482146303LLU);
	_569_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1b994dc29_F64FromBits(_569_x);
	return __jule_func_result;;
}



inline jule::F64 _1b9a4d80c_NaN(void) {
	return _1b994dc29_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1b9a4db1a_IsNaN(jule::F64 _5210_f) {
	return false;;
}



inline jule::F64 _1b9a4ddd4_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1b994dc29_F64FromBits(9218868437227405312LLU);;
	};
	return _1b994dc29_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1b9a4e29c_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1b9a4e566_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1b9a51920_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1b9a5103a_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1b9a4db1a_IsNaN(_1118_x) || _1b9a4e29c_IsInf(_1118_x, 1LL)) {
			_case_begin_1ae731e46:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ae731ee0:;
			{
				return _1b9a4d80c_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ae732056:;
			{
				return _1b9a4ddd4_Inf(-1LL);;
			}
		}
		_match_end_1ae731d7a:;
	};
	jule::F64 _1339_f1;
	jule::I32 _13317_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b995128c_Frexp(_1118_x);
		_1339_f1 = __jule_assign_result.__jule_result_arg0;
		_13317_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1339_f1 < 0.7071067811865476)) {
		_1339_f1*=2LL;
		(_13317_ki)--;
	};
	jule::F64 _1385_f = (_1339_f1 - 1LL);;
	jule::F64 _1395_k = static_cast<jule::F64>(_13317_ki);;
	jule::F64 _1425_s = jule::div(_1385_f,(2LL + _1385_f));;
	jule::F64 _1435_s2 = (_1425_s * _1425_s);;
	jule::F64 _1445_s4 = (_1435_s2 * _1435_s2);;
	jule::F64 _1455_t1 = (_1435_s2 * (0.6666666666666735 + (_1445_s4 * (0.2857142874366239 + (_1445_s4 * (0.1818357216161805 + (_1445_s4 * 0.14798198605116586)))))));;
	jule::F64 _1465_t2 = (_1445_s4 * (0.3999999999940942 + (_1445_s4 * (0.22222198432149784 + (_1445_s4 * 0.15313837699209373)))));;
	jule::F64 _1475_R = (_1455_t1 + _1465_t2);;
	jule::F64 _1485_hfsq = ((0.5 * _1385_f) * _1385_f);;
	return ((_1395_k * 0.6931471803691238) - ((_1485_hfsq - ((_1425_s * (_1485_hfsq + _1475_R)) + (_1395_k * 0.00000000019082149292705877))) - _1385_f));;
}



inline jule::F64 _1b9a51920_Abs(jule::F64 _438_x) {
	return _1b994dc29_F64FromBits((_1b994d8d8_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1b9a584e8_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _465_absF = _1b9a51920_Abs(_449_f);;
	jule::F64 _479_i = 0LL;;
	if ((_465_absF > 4503599627370496LL)) {
		_479_i=_449_f;
	} else {
		_479_i=(_465_absF + 4503599627370496LL);
		_479_i-=4503599627370496LL;
		while ((_479_i > _465_absF)) {
			{
				(_479_i)--;
			}
		_iter_next_1ae5292c1:;
		}
		_iter_end_1ae5292c1:;;
		if ((_449_f < 0LL)) {
			_479_i=(-(_479_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _479_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _479_i);
	return __jule_func_result;;
}



inline jule::F64 _1b9a58d01_Log2(jule::F64 _449_x) {
	jule::F64 _455_frac;
	jule::I32 _4511_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1b995128c_Frexp(_449_x);
		_455_frac = __jule_assign_result.__jule_result_arg0;
		_4511_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_455_frac == 0.5)) {
		return static_cast<jule::F64>((_4511_exp - 1LL));;
	};
	return ((_1b9a5103a_Log(_455_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4511_exp));;
}



inline jule::Str _1b9a82797_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _209e0ccbe_StrFromBytes(_1b9a82d80_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1b9a8623a_max(((_7932_prec + 4LL) + 1LL), 25LL), 0), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1b9a82d80_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _889_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b9a81587_floatInfo> _8913_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a9e59574:;
			{
				_889_bits=static_cast<jule::U64>(_1b994d311_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8913_flt=((jule::Ptr<_1b9a81587_floatInfo>)((&(_1b9a81983_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a9e595da:;
			{
				_889_bits=_1b994d8d8_F64Bits(_8733_val);
				_8913_flt=((jule::Ptr<_1b9a81587_floatInfo>)((&(_1b9a81c80_f64info))));
			}
		}
		else {
			_case_begin_1a9e5720e:;
			{
				jule::panic(jule::Str::lit("std::conv: illegal bitSize", 26) + jule::Str("\nlocation: std/conv/ftoa.jule:98:9"));;
			}
		}
		_match_end_1a9e58d48:;
	};
	jule::Bool _1015_neg = ((_889_bits >> ((*(_8913_flt))._field_expbits + (*_8913_flt.alloc)._field_mantbits)) != 0LLU);;
	jule::I32 _1029_exp = (static_cast<jule::I32>((_889_bits >> (*_8913_flt.alloc)._field_mantbits)) & static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL)));;
	jule::U64 _1039_mant = (_889_bits & ((static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _1029_exp };
		
		if (_match_expr == static_cast<jule::I32>(((1LL << (*_8913_flt.alloc)._field_expbits) - 1LL))) {
			_case_begin_1a9e5d435:;
			{
				{
					
					if ((_1039_mant != 0LLU)) {
						_case_begin_1a9e5ed3d:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1015_neg) {
						_case_begin_1a9e5ebb7:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1a9e5e546:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1a9e5e447:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a9e5d523:;
			{
				(_1029_exp)++;
			}
		}
		else {
			_case_begin_1a9e5c599:;
			{
				_1039_mant|=(static_cast<jule::U64>(1LLU) << (*_8913_flt.alloc)._field_mantbits);
			}
		}
		_match_end_1a9e5c742:;
	};
	_1029_exp+=(*_8913_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1b9a853b0_fmtB(_8720_dst, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1b9a85a42_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	;
	_1b9a82214_decimalSlice _1379_digs = _1b9a82214_decimalSlice{};;
	jule::Bool _1389_ok = false;;
	jule::Bool _1405_shortest = (_8758_prec < 0LL);;
	if (_1405_shortest) {
		_1379_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1b9a9118a_ryuFtoaShortest(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), &((*_8913_flt.alloc)));
		_1389_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9e5d07d:;
				{
					_8758_prec=_1b9a8623a_max((_1379_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9e639bd:;
				{
					_8758_prec=_1b9a8623a_max((_1379_digs._field_nd - _1379_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9e63a34:;
				{
					_8758_prec=_1379_digs._field_nd;
				}
			}
			_match_end_1a9e62c0e:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _15713_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9e6598c:;
				{
					(_15713_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9e65a7a:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_15713_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1a9e6554c:;
				{
					_15713_digits=1LL;
				}
			}
			_match_end_1a9e6401d:;
		};
		if (((_8769_bitSize == 32LL) && (_15713_digits <= 9LL))) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b9a8edd1_ryuFtoaFixed32(&(_1379_digs), static_cast<jule::U32>(_1039_mant), (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		} else if ((_15713_digits <= 18LL)) {
			_1379_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1b9a90376_ryuFtoaFixed64(&(_1379_digs), _1039_mant, (_1029_exp - static_cast<jule::I32>((*_8913_flt.alloc)._field_mantbits)), _15713_digits);
			_1389_ok=true;
		};
	};
	if ((!(_1389_ok))) {
		return _1b9a83589_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1015_neg, _1039_mant, _1029_exp, &((*_8913_flt.alloc)));;
	};
	return _1b9a83c60_fmtDigits(_8720_dst, _1405_shortest, _1015_neg, _1379_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1b9a83589_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1885_mant, jule::I32 _18816_exp, _1b9a81587_floatInfo* _18827_flt) {
	_1b9a99ccb_decimal _1899_d = _1b9a99ccb_decimal{};;
	_1b9a9a183_assign(&_1899_d, _1885_mant);
	_1b9a9a43b_shift(&_1899_d, (_18816_exp - static_cast<jule::I32>((*(_18827_flt))._field_mantbits)));
	_1b9a82214_decimalSlice _1929_digs = _1b9a82214_decimalSlice{};;
	jule::Bool _1935_shortest = (_18733_prec < 0LL);;
	if (_1935_shortest) {
		_1b9a8417d_roundShortest(&(_1899_d), _1885_mant, _18816_exp, _18827_flt);
		_1929_digs=_1b9a82214_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9e6b8e9:;
				{
					_18733_prec=(_1929_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9e6c6db:;
				{
					_18733_prec=_1b9a8623a_max((_1929_digs._field_nd - _1929_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9e6c752:;
				{
					_18733_prec=_1929_digs._field_nd;
				}
			}
			_match_end_1a9e6c565:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a9e6b630:;
				{
					_1b9a9ac55_round(&_1899_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a9e6b696:;
				{
					_1b9a9ac55_round(&_1899_d, (_1899_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a9e6b70c:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1b9a9ac55_round(&_1899_d, _18733_prec);
				}
			}
			_match_end_1a9e6ddb3:;
		};
		_1929_digs=_1b9a82214_decimalSlice{._field_d=_1899_d._field_d.slice(0LL), ._field_nd=_1899_d._field_nd, ._field_dp=_1899_d._field_dp, };
	};
	return _1b9a83c60_fmtDigits(_18716_dst, _1935_shortest, _18755_neg, _1929_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1b9a83c60_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1b9a82214_decimalSlice _2255_digs, jule::I32 _22529_prec, jule::U8 _22540_fmt) {
	{
		auto &_match_expr{ _22540_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a9e71de9:;
			{
				return _1b9a84722_fmtE(_22418_dst, _22447_neg, _2255_digs, _22529_prec, _22540_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a9e71e60:;
			{
				return _1b9a84c0b_fmtF(_22418_dst, _22447_neg, _2255_digs, _22529_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a9e71ec6:;
			{
				jule::I32 _23313_eprec = _22529_prec;;
				if (((_23313_eprec > _2255_digs._field_nd) && (_2255_digs._field_nd >= _2255_digs._field_dp))) {
					_23313_eprec=_2255_digs._field_nd;
				};
				if (_22431_shortest) {
					_23313_eprec=6LL;
				};
				jule::I32 _2439_exp = (_2255_digs._field_dp - 1LL);;
				if (((_2439_exp < -4LL) || (_2439_exp >= _23313_eprec))) {
					if ((_22529_prec > _2255_digs._field_nd)) {
						_22529_prec=_2255_digs._field_nd;
					};
					return _1b9a84722_fmtE(_22418_dst, _22447_neg, _2255_digs, (_22529_prec - 1LL), ((_22540_fmt + 'e') - 'g'));;
				};
				if ((_22529_prec > _2255_digs._field_dp)) {
					_22529_prec=_2255_digs._field_nd;
				};
				return _1b9a84c0b_fmtF(_22418_dst, _22447_neg, _2255_digs, _1b9a8623a_max((_22529_prec - _2255_digs._field_dp), 0LL));;
			}
		}
		_match_end_1a9e71d50:;
	};
	return jule::append(_22418_dst,jule::Slice<jule::U8>::make({'%',_22540_fmt}));;
}



inline void _1b9a8417d_roundShortest(_1b9a99ccb_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1b9a81587_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2835_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2835_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1b9a99ccb_decimal _2929_upper = _1b9a99ccb_decimal{};;
	_1b9a9a183_assign(&_2929_upper, ((_26235_mant << 1LLU) + 1LLU));
	_1b9a9a43b_shift(&_2929_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3029_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3039_explo = 0LL;;
	if (((_26235_mant > (1LLU << (*(_26257_flt))._field_mantbits)) || (_26246_exp == _2835_minexp))) {
		_3029_mantlo=(_26235_mant - 1LLU);
		_3039_explo=_26246_exp;
	} else {
		_3029_mantlo=((_26235_mant << 1LLU) - 1LLU);
		_3039_explo=(_26246_exp - 1LL);
	};
	_1b9a99ccb_decimal _3119_lower = _1b9a99ccb_decimal{};;
	_1b9a9a183_assign(&_3119_lower, ((_3029_mantlo << 1LLU) + 1LLU));
	_1b9a9a43b_shift(&_3119_lower, ((_3039_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3185_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3319_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3359_ui = 0LL;;
	for (; ; (_3359_ui)++) {
		{
			jule::I32 _3409_mi = ((_3359_ui - _2929_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3409_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1a9e7d752;
			};
			jule::I32 _3449_li = ((_3359_ui - _2929_upper._field_dp) + _3119_lower._field_dp);;
			jule::U8 _34513_l = static_cast<jule::U8>(48LLU);;
			if (((_3449_li >= 0LL) && (_3449_li < _3119_lower._field_nd))) {
				_34513_l=_3119_lower._field_d[_3449_li];
			};
			jule::U8 _34913_m = static_cast<jule::U8>(48LLU);;
			if ((_3409_mi >= 0LL)) {
				_34913_m=(*(_26223_d))._field_d[_3409_mi];
			};
			jule::U8 _35313_u = static_cast<jule::U8>(48LLU);;
			if ((_3359_ui < _2929_upper._field_nd)) {
				_35313_u=_2929_upper._field_d[_3359_ui];
			};
			jule::Bool _3619_okdown = ((_34513_l != _34913_m) || (_3185_inclusive && ((_3449_li + 1LL) == _3119_lower._field_nd)));;
			{
				
				if (((_3319_upperdelta == 0LLU) && ((_34913_m + 1LLU) < _35313_u))) {
					_case_begin_1a9e833c2:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				else if (((_3319_upperdelta == 0LLU) && (_34913_m != _35313_u))) {
					_case_begin_1a9e8346b:;
					{
						_3319_upperdelta=1LLU;
					}
				}
				else if (((_3319_upperdelta == 1LLU) && ((_34913_m != '9') || (_35313_u != '0')))) {
					_case_begin_1a9e834d2:;
					{
						_3319_upperdelta=2LLU;
					}
				}
				_match_end_1a9e83306:;
			};
			jule::Bool _3829_okup = ((_3319_upperdelta > 0LLU) && ((_3185_inclusive || (_3319_upperdelta > 1LLU)) || ((_3359_ui + 1LL) < _2929_upper._field_nd)));;
			{
				
				if ((_3619_okdown && _3829_okup)) {
					_case_begin_1a9e85e1e:;
					{
						_1b9a9ac55_round(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3619_okdown) {
					_case_begin_1a9e85eb8:;
					{
						_1b9a9a6e4_roundDown(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				else if (_3829_okup) {
					_case_begin_1a9e8602e:;
					{
						_1b9a9a99c_roundUp(_26223_d, (_3409_mi + 1LL));
						return;;
					}
				}
				_match_end_1a9e83548:;
			};
		}
	_iter_next_1a9e7d752:;
	}
	_iter_end_1a9e7d752:;;
}



inline jule::Slice<jule::U8> _1b9a84722_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1b9a82214_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4089_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4089_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _41713_i = 1LL;;
		jule::I32 _4189_m = _1b9a85db6_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_41713_i < _4189_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_41713_i, _4189_m));;
			_41713_i=_4189_m;
		};
		for (; (_41713_i <= _40154_prec); (_41713_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a9e8a011:;
		}
		_iter_end_1a9e8a011:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4309_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4309_exp=0LL;
	};
	if ((_4309_exp < 0LL)) {
		_4089_ch='-';
		_4309_exp=(-(_4309_exp));
	} else {
		_4089_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4089_ch); };
	{
		
		if ((_4309_exp < 10LL)) {
			_case_begin_1a9e8c6a6:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((static_cast<jule::U8>(_4309_exp) + '0')); };
			}
		}
		else if ((_4309_exp < 100LL)) {
			_case_begin_1a9e8c134:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a9e8c0bd:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp / 100LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_4309_exp / 10LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_4309_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a9e8bb4a:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1b9a84c0b_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1b9a82214_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _46413_m = _1b9a85db6_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _46413_m));;
		for (; (_46413_m < _45637_d._field_dp); (_46413_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a9e915bc:;
		}
		_iter_end_1a9e915bc:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _47513_i = 0LL;;
		for (; (_47513_i < _45654_prec); (_47513_i)++) {
			{
				jule::U8 _47717_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47813_j = (_45637_d._field_dp + _47513_i);;
				if (((0LL <= _47813_j) && (_47813_j < _45637_d._field_nd))) {
					_47717_ch=_45637_d._field_d[_47813_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_47717_ch); };
			}
		_iter_next_1a9e929ca:;
		}
		_iter_end_1a9e929ca:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1b9a853b0_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1b9a81587_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b9aa0078_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b9aa0078_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1b9a85a42_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5129_mant, jule::I32 _51224_exp, _1b9a81587_floatInfo* _51235_flt) {
	if ((_5129_mant == 0LLU)) {
		_51224_exp=0LL;
	};
	_5129_mant<<=(60LLU - (*(_51235_flt))._field_mantbits);
	while (((_5129_mant != 0LLU) && ((_5129_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5129_mant<<=1LLU;
			(_51224_exp)--;
		}
	_iter_next_1a9e978ae:;
	}
	_iter_end_1a9e978ae:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5269_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5279_extra = ((_5129_mant << _5269_shift) & 1152921504606846975LLU);;
		_5129_mant>>=(60LLU - _5269_shift);
		if (((_5279_extra | (_5129_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5129_mant)++;
		};
		_5129_mant<<=(60LLU - _5269_shift);
		if (((_5129_mant & 2305843009213693952LLU) != 0LLU)) {
			_5129_mant>>=1LLU;
			(_51224_exp)++;
		};
	};
	jule::Str _5409_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5409_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5409_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push(('0' + static_cast<jule::U8>(((_5129_mant >> 60LLU) & 1LLU)))); };
	_5129_mant<<=4LLU;
	if (((_51126_prec < 0LL) && (_5129_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5129_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1a9e9d255:;
		}
		_iter_end_1a9e9d255:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _56313_i = 0LL;;
		for (; (_56313_i < _51126_prec); (_56313_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5409_hex[static_cast<jule::I32>(((_5129_mant >> 60LLU) & 15LLU))]); };
				_5129_mant<<=4LLU;
			}
		_iter_next_1a9e9e94e:;
		}
		_iter_end_1a9e9e94e:;;
	};
	jule::U8 _5719_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1b9a86dc8_lower(_51137_fmt))) {
		_5719_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	if ((_51224_exp < 0LL)) {
		_5719_ch='-';
		_51224_exp=(-(_51224_exp));
	} else {
		_5719_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5719_ch); };
	{
		
		if ((_51224_exp < 100LL)) {
			_case_begin_1a9ea21d2:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51224_exp < 1000LL)) {
			_case_begin_1a9ea1ac7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 100LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1a9ea15ee:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp / 1000LL)) + '0')); __jule_push_dest.__push(((static_cast<jule::U8>((_51224_exp / 100LL)) % 10LL) + '0')); __jule_push_dest.__push((static_cast<jule::U8>(((_51224_exp / 10LL) % 10LL)) + '0')); __jule_push_dest.__push((static_cast<jule::U8>((_51224_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1a9ea18eb:;
	};
	return _51113_dst;;
}



inline jule::I32 _1b9a85db6_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1b9a8623a_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1b9a86dc8_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1b921c273_ConvError _1b9a8734b_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1b921c273_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1aea23215:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1aea23149:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1b9a86dc8_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1aea24b2e:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b9a86dc8_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1aea24c1c:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1b9a86dc8_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1aea247dd:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1aea24777:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1aea246bc:;
					};
				};
			}
		}
		else {
			_case_begin_1aea22566:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1aea22ae9:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _909_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1aea28ade:;
			{
				_909_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1aea287c0:;
			{
				_909_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1aea27da7:;
			{
				_909_cutoff=(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU);
			}
		}
		_match_end_1aea286d2:;
	};
	jule::U64 _1009_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1aea28836:;
			{
				_1009_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1aea24403:;
			{
				_1009_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1aea29c88:;
	};
	jule::U64 _1089_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aea2ab46:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11013_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1aea2be88:;
						{
							_11013_d=(_10912_c - '0');
						}
					}
					else if ((('a' <= _1b9a86dc8_lower(_10912_c)) && (_1b9a86dc8_lower(_10912_c) <= 'z'))) {
						_case_begin_1aea2bdbc:;
						{
							_11013_d=((_1b9a86dc8_lower(_10912_c) - 'a') + 10LLU);
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1aea2b9d2:;
						{
							goto _iter_next_1aea2ab46;
						}
					}
					else {
						_case_begin_1aea2b96b:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1aea2b916:;
				};
				if ((_11013_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1089_n >= _909_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1329_n1 = (_1089_n + static_cast<jule::U64>(_11013_d));;
				if (((_1329_n1 < _1089_n) || (_1329_n1 > _1009_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1009_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1089_n=_1329_n1;
			}
			_iter_next_1aea2ab46:;
			++it;
			goto _iter_begin_1aea2ab46;
		}
		_iter_end_1aea2ab46:;
	};
	__jule_func_result.__jule_result_arg0 = _1089_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1b9a8777a_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1475_un;
	jule::I32 _1479_err;
	({
		__jule_tuple_u64__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8734b_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1475_un = __jule_assign_result.__jule_result_arg0;
		_1479_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1479_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1479_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::U64>{.result=_1475_un};;
}



inline jule::Exceptional<jule::I64> _1b9a87c31_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	jule::Bool _1789_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1789_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1879_un;
	jule::I32 _18713_err;
	({
		__jule_tuple_u64__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8734b_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1879_un = __jule_assign_result.__jule_result_arg0;
		_18713_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18713_err != static_cast<jule::I32>(0LL)) && (_18713_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18713_err, &__jule_any_type0)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1965_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_1789_neg)) && (_1879_un >= _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	if ((_1789_neg && (_1879_un > _1965_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0)};
	};
	jule::I64 _2039_n = static_cast<jule::I64>(_1879_un);;
	if (_1789_neg) {
		_2039_n=(-(_2039_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2039_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1b9a888e1_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1b994dc29_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _575_clz = _1b9a3b795_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_575_clz);
	;
	jule::U64 _609_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_575_clz));;
	jule::U64 _639_xHi;
	jule::U64 _6318_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_4122_man, _1b9a8975a_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_639_xHi = __jule_assign_result.__jule_result_arg0;
		_6318_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_639_xHi & 511LLU) == 511LLU) && ((_6318_xLo + _4122_man) < _4122_man))) {
		jule::U64 _679_yHi;
		jule::U64 _6714_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_4122_man, _1b9a8975a_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_679_yHi = __jule_assign_result.__jule_result_arg0;
			_6714_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6813_mergedHi;
		jule::U64 _6823_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _639_xHi;
			jule::U64 _1___jule_assign_arg = (_6318_xLo + _679_yHi);
			_6813_mergedHi = ___jule_assign_arg;
			_6823_mergedLo = _1___jule_assign_arg;
		});
		if ((_6823_mergedLo < _6318_xLo)) {
			(_6813_mergedHi)++;
		};
		if (((((_6813_mergedHi & 511LLU) == 511LLU) && ((_6823_mergedLo + 1LLU) == 0LLU)) && ((_6714_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6813_mergedHi;
			jule::U64 _1___jule_assign_arg = _6823_mergedLo;
			_639_xHi = ___jule_assign_arg;
			_6318_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _795_msb = (_639_xHi >> 63LLU);;
	jule::U64 _809_retMantissa = (_639_xHi >> (_795_msb + 9LLU));;
	_609_retExp2-=(1LLU ^ _795_msb);
	if ((((_6318_xLo == 0LLU) && ((_639_xHi & 511LLU) == 0LLU)) && ((_809_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_809_retMantissa+=(_809_retMantissa & 1LLU);
	_809_retMantissa>>=1LLU;
	if (((_809_retMantissa >> 53LLU) > 0LLU)) {
		_809_retMantissa>>=1LLU;
		_609_retExp2+=1LLU;
	};
	if (((_609_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1039_retBits = ((_609_retExp2 << 52LLU) | (_809_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1039_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b994dc29_F64FromBits(_1039_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b9a88d64_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1b994d61e_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1325_clz = _1b9a3b795_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1325_clz);
	;
	jule::U64 _1359_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1325_clz));;
	jule::U64 _1389_x_hi;
	jule::U64 _13819_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_11022_man, _1b9a8975a_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1389_x_hi = __jule_assign_result.__jule_result_arg0;
		_13819_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1389_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13819_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1429_y_hi;
		jule::U64 _14215_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_11022_man, _1b9a8975a_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1429_y_hi = __jule_assign_result.__jule_result_arg0;
			_14215_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14313_merged_hi;
		jule::U64 _14324_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1389_x_hi;
			jule::U64 _1___jule_assign_arg = (_13819_x_lo + _1429_y_hi);
			_14313_merged_hi = ___jule_assign_arg;
			_14324_merged_lo = _1___jule_assign_arg;
		});
		if ((_14324_merged_lo < _13819_x_lo)) {
			(_14313_merged_hi)++;
		};
		if (((((_14313_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14324_merged_lo + 1LLU) == 0LLU)) && ((_14215_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14313_merged_hi;
			jule::U64 _1___jule_assign_arg = _14324_merged_lo;
			_1389_x_hi = ___jule_assign_arg;
			_13819_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1545_msb = (_1389_x_hi >> 63LLU);;
	jule::U64 _1559_retMantissa = (_1389_x_hi >> (_1545_msb + 38LLU));;
	_1359_retExp2-=(1LLU ^ _1545_msb);
	if ((((_13819_x_lo == 0LLU) && ((_1389_x_hi & 274877906943LLU) == 0LLU)) && ((_1559_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1559_retMantissa+=(_1559_retMantissa & 1LLU);
	_1559_retMantissa>>=1LLU;
	if (((_1559_retMantissa >> 24LLU) > 0LLU)) {
		_1559_retMantissa>>=1LLU;
		_1359_retExp2+=1LLU;
	};
	if (((_1359_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1789_retBits = ((_1359_retExp2 << 23LLU) | (_1559_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1789_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1b994d61e_F32FromBits(static_cast<jule::U32>(_1789_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1b9a8ab46_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _479_n = _4638_prefix.len();;
	if ((_479_n > _4630_s.len())) {
		_479_n=_4630_s.len();
	};
	jule::I32 _519_i = 0LL;;
	for (; (_519_i < _479_n); (_519_i)++) {
		{
			jule::U8 _5313_c = _4630_s[_519_i];;
			if ((('A' <= _5313_c) && (_5313_c <= 'Z'))) {
				_5313_c+=32LL;
			};
			if ((_5313_c != _4638_prefix[_519_i])) {
				return _519_i;;
			};
		}
	_iter_next_1aea51661:;
	}
	_iter_end_1aea51661:;;
	return _479_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1b9a8ae54_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _739_sign = 1LL;;
	jule::I32 _749_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1aea54ed3:;
			{
				if ((_6912_s[0LL] == '-')) {
					_739_sign=-1LL;
				};
				_749_nsign=1LL;
				{
					jule::Str* _8317_sp = (&(_6912_s));;
					((*(_8317_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1aea5505a;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1aea5505a:;
			{
				jule::I32 _8813_caseN = _1b9a8ab46_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _8813_caseN) && (_8813_caseN < 8LL))) {
					_8813_caseN=3LL;
				};
				if (((_8813_caseN == 3LL) || (_8813_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1b9a4ddd4_Inf(_739_sign);
					__jule_func_result.__jule_result_arg1 = (_749_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1aea550c1:;
			{
				if ((_1b9a8ab46_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1b9a4d80c_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1aea54e39:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1b9a8b21d_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1aea5a604:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1aea5a66a:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1aea5a208:;
	};
	jule::U64 _1229_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1239_maxMantDigits = 19LL;;
	jule::U8 _1249_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1b9a86dc8_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1229_base=16LLU;
		_1239_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1249_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1329_sawdot = false;;
	jule::Bool _1339_sawdigits = false;;
	jule::I32 _1349_nd = 0LL;;
	jule::I32 _1359_ndMant = 0LL;;
	jule::I32 _1369_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1389_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1389_c == '_')) {
					_case_begin_1aea6064d:;
					{
						goto _iter_next_1aea5e97c;
					}
				}
				else if ((_1389_c == '.')) {
					_case_begin_1aea606e7:;
					{
						if (_1329_sawdot) {
							goto _julec_label_1aea650c0;
						};
						_1329_sawdot=true;
						_1369_dp=_1349_nd;
						goto _iter_next_1aea5e97c;
					}
				}
				else if ((('0' <= _1389_c) && (_1389_c <= '9'))) {
					_case_begin_1aea6075d:;
					{
						_1339_sawdigits=true;
						if (((_1389_c == '0') && (_1349_nd == 0LL))) {
							(_1369_dp)--;
							goto _iter_next_1aea5e97c;
						};
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1229_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_1389_c - '0'));
							(_1359_ndMant)++;
						} else if ((_1389_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aea5e97c;
					}
				}
				else if ((((_1229_base == 16LLU) && ('a' <= _1b9a86dc8_lower(_1389_c))) && (_1b9a86dc8_lower(_1389_c) <= 'f'))) {
					_case_begin_1aea607c4:;
					{
						_1339_sawdigits=true;
						(_1349_nd)++;
						if ((_1359_ndMant < _1239_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1b9a86dc8_lower(_1389_c) - 'a') + 10LLU));
							(_1359_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1aea5e97c;
					}
				}
				_match_end_1aea60571:;
			};
			goto _iter_end_1aea5e97c;
		}
	_iter_next_1aea5e97c:;
	}
	_iter_end_1aea5e97c:;;
	_julec_label_1aea650c0:;
	if ((!(_1339_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1329_sawdot))) {
		_1369_dp=_1349_nd;
	};
	if ((_1229_base == 16LLU)) {
		_1369_dp*=4LL;
		_1359_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1b9a86dc8_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1249_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20113_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20113_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21113_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1aea67930;
				};
				if ((_21113_e < 10000LL)) {
					_21113_e=(((_21113_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1aea67930:;
		}
		_iter_end_1aea67930:;;
		_1369_dp+=(_21113_e * _20113_esign);
	} else if ((_1229_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1369_dp - _1359_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1b9a8cc69_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1b9a81c80_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1aea71939:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1aea719c2:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1b9a8c131_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b9a8c131_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1aea71a38:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b9a8c131_f64pow10[(-(_48635_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aea71362:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1b9a8d198_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1b9a81983_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1aea75b80:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1aea75c18:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1b9a8c461_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1b9a8c461_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1aea75c7e:;
			{
				__jule_func_result.__jule_result_arg0 = jule::div(__jule_func_result.__jule_result_arg0,_1b9a8c461_f32pow10[(-(_52035_exp))]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1aea755a8:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1b921c273_ConvError _1b9a8d73c_atofHex(_1b9a81587_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1b921c273_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5575_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5585_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1aea7958a:;
	}
	_iter_end_1aea7958a:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aea7b955:;
	}
	_iter_end_1aea7b955:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5585_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1aea7bd2e:;
	}
	_iter_end_1aea7bd2e:;;
	jule::U64 _5889_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_5889_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5889_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6039_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5575_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits));
		_55652_exp=(_5575_maxExp + 1LL);
		_6039_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6109_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_6109_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_6109_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1b9a81983_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1b994d61e_F32FromBits(static_cast<jule::U32>(_6109_bits)));
		__jule_func_result.__jule_result_arg1 = _6039_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1b994dc29_F64FromBits(_6109_bits);
	__jule_func_result.__jule_result_arg1 = _6039_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8db16_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1b921c273_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6239_val;
		jule::I32 _62314__n;
		jule::Bool _62318_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a8ae54_special(_62111_s);
			_6239_val = __jule_assign_result.__jule_result_arg0;
			_62314__n = __jule_assign_result.__jule_result_arg1;
			_62318_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62318_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6239_val);
			__jule_func_result.__jule_result_arg1 = _62314__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6295_mantissa;
	jule::I32 _62915_exp;
	jule::Bool _62920_neg;
	jule::Bool _62925_trunc;
	jule::Bool _62932_hex;
	jule::I32 _62937__n;
	jule::Bool _62945_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a8b21d_readFloat(&(_62111_s));
		_6295_mantissa = __jule_assign_result.__jule_result_arg0;
		_62915_exp = __jule_assign_result.__jule_result_arg1;
		_62920_neg = __jule_assign_result.__jule_result_arg2;
		_62925_trunc = __jule_assign_result.__jule_result_arg3;
		_62932_hex = __jule_assign_result.__jule_result_arg4;
		_62937__n = __jule_assign_result.__jule_result_arg5;
		_62945_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62937__n;
	if ((!(_62945_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62932_hex) {
		jule::F64 _63613_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8d73c_atofHex(&(_1b9a81983_f32info), _6295_mantissa, _62915_exp, _62920_neg, _62925_trunc);
			_63613_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_63613_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62925_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b9a8d198_atof32exact(_6295_mantissa, _62915_exp, _62920_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62945_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b9a88d64_eiselLemire32(_6295_mantissa, _62915_exp, _62920_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62945_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62945_ok) {
			if ((!(_62925_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65817_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1b9a88d64_eiselLemire32((_6295_mantissa + 1LLU), _62915_exp, _62920_neg);
				_65817_fUp = __jule_assign_result.__jule_result_arg0;
				_62945_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62945_ok && (__jule_func_result.__jule_result_arg0 == _65817_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b9a99ccb_decimal _6679_d = _1b9a99ccb_decimal{};;
	if ((!(_1b9a8b8a0_set(&_6679_d, _209e0c76e_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6715_b;
	jule::Bool _6718_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b9a8bbe1_floatBits(&_6679_d, &(_1b9a81983_f32info));
		_6715_b = __jule_assign_result.__jule_result_arg0;
		_6718_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b994d61e_F32FromBits(static_cast<jule::U32>(_6715_b));
	if (_6718_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8dd58_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6819_val;
		jule::I32 _68114__n;
		jule::Bool _68118_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a8ae54_special(_67911_s);
			_6819_val = __jule_assign_result.__jule_result_arg0;
			_68114__n = __jule_assign_result.__jule_result_arg1;
			_68118_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68118_ok) {
			__jule_func_result.__jule_result_arg0 = _6819_val;
			__jule_func_result.__jule_result_arg1 = _68114__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6875_mantissa;
	jule::I32 _68715_exp;
	jule::Bool _68720_neg;
	jule::Bool _68725_trunc;
	jule::Bool _68732_hex;
	jule::I32 _68737__n;
	jule::Bool _68745_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a8b21d_readFloat(&(_67911_s));
		_6875_mantissa = __jule_assign_result.__jule_result_arg0;
		_68715_exp = __jule_assign_result.__jule_result_arg1;
		_68720_neg = __jule_assign_result.__jule_result_arg2;
		_68725_trunc = __jule_assign_result.__jule_result_arg3;
		_68732_hex = __jule_assign_result.__jule_result_arg4;
		_68737__n = __jule_assign_result.__jule_result_arg5;
		_68745_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68737__n;
	if ((!(_68745_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68732_hex) {
		({
			__jule_tuple_f64__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8d73c_atofHex(&(_1b9a81c80_f64info), _6875_mantissa, _68715_exp, _68720_neg, _68725_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68725_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b9a8cc69_atof64exact(_6875_mantissa, _68715_exp, _68720_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68745_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b9a888e1_eiselLemire64(_6875_mantissa, _68715_exp, _68720_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68745_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68745_ok) {
			if ((!(_68725_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71517_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1b9a888e1_eiselLemire64((_6875_mantissa + 1LLU), _68715_exp, _68720_neg);
				_71517_fUp = __jule_assign_result.__jule_result_arg0;
				_68745_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68745_ok && (__jule_func_result.__jule_result_arg0 == _71517_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1b9a99ccb_decimal _7249_d = _1b9a99ccb_decimal{};;
	if ((!(_1b9a8b8a0_set(&_7249_d, _209e0c76e_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7285_b;
	jule::Bool _7288_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b9a8bbe1_floatBits(&_7249_d, &(_1b9a81c80_f64info));
		_7285_b = __jule_assign_result.__jule_result_arg0;
		_7288_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1b994dc29_F64FromBits(_7285_b);
	if (_7288_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError _1b9a8e1cc_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7389_f;
		jule::I32 _73812_n;
		jule::I32 _73815_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8db16_atof32((*(_73622_s)));
			_7389_f = __jule_assign_result.__jule_result_arg0;
			_73812_n = __jule_assign_result.__jule_result_arg1;
			_73815_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7389_f);
		__jule_func_result.__jule_result_arg1 = _73812_n;
		__jule_func_result.__jule_result_arg2 = _73815_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1b9a8dd58_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1b9a8e551_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7695_f;
	jule::I32 _7698_n;
	jule::I32 _76911_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1b921c273_ConvError __jule_assign_result = _1b9a8e1cc_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7695_f = __jule_assign_result.__jule_result_arg0;
		_7698_n = __jule_assign_result.__jule_result_arg1;
		_76911_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7698_n != _76815_s.len()) && ((_76911_err == static_cast<jule::I32>(0LL)) || (_76911_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0)};
	};
	if ((_76911_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_76911_err, &__jule_any_type0)};
	};
	return jule::Exceptional<jule::F64>{.result=_7695_f};;
}



inline void _1b9a8edd1_ryuFtoaFixed32(_1b9a82214_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _629_e2 = _4956_exp;;
	jule::I32 _635_b = _1b9a43d63_Len32(_4945_mant);;
	if ((_635_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _635_b));
		_629_e2+=(static_cast<jule::I32>(_635_b) - 25LL);
	};
	jule::I32 _745_q = (((-(_1b9a91421_mulByLog2Log10((_629_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _799_exact = ((_745_q <= 27LL) && (_745_q >= 0LL));;
	jule::U32 _819_di;
	jule::I32 _8113_dexp2;
	jule::Bool _8124_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a97b75_mult64bitPow10(_4945_mant, _629_e2, _745_q);
		_819_di = __jule_assign_result.__jule_result_arg0;
		_8113_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8124_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8113_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_745_q < 0LL) && (_745_q >= -10LL)) && _1b9a98428_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_745_q))))) {
		_799_exact=true;
		_8124_d0=true;
	};
	jule::U32 _945_extra = static_cast<jule::U32>((-(_8113_dexp2)));;
	jule::U32 _955_extraMask = static_cast<jule::U32>(((1LL << _945_extra) - 1LL));;
	jule::U32 _979_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = (_819_di >> _945_extra);
		jule::U32 _1___jule_assign_arg = (_819_di & _955_extraMask);
		_819_di = ___jule_assign_arg;
		_979_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _999_roundUp = false;;
	if (_799_exact) {
		_999_roundUp=(((_979_dfrac > (1LLU << (_945_extra - 1LLU))) || ((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && (!(_8124_d0)))) || (((_979_dfrac == (1LLU << (_945_extra - 1LLU))) && _8124_d0) && ((_819_di & 1LLU) == 1LLU)));
	} else {
		_999_roundUp=((_979_dfrac >> (_945_extra - 1LLU)) == 1LLU);
	};
	if ((_979_dfrac != 0LLU)) {
		_8124_d0=false;
	};
	_1b9a90bb2_formatDecimal(_4924_d, static_cast<jule::U64>(_819_di), (!(_8124_d0)), _999_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_745_q;
}



inline void _1b9a90376_ryuFtoaFixed64(_1b9a82214_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str::lit("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1319_e2 = _12156_exp;;
	jule::I32 _1325_b = _1b9a4412c_Len64(_12145_mant);;
	if ((_1325_b < 55LL)) {
		_12145_mant=(_12145_mant << static_cast<jule::U32>((55LL - _1325_b)));
		_1319_e2+=(static_cast<jule::I32>(_1325_b) - 55LL);
	};
	jule::I32 _1465_q = (((-(_1b9a91421_mulByLog2Log10((_1319_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1519_exact = ((_1465_q <= 55LL) && (_1465_q >= 0LL));;
	jule::U64 _1539_di;
	jule::I32 _15313_dexp2;
	jule::Bool _15324_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a980a4_mult128bitPow10(_12145_mant, _1319_e2, _1465_q);
		_1539_di = __jule_assign_result.__jule_result_arg0;
		_15313_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15324_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15313_dexp2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1465_q < 0LL) && (_1465_q >= -22LL)) && _1b9a98428_divisibleByPow5(_12145_mant, (-(_1465_q))))) {
		_1519_exact=true;
		_15324_d0=true;
	};
	jule::U32 _1665_extra = static_cast<jule::U32>((-(_15313_dexp2)));;
	jule::U64 _1675_extraMask = static_cast<jule::U64>(((1LL << _1665_extra) - 1LL));;
	jule::U64 _1699_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_1539_di >> _1665_extra);
		jule::U64 _1___jule_assign_arg = (_1539_di & _1675_extraMask);
		_1539_di = ___jule_assign_arg;
		_1699_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1719_roundUp = false;;
	if (_1519_exact) {
		_1719_roundUp=(((_1699_dfrac > (1LLU << (_1665_extra - 1LLU))) || ((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && (!(_15324_d0)))) || (((_1699_dfrac == (1LLU << (_1665_extra - 1LLU))) && _15324_d0) && ((_1539_di & 1LLU) == 1LLU)));
	} else {
		_1719_roundUp=((_1699_dfrac >> (_1665_extra - 1LLU)) == 1LLU);
	};
	if ((_1699_dfrac != 0LLU)) {
		_15324_d0=false;
	};
	_1b9a90bb2_formatDecimal(_12124_d, _1539_di, (!(_15324_d0)), _1719_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1465_q;
}



inline void _1b9a90bb2_formatDecimal(_1b9a82214_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2015_max = _1b9a906b7_u64pow10[_20088_prec];;
	jule::I32 _2029_trimmed = 0LL;;
	while ((_20044_m >= _2015_max)) {
		{
			jule::U64 _2049_a;
			jule::U64 _20412_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2049_a = ___jule_assign_arg;
				_20412_b = _1___jule_assign_arg;
			});
			_20044_m=_2049_a;
			(_2029_trimmed)++;
			if ((_20412_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20412_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20412_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1aeab266c:;
	}
	_iter_end_1aeab266c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2015_max)) {
		_20044_m/=10LLU;
		(_2029_trimmed)++;
	};
	jule::U32 _2299_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2319_v = _20044_m;;
	while ((_2319_v >= 100LLU)) {
		{
			jule::U64 _23313_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _23413_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2319_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2319_v) % 100LL));
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2319_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2319_v % 100LL);
					_23313_v1 = ___jule_assign_arg;
					_23413_v2 = _1___jule_assign_arg;
				});
			};
			_2299_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_2299_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _23413_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _23413_v2)));
			_2319_v=_23313_v1;
		}
	_iter_next_1aeab50ba:;
	}
	_iter_end_1aeab50ba:;;
	if ((_2319_v > 0LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _2319_v) + 1LLU)));
	};
	if ((_2319_v >= 10LLU)) {
		(_2299_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2299_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _2319_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2029_trimmed)++;
		}
	_iter_next_1aeabb6ed:;
	}
	_iter_end_1aeabb6ed:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2029_trimmed);
}



inline void _1b9a9118a_ryuFtoaShortest(_1b9a82214_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1b9a81587_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1b9a3d38a_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1b9a92268_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2735_ml;
	jule::U64 _2739_mc;
	jule::U64 _27313_mu;
	jule::I32 _27321_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1b9a91b19_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2735_ml = __jule_assign_result.__jule_result_arg0;
		_2739_mc = __jule_assign_result.__jule_result_arg1;
		_27313_mu = __jule_assign_result.__jule_result_arg2;
		_27321_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27321_e2 == 0LL)) {
		_1b9a92268_ryuDigits(_26125_d, _2735_ml, _2739_mc, _27313_mu, true, false);
		return;;
	};
	jule::I32 _2795_q = (_1b9a91421_mulByLog2Log10((-(_27321_e2))) + 1LL);;
	jule::U64 _2839_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2849_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2859_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2869_dl0 = false;;
	jule::Bool _2879_dc0 = false;;
	jule::Bool _2889_du0 = false;;
	if (((*(_26168_flt)) == _1b9a81983_f32info)) {
		jule::U32 _29013_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29113_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _29213_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a97b75_mult64bitPow10(static_cast<jule::U32>(_2735_ml), _27321_e2, _2795_q);
			_29013_dl32 = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a97b75_mult64bitPow10(static_cast<jule::U32>(_2739_mc), _27321_e2, _2795_q);
			_29113_dc32 = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a97b75_mult64bitPow10(static_cast<jule::U32>(_27313_mu), _27321_e2, _2795_q);
			_29213_du32 = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_29013_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_29113_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_29213_du32);
			_2839_dl = ___jule_assign_arg;
			_2849_dc = _1___jule_assign_arg;
			_2859_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a980a4_mult128bitPow10(_2735_ml, _27321_e2, _2795_q);
			_2839_dl = __jule_assign_result.__jule_result_arg0;
			_2869_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a980a4_mult128bitPow10(_2739_mc, _27321_e2, _2795_q);
			_2849_dc = __jule_assign_result.__jule_result_arg0;
			_2879_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b9a980a4_mult128bitPow10(_27313_mu, _27321_e2, _2795_q);
			_2859_du = __jule_assign_result.__jule_result_arg0;
			_27321_e2 = __jule_assign_result.__jule_result_arg1;
			_2889_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27321_e2 >= 0LL)) {
		jule::panic(jule::Str::lit("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2795_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2869_dl0 = ___jule_assign_arg;
			_2879_dc0 = _1___jule_assign_arg;
			_2889_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2795_q < 0LL) && (_2795_q >= -24LL))) {
		if (_1b9a98428_divisibleByPow5(_2735_ml, (-(_2795_q)))) {
			_2869_dl0=true;
		};
		if (_1b9a98428_divisibleByPow5(_2739_mc, (-(_2795_q)))) {
			_2879_dc0=true;
		};
		if (_1b9a98428_divisibleByPow5(_27313_mu, (-(_2795_q)))) {
			_2889_du0=true;
		};
	};
	jule::U32 _3255_extra = static_cast<jule::U32>((-(_27321_e2)));;
	jule::U64 _3265_extraMask = static_cast<jule::U64>(((1LL << _3255_extra) - 1LL));;
	jule::U64 _3289_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2839_dl >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2839_dl & _3265_extraMask);
		_2839_dl = ___jule_assign_arg;
		_3289_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3309_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2849_dc >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2849_dc & _3265_extraMask);
		_2849_dc = ___jule_assign_arg;
		_3309_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3329_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = (_2859_du >> _3255_extra);
		jule::U64 _1___jule_assign_arg = (_2859_du & _3265_extraMask);
		_2859_du = ___jule_assign_arg;
		_3329_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3389_uok = ((!(_2889_du0)) || (_3329_fracu > 0LLU));;
	if ((_2889_du0 && (_3329_fracu == 0LLU))) {
		_3389_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3389_uok))) {
		(_2859_du)--;
	};
	jule::Bool _3479_cup = false;;
	if (_2879_dc0) {
		_3479_cup=((_3309_fracc > (1LLU << (_3255_extra - 1LLU))) || ((_3309_fracc == (1LLU << (_3255_extra - 1LLU))) && ((_2849_dc & 1LLU) == 1LLU)));
	} else {
		_3479_cup=((_3309_fracc >> (_3255_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3615_lok = ((_2869_dl0 && (_3289_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3615_lok))) {
		(_2839_dl)++;
	};
	jule::Bool _3665_c0 = (_2879_dc0 && (_3309_fracc == 0LLU));;
	_1b9a92268_ryuDigits(_26125_d, _2839_dl, _2849_dc, _2859_du, _3665_c0, _3479_cup);
	(*(_26125_d))._field_dp-=_2795_q;
}



inline jule::I32 _1b9a91421_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1b9a916da_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1b9a91b19_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1b9a81587_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = ((2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = ((4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = ((4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1b9a92268_ryuDigits(_1b9a82214_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4109_lhi;
	jule::U32 _41014_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b9a986e2_divmod1e9(_40936_lower);
		_4109_lhi = __jule_assign_result.__jule_result_arg0;
		_41014_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4115_chi;
	jule::U32 _41110_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b9a986e2_divmod1e9(_40948_central);
		_4115_chi = __jule_assign_result.__jule_result_arg0;
		_41110_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4125_uhi;
	jule::U32 _41210_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1b9a986e2_divmod1e9(_40962_upper);
		_4125_uhi = __jule_assign_result.__jule_result_arg0;
		_41210_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4125_uhi == 0LLU)) {
		_1b9a97746_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4109_lhi < _4125_uhi)) {
		if ((_41014_llo != 0LLU)) {
			(_4109_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41110_clo == 0LLU));
		_40992_cup=((_41110_clo > 500000000LL) || ((_41110_clo == 500000000LL) && _40992_cup));
		_1b9a97746_ryuDigits32(_40919_d, _4109_lhi, _4115_chi, _4125_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42813_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42913_v = _4115_chi;;
		while ((_42913_v > 0LLU)) {
			{
				jule::U32 _43113_v1;
				jule::U32 _43117_v2;
				({
					jule::U32 ___jule_assign_arg = (_42913_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42913_v % 10LL);
					_43113_v1 = ___jule_assign_arg;
					_43117_v2 = _1___jule_assign_arg;
				});
				_42913_v=_43113_v1;
				(_42813_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42813_n)]=static_cast<jule::U8>((_43117_v2 + '0'));
			}
		_iter_next_1aead9b7d:;
		}
		_iter_end_1aead9b7d:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_42813_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((9LL - _42813_n));
		_1b9a97746_ryuDigits32(_40919_d, _41014_llo, _41110_clo, _41210_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1aeadc82e:;
	}
	_iter_end_1aeadc82e:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1aeada6d9:;
	}
	_iter_end_1aeada6d9:;;
}



inline void _1b9a97746_ryuDigits32(_1b9a82214_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45554_endindex + 1LL);
		return;;
	};
	jule::I32 _4609_trimmed = 0LL;;
	jule::I32 _4639_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _4709_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47113_c;
			jule::U32 _47120_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47113_c = ___jule_assign_arg;
				_47120_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4729_u = (_4559_upper / 10LLU);;
			if ((_4709_l > _4729_u)) {
				goto _iter_end_1aeae007e;
			};
			if (((_4709_l == (_47113_c + 1LLU)) && (_47113_c < _4729_u))) {
				(_47113_c)++;
				_47120_cdigit=0LLU;
				_45539_cup=false;
			};
			(_4609_trimmed)++;
			_45525_c0=(_45525_c0 && (_4639_cNextDigit == 0LL));
			_4639_cNextDigit=static_cast<jule::I32>(_47120_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4709_l;
				jule::U32 _1___jule_assign_arg = _47113_c;
				jule::U32 _2___jule_assign_arg = _4729_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1aeae007e:;
	}
	_iter_end_1aeae007e:;;
	if ((_4609_trimmed > 0LL)) {
		_45539_cup=(((_4639_cNextDigit > 5LL) || ((_4639_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_4639_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_4609_trimmed;
	jule::U32 _5099_v = _45458_central;;
	jule::I32 _5109_n = _45554_endindex;;
	while ((_5109_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5129_v1;
			jule::U32 _51213_v2;
			({
				jule::U32 ___jule_assign_arg = (_5099_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5099_v % 100LL);
				_5129_v1 = ___jule_assign_arg;
				_51213_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5109_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(((2LL * _51213_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5109_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((2LL * _51213_v2)));
			_5109_n-=2LL;
			_5099_v=_5129_v1;
		}
	_iter_next_1aeae5b34:;
	}
	_iter_end_1aeae5b34:;;
	if ((_5109_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5109_n]=static_cast<jule::U8>((_5099_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45554_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4609_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1b9a97b75_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str::lit("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _5439_pow = _1b9a8975a_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5439_pow+=1LLU;
	};
	jule::U64 _5485_hi;
	jule::U64 _5489_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(static_cast<jule::U64>(_53419_m), _5439_pow);
		_5485_hi = __jule_assign_result.__jule_result_arg0;
		_5489_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1b9a916da_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((_5485_hi << 7LLU) | (_5489_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_5489_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1b9a980a4_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str::lit("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _5719_pow = _1b9a8975a_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5719_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1b9a916da_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5795_l1;
	jule::U64 _5799_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_56220_m, _5719_pow[0LL]);
		_5795_l1 = __jule_assign_result.__jule_result_arg0;
		_5799_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5809_h1;
	jule::U64 _58013_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a466c3_Mul64(_56220_m, _5719_pow[1LL]);
		_5809_h1 = __jule_assign_result.__jule_result_arg0;
		_58013_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5815_mid;
	jule::U64 _58110_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1b9a44db9_Add64(_5795_l1, _58013_h0, 0LLU);
		_5815_mid = __jule_assign_result.__jule_result_arg0;
		_58110_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5809_h1+=_58110_carry;
	__jule_func_result.__jule_result_arg0 = ((_5809_h1 << 9LLU) | (_5815_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_5815_mid << 9LLU) == 0LLU) && (_5799_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b9a98428_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5909_i = 0LL;;
	for (; (_5909_i < _58632_k); (_5909_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1aeb049bc:;
	}
	_iter_end_1aeb049bc:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1b9a986e2_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_60214_x / 1000000000LL));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((_60214_x % 1000000000LL));
		return __jule_func_result;;
	};
}



inline void _1b9a9b629_trim(_1b9a99ccb_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1aeb07ea9:;
	}
	_iter_end_1aeb07ea9:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1b9a9b915_rightShift(_1b9a99ccb_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2859_r = 0LL;;
	jule::I32 _2869_w = 0LL;;
	jule::U32 _2899_n = static_cast<jule::U32>(0LLU);;
	for (; ((_2899_n >> _28432_k) == 0LLU); (_2859_r)++) {
		{
			if ((_2859_r >= (*(_28420_a))._field_nd)) {
				if ((_2899_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_2899_n >> _28432_k) == 0LLU)) {
					{
						_2899_n=(_2899_n * 10LLU);
						(_2859_r)++;
					}
				_iter_next_1aeb0b155:;
				}
				_iter_end_1aeb0b155:;;
				goto _iter_end_1aeb09b04;
			};
			jule::U32 _3039_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			_2899_n=(((_2899_n * 10LLU) + _3039_c) - '0');
		}
	_iter_next_1aeb09b04:;
	}
	_iter_end_1aeb09b04:;;
	(*(_28420_a))._field_dp-=(_2859_r - 1LL);
	jule::U32 _3085_mask = (static_cast<jule::U32>((1LL << _28432_k)) - 1LLU);;
	for (; (_2859_r < (*(_28420_a))._field_nd); (_2859_r)++) {
		{
			jule::U32 _3129_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2859_r]);;
			jule::U32 _3139_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3139_dig + '0'));
			(_2869_w)++;
			_2899_n=(((_2899_n * 10LLU) + _3129_c) - '0');
		}
	_iter_next_1aeb0a9c3:;
	}
	_iter_end_1aeb0a9c3:;;
	while ((_2899_n > 0LLU)) {
		{
			jule::U32 _3229_dig = (_2899_n >> _28432_k);;
			_2899_n&=_3085_mask;
			if ((_2869_w < 800LL)) {
				(*(_28420_a))._field_d[_2869_w]=static_cast<jule::U8>((_3229_dig + '0'));
				(_2869_w)++;
			} else if ((_3229_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2899_n=(_2899_n * 10LLU);
		}
	_iter_next_1aeb0d83e:;
	}
	_iter_end_1aeb0d83e:;;
	(*(_28420_a))._field_nd=_2869_w;
	_1b9a9b629_trim(_28420_a);
}



inline jule::Bool _1b9a9bdbb_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3399_i = 0LL;;
	for (; (_3399_i < (*(_33846_s)).len()); (_3399_i)++) {
		{
			if ((_3399_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3399_i] != (*(_33846_s))[_3399_i])) {
				return (_33821_b[_3399_i] < (*(_33846_s))[_3399_i]);;
			};
		}
	_iter_next_1aeb128a9:;
	}
	_iter_end_1aeb128a9:;;
	return false;;
}



inline void _1b9a9c174_leftShift(_1b9a99ccb_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3539_delta = _1b9a996e3_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1b9a9bdbb_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1b9a996e3_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3539_delta)--;
	};
	jule::I32 _3589_r = (*(_35219_a))._field_nd;;
	jule::I32 _3599_w = ((*(_35219_a))._field_nd + _3539_delta);;
	jule::U32 _3629_n = static_cast<jule::U32>(0LLU);;
	(_3589_r)--;
	for (; (_3589_r >= 0LL); (_3589_r)--) {
		{
			_3629_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_3589_r]) - '0') << _35231_k);
			jule::U32 _3669_quo = (_3629_n / 10LLU);;
			jule::U32 _3679_rem = (_3629_n - (10LLU * _3669_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3679_rem + '0'));
			} else if ((_3679_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3669_quo;
		}
	_iter_next_1aeb15add:;
	}
	_iter_end_1aeb15add:;;
	while ((_3629_n > 0LLU)) {
		{
			jule::U32 _3799_quo = (_3629_n / 10LLU);;
			jule::U32 _3809_rem = (_3629_n - (10LLU * _3799_quo));;
			(_3599_w)--;
			if ((_3599_w < 800LL)) {
				(*(_35219_a))._field_d[_3599_w]=static_cast<jule::U8>((_3809_rem + '0'));
			} else if ((_3809_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3629_n=_3799_quo;
		}
	_iter_next_1aeb161b5:;
	}
	_iter_end_1aeb161b5:;;
	(*(_35219_a))._field_nd+=_3539_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3539_delta;
	_1b9a9b629_trim(_35219_a);
}



inline jule::Bool _1b9a9c4e8_shouldRoundUp(_1b9a99ccb_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1b9a9dc7a_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1b9a9e74d_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _658_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b9aa0078_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_658_s = __jule_assign_result.__jule_result_arg1;
	});
	return _658_s;;
}



inline jule::Str _1b9a9e143_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1b9a9e74d_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _768_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1b9aa0078_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_768_s = __jule_assign_result.__jule_result_arg1;
	});
	return _768_s;;
}



inline jule::Str _1b9a9e40c_Itoa(jule::I32 _819_i) {
	return _1b9a9e143_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1b9a9e74d_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return jule::Str::from_byte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _909_buf = jule::Slice<jule::U8>::alloc(3LL, 3LL, 0);;
	_909_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_909_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _209e0ccbe_StrFromBytes(_909_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1b9a9e9d4_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1b9aa0078_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		jule::panic(jule::Str::lit("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:107:9"));;
	};
	jule::Slice<jule::U8> _1119_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _1129_i = _1119_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1aeb516b7:;
			{
				;
				jule::U32 _15413_us = static_cast<jule::U32>(_10533_u);;
				while ((_15413_us >= 100LLU)) {
					{
						jule::U32 _15613_is = ((_15413_us % 100LL) << 1LLU);;
						_15413_us/=100LLU;
						_1129_i-=2LL;
						_1119_a[(_1129_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_15613_is + 1LLU)));
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_15613_is));
					}
				_iter_next_1aeb53257:;
				}
				_iter_end_1aeb53257:;;
				jule::U32 _1649_is = (_15413_us << 1LLU);;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((_1649_is + 1LLU)));
				if ((_15413_us >= 10LLU)) {
					(_1129_i)--;
					_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1649_is));
				};
			}
		}
		else if (_1b9a9e9d4_isPowerOfTwo(_10541_base)) {
			_case_begin_1aeb51d7c:;
			{
				jule::U32 _1799_shift = (static_cast<jule::U32>(_1b9a3c6db_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1809_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1819_m = (static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1809_b)) {
					{
						(_1129_i)--;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1819_m)));
						_10533_u>>=_1799_shift;
					}
				_iter_next_1aeb5ae74:;
				}
				_iter_end_1aeb5ae74:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1aeb507c6:;
			{
				jule::U64 _1929_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1929_b)) {
					{
						(_1129_i)--;
						jule::U64 _19813_q = jule::div(_10533_u,_1929_b);;
						_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((_10533_u - (_19813_q * _1929_b)))));
						_10533_u=_19813_q;
					}
				_iter_next_1aeb51497:;
				}
				_iter_end_1aeb51497:;;
				(_1129_i)--;
				_1119_a[_1129_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1aeb5073d:;
	};
	if (_10552_neg) {
		(_1129_i)--;
		_1119_a[_1129_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1119_a.slice(_1129_i));
		return __jule_func_result;;
	};
	jule::I32 _2175_n = jule::copy(_1119_a, _1119_a.slice(_1129_i));;
	__jule_func_result.__jule_result_arg1=_209e0ccbe_StrFromBytes(_1119_a.slice(0LL, _2175_n));
	return __jule_func_result;;
}



inline jule::Str _1b9aa1574_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aeb6c4b3:;
			{
				return _1b9aa0a90_SysInt;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aeb70b26:;
			{
				return _1b9aa0d48_SysUint;;
			}
		}
		else {
			_case_begin_1aeb6d470:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1aeb6ed67:;
	};
}



inline jule::I32 _1b9aa183d_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str::lit("i8", 2) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aeb71a5b:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3) || _match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aeb71c7b:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3) || _match_expr == jule::Str::lit("u32", 3) || _match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aeb71ce2:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3) || _match_expr == jule::Str::lit("u64", 3) || _match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aeb71ac2:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4) || _match_expr == jule::Str::lit("int", 3) || _match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aeb71b38:;
			{
				return _1b9aa0793_BitSize;;
			}
		}
		else {
			_case_begin_1aeb71891:;
			{
				return -1LL;;
			}
		}
		_match_end_1aeb719b2:;
	};
}



inline jule::Str _1b9aa1b7e_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aeb79008:;
			{
				return jule::Str::lit("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aeb78d2c:;
			{
				return jule::Str::lit("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aeb78d93:;
			{
				return jule::Str::lit("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aeb7906e:;
			{
				return jule::Str::lit("i64", 3);;
			}
		}
		else {
			_case_begin_1aeb785e0:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aeb78711:;
	};
}



inline jule::Str _1b9aa1e15_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1aeb7a27e:;
			{
				return jule::Str::lit("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1aeb79a42:;
			{
				return jule::Str::lit("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1aeb79aa8:;
			{
				return jule::Str::lit("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aeb7a2e5:;
			{
				return jule::Str::lit("u64", 3);;
			}
		}
		else {
			_case_begin_1aeb79cea:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aeb79998:;
	};
}



inline jule::Str _1b9aa21ce_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1aeb7b758:;
			{
				return jule::Str::lit("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1aeb7acc9:;
			{
				return jule::Str::lit("f64", 3);;
			}
		}
		else {
			_case_begin_1aeb7b071:;
			{
				return jule::Str();;
			}
		}
		_match_end_1aeb7ac1e:;
	};
}



inline jule::Bool _1b9aa2cd4_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1b9a8e551_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1b9aa309d_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1aeb81384:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aeb80d12:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aeb7cc87:;
	};
}



inline jule::I32 _1b9aa3367_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1aeb820dd:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1aeb821ba:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1aeb82231:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aeb8164d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aeb81571:;
	};
}



inline jule::I32 _1b9aa3631_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1aeb83b5b:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1aeb82d47:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1aeb82dad:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1aeb82cc0:;
			{
				return 64LLU;;
			}
		}
		_match_end_1aeb83265:;
	};
}



inline void _1b9aa37c9_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _20b1a1061_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1aeb83c16:;
				{
					_1b9aa0793_BitSize=64LLU;
					_1b9aa0a90_SysInt=jule::Str::lit("i64", 3);
					_1b9aa0d48_SysUint=jule::Str::lit("u64", 3);
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1aeb84b3a:;
				{
					_1b9aa0793_BitSize=32LLU;
					_1b9aa0a90_SysInt=jule::Str::lit("i32", 3);
					_1b9aa0d48_SysUint=jule::Str::lit("u32", 3);
				}
			}
			_match_end_1aeb84a3b:;
		};
	};
}



inline void _1b9aa3950_init(void) {
	_1b9aa37c9_UpdateTarget();
}



inline jule::I64 _1b9aa75ad_MinI(jule::Str _6113_k) {
	_6113_k=_1b9aa1574_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aeb87324:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aeb8709e:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aeb87115:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aeb8718c:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1aeb83d04:;
			{
				return 0LL;;
			}
		}
		_match_end_1aeb83dc0:;
	};
}



inline jule::I64 _1b9aa78bb_MaxI(jule::Str _7913_k) {
	_7913_k=_1b9aa1574_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1aeb88336:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aeb8839c:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aeb88413:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aeb88479:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1aeb881d2:;
			{
				return 0LL;;
			}
		}
		_match_end_1aeb8817c:;
	};
}



inline jule::U64 _1b9aa7b85_MaxU(jule::Str _9713_k) {
	_9713_k=_1b9aa1574_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1aeb89931:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aeb89997:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aeb89a0d:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aeb89a74:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1aeb897cc:;
			{
				return 0LLU;;
			}
		}
		_match_end_1aeb89777:;
	};
}



inline jule::F64 _1b9aa7ec6_Min(jule::Str _11512_k) {
	_11512_k=_1b9aa1574_RealKindOf(_11512_k);
	jule::I64 _1175_i = _1b9aa75ad_MinI(_11512_k);;
	if ((_1175_i != 0LL)) {
		return static_cast<jule::F64>(_1175_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aeb8c0a4:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aeb8bb31:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1aeb8b757:;
			{
				return 0LL;;
			}
		}
		_match_end_1aeb8b46b:;
	};
}



inline jule::F64 _1b9aa825c_Max(jule::Str _13312_k) {
	_13312_k=_1b9aa1574_RealKindOf(_13312_k);
	jule::I64 _1355_i = _1b9aa78bb_MaxI(_13312_k);;
	if ((_1355_i != 0LL)) {
		return static_cast<jule::F64>(_1355_i);;
	};
	jule::U64 _1395_u = _1b9aa7b85_MaxU(_13312_k);;
	if ((_1395_u != 0LLU)) {
		return static_cast<jule::F64>(_1395_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aeb8e3b4:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aeb8de41:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1aeb8da67:;
			{
				return 0LL;;
			}
		}
		_match_end_1aeb8d726:;
	};
}



inline jule::Bool _1b9aa8713_IsI16Greater(jule::Str _621_k) {
	return _621_k.equal("i8", 2);;
}



inline jule::Bool _1b9aa8a21_IsI32Greater(jule::Str _1121_k) {
	return (_1121_k.equal("i8", 2) || _1121_k.equal("i16", 3));;
}



inline jule::Bool _1b9aa8cda_IsI64Greater(jule::Str _1621_k) {
	return ((_1621_k.equal("i8", 2) || _1621_k.equal("i16", 3)) || _1621_k.equal("i32", 3));;
}



inline jule::Bool _1b9aa912b_IsU16Greater(jule::Str _2321_k) {
	return _2321_k.equal("u8", 2);;
}



inline jule::Bool _1b9aa93b2_IsU32Greater(jule::Str _2821_k) {
	return (_2821_k.equal("u8", 2) || _2821_k.equal("u16", 3));;
}



inline jule::Bool _1b9aa967b_IsU64Greater(jule::Str _3421_k) {
	return ((_3421_k.equal("u8", 2) || _3421_k.equal("u16", 3)) || _3421_k.equal("u32", 3));;
}



inline jule::Bool _1b9aa9945_IsF32Greater(jule::Str _4117_k) {
	return (!_4117_k.equal("f64", 3));;
}



inline jule::Bool _1b9aa9d1e_IsF64Greater(jule::Str _4617_k) {
	return true;;
}



inline jule::Bool _1b9aaa11b_IsGreater(jule::Str _5118_k1, jule::Str _5127_k2) {
	{
		auto &_match_expr{ _5118_k1 };
		
		if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1aeb92ab0:;
			{
				return _1b9aab282_IsSigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1aeb92b26:;
			{
				return _1b9aab590_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1aeb92b8c:;
			{
				return _1b9aab590_IsUnsigInt(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1aeb92c14:;
			{
				return _1b9aa8713_IsI16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1aeb92e89:;
			{
				return _1b9aa8a21_IsI32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1aeb93011:;
			{
				return _1b9aa8cda_IsI64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1aeb93088:;
			{
				return _1b9aa912b_IsU16Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1aeb93110:;
			{
				return _1b9aa93b2_IsU32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1aeb93220:;
			{
				return _1b9aa967b_IsU64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1aeb93286:;
			{
				return _1b9aa9945_IsF32Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1aeb932ec:;
			{
				return _1b9aa9d1e_IsF64Greater(_5127_k2);;
			}
		}
		else if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1aeb93363:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aeb9285c:;
			{
				return false;;
			}
		}
		_match_end_1aeb91361:;
	};
}



inline jule::Bool _1b9aab282_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1b9aab590_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1b9aab859_IsInt(jule::Str _4610_k) {
	return (_1b9aab282_IsSigInt(_4610_k) || _1b9aab590_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1b9aabb9a_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1b9aabe31_IsNum(jule::Str _5610_k) {
	return (_1b9aab859_IsInt(_5610_k) || _1b9aabb9a_IsFloat(_5610_k));;
}



inline jule::Bool _1b9aac1ea_IsSigNum(jule::Str _6113_k) {
	return (_1b9aab282_IsSigInt(_6113_k) || _1b9aabb9a_IsFloat(_6113_k));;
}



inline void _1b9ab64e0_lshiftUnsig(_1b9aac4c5_Const* _59021_c, _1b9aac4c5_Const* _59032_x) {
	jule::U64 _5915_l = _1b9aaee01_AsU64(_59021_c);;
	jule::U64 _5925_r = _1b9aaee01_AsU64(_59032_x);;
	_1b9ab06e8_SetU64(_59021_c, (_5915_l << _5925_r));
}



inline void _1b9ab6820_rshiftUnsig(_1b9aac4c5_Const* _59621_c, _1b9aac4c5_Const* _59632_x) {
	jule::U64 _5975_l = _1b9aaee01_AsU64(_59621_c);;
	jule::U64 _5985_r = _1b9aaee01_AsU64(_59632_x);;
	_1b9ab06e8_SetU64(_59621_c, (_5975_l >> _5985_r));
}



inline jule::Bool _1abd0aac7_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_1abc60ed3_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aea0a6a3:;
		if (it != expr_end) {
			jule::U32 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1aea0a6a3:;
			++it;
			goto _iter_begin_1aea0a6a3;
		}
		_iter_end_1aea0a6a3:;
	};
	return false;;
}



inline jule::Bool _1abd0add5_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1abc61225_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aea0abae:;
		if (it != expr_end) {
			jule::U32 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1aea0abae:;
			++it;
			goto _iter_begin_1aea0abae;
		}
		_iter_end_1aea0abae:;
	};
	return false;;
}



inline jule::Bool _1abd0b4e0_IsStr(jule::Str _36410_k) {
	return (!(_36410_k).empty() && ((_36410_k[0LL] == '\"') || _1abd0b776_IsRawStr(_36410_k)));;
}



inline jule::Bool _1abd0b776_IsRawStr(jule::Str _36713_k) {
	return (!(_36713_k).empty() && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1abd0ba40_IsRune(jule::Str _37111_k) {
	return (!(_37111_k).empty() && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1abd0c425_IsFloat(jule::Str _38012_k) {
	if (_20b0d9dce_HasPrefix(_38012_k, jule::Str::lit("0x", 2))) {
		return _20b0dee17_ContainsAny(_38012_k, jule::Str::lit(".pP", 3));;
	};
	return _20b0dee17_ContainsAny(_38012_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1abd0c6de_IsNum(jule::Str _38810_k) {
	if ((_38810_k).empty()) {
		return false;;
	};
	jule::U8 _3935_b = _38810_k[0LL];;
	return ((_3935_b == '.') || (('0' <= _3935_b) && (_3935_b <= '9')));;
}



inline jule::Bool _1abd0cc72_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1abd0d03b_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1abd0d5be_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1abc60cc4_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aea13090:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1aea13090:;
			++it;
			goto _iter_begin_1aea13090;
		}
		_iter_end_1aea13090:;
	};
	return false;;
}



inline jule::Bool _1abd0dab9_IsLetter(jule::I32 _42913_r) {
	return _20b02c272_IsLetter(_42913_r);;
}



inline jule::Bool _1abd0e03c_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1abd0e306_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1abd0e5c0_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1abd0e889_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1aea16b10:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1aea16ba9:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1aea16c31:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1aea16a88:;
			{
				return false;;
			}
		}
		_match_end_1aea1659e:;
	};
}



inline jule::Bool _1abd0eb53_IsAssign(jule::U32 _47313_id) {
	return ((((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU))) || (_47313_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1abd0ee1c_IsPostfixOp(jule::U32 _48516_id) {
	{
		auto expr = &(_1abd0486d_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aecd464c:;
		if (it != expr_end) {
			jule::U32 *_48612_op = it;
			{
				if ((_48516_id == (*(_48612_op)))) {
					return true;;
				};
			}
			_iter_next_1aecd464c:;
			++it;
			goto _iter_begin_1aecd464c;
		}
		_iter_end_1aecd464c:;
	};
	return false;;
}



inline jule::Bool _1abd101d6_IsAssignOp(jule::U32 _49515_id) {
	if (_1abd0ee1c_IsPostfixOp(_49515_id)) {
		return true;;
	};
	{
		auto expr = &(_1abd04b59_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aecd6d14:;
		if (it != expr_end) {
			jule::U32 *_49912_op = it;
			{
				if ((_49515_id == (*(_49912_op)))) {
					return true;;
				};
			}
			_iter_next_1aecd6d14:;
			++it;
			goto _iter_begin_1aecd6d14;
		}
		_iter_end_1aecd6d14:;
	};
	return false;;
}



inline jule::Ptr<_1abd10b21_File> _1abd11eeb_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1abd10b21_File>(_1abd10b21_File{._field_Path=_5715_path, });;
}



inline _1eb22e132_Log _1abd13a25_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1abd10b21_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*((*(_10033_f))))._field_Path, ._field_Text=_1eb22e594_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1abd13ddd_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aece2083:;
		if (it != expr_end) {
			jule::I32 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1aece2083:;
			++it;
			_1149_i++;
			goto _iter_begin_1aece2083;
		}
		_iter_end_1aece2083:;
	};
	return true;;
}



inline jule::Str _1abd14262_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1289_b = (*(_12215_txt))[_12232_i];;
	if ((_1289_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1289_b == '+') || (_1289_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1425_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_1289_b=(*(_12215_txt))[_12232_i];
			if (((_1289_b != '_') && (!(_1abd0e03c_IsDecimal(_1289_b))))) {
				goto _iter_end_1aece4e21;
			};
		}
	_iter_next_1aece4e21:;
	}
	_iter_end_1aece4e21:;;
	if ((_12232_i == _1425_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1abd1462a_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1abd14262_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1abd1499e_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1aece7341:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _1689_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_1689_b == '_') || _1abd0e03c_IsDecimal(_1689_b)) {
					_case_begin_1aece7ce2:;
					{
						goto _iter_next_1aece7099;
					}
				}
				else if (_1abd16330_isFloatFmtP(_1689_b, _16036_i)) {
					_case_begin_1aece7d8b:;
					{
						return _1abd1462a_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1aece7c6a:;
					{
						goto _iter_end_1aece7099;
					}
				}
				_match_end_1aece7c04:;
			};
		}
	_iter_next_1aece7099:;
	}
	_iter_end_1aece7099:;;
	return jule::Str();;
}



inline jule::Str _1abd14d23_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1abd14262_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1abd15197_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1abd14262_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1abd1562b_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _2019_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_2019_b == 'e') || (_2019_b == 'E')))) {
				__jule_func_result = _1abd14262_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_2019_b != '_') && (!(_1abd0e03c_IsDecimal(_2019_b))))) {
				goto _iter_end_1aeceaaa3;
			};
		}
	_iter_next_1aeceaaa3:;
	}
	_iter_end_1aeceaaa3:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1abd1586d_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2179_i = 0LL;;
	_julec_label_1aecea333:;
	for (; (_2179_i < (*(_21615_txt)).len()); (_2179_i)++) {
		{
			jule::U8 _2209_b = (*(_21615_txt))[_2179_i];;
			{
				
				if ((_2209_b == '.')) {
					_case_begin_1aecedbd8:;
					{
						__jule_func_result = _1abd1562b_floatNum(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((_2209_b == '_')) {
					_case_begin_1aecedc82:;
					{
						goto _iter_next_1aeced0d3;
					}
				}
				else if (_1abd15eab_isFloatFmtE(_2209_b, _2179_i)) {
					_case_begin_1aecedce8:;
					{
						__jule_func_result = _1abd14262_floatFmtE(_21615_txt, _2179_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1abd0e03c_IsDecimal(_2209_b)))) {
					_case_begin_1aecedd5e:;
					{
						goto _iter_end_1aeced0d3;
					}
				}
				_match_end_1aecedb0b:;
			};
		}
	_iter_next_1aeced0d3:;
	}
	_iter_end_1aeced0d3:;;
	if ((_2179_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _2179_i));
	return __jule_func_result;;
}



inline jule::Str _1abd15b37_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1abd13ddd_bytesHasPrefix(_23915_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2489_i = 2LL;;
	for (; (_2489_i < (*(_23915_txt)).len()); (_2489_i)++) {
		{
			if ((((*(_23915_txt))[_2489_i] != '_') && (!(_1abd0e306_IsBinary((*(_23915_txt))[_2489_i]))))) {
				goto _iter_end_1aed01aba;
			};
		}
	_iter_next_1aed01aba:;
	}
	_iter_end_1aed01aba:;;
	if ((_2489_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _2489_i));
	return __jule_func_result;;
}



inline jule::Bool _1abd15eab_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1abd16330_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1abd166a4_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1aed046a0:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _2769_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_2769_b == '_') || _1abd0e03c_IsDecimal(_2769_b)) {
					_case_begin_1aed056b2:;
					{
						goto _iter_next_1aed045a1;
					}
				}
				else if (_1abd16330_isFloatFmtP(_2769_b, _26938_i)) {
					_case_begin_1aed0575b:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1aed0563a:;
					{
						goto _iter_end_1aed045a1;
					}
				}
				_match_end_1aed055c4:;
			};
		}
	_iter_next_1aed045a1:;
	}
	_iter_end_1aed045a1:;;
	return false;;
}



inline jule::Bool _1abd16a28_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1aed069c1:;
			{
				goto _case_begin_1aed06a6a;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1aed06a6a:;
			{
				goto _case_begin_1aed06ae2;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1aed06ae2:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aed06938:;
			{
				return true;;
			}
		}
		_match_end_1aed06839:;
	};
}



inline jule::Bool _1abd16d9c_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1aed08781:;
			{
				goto _case_begin_1aed087e7;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1aed087e7:;
			{
				goto _case_begin_1aed0885d;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1aed0885d:;
			{
				goto _case_begin_1aed088d5;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1aed088d5:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1aed086b5:;
			{
				return true;;
			}
		}
		_match_end_1aed08275:;
	};
}



inline jule::Str _1abd17397_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3269_octalStart = 1LL;;
	jule::Bool _3289_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3269_octalStart)++;
		_3289_o=true;
	};
	jule::I32 _3379_i = _3269_octalStart;;
	for (; (_3379_i < (*(_31814_txt)).len()); (_3379_i)++) {
		{
			jule::U8 _3399_b = (*(_31814_txt))[_3379_i];;
			if ((_3399_b == '.')) {
				if (_3289_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1abd1562b_floatNum(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (_1abd15eab_isFloatFmtE(_3399_b, _3379_i)) {
				__jule_func_result = _1abd14262_floatFmtE(_31814_txt, _3379_i);
				return __jule_func_result;;
			};
			if (((_3399_b != '_') && (!(_1abd0e5c0_IsOctal(_3399_b))))) {
				goto _iter_end_1aed0cdd4;
			};
		}
	_iter_next_1aed0cdd4:;
	}
	_iter_end_1aed0cdd4:;;
	if ((_3379_i == _3269_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _3379_i));
	return __jule_func_result;;
}



inline jule::Str _1abd17573_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3699_i = 2LL;;
	_julec_label_1aed11899:;
	for (; (_3699_i < (*(_36012_txt)).len()); (_3699_i)++) {
		{
			jule::U8 _3729_b = (*(_36012_txt))[_3699_i];;
			{
				
				if (_1abd16a28_isFloatFmtDotp(_36012_txt, _3699_i)) {
					_case_begin_1aed1259d:;
					{
						__jule_func_result = _1abd15197_floatFmtDotp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1abd16d9c_isFloatFmtDotfp(_36012_txt, _3699_i)) {
					_case_begin_1aed12647:;
					{
						__jule_func_result = _1abd14d23_floatFmtDotfp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1abd16330_isFloatFmtP(_3729_b, _3699_i)) {
					_case_begin_1aed126ad:;
					{
						__jule_func_result = _1abd1462a_floatFmtP(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (_1abd166a4_isFloatFmtDotnp(_36012_txt, _3699_i)) {
					_case_begin_1aed12724:;
					{
						__jule_func_result = _1abd1499e_floatFmtDotnp(_36012_txt, _3699_i);
						return __jule_func_result;;
					}
				}
				else if (((_3729_b != '_') && (!(_1abd0e889_IsHex(_3729_b))))) {
					_case_begin_1aed1278a:;
					{
						goto _iter_end_1aed119ed;
					}
				}
				_match_end_1aed124b0:;
			};
		}
	_iter_next_1aed119ed:;
	}
	_iter_end_1aed119ed:;;
	if ((_3699_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _3699_i));
	return __jule_func_result;;
}



inline jule::Str _1abd178c5_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3999_i = 2LL;;
	for (; (_3999_i < _39328_n); (_3999_i)++) {
		{
			if ((!(_1abd0e889_IsHex((*(_39315_txt))[_3999_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1aed14d31:;
	}
	_iter_end_1aed14d31:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1abd17b8e_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1abd178c5_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1abd17e58_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1abd178c5_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1abd18222_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1abd178c5_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1abd184db_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1abd0e5c0_IsOctal((*(_42616_txt))[1LL]))) || (!(_1abd0e5c0_IsOctal((*(_42616_txt))[2LL])))) || (!(_1abd0e5c0_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1eb22e132_Log> _1abd1d4d0_Lex(jule::Ptr<_1abd10b21_File> _80912_f, jule::I32 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1abd18c5b_lex _8149_lex = _1abd18c5b_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1abd1ba72_newLine(&_8149_lex);
	_1abd19850_lex(&_8149_lex);
	if ((_8149_lex._field_errors.len() > 0LL)) {
		return _8149_lex._field_errors;;
	};
	(*(_80912_f))._field_Tokens=_8149_lex._field_tokens;
	return nullptr;;
}



inline jule::Bool _1ab693b9c_FindModuleFile(jule::Slice<jule::Ptr<_209c238a4_DirEntry>>* _1320_dirents) {
	{
		auto expr = _1320_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aed97b1c:;
		if (it != expr_end) {
			jule::Ptr<_209c238a4_DirEntry> *_1412_d = it;
			{
				if (((!(_209c27347_IsDir((*((*(_1412_d))))._field_Stat.ptr()))) && (*(*(_1412_d)).alloc)._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1aed97b1c:;
			++it;
			goto _iter_begin_1aed97b1c;
		}
		_iter_end_1aed97b1c:;
	};
	return false;;
}



inline jule::Str _1ab693e55_FindModuleFileDeep(jule::Str _2527_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_209c238a4_DirEntry>> _2713_dirents = ({
				auto except = static__20b0e64c3_Read(_2527_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1aed98524;
				} jule::Slice<jule::Ptr<_209c238a4_DirEntry>>(nullptr);});
			});;
			jule::Bool _319_exist = _1ab693b9c_FindModuleFile(&(_2713_dirents));;
			if (_319_exist) {
				return _2527_path;;
			};
			jule::I32 _369_n = _2527_path.len();;
			_2527_path=_20b0e5bed_Dir(_2527_path);
			if ((_2527_path.len() == _369_n)) {
				goto _iter_end_1aed98524;
			};
		}
	_iter_next_1aed98524:;
	}
	_iter_end_1aed98524:;;
	return jule::Str();;
}



inline jule::Slice<_1eb22e132_Log> _1ab69421e_CheckModuleFile(jule::Str* _4721_path) {
	jule::Slice<jule::U8> _485_bytes = ({
		auto except = static__209c257da_Read(_20b0e500a_Join(jule::Slice<jule::Str>::make({(*(_4721_path)),jule::Str::lit("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1eb22e132_Log>::make({_1eb22e132_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _545_s = _20b0e1be9_Trim(_209e0ca05_BytesStr(_485_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_545_s.len() != 0LL)) {
		return jule::Slice<_1eb22e132_Log>::make({_1eb22e132_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1ab694a6b_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _119_b = _910_ident[0LL];;
		return (('A' <= _119_b) && (_119_b <= 'Z'));;
	};
	jule::I32 _145_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_910_ident);
		_145_r = __jule_assign_result.__jule_result_arg0;
	});
	return _20b0984db_IsUpper(_145_r);;
}



inline jule::Bool _1abdca8de_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1abde591a_ToRune(jule::Str _2015_lit) {
	jule::I32 _219_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _2413_i = 0LL;;
		_219_r=_1abde6575_runeFromEsqSeq(_2015_lit, &(_2413_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_2015_lit);
			_219_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _219_r;;
}



inline jule::Str _1abde5b29_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1abde5e6a_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _539_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeda5465:;
		if (it != expr_end) {
			jule::U8 _5412_b = *it;
			{
				if (((_5412_b >= 128LLU) || (_5412_b == '\\'))) {
					_539_isPure=false;
					goto _iter_end_1aeda5465;
				};
			}
			_iter_next_1aeda5465:;
			++it;
			goto _iter_begin_1aeda5465;
		}
		_iter_end_1aeda5465:;
	};
	if (_539_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _689_s = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len(), 0);;
	jule::I32 _699_i = 0LL;;
	while ((_699_i < _4714_lit.len())) {
		{
			jule::U8 _719_b = _4714_lit[_699_i];;
			if ((_719_b == '\\')) {
				_1abde691b_strEsqSeq(&(_689_s), _4714_lit, &(_699_i));
			} else {
				jule::I32 _7513_r;
				jule::I32 _7516_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2ebbe_DecodeRuneStr(_4714_lit.slice(_699_i));
					_7513_r = __jule_assign_result.__jule_result_arg0;
					_7516_size = __jule_assign_result.__jule_result_arg1;
				});
				_699_i+=_7516_size;
				_689_s=_209d30c69_AppendRune(_689_s, _7513_r);
			};
		}
	_iter_next_1aeda7456:;
	}
	_iter_end_1aeda7456:;;
	return _209e0ccbe_StrFromBytes(_689_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1abde6201_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1aeda9931:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1aedaa14b:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1aedaa1b2:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1aedaa228:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1aedaa28e:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1aedaa316:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1aedaa38d:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1aedaa415:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1aedaa48c:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1aedaa514:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1aeda9ea3:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1abde6575_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1145_b;
	jule::Bool _1148_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1abde6201_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1145_b = __jule_assign_result.__jule_result_arg0;
		_1148_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1148_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1145_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1aedb010c:;
			{
				;
				jule::I32 _1249_r = static_cast<jule::I32>(({
					auto except = _1b9a8777a_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:19"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1249_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1aedaee20:;
			{
				;
				jule::I32 _1299_r = static_cast<jule::I32>(({
					auto except = _1b9a8777a_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:19"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1299_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1aedae837:;
			{
				;
				jule::Str _1349_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b9a8777a_ParseUint(_1349_seq, 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:18"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1aedad638:;
			{
				;
				jule::Str _1399_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1b9a8777a_ParseUint(_1399_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:18"));
					(except.result);
				}));;
			}
		}
		_match_end_1aedadda8:;
	};
}



inline void _1abde691b_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1465_r = _1abde6575_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1465_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1465_r)); };
		return;;
	};
	(*(_14519_buf))=_209d30c69_AppendRune((*(_14519_buf)), _1465_r);
}



inline jule::I32 _1ac025a5b_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32 _1141_i) {
	while ((_1141_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _139_r;
			jule::I32 _1312_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune((*(_1122_bytes)).slice(_1141_i));
				_139_r = __jule_assign_result.__jule_result_arg0;
				_1312_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_139_r == '{')) {
				return _1141_i;;
			};
			_1141_i+=_1312_size;
		}
	_iter_next_1aeddada2:;
	}
	_iter_end_1aeddada2:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ac025d8b_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _285_start = (*(_2724_i));;
	jule::I32 _299_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _319_r;
			jule::I32 _3112_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _209d2e87d_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_319_r = __jule_assign_result.__jule_result_arg0;
				_3112_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3112_size;
			{
				auto &_match_expr{ _319_r };
				
				if (_match_expr == '{') {
					_case_begin_1aeddd811:;
					{
						(_299_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1aeddda75:;
					{
						(_299_braces)--;
						if ((_299_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_285_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1aeddd06e:;
			};
		}
	_iter_next_1aeddc8ed:;
	}
	_iter_end_1aeddc8ed:;;
	return nullptr;;
}



inline void _1ac026177_FmtByDefault(_209e0d4d9_StrBuilder* _4722_buf, jule::Any* _4740_arg) {
	if (((*(_4740_arg)) == nullptr)) {
		_209e0de79_WriteStr(_4722_buf, jule::Str::lit("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4740_arg)) };
		
		if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1aede0714:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a82797_FmtFloat(static_cast<jule::F64>((*(_4740_arg)).cast<jule::F32>(&__jule_any_type135)), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1aede004e:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a82797_FmtFloat((*(_4740_arg)).cast<jule::F64>(&__jule_any_type5), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1aede00b5:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9e143_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I8>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1aede012b:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9e143_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I16>(&__jule_any_type137)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1aede0192:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9e143_FmtInt(static_cast<jule::I64>((*(_4740_arg)).cast<jule::I32>(&__jule_any_type6)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1aede0208:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9e143_FmtInt((*(_4740_arg)).cast<jule::I64>(&__jule_any_type1), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1aede0835:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U8>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1aede089b:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U16>(&__jule_any_type138)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type139) {
			_case_begin_1aede0912:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9dc7a_FmtUint(static_cast<jule::U64>((*(_4740_arg)).cast<jule::U32>(&__jule_any_type139)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1aede0978:;
			{
				_209e0de79_WriteStr(_4722_buf, _1b9a9dc7a_FmtUint((*(_4740_arg)).cast<jule::U64>(&__jule_any_type2), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1aede09de:;
			{
				_209e0de79_WriteStr(_4722_buf, (*(_4740_arg)).cast<jule::Str>(&__jule_any_type4));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1aede0a55:;
			{
				if ((*(_4740_arg)).cast<jule::Bool>(&__jule_any_type3)) {
					_209e0de79_WriteStr(_4722_buf, jule::Str::lit("true", 4));
				} else {
					_209e0de79_WriteStr(_4722_buf, jule::Str::lit("false", 5));
				};
			}
		}
		else {
			_case_begin_1aedde9ee:;
			{
				_209e0de79_WriteStr(_4722_buf, jule::to_str((*(_4740_arg))));
			}
		}
		_match_end_1aeddcd2c:;
	};
}



inline void _1ac026595_applyFmtByDefault(_209e0d4d9_StrBuilder* _8627_buf, jule::I32* _8649_j, jule::Slice<jule::Any> _8657_args) {
	jule::Any _875_arg = _8657_args[(*(_8649_j))];;
	((*(_8649_j)))++;
	_1ac026177_FmtByDefault(_8627_buf, &(_875_arg));
}



inline void _1ac0269b3_applyFmt(jule::Slice<jule::U8>* _9418_fmt, _209e0d4d9_StrBuilder* _9436_buf, jule::I32* _9458_j, jule::Slice<jule::Any> _9466_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1ac026595_applyFmtByDefault(_9436_buf, _9458_j, _9466_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		_209e0de79_WriteStr(_9436_buf, jule::Str::lit("{}", 2));
		return;;
	};
	_209e0dbc1_Write(_9436_buf, (*(_9418_fmt)));
}



inline jule::Slice<jule::U8> _1ac026d37_Format(jule::Str _11511_fmt, jule::Slice<jule::Any> _11521_args) {
	jule::Slice<jule::U8> _1169_fmtBytes = _209e0c76e_StrBytes(_11511_fmt);;
	if ((_11521_args.len() == 0LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1209_i = _1ac025a5b_findFormatPrefix(&(_1169_fmtBytes), 0LL);;
	if ((_1209_i == -1LL)) {
		return _1169_fmtBytes;;
	};
	jule::I32 _1249_j = 0LL;;
	jule::I32 _1259_last = 0LL;;
	_209e0d4d9_StrBuilder _1269_buf = static__209e0d918_New(_11511_fmt.len());;
	for (; (_1209_i != -1LL); _1209_i=_1ac025a5b_findFormatPrefix(&(_1169_fmtBytes), _1209_i)) {
		{
			_209e0dbc1_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last, _1209_i));
			jule::Slice<jule::U8> _12913_format = _1ac025d8b_getFormatRange(&(_1209_i), &(_1169_fmtBytes));;
			if ((_12913_format == nullptr)) {
				goto _iter_next_1aedecc2c;
			};
			_1ac0269b3_applyFmt(&(_12913_format), &(_1269_buf), &(_1249_j), _11521_args);
			if ((_1249_j >= _11521_args.len())) {
				_209e0dbc1_Write(&_1269_buf, _1169_fmtBytes.slice(_1209_i));
				_1259_last=_1169_fmtBytes.len();
				goto _iter_end_1aedecc2c;
			};
			_1259_last=_1209_i;
		}
	_iter_next_1aedecc2c:;
	}
	_iter_end_1aedecc2c:;;
	if ((_1259_last < _1169_fmtBytes.len())) {
		_209e0dbc1_Write(&_1269_buf, _1169_fmtBytes.slice(_1259_last));
	};
	return _209e10222_Buf(&_1269_buf);;
}



inline jule::Str _1ac028d5b_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _209e0ccbe_StrFromBytes(_1ac026d37_Format(_3111_fmt, _3121_args));;
}



inline jule::Bool _1abd5b95d_parameterUsesGenerics(jule::Ptr<_1abd58608_ParamIns>* _38531_p, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _38546_generics) {
	if (_1abd552e7_IsSelf((*((*(_38531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1abe5d587_kindUsesGenerics(&((*((*(_38531_p))))._field_Kind), _38546_generics);;
}



inline jule::Ptr<_1abe4a002_TypeSymbol> _1abd5e1d0_buildType(jule::Ptr<_1abd20845_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1abe12aad_Value> _1abd5e4dd_buildExpr(jule::Ptr<_1abd24b79_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1abd5e7a7_buildTypeAlias(jule::Ptr<_1abd37362_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Scope=(*(_11223_decl))._field_Scope, ._field_Public=(*_11223_decl.alloc)._field_Public, ._field_Binded=(*_11223_decl.alloc)._field_Binded, ._field_Token=(*_11223_decl.alloc)._field_Token, ._field_Ident=(*_11223_decl.alloc)._field_Ident, ._field_Kind=_1abd5e1d0_buildType((*_11223_decl.alloc)._field_Kind), });;
}



inline jule::Ptr<_1abd3d7a8_Field> _1abd5eae8_buildField(jule::Ptr<_1abd3ac17_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1abd3d7a8_Field>(_1abd3d7a8_Field{._field_Token=(*(_12319_decl))._field_Token, ._field_Public=(*_12319_decl.alloc)._field_Public, ._field_Mutable=(*_12319_decl.alloc)._field_Mutable, ._field_Ident=(*_12319_decl.alloc)._field_Ident, ._field_Kind=_1abd5e1d0_buildType((*_12319_decl.alloc)._field_Kind), ._field_Default=(*_12319_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1abd3d7a8_Field>> _1abd5ed7e_buildFields(jule::Slice<jule::Ptr<_1abd3ac17_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1abd3d7a8_Field>> _1359_fields = jule::Slice<jule::Ptr<_1abd3d7a8_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01ba37e:;
		if (it != expr_end) {
			jule::Ptr<_1abd3ac17_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd3d7a8_Field>> &__jule_push_dest = _1359_fields; __jule_push_dest.push(_1abd5eae8_buildField(_13617_decl)); };
			}
			_iter_next_1b01ba37e:;
			++it;
			goto _iter_begin_1b01ba37e;
		}
		_iter_end_1b01ba37e:;
	};
	return _1359_fields;;
}



inline jule::Ptr<_1abd416ce_Struct> _1abd60148_buildStruct(jule::Ptr<_1abd3b60d_StructDecl> _14220_decl) {
	return jule::new_ptr<_1abd416ce_Struct>(_1abd416ce_Struct{._field_Token=(*(_14220_decl))._field_Token, ._field_Ident=(*_14220_decl.alloc)._field_Ident, ._field_Fields=_1abd5ed7e_buildFields(&((*_14220_decl.alloc)._field_Fields)), ._field_Public=(*_14220_decl.alloc)._field_Public, ._field_Binded=(*_14220_decl.alloc)._field_Binded, ._field_Directives=(*_14220_decl.alloc)._field_Directives, ._field_Generics=(*_14220_decl.alloc)._field_Generics, });;
}



inline jule::Ptr<_1abd54bcb_Param> _1abd60412_buildParam(jule::Ptr<_1abd310a3_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1abd54bcb_Param>(_1abd54bcb_Param{._field_Token=(*(_15419_decl))._field_Token, ._field_Mutable=(*_15419_decl.alloc)._field_Mutable, ._field_Variadic=(*_15419_decl.alloc)._field_Variadic, ._field_Reference=(*_15419_decl.alloc)._field_Reference, ._field_Kind=_1abd5e1d0_buildType((*_15419_decl.alloc)._field_Kind), ._field_Ident=(*_15419_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1abd54bcb_Param>> _1abd607db_buildParams(jule::Slice<jule::Ptr<_1abd310a3_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1abd54bcb_Param>> _1669_params = jule::Slice<jule::Ptr<_1abd54bcb_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01c24da:;
		if (it != expr_end) {
			jule::Ptr<_1abd310a3_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd54bcb_Param>> &__jule_push_dest = _1669_params; __jule_push_dest.push(_1abd60412_buildParam(_16717_decl)); };
			}
			_iter_next_1b01c24da:;
			++it;
			goto _iter_begin_1b01c24da;
		}
		_iter_end_1b01c24da:;
	};
	return _1669_params;;
}



inline jule::Ptr<_1abd5444a_RetType> _1abd60a2d_buildRetType(jule::Ptr<_1abd23738_RetTypeDecl> _17321_decl) {
	if ((((*(_17321_decl))._field_Idents == nullptr) && ((*_17321_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1abd5444a_RetType>(_1abd5444a_RetType{._field_Kind=_1abd5e1d0_buildType((*_17321_decl.alloc)._field_Kind), ._field_Idents=(*_17321_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1abd566a0_Fn> _1abd60ce7_buildFunc(jule::Ptr<_1abd32505_FnDecl> _18318_decl) {
	return jule::new_ptr<_1abd566a0_Fn>(_1abd566a0_Fn{._field_Token=(*(_18318_decl))._field_Token, ._field_Global=(*_18318_decl.alloc)._field_Global, ._field_Unsafety=(*_18318_decl.alloc)._field_Unsafety, ._field_Public=(*_18318_decl.alloc)._field_Public, ._field_Binded=(*_18318_decl.alloc)._field_Binded, ._field_Statically=(*_18318_decl.alloc)._field_Statically, ._field_Exceptional=(*_18318_decl.alloc)._field_Exceptional, ._field_Ident=(*_18318_decl.alloc)._field_Ident, ._field_Directives=(*_18318_decl.alloc)._field_Directives, ._field_Scope=(*_18318_decl.alloc)._field_Scope, ._field_Generics=(*_18318_decl.alloc)._field_Generics, ._field_Result=_1abd60a2d_buildRetType((*_18318_decl.alloc)._field_Result), ._field_Params=_1abd607db_buildParams(&((*_18318_decl.alloc)._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1abd566a0_Fn>> _1abd610b1_buildMethods(jule::Slice<jule::Ptr<_1abd32505_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1abd566a0_Fn>> _2029_methods = jule::Slice<jule::Ptr<_1abd566a0_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01c7a84:;
		if (it != expr_end) {
			jule::Ptr<_1abd32505_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd566a0_Fn>> &__jule_push_dest = _2029_methods; __jule_push_dest.push(_1abd60ce7_buildFunc(_20317_decl)); };
			}
			_iter_next_1b01c7a84:;
			++it;
			goto _iter_begin_1b01c7a84;
		}
		_iter_end_1b01c7a84:;
	};
	return _2029_methods;;
}



inline jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>> _1abd6137a_buildTraitInherits(jule::Slice<jule::Ptr<_1abd20845_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>> _2109_symbols = jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01c86ab:;
		if (it != expr_end) {
			jule::Ptr<_1abd20845_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1abe4a002_TypeSymbol>> &__jule_push_dest = _2109_symbols; __jule_push_dest.push(_1abd5e1d0_buildType(_21117_it)); };
			}
			_iter_next_1b01c86ab:;
			++it;
			goto _iter_begin_1b01c86ab;
		}
		_iter_end_1b01c86ab:;
	};
	return _2109_symbols;;
}



inline jule::Ptr<_1abd69a59_Trait> _1abd61644_buildTrait(jule::Ptr<_1abd3bd4a_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1abd69a59_Trait>(_1abd69a59_Trait{._field_Token=(*(_21719_decl))._field_Token, ._field_Ident=(*_21719_decl.alloc)._field_Ident, ._field_Public=(*_21719_decl.alloc)._field_Public, ._field_Inherits=_1abd6137a_buildTraitInherits(&((*_21719_decl.alloc)._field_Inherits)), ._field_Methods=_1abd610b1_buildMethods(&((*_21719_decl.alloc)._field_Methods)), });;
}



inline jule::Ptr<_1abd6b6e8_EnumItem> _1abd6190d_buildEnumItem(jule::Ptr<_1abd38e02_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1abd6b6e8_EnumItem>(_1abd6b6e8_EnumItem{._field_Token=(*(_22722_decl))._field_Token, ._field_Ident=(*_22722_decl.alloc)._field_Ident, ._field_Value=_1abd5e4dd_buildExpr((*_22722_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _1abd61bc7_buildEnumItems(jule::Slice<jule::Ptr<_1abd38e02_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> _2369_items = jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01caa43:;
		if (it != expr_end) {
			jule::Ptr<_1abd38e02_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd6b6e8_EnumItem>> &__jule_push_dest = _2369_items; __jule_push_dest.push(_1abd6190d_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1b01caa43:;
			++it;
			goto _iter_begin_1b01caa43;
		}
		_iter_end_1b01caa43:;
	};
	return _2369_items;;
}



inline jule::Ptr<_1abd6c265_Enum> _1abd621c2_buildEnum(jule::Ptr<_1abd399b3_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1abd6c265_Enum>(_1abd6c265_Enum{._field_Token=(*(_24318_decl))._field_Token, ._field_Public=(*_24318_decl.alloc)._field_Public, ._field_Ident=(*_24318_decl.alloc)._field_Ident, ._field_Kind=_1abd5e1d0_buildType((*_24318_decl.alloc)._field_Kind), ._field_Items=_1abd61bc7_buildEnumItems(&((*_24318_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1abd6d398_TypeEnumItem> _1abd6239d_buildTypeEnumItem(jule::Ptr<_1abd3a2dd_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1abd6d398_TypeEnumItem>(_1abd6d398_TypeEnumItem{._field_Token=(*(_25326_decl))._field_Token, ._field_Ident=(*_25326_decl.alloc)._field_Ident, ._field_Kind=_1abd5e1d0_buildType((*_25326_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _1abd62645_buildTypeEnumItems(jule::Slice<jule::Ptr<_1abd3a2dd_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> _2629_items = jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01cdc99:;
		if (it != expr_end) {
			jule::Ptr<_1abd3a2dd_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abd6d398_TypeEnumItem>> &__jule_push_dest = _2629_items; __jule_push_dest.push(_1abd6239d_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1b01cdc99:;
			++it;
			goto _iter_begin_1b01cdc99;
		}
		_iter_end_1b01cdc99:;
	};
	return _2629_items;;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1abd6290e_buildTypeEnum(jule::Ptr<_1abd3a94d_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1abd6d970_TypeEnum>(_1abd6d970_TypeEnum{._field_Token=(*(_26922_decl))._field_Token, ._field_Public=(*_26922_decl.alloc)._field_Public, ._field_Ident=(*_26922_decl.alloc)._field_Ident, ._field_Items=_1abd62645_buildTypeEnumItems(&((*_26922_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1abda8d2e_Var> _1abd62bc8_buildVar(jule::Ptr<_1abd336b0_VarDecl> _27817_decl) {
	return jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Token=(*(_27817_decl))._field_Token, ._field_Ident=(*_27817_decl.alloc)._field_Ident, ._field_Binded=(*_27817_decl.alloc)._field_Binded, ._field_Constant=(*_27817_decl.alloc)._field_Constant, ._field_Mutable=(*_27817_decl.alloc)._field_Mutable, ._field_Public=(*_27817_decl.alloc)._field_Public, ._field_Statically=(*_27817_decl.alloc)._field_Statically, ._field_Reference=(*_27817_decl.alloc)._field_Reference, ._field_Kind=_1abd5e1d0_buildType((*_27817_decl.alloc)._field_Kind), ._field_Value=_1abd5e4dd_buildExpr((*_27817_decl.alloc)._field_Expr), ._field_Refers=static__1abd5cb4b_new(), ._field_Directives=(*_27817_decl.alloc)._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1abd62e92_buildVars(jule::Slice<jule::Ptr<_1abd336b0_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1abda8d2e_Var>> _2969_vars = jule::Slice<jule::Ptr<_1abda8d2e_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b01d4981:;
		if (it != expr_end) {
			jule::Ptr<_1abd336b0_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = _2969_vars; __jule_push_dest.push(_1abd62bc8_buildVar(_29717_decl)); };
			}
			_iter_next_1b01d4981:;
			++it;
			goto _iter_begin_1b01d4981;
		}
		_iter_end_1b01d4981:;
	};
	return _2969_vars;;
}



inline jule::Ptr<_1ab650120_Impl> _1abd6325b_buildImpl(jule::Ptr<_1abd3c4aa_Impl> _30318_decl) {
	return jule::new_ptr<_1ab650120_Impl>(_1ab650120_Impl{._field_Base=(*(_30318_decl))._field_Base, ._field_Dest=(*_30318_decl.alloc)._field_Dest, ._field_Methods=_1abd610b1_buildMethods(&((*_30318_decl.alloc)._field_Methods)), ._field_Statics=_1abd62e92_buildVars((*_30318_decl.alloc)._field_Statics)});;
}



inline jule::Ptr<_1abe11936_Data> _1ab64a439_buildAsComptimeMethodData(jule::Ptr<_1abd59681_FnIns>* _142135_f) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*(_142135_f)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data1)}), });;
}



inline jule::Ptr<_1ab67760e_ImportInfo> _1ab64a747_findComptimePackage(jule::Ptr<_1ab6979a3_Sema>* _142929_s) {
	return _1ab697e48_SelectPackage((*(_142929_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ab67760e_ImportInfo>>((void*)__jule_anon1b0255084, nullptr, nullptr));;
}



inline jule::Ptr<_1abe11936_Data> _1ab64aabb_buildComptimeTypeInfoData(jule::Ptr<_1ab6979a3_Sema>* _143535_s, jule::Ptr<_1abe42d30_TypeKind>* _143550_t) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1ab6972dd_pushComptimeTypeInfo((*((*(_143535_s))))._field_meta.ptr(), _143550_t), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data15)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ab64ae0c_buildComptimeValue(jule::Ptr<_1abe11936_Data>* _144328_d) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1ab64460e_comptimeValue>(_1ab64460e_comptimeValue{._field_data=(*(_144328_d))}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data16)}), });;
}



inline jule::Str _1ab64e0b9_toStrConstraints(jule::Ptr<_1abe41449_InsGeneric> _14321_g) {
	_209e0d4d9_StrBuilder _1449_sb = static__209e0d918_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03ac3b7:;
		if (it != expr_end) {
			jule::I32 _1459_i = it - expr->begin();
			jule::Ptr<_1abe42d30_TypeKind> *_14512_c = it;
			{
				_209e0de79_WriteStr(&_1449_sb, _1abe431e8_Str((*(_14512_c)).ptr()));
				if ((((*(_14321_g))._field_Constraint.len() - _1459_i) > 1LL)) {
					_209e0de79_WriteStr(&_1449_sb, jule::Str::lit(" | ", 3));
				};
			}
			_iter_next_1b03ac3b7:;
			++it;
			_1459_i++;
			goto _iter_begin_1b03ac3b7;
		}
		_iter_end_1b03ac3b7:;
	};
	return _209e0e771_Str(&_1449_sb);;
}



inline jule::Bool _1ab64e482_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1abe42d30_TypeKind>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == jule::Str::lit("signed", 6)) {
			_case_begin_1b03ae221:;
			{
				jule::Ptr<_1abe4a909_Prim> _1579_prim = _1abe45481_Prim((*(_15434_g)).ptr());;
				if ((_1579_prim == nullptr)) {
					return false;;
				};
				return _1b9aac1ea_IsSigNum((*(_1579_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("unsigned", 8)) {
			_case_begin_1b03ae287:;
			{
				jule::Ptr<_1abe4a909_Prim> _1639_prim = _1abe45481_Prim((*(_15434_g)).ptr());;
				if ((_1639_prim == nullptr)) {
					return false;;
				};
				return _1b9aab590_IsUnsigInt((*(_1639_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("float", 5)) {
			_case_begin_1b03ae30e:;
			{
				jule::Ptr<_1abe4a909_Prim> _1699_prim = _1abe45481_Prim((*(_15434_g)).ptr());;
				if ((_1699_prim == nullptr)) {
					return false;;
				};
				return _1b9aabb9a_IsFloat((*(_1699_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("numeric", 7)) {
			_case_begin_1b03ae386:;
			{
				jule::Ptr<_1abe4a909_Prim> _1759_prim = _1abe45481_Prim((*(_15434_g)).ptr());;
				if ((_1759_prim == nullptr)) {
					return false;;
				};
				return _1b9aabe31_IsNum((*(_1759_prim))._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str::lit("mutable", 7)) {
			_case_begin_1b03ae562:;
			{
				return _1abe446b1_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("immutable", 9)) {
			_case_begin_1b03ae5c8:;
			{
				return (!(_1abe446b1_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str::lit("comparable", 10)) {
			_case_begin_1b03ae63e:;
			{
				return _1abe4442a_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str::lit("ordered", 7)) {
			_case_begin_1b03ae6a5:;
			{
				return _1abe44947_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1b03ad671:;
			{
				return false;;
			}
		}
		_match_end_1b03ae0bc:;
	};
}



inline jule::Bool _1ab64e74b_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ab64c480_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03b53c0:;
		if (it != expr_end) {
			jule::Str *_19412_bc = it;
			{
				if (((*(_19325_ident)) == (*(_19412_bc)))) {
					return true;;
				};
			}
			_iter_next_1b03b53c0:;
			++it;
			goto _iter_begin_1b03b53c0;
		}
		_iter_end_1b03b53c0:;
	};
	return false;;
}



inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab652353_newScopeCheckerBase(jule::Ptr<_1ab6979a3_Sema>* _5829_s, jule::Ptr<_1abd59681_FnIns> _5843_owner) {
	return jule::new_ptr<_1ab65ca34_scopeChecker>(_1ab65ca34_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1abe0b5bd_SymbolTable>(), });;
}



inline jule::Ptr<_1ab65ca34_scopeChecker> _1ab65271b_newScopeChecker(jule::Ptr<_1ab6979a3_Sema>* _6625_s, jule::Ptr<_1abd59681_FnIns> _6639_owner) {
	jule::Ptr<_1ab65ca34_scopeChecker> _679_base = _1ab652353_newScopeCheckerBase(_6625_s, _6639_owner);;
	(*(_679_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ab65b4b1_scopeLabel>>>(nullptr);
	(*_679_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ab65ba44_scopeGoto>>>(nullptr);
	return _679_base;;
}



inline jule::Ptr<_1ab65b4b1_scopeLabel> _1ab652a90_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1ab65ca34_scopeChecker> _7637_scope) {
	jule::Ptr<_1ab65b4b1_scopeLabel> _779_label = _1ab661b37_findLabelScope(_7637_scope, _7621_ident);;
	while ((_779_label == nullptr)) {
		{
			if ((((*_7637_scope.alloc)._field_parent == nullptr) || ((*_7637_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=(*_7637_scope.alloc)._field_parent;
			_779_label=_1ab661b37_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1b03ce054:;
	}
	_iter_end_1b03ce054:;;
	return _779_label;;
}



inline jule::Bool _1ab652e58_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1ab655576_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b03d0de1:;
			{
				jule::Ptr<_1abd4a83c_FnCallExprModel> _939_fcem = _9021_Model.unsafe_cast_ptr<_1abd4a83c_FnCallExprModel>();;
				if (((*(_939_fcem))._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b03ce75d:;
			{
				jule::Ptr<_1abe11936_Data> _989_d = _9021_Model.unsafe_cast_ptr<_1abe11936_Data>();;
				return _1ab652e58_modelIsGotoScope((*(_989_d))._field_Model, _9034_sc);;
			}
		}
		_match_end_1b03d0d8b:;
	};
	return false;;
}



inline jule::Bool _1ab6532cc_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1ab655576_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b03d2ad5:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1ab655576_Scope>(&__jule_any_type21) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b03d3465:;
			{
				return ((*((*(_10421_stmt)).cast_ptr<_1ab6564ab_InfIter>(&__jule_any_type35)))._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b03d34cb:;
			{
				jule::Ptr<_1ab6573ad_RangeIter> _1119_it = (*(_10421_stmt)).cast_ptr<_1ab6573ad_RangeIter>(&__jule_any_type39);;
				return (((*(_1119_it))._field_Scope == (*(_10434_sc))) || _1ab652e58_modelIsGotoScope((*((*_1119_it.alloc)._field_Expr))._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b03d3058:;
			{
				jule::Ptr<_1ab656962_WhileIter> _1149_it = (*(_10421_stmt)).cast_ptr<_1ab656962_WhileIter>(&__jule_any_type37);;
				return ((((*(_1149_it))._field_Scope == (*(_10434_sc))) || _1ab652e58_modelIsGotoScope((*_1149_it.alloc)._field_Expr, _10434_sc)) || _1ab652e58_modelIsGotoScope((*_1149_it.alloc)._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b03d30be:;
			{
				jule::Ptr<_1ab659789_Match> _1199_m = (*(_10421_stmt)).cast_ptr<_1ab659789_Match>(&__jule_any_type46);;
				{
					auto expr = &((*(_1199_m))._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03d7810:;
					if (it != expr_end) {
						jule::Ptr<_1ab65a2b2_Case> *_12016_c = it;
						{
							if (((*((*(_12016_c))))._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(*(_12016_c)).alloc)._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b03d8756:;
								if (it != expr_end) {
									jule::Ptr<_1abe11936_Data> *_12420_expr = it;
									{
										if (_1ab652e58_modelIsGotoScope((*((*(_12420_expr))))._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1b03d8756:;
									++it;
									goto _iter_begin_1b03d8756;
								}
								_iter_end_1b03d8756:;
							};
						}
						_iter_next_1b03d7810:;
						++it;
						goto _iter_begin_1b03d7810;
					}
					_iter_end_1b03d7810:;
				};
				return (((*_1199_m.alloc)._field_Default != nullptr) && ((*(*_1199_m.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b03d3135:;
			{
				jule::Ptr<_1ab6561ae_Conditional> _1329_c = (*(_10421_stmt)).cast_ptr<_1ab6561ae_Conditional>(&__jule_any_type34);;
				{
					auto expr = &((*(_1329_c))._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03da307:;
					if (it != expr_end) {
						jule::Ptr<_1ab655994_If> *_13316_elif = it;
						{
							if ((((*((*(_13316_elif))))._field_Scope == (*(_10434_sc))) || _1ab652e58_modelIsGotoScope((*(*(_13316_elif)).alloc)._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1b03da307:;
						++it;
						goto _iter_begin_1b03da307;
					}
					_iter_end_1b03da307:;
				};
				return (((*_1329_c.alloc)._field_Default != nullptr) && ((*(*_1329_c.alloc)._field_Default.alloc)._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b03d319b:;
			{
				jule::Ptr<_1abe11936_Data> _1409_d = (*(_10421_stmt)).cast_ptr<_1abe11936_Data>(&__jule_any_type23);;
				return _1ab652e58_modelIsGotoScope((*(_1409_d))._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1b03d1452:;
			{
				return false;;
			}
		}
		_match_end_1b03d13ec:;
	};
}



inline jule::I32 _1ab653651_countMatchType(jule::Ptr<_1ab659789_Match>* _14720_m, jule::Ptr<_1abe42d30_TypeKind>* _14732_t) {
	jule::I32 _1489_n = 0LL;;
	jule::Str _1495_kind = _1abe431e8_Str((*(_14732_t)).ptr());;
	_julec_label_1b03dd23e:;
	{
		auto expr = &((*((*(_14720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03dd66d:;
		if (it != expr_end) {
			jule::Ptr<_1ab65a2b2_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1b03dd66d;
				};
				{
					auto expr = &((*((*(_15112_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03de3a5:;
					if (it != expr_end) {
						jule::Ptr<_1abe11936_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1b03dd66d;
							};
							if ((_1495_kind == _1abe431e8_Str((*((*(_15616_expr))))._field_Model.cast_ptr<_1abe42d30_TypeKind>(&__jule_any_type84).ptr()))) {
								(_1489_n)++;
							};
						}
						_iter_next_1b03de3a5:;
						++it;
						goto _iter_begin_1b03de3a5;
					}
					_iter_end_1b03de3a5:;
				};
			}
			_iter_next_1b03dd66d:;
			++it;
			goto _iter_begin_1b03dd66d;
		}
		_iter_end_1b03dd66d:;
	};
	return _1489_n;;
}



inline jule::Slice<jule::Ptr<_1abe11936_Data>> _1ab65391a_getDatasFromTupleData(jule::Ptr<_1abe11936_Data>* _17131_d) {
	if ((_1abe472a7_Tup((*((*(_17131_d))))._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_17131_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1b03e3013:;
				{
					return (*((*((*(_17131_d))))._field_Model.unsafe_cast_ptr<_1abd4e027_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1b03e0e01:;
				{
					jule::Ptr<_1abe509ec_Tuple> _17717_t = _1abe472a7_Tup((*((*(_17131_d))))._field_Kind);;
					jule::Slice<jule::Ptr<_1abe11936_Data>> _17817_r = jule::Slice<jule::Ptr<_1abe11936_Data>>::alloc(0LL, (*(_17717_t))._field_Types.len());;
					{
						auto expr = &((*_17717_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b03e26d8:;
						if (it != expr_end) {
							jule::Ptr<_1abe42d30_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1abe11936_Data>> &__jule_push_dest = _17817_r; __jule_push_dest.push(jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1b03e26d8:;
							++it;
							goto _iter_begin_1b03e26d8;
						}
						_iter_end_1b03e26d8:;
					};
					return _17817_r;;
				}
			}
			_match_end_1b03e0d9b:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1abe11936_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1ab654256_checkMut(jule::Ptr<_1ab6979a3_Sema>* _20618_s, jule::Ptr<_1abe11936_Data>* _20629_left, jule::Ptr<_1abe11936_Data> _20646_right, jule::Ptr<_1abd0a38a_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_20629_left))))._field_Mutable))) {
			_case_begin_1b03e6995:;
			{
				_1ab69a5dd_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!((*_20646_right.alloc)._field_Mutable))) && _1abe446b1_Mutable((*_20646_right.alloc)._field_Kind.ptr()))) {
			_case_begin_1b03e6d91:;
			{
				if ((((*(_20660_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1abe46a04_Struct((*_20646_right.alloc)._field_Kind) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ab69a5dd_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*_20646_right.alloc)._field_Kind), &__jule_any_type4)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b03e692e:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b03e6885:;
	};
}



inline jule::Bool _1ab654740_checkAssign(jule::Ptr<_1ab6979a3_Sema>* _22521_s, jule::Ptr<_1abe11936_Data>* _22536_left, jule::Ptr<_1abe11936_Data> _22553_right, jule::Ptr<_1abd0a38a_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1abd59681_FnIns> _2265_f = _1abe4676d_Fn((*((*(_22536_left))))._field_Kind.ptr());;
	if ((((_2265_f != nullptr) && ((*_2265_f.alloc)._field_Decl != nullptr)) && (*(*_2265_f.alloc)._field_Decl.alloc)._field_Global)) {
		_1ab69a5dd_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1abe1233d_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1b03ec25e:;
			{
				_1ab69a5dd_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1ab69a951_pushSuggestion((*(_22521_s)).ptr(), jule::Str::lit("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_22536_left))))._field_Lvalue))) {
			_case_begin_1b03ec2c5:;
			{
				_1ab69a5dd_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str::lit("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ab654256_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1b03ec33b:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b03ec1a4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b03ec03e:;
	};
}



inline jule::Bool _1ab654a09_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b03ec3c4:;
			{
				return (!((*((*(_24731_n)).cast_ptr<_1abd2e2e3_AssignSt>(&__jule_any_type57)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b03ee4b4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b03ee371:;
			{
				return false;;
			}
		}
		_match_end_1b03ee31b:;
	};
}



inline jule::Bool _1ab654cc3_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type42 || _match_expr.type == &__jule_any_type43 || _match_expr.type == &__jule_any_type45) {
			_case_begin_1b03eeb79:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b04003c7:;
			{
				{
					auto &_match_expr{ (*((*(_25824_st)).cast_ptr<_1abe11936_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1b0400ecc:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b04017d5:;
						{
							return false;;
						}
					}
					_match_end_1b0401780:;
				};
			}
		}
		else {
			_case_begin_1b0400361:;
			{
				return false;;
			}
		}
		_match_end_1b040030b:;
	};
}



inline jule::Bool _1ab65508c_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b0401c58:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b0400d9a:;
			{
				return false;;
			}
		}
		_match_end_1b0400d45:;
	};
}



inline jule::U32 _1ab66ee42_removeEqFromOp(jule::U32 _220119_op) {
	{
		auto &_match_expr{ _220119_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b04029e5:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1b0402a5b:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1b040271a:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b0402781:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b0402b49:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1b0402bb0:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1b0402c26:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1b0402c9d:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1b0402d25:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1b0402e02:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1b0402275:;
			{
				return _220119_op;;
			}
		}
		_match_end_1b040263d:;
	};
}



inline void _1ab670173_makeComptimeRange(jule::Ptr<_1abe11936_Data>* _223027_d) {
	{
		
		if ((_1abe477c4_comptimeStructFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04032ed:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe477c4_comptimeStructFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else if ((_1abe47ce1_comptimeEnumFields((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0406862:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe47ce1_comptimeEnumFields((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else if ((_1abe48ab1_comptimeTypeInfos((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04068c8:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe48ab1_comptimeTypeInfos((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else if ((_1abe4830d_comptimeParams((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0403364:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe4830d_comptimeParams((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else if ((_1abe490cd_comptimeStatics((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b04033ca:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe490cd_comptimeStatics((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else if ((_1abe49b17_comptimeFiles((*((*(_223027_d))))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b0403441:;
			{
				(*((*(_223027_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abd71ac7_comptimeRange>(_1abd71ac7_comptimeRange{._field_kind=jule::Trait(_1abe49b17_comptimeFiles((*((*(_223027_d))))._field_Kind), (jule::Trait::Type*)&_1abd718a7_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1b0403287:;
			{
				(*((*(_223027_d))))._field_Decl=true;
			}
		}
		_match_end_1b0406532:;
	};
}



inline jule::Bool _1ab67066d_canComptimeMatch(jule::Ptr<_1abe11936_Data>* _225126_d) {
	if ((!(_1abe0a6bb_isGoodValueToInfer(_225126_d)))) {
		return false;;
	};
	return (_1abe1233d_IsConst((*(_225126_d)).ptr()) || (_1abe48d47_comptimeTypeInfo((*((*(_225126_d))))._field_Kind.ptr()) != nullptr));;
}



inline jule::Ptr<_1abda8d2e_Var> _1ab674ae5_findVarInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11512e2:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1abda8d2e_Var> _4813_v = _1abe0bea3_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4813_v != nullptr)) {
					return _4813_v;;
				};
			}
			_iter_next_1b11512e2:;
			++it;
			goto _iter_begin_1b11512e2;
		}
		_iter_end_1b11512e2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ab675068_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1152249:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1abe4203d_TypeAlias> _6013_ta = _1abe0c39e_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6013_ta != nullptr)) {
					return _6013_ta;;
				};
			}
			_iter_next_1b1152249:;
			++it;
			goto _iter_begin_1b1152249;
		}
		_iter_end_1b1152249:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd416ce_Struct> _1ab675497_findStructInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1153756:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1abd416ce_Struct> _7213_s = _1abe0c79a_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7213_s != nullptr)) {
					return _7213_s;;
				};
			}
			_iter_next_1b1153756:;
			++it;
			goto _iter_begin_1b1153756;
		}
		_iter_end_1b1153756:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd566a0_Fn> _1ab67594d_findFnInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1154c63:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1abd566a0_Fn> _8413_f = _1abe0cb96_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8413_f != nullptr)) {
					return _8413_f;;
				};
			}
			_iter_next_1b1154c63:;
			++it;
			goto _iter_begin_1b1154c63;
		}
		_iter_end_1b1154c63:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd69a59_Trait> _1ab675c8e_findTraitInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1156847:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1abd69a59_Trait> _9613_t = _1abe0ced7_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9613_t != nullptr)) {
					return _9613_t;;
				};
			}
			_iter_next_1b1156847:;
			++it;
			goto _iter_begin_1b1156847;
		}
		_iter_end_1b1156847:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6c265_Enum> _1ab676113_findEnumInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1156a89:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1abd6c265_Enum> _10813_e = _1abe0d328_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10813_e != nullptr)) {
					return _10813_e;;
				};
			}
			_iter_next_1b1156a89:;
			++it;
			goto _iter_begin_1b1156a89;
		}
		_iter_end_1b1156a89:;
	};
	return nullptr;;
}



inline jule::Ptr<_1abd6d970_TypeEnum> _1ab676487_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1157dba:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1abd6d970_TypeEnum> _12013_e = _1abe0d669_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12013_e != nullptr)) {
					return _12013_e;;
				};
			}
			_iter_next_1b1157dba:;
			++it;
			goto _iter_begin_1b1157dba;
		}
		_iter_end_1b1157dba:;
	};
	return nullptr;;
}



inline jule::Any _1ab6769c6_defByIdentPackage(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1159383:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _13017_file = *it;
			{
				jule::Any _13113_def = _1abe0e637_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13113_def != nullptr)) {
					return _13113_def;;
				};
			}
			_iter_next_1b1159383:;
			++it;
			goto _iter_begin_1b1159383;
		}
		_iter_end_1b1159383:;
	};
	return nullptr;;
}



inline jule::Bool _1ab67ca10_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _20b0d9dce_HasPrefix((*(_35518_f)), _20b0e500a_Join(jule::Slice<jule::Str>::make({_20b1a024c_PathStdlib,_35526_p})));;
}



inline jule::Bool _1ab695143_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b116aebb:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b116b032:;
			{
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _1813_model = (*(_1328_m)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_1813_model))._field_Field != nullptr) && _1ab695143_isValidModelForRef(&((*((*_1813_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b116b098:;
			{
				jule::Ptr<_1abd48c36_UnaryExprModel> _2113_unary = (*(_1328_m)).cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110);;
				if (((*((*(_2113_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1abe4599d_Ptr((*((*_2113_unary.alloc)._field_Expr))._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1abe45717_Sptr((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Kind) == nullptr)) {
					return false;;
				};
				return _1ab695143_isValidModelForRef(&((*(*_2113_unary.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b116b10e:;
			{
				jule::Ptr<_1abd4b1bc_IndexingExprModel> _3513_indexing = (*(_1328_m)).cast_ptr<_1abd4b1bc_IndexingExprModel>(&__jule_any_type44);;
				return _1ab695143_isValidModelForRef(&((*((*(_3513_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b116a6e6:;
			{
				return false;;
			}
		}
		_match_end_1b116a691:;
	};
}



inline _1eb22e132_Log _1ab6955e9_compilerErr(jule::Ptr<_1abd0a38a_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1eb22e132_Log _439_log = _1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4217_token))))._field_Row, ._field_Column=(*((*(_4217_token))))._field_Column, ._field_Path=(*((*((*(_4217_token))))._field_File))._field_Path, ._field_Text=_1eb22e594_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_439_log._field_Line=_1abd11b33_GetRow((*((*(_4217_token))))._field_File, (*((*(_4217_token))))._field_Row);
	};
	return _439_log;;
}



inline jule::Bool _1ab69596d_impIsLookupable(jule::Ptr<_1ab67760e_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*((*(_5621_i))))._field_Binded) {
		return false;;
	};
	if ((!((*((*(_5621_i))))._field_ImportAll))) {
		if (((*((*(_5621_i))))._field_Selected.len() > 0LL)) {
			return _1ab679e91_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*((*(_5621_i))))._field_ImportAll;;
}



inline void _1ab695c9d_appendRetVars(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _6823_dest, jule::Ptr<_1abd59681_FnIns>* _6842_f) {
	if ((_1abd56b23_IsVoid((*((*(_6842_f))))._field_Decl.ptr()) || ((*((*(_6842_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1abe42d30_TypeKind>> _739_types = _1abd5a880_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6842_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1176c52:;
		if (it != expr_end) {
			jule::I32 _7410_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _7417_ident = *it;
			{
				if ((_1abd0cc72_IsIgnoreIdent((*(_7417_ident))._field_Kind) || _1abd0d03b_IsAnonIdent((*_7417_ident.alloc)._field_Kind))) {
					goto _iter_next_1b1176c52;
				};
				{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Scope=(*((*(_6842_f))))._field_Scope, ._field_Token=_7417_ident, ._field_Ident=(*_7417_ident.alloc)._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=_739_types[_7410_i]}), ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1b1176c52:;
			++it;
			_7410_i++;
			goto _iter_begin_1b1176c52;
		}
		_iter_end_1b1176c52:;
	};
	if ((((*(*(*((*(_6842_f))))._field_Decl.alloc)._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*((*(_6823_dest))[((*(_6823_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ab696089_appendParamVars(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _9825_dest, jule::Ptr<_1abd59681_FnIns>* _9844_f) {
	if (((*((*(_9844_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9844_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b117b5d6:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _10317_p = *it;
			{
				if ((_1abd0cc72_IsIgnoreIdent((*((*(_10317_p))._field_Decl))._field_Ident) || _1abd0d03b_IsAnonIdent((*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1b117b5d6;
				};
				jule::Ptr<_1abda8d2e_Var> _10813_v = jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Scope=(*((*(_9844_f))))._field_Scope, ._field_Token=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Token, ._field_Ident=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Ident, ._field_Mutable=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Mutable, ._field_Used=true, ._field_Reference=(*(*_10317_p.alloc)._field_Decl.alloc)._field_Reference, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(), ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()}), });;
				{
					
					if (_1abd552e7_IsSelf((*_10317_p.alloc)._field_Decl)) {
						_case_begin_1b1180442:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9844_f))))._field_Owner, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)});
							(*_10813_v.alloc)._field_Reference=(!(_1abd5557d_IsRef((*_10317_p.alloc)._field_Decl)));
							if (_1abd5557d_IsRef((*_10317_p.alloc)._field_Decl)) {
								((*(_10813_v))._field_Ident).mut_slice(1LL);;
								(*((*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind))._field_Kind=jule::Trait(jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_BindIdent=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_BindIdent, ._field_Kind=(*(*(*_10813_v.alloc)._field_Kind.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21);
							};
						}
					}
					else if ((*(*_10317_p.alloc)._field_Decl.alloc)._field_Variadic) {
						_case_begin_1b1180178:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1abe4ee08_Slc>(_1abe4ee08_Slc{._field_Elem=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_BindIdent=(*((*_10317_p.alloc)._field_Kind))._field_BindIdent, ._field_Kind=(*(*_10317_p.alloc)._field_Kind.alloc)._field_Kind})}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data22)});
						}
					}
					else {
						_case_begin_1b1180112:;
						{
							(*((*(_10813_v))._field_Kind))._field_Kind=(*_10317_p.alloc)._field_Kind;
						}
					}
					_match_end_1b117eee1:;
				};
				{ jule::Slice<jule::Ptr<_1abda8d2e_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10813_v); };
			}
			_iter_next_1b117b5d6:;
			++it;
			goto _iter_begin_1b117b5d6;
		}
		_iter_end_1b117b5d6:;
	};
}



inline void _1ab696375_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _15834_dest, jule::Ptr<_1abd59681_FnIns>* _15859_f) {
	jule::I32 _1599_size = (*((*(_15859_f))))._field_Generics.len();;
	if (((*((*((*(_15859_f))))._field_Decl))._field_Owner != nullptr)) {
		_1599_size+=(*(*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1599_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15859_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11888ac:;
		if (it != expr_end) {
			jule::I32 _16810_i = it - expr->begin();
			jule::Ptr<_1abe41449_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1abd2ca50_GenericDecl> _16913_decl = (*(*((*(_15859_f))))._field_Decl.alloc)._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_16913_decl.alloc)._field_Token, ._field_Ident=(*(_16913_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_16817_g))._field_Kind}), })); };
			}
			_iter_next_1b11888ac:;
			++it;
			_16810_i++;
			goto _iter_begin_1b11888ac;
		}
		_iter_end_1b11888ac:;
	};
	if (((*(*((*(_15859_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1abd4445c_StructIns> _18113_owner = (*((*(_15859_f))))._field_Owner;;
		{
			auto expr = &((*_18113_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b1189ddb:;
			if (it != expr_end) {
				jule::I32 _18214_i = it - expr->begin();
				jule::Ptr<_1abe41449_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1abd2ca50_GenericDecl> _18317_decl = (*((*(_18113_owner))._field_Decl))._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Scope=(*(*((*(_15859_f))))._field_Decl.alloc)._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_18317_decl.alloc)._field_Token, ._field_Ident=(*(_18317_decl))._field_Ident, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_18221_g))._field_Kind}), })); };
				}
				_iter_next_1b1189ddb:;
				++it;
				_18214_i++;
				goto _iter_begin_1b1189ddb;
			}
			_iter_end_1b1189ddb:;
		};
	};
}



inline jule::Ptr<_1abe0b5bd_SymbolTable> _1ab6966e9_findFile(jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>* _19618_files, jule::Ptr<_1abd10b21_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11890a5:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _19717_fl = *it;
			{
				if (((*(_19717_fl))._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1b11890a5:;
			++it;
			goto _iter_begin_1b11890a5;
		}
		_iter_end_1b11890a5:;
	};
	return nullptr;;
}



inline void _1ab696ba0_pushSuggestion(_1eb22e132_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	(*(_20530_log))._field_Suggestion=_1eb22e594_Logf(_20541_fmt, _20554_args);
}



inline void _1abda7514_pushImplemented(jule::Ptr<_1abd69a59_Trait> _288224_t, jule::Ptr<_1abd416ce_Struct>* _288240_d) {
	_julec_label_1b1190d04:;
	{
		
		if (((*(_288224_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1b1191563:;
			{
				{
					auto expr = &((*_288224_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b11925ca:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _288616_s = *it;
						{
							if ((_288616_s == (*(_288240_d)))) {
								goto _match_end_1b1191134;
							};
						}
						_iter_next_1b11925ca:;
						++it;
						goto _iter_begin_1b11925ca;
					}
					_iter_end_1b11925ca:;
				};
				goto _case_begin_1b11911cd;
			}
		}
		else {
			_case_begin_1b11911cd:;
			{
				(*(_288224_t))._field_Implemented=jule::append((*_288224_t.alloc)._field_Implemented,jule::Slice<jule::Ptr<_1abd416ce_Struct>>::make({(*(_288240_d))}));
			}
		}
		_match_end_1b1191134:;
	};
	{
		auto expr = &((*(_288224_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b119294e:;
		if (it != expr_end) {
			jule::Ptr<_1abe4a002_TypeSymbol> _289517_i = *it;
			{
				_1abda7514_pushImplemented(_1abe46c8a_Trait((*(_289517_i))._field_Kind.ptr()), _288240_d);
			}
			_iter_next_1b119294e:;
			++it;
			goto _iter_begin_1b119294e;
		}
		_iter_end_1b119294e:;
	};
}



inline void _1abda7800_pushImplements(jule::Ptr<_1abd416ce_Struct>* _290024_s, jule::Ptr<_1abd69a59_Trait> _290040_t) {
	_julec_label_1b1193d5c:;
	{
		
		if (((*((*(_290024_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1b11944cd:;
			{
				{
					auto expr = &((*((*(_290024_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1195545:;
					if (it != expr_end) {
						jule::Ptr<_1abd69a59_Trait> _290416_b = *it;
						{
							if ((_290416_b == _290040_t)) {
								goto _match_end_1b119409e;
							};
						}
						_iter_next_1b1195545:;
						++it;
						goto _iter_begin_1b1195545;
					}
					_iter_end_1b1195545:;
				};
				goto _case_begin_1b1194148;
			}
		}
		else {
			_case_begin_1b1194148:;
			{
				{ jule::Slice<jule::Ptr<_1abd69a59_Trait>> &__jule_push_dest = (*((*(_290024_s))))._field_Implements; __jule_push_dest.push(_290040_t); };
			}
		}
		_match_end_1b119409e:;
	};
	{
		auto expr = &((*(_290040_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b11958b9:;
		if (it != expr_end) {
			jule::Ptr<_1abe4a002_TypeSymbol> _291317_i = *it;
			{
				_1abda7800_pushImplements(_290024_s, _1abe46c8a_Trait((*(_291317_i))._field_Kind.ptr()));
			}
			_iter_next_1b11958b9:;
			++it;
			goto _iter_begin_1b11958b9;
		}
		_iter_end_1b11958b9:;
	};
}



inline jule::Bool _1abde719c_traitHasReferenceReceiver(jule::Ptr<_1abd69a59_Trait>* _2831_t) {
	{
		auto expr = &((*((*(_2831_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13155a5:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> *_2912_f = it;
			{
				if ((*((*(_2912_f))))._field_Statically) {
					goto _iter_next_1b13155a5;
				};
				jule::Ptr<_1abd54bcb_Param> _359_p = (*(*(_2912_f)).alloc)._field_Params[0LL];;
				if ((_1abd5557d_IsRef(_359_p.ptr()) && _1abd552e7_IsSelf(_359_p))) {
					return true;;
				};
			}
			_iter_next_1b13155a5:;
			++it;
			goto _iter_begin_1b13155a5;
		}
		_iter_end_1b13155a5:;
	};
	return false;;
}



inline jule::Bool _1abde7554_floatAssignable(jule::Str* _4321_kind, jule::Ptr<_1abe11936_Data>* _4333_d) {
	jule::Str _445_value = _1b9a82797_FmtFloat(_1b9ab0187_AsF64((*((*(_4333_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1b9aa2cd4_CheckBitFloat(_445_value, _1b9aa183d_BitsizeOf((*(_4321_kind))));;
}



inline jule::Bool _1abde78c8_sigAssignable(jule::Str _4818_kind, jule::Ptr<_1abe11936_Data>* _4830_d) {
	jule::F64 _495_min = _1b9aa7ec6_Min(_4818_kind);;
	jule::F64 _505_max = _1b9aa825c_Max(_4818_kind);;
	{
		
		if (_1b9ab1ed0_IsF64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b13190e2:;
			{
				jule::F64 _539_x = _1b9aae8d4_ReadF64((*((*(_4830_d))))._field_Constant);;
				jule::F64 _549_i;
				jule::F64 _5412_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b9a584e8_Modf(_539_x);
					_549_i = __jule_assign_result.__jule_result_arg0;
					_5412_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5412_frac != 0LL)) {
					return false;;
				};
				return ((_549_i >= _495_min) && (_549_i <= _505_max));;
			}
		}
		else if (_1b9ab172c_IsU64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b1319158:;
			{
				jule::F64 _609_x = _1b9ab0187_AsF64((*((*(_4830_d))))._field_Constant);;
				if ((_609_x <= _505_max)) {
					return true;;
				};
			}
		}
		else if (_1b9ab1496_IsI64((*((*(_4830_d))))._field_Constant.ptr())) {
			_case_begin_1b13191d0:;
			{
				jule::F64 _659_x = _1b9ab0187_AsF64((*((*(_4830_d))))._field_Constant);;
				return ((_495_min <= _659_x) && (_659_x <= _505_max));;
			}
		}
		_match_end_1b1318ed2:;
	};
	return false;;
}



inline jule::Bool _1abde7c91_unsigAssignable(jule::Str _7120_kind, jule::Ptr<_1abe11936_Data>* _7132_d) {
	jule::F64 _725_max = _1b9aa825c_Max(_7120_kind);;
	if (((*((*(_7132_d))))._field_IsRune && _7120_kind.equal("u8", 2))) {
		return _1abdca8de_IsAscii(static_cast<jule::I32>(_1b9aadd9a_ReadI64((*((*(_7132_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1b9ab1ed0_IsF64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b131ec85:;
			{
				jule::F64 _799_x = _1b9aae8d4_ReadF64((*((*(_7132_d))))._field_Constant);;
				if ((_799_x < 0LL)) {
					return false;;
				};
				jule::F64 _839_i;
				jule::F64 _8312_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1b9a584e8_Modf(_799_x);
					_839_i = __jule_assign_result.__jule_result_arg0;
					_8312_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8312_frac != 0LL)) {
					return false;;
				};
				return (_839_i <= _725_max);;
			}
		}
		else if (_1b9ab172c_IsU64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b131eceb:;
			{
				jule::F64 _899_x = _1b9ab0187_AsF64((*((*(_7132_d))))._field_Constant);;
				if ((_899_x <= _725_max)) {
					return true;;
				};
			}
		}
		else if (_1b9ab1496_IsI64((*((*(_7132_d))))._field_Constant)) {
			_case_begin_1b131ed62:;
			{
				jule::F64 _949_x = _1b9ab0187_AsF64((*((*(_7132_d))))._field_Constant);;
				return ((0LL <= _949_x) && (_949_x <= _725_max));;
			}
		}
		_match_end_1b131e3e4:;
	};
	return false;;
}



inline jule::Bool _1abde8115_intAssignable(jule::Str _10018_kind, jule::Ptr<_1abe11936_Data>* _10030_d) {
	{
		
		if (_1b9aab282_IsSigInt(_10018_kind)) {
			_case_begin_1b1324927:;
			{
				return _1abde78c8_sigAssignable(_10018_kind, _10030_d);;
			}
		}
		else if (_1b9aab590_IsUnsigInt(_10018_kind)) {
			_case_begin_1b13249b0:;
			{
				return _1abde7c91_unsigAssignable(_10018_kind, _10030_d);;
			}
		}
		else {
			_case_begin_1b132443d:;
			{
				return false;;
			}
		}
		_match_end_1b1324372:;
	};
}



inline void _1abe0452d_checkMutRiskOfStructLit(jule::Ptr<_1ab6979a3_Sema>* _92033_s, jule::Ptr<_1abd4960a_StructLitExprModel>* _92044_m) {
	{
		auto expr = &((*((*(_92044_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1325a38:;
		if (it != expr_end) {
			jule::Ptr<_1abd49264_StructArgExprModel> *_92112_arg = it;
			{
				if ((*((*((*((*(_92112_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1b1325a38;
				};
				if (((!((*((*(*(_92112_arg)).alloc)._field_Expr))._field_Mutable)) && _1abe446b1_Mutable((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind.ptr()))) {
					_1ab69a5dd_pushErr((*(_92033_s)).ptr(), (*(*(_92112_arg)).alloc)._field_Token, jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(*(*(_92112_arg)).alloc)._field_Expr.alloc)._field_Kind), &__jule_any_type4)}));
				};
			}
			_iter_next_1b1325a38:;
			++it;
			goto _iter_begin_1b1325a38;
		}
		_iter_end_1b1325a38:;
	};
}



inline jule::Ptr<_1abe42d30_TypeKind> _1abe0a369_lenKind(void) {
	return _1ac02b49b_primInt;;
}



inline jule::Bool _1abe0a6bb_isGoodValueToInfer(jule::Ptr<_1abe11936_Data>* _142124_d) {
	return (!(_1abe11d21_IsNil((*(_142124_d)).ptr())));;
}



inline jule::Ptr<_1abd1ec62_Directive> _1abe3a2cd_findDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _425923_directives, jule::Str _425954_d) {
	{
		auto expr = _425923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b15271ce:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _426017_dr = *it;
			{
				if (((*((*(_426017_dr))._field_Tag))._field_Kind == _425954_d)) {
					return _426017_dr;;
				};
			}
			_iter_next_1b15271ce:;
			++it;
			goto _iter_begin_1b15271ce;
		}
		_iter_end_1b15271ce:;
	};
	return nullptr;;
}



inline jule::Any _1abe3a696_findBuiltinsImport(jule::Str* _426824_ident, jule::Ptr<_1ab67760e_ImportInfo> _426836_imp) {
	return _1ac02eaa9_findPackageBuiltinDef(&((*(_426836_imp))._field_LinkPath), _426824_ident);;
}



inline void _1abe3a8c7_fitBitsize(jule::Ptr<_1abe11936_Data>* _427720_d) {
	jule::Ptr<_1abe4a909_Prim> _42789_prim = _1abe45481_Prim((*((*(_427720_d))))._field_Kind.ptr());;
	jule::I32 _42795_z = _1b9aa183d_BitsizeOf(_1abe4ac4a_Str(_42789_prim.ptr()));;
	{
		
		if (_1b9ab1496_IsI64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1b15299b7:;
			{
				jule::I32 _42829_k = _1b9aa3367_BitsizeOfInt(_1b9aadd9a_ReadI64((*((*(_427720_d))))._field_Constant));;
				if (((_42829_k > _42795_z) || _1b9aab590_IsUnsigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9aa1b7e_IntFromBits(_42829_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1ac02d800_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b9ab172c_IsU64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1b1529a2d:;
			{
				jule::I32 _42889_k = _1b9aa3631_BitsizeOfUint(_1b9aae131_ReadU64((*((*(_427720_d))))._field_Constant));;
				if (((_42889_k > _42795_z) || _1b9aab282_IsSigInt((*_42789_prim.alloc)._field_Kind))) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9aa1e15_UintFromBits(_42889_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1ac02d800_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		else if (_1b9ab1ed0_IsF64((*((*(_427720_d))))._field_Constant.ptr())) {
			_case_begin_1b1529aa5:;
			{
				if ((_42795_z == 64LLU)) {
					return;;
				};
				jule::I32 _42989_k = _1b9aa309d_BitsizeOfFloat(_1b9aae8d4_ReadF64((*((*(_427720_d))))._field_Constant));;
				if ((_42989_k > _42795_z)) {
					(*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind=_1b9aa21ce_FloatFromBits(_42989_k);
					(*((*(_427720_d))))._field_Kind=(*((*(_1ac02d800_findBuiltinTypeAlias((*(*((*(_427720_d))))._field_Constant.alloc)._field_Kind)))._field_Kind))._field_Kind;
				};
			}
		}
		_match_end_1b15298a7:;
	};
}



inline void _1abe3ac07_makeStructLitAlloc(jule::Ptr<_1abe11936_Data>* _430628_d, jule::Ptr<_1abd4960a_StructLitExprModel>* _430643_lit) {
	(*((*(_430628_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*((*(_430643_lit))))._field_Strct, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)});
	(*((*(_430628_d))))._field_Model=jule::Any(jule::new_ptr<_1abd49907_AllocStructLitExprModel>(_1abd49907_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type112);
}



inline jule::Ptr<_1abda8d2e_Var> _1abe3b07b_buildErrorVar(jule::Ptr<_1ab655576_Scope>* _431723_s, jule::Ptr<_1abd288a3_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*((*(_431739_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("any", 3))))._field_Kind, ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>()}), });;
}



inline jule::Any _1abe3b400_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1ab6979a3_Sema> _433238_s) {
	{
		auto expr = &((*((*(_433238_s))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1536166:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _433317_imp = *it;
			{
				if (((*(_433317_imp))._field_ImportAll || _1ab679e91_existIdent(_433317_imp, (*(_433222_ident))))) {
					jule::Any _433517_def = _1abe3a696_findBuiltinsImport(_433222_ident, _433317_imp);;
					if ((_433517_def != nullptr)) {
						return _433517_def;;
					};
				};
			}
			_iter_next_1b1536166:;
			++it;
			goto _iter_begin_1b1536166;
		}
		_iter_end_1b1536166:;
	};
	jule::Str _43439_ppath = _1abd112c5_Dir((*(*_433238_s.alloc)._field_file.alloc)._field_File.ptr());;
	if (_20b0d9dce_HasPrefix(_43439_ppath, _20b1a024c_PathStdlib)) {
		(_43439_ppath).mut_slice(_20b1a024c_PathStdlib.len());;
		_43439_ppath=(jule::Str::lit("std", 3) + _20b0e0775_Replace(_43439_ppath, jule::Str::lit("\\", 1), jule::Str::lit("::", 2), -1LL));
		return _1ac02eaa9_findPackageBuiltinDef(&(_43439_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1abe3b6b9_isOkForShifting(jule::Ptr<_1abe11936_Data>* _435725_d) {
	if (_1abe1233d_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_1b9ab1496_IsI64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1b1539576:;
				{
					return (_1b9aadd9a_ReadI64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1b9ab172c_IsU64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1b1539620:;
				{
					return true;;
				}
			}
			else if (_1b9ab1ed0_IsF64((*((*(_435725_d))))._field_Constant.ptr())) {
				_case_begin_1b1539697:;
				{
					return (_1b9aae8d4_ReadF64((*((*(_435725_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1b15394dd:;
				{
					return false;;
				}
			}
			_match_end_1b1539422:;
		};
	};
	jule::Ptr<_1abe4a909_Prim> _43705_prim = _1abe45481_Prim((*((*(_435725_d))))._field_Kind.ptr());;
	return ((_43705_prim != nullptr) && _1b9aab859_IsInt(_1abe4ac4a_Str(_43705_prim)));;
}



inline jule::Bool _1abe3ba93_isInstancedStruct(jule::Ptr<_1abd4445c_StructIns> _437422_s) {
	return ((*((*(_437422_s))._field_Decl))._field_Generics.len() == (*_437422_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1abe3bd90_isPtrArithmeticCompatible(jule::Ptr<_1abe11936_Data>* _437835_l, jule::Ptr<_1abe11936_Data>* _437850_r) {
	jule::Ptr<_1abe52bec_Ptr> _43795_ptr = _1abe4599d_Ptr((*((*(_437850_r))))._field_Kind.ptr());;
	if ((_43795_ptr != nullptr)) {
		return _1abe43539_Equal((*(_1abe4599d_Ptr((*((*(_437835_l))))._field_Kind)))._field_Elem, (*_43795_ptr.alloc)._field_Elem);;
	};
	if (_1abe1233d_IsConst((*(_437850_r)).ptr())) {
		return _1abde8115_intAssignable(jule::Str::lit("int", 3), _437850_r);;
	};
	_1abde85ee_typeCompatibilityChecker _43869_tcc = _1abde85ee_typeCompatibilityChecker{._field_dest=_1ac02b49b_primInt, ._field_src=(*((*(_437850_r))))._field_Kind, };;
	return _1abde9cb5_check(&_43869_tcc);;
}



inline void _1abe3c236_applyCastKindModel(jule::Ptr<_1abe11936_Data>* _439328_d, jule::Ptr<_1abe42d30_TypeKind>* _439343_t, jule::Ptr<_1abd0a38a_Token>* _439362_token) {
	(*((*(_439328_d))))._field_Model=jule::Any(jule::new_ptr<_1abd49e8a_CastingExprModel>(_1abd49e8a_CastingExprModel{._field_Token=(*(_439362_token)), ._field_Expr=jule::new_ptr<_1abe11936_Data>((*((*(_439328_d))))), ._field_Kind=(*(_439343_t)), ._field_ExprKind=(*((*(_439328_d))))._field_Kind}), &__jule_any_type93);
}



inline void _1abe3c5cc_applyCastKind(jule::Ptr<_1abe11936_Data>* _440223_d, jule::Ptr<_1abe42d30_TypeKind>* _440238_t, jule::Ptr<_1abd0a38a_Token>* _440257_token) {
	_1abe3c236_applyCastKindModel(_440223_d, _440238_t, _440257_token);
	(*((*(_440223_d))))._field_Kind=(*(_440238_t));
}



inline jule::Ptr<_1abe11936_Data> _1abe3c7db_buildVoidData(void) {
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a214_primVoid, });;
}



inline jule::Str _1abe3cb60_checkDataForIntegerIndexing(jule::Ptr<_1abe11936_Data>* _441337_d, jule::Ptr<_1abd0a38a_Token>* _441352_token) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441337_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1abe45481_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b1543d66:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1b9aab859_IsInt(_1abe4ac4a_Str(_1abe45481_Prim((*((*(_441337_d))))._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b1543dcc:;
			{
				__jule_func_result = jule::Str::lit("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1abe1233d_IsConst((*(_441337_d)).ptr())) {
			_case_begin_1b1543e43:;
			{
				if ((_1b9ab0187_AsF64((*((*(_441337_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str::lit("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1abe45481_Prim((*((*(_441337_d))))._field_Kind.ptr()) == nullptr) || _1abe1233d_IsConst((*(_441337_d)).ptr()) || (_1b9aa1574_RealKindOf(_1abe4ac4a_Str(_1abe45481_Prim((*((*(_441337_d))))._field_Kind).ptr())) != _1b9aa1574_RealKindOf(jule::Str::lit("int", 3)))) {
			_case_begin_1b1543ea9:;
			{
				_1abe3c5cc_applyCastKind(_441337_d, &(_1ac02b49b_primInt), _441352_token);
			}
		}
		_match_end_1b1543cab:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1abe3d006_applyCastModelByEnum(jule::Ptr<_1abe11936_Data>* _443830_d, jule::Ptr<_1abd6c265_Enum> _443844_e, jule::Ptr<_1abd0a38a_Token>* _443859_token) {
	if ((_443844_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _44425_p = _1abe45481_Prim((*((*(_443844_e))._field_Kind))._field_Kind.ptr());;
	if (_1abe4dd91_IsStr(_44425_p.ptr())) {
		return;;
	};
	_1abe3c236_applyCastKindModel(_443830_d, &((*(*(_443844_e))._field_Kind.alloc)._field_Kind), _443859_token);
}



inline void _1abe3d2e2_castConstByType(jule::Str* _444921_t, jule::Ptr<_1abe11936_Data>* _444934_d) {
	{
		
		if (_1b9aab282_IsSigInt((*(_444921_t)))) {
			_case_begin_1b1549cb2:;
			{
				{
					auto _match_expr{ _1b9aa183d_BitsizeOf(_1b9aa1574_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b154a873:;
						{
							_1b9ab0440_SetI64((*((*(_444934_d))))._field_Constant.ptr(), _1b9aaeb6a_AsI64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b154a8ea:;
						{
							_1b9ab0440_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1b9aaeb6a_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b154a961:;
						{
							_1b9ab0440_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1b9aaeb6a_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b154a9c7:;
						{
							_1b9ab0440_SetI64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1b9aaeb6a_AsI64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1b154a554:;
				};
			}
		}
		else if (_1b9aab590_IsUnsigInt((*(_444921_t)))) {
			_case_begin_1b1549d5b:;
			{
				{
					auto _match_expr{ _1b9aa183d_BitsizeOf(_1b9aa1574_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b154e9a9:;
						{
							_1b9ab06e8_SetU64((*((*(_444934_d))))._field_Constant.ptr(), _1b9aaee01_AsU64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b154ea31:;
						{
							_1b9ab06e8_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1b9aaee01_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b154ea97:;
						{
							_1b9ab06e8_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1b9aaee01_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b154eb0d:;
						{
							_1b9ab06e8_SetU64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1b9aaee01_AsU64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1b154d975:;
				};
			}
		}
		else if (_1b9aabb9a_IsFloat((*(_444921_t)))) {
			_case_begin_1b1549dc2:;
			{
				{
					auto _match_expr{ _1b9aa183d_BitsizeOf(_1b9aa1574_RealKindOf((*(_444921_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b154ee4e:;
						{
							_1b9ab1012_SetF64((*((*(_444934_d))))._field_Constant.ptr(), _1b9ab0187_AsF64((*((*(_444934_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b1553b12:;
						{
							_1b9ab1012_SetF64((*((*(_444934_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1b9ab0187_AsF64((*((*(_444934_d))))._field_Constant))));
						}
					}
					_match_end_1b1552aab:;
				};
			}
		}
		_match_end_1b1549b5d:;
	};
}



inline void _1abe3d80e_updateModelToGenericIns(jule::Any* _448333_m, jule::Ptr<_1abd59681_FnIns>* _448352_f) {
	{
		auto &_match_expr{ (*(_448333_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b154a1be:;
			{
				(*(_448333_m))=jule::Any((*(_448352_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b15540c9:;
			{
				(*((*(_448333_m)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98)))._field_Method=(*(_448352_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b154a257:;
			{
				(*((*(_448333_m)).cast_ptr<_1abd4d851_StructStaticIdentExprModel>(&__jule_any_type96)))._field_Method=(*(_448352_f));
			}
		}
		_match_end_1b1553eec:;
	};
}



inline jule::Bool _1abe3da73_pushSubIdentFromExpr(jule::Any _449429_expr, jule::Ptr<_1abd21219_SubIdentTypeDecl>* _449450_t) {
	{
		auto &_match_expr{ _449429_expr };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b1556d9b:;
			{
				jule::Ptr<_1abd26494_IdentExpr> _449713_e = _449429_expr.unsafe_cast_ptr<_1abd26494_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*(_449713_e))._field_Token, ._field_Ident=(*_449713_e.alloc)._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b155796d:;
			{
				jule::Ptr<_1abd27c8c_SubIdentExpr> _450313_e = _449429_expr.unsafe_cast_ptr<_1abd27c8c_SubIdentExpr>();;
				if ((!(_1abe3da73_pushSubIdentFromExpr((*((*(_450313_e))._field_Expr))._field_Kind, _449450_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1abd20e50_IdentTypeDecl>> &__jule_push_dest = (*((*(_449450_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1abd20e50_IdentTypeDecl>(_1abd20e50_IdentTypeDecl{._field_Token=(*_450313_e.alloc)._field_Ident, ._field_Ident=(*((*_450313_e.alloc)._field_Ident))._field_Kind, })); };
			}
		}
		else {
			_case_begin_1b155751c:;
			{
				return false;;
			}
		}
		_match_end_1b15574b7:;
	};
	return true;;
}



inline jule::Str _1abe3dd3c_constoa(jule::Ptr<_1b9aac4c5_Const>* _451713_c) {
	{
		
		if (_1b9ab1496_IsI64((*(_451713_c)).ptr())) {
			_case_begin_1b155a872:;
			{
				return _1b9a9e143_FmtInt(_1b9aadd9a_ReadI64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else if (_1b9ab172c_IsU64((*(_451713_c)).ptr())) {
			_case_begin_1b155a740:;
			{
				return _1b9a9dc7a_FmtUint(_1b9aae131_ReadU64((*(_451713_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1b1557b5a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b155a3dd:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1abe3e26b_evalEnumStatic(jule::Ptr<_1abd6c265_Enum>* _452824_enm, jule::Ptr<_1abd6b6e8_EnumItem>* _452841_item, jule::Ptr<_1abd0a38a_Token>* _452863_token) {
	jule::Ptr<_1abe11936_Data> _45299_d = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*(_452824_enm)), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data3)}), });;
	if (((*(_452841_item)) != nullptr)) {
		(*(_45299_d))._field_Constant=jule::new_ptr<_1b9aac4c5_Const>((*(*((*((*((*(_452841_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_45299_d.alloc)._field_Model=jule::Any((*_45299_d.alloc)._field_Constant, &__jule_any_type19);
		_1abe3d006_applyCastModelByEnum(&(_45299_d), (*(_452824_enm)), _452863_token);
	};
	return _45299_d;;
}



inline jule::Ptr<_1abd4960a_StructLitExprModel> _1abe3e535_isLitBased(jule::Any* _454520_m) {
	{
		auto &_match_expr{ (*(_454520_m)) };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b15604c0:;
			{
				return (*(_454520_m)).cast_ptr<_1abd4960a_StructLitExprModel>(&__jule_any_type95);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b1560536:;
			{
				return (*((*(_454520_m)).cast_ptr<_1abd49907_AllocStructLitExprModel>(&__jule_any_type112)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b156059c:;
			{
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _455213_ssi = (*(_454520_m)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return _1abe3e535_isLitBased(&((*((*(_455213_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b1560613:;
			{
				jule::Ptr<_1abd49e8a_CastingExprModel> _455513_c = (*(_454520_m)).cast_ptr<_1abd49e8a_CastingExprModel>(&__jule_any_type93);;
				return _1abe3e535_isLitBased(&((*((*(_455513_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1b1560080:;
			{
				return nullptr;;
			}
		}
		_match_end_1b156002a:;
	};
}



inline void _1abe3e821_makeImplicitDeref(jule::Ptr<_1abe11936_Data>* _456227_d, jule::Ptr<_1abd0a38a_Token> _456241_baseToken) {
	jule::Ptr<_1abd48c36_UnaryExprModel> _45639_unary = jule::new_ptr<_1abd48c36_UnaryExprModel>(_1abd48c36_UnaryExprModel{._field_Expr=jule::new_ptr<_1abe11936_Data>((*((*(_456227_d))))), ._field_Op=jule::new_ptr<_1abd0a38a_Token>((*(_456241_baseToken)))});;
	(*((*(_45639_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*_45639_unary.alloc)._field_Op.alloc)._field_Kind=jule::Str::lit("*", 1);
	(*((*(_456227_d))))._field_Model=jule::Any(_45639_unary, &__jule_any_type110);
}



inline void _1ae76c49d_updateRefer(jule::Ptr<_1abd5c860_ReferenceStack> _457323_ref, jule::Ptr<_1abd59681_FnIns>* _457346_old, jule::Ptr<_1abd59681_FnIns>* _457359_new) {
	{
		auto expr = &((*_457323_ref.alloc)._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ae76dd95:;
		if (it != expr_end) {
			jule::I32 _45749_i = it - expr->begin();
			jule::Any _457412_sym = *it;
			{
				if ((__jule_any_type7_compare(_457412_sym, (*(_457346_old))))) {
					(*(_457323_ref))._field_buffer[_45749_i]=jule::Any((*(_457359_new)), &__jule_any_type7);
				};
			}
			_iter_next_1ae76dd95:;
			++it;
			_45749_i++;
			goto _iter_begin_1ae76dd95;
		}
		_iter_end_1ae76dd95:;
	};
}



inline void _1abe3eea3_makeVariadic(jule::Ptr<_1abe11936_Data>* _458122_d, jule::Ptr<_1abe42d30_TypeKind> _458136_elem) {
	(*((*(_458122_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_BindIdent=(*_458136_elem.alloc)._field_BindIdent, ._field_Generic=(*(_458136_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_458136_elem.alloc)._field_Kind});
}



inline jule::Bool _1abe403d2_isVarCaptured(jule::Ptr<_1ab65ca34_scopeChecker> _459518_r, jule::Ptr<_1ab65ca34_scopeChecker> _459540_s, jule::Ptr<_1abda8d2e_Var> _459558_v) {
	if (((*(_459558_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_459540_s))._field_scope == (*_459558_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_459540_s.alloc)._field_parent == nullptr) || (_459540_s == _459518_r))) {
				goto _iter_end_1b1566b36;
			};
			_459540_s=(*_459540_s.alloc)._field_parent;
		}
	_iter_next_1b1566b36:;
	}
	_iter_end_1b1566b36:;;
	return true;;
}



inline jule::Bool _1abe5d587_kindUsesGenerics(jule::Ptr<_1abe42d30_TypeKind>* _171626_k, jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>* _171641_generics) {
	{
		auto expr = _171641_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1484e94:;
		if (it != expr_end) {
			jule::Ptr<_1abd2ca50_GenericDecl> *_171712_g = it;
			{
				if (static__1abe5d158_exist(&((*((*(_171712_g))))._field_Ident), _171626_k)) {
					return true;;
				};
			}
			_iter_next_1b1484e94:;
			++it;
			goto _iter_begin_1b1484e94;
		}
		_iter_end_1b1484e94:;
	};
	return false;;
}



inline jule::Bool _1abe5d950_hasDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _172622_directives, jule::Str _172653_tag) {
	{
		auto expr = _172622_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1485736:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _172717_dr = *it;
			{
				if (((*((*(_172717_dr))._field_Tag))._field_Kind == _172653_tag)) {
					return true;;
				};
			}
			_iter_next_1b1485736:;
			++it;
			goto _iter_begin_1b1485736;
		}
		_iter_end_1b1485736:;
	};
	return false;;
}



inline jule::Bool _1abe5dc19_canGetPtr(jule::Ptr<_1abe11936_Data>* _173519_d) {
	{
		
		if ((!((*((*(_173519_d))))._field_Lvalue)) || _1abe1233d_IsConst((*(_173519_d)).ptr())) {
			_case_begin_1b1487183:;
			{
				return false;;
			}
		}
		else if ((_1abe4676d_Fn((*((*(_173519_d))))._field_Kind.ptr()) != nullptr) || (_1abe45c34_Enum((*((*(_173519_d))))._field_Kind) != nullptr)) {
			_case_begin_1b148721b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b148711c:;
			{
				return true;;
			}
		}
		_match_end_1b14865e4:;
	};
}



inline jule::Bool _1abe5e05a_isValidForSptrType(jule::Ptr<_1abe42d30_TypeKind>* _174728_t) {
	jule::Ptr<_1abd4445c_StructIns> _17489_s = _1abe46a04_Struct((*(_174728_t)).ptr());;
	if ((((_17489_s != nullptr) && ((*_17489_s.alloc)._field_Decl != nullptr)) && (*(*_17489_s.alloc)._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1abe5e2e1_isValidForRef(jule::Ptr<_1abe42d30_TypeKind>* _175623_t) {
	return (_1abe4676d_Fn((*(_175623_t)).ptr()) == nullptr);;
}



inline jule::Bool _1abe5e5aa_isBuiltinStrConvertable(jule::Ptr<_1abe42d30_TypeKind>* _175933_t) {
	return ((((!(_1abe44194_Void((*(_175933_t)).ptr()))) && (_1abe4676d_Fn((*(_175933_t)).ptr()) == nullptr)) && (_1abe472a7_Tup((*(_175933_t)).ptr()) == nullptr)) && (!(_1abe4753d_comptime((*(_175933_t)).ptr()))));;
}



inline jule::Str _1abe5e874_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _176327_tokens) {
	if ((((*(_176327_tokens)).len() == 1LL) && ((*((*(_176327_tokens))[0LL]))._field_Id == static_cast<jule::U32>(31LLU)))) {
		return jule::Str::lit("std::unsafe", 11);;
	};
	jule::I32 _17679_n = 0LL;;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b148cee1:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_176812_token = it;
			{
				_17679_n+=(*((*(_176812_token))))._field_Kind.len();
				_17679_n+=2LL;
			}
			_iter_next_1b148cee1:;
			++it;
			goto _iter_begin_1b148cee1;
		}
		_iter_end_1b148cee1:;
	};
	_209e0d4d9_StrBuilder _17729_s = static__209e0d918_New(_17679_n);;
	{
		auto expr = _176327_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b148abe2:;
		if (it != expr_end) {
			jule::I32 _17739_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> *_177312_token = it;
			{
				_209e0de79_WriteStr(&_17729_s, (*((*(_177312_token))))._field_Kind);
				if ((((*(_176327_tokens)).len() - _17739_i) > 1LL)) {
					_209e0de79_WriteStr(&_17729_s, jule::Str::lit("::", 2));
				};
			}
			_iter_next_1b148abe2:;
			++it;
			_17739_i++;
			goto _iter_begin_1b148abe2;
		}
		_iter_end_1b148abe2:;
	};
	return _209e0e771_Str(&_17729_s);;
}



inline jule::Ptr<_1abe4a909_Prim> _1abe5ec4d_buildPrimType(jule::Str _178218_kind) {
	return jule::new_ptr<_1abe4a909_Prim>(_1abe4a909_Prim{._field_Kind=_178218_kind});;
}



inline void _1abe60336_applyImplicitCast(jule::Ptr<_1abe42d30_TypeKind>* _181027_dest, jule::Ptr<_1abe11936_Data>* _181049_d, jule::Ptr<_1abd0a38a_Token>* _181064_token) {
	if (_1abe43e0d_IsNil((*((*(_181049_d))))._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1abe4a909_Prim> _18145_destPrim = _1abe45481_Prim((*(_181027_dest)).ptr());;
	if (((_18145_destPrim != nullptr) && _1abe4e127_IsAny(_18145_destPrim))) {
		jule::Ptr<_1abe4a909_Prim> _18169_prim = _1abe45481_Prim((*((*(_181049_d))))._field_Kind);;
		if (((_18169_prim == nullptr) || (!(_1abe4e127_IsAny(_18169_prim.ptr()))))) {
			_1abe3c5cc_applyCastKind(_181049_d, _181027_dest, _181064_token);
		};
		return;;
	};
	jule::Ptr<_1abd69a59_Trait> _18235_dt = _1abe46c8a_Trait((*(_181027_dest)).ptr());;
	if ((_18235_dt != nullptr)) {
		jule::Ptr<_1abd69a59_Trait> _18259_bt = _1abe46c8a_Trait((*((*(_181049_d))))._field_Kind);;
		if (((_18259_bt == nullptr) || (_18259_bt != _18235_dt))) {
			_1abe3c236_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
			return;;
		};
	};
	if (((_1abe45eba_TypeEnum((*(_181027_dest)).ptr()) != nullptr) && (_1abe45eba_TypeEnum((*((*(_181049_d))))._field_Kind) == nullptr))) {
		_1abe3c236_applyCastKindModel(_181049_d, _181027_dest, _181064_token);
		return;;
	};
}



inline jule::Bool _1abe60600_validTypeForXof(jule::Ptr<_1abe42d30_TypeKind>* _183825_t) {
	return ((!(_1abe44194_Void((*(_183825_t)).ptr()))) && (_1abe4676d_Fn((*(_183825_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log _1abe63713_buildSymbols(jule::Ptr<_1abd1d931_Ast>* _1622_ast, jule::Trait* _1638_importer, jule::Ptr<_1abd63822_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log __jule_func_result;
	jule::Ptr<_1abd63822_symbolBuilder> _179_sb = jule::new_ptr<_1abd63822_symbolBuilder>(_1abd63822_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1abd68e21_build(_179_sb);
	if (((*_179_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_179_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_179_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log _1abe63b86_analyzePackage(jule::Slice<jule::Ptr<_1abd1d931_Ast>>* _3024_files, jule::Trait* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>> _329_tables = jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b18790ad:;
		if (it != expr_end) {
			jule::Ptr<_1abd1d931_Ast> _3317_f = *it;
			{
				jule::Ptr<_1abe0b5bd_SymbolTable> _3413_table;
				jule::Slice<_1eb22e132_Log> _3424_errors;
				({
					__jule_tuple_x_1abe0b5bd_SymbolTable__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1abe63713_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3413_table = __jule_assign_result.__jule_result_arg0;
					_3424_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3424_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3424_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1abe0b5bd_SymbolTable>> &__jule_push_dest = _329_tables; __jule_push_dest.push(_3413_table); };
			}
			_iter_next_1b18790ad:;
			++it;
			goto _iter_begin_1b18790ad;
		}
		_iter_end_1b18790ad:;
	};
	jule::Ptr<_1ab6979a3_Sema> _419_sema = jule::new_ptr<_1ab6979a3_Sema>(_1ab6979a3_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1ab696d9d_commonSemaMeta>()});;
	_1ab6b7242_check(_419_sema, &(_329_tables));
	if (((*_419_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_419_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab67a535_Package> _509_pkg = jule::new_ptr<_1ab67a535_Package>(_1ab67a535_Package{._field_Files=(*_419_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _509_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log _1abe640b5_AnalyzePackage(jule::Slice<jule::Ptr<_1abd1d931_Ast>> _7423_files, jule::Trait _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_1ab67a535_Package__jule_tuple_s_1eb22e132_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1abe63b86_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1abd59681_FnIns> _1ac0297eb_findBuiltinFunc(jule::Str* _2621_ident) {
	{
		auto &_match_expr{ (*(_2621_ident)) };
		
		if (_match_expr == jule::Str::lit("out", 3)) {
			_case_begin_1b188331a:;
			{
				static jule::Ptr<_1abd59681_FnIns> _2920_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac03035c_builtinCallerOut), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("outln", 5)) {
			_case_begin_1b1883381:;
			{
				static jule::Ptr<_1abd59681_FnIns> _3220_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac03078b_builtinCallerOutln), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1b1883408:;
			{
				static jule::Ptr<_1abd59681_FnIns> _3520_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac030bba_builtinCallerNew), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1b1883480:;
			{
				static jule::Ptr<_1abd59681_FnIns> _3820_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac0310e9_builtinCallerPanic), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1b1883628:;
			{
				static jule::Ptr<_1abd59681_FnIns> _4120_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac031759_builtinCallerMake), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1b188368e:;
			{
				static jule::Ptr<_1abd59681_FnIns> _4420_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac031a78_builtinCallerAppend), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1b1883716:;
			{
				static jule::Ptr<_1abd59681_FnIns> _4720_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac032491_builtinCallerCopy), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1b188378d:;
			{
				static jule::Ptr<_1abd59681_FnIns> _5020_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac033b35_builtinCallerLen), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1b18838ae:;
			{
				static jule::Ptr<_1abd59681_FnIns> _5320_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac0343d8_builtinCallerCap), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1b1883925:;
			{
				static jule::Ptr<_1abd59681_FnIns> _5620_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac034d01_builtinCallerDelete), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("assert", 6)) {
			_case_begin_1b188398b:;
			{
				static jule::Ptr<_1abd59681_FnIns> _5920_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac035230_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b1882d64:;
			{
				return nullptr;;
			}
		}
		_match_end_1b188311c:;
	};
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ac029b09_primTypeAlias(jule::Ptr<_1abe42d30_TypeKind>* _6623_k) {
	return jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1abda8d2e_Var> _1ac02d4ae_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1b188ac07:;
			{
				static jule::Ptr<_1abda8d2e_Var> _9720_v = jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(_1abe4a002_TypeSymbol{._field_Kind=_1ac029e17_primNil}), ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Constant=static__1b9aad73a_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1b188aca1:;
			{
				static jule::Ptr<_1abda8d2e_Var> _11220_v = jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Constant=static__1b9aace98_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1b188ad28:;
			{
				static jule::Ptr<_1abda8d2e_Var> _12520_v = jule::new_ptr<_1abda8d2e_Var>(_1abda8d2e_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=(*(_1ac02d800_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_Kind, ._field_Value=jule::new_ptr<_1abe12aad_Value>(_1abe12aad_Value{._field_Data=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Constant=static__1b9aace98_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1b188a454:;
			{
				return nullptr;;
			}
		}
		_match_end_1b1884904:;
	};
}



inline jule::Ptr<_1abe4203d_TypeAlias> _1ac02d800_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1b1890ab9:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _14520_t = _1ac029b09_primTypeAlias(&(_1ac02a4bc_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1b1890c40:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _14820_t = _1ac029b09_primTypeAlias(&(_1ac02a7b9_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1b1890ca6:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _15120_t = _1ac029b09_primTypeAlias(&(_1ac02aa72_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1b1890d3e:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _15420_t = _1ac029b09_primTypeAlias(&(_1ac02ad2a_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1b1890da5:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _15720_t = _1ac029b09_primTypeAlias(&(_1ac02b0d3_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1b1890e1b:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _16020_t = _1ac029b09_primTypeAlias(&(_1ac02b49b_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1b1890e82:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _16320_t = _1ac029b09_primTypeAlias(&(_1ac02b6dd_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1b1891009:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _16620_t = _1ac029b09_primTypeAlias(&(_1ac02b985_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1b18910d6:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _16920_t = _1ac029b09_primTypeAlias(&(_1ac02bee6_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1b189115d:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _17220_t = _1ac029b09_primTypeAlias(&(_1ac02c557_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1b18911d5:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _17520_t = _1ac029b09_primTypeAlias(&(_1ac02c810_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1b189125c:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _17820_t = _1ac029b09_primTypeAlias(&(_1ac02cce9_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1b18912d4:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _18120_t = _1ac029b09_primTypeAlias(&(_1ac02d03b_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1b189135b:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _18420_t = _1ac029b09_primTypeAlias(&(_1ac02d24a_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1b18913d3:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _18720_t = _1ac029b09_primTypeAlias(&(_1ac02c29e_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1b189145a:;
			{
				static jule::Ptr<_1abe4203d_TypeAlias> _19020_t = _1ac029b09_primTypeAlias(&(_1ac02bc3d_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1b188b345:;
			{
				return nullptr;;
			}
		}
		_match_end_1b188b422:;
	};
}



inline jule::Any _1ac02da86_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1abda8d2e_Var> _1989_v = _1ac02d4ae_findBuiltinVar(_19720_ident);;
	if ((_1989_v != nullptr)) {
		return jule::Any(_1989_v, &__jule_any_type8);;
	};
	jule::Ptr<_1abd59681_FnIns> _2029_f = _1ac0297eb_findBuiltinFunc(_19720_ident);;
	if ((_2029_f != nullptr)) {
		return jule::Any(_2029_f, &__jule_any_type7);;
	};
	jule::Ptr<_1abe4203d_TypeAlias> _2069_ta = _1ac02d800_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_2069_ta != nullptr)) {
		return jule::Any(_2069_ta, &__jule_any_type65);;
	};
	return nullptr;;
}



inline jule::Any _1ac02dd50_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str::lit("Out", 3)) {
			_case_begin_1b189ac28:;
			{
				static jule::Ptr<_1abd59681_FnIns> _21620_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac0389c5_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Outln", 5)) {
			_case_begin_1b189b069:;
			{
				static jule::Ptr<_1abd59681_FnIns> _21920_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac038e04_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b18993ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1b189aaa2:;
	};
}



inline jule::Any _1ac02e119_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1b189c587:;
			{
				static jule::Ptr<_1abd59681_FnIns> _22920_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac0373ca_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1b189c8ea:;
			{
				static jule::Ptr<_1abd59681_FnIns> _23220_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac037809_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1b189c620:;
			{
				static jule::Ptr<_1abd59681_FnIns> _23520_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac037c38_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b189c7b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1b189ad49:;
	};
}



inline jule::Any _1ac02e4e3_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1b189ea84:;
			{
				static jule::Ptr<_1abd59681_FnIns> _24520_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac03565e_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1b189ed5e:;
			{
				static jule::Ptr<_1abd59681_FnIns> _24820_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac035cd0_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1b189edc5:;
			{
				static jule::Ptr<_1abd59681_FnIns> _25120_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac03620e_builtinCallerStdComptimeLine), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1b189eaea:;
			{
				static jule::Ptr<_1abd59681_FnIns> _25420_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac03663d_builtinCallerStdComptimeFile), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1b189eb72:;
			{
				static jule::Ptr<_1abd59681_FnIns> _25720_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac036a6c_builtinCallerStdComptimeFiles), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1b189ee91:;
			{
				static jule::Ptr<_1abd59681_FnIns> _26020_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac036e9b_builtinCallerStdComptimeTypeAlias), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b189ec3d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b189cce6:;
	};
}



inline jule::Any _1ac02e735_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str::lit("ToStr", 5)) {
			_case_begin_1b18a0238:;
			{
				static jule::Ptr<_1abd59681_FnIns> _27020_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac038167_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1b18a424d:;
			{
				static jule::Ptr<_1abd59681_FnIns> _27320_f = jule::new_ptr<_1abd59681_FnIns>(_1abd59681_FnIns{._field_Decl=jule::new_ptr<_1abd566a0_Fn>(_1abd566a0_Fn{._field_Generics=jule::Slice<jule::Ptr<_1abd2ca50_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1abe11936_Data>,jule::Ptr<_1abe1365d_Eval>*,jule::Ptr<_1abd288a3_FnCallExpr>*,jule::Ptr<_1abe11936_Data>*>(_1ac038596_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b18a412c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b18a403e:;
	};
}



inline jule::Any _1ac02eaa9_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std::comptime", 13)) {
			_case_begin_1b18a631b:;
			{
				return _1ac02e4e3_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::debug", 10)) {
			_case_begin_1b18a6382:;
			{
				return _1ac02dd50_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::mem", 8)) {
			_case_begin_1b18a63e8:;
			{
				return _1ac02e119_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std::jule::integrated", 21)) {
			_case_begin_1b18a645e:;
			{
				return _1ac02e735_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1b18a44a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b18a5eb9:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1ac02ee2d_builtinCallerError(jule::Ptr<_1abe1365d_Eval>* _30028_e, jule::Ptr<_1abd288a3_FnCallExpr>* _30043_fc) {
	if (((*((*(_30043_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_30028_e)).ptr(), (*((*(_30043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("err", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_30043_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("error", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _3089_expr = _1abe318bd_evalExpr((*(_30028_e)), (*((*(_30043_fc))))._field_Args[0LL]);;
	if ((_3089_expr == nullptr)) {
		return nullptr;;
	};
	if (_1abe11d21_IsNil(_3089_expr.ptr())) {
		_1abe13bad_pushErr((*(_30028_e)).ptr(), (*((*((*(_30043_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abe11936_Data> _3179_d = _1abe3c7db_buildVoidData();;
	(*(_3179_d))._field_Model=jule::Any(jule::new_ptr<_1abd5213a_BuiltinErrorCallExprModel>(_1abd5213a_BuiltinErrorCallExprModel{._field_Err=_3089_expr}), &__jule_any_type22);
	return _3179_d;;
}



inline jule::Ptr<_1abe11936_Data> _1ac03035c_builtinCallerOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _32226_e, jule::Ptr<_1abd288a3_FnCallExpr>* _32241_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_32241_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_32226_e)).ptr(), (*((*(_32241_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("v", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_32241_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("out", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _3319_expr = _1abe318bd_evalExpr((*(_32226_e)), (*((*(_32241_fc))))._field_Args[0LL]);;
	if ((_3319_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe5e5aa_isBuiltinStrConvertable(&((*(_3319_expr))._field_Kind))))) {
		_1abe13bad_pushErr((*(_32226_e)).ptr(), (*((*((*(_32241_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _3419_d = _1abe3c7db_buildVoidData();;
	(*(_3419_d))._field_Model=jule::Any(jule::new_ptr<_1abd4e401_BuiltinOutCallExprModel>(_1abd4e401_BuiltinOutCallExprModel{._field_Expr=(*(_3319_expr))._field_Model, }), &__jule_any_type26);
	return _3419_d;;
}



inline jule::Ptr<_1abe11936_Data> _1ac03078b_builtinCallerOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _34628_e, jule::Ptr<_1abd288a3_FnCallExpr>* _34643_fc, jule::Ptr<_1abe11936_Data>* _34665_d) {
	(*(_34665_d))=_1ac03035c_builtinCallerOut(nullptr, _34628_e, _34643_fc, _34665_d);
	if (((*(_34665_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_34665_d))))._field_Model=jule::Any(jule::new_ptr<_1abd4e7ca_BuiltinOutlnCallExprModel>(_1abd4e7ca_BuiltinOutlnCallExprModel{._field_Expr=(*((*((*(_34665_d))))._field_Model.cast_ptr<_1abd4e401_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Expr, }), &__jule_any_type27);
	return (*(_34665_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac030bba_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _35826_e, jule::Ptr<_1abd288a3_FnCallExpr>* _35841_fc, jule::Ptr<_1abe11936_Data>* _35863_d) {
	if (((*((*(_35841_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_35826_e)).ptr(), (*((*(_35841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_35841_fc))))._field_Args.len() > 2LL)) {
		_1abe13bad_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("new", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _3679_t = _1abe30aa9_evalExprKind((*(_35826_e)), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_3679_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3679_t))._field_Decl))) {
		_1abe13bad_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1abe5e05a_isValidForSptrType(&((*(_3679_t))._field_Kind))))) {
		jule::Ptr<_1abd4445c_StructIns> _37813_s = _1abe46a04_Struct((*(_3679_t))._field_Kind.ptr());;
		if ((((_37813_s != nullptr) && ((*_37813_s.alloc)._field_Decl != nullptr)) && (*(*_37813_s.alloc)._field_Decl.alloc)._field_Binded)) {
			_1abe13bad_pushErr((*(_35826_e)).ptr(), (*((*((*(_35841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_35863_d))))._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=(*(_3679_t))._field_Kind}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)});
	if (((*((*(_35841_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1abe42d30_TypeKind> _39213_old = (*((*(_35826_e))))._field_prefix;;
		(*((*(_35826_e))))._field_prefix=(*(_3679_t))._field_Kind;
		jule::Ptr<_1abe11936_Data> _39513_init = _1abe318bd_evalExpr((*(_35826_e)), (*((*(_35841_fc))))._field_Args[1LL]);;
		(*((*(_35826_e))))._field_prefix=_39213_old;
		if ((_39513_init != nullptr)) {
			jule::Ptr<_1abd0a38a_Token> _40017_token = (*((*((*(_35841_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1ab6a7485_checkValidityForInitExpr((*((*(_35826_e))))._field_s, (!((*((*(_35826_e))))._field_immutable)), false, &((*(_3679_t))._field_Kind), &(_39513_init), &(_40017_token));
			_1ab6a30eb_checkAssignType((*((*(_35826_e))))._field_s, false, &((*(_3679_t))._field_Kind), &(_39513_init), _40017_token);
			(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1abd4eba4_BuiltinNewCallExprModel>(_1abd4eba4_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, ._field_Init=(*_39513_init.alloc)._field_Model}), &__jule_any_type113);
		};
	} else {
		(*((*(_35863_d))))._field_Model=jule::Any(jule::new_ptr<_1abd4eba4_BuiltinNewCallExprModel>(_1abd4eba4_BuiltinNewCallExprModel{._field_Kind=(*(_3679_t))._field_Kind, }), &__jule_any_type113);
	};
	return (*(_35863_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac0310e9_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _42028_e, jule::Ptr<_1abd288a3_FnCallExpr>* _42043_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_42043_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("message", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_42043_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_42028_e)).ptr(), (*((*((*(_42043_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("panic", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _4299_expr = _1abe318bd_evalExpr((*(_42028_e)), (*((*(_42043_fc))))._field_Args[0LL]);;
	if ((_4299_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1abe45481_Prim((*(_4299_expr))._field_Kind.ptr()) == nullptr) || (!(_1abe4dd91_IsStr(_1abe45481_Prim((*(_4299_expr))._field_Kind).ptr()))))) {
		_1abe13bad_pushErr((*(_42028_e)).ptr(), (*((*(_42043_fc))))._field_Token, jule::Str::lit("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abe11936_Data> _4389_d = _1abe3c7db_buildVoidData();;
	(*(_4389_d))._field_Model=jule::Any(jule::new_ptr<_1abd5007d_BuiltinPanicCallExprModel>(_1abd5007d_BuiltinPanicCallExprModel{._field_Token=(*((*(_42043_fc))))._field_Token, ._field_Expr=(*(_4299_expr))._field_Model}), &__jule_any_type28);
	return _4389_d;;
}



inline jule::Ptr<_1abe11936_Data> _1ac031759_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44627_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44642_fc, jule::Ptr<_1abe11936_Data>* _44664_d) {
	if (((*((*(_44642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44642_fc))))._field_Args.len() == 1LL)) {
			_1abe13bad_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("size", 4), &__jule_any_type4)}));
			return nullptr;;
		};
		_1abe13bad_pushErr((*(_44627_e)).ptr(), (*((*(_44642_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type4)}));
		return nullptr;;
	} else if (((*((*(_44642_fc))))._field_Args.len() > 3LL)) {
		_1abe13bad_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[3LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _4599_t = _1abe30aa9_evalExprKind((*(_44627_e)), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4599_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4599_t))._field_Decl))) {
		_1abe13bad_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1abe464d7_Slc((*(_4599_t))._field_Kind.ptr()) == nullptr)) {
		_1abe13bad_pushErr((*(_44627_e)).ptr(), (*((*((*(_44642_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_4599_t))._field_Kind), &__jule_any_type4),jule::Any(jule::Str::lit("make", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	(*((*(_44664_d))))._field_Kind=(*(_4599_t))._field_Kind;
	jule::Ptr<_1abe11936_Data> _4749_lenExpr = _1abe318bd_evalExpr(_1ab6a2749_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[1LL]);;
	if ((_4749_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1abe1c898_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_4749_lenExpr), (*((*((*(_44642_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1abd509da_BuiltinMakeCallExprModel> _4819_model = jule::new_ptr<_1abd509da_BuiltinMakeCallExprModel>(_1abd509da_BuiltinMakeCallExprModel{._field_Kind=(*(_4599_t))._field_Kind, ._field_Len=(*(_4749_lenExpr))._field_Model, });;
	(*((*(_44664_d))))._field_Model=jule::Any(_4819_model, &__jule_any_type114);
	if (((*((*(_44642_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1abe11936_Data> _48713_capExpr = _1abe318bd_evalExpr(_1ab6a2749_evalp((*((*(_44627_e))))._field_s, (*((*(_44627_e))))._field_lookup, (*(_4599_t))._field_Kind), (*((*(_44642_fc))))._field_Args[2LL]);;
		if ((_48713_capExpr == nullptr)) {
			return (*(_44664_d));;
		};
		_1abe1c898_checkIntegerIndexingByData((*(_44627_e)).ptr(), &(_48713_capExpr), (*((*((*(_44642_fc))))._field_Args[2LL]))._field_Token);
		(*(_4819_model))._field_Cap=(*(_48713_capExpr))._field_Model;
	};
	return (*(_44664_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac031a78_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _49729_e, jule::Ptr<_1abd288a3_FnCallExpr>* _49744_fc, jule::Ptr<_1abe11936_Data>* _49766_d) {
	if (((*((*(_49744_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49744_fc))))._field_Args.len() == 1LL)) {
			_1abe13bad_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("values", 6), &__jule_any_type4)}));
			return nullptr;;
		};
		_1abe13bad_pushErr((*(_49729_e)).ptr(), (*((*(_49744_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _5079_t = _1abe318bd_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[0LL]);;
	if ((_5079_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abe4ee08_Slc> _5129_s = _1abe464d7_Slc((*(_5079_t))._field_Kind.ptr());;
	if ((_5129_s == nullptr)) {
		_1abe13bad_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1ab6a7485_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5079_t))._field_Kind), &(_5079_t), &((*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token))) {
		_1ab6a30eb_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5079_t))._field_Kind), &(_5079_t), (*((*((*(_49744_fc))))._field_Args[0LL]))._field_Token);
	};
	jule::Ptr<_1abe42d30_TypeKind> _5279_prefix = (*((*(_49729_e))))._field_prefix;;
	(*((*(_49729_e))))._field_prefix=(*(_5079_t))._field_Kind;
	__JULE_DEFER({
		(*((*(_49729_e))))._field_prefix=_5279_prefix;
	});;
	(*(_49766_d))=jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=(*(_5079_t))._field_Kind, ._field_Mutable=true, });
	{
		auto &_match_expr{ (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b18e11be:;
			{
				if (((*((*(_49744_fc))))._field_Args.len() > 2LL)) {
					_1abe13bad_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1abe11936_Data> _54113_e1 = _1abe318bd_evalExpr((*(_49729_e)), (*((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Kind.unsafe_cast_ptr<_1abd27110_VariadicExpr>()))._field_Expr);;
				if ((_54113_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1abe45481_Prim((*(_5129_s))._field_Elem.ptr()) != nullptr) && _1abe4c301_IsU8(_1abe45481_Prim((*(_5129_s))._field_Elem).ptr()))) {
					if (((_1abe45481_Prim((*(_54113_e1))._field_Kind) != nullptr) && _1abe4dd91_IsStr(_1abe45481_Prim((*(_54113_e1))._field_Kind).ptr()))) {
						_1abe3eea3_makeVariadic(&(_54113_e1), _1ac02c29e_primU8);
						(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1abd50db4_BuiltinAppendCallExprModel>(_1abd50db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_54113_e1))._field_Model}), &__jule_any_type25);
						return (*(_49766_d));;
					};
				};
				if ((!(_1abe451ea_Variadicable((*(_54113_e1))._field_Kind)))) {
					_1abe13bad_pushErr((*(_49729_e)).ptr(), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_54113_e1))._field_Kind), &__jule_any_type4)}));
					return nullptr;;
				};
				_1abe3eea3_makeVariadic(&(_54113_e1), (*(_5129_s))._field_Elem);
				if (_1ab6a7485_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_54113_e1), &((*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token))) {
					_1ab6a30eb_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_54113_e1), (*((*((*(_49744_fc))))._field_Args[1LL]))._field_Token);
				};
				(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1abd50db4_BuiltinAppendCallExprModel>(_1abd50db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=(*(_54113_e1))._field_Model}), &__jule_any_type25);
				return (*(_49766_d));;
			}
		}
		_match_end_1b18e1125:;
	};
	jule::Ptr<_1abe11936_Data> _5759_e1 = _1abe318bd_evalExpr((*(_49729_e)), (*((*(_49744_fc))))._field_Args[1LL]);;
	if ((_5759_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd4ac16_SliceExprModel> _5809_slice = jule::new_ptr<_1abd4ac16_SliceExprModel>(_1abd4ac16_SliceExprModel{._field_ElemKind=(*(_5129_s))._field_Elem, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49744_fc))))._field_Args.len() - 1LL), jule::Any(nullptr))});;
	{
		auto expr = (*((*(_49744_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b18ed473:;
		if (it != expr_end) {
			jule::Ptr<_1abd24b79_Expr> _58417_arg = *it;
			{
				_5759_e1=_1abe318bd_evalExpr((*(_49729_e)), _58417_arg);
				if ((_5759_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5759_e1))._field_Kind.alloc)._field_Variadic) {
					_1abe13bad_pushErr((*(_49729_e)).ptr(), (*(_58417_arg))._field_Token, jule::Str::lit("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
				};
				if (_1ab6a7485_checkValidityForInitExpr((*((*(_49729_e))))._field_s, true, false, &((*(_5129_s))._field_Elem), &(_5759_e1), &((*_58417_arg.alloc)._field_Token))) {
					_1ab6a30eb_checkAssignType((*((*(_49729_e))))._field_s, false, &((*(_5129_s))._field_Elem), &(_5759_e1), (*_58417_arg.alloc)._field_Token);
				};
				(*(_5809_slice))._field_Elems=jule::append((*_5809_slice.alloc)._field_Elems,jule::Slice<jule::Any>::make({(*(_5759_e1))._field_Model}));
			}
			_iter_next_1b18ed473:;
			++it;
			goto _iter_begin_1b18ed473;
		}
		_iter_end_1b18ed473:;
	};
	(*((*(_49766_d))))._field_Model=jule::Any(jule::new_ptr<_1abd50db4_BuiltinAppendCallExprModel>(_1abd50db4_BuiltinAppendCallExprModel{._field_Dest=(*(_5079_t))._field_Model, ._field_Elements=jule::Any(_5809_slice, &__jule_any_type76)}), &__jule_any_type25);
	return (*(_49766_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac032062_callerCopySlice(jule::Ptr<_1abe11936_Data>* _60625_dest, jule::Ptr<_1abe1365d_Eval>* _60643_e, jule::Ptr<_1abd288a3_FnCallExpr>* _60658_fc, jule::Ptr<_1abe11936_Data>* _60680_d) {
	if ((!((*((*(_60625_dest))))._field_Mutable))) {
		_1abe13bad_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abe11936_Data> _6119_src = _1abe318bd_evalExpr((*(_60643_e)), (*((*(_60658_fc))))._field_Args[1LL]);;
	if ((_6119_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abe4ee08_Slc> _6159_slc = _1abe464d7_Slc((*(_6119_src))._field_Kind.ptr());;
	if ((_6159_slc != nullptr)) {
		if (((!((*(_6119_src))._field_Mutable)) && _1abe446b1_Mutable((*_6159_slc.alloc)._field_Elem.ptr()))) {
			_1abe13bad_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1abe43539_Equal((*((*(_60625_dest))))._field_Kind, (*(_6119_src))._field_Kind)))) {
			_1abe13bad_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_6119_src))._field_Kind), &__jule_any_type4)}));
		};
	} else {
		jule::Ptr<_1abe4a909_Prim> _6259_destPrim = _1abe45481_Prim((*(_1abe464d7_Slc((*((*(_60625_dest))))._field_Kind)))._field_Elem.ptr());;
		jule::Ptr<_1abe4a909_Prim> _6269_prim = _1abe45481_Prim((*(_6119_src))._field_Kind);;
		if (((((_6259_destPrim == nullptr) || (_6269_prim == nullptr)) || (!(_1abe4dd91_IsStr(_6269_prim.ptr())))) || (!(_1abe4c301_IsU8(_6259_destPrim.ptr()))))) {
			_1abe13bad_pushErr((*(_60643_e)).ptr(), (*((*((*(_60658_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*((*(_60625_dest))))._field_Kind), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_6119_src))._field_Kind), &__jule_any_type4)}));
		};
	};
	(*((*(_60680_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_60680_d))))._field_Model=jule::Any(jule::new_ptr<_1abd51c61_BuiltinCopyCallExprModel>(_1abd51c61_BuiltinCopyCallExprModel{._field_Dest=(*(_60625_dest)), ._field_Src=_6119_src}), &__jule_any_type30);
	return (*(_60680_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac032491_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _64027_e, jule::Ptr<_1abd288a3_FnCallExpr>* _64042_fc, jule::Ptr<_1abe11936_Data>* _64064_d) {
	if (((*((*(_64042_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64042_fc))))._field_Args.len() == 1LL)) {
			_1abe13bad_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src", 3), &__jule_any_type4)}));
			return nullptr;;
		};
		_1abe13bad_pushErr((*(_64027_e)).ptr(), (*((*(_64042_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_64042_fc))))._field_Args.len() > 2LL)) {
		_1abe13bad_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("copy", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _6539_dest = _1abe318bd_evalExpr((*(_64027_e)), (*((*(_64042_fc))))._field_Args[0LL]);;
	{
		
		if ((_6539_dest == nullptr)) {
			_case_begin_1b1913c80:;
			{
				return nullptr;;
			}
		}
		else if ((_1abe464d7_Slc((*(_6539_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1913ce6:;
			{
				return _1ac032062_callerCopySlice(&(_6539_dest), _64027_e, _64042_fc, _64064_d);;
			}
		}
		else {
			_case_begin_1b1912c3a:;
			{
				_1abe13bad_pushErr((*(_64027_e)).ptr(), (*((*((*(_64042_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b19111cd:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1ac032815_callerLenSlice(jule::Ptr<_1abe11936_Data>* _66524_expr, jule::Ptr<_1abe11936_Data>* _66542_d) {
	(*((*(_66542_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_66542_d))))._field_Model=jule::Any(jule::new_ptr<_1abd511b1_BuiltinLenCallExprModel>(_1abd511b1_BuiltinLenCallExprModel{._field_Expr=(*(_66524_expr))}), &__jule_any_type115);
	return (*(_66542_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac032b89_callerLenMap(jule::Ptr<_1abe11936_Data>* _67322_expr, jule::Ptr<_1abe11936_Data>* _67340_d) {
	(*((*(_67340_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_67340_d))))._field_Model=jule::Any(jule::new_ptr<_1abd511b1_BuiltinLenCallExprModel>(_1abd511b1_BuiltinLenCallExprModel{._field_Expr=(*(_67322_expr))}), &__jule_any_type115);
	return (*(_67340_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac03300d_callerLenArr(jule::Ptr<_1abe11936_Data>* _68122_expr, jule::Ptr<_1abe11936_Data>* _68140_d) {
	(*((*(_68140_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_68140_d))))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>((*(_1abe46251_Arr((*((*(_68122_expr))))._field_Kind.ptr())))._field_N));
	(*((*(_68140_d))))._field_Model=jule::Any((*((*(_68140_d))))._field_Constant, &__jule_any_type19);
	return (*(_68140_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac033382_callerLenStr(jule::Ptr<_1abe11936_Data>* _68822_expr, jule::Ptr<_1abe11936_Data>* _68840_d) {
	(*((*(_68840_d))))._field_Kind=_1abe0a369_lenKind();
	if (_1abe1233d_IsConst((*(_68822_expr)).ptr())) {
		(*((*(_68840_d))))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_1b9aae64d_ReadStr((*((*(_68822_expr))))._field_Constant.ptr()).len()));
		(*((*(_68840_d))))._field_Model=jule::Any((*((*(_68840_d))))._field_Constant, &__jule_any_type19);
	} else {
		(*((*(_68840_d))))._field_Model=jule::Any(jule::new_ptr<_1abd511b1_BuiltinLenCallExprModel>(_1abd511b1_BuiltinLenCallExprModel{._field_Expr=(*(_68822_expr))}), &__jule_any_type115);
	};
	return (*(_68840_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac033706_callerLenComptime(jule::Ptr<_1abe11936_Data>* _70127_d, jule::I32 _70137_n) {
	(*((*(_70127_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_70127_d))))._field_Constant=static__1b9aac915_NewI64(static_cast<jule::I64>(_70137_n));
	(*((*(_70127_d))))._field_Model=jule::Any((*((*(_70127_d))))._field_Constant, &__jule_any_type19);
	return (*(_70127_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac033b35_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _70826_e, jule::Ptr<_1abd288a3_FnCallExpr>* _70841_fc, jule::Ptr<_1abe11936_Data>* _70863_d) {
	if (((*((*(_70841_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_70826_e)).ptr(), (*((*(_70841_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_70841_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("len", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _7169_dest = _1abe3157c_evalExpr1((*(_70826_e)), (*((*(_70841_fc))))._field_Args[0LL]);;
	{
		
		if ((_7169_dest == nullptr)) {
			_case_begin_1b1926039:;
			{
				return nullptr;;
			}
		}
		else if ((_1abe464d7_Slc((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1924e7d:;
			{
				return _1ac032815_callerLenSlice(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1abe46251_Arr((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1924ee4:;
			{
				return _1ac03300d_callerLenArr(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1abe47021_Map((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b192505a:;
			{
				return _1ac032b89_callerLenMap(&(_7169_dest), _70863_d);;
			}
		}
		else if (((_1abe45481_Prim((*(_7169_dest))._field_Kind.ptr()) != nullptr) && _1abe4dd91_IsStr(_1abe45481_Prim((*_7169_dest.alloc)._field_Kind).ptr()))) {
			_case_begin_1b19250c1:;
			{
				return _1ac033382_callerLenStr(&(_7169_dest), _70863_d);;
			}
		}
		else if ((_1abe477c4_comptimeStructFields((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1925137:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe477c4_comptimeStructFields((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1abe47ce1_comptimeEnumFields((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b192519d:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe47ce1_comptimeEnumFields((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1abe48ab1_comptimeTypeInfos((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1926138:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe48ab1_comptimeTypeInfos((*_7169_dest.alloc)._field_Kind)))._field_types.len());;
			}
		}
		else if ((_1abe4830d_comptimeParams((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b192619e:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe4830d_comptimeParams((*_7169_dest.alloc)._field_Kind)))._field_params.len());;
			}
		}
		else if ((_1abe490cd_comptimeStatics((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1926215:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe490cd_comptimeStatics((*_7169_dest.alloc)._field_Kind)))._field_fields.len());;
			}
		}
		else if ((_1abe49b17_comptimeFiles((*(_7169_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b192627b:;
			{
				return _1ac033706_callerLenComptime(_70863_d, (*(_1abe49b17_comptimeFiles((*_7169_dest.alloc)._field_Kind)))._field_files.len());;
			}
		}
		else {
			_case_begin_1b1924e17:;
			{
				_1abe13bad_pushErr((*(_70826_e)).ptr(), (*((*((*(_70841_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b19233aa:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1ac033ea9_callerCapSlice(jule::Ptr<_1abe11936_Data>* _74624_expr, jule::Ptr<_1abe11936_Data>* _74642_d) {
	(*((*(_74642_d))))._field_Kind=_1abe0a369_lenKind();
	(*((*(_74642_d))))._field_Model=jule::Any(jule::new_ptr<_1abd514ad_BuiltinCapCallExprModel>(_1abd514ad_BuiltinCapCallExprModel{._field_Expr=(*(_74624_expr))}), &__jule_any_type116);
	return (*(_74642_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac0343d8_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _75426_e, jule::Ptr<_1abd288a3_FnCallExpr>* _75441_fc, jule::Ptr<_1abe11936_Data>* _75463_d) {
	if (((*((*(_75441_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_75426_e)).ptr(), (*((*(_75441_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("obj", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_75441_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("cap", 3), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _7629_dest = _1abe318bd_evalExpr((*(_75426_e)), (*((*(_75441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7629_dest == nullptr)) {
			_case_begin_1b1648971:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7629_dest))._field_Decl) {
			_case_begin_1b16489d7:;
			{
				_1abe13bad_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abe464d7_Slc((*(_7629_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1648a4d:;
			{
				return _1ac033ea9_callerCapSlice(&(_7629_dest), _75463_d);;
			}
		}
		else {
			_case_begin_1b164792b:;
			{
				_1abe13bad_pushErr((*(_75426_e)).ptr(), (*((*((*(_75441_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1645dbe:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1ac0348c2_callerDeleteMap(jule::Ptr<_1abe1365d_Eval>* _77725_e, jule::Ptr<_1abd288a3_FnCallExpr>* _77740_fc, jule::Ptr<_1abe11936_Data>* _77762_expr, jule::Ptr<_1abe11936_Data>* _77780_d) {
	if ((!((*((*(_77762_expr))))._field_Mutable))) {
		_1abe13bad_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77780_d))=_1abe3c7db_buildVoidData();
	jule::Ptr<_1abd51887_BuiltinDeleteCallExprModel> _7829_model = jule::new_ptr<_1abd51887_BuiltinDeleteCallExprModel>(_1abd51887_BuiltinDeleteCallExprModel{._field_Dest=(*(_77762_expr)), });;
	if (((*((*(_77740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1abe11936_Data> _78613_key = _1abe318bd_evalExpr((*(_77725_e)), (*((*(_77740_fc))))._field_Args[1LL]);;
		{
			
			if ((_78613_key == nullptr)) {
				_case_begin_1b164e7ac:;
				{
					return nullptr;;
				}
			}
			else if ((*(_78613_key))._field_Decl) {
				_case_begin_1b164d404:;
				{
					_1abe13bad_pushErr((*(_77725_e)).ptr(), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b164d38d:;
				{
					;
					jule::Ptr<_1abe42d30_TypeKind> _79517_keyType = (*(_1abe47021_Map((*((*(_77762_expr))))._field_Kind.ptr())))._field_Key;;
					if ((!(_1ab6a30eb_checkAssignType((*((*(_77725_e))))._field_s, false, &(_79517_keyType), &(_78613_key), (*((*((*(_77740_fc))))._field_Args[1LL]))._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b164d327:;
		};
		(*(_7829_model))._field_Key=_78613_key;
	};
	(*((*(_77780_d))))._field_Model=jule::Any(_7829_model, &__jule_any_type31);
	return (*(_77780_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac034d01_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _80629_e, jule::Ptr<_1abd288a3_FnCallExpr>* _80644_fc, jule::Ptr<_1abe11936_Data>* _80666_d) {
	if (((*((*(_80644_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_80629_e)).ptr(), (*((*(_80644_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("map", 3), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_80644_fc))))._field_Args.len() > 2LL)) {
		_1abe13bad_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("delete", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _8149_dest = _1abe318bd_evalExpr((*(_80629_e)), (*((*(_80644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8149_dest == nullptr)) {
			_case_begin_1b1a7d46b:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8149_dest))._field_Decl) {
			_case_begin_1b1a7d4d2:;
			{
				_1abe13bad_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1abe47021_Map((*(_8149_dest))._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1a7d548:;
			{
				return _1ac0348c2_callerDeleteMap(_80629_e, _80644_fc, &(_8149_dest), _80666_d);;
			}
		}
		else {
			_case_begin_1b1a7c426:;
			{
				_1abe13bad_pushErr((*(_80629_e)).ptr(), (*((*((*(_80644_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1a7a8b9:;
	};
}



inline jule::Ptr<_1abe11936_Data> _1ac035230_builtinCallerAssert(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _82929_e, jule::Ptr<_1abd288a3_FnCallExpr>* _82944_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_82944_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_82944_fc))))._field_Args.len() > 2LL)) {
		_1abe13bad_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[2LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("assert", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _8389_expr = _1abe318bd_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[0LL]);;
	if ((_8389_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1abe45481_Prim((*(_8389_expr))._field_Kind.ptr()) == nullptr) || (!(_1abe4db0a_IsBool(_1abe45481_Prim((*(_8389_expr))._field_Kind).ptr()))))) {
		_1abe13bad_pushErr((*(_82929_e)).ptr(), (*((*(_82944_fc))))._field_Token, jule::Str::lit("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abd50534_BuiltinAssertCallExprModel> _8479_model = jule::new_ptr<_1abd50534_BuiltinAssertCallExprModel>(_1abd50534_BuiltinAssertCallExprModel{._field_Token=(*((*(_82944_fc))))._field_Token, ._field_Expr=(*(_8389_expr))._field_Model, ._field_Log=jule::Str::lit("assertion failed", 16)});;
	if (((*((*(_82944_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1abe11936_Data> _85513_log = _1abe318bd_evalExpr((*(_82929_e)), (*((*(_82944_fc))))._field_Args[1LL]);;
		if ((_85513_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1abe1233d_IsConst(_85513_log.ptr()))) || (_1abe45481_Prim((*(_85513_log))._field_Kind) == nullptr)) || (!(_1abe4dd91_IsStr(_1abe45481_Prim((*(_85513_log))._field_Kind).ptr()))))) {
			_1abe13bad_pushErr((*(_82929_e)).ptr(), (*((*((*(_82944_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("const str", 9), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_85513_log))._field_Kind), &__jule_any_type4)}));
			return nullptr;;
		};
		(*(_8479_model))._field_Log=_1b9aae64d_ReadStr((*(_85513_log))._field_Constant.ptr());
	};
	jule::Ptr<_1abe11936_Data> _8689_d = _1abe3c7db_buildVoidData();;
	(*(_8689_d))._field_Model=jule::Any(_8479_model, &__jule_any_type29);
	return _8689_d;;
}



inline jule::Ptr<_1abe11936_Data> _1ac03565e_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _87340_e, jule::Ptr<_1abd288a3_FnCallExpr>* _87355_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_87355_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*(_87355_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_87355_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _8829_d = _1abe30aa9_evalExprKind((*(_87340_e)), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8829_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abd59681_FnIns> _8865_f = _1abe4676d_Fn((*(_8829_d))._field_Kind.ptr());;
	if ((_8865_f != nullptr)) {
		if (_1abd5ab16_IsBuiltin(_8865_f)) {
			_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type4)}));
			return nullptr;;
		};
		if (((*_8865_f.alloc)._field_Generics.len() != (*((*_8865_f.alloc)._field_Decl))._field_Generics.len())) {
			_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1abd4445c_StructIns> _8975_s = _1abe46a04_Struct((*(_8829_d))._field_Kind);;
	if (((_8975_s != nullptr) && ((*_8975_s.alloc)._field_Generics.len() != (*((*_8975_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1abe4753d_comptime((*(_8829_d))._field_Kind)) {
		_1abe13bad_pushErr((*(_87340_e)).ptr(), (*((*((*(_87355_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_8829_d))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64aabb_buildComptimeTypeInfoData(&((*((*(_87340_e))))._field_s), &((*(_8829_d))._field_Kind));;
}



inline jule::Ptr<_1abe11936_Data> _1ac035cd0_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _90941_e, jule::Ptr<_1abd288a3_FnCallExpr>* _90956_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_90956_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_90941_e)).ptr(), (*((*(_90956_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_90956_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _9179_d = _1abe318bd_evalExpr((*(_90941_e)), (*((*(_90956_fc))))._field_Args[0LL]);;
	if ((_9179_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe0a6bb_isGoodValueToInfer(&(_9179_d))))) {
		_1abe13bad_pushErr((*(_90941_e)).ptr(), (*((*((*(_90956_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_9179_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type4)}));
		return nullptr;;
	};
	return _1ab64ae0c_buildComptimeValue(&(_9179_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac03620e_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _92938_e, jule::Ptr<_1abd288a3_FnCallExpr>* _92953_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_92953_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_92938_e)).ptr(), (*((*((*(_92953_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Line", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1b9aac4c5_Const> _9339_constant = static__1b9aac915_NewI64(static_cast<jule::I64>((*((*((*(_92953_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02b49b_primInt, ._field_Model=jule::Any(_9339_constant, &__jule_any_type19), ._field_Constant=_9339_constant});;
}



inline jule::Ptr<_1abe11936_Data> _1ac03663d_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _94138_e, jule::Ptr<_1abd288a3_FnCallExpr>* _94153_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_94153_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_94138_e)).ptr(), (*((*((*(_94153_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("File", 4), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1ab648558_comptimeFile>(_1ab648558_comptimeFile{._field_file=(*((*((*(_94138_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data18)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ac036a6c_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _95439_e, jule::Ptr<_1abd288a3_FnCallExpr>* _95454_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_95454_fc))))._field_Args.len() > 0LL)) {
		_1abe13bad_pushErr((*(_95439_e)).ptr(), (*((*((*(_95454_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Files", 5), &__jule_any_type4)}));
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1ab646e5d_comptimeFiles>(_1ab646e5d_comptimeFiles{._field_files=(*((*((*(_95439_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data17)}), });;
}



inline jule::Ptr<_1abe11936_Data> _1ac036e9b_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _96743_e, jule::Ptr<_1abd288a3_FnCallExpr>* _96758_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_96758_fc))))._field_Args.len() > 2LL)) {
		_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 0LL)) {
		_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_96758_fc))))._field_Args.len() == 1LL)) {
		_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b1aa4ad0:;
			{
				goto _match_end_1b1aa6d68;
			}
		}
		else {
			_case_begin_1b1aa6dce:;
			{
				_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
				_1abe14021_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1aa6d68:;
	};
	jule::Ptr<_1abd0a38a_Token> _9889_ident = (*((*((*((*(_96758_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1abd26494_IdentExpr>(&__jule_any_type79)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_96743_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0)) {
			_case_begin_1b1aa91bc:;
			{
				goto _match_end_1b1aa940e;
			}
		}
		else {
			_case_begin_1b1aa9464:;
			{
				_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*(_96758_fc))))._field_Token, jule::Str::lit("you can call @ function in the scopes only", 42), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type4)}));
				return nullptr;;
			}
		}
		_match_end_1b1aa940e:;
	};
	jule::Ptr<_1ab65ca34_scopeChecker> _9979_sc = (*((*(_96743_e))))._field_lookup.cast_ptr<_1ab65ca34_scopeChecker>((jule::Trait::Type*)&_1abe62921_Lookup_mptr_data0);;
	jule::Ptr<_1abe4203d_TypeAlias> _9989_alias = jule::new_ptr<_1abe4203d_TypeAlias>(_1abe4203d_TypeAlias{._field_Scope=(*(_9979_sc))._field_tree, ._field_Public=_1ab694a6b_IsPub((*(_9889_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9889_ident, ._field_Ident=(*_9889_ident.alloc)._field_Kind, ._field_Kind=jule::new_ptr<_1abe4a002_TypeSymbol>(), });;
	jule::Ptr<_1abe11936_Data> _10089_t = _1abe30dea_eval1((*(_96743_e)), (*((*(_96758_fc))))._field_Args[1LL]);;
	if ((_10089_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_10089_t))._field_Decl) {
		(*((*(_9989_alias))._field_Kind))._field_Kind=(*(_10089_t))._field_Kind;
	} else {
		jule::Ptr<_1abd81400_comptimeTypeInfo> _101513_cti = _1abe48d47_comptimeTypeInfo((*(_10089_t))._field_Kind.ptr());;
		if ((_101513_cti == nullptr)) {
			_1abe13bad_pushErr((*(_96743_e)).ptr(), (*((*((*(_96758_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("invalid syntax", 14), jule::Slice<jule::Any>());
			_1abe14021_pushSuggestion((*(_96743_e)).ptr(), jule::Str::lit("expected type declaration", 25), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9989_alias))._field_Kind))._field_Kind=(*(_101513_cti))._field_base;
	};
	_1ab6628d5_checkTypeAlias(_9979_sc, &(_9989_alias));
	return _1abe3c7db_buildVoidData();;
}



inline jule::Ptr<_1abe11936_Data> _1ac0373ca_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _102735_e, jule::Ptr<_1abd288a3_FnCallExpr>* _102750_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<_1abe11936_Data> _10289_result = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02b0d3_primUint, });;
	if (((*((*(_102750_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_102735_e)).ptr(), (*((*(_102750_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10289_result;;
	};
	if (((*((*(_102750_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _10409_d = _1abe30aa9_evalExprKind((*(_102735_e)), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10409_d == nullptr)) {
		return _10289_result;;
	};
	if ((!(_1abe60600_validTypeForXof(&((*(_10409_d))._field_Kind))))) {
		_1abe13bad_pushErr((*(_102735_e)).ptr(), (*((*((*(_102750_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_10409_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type4)}));
	};
	(*(_10289_result))._field_Model=jule::Any(jule::new_ptr<_1abd527de_SizeofExprModel>(_1abd527de_SizeofExprModel{._field_Expr=(*(_10409_d))._field_Model}), &__jule_any_type117);
	return _10289_result;;
}



inline jule::Ptr<_1abe11936_Data> _1ac037809_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _105236_e, jule::Ptr<_1abd288a3_FnCallExpr>* _105251_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<_1abe11936_Data> _10539_result = jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02b0d3_primUint, });;
	if (((*((*(_105251_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_105236_e)).ptr(), (*((*(_105251_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type4)}));
		return _10539_result;;
	};
	if (((*((*(_105251_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _10659_d = _1abe30aa9_evalExprKind((*(_105236_e)), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10659_d == nullptr)) {
		return _10539_result;;
	};
	if ((!(_1abe60600_validTypeForXof(&((*(_10659_d))._field_Kind))))) {
		_1abe13bad_pushErr((*(_105236_e)).ptr(), (*((*((*(_105251_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1abe431e8_Str((*(_10659_d))._field_Kind.ptr()), &__jule_any_type4),jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type4)}));
	};
	(*(_10539_result))._field_Model=jule::Any(jule::new_ptr<_1abd529cb_AlignofExprModel>(_1abd529cb_AlignofExprModel{._field_Expr=(*(_10659_d))._field_Model}), &__jule_any_type118);
	return _10539_result;;
}



inline jule::Ptr<_1abe11936_Data> _1ac037c38_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _107733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _107748_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_107748_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_107733_e)).ptr(), (*((*(_107748_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("h", 1), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_107748_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("Free", 4), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _10869_d = _1abe318bd_evalExpr((*(_107733_e)), (*((*(_107748_fc))))._field_Args[0LL]);;
	if ((_10869_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe44e64_PerformsRC((*(_10869_d))._field_Kind.ptr())))) {
		_1abe13bad_pushErr((*(_107733_e)).ptr(), (*((*((*(_107748_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abe11936_Data> _10959_result = _1abe3c7db_buildVoidData();;
	(*(_10959_result))._field_Model=jule::Any(jule::new_ptr<_1abd53746_FreeExprModel>(_1abd53746_FreeExprModel{._field_Expr=(*(_10869_d))._field_Model}), &__jule_any_type32);
	return _10959_result;;
}



inline jule::Ptr<_1abe11936_Data> _1ac038167_builtinCallerStdJuleIntegratedToStr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _110045_e, jule::Ptr<_1abd288a3_FnCallExpr>* _110060_fc, jule::Ptr<_1abe11936_Data>* ) {
	if (((*((*(_110060_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_110045_e)).ptr(), (*((*(_110060_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("expr", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((*((*(_110060_fc))))._field_Args.len() > 1LL)) {
		_1abe13bad_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[1LL]))._field_Token, jule::Str::lit("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("ToStr", 5), &__jule_any_type4)}));
	};
	jule::Ptr<_1abe11936_Data> _11099_d = _1abe318bd_evalExpr((*(_110045_e)), (*((*(_110060_fc))))._field_Args[0LL]);;
	if ((_11099_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1abe5e5aa_isBuiltinStrConvertable(&((*(_11099_d))._field_Kind))))) {
		_1abe13bad_pushErr((*(_110045_e)).ptr(), (*((*((*(_110060_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abe11936_Data>(_1abe11936_Data{._field_Kind=_1ac02a7b9_primStr, ._field_Model=jule::Any(jule::new_ptr<_1abd53070_IntegratedToStrExprModel>(_1abd53070_IntegratedToStrExprModel{._field_Expr=(*(_11099_d))._field_Model}), &__jule_any_type119), });;
}



inline jule::Ptr<_1abe11936_Data> _1ac038596_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _112744_e, jule::Ptr<_1abd288a3_FnCallExpr>* _112759_fc, jule::Ptr<_1abe11936_Data>* _112781_d) {
	if ((!(_1abe146a3_isUnsafe((*(_112744_e)).ptr())))) {
		_1abe13bad_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*((*(_112759_fc))))._field_Args.len() < 1LL)) {
		_1abe13bad_pushErr((*(_112744_e)).ptr(), (*((*(_112759_fc))))._field_Token, jule::Str::lit("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("code", 4), &__jule_any_type4)}));
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _11379_argd = _1abe318bd_evalExpr((*(_112744_e)), (*((*(_112759_fc))))._field_Args[0LL]);;
	if ((_11379_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1abe45481_Prim((*(_11379_argd))._field_Kind.ptr()) == nullptr) || (!(_1abe4dd91_IsStr(_1abe45481_Prim((*(_11379_argd))._field_Kind).ptr()))))) {
		_1abe13bad_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str::lit("str", 3), &__jule_any_type4),jule::Any(_1abe431e8_Str((*(_11379_argd))._field_Kind), &__jule_any_type4)}));
		return nullptr;;
	};
	if (((!(_1abe1233d_IsConst(_11379_argd.ptr()))) || (!(_1b9ab1c49_IsStr((*(_11379_argd))._field_Constant.ptr()))))) {
		_1abe13bad_pushErr((*(_112744_e)).ptr(), (*((*((*(_112759_fc))))._field_Args[0LL]))._field_Token, jule::Str::lit("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abe11936_Data> _11529_r = _1abe3c7db_buildVoidData();;
	jule::Ptr<_1abd59681_FnIns> _11549_f = _1abe4676d_Fn((*((*(_112781_d))))._field_Kind);;
	if (((*(_11549_f))._field_Generics.len() > 0LL)) {
		(*(_11529_r))._field_Kind=(*((*_11549_f.alloc)._field_Generics[0LL]))._field_Kind;
	};
	jule::Ptr<_1abd53449_BackendEmitExprModel> _11599_model = jule::new_ptr<_1abd53449_BackendEmitExprModel>(_1abd53449_BackendEmitExprModel{._field_Code=_1b9aae64d_ReadStr((*(_11379_argd))._field_Constant), });;
	if (((*((*(_112759_fc))))._field_Args.len() > 1LL)) {
		(*(_11599_model))._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*((*(_112759_fc))))._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*((*(_112759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b1ad3cc9:;
			if (it != expr_end) {
				jule::Ptr<_1abd24b79_Expr> _116521_arg = *it;
				{
					_11379_argd=_1abe30dea_eval1((*(_112744_e)), _116521_arg);
					if ((_11379_argd == nullptr)) {
						return nullptr;;
					};
					(*_11599_model.alloc)._field_Exprs=jule::append((*_11599_model.alloc)._field_Exprs,jule::Slice<jule::Any>::make({(*(_11379_argd))._field_Model}));
				}
				_iter_next_1b1ad3cc9:;
				++it;
				goto _iter_begin_1b1ad3cc9;
			}
			_iter_end_1b1ad3cc9:;
		};
	};
	(*_11529_r.alloc)._field_Model=jule::Any(_11599_model, &__jule_any_type24);
	return _11529_r;;
}



inline jule::Ptr<_1abe11936_Data> _1ac0389c5_builtinCallerStdDebugOut(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _117834_e, jule::Ptr<_1abd288a3_FnCallExpr>* _117849_fc, jule::Ptr<_1abe11936_Data>* _117871_d) {
	(*(_117871_d))=_1ac03035c_builtinCallerOut(nullptr, _117834_e, _117849_fc, _117871_d);
	if (((*(_117871_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_117871_d))))._field_Model.cast_ptr<_1abd4e401_BuiltinOutCallExprModel>(&__jule_any_type26)))._field_Debug=true;
	return (*(_117871_d));;
}



inline jule::Ptr<_1abe11936_Data> _1ac038e04_builtinCallerStdDebugOutln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _118736_e, jule::Ptr<_1abd288a3_FnCallExpr>* _118751_fc, jule::Ptr<_1abe11936_Data>* _118773_d) {
	(*(_118773_d))=_1ac03078b_builtinCallerOutln(nullptr, _118736_e, _118751_fc, _118773_d);
	if (((*(_118773_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*((*(_118773_d))))._field_Model.cast_ptr<_1abd4e7ca_BuiltinOutlnCallExprModel>(&__jule_any_type27)))._field_Debug=true;
	return (*(_118773_d));;
}



inline jule::Ptr<_1ac899764_FileInfo> _1ac89c4ae_ParseFile(jule::Ptr<_1abd10b21_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac899764_FileInfo> _279_finf = jule::new_ptr<_1ac899764_FileInfo>();;
	({
		__jule_tuple_x_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_assign_result = _1ac8e0dd7_parseFileset(_2318_f);
		(*_279_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_279_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_279_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_279_finf.alloc)._field_Ast=nullptr;
	};
	return _279_finf;;
}



inline __jule_tuple_x_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log _1ac8e0dd7_parseFileset(jule::Ptr<_1abd10b21_File> _5521_f) {
	__jule_tuple_x_1abd1d931_Ast__jule_tuple_s_1eb22e132_Log __jule_func_result;
	jule::Ptr<_1ac911a1d_parser> _569_p = jule::new_ptr<_1ac911a1d_parser>();;
	_1ac922875_parse(_569_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_569_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_569_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1abd30866_ScopeTree> _1ac8e1877_newScope(void) {
	return jule::new_ptr<_1abd30866_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac8e1c0c_isSt(jule::Ptr<_1abd0a38a_Token> _499_current, jule::Ptr<_1abd0a38a_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_499_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_4926_prev))._field_Row < (*_499_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_499_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ac8e2081_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*((*(_5526_tokens))[((*(_5545_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1abd0a38a_Token> _619_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return (((*(_619_prev))._field_Id == static_cast<jule::U32>(17LLU)) || (_1abd0add5_IsBinOp((*_619_prev.alloc)._field_Id) && ((*_619_prev.alloc)._field_Row < (*((*(_5526_tokens))[(*(_5545_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ac8e2449_nextStPos(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _699_braceN = 0LL;;
	jule::I32 _709_i = _6833_start;;
	for (; (_709_i < (*(_6815_tokens)).len()); (_709_i)++) {
		{
			jule::Bool _7213_ok = false;;
			jule::Bool _7313_terminated = false;;
			jule::Ptr<_1abd0a38a_Token> _749_tok = (*(_6815_tokens))[_709_i];;
			{
				auto &_match_expr{ (*(_749_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1b61c03:;
					{
						if (((_699_braceN == 0LL) && (_709_i > _6833_start))) {
							if ((!(_1ac8e2081_prevIsIncompleteExpr(_6815_tokens, &(_709_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac8e1c0c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
									_7213_ok = __jule_assign_result.__jule_result_arg0;
									_7313_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7213_ok) {
									goto _julec_label_1b1b61b48;
								};
							};
						};
						(_699_braceN)++;
						goto _iter_next_1b1b607b2;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1b61e67:;
					{
						(_699_braceN)--;
						if (((_699_braceN == 0LL) && ((_709_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac8e1c0c_isSt((*(_6815_tokens))[(_709_i + 1LL)], _749_tok);
								_7213_ok = __jule_assign_result.__jule_result_arg0;
								_7313_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7213_ok) {
								(_709_i)++;
								goto _julec_label_1b1b61b48;
							};
						};
						goto _iter_next_1b1b607b2;
					}
				}
				_match_end_1b1b61de0:;
			};
			if ((_699_braceN != 0LL)) {
				goto _iter_next_1b1b607b2;
			};
			if ((_709_i > _6833_start)) {
				if (_1ac8e2081_prevIsIncompleteExpr(_6815_tokens, &(_709_i))) {
					goto _iter_next_1b1b607b2;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac8e1c0c_isSt(_749_tok, (*(_6815_tokens))[(_709_i - 1LL)]);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac8e1c0c_isSt(_749_tok, _749_tok);
					_7213_ok = __jule_assign_result.__jule_result_arg0;
					_7313_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7213_ok))) {
				goto _iter_next_1b1b607b2;
			};
			_julec_label_1b1b61b48:;
			if (_7313_terminated) {
				(_709_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _709_i;
			__jule_func_result.__jule_result_arg1 = _7313_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b1b607b2:;
	}
	_iter_end_1b1b607b2:;;
	__jule_func_result.__jule_result_arg0 = _709_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool _1ac8e27bd_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1abd0a38a_Token>> _13028_tokens) {
	__jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1315_start = (*(_13016_i));;
	jule::Bool _1329_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac8e2449_nextStPos(&(_13028_tokens), _1315_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_1329_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1349_stTokens = _13028_tokens.slice(_1315_start, (*(_13016_i)));;
	if (_1329_terminated) {
		if ((_1349_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1ac8e27bd_skipSt(_13016_i, _13028_tokens));
return __jule_func_result;;
		};
		(_1349_stTokens).mut_slice(0LL, (_1349_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1349_stTokens;
	__jule_func_result.__jule_result_arg1 = _1329_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _1ac8e2ea5_splitStmts(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _15120_tokens) {
	jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> _1529_stmts = jule::Slice<jule::Ptr<_1ac8e2aed_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _1539_pos = 0LL;;
	while ((_1539_pos < (*(_15120_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1abd0a38a_Token>> _15513_stmt;
			jule::Bool _15519_terminated;
			({
				__jule_tuple_sx_1abd0a38a_Token__jule_tuple_bool __jule_assign_result = _1ac8e27bd_skipSt(&(_1539_pos), (*(_15120_tokens)));
				_15513_stmt = __jule_assign_result.__jule_result_arg0;
				_15519_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ac8e2aed_stmt>> &__jule_push_dest = _1529_stmts; __jule_push_dest.push(jule::new_ptr<_1ac8e2aed_stmt>(_1ac8e2aed_stmt{._field_tokens=_15513_stmt, ._field_terminated=_15519_terminated})); };
		}
	_iter_next_1b1b6a14b:;
	}
	_iter_end_1b1b6a14b:;;
	return _1529_stmts;;
}



inline jule::Bool _1ac90b60b_isTypeOp(jule::U32* _89314_id) {
	return ((((*(_89314_id)) == static_cast<jule::U32>(65LLU)) || ((*(_89314_id)) == static_cast<jule::U32>(54LLU))) || ((*(_89314_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1ac90b919_isTypeRange(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _90021_tokens) {
	jule::Bool _9019_op = false;;
	{
		auto expr = _90021_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1c40177:;
		if (it != expr_end) {
			jule::I32 _9029_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _90212_token = *it;
			{
				if (((*(_90212_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_9019_op) {
						return true;;
					};
					jule::I32 _90717_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1abd0a38a_Token>> _90817_lTokens = (*(_90021_tokens)).slice(_9029_i);;
					{
						auto expr = &(_90817_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1c41ab3:;
						if (it != expr_end) {
							jule::Ptr<_1abd0a38a_Token> _90920_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_90920_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1b1c42355:;
										{
											(_90717_rangeN)++;
											goto _iter_next_1b1c41ab3;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1b1c4272e:;
										{
											(_90717_rangeN)--;
											goto _iter_next_1b1c41ab3;
										}
									}
									_match_end_1b1c42641:;
								};
								if ((_90717_rangeN == 0LL)) {
									return _1ac90b60b_isTypeOp(&((*(_90920_lToken))._field_Id));;
								};
							}
							_iter_next_1b1c41ab3:;
							++it;
							goto _iter_begin_1b1c41ab3;
						}
						_iter_end_1b1c41ab3:;
					};
					return true;;
				};
				if ((!(_1ac90b60b_isTypeOp(&((*_90212_token.alloc)._field_Id))))) {
					return false;;
				};
				_9019_op=true;
			}
			_iter_next_1b1c40177:;
			++it;
			_9029_i++;
			goto _iter_begin_1b1c40177;
		}
		_iter_end_1b1c40177:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac90bbd3_getBlockExpr(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _93322_tokens) {
	jule::I32 _9349_braceN = 0LL;;
	jule::I32 _9359_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1c43c19:;
		if (it != expr_end) {
			jule::I32 _9369_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _93612_tok = *it;
			{
				{
					auto &_match_expr{ (*(_93612_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b1c45402:;
						{
							if (((((*(_93322_tokens)).len() - _9369_i) > 1LL) && ((*((*(_93322_tokens))[(_9369_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9359_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b1c4548a:;
						{
							if (((_9349_braceN > 0LL) || (_9359_skipToNextBraceClose > 0LL))) {
								if ((_9359_skipToNextBraceClose > 0LL)) {
									(_9359_skipToNextBraceClose)--;
								};
								(_9349_braceN)++;
								goto _match_end_1b1c45347;
							};
							return (*(_93322_tokens)).slice(0LL, _9369_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1c45501:;
						{
							(_9349_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1c45567:;
						{
							(_9349_braceN)--;
						}
					}
					_match_end_1b1c45347:;
				};
			}
			_iter_next_1b1c43c19:;
			++it;
			_9369_i++;
			goto _iter_begin_1b1c43c19;
		}
		_iter_end_1b1c43c19:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token _1ac90c09b_splitDelim(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _96520_tokens, jule::U32 _96538_delim) {
	__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_func_result;
	jule::I32 _9669_func = -1LL;;
	jule::I32 _9679_rangeN = 0LL;;
	jule::I32 _9689_i = 0LL;;
	for (; (_9689_i < (*(_96520_tokens)).len()); (_9689_i)++) {
		{
			jule::Ptr<_1abd0a38a_Token> _9709_token = (*(_96520_tokens))[_9689_i];;
			{
				auto &_match_expr{ (*(_9709_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1b1c49cdb:;
					{
						_9669_func=_9679_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1c49d52:;
					{
						(_9679_rangeN)++;
						goto _iter_next_1b1c485c0;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1c49db8:;
					{
						(_9679_rangeN)--;
						if ((_9669_func == _9679_rangeN)) {
							_9669_func=-1LL;
							if (((((*(_96520_tokens)).len() - _9689_i) > 1LL) && ((*((*(_96520_tokens))[(_9689_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9689_i)++;
								goto _iter_next_1b1c485c0;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1b1c49e2e:;
					{
						(_9679_rangeN)--;
					}
				}
				_match_end_1b1c49c86:;
			};
			if ((((*(_9709_token))._field_Id == _96538_delim) && (_9679_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _99417_l = (*(_96520_tokens)).slice(0LL, _9689_i);;
				jule::Slice<jule::Ptr<_1abd0a38a_Token>> _99517_r = (*(_96520_tokens)).slice((_9689_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _99417_l;
				__jule_func_result.__jule_result_arg1 = _99517_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1b1c485c0:;
	}
	_iter_end_1b1c485c0:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1ac90c365_findLowestPrecOp(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _100422_tokens) {
	jule::U8 _10099_prec = 255LLU;;
	jule::I32 _10109_precPos = -1LL;;
	jule::I32 _10129_braceN = 0LL;;
	jule::Bool _10139_skipToNextBraceOpen = false;;
	{
		auto expr = _100422_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1c500ee:;
		if (it != expr_end) {
			jule::I32 _10149_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> *_101412_token = it;
			{
				{
					auto &_match_expr{ (*((*(_101412_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b1c50d8b:;
						{
							_10139_skipToNextBraceOpen=false;
							goto _case_begin_1b1c50e24;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b1c50e24:;
						{
							(_10129_braceN)++;
							goto _iter_next_1b1c500ee;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b1c50e8a:;
						{
							(_10129_braceN)--;
							goto _iter_next_1b1c500ee;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1b1c51001:;
						{
							_10139_skipToNextBraceOpen=true;
							goto _iter_next_1b1c500ee;
						}
					}
					_match_end_1b1c50cd1:;
				};
				{
					
					if (_10139_skipToNextBraceOpen) {
						_case_begin_1b1c526a6:;
						{
							goto _iter_next_1b1c500ee;
						}
					}
					else if ((_10149_i == 0LL)) {
						_case_begin_1b1c5271c:;
						{
							goto _iter_next_1b1c500ee;
						}
					}
					else if ((_10129_braceN > 0LL)) {
						_case_begin_1b1c52783:;
						{
							goto _iter_next_1b1c500ee;
						}
					}
					else if ((!(_1abd0add5_IsBinOp((*((*(_101412_token))))._field_Id)))) {
						_case_begin_1b1c527e9:;
						{
							goto _iter_next_1b1c500ee;
						}
					}
					_match_end_1b1c52541:;
				};
				jule::Ptr<_1abd0a38a_Token> _10439_left = (*(_100422_tokens))[(_10149_i - 1LL)];;
				if ((_1abd0aac7_IsUnaryOp((*(_10439_left))._field_Id) || ((*_10439_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1b1c500ee;
				};
				if (((_10149_i > 1LL) && ((*_10439_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1abd0a38a_Token> _105113_lleft = (*(_100422_tokens))[(_10149_i - 2LL)];;
					if (((*(_105113_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_101412_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_101412_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1b1c500ee;
						};
					};
				};
				jule::U8 _10609_p = _1abd0a70e_Prec((*(_101412_token)));;
				if (((_10609_p != 0LLU) && (_10609_p <= _10099_prec))) {
					_10099_prec=_10609_p;
					_10109_precPos=_10149_i;
				};
			}
			_iter_next_1b1c500ee:;
			++it;
			_10149_i++;
			goto _iter_begin_1b1c500ee;
		}
		_iter_end_1b1c500ee:;
	};
	return _10109_precPos;;
}



inline jule::Ptr<_1abd26494_IdentExpr> _1ac90c62e_buildIdentExpr(jule::Ptr<_1abd0a38a_Token>* _106924_token) {
	return jule::new_ptr<_1abd26494_IdentExpr>(_1abd26494_IdentExpr{._field_Token=(*(_106924_token)), ._field_Ident=(*((*(_106924_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_int _1ac90c8e8_getRangeExprTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _107728_tokens) {
	__jule_tuple_sx_1abd0a38a_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10789_rangeN = 0LL;;
	jule::I32 _10799_i = ((*(_107728_tokens)).len() - 1LL);;
	for (; (_10799_i >= 0LL); (_10799_i)--) {
		{
			jule::Ptr<_1abd0a38a_Token> _10819_tok = (*(_107728_tokens))[_10799_i];;
			{
				auto &_match_expr{ (*(_10819_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b120003e:;
					{
						(_10789_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b120034c:;
					{
						(_10789_rangeN)--;
					}
				}
				_match_end_1b12002e7:;
			};
			if ((_10789_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_107728_tokens)).slice(0LL, _10799_i);
				__jule_func_result.__jule_result_arg1 = _10789_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b11ee34b:;
	}
	_iter_end_1b11ee34b:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10789_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ac90ccc2_isAnonFnHead(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _110018_tokens) {
	{
		auto &_match_expr{ (*((*(_110018_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b1201c88:;
			{
				if ((((*(_110018_tokens)).len() == 1LL) || ((*((*(_110018_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1b12021ea;
				};
				goto _case_begin_1b120232c;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b120232c:;
			{
				if (((*((*(_110018_tokens))[((*(_110018_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1b12021ea;
				};
				return true;;
			}
		}
		_match_end_1b12021ea:;
	};
	return false;;
}



inline jule::Bool _1ac90d9c6_checkAssignTokens(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1abd0eb53_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _209_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1da3a27:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*((*(_2112_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1da4231:;
						{
							(_209_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1da45d8:;
						{
							(_209_braceN)--;
						}
					}
					_match_end_1b1da44ea:;
				};
				{
					
					if ((_209_braceN < 0LL)) {
						_case_begin_1b1da5771:;
						{
							return false;;
						}
					}
					else if ((_209_braceN > 0LL)) {
						_case_begin_1b1da5809:;
						{
							goto _iter_next_1b1da3a27;
						}
					}
					else if (_1abd101d6_IsAssignOp((*((*(_2112_t))))._field_Id) || ((*(*(_2112_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1b1da5870:;
						{
							return true;;
						}
					}
					_match_end_1b1da571b:;
				};
			}
			_iter_next_1b1da3a27:;
			++it;
			goto _iter_begin_1b1da3a27;
		}
		_iter_end_1b1da3a27:;
	};
	return false;;
}



inline _1eb22e132_Log _1ac90eb92_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1abd10b21_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*((*(_5133_f))))._field_Path, ._field_Text=_1eb22e594_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1abd0a38a_Token>> _1ac9101c0_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1abd0a38a_Token> _735_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if (((*(_735_tok))._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _789_rangeN = 1LL;;
	jule::I32 _795_start = (*(_6915_i));;
	for (; ((_789_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1abd0a38a_Token> _819_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ (*(_819_token))._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1b1daa80e:;
					{
						(_789_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1b1daab61:;
					{
						(_789_rangeN)--;
					}
				}
				_match_end_1b1daaad9:;
			};
		}
	_iter_next_1b1da9c1a:;
	}
	_iter_end_1b1da9c1a:;;
	return (*(_6959_tokens)).slice(_795_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token _1ac910489_rangeLast(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _9919_tokens) {
	__jule_tuple_sx_1abd0a38a_Token__jule_tuple_sx_1abd0a38a_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1035_first = (*((*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_1035_first != static_cast<jule::U32>(73LLU)) && (_1035_first != static_cast<jule::U32>(76LLU))) && (_1035_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1099_braceN = 0LL;;
	jule::I32 _1109_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_1109_i >= 0LL); (_1109_i)--) {
		{
			jule::Ptr<_1abd0a38a_Token> _1129_token = (*(_9919_tokens))[_1109_i];;
			{
				auto &_match_expr{ (*(_1129_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b1daeadd:;
					{
						(_1099_braceN)++;
						goto _iter_next_1b1dadda6;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b1daedeb:;
					{
						(_1099_braceN)--;
					}
				}
				_match_end_1b1daed96:;
			};
			if ((_1099_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _1109_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_1109_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b1dadda6:;
	}
	_iter_end_1b1dadda6:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log _1ac910940_parts(jule::Slice<jule::Ptr<_1abd0a38a_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1abd0a38a_Token__jule_tuple_s_1eb22e132_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1419_rangeN = 0LL;;
	jule::I32 _1429_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1db2c34:;
		if (it != expr_end) {
			jule::I32 _1439_i = it - expr->begin();
			jule::Ptr<_1abd0a38a_Token> _14312_token = *it;
			{
				{
					auto &_match_expr{ (*(_14312_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b1db3c57:;
						{
							(_1419_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b1db3cce:;
						{
							(_1419_rangeN)--;
						}
					}
					else if (_match_expr == _13733_id) {
						_case_begin_1b1db3d45:;
						{
							if ((_1419_rangeN > 0LL)) {
								goto _iter_next_1b1db2c34;
							};
							if ((_13746_exprMust && ((_1439_i - _1429_last) <= 0LL))) {
								_1eb22e132_Log _15417_err = _1ac90eb92_makeErr((*(_14312_token))._field_Row, (*_14312_token.alloc)._field_Column, &((*_14312_token.alloc)._field_File), jule::Str::lit("expression missing", 18), jule::Slice<jule::Any>());;
								{ jule::Slice<_1eb22e132_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_15417_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last, _1439_i)); };
							_1429_last=(_1439_i + 1LL);
						}
					}
					_match_end_1b1db3b9c:;
				};
			}
			_iter_next_1b1db2c34:;
			++it;
			_1439_i++;
			goto _iter_begin_1b1db2c34;
		}
		_iter_end_1b1db2c34:;
	};
	if ((_1429_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1abd0a38a_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_13715_tokens)).slice(_1429_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1ac910bc6_getCloseOfBrace(jule::U32 _16720_left) {
	{
		auto &_match_expr{ _16720_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b1db72aa:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b1db7321:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b1db7387:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1b1db364c:;
			{
				return _16720_left;;
			}
		}
		_match_end_1b1db376d:;
	};
}



inline _1eb22e132_Log _1ac911105_compilerErr(jule::Ptr<_1abd0a38a_Token>* _18017_token, jule::Str* _18033_fmt, jule::Slice<jule::Any> _18046_args) {
	return _1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_18017_token))))._field_Row, ._field_Column=(*((*(_18017_token))))._field_Column, ._field_Path=(*((*((*(_18017_token))))._field_File))._field_Path, ._field_Text=_1eb22e594_Logf((*(_18033_fmt)), _18046_args), ._field_Line=_1abd11b33_GetRow((*((*(_18017_token))))._field_File, (*((*(_18017_token))))._field_Row), };;
}



inline void _1ac91149b_pushSuggestion(_1eb22e132_Log* _19130_log, jule::Str _19141_fmt, jule::Slice<jule::Any> _19154_args) {
	(*(_19130_log))._field_Suggestion=_1eb22e594_Logf(_19141_fmt, _19154_args);
}



inline jule::Ptr<_1abd20845_TypeDecl> _1ac92337b_buildVoidType(void) {
	return jule::new_ptr<_1abd20845_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac15b774_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str::lit("windows", 7)) {
			_case_begin_1b1973284:;
			{
				__jule_func_result.__jule_result_arg0=_1eb2322ab_IsWindows(_20b1a0ca8_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("darwin", 6)) {
			_case_begin_1b1972dee:;
			{
				__jule_func_result.__jule_result_arg0=_1eb2325b9_IsDarwin(_20b1a0ca8_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("linux", 5)) {
			_case_begin_1b1972e65:;
			{
				__jule_func_result.__jule_result_arg0=_1eb232883_IsLinux(_20b1a0ca8_Os);
			}
		}
		else if (_match_expr == jule::Str::lit("unix", 4)) {
			_case_begin_1b1972ecb:;
			{
				__jule_func_result.__jule_result_arg0=_1eb2334dd_IsUnix(_20b1a0ca8_Os);
			}
		}
		else {
			_case_begin_1b1972915:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b1972a36:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1ac15b8b7_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str::lit("i386", 4)) {
			_case_begin_1b1975462:;
			{
				__jule_func_result.__jule_result_arg0=_1eb232bc4_IsI386(_20b1a1061_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("amd64", 5)) {
			_case_begin_1b19750cc:;
			{
				__jule_func_result.__jule_result_arg0=_1eb232e5a_IsAmd64(_20b1a1061_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("arm64", 5)) {
			_case_begin_1b1975143:;
			{
				__jule_func_result.__jule_result_arg0=_1eb233224_IsArm64(_20b1a1061_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x64", 3)) {
			_case_begin_1b19751a9:;
			{
				__jule_func_result.__jule_result_arg0=_1eb233b09_Is64Bit(_20b1a1061_Arch);
			}
		}
		else if (_match_expr == jule::Str::lit("x32", 3)) {
			_case_begin_1b1975220:;
			{
				__jule_func_result.__jule_result_arg0=_1eb2338b7_Is32Bit(_20b1a1061_Arch);
			}
		}
		else {
			_case_begin_1b1974ae3:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b1974c14:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1ac15ba60_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_20b0e5824_Base(_5029_p);
	jule::I32 _525_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_525_n - _20b0e5291_Ext(_5029_p).len()));;
	jule::Str _589_a1 = jule::Str();;
	jule::Str _619_a2 = jule::Str();;
	jule::I32 _649_i = _20b0dcad5_FindLastByte(_5029_p, '_');;
	if ((_649_i == -1LL)) {
		jule::Bool _6713_ok;
		jule::Bool _6721_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b774_checkOs(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6721_exist) {
			return _6713_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b8b7_checkArch(_5029_p);
			_6713_ok = __jule_assign_result.__jule_result_arg0;
			_6721_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6721_exist)) || _6713_ok);;
	};
	if (((_649_i + 1LL) >= _525_n)) {
		return true;;
	};
	_589_a1=_5029_p.slice((_649_i + 1LL));
	(_5029_p).mut_slice(0LL, _649_i);;
	_649_i=_20b0dcad5_FindLastByte(_5029_p, '_');
	if ((_649_i != -1LL)) {
		_619_a2=_5029_p.slice((_649_i + 1LL));
	};
	if ((_619_a2).empty()) {
		jule::Bool _8813_ok;
		jule::Bool _8821_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b774_checkOs(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8821_exist) {
			return _8813_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b8b7_checkArch(_589_a1);
			_8813_ok = __jule_assign_result.__jule_result_arg0;
			_8821_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8821_exist)) || _8813_ok);;
	};
	jule::Bool _969_ok;
	jule::Bool _9617_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b8b7_checkArch(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9617_exist) {
		if ((!(_969_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b774_checkOs(_619_a2);
			_969_ok = __jule_assign_result.__jule_result_arg0;
			_9617_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9617_exist)) || _969_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ac15b774_checkOs(_589_a1);
		_969_ok = __jule_assign_result.__jule_result_arg0;
		_9617_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9617_exist)) || _969_ok);;
}



inline void _1ac17c256_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_20b1a0ca8_Os); };
	if (_1eb2334dd_IsUnix(_20b1a0ca8_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ac17c4cb_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_20b1a1061_Arch); };
	if (_1eb233b09_Is64Bit(_20b1a1061_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1eb2338b7_Is32Bit(_20b1a1061_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ac17c7b7_initVars(jule::Slice<jule::Str>* _5518_vars, _1ac17be37_CompileInfo* _5532_info) {
	_1ac17c256_setOsVars(_5518_vars);
	_1ac17c4cb_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b198101c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b1980967:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1b19808ce:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b1980a00:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b1981737:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b198179d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1b19816d2:;
	};
}



inline jule::Slice<jule::U8> _1ac92733b_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__209c257da_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str::lit("error: file cannot read", 23));
			;
			_20b19ec0d_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1eb22e132_Log _1ac927649_flatCompilerErr(jule::Str _4120_text) {
	return _1eb22e132_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ac92bce1_pushPasses(jule::Ptr<_1ab67a535_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*((*(_11120_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19bc08b:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _11217_f = *it;
			{
				_julec_label_1b19bc6b8:;
				{
					auto expr = &((*(_11217_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19bcb19:;
					if (it != expr_end) {
						_1abd5dd6c_Pass _11416_pass = *it;
						{
							if ((_11416_pass._field_Text).empty()) {
								goto _iter_next_1b19bcb19;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b19bd6db:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b19bcb19;
										};
									}
									_iter_next_1b19bd6db:;
									++it;
									goto _iter_begin_1b19bd6db;
								}
								_iter_end_1b19bd6db:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1b19bcb19:;
						++it;
						goto _iter_begin_1b19bcb19;
					}
					_iter_end_1b19bcb19:;
				};
			}
			_iter_next_1b19bc08b:;
			++it;
			goto _iter_begin_1b19bc08b;
		}
		_iter_end_1b19bc08b:;
	};
}



inline jule::Slice<jule::Str> _1ac92c1a9_getAllUniquePasses(jule::Ptr<_1ab67a535_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1ab67760e_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ac92bce1_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19becb4:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _13217_u = *it;
			{
				if ((!((*(_13217_u))._field_Binded))) {
					_1ac92bce1_pushPasses(&((*_13217_u.alloc)._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b19becb4:;
			++it;
			goto _iter_begin_1b19becb4;
		}
		_iter_end_1b19becb4:;
	};
	return _12913_passes;;
}



inline _1ac17be37_CompileInfo _1ac92c3b8_buildCompileInfo(void) {
	_1ac17be37_CompileInfo _1429_info = _1ac17be37_CompileInfo{._field_Prod=_1eb3d059c_Production, ._field_Test=_1eb3cebd9_Test, };;
	{
		auto &_match_expr{ _1eb3ce117_Compiler };
		
		if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b19c11a0:;
			{
				_1429_info._field_Compiler=jule::Str::lit("clang", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b19c1315:;
			{
				_1429_info._field_Compiler=jule::Str::lit("gcc", 3);
			}
		}
		_match_end_1b19c128d:;
	};
	{
		auto &_match_expr{ _1eb3ce447_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b19c139d:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b19c1e3c:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b19c16cd:;
			{
				_1429_info._field_CppStd=jule::Str::lit("cpp20", 5);
			}
		}
		_match_end_1b19c20d5:;
	};
	return _1429_info;;
}



inline void _1ac92cad3_IterPackages(jule::Ptr<_1ac92a43d_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ab67a535_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19dd83d:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> _817_used = *it;
			{
				if ((!((*(_817_used))._field_Binded))) {
					_731_f(&((*_817_used.alloc)._field_Package));
				};
			}
			_iter_next_1b19dd83d:;
			++it;
			goto _iter_begin_1b19dd83d;
		}
		_iter_end_1b19dd83d:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1ac92ce13_IterFiles(jule::Ptr<_1ab67a535_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1abe0b5bd_SymbolTable>*> _1634_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19dee7c:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _1717_file = *it;
			{
				_1634_f(&(_1717_file));
			}
			_iter_next_1b19dee7c:;
			++it;
			goto _iter_begin_1b19dee7c;
		}
		_iter_end_1b19dee7c:;
	};
}



inline void _1ac92d2a9_iterTraitInheritMethods(jule::Ptr<_1abd69a59_Trait>* _2233_base, jule::Ptr<_1abd69a59_Trait>* _2252_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _2263_f) {
	_1ac92d6c7_iterTraitInheritMethods1(_2233_base, _2252_t, _2263_f);
	{
		auto expr = &((*((*(_2252_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19e10b0:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _2417_m = *it;
			{
				if ((!(_1ac936cb8_ContainsTraitMethod(_2233_base, &((*(_2417_m))._field_Ident))))) {
					_2263_f(&(_2417_m));
				};
			}
			_iter_next_1b19e10b0:;
			++it;
			goto _iter_begin_1b19e10b0;
		}
		_iter_end_1b19e10b0:;
	};
}



inline void _1ac92d6c7_iterTraitInheritMethods1(jule::Ptr<_1abd69a59_Trait>* _3134_base, jule::Ptr<_1abd69a59_Trait>* _3153_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _3164_f) {
	{
		auto expr = &((*((*(_3153_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19e2435:;
		if (it != expr_end) {
			jule::Ptr<_1abe4a002_TypeSymbol> _3217_inh = *it;
			{
				jule::Ptr<_1abd69a59_Trait> _3313_t2 = _1abe46c8a_Trait((*(_3217_inh))._field_Kind.ptr());;
				_1ac92d2a9_iterTraitInheritMethods(_3134_base, &(_3313_t2), _3164_f);
			}
			_iter_next_1b19e2435:;
			++it;
			goto _iter_begin_1b19e2435;
		}
		_iter_end_1b19e2435:;
	};
}



inline void _1ac92d980_IterTraitMethods(jule::Ptr<_1abd69a59_Trait>* _3926_t, jule::Fn<void,jule::Ptr<_1abd566a0_Fn>*> _3937_f) {
	{
		auto expr = &((*((*(_3926_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19e38ba:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _4017_m = *it;
			{
				_3937_f(&(_4017_m));
			}
			_iter_next_1b19e38ba:;
			++it;
			goto _iter_begin_1b19e38ba;
		}
		_iter_end_1b19e38ba:;
	};
	_1ac92d6c7_iterTraitInheritMethods1(_3926_t, _3926_t, _3937_f);
}



inline jule::Bool _1ac934777_IsForwarded(jule::Ptr<_1ab655576_Scope>* _2317_s) {
	jule::Any _245_last = (*((*(_2317_s))))._field_Stmts[((*((*(_2317_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _245_last };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b19e4e0a:;
			{
				{
					auto &_match_expr{ (*(_245_last.cast_ptr<_1abe11936_Data>(&__jule_any_type23)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b19e50d6:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b19e5ca7:;
						{
							return false;;
						}
					}
					_match_end_1b19e5c52:;
				};
			}
		}
		else {
			_case_begin_1b19e5070:;
			{
				return true;;
			}
		}
		_match_end_1b19e501a:;
	};
}



inline jule::Bool _1ac934a85_IsExprComesFromBind(jule::Ptr<_1abe11936_Data>* _3925_d) {
	{
		auto &_match_expr{ (*((*(_3925_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b19e548d:;
			{
				return (*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1abda8d2e_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b19e6956:;
			{
				return (*((*((*((*((*(_3925_d))))._field_Model.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1b19e648e:;
			{
				return false;;
			}
		}
		_match_end_1b19e6439:;
	};
}



inline jule::Bool _1ac934d4e_IsAny(jule::Ptr<_1abe42d30_TypeKind>* _5115_t) {
	if ((_1abe45eba_TypeEnum((*(_5115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1abe4a909_Prim> _555_prim = _1abe45481_Prim((*(_5115_t)).ptr());;
	return ((_555_prim != nullptr) && _1abe4e127_IsAny(_555_prim));;
}



inline jule::Bool _1ac935190_IsClosure(jule::Ptr<_1abd4b673_AnonFnExprModel>* _6015_m) {
	return ((*((*(_6015_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1ac935426_IsOpMethod(jule::Ptr<_1abd566a0_Fn>* _6316_m) {
	if ((((*((*(_6316_m))))._field_Generics.len() > 0LL) || ((*((*(_6316_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1abd59681_FnIns> _675_mi = (*((*(_6316_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_675_mi == (*(*_675_mi.alloc)._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ac93579a_IsTraitMethod(jule::Ptr<_1abd4445c_StructIns>* _7923_owner, jule::Ptr<_1abd59681_FnIns>* _7943_f) {
	{
		auto expr = &((*((*((*(_7923_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19ec396:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _8017_t = *it;
			{
				if ((_1abd6a708_FindMethod(_8017_t.ptr(), (*((*((*(_7943_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b19ec396:;
			++it;
			goto _iter_begin_1b19ec396;
		}
		_iter_end_1b19ec396:;
	};
	return false;;
}



inline jule::Bool _1ac935b1e_IsStdPackage(jule::Str* _9218_f, jule::Str _9226_p) {
	return _20b0d9dce_HasPrefix((*(_9218_f)), _20b0e500a_Join(jule::Slice<jule::Str>::make({_20b1a024c_PathStdlib,_9226_p})));;
}



inline jule::Ptr<_1abd1ec62_Directive> _1ac93657b_FindDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a07d41:;
		if (it != expr_end) {
			jule::Ptr<_1abd1ec62_Directive> _1017_dr = *it;
			{
				if (((*((*(_1017_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1017_dr;;
				};
			}
			_iter_next_1b1a07d41:;
			++it;
			goto _iter_begin_1b1a07d41;
		}
		_iter_end_1b1a07d41:;
	};
	return nullptr;;
}



inline jule::Bool _1ac936944_HasDirective(jule::Slice<jule::Ptr<_1abd1ec62_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1ac93657b_FindDirective(&((*(_1918_directives))), _1949_tag) != nullptr);;
}



inline jule::Bool _1ac936cb8_ContainsTraitMethod(jule::Ptr<_1abd69a59_Trait>* _2429_t, jule::Str* _2441_ident) {
	{
		auto expr = &((*((*(_2429_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a0998b:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _2512_m = *it;
			{
				if (((*(_2512_m))._field_Ident == (*(_2441_ident)))) {
					return true;;
				};
			}
			_iter_next_1b1a0998b:;
			++it;
			goto _iter_begin_1b1a0998b;
		}
		_iter_end_1b1a0998b:;
	};
	return false;;
}



inline jule::I32 _1ac93747d_FindTraitTypeOffsetS(jule::Ptr<_1abd69a59_Trait> _3725_t, jule::Ptr<_1abd4445c_StructIns> _3740_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _419_i = 0LL;;
	{
		auto expr = &((*_3725_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1a0b66e:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> *_4212_si = it;
			{
				if (((*(_3740_s))._field_Decl == (*(_4212_si)))) {
					{
						auto expr = &((*((*(_4212_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b1a0c50a:;
						if (it != expr_end) {
							jule::Ptr<_1abd4445c_StructIns> *_4420_ins = it;
							{
								if (((*(_4420_ins)) == _3740_s)) {
									return _419_i;;
								};
								(_419_i)++;
							}
							_iter_next_1b1a0c50a:;
							++it;
							goto _iter_begin_1b1a0c50a;
						}
						_iter_end_1b1a0c50a:;
					};
					goto _iter_end_1b1a0b66e;
				} else {
					_419_i+=(*((*(_4212_si))))._field_Instances.len();
				};
			}
			_iter_next_1b1a0b66e:;
			++it;
			goto _iter_begin_1b1a0b66e;
		}
		_iter_end_1b1a0b66e:;
	};
	return -1LL;;
}



inline jule::I32 _1ac937802_FindTraitTypeOffset(jule::Ptr<_1abd69a59_Trait> _6024_t, jule::Ptr<_1abe42d30_TypeKind> _6039_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1abd4445c_StructIns> _6413_s = nullptr;;
	if ((_1abe45717_Sptr(_6039_k.ptr()) != nullptr)) {
		_6039_k=(*(_1abe45717_Sptr(_6039_k)))._field_Elem;
	};
	_6413_s=_1abe46a04_Struct(_6039_k);
	if ((_6413_s == nullptr)) {
		return -1LL;;
	};
	return _1ac93747d_FindTraitTypeOffsetS(_6024_t, _6413_s);;
}



inline jule::Bool _1b19d3503_isOrdered(jule::Ptr<_1abd416ce_Struct>* _1418_t, jule::Slice<jule::Ptr<_1abd416ce_Struct>> _1425_s) {
	_julec_label_1b19d500a:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19d544a:;
		if (it != expr_end) {
			jule::Ptr<_1abd416ce_Struct> *_1612_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19d5abb:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> *_2516_o = it;
						{
							if (((*(_1612_d)) == (*(_2516_o)))) {
								goto _iter_next_1b19d544a;
							};
						}
						_iter_next_1b19d5abb:;
						++it;
						goto _iter_begin_1b19d5abb;
					}
					_iter_end_1b19d5abb:;
				};
				return false;;
			}
			_iter_next_1b19d544a:;
			++it;
			goto _iter_begin_1b19d544a;
		}
		_iter_end_1b19d544a:;
	};
	return true;;
}

inline jule::Bool _1b19d9a9d_isOrdered(jule::Ptr<_1abda8d2e_Var>* _1418_t, jule::Slice<jule::Ptr<_1abda8d2e_Var>> _1425_s) {
	_julec_label_1b19db561:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b19db9a1:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> *_1612_d = it;
			{
				{
					
{
						_case_begin_1b19dc287:;
						{
							if ((*((*(_1612_d))))._field_Constant) {
								goto _iter_next_1b19db9a1;
							};
						}
					}
					_match_end_1b19dc221:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b19dc540:;
					if (it != expr_end) {
						jule::Ptr<_1abda8d2e_Var> *_2516_o = it;
						{
							if (((*(_1612_d)) == (*(_2516_o)))) {
								goto _iter_next_1b19db9a1;
							};
						}
						_iter_next_1b19dc540:;
						++it;
						goto _iter_begin_1b19dc540;
					}
					_iter_end_1b19dc540:;
				};
				return false;;
			}
			_iter_next_1b19db9a1:;
			++it;
			goto _iter_begin_1b19db9a1;
		}
		_iter_end_1b19db9a1:;
	};
	return true;;
}



inline void _1b19d02d0_order(jule::Slice<jule::Ptr<_1abd416ce_Struct>>* _3718_s) {
	jule::I32 _389_i = 0LL;;
	_julec_label_1b19d0753:;
	jule::I32 _409_j = _389_i;;
	_julec_label_1b19d1952:;
	for (; (_409_j < (*(_3718_s)).len()); (_409_j)++) {
		{
			jule::Ptr<_1abd416ce_Struct> _4313_t = (*(_3718_s))[_409_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _389_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b19d26bc:;
				if (it != expr_end) {
					jule::Ptr<_1abd416ce_Struct> _4416_o = *it;
					{
						if ((_4313_t == _4416_o)) {
							goto _iter_next_1b19d1985;
						};
					}
					_iter_next_1b19d26bc:;
					++it;
					goto _iter_begin_1b19d26bc;
				}
				_iter_end_1b19d26bc:;
			};
			if (_1b19d3503_isOrdered(&(_4313_t), (*(_3718_s)).slice(0LL, _389_i))) {
				if ((_389_i != _409_j)) {
					std::swap((*(_3718_s))[_389_i], (*(_3718_s))[_409_j]);
				};
				(_389_i)++;
			};
		}
	_iter_next_1b19d1985:;
	}
	_iter_end_1b19d1985:;;
	if ((_389_i < (*(_3718_s)).len())) {
		goto _julec_label_1b19d0753;
	};
}

inline void _1b19d5934_order(jule::Slice<jule::Ptr<_1abda8d2e_Var>>* _3718_s) {
	jule::I32 _389_i = 0LL;;
	_julec_label_1b19d6d42:;
	jule::I32 _409_j = _389_i;;
	_julec_label_1b19d7eec:;
	for (; (_409_j < (*(_3718_s)).len()); (_409_j)++) {
		{
			jule::Ptr<_1abda8d2e_Var> _4313_t = (*(_3718_s))[_409_j];;
			{
				auto expr = (*(_3718_s)).slice(0LL, _389_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1b19d8c67:;
				if (it != expr_end) {
					jule::Ptr<_1abda8d2e_Var> _4416_o = *it;
					{
						if ((_4313_t == _4416_o)) {
							goto _iter_next_1b19d8030;
						};
					}
					_iter_next_1b19d8c67:;
					++it;
					goto _iter_begin_1b19d8c67;
				}
				_iter_end_1b19d8c67:;
			};
			if (_1b19d9a9d_isOrdered(&(_4313_t), (*(_3718_s)).slice(0LL, _389_i))) {
				if ((_389_i != _409_j)) {
					std::swap((*(_3718_s))[_389_i], (*(_3718_s))[_409_j]);
				};
				(_389_i)++;
			};
		}
	_iter_next_1b19d8030:;
	}
	_iter_end_1b19d8030:;;
	if ((_389_i < (*(_3718_s)).len())) {
		goto _julec_label_1b19d6d42;
	};
}



inline void _1acaad48e_EliminateDefines(jule::Ptr<_1ac92a43d_IR>* _30526_ir) {
	jule::Ptr<_1aca7a9ab_ObjectDeadCode> _3069_ocd = static__1acaaaac9_new(_30526_ir);;
	_1acaad15e_elimanate(_3069_ocd);
}



inline void _1acab24d7_eliminateDeadCodeOfScope(jule::Ptr<_1ab655576_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1ab657e19_Label>> _2425_labels = jule::Slice<jule::Ptr<_1ab657e19_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1ab6582e3_GotoSt>> _2435_gotos = jule::Slice<jule::Ptr<_1ab6582e3_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1acaae2a3_scopeDeadCode> _2449_sdc = jule::new_ptr<_1acaae2a3_scopeDeadCode>(_1acaae2a3_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&((*(_24133_s))._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ab657e19_Label>>>)((&(_2425_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ab6582e3_GotoSt>>>)((&(_2435_gotos)))), });;
	{
		_1acab21a7_optimizeStmts(_2449_sdc);
	};
}



inline void _1acab275c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1abd566a0_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b211aa3b:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _25517_func = *it;
			{
				{
					auto expr = &((*(_25517_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b211d0b0:;
					if (it != expr_end) {
						jule::Ptr<_1abd59681_FnIns> _25621_ins = *it;
						{
							_1acab24d7_eliminateDeadCodeOfScope((*(_25621_ins))._field_Scope);
						}
						_iter_next_1b211d0b0:;
						++it;
						goto _iter_begin_1b211d0b0;
					}
					_iter_end_1b211d0b0:;
				};
			}
			_iter_next_1b211aa3b:;
			++it;
			goto _iter_begin_1b211aa3b;
		}
		_iter_end_1b211aa3b:;
	};
}



inline void _1acab298d_eliminateFunctionsScopePackage(jule::Ptr<_1ab67a535_Package>* _26240_pkg) {
	{
		auto expr = &((*((*(_26240_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b211da50:;
		if (it != expr_end) {
			jule::Ptr<_1abe0b5bd_SymbolTable> _26317_f = *it;
			{
				_1acab275c_eliminateScopeFunctions(&((*(_26317_f))._field_Funcs));
			}
			_iter_next_1b211da50:;
			++it;
			goto _iter_begin_1b211da50;
		}
		_iter_end_1b211da50:;
	};
}



inline void _1acab2c46_eliminateScopePackage(jule::Ptr<_1ab67a535_Package>* _26831_pkg) {
	_1acab298d_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1acab2e44_EliminateScopes(jule::Ptr<_1ac92a43d_IR>* _27325_ir) {
	jule::I32 _2749_i = ((*((*(_27325_ir))))._field_Used.len() - 1LL);;
	for (; (_2749_i >= 0LL); (_2749_i)--) {
		{
			jule::Ptr<_1ab67760e_ImportInfo> _27613_u = (*((*(_27325_ir))))._field_Used[_2749_i];;
			if ((!((*(_27613_u))._field_Binded))) {
				_1acab2c46_eliminateScopePackage(&((*_27613_u.alloc)._field_Package));
			};
		}
	_iter_next_1b212026b:;
	}
	_iter_end_1b212026b:;;
	_1acab2c46_eliminateScopePackage(&((*((*(_27325_ir))))._field_Main));
}



inline jule::Uintptr _1ac0391ac_typeData(jule::Any* _1714_m) {
	return ((jule::Uintptr)(((*(_1714_m))).type));;
}



inline jule::Bool _1ac039575_equalConst(jule::Ptr<_1b9aac4c5_Const> _2115_l, jule::Ptr<_1b9aac4c5_Const> _2126_r) {
	{
		
		if (_1b9ab1496_IsI64(_2115_l.ptr())) {
			_case_begin_1b21b4475:;
			{
				return (_1b9ab1496_IsI64(_2126_r.ptr()) && (_1b9aadd9a_ReadI64(_2115_l) == _1b9aadd9a_ReadI64(_2126_r)));;
			}
		}
		else if (_1b9ab172c_IsU64(_2115_l.ptr())) {
			_case_begin_1b21b44db:;
			{
				return (_1b9ab172c_IsU64(_2126_r.ptr()) && (_1b9aae131_ReadU64(_2115_l) == _1b9aae131_ReadU64(_2126_r)));;
			}
		}
		else if (_1b9ab1ed0_IsF64(_2115_l.ptr())) {
			_case_begin_1b21b4552:;
			{
				return (_1b9ab1ed0_IsF64(_2126_r.ptr()) && (_1b9aae8d4_ReadF64(_2115_l) == _1b9aae8d4_ReadF64(_2126_r)));;
			}
		}
		else if (_1b9ab1c49_IsStr(_2115_l.ptr())) {
			_case_begin_1b21b45c9:;
			{
				return (_1b9ab1c49_IsStr(_2126_r.ptr()) && (_1b9aae64d_ReadStr(_2115_l) == _1b9aae64d_ReadStr(_2126_r)));;
			}
		}
		else if (_1b9ab19b3_IsBool(_2115_l.ptr())) {
			_case_begin_1b21b4651:;
			{
				return (_1b9ab19b3_IsBool(_2126_r.ptr()) && (_1b9aae3b7_ReadBool(_2115_l) == _1b9aae3b7_ReadBool(_2126_r)));;
			}
		}
		else if (_1b9ab2266_IsNil(_2115_l.ptr())) {
			_case_begin_1b21b4794:;
			{
				return _1b9ab2266_IsNil(_2126_r.ptr());;
			}
		}
		else {
			_case_begin_1b21b4387:;
			{
				return false;;
			}
		}
		_match_end_1b21b3dd1:;
	};
}



inline jule::Bool _1ac0398e9_equalCasting(jule::Ptr<_1abd49e8a_CastingExprModel> _4017_l, jule::Ptr<_1abd49e8a_CastingExprModel> _4039_r) {
	if ((!(_1abe43539_Equal((*(_4017_l))._field_Kind, (*(_4039_r))._field_Kind)))) {
		return false;;
	};
	return _1ac03a82e_equalModels((*((*_4017_l.alloc)._field_Expr))._field_Model, (*(*_4039_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ac039cb2_equalUnary(jule::Ptr<_1abd48c36_UnaryExprModel> _4715_l, jule::Ptr<_1abd48c36_UnaryExprModel> _4735_r) {
	if ((((*((*(_4715_l))._field_Op))._field_Id != (*(*(_4735_r))._field_Op.alloc)._field_Id) || ((*(*_4715_l.alloc)._field_Op.alloc)._field_Kind != (*(*_4735_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1ac03a82e_equalModels((*((*_4715_l.alloc)._field_Expr))._field_Model, (*(*_4735_r.alloc)._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1ac03a136_equalIndexing(jule::Ptr<_1abd4b1bc_IndexingExprModel> _5418_l, jule::Ptr<_1abd4b1bc_IndexingExprModel> _5441_r) {
	return (_1ac03a82e_equalModels((*((*(_5418_l))._field_Expr))._field_Model, (*(*(_5441_r))._field_Expr.alloc)._field_Model) && _1ac03a82e_equalModels((*((*_5418_l.alloc)._field_Index))._field_Model, (*(*_5441_r.alloc)._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1ac03a4aa_equalBinary(jule::Ptr<_1abd4885c_BinaryExprModel> _5916_l, jule::Ptr<_1abd4885c_BinaryExprModel> _5937_r) {
	if ((((*((*(_5916_l))._field_Op))._field_Id != (*(*(_5937_r))._field_Op.alloc)._field_Id) || ((*(*_5916_l.alloc)._field_Op.alloc)._field_Kind != (*(*_5937_r.alloc)._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1ac03a82e_equalModels((*((*_5916_l.alloc)._field_Left))._field_Model, (*(*_5937_r.alloc)._field_Left.alloc)._field_Model) && _1ac03a82e_equalModels((*((*_5916_l.alloc)._field_Right))._field_Model, (*(*_5937_r.alloc)._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1ac03a82e_equalModels(jule::Any _7016_l, jule::Any _7030_r) {
	if ((_1ac0391ac_typeData(&(_7016_l)) != _1ac0391ac_typeData(&(_7030_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _7016_l };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b21c3264:;
			{
				return (_7016_l.unsafe_cast_ptr<_1abda8d2e_Var>() == _7030_r.cast_ptr<_1abda8d2e_Var>(&__jule_any_type8));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b21c3ad3:;
			{
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _789_li = _7016_l.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>();;
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _799_ri = _7030_r.cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (((*(_789_li))._field_Field == (*(_799_ri))._field_Field) && _1ac03a82e_equalModels((*((*_789_li.alloc)._field_Expr))._field_Model, (*(*_799_ri.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b21c3b49:;
			{
				return _1ac039575_equalConst(_7016_l.unsafe_cast_ptr<_1b9aac4c5_Const>(), _7030_r.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b21c3682:;
			{
				return _1ac0398e9_equalCasting(_7016_l.unsafe_cast_ptr<_1abd49e8a_CastingExprModel>(), _7030_r.cast_ptr<_1abd49e8a_CastingExprModel>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b21c36e8:;
			{
				return _1ac039cb2_equalUnary(_7016_l.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>(), _7030_r.cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b21c375e:;
			{
				return _1ac03a136_equalIndexing(_7016_l.unsafe_cast_ptr<_1abd4b1bc_IndexingExprModel>(), _7030_r.cast_ptr<_1abd4b1bc_IndexingExprModel>(&__jule_any_type44));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b21c37c5:;
			{
				return _1ac03a4aa_equalBinary(_7016_l.unsafe_cast_ptr<_1abd4885c_BinaryExprModel>(), _7030_r.cast_ptr<_1abd4885c_BinaryExprModel>(&__jule_any_type111));;
			}
		}
		else {
			_case_begin_1b21c3451:;
			{
				return false;;
			}
		}
		_match_end_1b21c3011:;
	};
}



inline void _1ac04144a_possibleNilRemove(jule::Ptr<_1ac04046b_nils>* _7827_n, jule::Any _7837_m) {
	if (((*(_7827_n)) != nullptr)) {
		_1ac040c1e_removeVar((*(_7827_n)).ptr(), _1ac041e1d_getNilVar(_7837_m));
	};
}



inline jule::Bool _1ac041813_isGuaranteedNonNilExpr(jule::Ptr<_1ac04046b_nils>* _8432_n, jule::Any _8442_m) {
	{
		auto &_match_expr{ _8442_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b21c9985:;
			{
				return true;;
			}
		}
		_match_end_1b21c9930:;
	};
	return (((*(_8432_n)) != nullptr) && _1ac041060_isSafe((*(_8432_n)).ptr(), _1ac041e1d_getNilVar(_8442_m)));;
}



inline jule::Bool _1ac041acc_isNilValidType(jule::Ptr<_1abe42d30_TypeKind> _9223_t) {
	return (_1abe45717_Sptr(_9223_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1ac041e1d_getNilVar(jule::Any _9414_m) {
	if ((!(_1ac9539e9_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9414_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b21cb03b:;
			{
				jule::Ptr<_1abda8d2e_Var> _1009_v = _9414_m.unsafe_cast_ptr<_1abda8d2e_Var>();;
				if ((!((*(_1009_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9414_m.unsafe_cast_ptr<_1abda8d2e_Var>());;
				};
				return _1ac041e1d_getNilVar((*((*((*_1009_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b21cae70:;
			{
				return static_cast<jule::Uintptr>((*(_9414_m.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1b21caed6:;
	};
	return 0LLU;;
}



inline jule::Bool _1ac93e1dd_isConstantValidConditionalCase(jule::Ptr<_1ab655994_If>* _67836_i) {
	{
		auto &_match_expr{ (*((*(_67836_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b21d3373:;
			{
				jule::Ptr<_1b9aac4c5_Const> _6819_c = (*((*(_67836_i))))._field_Expr.unsafe_cast_ptr<_1b9aac4c5_Const>();;
				return (_1b9ab19b3_IsBool(_6819_c.ptr()) && _1b9aae3b7_ReadBool(_6819_c));;
			}
		}
		_match_end_1b21d331d:;
	};
	return false;;
}



inline jule::Bool _1ac93e4eb_isUnreachableExpr(jule::Any* _68723_expr) {
	{
		auto &_match_expr{ (*(_68723_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b21d40dd:;
			{
				jule::Ptr<_1b9aac4c5_Const> _6909_c = (*(_68723_expr)).cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
				return (_1b9ab19b3_IsBool(_6909_c.ptr()) && (!(_1b9aae3b7_ReadBool(_6909_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b21d340b:;
			{
				jule::Ptr<_1abd4885c_BinaryExprModel> _6939_m = (*(_68723_expr)).cast_ptr<_1abd4885c_BinaryExprModel>(&__jule_any_type111);;
				if (((*((*(_6939_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1ac93e4eb_isUnreachableExpr(&((*((*_6939_m.alloc)._field_Left))._field_Model)) || _1ac93e4eb_isUnreachableExpr(&((*((*_6939_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1b21d4088:;
	};
	return false;;
}



inline jule::Bool _1ac93e7b5_isConstantValidMatchCase(jule::Ptr<_1ab65a2b2_Case>* _70230_case) {
	{
		auto expr = &((*((*(_70230_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21d8466:;
		if (it != expr_end) {
			jule::Ptr<_1abe11936_Data> *_70312_expr = it;
			{
				if (((_1abe1233d_IsConst((*(_70312_expr)).ptr()) && _1b9ab19b3_IsBool((*(*(_70312_expr)).alloc)._field_Constant.ptr())) && _1b9aae3b7_ReadBool((*(*(_70312_expr)).alloc)._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1b21d8466:;
			++it;
			goto _iter_begin_1b21d8466;
		}
		_iter_end_1b21d8466:;
	};
	return false;;
}



inline jule::Bool _1ac93eb06_isUnreachableConditionalCase(jule::Ptr<_1ab655994_If>* _71134_i) {
	return _1ac93e4eb_isUnreachableExpr(&((*((*(_71134_i))))._field_Expr));;
}



inline jule::Bool _1ac93ed8c_isUnreachableMatchCase(jule::Ptr<_1ab65a2b2_Case>* _71528_case) {
	{
		auto expr = &((*((*(_71528_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b21da424:;
		if (it != expr_end) {
			jule::Ptr<_1abe11936_Data> *_71612_expr = it;
			{
				if ((!(_1ac93e4eb_isUnreachableExpr(&((*((*(_71612_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b21da424:;
			++it;
			goto _iter_begin_1b21da424;
		}
		_iter_end_1b21da424:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ac94967c_checkForBitShiftOpt(jule::Ptr<_1abd48362_OperandExprModel>* _77925_l, jule::Ptr<_1abd48362_OperandExprModel>* _77948_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1b9aab859_IsInt(_1abe431e8_Str((*((*(_77925_l))))._field_Kind.ptr())))) || (!(_1b9aab859_IsInt(_1abe431e8_Str((*((*(_77948_r))))._field_Kind)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1b9aaee01_AsU64((*((*(_77948_r))))._field_Model.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7875_j = _1b9a58d01_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7885_z = static_cast<jule::U64>(_7875_j);;
	if ((static_cast<jule::F64>(_7885_z) != _7875_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7885_z;
	return __jule_func_result;;
}



inline jule::Bool _1ac949a45_areSameLvalueExprModel(jule::Any* _79628_l, jule::Any* _79643_r) {
	{
		auto &_match_expr{ (*(_79628_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1c619e5:;
			{
				return ((*(_79643_r)) == (*(_79628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1c617c5:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type98) {
						_case_begin_1b1c62474:;
						{
							goto _match_end_1b1c625ea;
						}
					}
					else {
						_case_begin_1b1c62650:;
						{
							return false;;
						}
					}
					_match_end_1b1c625ea:;
				};
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _8099_lsi = (*(_79628_l)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _8109_rsi = (*(_79643_r)).cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				if (((*(_8099_lsi))._field_Field != (*(_8109_rsi))._field_Field)) {
					return false;;
				};
				return _1ac949a45_areSameLvalueExprModel(&((*((*_8099_lsi.alloc)._field_Expr))._field_Model), &((*(*_8109_rsi.alloc)._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b1c61a5b:;
			{
				{
					auto &_match_expr{ (*(_79643_r)) };
					
					if (_match_expr.type == &__jule_any_type110) {
						_case_begin_1b1c64ba2:;
						{
							jule::Ptr<_1abd48c36_UnaryExprModel> _82213_ul = (*(_79628_l)).cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110);;
							jule::Ptr<_1abd48c36_UnaryExprModel> _82313_ur = (*(_79643_r)).cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110);;
							if ((((*((*(_82213_ul))._field_Op))._field_Id != (*(*(_82313_ur))._field_Op.alloc)._field_Id) || ((*(*_82213_ul.alloc)._field_Op.alloc)._field_Kind != (*(*_82313_ur.alloc)._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1ac949a45_areSameLvalueExprModel(&((*((*_82213_ul.alloc)._field_Expr))._field_Model), &((*(*_82313_ur.alloc)._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1b1c640be:;
				};
			}
		}
		_match_end_1b1c6194b:;
	};
	return false;;
}



inline void _1ac94bc12_possibleDynamicRemove(jule::Ptr<_1ac94ab78_dynamic>* _8131_d, jule::Any _8144_m) {
	if (((*(_8131_d)) != nullptr)) {
		_1ac94b42b_removeVar((*(_8131_d)).ptr(), _1ac94c790_getDynamicVar(_8144_m));
	};
}



inline jule::Bool _1ac94c020_isDynamicValidType(jule::Ptr<_1abe42d30_TypeKind> _8727_t) {
	return _1ac934d4e_IsAny(&(_8727_t));;
}



inline jule::Ptr<_1abe42d30_TypeKind> _1ac94c44e_isTypeGuaranteedDynamicData(jule::Ptr<_1ac94ab78_dynamic>* _8937_dy, jule::Ptr<_1abe42d30_TypeKind> _8955_t, jule::Any _8973_m) {
	jule::Bool _905_isAny = _1ac934d4e_IsAny(&(_8955_t));;
	if (((!(_905_isAny)) && (_1abe46c8a_Trait(_8955_t.ptr()) == nullptr))) {
		return _8955_t;;
	};
	if ((!(_905_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8973_m };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b1d0ea0a:;
			{
				jule::Ptr<_1abd49e8a_CastingExprModel> _9913_cem = _8973_m.unsafe_cast_ptr<_1abd49e8a_CastingExprModel>();;
				return _1ac94c44e_isTypeGuaranteedDynamicData(_8937_dy, (*(_9913_cem))._field_ExprKind, (*((*_9913_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1b1d0ed18:;
	};
	jule::Uintptr _1025_var = _1ac94c790_getDynamicVar(_8973_m);;
	if ((_1025_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8937_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d1180e:;
		if (it != expr_end) {
			_1ac94a837_dynamicVar _10617_v = *it;
			{
				if ((_10617_v._field_var == _1025_var)) {
					return _10617_v._field_kind;;
				};
			}
			_iter_next_1b1d1180e:;
			++it;
			goto _iter_begin_1b1d1180e;
		}
		_iter_end_1b1d1180e:;
	};
	return nullptr;;
}



inline jule::Uintptr _1ac94c790_getDynamicVar(jule::Any _11418_m) {
	if ((!(_1ac9554ce_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11418_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1d12029:;
			{
				jule::Ptr<_1abda8d2e_Var> _1209_v = _11418_m.unsafe_cast_ptr<_1abda8d2e_Var>();;
				if ((!((*(_1209_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11418_m.unsafe_cast_ptr<_1abda8d2e_Var>());;
				};
				return _1ac94c790_getDynamicVar((*((*((*_1209_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1d11e08:;
			{
				return static_cast<jule::Uintptr>((*(_11418_m.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b1d128ed:;
			{
				jule::Ptr<_1abd48c36_UnaryExprModel> _1319_uem = _11418_m.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>();;
				if (((*((*(_1319_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ac94c790_getDynamicVar((*((*_1319_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b1d11e80:;
	};
	return 0LLU;;
}



inline jule::Bool _1ac951266_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1ac9519a3_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1ac95162e_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8934_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d21ed4:;
		if (it != expr_end) {
			jule::I32 _909_i = it - expr->begin();
			jule::Any *_9012_m = it;
			{
				if (_1ac9519a3_fitsSize((*(_9012_m)), _8934_expr)) {
					return _909_i;;
				};
			}
			_iter_next_1b1d21ed4:;
			++it;
			_909_i++;
			goto _iter_begin_1b1d21ed4;
		}
		_iter_end_1b1d21ed4:;
	};
	return -1LL;;
}



inline jule::Bool _1ac9519a3_fitsSize(jule::Any _9813_e1, jule::Any _9828_e2) {
	if ((_1ac0391ac_typeData(&(_9813_e1)) != _1ac0391ac_typeData(&(_9828_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b1d239ec:;
			{
				jule::Ptr<_1b9aac4c5_Const> _1049_exprConst = _9828_e2.cast_ptr<_1b9aac4c5_Const>(&__jule_any_type19);;
				return ((_1b9ab0187_AsF64(_1049_exprConst.ptr()) >= 0LL) && _1b9ab3d8e_GtEq(_9813_e1.unsafe_cast_ptr<_1b9aac4c5_Const>().ptr(), (*_1049_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1d23a63:;
			{
				return (_9828_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1d23ac9:;
			{
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _1099_ssi1 = _9813_e1.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>();;
				jule::Ptr<_1abd4d4aa_StructSubIdentExprModel> _1109_ssi2 = _9828_e2.cast_ptr<_1abd4d4aa_StructSubIdentExprModel>(&__jule_any_type98);;
				return (_1ac03a82e_equalModels((*((*(_1099_ssi1))._field_Expr))._field_Model, (*(*(_1109_ssi2))._field_Expr.alloc)._field_Model) && ((*_1099_ssi1.alloc)._field_Field == (*_1109_ssi2.alloc)._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b1d23b40:;
			{
				jule::Ptr<_1abd48c36_UnaryExprModel> _1139_uem1 = _9813_e1.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>();;
				jule::Ptr<_1abd48c36_UnaryExprModel> _1149_uem2 = _9828_e2.cast_ptr<_1abd48c36_UnaryExprModel>(&__jule_any_type110);;
				if ((((*((*(_1139_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*_1139_uem1.alloc)._field_Op.alloc)._field_Id != (*(*(_1149_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1ac9519a3_fitsSize((*((*_1139_uem1.alloc)._field_Expr))._field_Model, (*(*_1149_uem2.alloc)._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1b1d226dd:;
			{
				return false;;
			}
		}
		_match_end_1b1d22688:;
	};
}



inline void _1ac951cd3_possibleBoundaryRemove(jule::Ptr<_1ac9501ee_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b1d23e5e:;
		if (it != expr_end) {
			_1ac94edad_boundaryVar _12617_v = *it;
			{
				{
					auto expr = &(_12617_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b1d2a86c:;
					if (it != expr_end) {
						jule::I32 _12713_i = it - expr->begin();
						jule::Any _12716_max = *it;
						{
							if (_1ac03a82e_equalModels(_12716_max, _12446_model)) {
								_12617_v._field_maxSize=jule::append(_12617_v._field_maxSize.slice(0LL, _12713_i),_12617_v._field_maxSize.slice((_12713_i + 1LL)));
								goto _iter_end_1b1d2a86c;
							};
						}
						_iter_next_1b1d2a86c:;
						++it;
						_12713_i++;
						goto _iter_begin_1b1d2a86c;
					}
					_iter_end_1b1d2a86c:;
				};
			}
			_iter_next_1b1d23e5e:;
			++it;
			goto _iter_begin_1b1d23e5e;
		}
		_iter_end_1b1d23e5e:;
	};
}



inline jule::Bool _1ac95209c_isBoundaryRiskyType(jule::Ptr<_1abe42d30_TypeKind> _13628_t) {
	return (_1abe46251_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1ac952366_isBoundaryValidType(jule::Ptr<_1abe42d30_TypeKind> _14128_t) {
	return ((_1abe464d7_Slc(_14128_t.ptr()) != nullptr) || (_1abe46251_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1ac952630_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1ac9539e9_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b1d2cd8b:;
			{
				jule::Ptr<_1abda8d2e_Var> _1499_v = _14319_m.unsafe_cast_ptr<_1abda8d2e_Var>();;
				if ((!((*(_1499_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1abda8d2e_Var>());;
				};
				return _1ac952630_getBoundaryVar((*((*((*_1499_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b1d2d1cc:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1abd4d4aa_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b1d2ce35:;
			{
				jule::Ptr<_1abd48c36_UnaryExprModel> _1609_uem = _14319_m.unsafe_cast_ptr<_1abd48c36_UnaryExprModel>();;
				if (((*((*(_1609_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ac952630_getBoundaryVar((*((*_1609_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1b1d2cd36:;
	};
	return 0LLU;;
}



inline void _1ac9556aa_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _335_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	_1ac952d8e_Copy=_335_l1;
	_1ac95318b_Deadcode=_335_l1;
	_1ac953444_Append=_335_l1;
	_1ac953741_Math=_335_l1;
	_1ac9539e9_Access=_335_l1;
	_1ac953ca2_Inline=_335_l1;
	_1ac95405a_Ptr=_335_l1;
	_1ac954423_Cond=_335_l1;
	_1ac954665_Str=_335_l1;
	_1ac95490c_Slice=_335_l1;
	_1ac954bb5_Assign=_335_l1;
	_1ac954e6d_Exceptional=_335_l1;
	_1ac955226_Iter=_335_l1;
	_1ac9554ce_Dynamic=_335_l1;
}



inline void _1acabc38d_detectEnabled(void) {
	_1acaba116_exprEnabled=(((_1ac95405a_Ptr || _1ac953741_Math) || _1ac9539e9_Access) || _1ac954423_Cond);
	_1acaba38b_scopeEnabled=((((((((_1ac954423_Cond || _1ac953444_Append) || _1ac952d8e_Copy) || _1ac954665_Str) || _1ac95490c_Slice) || _1ac954bb5_Assign) || _1ac954e6d_Exceptional) || _1ac955226_Iter) || _1ac9554ce_Dynamic);
}



inline void _1ac60ba7b_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_20b19ec0d_Exit(1LL);
}



inline jule::U64 _1ad4266db_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1ad35b126_isCopyOptimizable(jule::Ptr<_1abe11936_Data>* _105023_expr) {
	if ((!((*((*(_105023_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_105023_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b2276d84:;
			{
				return false;;
			}
		}
		_match_end_1b2276d2e:;
	};
	return true;;
}



inline jule::Bool _1ad35b4de_isIterCopyOptimizable(jule::Ptr<_1abe11936_Data>* _106127_expr, jule::Ptr<_1abda8d2e_Var>* _106141_v) {
	if (((!((*((*(_106127_expr))))._field_Lvalue)) && (!(_1abe446b1_Mutable((*((*(_106127_expr))))._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_106141_v))))._field_Mutable)) && (!((*((*(_106127_expr))))._field_Mutable)));;
}



inline jule::Bool _1ad35b91d_captureVarHandling(jule::Ptr<_1ad42eb78_ObjectCoder>* _106828_oc, jule::Ptr<_1abd4b673_AnonFnExprModel>* _106851_m, jule::Ptr<_1abda8d2e_Var>* _106877_v) {
	{
		auto expr = &((*((*(_106851_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2278946:;
		if (it != expr_end) {
			jule::Ptr<_1abda8d2e_Var> _106912_cv = *it;
			{
				if ((_106912_cv == (*(_106877_v)))) {
					_1ad43032c_write((*(_106828_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1ad37531b_var(&((*((*(_106828_oc))))._field_Buf), (*(_106877_v)));
					return true;;
				};
			}
			_iter_next_1b2278946:;
			++it;
			goto _iter_begin_1b2278946;
		}
		_iter_end_1b2278946:;
	};
	return false;;
}



inline jule::Str _1ad36c7b9_decomposeCommonEsq(jule::U8 _158323_b) {
	{
		auto &_match_expr{ _158323_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b24c7b62:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b24c79ca:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b24c7a41:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b24c7546:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b24c75ac:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b24c7634:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b24c76ab:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b24c7733:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b24c7bc8:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b24c7c3e:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1b24c5ca3:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b24c74e1:;
	};
}



inline jule::Str _1ad36cac7_sbtoa(jule::U8 _161010_b) {
	if ((_161010_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_161010_b < 128LLU)) {
		jule::Str _16159_seq = _1ad36c7b9_decomposeCommonEsq(_161010_b);;
		if (!(_16159_seq).empty()) {
			return _16159_seq;;
		};
		if (((32LL <= _161010_b) && (_161010_b <= 126LLU))) {
			return jule::Str::from_byte(_161010_b);;
		};
	};
	jule::Str _16235_seq = _1b9a9dc7a_FmtUint(static_cast<jule::U64>(_161010_b), 8LL);;
	if ((_16235_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _16235_seq);;
	};
	return (jule::Str::lit("\\", 1) + _16235_seq);;
}



inline void _1ad36cdb3_cstrBytes(_209e0d4d9_StrBuilder* _163019_s, jule::Str _163034_ctx) {
	{
		auto expr = &(_163034_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b24cc947:;
		if (it != expr_end) {
			jule::U8 *_163112_b = it;
			{
				_209e0de79_WriteStr(_163019_s, _1ad36cac7_sbtoa((*(_163112_b))));
			}
			_iter_next_1b24cc947:;
			++it;
			goto _iter_begin_1b24cc947;
		}
		_iter_end_1b24cc947:;
	};
}



inline void _1ad36d1e3_cstrLit(_209e0d4d9_StrBuilder* _163617_s, jule::Str _163632_ctx) {
	_209e0e232_WriteByte(_163617_s, '\"');
	_1ad36cdb3_cstrBytes(_163617_s, _163632_ctx);
	_209e0e232_WriteByte(_163617_s, '\"');
}



inline void _1ad36d589_ftoa(_209e0d4d9_StrBuilder* _164214_s, jule::F64 _164229_f, jule::I32 _164237_bitsize) {
	if ((_164237_bitsize != 32LL)) {
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::I64>(_164229_f)))) {
			_1ad36d875_itoa(_164214_s, static_cast<jule::I64>(_164229_f));
			return;;
		};
		if ((_164229_f == static_cast<jule::F64>(static_cast<jule::U64>(_164229_f)))) {
			_1ad36db61_utoa(_164214_s, static_cast<jule::U64>(_164229_f));
			return;;
		};
	};
	jule::Str _16535_m = _1b9a82797_FmtFloat(_164229_f, 'f', -1LL, _164237_bitsize);;
	_209e0de79_WriteStr(_164214_s, _16535_m);
	if ((!(_20b0de39a_Contains(_16535_m, jule::Str::lit(".", 1))))) {
		_209e0de79_WriteStr(_164214_s, jule::Str::lit(".0", 2));
	};
}



inline void _1ad36d875_itoa(_209e0d4d9_StrBuilder* _166014_s, jule::I64 _166029_x) {
	{
		
		if ((_166029_x == jule::MAX_I64)) {
			_case_begin_1b24d1c26:;
			{
				_209e0de79_WriteStr(_166014_s, jule::Str::lit("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_166029_x == jule::MIN_I64)) {
			_case_begin_1b24d1cc0:;
			{
				_209e0de79_WriteStr(_166014_s, jule::Str::lit("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1b24d1b16:;
	};
	_209e0de79_WriteStr(_166014_s, _1b9a9e143_FmtInt(_166029_x, 10LL));
	if (_1eb233b09_Is64Bit(jule::Str::lit("i386", 4))) {
		_209e0e232_WriteByte(_166014_s, 'L');
	};
	_209e0e232_WriteByte(_166014_s, 'L');
}



inline void _1ad36db61_utoa(_209e0d4d9_StrBuilder* _167714_s, jule::U64 _167729_x) {
	{
		
		if ((_167729_x == jule::MAX_U64)) {
			_case_begin_1b24d3d6b:;
			{
				_209e0de79_WriteStr(_167714_s, jule::Str::lit("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1b24d3c39:;
	};
	_209e0de79_WriteStr(_167714_s, _1b9a9dc7a_FmtUint(_167729_x, 10LL));
	if (_1eb233b09_Is64Bit(jule::Str::lit("i386", 4))) {
		_209e0e232_WriteByte(_167714_s, 'L');
	};
	_209e0de79_WriteStr(_167714_s, jule::Str::lit("LU", 2));
}



inline jule::Slice<jule::U8> _1ad43c56a_concatAllParts(jule::Slice<jule::Ptr<_1abd0a38a_Token>> _135719_parts) {
	jule::I32 _13589_n = 0LL;;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b282e67d:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_135912_part = it;
			{
				_13589_n+=(*((*(_135912_part))))._field_Kind.len();
			}
			_iter_next_1b282e67d:;
			++it;
			goto _iter_begin_1b282e67d;
		}
		_iter_end_1b282e67d:;
	};
	if ((_13589_n == 0LL)) {
		return nullptr;;
	};
	_209e0d4d9_StrBuilder _13659_s = static__209e0d918_New(_13589_n);;
	{
		auto expr = &(_135719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b283097b:;
		if (it != expr_end) {
			jule::Ptr<_1abd0a38a_Token> *_136612_p = it;
			{
				_209e0de79_WriteStr(&_13659_s, (*((*(_136612_p))))._field_Kind);
			}
			_iter_next_1b283097b:;
			++it;
			goto _iter_begin_1b283097b;
		}
		_iter_end_1b283097b:;
	};
	return _209e10222_Buf(&_13659_s);;
}



inline jule::Bool _1ad43c878_isHeadDecl(jule::Ptr<_1abd566a0_Fn>* _137320_m) {
	if ((((*((*(_137320_m))))._field_Generics.len() > 0LL) || ((*((*(_137320_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1ac935426_IsOpMethod(_137320_m)) {
		return true;;
	};
	jule::Ptr<_1abd59681_FnIns> _13809_mi = (*((*(_137320_m))))._field_Instances[0LL];;
	;
	return static__1abdaa2c5_Dispose(_1abd454c4_FindMethod((*(_13809_mi))._field_Owner.ptr(), jule::Str::lit("Dispose", 7), false));;
}



inline jule::Bool _1ad44b733_shouldInitialized(jule::Ptr<_1abe42d30_TypeKind>* _46427_t) {
	jule::Ptr<_1abe4a909_Prim> _4655_prim = _1abe45481_Prim((*(_46427_t)).ptr());;
	if ((_4655_prim != nullptr)) {
		return ((!(_1abe4e127_IsAny(_4655_prim))) && (!(_1abe4dd91_IsStr(_4655_prim))));;
	};
	{
		
		if ((_1abe45717_Sptr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a031c:;
			{
				return false;;
			}
		}
		else if ((_1abe47021_Map((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a0383:;
			{
				return false;;
			}
		}
		else if ((_1abe464d7_Slc((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a03e9:;
			{
				return false;;
			}
		}
		else if ((_1abe46c8a_Trait((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b209e54c:;
			{
				return false;;
			}
		}
		else if ((_1abe4676d_Fn((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a04a4:;
			{
				return false;;
			}
		}
		else if ((_1abe46251_Arr((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a051a:;
			{
				jule::Ptr<_1abe52229_Arr> _48113_arr = _1abe46251_Arr((*(_46427_t)).ptr());;
				return _1ad44b733_shouldInitialized(&((*(_48113_arr))._field_Elem));;
			}
		}
		else if ((_1abe46a04_Struct((*(_46427_t)).ptr()) != nullptr)) {
			_case_begin_1b20a0581:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b209e4c5:;
			{
				return true;;
			}
		}
		_match_end_1b209e827:;
	};
}



inline void _20b1a40b9_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _20b1a433e_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _419_max = _20b1a3ddd_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_20b1a3ddd_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29873c9:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _439_n = (*(_4212_k))[0LL].len();;
				if ((_439_n > _419_max)) {
					_419_max=_439_n;
				};
			}
			_iter_next_1b29873c9:;
			++it;
			goto _iter_begin_1b29873c9;
		}
		_iter_end_1b29873c9:;
	};
	_209e0d4d9_StrBuilder _499_s = static__209e0d918_New(32LL);;
	;
	{
		auto expr = &(_20b1a3ddd_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2988c16:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_209e0de79_WriteStr(&_499_s, (*(_5112_part))[0LL]);
				_209e0de79_WriteStr(&_499_s, _20b0d9a16_Repeat(jule::Str::lit(" ", 1), ((_419_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_209e0de79_WriteStr(&_499_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_209e0e232_WriteByte(&_499_s, '\n');
				};
			}
			_iter_next_1b2988c16:;
			++it;
			_519_i++;
			goto _iter_begin_1b2988c16;
		}
		_iter_end_1b2988c16:;
	};
	jule::outln(_499_s);
}



inline void _20b1a4570_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("jule0.0.16 @master", 18));
}



inline void _20b1a477e_toolDistos(void) {
	jule::out(jule::Str::lit("supported operating systems:\n ", 30));
	jule::out(jule::Str::lit("windows", 7));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("linux", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("darwin", 6));
	jule::outln(jule::Str());
}



inline void _20b1a48e4_toolDistarch(void) {
	jule::out(jule::Str::lit("supported architects:\n ", 23));
	jule::out(jule::Str::lit("amd64", 5));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("i386", 4));
	jule::out(jule::Str::lit(" ", 1));
	jule::out(jule::Str::lit("arm64", 5));
	jule::outln(jule::Str());
}



inline void _20b1a4ae2_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1055_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1055_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1b298ea52:;
			{
				_20b1a477e_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1b298eb1d:;
			{
				_20b1a48e4_toolDistarch();
			}
		}
		else {
			_case_begin_1b298d556:;
			{
				_20b1a40b9_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1055_cmd));
			}
		}
		_match_end_1b298e645:;
	};
}



inline void _20b1a4d23_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str::lit("julec version: jule0.0.16 @master", 33));
	jule::outln(jule::Str::lit("architecture: i386", 18));
	jule::outln(jule::Str::lit("operating system: windows", 25));
	jule::outln((jule::Str::lit("default compiler: ", 18) + _1eb3ce117_Compiler));
	jule::outln((jule::Str::lit("default C++ standard: ", 22) + _1eb3ce447_CppStd));
}



inline void _20b1a5164_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str::lit("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1b299313d:;
			{
				({
					auto except = static__209c25b81_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_20b1a40b9_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b2991c30:;
			{
				_20b1a40b9_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b2992b21:;
	};
}



inline jule::Bool _20b1a53a6_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1b2994617:;
			{
				_20b1a433e_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1b299467d:;
			{
				_20b1a4570_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1b29946e4:;
			{
				_20b1a4ae2_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1b2993dca:;
			{
				_20b1a4d23_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1b2993e41:;
			{
				_20b1a5164_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b2992c75:;
			{
				return false;;
			}
		}
		_match_end_1b2993803:;
	};
	return true;;
}



inline void _20b1a554e_showInfo(void) {
	jule::outln(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _1899_args = _209e3d096_Args();;
	if ((_1899_args.len() < 2LL)) {
		_20b1a554e_showInfo();
		return;;
	};
	if (_20b1a53a6_processCommand(&(_1899_args))) {
		return;;
	};
	_1ad4c14de_compileCommand(&(_1899_args));
}



inline void _20b1a6077_enableVtp(void) {
	jule::Uintptr _195_hOut = _209c0b370_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_195_hOut == jule::MAX_U64)) {
		return;;
	};
	jule::I32 _249_dwMode = 0LL;;
	if ((!(_209c0d8e4_GetConsoleMode(_195_hOut, &(_249_dwMode))))) {
		return;;
	};
	_249_dwMode|=4LL;
	_209c0deee_SetConsoleMode(_195_hOut, _249_dwMode);
}



inline void _20b1a6242_init(void) {
	_20b1a6077_enableVtp();
}



inline void _1ad4bd40e_init(void) {
	_1eb3ce117_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_209c24d39_File> _1ad4bd6c8_openOutput(jule::Str* _4316_path) {
	jule::Str _445_dir = _20b0e5bed_Dir((*(_4316_path)));;
	({
		auto except = static__20b0e72e8_Of(_445_dir);
		if (!except.ok()) {
			({
				auto except = static__20b0e6704_Create(_445_dir);
				if (!except.ok()) {
					_1ac60ba7b_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__209c25521_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ac60ba7b_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ad4bd871_clearObjects(void) {
	({
		auto except = static__209d39aec_Remove(_1ad4be9c6_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str::lit("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__20b0e6935_Remove(_1ad4bcbc2_OutDir);
}



inline void _1ad4bdb7e_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1eb2db310_Cmd> _739_cmd = static__1eb2db70b_New(_7214_compiler);;
	(*(_739_cmd))._field_Args=_20b0de026_Split(_7229_compilerCmd, jule::Str::lit(" ", 1), -1LL);
	({
		auto except = _1eb2db909_Spawn(_739_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b299ba92:;
					{
						static__1ac60901d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b299b762:;
					{
						static__1ac60901d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b299b597:;
					{
						static__1ac60901d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b299b6a7:;
			};
			_1ac60ba7b_Throw(jule::Str());
		}
	});
	jule::I32 _865_status = ({
		auto except = _1eb2dbd8d_Wait(_739_cmd);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:15"));
		(except.result);
	});;
	if ((_865_status != 0LL)) {
		jule::Str _889_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1eb3ce117_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ac60901d_Print(jule::Str::lit("\033[31m", 5), _889_errorMessage);
		_1ac60ba7b_Throw(jule::Str());
	};
	_1ad4bd871_clearObjects();
}



inline jule::Bool _1ad4bde48_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1005_offset = _20b0dcad5_FindLastByte(_9920_path, '.');;
	if ((_1005_offset == -1LL)) {
		return false;;
	};
	return _1eb2220ae_IsValidCppExt(_9920_path.slice(_1005_offset));;
}



inline void _1ad4be179_pushCompCmdClang(_209e0d4d9_StrBuilder* _10726_cmd) {
	_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-Wno-everything ", 16));
	_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1eb3ce447_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b299e8b9:;
			{
				_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b29a0777:;
			{
				_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b29a07dd:;
			{
				_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b299e941:;
	};
	_209e0e232_WriteByte(_10726_cmd, ' ');
	if (_1eb3d059c_Production) {
		_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-O3 ", 4));
		_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-flto ", 6));
		_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_209e0de79_WriteStr(_10726_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline void _1ad4be3aa_pushCompCmdGcc(_209e0d4d9_StrBuilder* _13324_cmd) {
	_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("-w ", 3));
	_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("--std=", 6));
	{
		auto &_match_expr{ _1eb3ce447_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1b29a1d0b:;
			{
				_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1b29a3736:;
			{
				_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b29a379c:;
			{
				_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("c++20", 5));
			}
		}
		_match_end_1b29a1d94:;
	};
	_209e0e232_WriteByte(_13324_cmd, ' ');
	if (_1eb3d059c_Production) {
		_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("-O3 ", 4));
		_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("-DNDEBUG ", 9));
		_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
	} else {
		_209e0de79_WriteStr(_13324_cmd, jule::Str::lit("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1ad4be83e_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ac92a43d_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1606_compiler = &(_1eb3c8b8e_CompilerPath);;
	_209e0d4d9_StrBuilder _1619_cmd = static__209e0d918_New(64LL);;
	{
		auto &_match_expr{ _1eb3ce117_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b29a644d:;
			{
				_1ad4be3aa_pushCompCmdGcc(&(_1619_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b29a698c:;
			{
				_1ad4be179_pushCompCmdClang(&(_1619_cmd));
			}
		}
		_match_end_1b29a6728:;
	};
	{
		auto expr = &((*((*(_15936_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29a6c45:;
		if (it != expr_end) {
			jule::Ptr<_1ab67760e_ImportInfo> *_17112_u = it;
			{
				if (((*((*(_17112_u))))._field_Binded && _1ad4bde48_isCppSourceFile((*(*(_17112_u)).alloc)._field_Path))) {
					_209e0de79_WriteStr(&_1619_cmd, (*(*(_17112_u)).alloc)._field_Path);
					_209e0e232_WriteByte(&_1619_cmd, ' ');
				};
			}
			_iter_next_1b29a6c45:;
			++it;
			goto _iter_begin_1b29a6c45;
		}
		_iter_end_1b29a6c45:;
	};
	if (!(_1ad4bd255_Out).empty()) {
		_209e0de79_WriteStr(&_1619_cmd, jule::Str::lit("-o ", 3));
		_209e0de79_WriteStr(&_1619_cmd, _1ad4bd255_Out);
		_209e0e232_WriteByte(&_1619_cmd, ' ');
	};
	_209e0de79_WriteStr(&_1619_cmd, _15918_sourcePath);
	{
		auto expr = &((*((*(_15936_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29a974d:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_209e0e232_WriteByte(&_1619_cmd, ' ');
				_209e0de79_WriteStr(&_1619_cmd, (*(_18612_pass)));
			}
			_iter_next_1b29a974d:;
			++it;
			goto _iter_begin_1b29a974d;
		}
		_iter_end_1b29a974d:;
	};
	if (_20b1a0ca8_Os.equal("windows", 7)) {
		_209e0de79_WriteStr(&_1619_cmd, jule::Str::lit(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_1606_compiler));
	__jule_func_result.__jule_result_arg1 = _209e0e771_Str(&_1619_cmd);
	return __jule_func_result;;
}



inline jule::Str _1ad4be9c6_getCompilePath(void) {
	return _20b0e500a_Join(jule::Slice<jule::Str>::make({_1ad4bcbc2_OutDir,_1ad4bce9c_OutName}));;
}



inline void _1ad4bec07_applyTargetIndependentOptimizations(jule::Ptr<_1ac92a43d_IR>* _20545_ir) {
	jule::Ptr<_1acaba589_Optimizer> _2069_opt = static__1acabaa0c_New(_20545_ir);;
	_1acabc0e6_Optimize(_2069_opt.ptr());
}



inline void _1ad4beda0_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1eb3ce117_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b29abe26:;
			{
				_1ac60ba7b_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1b29abd5a:;
			{
				if ((_1eb3c8b8e_CompilerPath).empty()) {
					_1eb3c8b8e_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1b29aba3b:;
			{
				if ((_1eb3c8b8e_CompilerPath).empty()) {
					_1eb3c8b8e_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b29ab61d:;
			{
				_1ac60ba7b_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1eb3ce117_Compiler));
			}
		}
		_match_end_1b29ab871:;
	};
}



inline void _1ad4c00ae_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1ac60ba7b_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1ad4c02e0_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1ac60ba7b_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1ad4c0521_checkTargetFlag(jule::Str* _24321_target) {
	if (((*(_24321_target))).empty()) {
		_1ac60ba7b_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2485_parts = _20b0de026_Split((*(_24321_target)), jule::Str::lit("-", 1), -1LL);;
	if ((_2485_parts.len() != 2LL)) {
		_1ac60ba7b_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _2535_os;
	jule::Str _2539_arch;
	({
		jule::Str ___jule_assign_arg = _2485_parts[0LL];
		jule::Str _1___jule_assign_arg = _2485_parts[1LL];
		_2535_os = ___jule_assign_arg;
		_2539_arch = _1___jule_assign_arg;
	});
	if ((!_2535_os.equal("native", 6))) {
		_1ad4c02e0_checkTargetOs(_2535_os);
		_20b1a0ca8_Os=_2535_os;
	};
	if ((!_2539_arch.equal("native", 6))) {
		_1ad4c00ae_checkTargetArch(_2539_arch);
		_20b1a1061_Arch=_2539_arch;
	};
	_1b9aa37c9_UpdateTarget();
}



inline void _1ad4c0752_checkOptFlag(jule::Str* _26618_opt) {
	if (((*(_26618_opt))).empty()) {
		_1ac60ba7b_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1b29b3801:;
			{
				goto _match_end_1b29b305e;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1b29b389a:;
			{
				_1ac9556aa_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else {
			_case_begin_1b29b314c:;
			{
				_1ac60ba7b_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b29b305e:;
	};
}



inline void _1ad4c0b1a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1eb3ce447_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1b29b4659:;
			{
				goto _match_end_1b29b413c;
			}
		}
		else {
			_case_begin_1b29b3537:;
			{
				_1ac60ba7b_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1eb3ce447_CppStd));
			}
		}
		_match_end_1b29b413c:;
	};
}



inline jule::Slice<jule::Str> _1ad4c0cd5_checkFlags(jule::Slice<jule::Str>* _29216_args) {
	jule::Str _2939_opt = jule::Str::lit("L0", 2);;
	jule::Str _2949_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1ad4b7c33_FlagSet> _2969_fs = static__1ad4b801e_New();;
	_1b29b602e_AddVar(_2969_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2939_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1b29b602e_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_2949_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1b29b602e_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1ad4bd255_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1eb3ce678_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1eb3ce931_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1b29b602e_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1eb3ce117_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1b29b602e_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1eb3c8b8e_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1eb3d059c_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1eb3cee92_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1eb3d035a_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1b29b602e_AddVar(_2969_fs, ((jule::Ptr<jule::Str>)((&(_1eb3ce447_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac952d8e_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac95318b_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac953444_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac953741_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac9539e9_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac953ca2_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac95405a_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac954423_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac954665_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac95490c_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac954bb5_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac954e6d_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac955226_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1b29bd377_AddVar(_2969_fs, ((jule::Ptr<jule::Bool>)((&(_1ac9554ce_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	jule::Slice<jule::Str> _3249_content = ({
		auto except = _1ad4b8ddd_Parse(_2969_fs, (*(_29216_args)));
		(except.ok()) ? (except.result) : ({
			_1ac60ba7b_Throw(except.error.cast<jule::Str>(&__jule_any_type4));

			nullptr;
		});
	});;
	_1ad4beda0_checkCompilerFlag();
	_1ad4c0b1a_checkCppStdFlag();
	_1ad4c0521_checkTargetFlag(&(_2949_target));
	_1ad4c0752_checkOptFlag(&(_2939_opt));
	return _3249_content;;
}



inline void _1ad4c0ee4_setupSemaFlags(jule::I32* _33724_flags) {
	if (_1eb3ce678_Shadowing) {
		(*(_33724_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1ac92a43d_IR> _1ad4c12ad_buildIr(jule::Slice<jule::Str>* _34313_args) {
	jule::Slice<jule::Str> _3445_content = _1ad4c0cd5_checkFlags(_34313_args);;
	jule::I32 _3469_semaFlags = static_cast<jule::I32>(0LL);;
	_1ad4c0ee4_setupSemaFlags(&(_3469_semaFlags));
	if ((_3445_content.len() == 0LL)) {
		_1ac60ba7b_Throw(_1eb22e594_Logf(jule::Str::lit("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3445_content.len() > 1LL)) {
		_1ac60ba7b_Throw((jule::Str::lit("undefined content: ", 19) + _3445_content[1LL]));
	};
	jule::Str _3549_path;
	jule::Bool _35415_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _20b0e555a_Abs(_3445_content[0LL]);
		_3549_path = __jule_assign_result.__jule_result_arg0;
		_35415_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35415_ok))) {
		_1ac60ba7b_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_209c26e6d_Status> _3605_inf = ({
		auto except = static__20b0e72e8_Of(_20b1a024c_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ac60ba7b_Throw(_1eb22e594_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_209c26e6d_Status>(nullptr);});
	});;
	if ((!(_209c27347_IsDir(_3605_inf.ptr())))) {
		_1ac60ba7b_Throw(_1eb22e594_Logf(jule::Str::lit("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ac92a43d_IR> _3689_ir;
	jule::Slice<_1eb22e132_Log> _36813_logs;
	({
		__jule_tuple_x_1ac92a43d_IR__jule_tuple_s_1eb22e132_Log __jule_assign_result = static__1ac92a8d3_Build(_3549_path, _3469_semaFlags);
		_3689_ir = __jule_assign_result.__jule_result_arg0;
		_36813_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3689_ir == nullptr) && (_36813_logs == nullptr))) {
		_1ac60ba7b_Throw(_1eb22e594_Logf(jule::Str::lit("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_3549_path, &__jule_any_type4)})));
	};
	if ((_36813_logs != nullptr)) {
		static__1ac60b0b9_PrintLogs(&(_36813_logs));
		_1ac60ba7b_Throw(jule::Str());
	};
	return _3689_ir;;
}



inline void _1ad4c14de_compileCommand(jule::Slice<jule::Str>* _38324_args) {
	((*(_38324_args))).mut_slice(1LL);;
	if ((*(_38324_args))[0LL].equal("test", 4)) {
		_1eb3cebd9_Test=true;
		((*(_38324_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ac92a43d_IR> _3899_ir = _1ad4c12ad_buildIr(_38324_args);;
	;
	if ((!(_1eb3cebd9_Test))) {
		jule::Ptr<_1abd566a0_Fn> _39413_main = _1ab67bab9_FindFn((*(_3899_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);;
		if ((_39413_main == nullptr)) {
			_1ac60ba7b_Throw(_1eb22e594_Logf(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1ad4bec07_applyTargetIndependentOptimizations(&(_3899_ir));
	_1ac92b94a_Order(_3899_ir);
	jule::Str _4055_compPath = _1ad4be9c6_getCompilePath();;
	jule::Str _4065_compiler;
	jule::Str _40615_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ad4be83e_genCompileCmd(_4055_compPath, &(_3899_ir));
		_4065_compiler = __jule_assign_result.__jule_result_arg0;
		_40615_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ad42eb78_ObjectCoder> _4089_oc = static__1ad430074_New(&(_3899_ir), _1ad42cdc9_SerializationInfo{._field_Compiler=_4065_compiler, ._field_CompilerCommand=_40615_compilerCmd});;
	if (_1eb3cebd9_Test) {
		jule::Ptr<_1ad36ec3e_TestCoder> _41313_tc = static__1ad3701b2_New(&(_4089_oc));;
		_1ad371537_Serialize(_41313_tc);
	} else {
		_1ad43c1a2_Serialize(_4089_oc);
	};
	jule::Ptr<_209c24d39_File> _4199_file = _1ad4bd6c8_openOutput(&(_4055_compPath));;
	({
		auto except = _209d39e71_Write(_4199_file.ptr(), _209e10222_Buf(&(*(_4089_oc))._field_Buf));
		if (!except.ok()) {
			_1ac60ba7b_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _209c263bd_Close(_4199_file);
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:423:5"));
	});
	if ((!(_1eb3ce931_Transpilation))) {
		_1ad4bdb7e_compileIr(_4065_compiler, _40615_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_20b1a11a4_init();
	_1b9aa3950_init();
	_20b1a6242_init();
	_1ad4bd40e_init();

}

inline jule::Bool __jule_anon1b01a15a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd58608_ParamIns> _24027_p1, jule::Ptr<_1abd58608_ParamIns> _24042_p2) {
	if (((*((*(_24027_p1))._field_Decl))._field_Mutable != (*(*(_24042_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1abd552e7_IsSelf((*_24027_p1.alloc)._field_Decl)) {
		if ((!(_1abd552e7_IsSelf((*_24042_p2.alloc)._field_Decl)))) {
			return false;;
		};
		if ((_1abd5557d_IsRef((*_24027_p1.alloc)._field_Decl) != _1abd5557d_IsRef((*_24042_p2.alloc)._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Reference != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*_24027_p1.alloc)._field_Decl.alloc)._field_Variadic != (*(*_24042_p2.alloc)._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1abe43539_Equal((*_24027_p1.alloc)._field_Kind, (*_24042_p2.alloc)._field_Kind);;
}

inline jule::Bool __jule_anon_1b020c6e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _50045_spkg) {
	jule::Ptr<__jule_anon_1b020c6e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b020c6e0_ctx>();
	return ((*((*(__jule_closure_ctx.alloc->_49841_pkg))))._field_Path == (*(_50045_spkg))._field_Path);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0261ba6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _8833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _8848_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0261ba6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0261ba6_ctx>();
	return _1abd73348__Name(__jule_closure_ctx.alloc->_self_, _8833_e, _8848_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0263b53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _9533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _9548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0263b53_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0263b53_ctx>();
	return _1abd73b40__Public(__jule_closure_ctx.alloc->_self_, _9533_e, _9548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0265aab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _10233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _10248_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0265aab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0265aab_ctx>();
	return _1abd73744__Type(__jule_closure_ctx.alloc->_self_, _10233_e, _10248_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0277859(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _21133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _21148_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0277859_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0277859_ctx>();
	return _1abd76648__Name(__jule_closure_ctx.alloc->_self_, _21133_e, _21148_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02797b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _21833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _21848_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b02797b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02797b2_ctx>();
	return _1abd76e40__Public(__jule_closure_ctx.alloc->_self_, _21833_e, _21848_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b027b71a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _22533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _22548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b027b71a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b027b71a_ctx>();
	return _1abd76a44__Type(__jule_closure_ctx.alloc->_self_, _22533_e, _22548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b028853a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _31333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _31348_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b028853a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b028853a_ctx>();
	return _1abd7985a__Name(__jule_closure_ctx.alloc->_self_, _31333_e, _31348_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b029d0aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _43533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _43548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b029d0aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b029d0aa_ctx>();
	return _1abd7c4c8__Name(__jule_closure_ctx.alloc->_self_, _43533_e, _43548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a0013(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44248_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b02a0013_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a0013_ctx>();
	return _1abd7ccc0__Variadic(__jule_closure_ctx.alloc->_self_, _44233_e, _44248_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a1e6b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _44933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _44948_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b02a1e6b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a1e6b_ctx>();
	return _1abd7d1bb__Reference(__jule_closure_ctx.alloc->_self_, _44933_e, _44948_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b02a3dc4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _45633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _45648_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b02a3dc4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b02a3dc4_ctx>();
	return _1abd7c8c4__Type(__jule_closure_ctx.alloc->_self_, _45633_e, _45648_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033663d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _99833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _99848_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b033663d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033663d_ctx>();
	return _1abd82214__Str(__jule_closure_ctx.alloc->_self_, _99833_e, _99848_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0338596(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _100533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _100548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0338596_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0338596_ctx>();
	return _1abd82a0b__Bits(__jule_closure_ctx.alloc->_self_, _100533_e, _100548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033a4ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _101233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _101248_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b033a4ee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033a4ee_ctx>();
	return _1ab63eb04__Elem(__jule_closure_ctx.alloc->_self_, _101233_e, _101248_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033c457(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _101933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _101948_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b033c457_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033c457_ctx>();
	return _1ab640000__Size(__jule_closure_ctx.alloc->_self_, _101933_e, _101948_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b033e3b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _102633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _102648_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b033e3b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b033e3b0_ctx>();
	return _1ab6403eb__Key(__jule_closure_ctx.alloc->_self_, _102633_e, _102648_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0341318(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _103333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _103348_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0341318_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0341318_ctx>();
	return _1ab6407e7__Value(__jule_closure_ctx.alloc->_self_, _103333_e, _103348_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0343271(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _104033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _104048_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0343271_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0343271_ctx>();
	return _1ab640be3__Fields(__jule_closure_ctx.alloc->_self_, _104033_e, _104048_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03451c9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _104733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _104748_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b03451c9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03451c9_ctx>();
	return _1ab6410de__Statics(__jule_closure_ctx.alloc->_self_, _104733_e, _104748_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03473a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _105433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _105448_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b03473a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03473a7_ctx>();
	return _1ab643eb0__Params(__jule_closure_ctx.alloc->_self_, _105433_e, _105448_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01e89a6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _106133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _106148_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b01e89a6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b01e89a6_ctx>();
	return _1ab6429c5__Types(__jule_closure_ctx.alloc->_self_, _106133_e, _106148_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ea810(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _106833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _106848_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b01ea810_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b01ea810_ctx>();
	return _1ab6414da__Public(__jule_closure_ctx.alloc->_self_, _106833_e, _106848_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ec768(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _107533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _107548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b01ec768_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b01ec768_ctx>();
	return _1ab6418d6__Binded(__jule_closure_ctx.alloc->_self_, _107533_e, _107548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b01ee6c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _108233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _108248_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b01ee6c1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b01ee6c1_ctx>();
	return _1ab641cd2__Ordered(__jule_closure_ctx.alloc->_self_, _108233_e, _108248_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0361ed7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _108933_e, jule::Ptr<_1abd288a3_FnCallExpr>* _108948_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0361ed7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0361ed7_ctx>();
	return _1ab6421cd__Comparable(__jule_closure_ctx.alloc->_self_, _108933_e, _108948_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0363e40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _109633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _109648_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0363e40_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0363e40_ctx>();
	return _1ab6425c9__Mutable(__jule_closure_ctx.alloc->_self_, _109633_e, _109648_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0365d98(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _110333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _110348_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0365d98_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0365d98_ctx>();
	return _1ab642dc1__Exceptional(__jule_closure_ctx.alloc->_self_, _110333_e, _110348_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0367d01(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _111033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _111048_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0367d01_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0367d01_ctx>();
	return _1ab6432bc__CanNil(__jule_closure_ctx.alloc->_self_, _111033_e, _111048_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0369c59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _111733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _111748_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0369c59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0369c59_ctx>();
	return _1ab6436b8__RC(__jule_closure_ctx.alloc->_self_, _111733_e, _111748_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b036bbb2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _112433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _112448_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b036bbb2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b036bbb2_ctx>();
	return _1ab643ab4__Result(__jule_closure_ctx.alloc->_self_, _112433_e, _112448_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b036db1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _113133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _113148_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b036db1a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b036db1a_ctx>();
	return _1abd82610__Kind(__jule_closure_ctx.alloc->_self_, _113133_e, _113148_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038931c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _124733_e, jule::Ptr<_1abd288a3_FnCallExpr>* _124748_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b038931c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b038931c_ctx>();
	return _1ab645324__Unwrap(__jule_closure_ctx.alloc->_self_, _124733_e, _124748_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038b275(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _125433_e, jule::Ptr<_1abd288a3_FnCallExpr>* _125448_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b038b275_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b038b275_ctx>();
	return _1ab645720__Type(__jule_closure_ctx.alloc->_self_, _125433_e, _125448_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b038d1cd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _126133_e, jule::Ptr<_1abd288a3_FnCallExpr>* _126148_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b038d1cd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b038d1cd_ctx>();
	return _1ab645b1b__Lvalue(__jule_closure_ctx.alloc->_self_, _126133_e, _126148_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0390136(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _126833_e, jule::Ptr<_1abd288a3_FnCallExpr>* _126848_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0390136_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0390136_ctx>();
	return _1ab646017__Mutable(__jule_closure_ctx.alloc->_self_, _126833_e, _126848_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b039208e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _127533_e, jule::Ptr<_1abd288a3_FnCallExpr>* _127548_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b039208e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b039208e_ctx>();
	return _1ab646413__Const(__jule_closure_ctx.alloc->_self_, _127533_e, _127548_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b0393ee7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _128233_e, jule::Ptr<_1abd288a3_FnCallExpr>* _128248_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b0393ee7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b0393ee7_ctx>();
	return _1ab64680e__Field(__jule_closure_ctx.alloc->_self_, _128233_e, _128248_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03a6a32(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _139633_e, jule::Ptr<_1abd288a3_FnCallExpr>* _139648_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b03a6a32_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03a6a32_ctx>();
	return _1ab64947c__Path(__jule_closure_ctx.alloc->_self_, _139633_e, _139648_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03a898a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _140333_e, jule::Ptr<_1abd288a3_FnCallExpr>* _140348_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b03a898a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03a898a_ctx>();
	return _1ab649878__Name(__jule_closure_ctx.alloc->_self_, _140333_e, _140348_fc);;
}

inline jule::Ptr<_1abe11936_Data> __jule_anon_1b03aa8e3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe1365d_Eval>* _141033_e, jule::Ptr<_1abd288a3_FnCallExpr>* _141048_fc, jule::Ptr<_1abe11936_Data>* ) {
	jule::Ptr<__jule_anon_1b03aa8e3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03aa8e3_ctx>();
	return _1ab649c74__Dir(__jule_closure_ctx.alloc->_self_, _141033_e, _141048_fc);;
}

inline jule::Bool __jule_anon_1b03b6426(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab6979a3_Sema>* _6421_sema, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _6439_generics) {
	jule::Ptr<__jule_anon_1b03b6426_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b03b6426_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b03b74d2:;
		if (it != expr_end) {
			jule::I32 _6518_i = it - expr->begin();
			jule::Ptr<_1abd2ca50_GenericDecl> _6525_g = *it;
			{
				jule::Ptr<_1abe41449_InsGeneric> _6621_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_6518_i];;
				if ((((*(_6525_g))._field_Constraint == nullptr) || ((*((*_6525_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1b03b74d2;
				};
				(*(_6621_generic))._field_Constraint=jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::alloc(0LL, (*((*_6525_g.alloc)._field_Constraint))._field_Mask.len());
				{
					auto expr = &((*((*_6525_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b03ba24e:;
					if (it != expr_end) {
						jule::Ptr<_1abd20845_TypeDecl> _7129_mask = *it;
						{
							jule::I32 _7221_n = (*((*(_6421_sema))))._field_errors.len();;
							jule::Ptr<_1abe42d30_TypeKind> _7325_kind = _1ab6a056b_buildTypeWithRefers((*(_6421_sema)), &(_7129_mask), jule::Trait((*(_6421_sema)), (jule::Trait::Type*)&_1abe62921_Lookup_mptr_data3), (*(_6439_generics)), nullptr);;
							if ((_7325_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7129_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type74) {
										_case_begin_1b03bc042:;
										{
											jule::Ptr<_1abd20e50_IdentTypeDecl> _7733_itd = (*(_7129_mask))._field_Kind.unsafe_cast_ptr<_1abd20e50_IdentTypeDecl>();;
											if ((((*(_7733_itd))._field_Generics.len() == 0LL) && _1ab64e74b_isBuiltinConstraint(&((*_7733_itd.alloc)._field_Ident)))) {
												_7325_kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(_1abe5ec4d_buildPrimType((*_7733_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data20)});
												((*((*(_6421_sema))))._field_errors).mut_slice(0LL, _7221_n);;
												goto _julec_label_1b03bebc1;
											};
										}
									}
									_match_end_1b03bbecb:;
								};
								return false;;
							};
							_julec_label_1b03bebc1:;
							(*_6621_generic.alloc)._field_Constraint=jule::append((*_6621_generic.alloc)._field_Constraint,jule::Slice<jule::Ptr<_1abe42d30_TypeKind>>::make({_7325_kind}));
						}
						_iter_next_1b03ba24e:;
						++it;
						goto _iter_begin_1b03ba24e;
					}
					_iter_end_1b03ba24e:;
				};
			}
			_iter_next_1b03b74d2:;
			++it;
			_6518_i++;
			goto _iter_begin_1b03b74d2;
		}
		_iter_end_1b03b74d2:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1aeea51e1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab6979a3_Sema>* _110543_sema, jule::Slice<jule::Ptr<_1abe4203d_TypeAlias>>* _110561_generics) {
	jule::Ptr<__jule_anon_1aeea51e1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1aeea51e1_ctx>();
	jule::Bool _110617_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1aeea6687:;
		if (it != expr_end) {
			jule::Ptr<_1abd58608_ParamIns> _110725_p = *it;
			{
				if (_1abd552e7_IsSelf((*(_110725_p))._field_Decl.ptr())) {
					if (_1abd5557d_IsRef((*_110725_p.alloc)._field_Decl)) {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait(jule::new_ptr<_1abe4e435_Sptr>(_1abe4e435_Sptr{._field_Elem=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1abe42879_Kind_mptr_data21)});
					} else {
						(*_110725_p.alloc)._field_Kind=jule::new_ptr<_1abe42d30_TypeKind>(_1abe42d30_TypeKind{._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Owner, (jule::Trait::Type*)&_1abe42879_Kind_mptr_data0)});
					};
				} else {
					(*(_110725_p))._field_Kind=_1ab6a1715_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*_110725_p.alloc)._field_Decl))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
					if (((*_110725_p.alloc)._field_Kind != nullptr)) {
						_1ab6a6231_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_110725_p));
					} else {
						_110617_ok=false;
					};
				};
			}
			_iter_next_1aeea6687:;
			++it;
			goto _iter_begin_1aeea6687;
		}
		_iter_end_1aeea6687:;
	};
	if ((!(_1abd56b23_IsVoid((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result=_1ab6a1715_buildTypeWithGenerics((*(_110543_sema)), &((*((*((*(*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Decl.alloc)._field_Result))._field_Kind))._field_Decl), (*(_110561_generics)), (*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Refers);
		_110617_ok=(((*__jule_closure_ctx.alloc->_110140_f.alloc)._field_Result != nullptr) && _110617_ok);
	};
	return _110617_ok;;
}

inline jule::Bool __jule_anon_1ae816cc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _183149_imp) {
	jule::Ptr<__jule_anon_1ae816cc8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ae816cc8_ctx>();
	if ((((*__jule_closure_ctx.alloc->_182934_s.alloc)._field_Ns.len() == 1LL) && ((*(_183149_imp))._field_Alias == __jule_closure_ctx.alloc->_18309_path))) {
		return true;;
	};
	return (((*_183149_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_18309_path) && _1ab67a227_isAccessibleViaSelection(_183149_imp));;
}

inline jule::Str __jule_anon1b17c4de9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _84725_def) {
	{
		auto &_match_expr{ (*(_84725_def)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b17c5eb6:;
			{
				return (*((*(_84725_def)).cast_ptr<_1abe4203d_TypeAlias>(&__jule_any_type65)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b17c5cda:;
			{
				return (*((*(_84725_def)).cast_ptr<_1abd416ce_Struct>(&__jule_any_type64)))._field_Ident;;
			}
		}
		else {
			_case_begin_1b17c58ab:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b17c5856:;
	};
}

inline jule::Bool __jule_anon_1b1850b56(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _151949_imp) {
	jule::Ptr<__jule_anon_1b1850b56_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b1850b56_ctx>();
	if ((((*__jule_closure_ctx.alloc->_151739_decl.alloc)._field_Idents.len() == 1LL) && ((*(_151949_imp))._field_Alias == __jule_closure_ctx.alloc->_15189_path))) {
		return true;;
	};
	return (((*_151949_imp.alloc)._field_LinkPath == __jule_closure_ctx.alloc->_15189_path) && _1ab67a227_isAccessibleViaSelection(_151949_imp));;
}

inline void __jule_anon_1b228d296(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b228d296_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b228d296_ctx>();
	if (__jule_closure_ctx.alloc->_13713_ref) {
		_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1b2291d8d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b2291d8d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2291d8d_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_12939_it))))._field_KeyB.alloc)._field_Reference) {
			_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it", 2));
		} else {
			_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1b22a1364(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b22a1364_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b22a1364_ctx>();
	_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->first", 9));
}

inline void __jule_anon_1b22a37d9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b22a37d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b22a37d9_ctx>();
	_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("it->second", 10));
}

inline void __jule_anon_1b22bc77b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b22bc77b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b22bc77b_ctx>();
	_1ad43032c_write((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1b23381dc(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b23381dc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b23381dc_ctx>();
	_1ad43032c_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1b23394eb(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b23394eb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b23394eb_ctx>();
	_1ad36277b_possibleRefExpr((*(*__jule_closure_ctx.alloc->_self_.alloc)._field_oc.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_63533_m.alloc)._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1b24bc382(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abda8d2e_Var> _101176_v) {
	jule::Ptr<__jule_anon_1b24bc382_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b24bc382_ctx>();
	return _1ad35b91d_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_100537_m), &(_101176_v));;
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1b2968795(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22865_s, jule::I32 _22873_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b9a87c31_ParseInt(_22865_s, _22873_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1b297165a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23666_s, jule::I32 _23674_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1b9a8777a_ParseUint(_23666_s, _23674_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline void __jule_anon_1b28d7329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _82744_pkg) {
	jule::Ptr<__jule_anon_1b28d7329_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28d7329_ctx>();
	_1ac92ce13_IterFiles(_82744_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b28d824d, jule::Ptr<__jule_anon_1b28d824d_ctx>::make(__jule_anon_1b28d824d_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b28d824d_ctx_handler));
}

inline void __jule_anon_1b28d8825(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _84042_m) {
	jule::Ptr<__jule_anon_1b28d8825_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28d8825_ctx>();
	jule::Ptr<_1abd59681_FnIns> _84117_ins = (*((*(_84042_m))))._field_Instances[0LL];;
	{
		auto expr = (*(_84117_ins))._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b28db9e3:;
		if (it != expr_end) {
			jule::I32 _84218_i = it - expr.begin();
			jule::Ptr<_1abd58608_ParamIns> _84225_ip = *it;
			{
				if (_1abd0d03b_IsAnonIdent((*((*(_84225_ip))._field_Decl))._field_Ident)) {
					(*(*_84225_ip.alloc)._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1b9a9e40c_Itoa(_84218_i));
				};
			}
			_iter_next_1b28db9e3:;
			++it;
			_84218_i++;
			goto _iter_begin_1b28db9e3;
		}
		_iter_end_1b28db9e3:;
	};
	_1ad432054_pushResult(__jule_closure_ctx.alloc->_self_, _84042_m);
	_1ad43629a_funcDeclTrait(__jule_closure_ctx.alloc->_self_, _84042_m);
}

inline void __jule_anon_1b28dde35(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _85344_pkg) {
	jule::Ptr<__jule_anon_1b28dde35_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28dde35_ctx>();
	_1ac92ce13_IterFiles(_85344_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b28ded37, jule::Ptr<__jule_anon_1b28ded37_ctx>::make(__jule_anon_1b28ded37_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b28ded37_ctx_handler));
}

inline void __jule_anon_1b28ee990(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b28ee990_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28ee990_ctx>();
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1ad36c148_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1b2901a91(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b2901a91_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2901a91_ctx>();
	_1ad36277b_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Value.alloc)._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1b203a296(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b203a296_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b203a296_ctx>();
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1b203b3da(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1b203b3da_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b203b3da_ctx>();
	_1ad36c401_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*__jule_closure_ctx.alloc->_92027_v.alloc)._field_Kind.alloc)._field_Kind);
}

inline void __jule_anon_1b2059a24(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _106244_pkg) {
	jule::Ptr<__jule_anon_1b2059a24_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2059a24_ctx>();
	_1ac92ce13_IterFiles(_106244_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b205a948, jule::Ptr<__jule_anon_1b205a948_ctx>::make(__jule_anon_1b205a948_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b205a948_ctx_handler));
}

inline void __jule_anon_1b205adee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _107742_m) {
	jule::Ptr<__jule_anon_1b205adee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b205adee_ctx>();
	_1ad430bce_indent(__jule_closure_ctx.alloc->_self_);
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(".", 1));
	static__1ad373ca9_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _107742_m);
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("=__jule_trait_method_", 21));
	jule::Ptr<_1abd59681_FnIns> _108213_mepf;
	jule::Bool _108219_exist;
	({
		__jule_tuple_x_1abd59681_FnIns__jule_tuple_bool __jule_assign_result = _1ad438bd7_findTraitMetMap(__jule_closure_ctx.alloc->_self_, _107742_m);
		_108213_mepf = __jule_assign_result.__jule_result_arg0;
		_108219_exist = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_108219_exist))) {
		jule::panic(jule::Str::lit("implementation mistake, [traitDataMethods] could not found MepMap record", 72) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1084:17"));;
	};
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_108213_mepf)), 15LL));
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("_", 1));
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, _1b9a9dc7a_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(__jule_closure_ctx.alloc->_107652_s)), 15LL));
	_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(",\n", 2));
}

inline void __jule_anon_1b2068879(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _111444_pkg) {
	jule::Ptr<__jule_anon_1b2068879_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2068879_ctx>();
	_1ac92ce13_IterFiles(_111444_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b206977b, jule::Ptr<__jule_anon_1b206977b_ctx>::make(__jule_anon_1b206977b_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b206977b_ctx_handler));
}

inline void __jule_anon_1b2086941(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _123944_pkg) {
	jule::Ptr<__jule_anon_1b2086941_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2086941_ctx>();
	_1ac92ce13_IterFiles(_123944_pkg, jule::__new_closure<void,jule::Ptr<_1abe0b5bd_SymbolTable>*>((void*)__jule_anon_1b2087843, jule::Ptr<__jule_anon_1b2087843_ctx>::make(__jule_anon_1b2087843_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1b2087843_ctx_handler));
}

inline void __jule_anon_1b2087e1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _125537_file) {
	jule::Ptr<__jule_anon_1b2087e1a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2087e1a_ctx>();
	{
		auto expr = &((*((*(_125537_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b208ad63:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _125620_f = *it;
			{
				if ((*(_125620_f))._field_Ident.equal("init", 4)) {
					_1ad430bce_indent(__jule_closure_ctx.alloc->_self_);
					static__1ad373ca9_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_125620_f));
					_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1b208ad63:;
			++it;
			goto _iter_begin_1b208ad63;
		}
		_iter_end_1b208ad63:;
	};
}

inline void __jule_anon_1b2090be2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67a535_Package>* _128444_pkg) {
	jule::Ptr<__jule_anon_1b2090be2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2090be2_ctx>();
	_1ad43b349_pushInit(__jule_closure_ctx.alloc->_self_, _128444_pkg);
}

inline jule::Bool __jule_anon1b0255084(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ab67760e_ImportInfo> _143028_pkg) {
	return (*(_143028_pkg))._field_LinkPath.equal("std::comptime", 13);;
}

inline void __jule_anon_1b28d824d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _82841_file) {
	jule::Ptr<__jule_anon_1b28d824d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28d824d_ctx>();
	{
		auto expr = &((*((*(_82841_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28d8bcc:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _82929_f = *it;
			{
				if (((!((*(_82929_f))._field_Binded)) && ((*_82929_f.alloc)._field_Token != nullptr))) {
					_1ad432054_pushResult(__jule_closure_ctx.alloc->_self_, &(_82929_f));
					_1ad435ee2_funcDecl(__jule_closure_ctx.alloc->_self_, &(_82929_f), false);
				};
			}
			_iter_next_1b28d8bcc:;
			++it;
			goto _iter_begin_1b28d8bcc;
		}
		_iter_end_1b28d8bcc:;
	};
}

inline void __jule_anon_1b28ded37(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _85441_file) {
	jule::Ptr<__jule_anon_1b28ded37_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b28ded37_ctx>();
	{
		auto expr = &((*((*(_85441_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b28e07b6:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _85529_t = *it;
			{
				if ((((*(_85529_t))._field_Token == nullptr) || ((*_85529_t.alloc)._field_Implemented.len() == 0LL))) {
					goto _iter_next_1b28e07b6;
				};
				_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("struct ", 7));
				static__1ad374381_traitDecl(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), _85529_t);
				_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("MptrData", 8));
				_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(" {\n", 3));
				_1ad4307d3_addIndent(__jule_closure_ctx.alloc->_self_);
				_1ad430bce_indent(__jule_closure_ctx.alloc->_self_);
				_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1ad436751_traitDataTypeMethods(__jule_closure_ctx.alloc->_self_, &(_85529_t));
				_1ad4309d1_doneIndent(__jule_closure_ctx.alloc->_self_);
				_1ad430bce_indent(__jule_closure_ctx.alloc->_self_);
				_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1b28e07b6:;
			++it;
			goto _iter_begin_1b28e07b6;
		}
		_iter_end_1b28e07b6:;
	};
}

inline void __jule_anon_1b205a948(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _106341_file) {
	jule::Ptr<__jule_anon_1b205a948_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b205a948_ctx>();
	{
		auto expr = &((*((*(_106341_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b205b3e9:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _106429_t = *it;
			{
				if (((*(_106429_t))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1b205b3e9;
				};
				_1ac92d980_IterTraitMethods(&(_106429_t), jule::__new_closure<void,jule::Ptr<_1abd566a0_Fn>*>((void*)__jule_anon_1b205c917, jule::Ptr<__jule_anon_1b205c917_ctx>::make(__jule_anon_1b205c917_ctx{._self_=__jule_closure_ctx.alloc->_self_,._106429_t=_106429_t}).as<jule::Uintptr>(), __jule_anon_1b205c917_ctx_handler));
			}
			_iter_next_1b205b3e9:;
			++it;
			goto _iter_begin_1b205b3e9;
		}
		_iter_end_1b205b3e9:;
	};
}

inline void __jule_anon_1b206977b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _111541_file) {
	jule::Ptr<__jule_anon_1b206977b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b206977b_ctx>();
	{
		auto expr = &((*((*(_111541_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b206a20a:;
		if (it != expr_end) {
			jule::Ptr<_1abd69a59_Trait> _111629_t = *it;
			{
				jule::I32 _111725_i = 0LL;;
				{
					auto expr = &((*(_111629_t))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b206b01e:;
					if (it != expr_end) {
						jule::Ptr<_1abd416ce_Struct> _111833_s = *it;
						{
							{
								auto expr = &((*(_111833_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b206b8c1:;
								if (it != expr_end) {
									jule::Ptr<_1abd4445c_StructIns> _111937_ins = *it;
									{
										_1ad4399c9_traitData(__jule_closure_ctx.alloc->_self_, &(_111629_t), _111725_i, &(_111937_ins));
										(_111725_i)++;
									}
									_iter_next_1b206b8c1:;
									++it;
									goto _iter_begin_1b206b8c1;
								}
								_iter_end_1b206b8c1:;
							};
						}
						_iter_next_1b206b01e:;
						++it;
						goto _iter_begin_1b206b01e;
					}
					_iter_end_1b206b01e:;
				};
			}
			_iter_next_1b206a20a:;
			++it;
			goto _iter_begin_1b206a20a;
		}
		_iter_end_1b206a20a:;
	};
}

inline void __jule_anon_1b2087843(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abe0b5bd_SymbolTable>* _124041_file) {
	jule::Ptr<__jule_anon_1b2087843_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b2087843_ctx>();
	{
		auto expr = &((*((*(_124041_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b20882c2:;
		if (it != expr_end) {
			jule::Ptr<_1abd566a0_Fn> _124129_f = *it;
			{
				if (((!(_1eb3cebd9_Test)) && _1ac936944_HasDirective(&((*(_124129_f))._field_Directives), jule::Str::lit("test", 4)))) {
					goto _iter_next_1b20882c2;
				};
				if (((!((*_124129_f.alloc)._field_Binded)) && ((*_124129_f.alloc)._field_Token != nullptr))) {
					_1ad438533_func(__jule_closure_ctx.alloc->_self_, &(_124129_f));
					_1ad43032c_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1b20882c2:;
			++it;
			goto _iter_begin_1b20882c2;
		}
		_iter_end_1b20882c2:;
	};
}

inline void __jule_anon_1b205c917(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1abd566a0_Fn>* _106854_m) {
	jule::Ptr<__jule_anon_1b205c917_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1b205c917_ctx>();
	_1ad43904a_traitWrapper(__jule_closure_ctx.alloc->_self_, &(__jule_closure_ctx.alloc->_106429_t), _106854_m);
}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}