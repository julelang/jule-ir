// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 17/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp -lws2_32 -lshell32 -lshell32

#define __JULE_ENABLE__PRODUCTION
#include <winsock2.h>
#include <ws2ipdef.h>
#include <fcntl.h>
#include <io.h>
#include <windows.h>
#include <cstdio>
#include <sys/stat.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1bb48ade6_acceptRange;
struct _1bb4dda81_LittleEndian;
struct _1bb50879e_u128;
struct _1c0d58a23_group;
struct _1c0da4d8d_group;
struct _1c0d56724__Map;
struct _1c0da2c59__Map;
struct _1c0d62e5b_mapIterator;
struct _1c0dac33a_mapIterator;
struct _1a6a5cb3c_Builder;
struct _1a8e41260_foldPair;
struct _1a8e4175a_CaseRange;
struct _1a8e41c11_Range16;
struct _1a8e4223e_Range32;
struct _1a8e426b2_RangeTable;
struct _1a8e50a44_lazyBuff;
struct _1a6b2a91e_cmdAttrs;
struct _1a6b3087a_File;
struct _1a6b32eba_Stat;
struct _1a6a6bde3_Log;
struct _1aa502622_floatInfo;
struct _1aa503205_decimalSlice;
struct _1aa515190_leftCheat;
struct _1aa515ba7_decimal;
struct _1bb5b3491_AnsiEscape;
struct _1aa51b493_Logger;
struct _1abc2ba81_Token;
struct _1abc32636_Fileset;
struct _1abc34957_kindPair;
struct _1abc3a8e7_lex;
struct _1abc40644_AST;
struct _1abc4159b_Node;
struct _1abc419b9_Directive;
struct _1abc4259c_TypeDecl;
struct _1abc42ba7_IdentTypeDecl;
struct _1abc42e71_SubIdentTypeDecl;
struct _1abc4334a_NamespaceTypeDecl;
struct _1abc43647_SptrTypeDecl;
struct _1abc439cc_SlcTypeDecl;
struct _1abc43cc9_TupleTypeDecl;
struct _1abc440c6_PtrTypeDecl;
struct _1abc44868_ArrTypeDecl;
struct _1abc450b6_MapTypeDecl;
struct _1abc45490_RetTypeDecl;
struct _1ac9b2a47_Expr;
struct _1ac9b2d11_RangeExpr;
struct _1ac9b341b_UseExpr;
struct _1ac9b363b_TupleExpr;
struct _1ac9b39d2_LitExpr;
struct _1ac9b3dab_UnsafeExpr;
struct _1ac9b4362_IdentExpr;
struct _1ac9b4b04_UnaryExpr;
struct _1ac9b4ecd_VariadicExpr;
struct _1ac9b53a7_CastExpr;
struct _1ac9b5781_NamespaceExpr;
struct _1ac9b5b5a_SubIdentExpr;
struct _1ac9b6111_BinaryExpr;
struct _1ac9b6771_FnCallExpr;
struct _1ac9b7266_FieldExprPair;
struct _1ac9b7a91_StructLit;
struct _1ac9b8047_BraceLit;
struct _1ac9b8872_KeyValPair;
struct _1ac9b909d_SliceExpr;
struct _1ac9b9a0a_IndexingExpr;
struct _1ac9ba16a_SlicingExpr;
struct _1ac9ba467_Constraint;
struct _1ac9ba91d_GenericDecl;
struct _1ac9bace7_LabelSt;
struct _1ac9bb1c1_GotoSt;
struct _1ac9bb4bd_FallSt;
struct _1ac9bbb2d_AssignLeft;
struct _1ac9bc1b1_AssignSt;
struct _1ac9bd1a1_Stmt;
struct _1ac9bd811_ScopeTree;
struct _1ac9be04d_ParamDecl;
struct _1ac9c04a0_FnDecl;
struct _1ac9c165a_VarDecl;
struct _1ac9c1a34_RetSt;
struct _1ac9c22a4_Iter;
struct _1ac9c2ace_WhileKind;
struct _1ac9c34d6_RangeKind;
struct _1ac9c38b0_BreakSt;
struct _1ac9c3c89_ContSt;
struct _1ac9c4240_If;
struct _1ac9c4619_Else;
struct _1ac9c4ac0_Conditional;
struct _1ac9c530c_TypeAliasDecl;
struct _1ac9c57b3_Case;
struct _1ac9c60cc_MatchCase;
struct _1ac9c6660_UseDecl;
struct _1ac9c6b16_EnumItemDecl;
struct _1ac9c76c7_EnumDecl;
struct _1ac9c8002_TypeEnumItemDecl;
struct _1ac9c8662_TypeEnumDecl;
struct _1ac9c892b_FieldDecl;
struct _1ac9c9322_StructDecl;
struct _1ac9c9a5e_TraitDecl;
struct _1ac9ca1be_Impl;
struct _1aca3208e_Const;
struct _1ac9cb203_Field;
struct _1ac9cd216_Operators;
struct _1ac9ce129_Struct;
struct _1ac9d13d4_FieldIns;
struct _1ac9d1e84_StructIns;
struct _1aca94b3a_OperandExprModel;
struct _1aca95135_BinaryExprModel;
struct _1aca9550e_UnaryExprModel;
struct _1aca95a3c_StructArgExprModel;
struct _1aca95dd3_StructLitExprModel;
struct _1aca961d0_AllocStructLitExprModel;
struct _1aca96763_CastingExprModel;
struct _1aca97115_FnCallExprModel;
struct _1aca974de_SliceExprModel;
struct _1aca97995_IndexingExprModel;
struct _1aca97e4b_AnonFnExprModel;
struct _1aca98325_KeyValPairExprModel;
struct _1aca986ee_MapExprModel;
struct _1aca98c82_SlicingExprModel;
struct _1aca99315_TraitSubIdentExprModel;
struct _1aca99ba6_StructSubIdentExprModel;
struct _1aca9a04c_StructStaticIdentExprModel;
struct _1aca9a426_ArrayExprModel;
struct _1aca9a723_TupleExprModel;
struct _1aca9aa20_BuiltinPrintCallExprModel;
struct _1aca9ad1c_BuiltinPrintlnCallExprModel;
struct _1aca9b1e6_BuiltinNewCallExprModel;
struct _1aca9b5c0_BuiltinPanicCallExprModel;
struct _1aca9ba76_BuiltinMakeCallExprModel;
struct _1aca9be50_BuiltinAppendCallExprModel;
struct _1aca9c24c_BuiltinLenCallExprModel;
struct _1aca9c549_BuiltinCapCallExprModel;
struct _1aca9c923_BuiltinDeleteCallExprModel;
struct _1aca9ccec_BuiltinCopyCallExprModel;
struct _1aca9d1c6_BuiltinErrorCallExprModel;
struct _1aca9d4c3_SizeofExprModel;
struct _1aca9db77_AlignofExprModel;
struct _1aca9dd64_RuneExprModel;
struct _1aca9e1d8_BackendEmitExprModel;
struct _1aca9e4d5_FreeExprModel;
struct _1acaa02b6_RetType;
struct _1acaa087c_Param;
struct _1acaa2351_Fn;
struct _1acaa42a9_ParamIns;
struct _1acaa540e_FnIns;
struct _1acaa8654_SymTab;
struct _1acaaca65_Trait;
struct _1acaae6b0_EnumItem;
struct _1acab021b_Enum;
struct _1acab134e_TypeEnumItem;
struct _1acab1926_TypeEnum;
struct _1ac92d0bc_comptimeRange;
struct _1ac92db28_comptimeStructField;
struct _1ac9303bb_comptimeStructFields;
struct _1ac931d4b_comptimeStatic;
struct _1ac933600_comptimeStatics;
struct _1ac93506e_comptimeEnumField;
struct _1ac93637d_comptimeEnumFields;
struct _1ac937d85_comptimeParam;
struct _1ac939bde_comptimeParams;
struct _1ac93b54d_comptimeTypeInfos;
struct _1ac93cebc_comptimeTypeInfo;
struct _1ac9440c2_comptimeValue;
struct _1ac946d2d_comptimeFiles;
struct _1ac94879c_comptimeFile;
struct _1ac94a3c5_comptimeDecls;
struct _1ac94c6b3_comptimeDecl;
struct _1ac954148_constraintChecker;
struct _1ac956447_Impl;
struct _1ac95aa56_Scope;
struct _1ac95ae74_If;
struct _1ac95b271_Else;
struct _1ac95b68e_Conditional;
struct _1ac95b98b_InfIter;
struct _1ac95be42_WhileIter;
struct _1ac95c88d_RangeIter;
struct _1ac95cc23_ContSt;
struct _1ac95d0ec_BreakSt;
struct _1ac95d5a3_Label;
struct _1ac95dc13_GotoSt;
struct _1ac95e0dc_Postfix;
struct _1ac95e593_Assign;
struct _1ac95ea49_MultiAssign;
struct _1ac960286_Match;
struct _1ac960cae_Case;
struct _1ac9614a7_FallSt;
struct _1ac96184d_RetSt;
struct _1ac961d04_scopeLabel;
struct _1ac9621cd_result;
struct _1ac9631bd_scopeChecker;
struct _1ac97704a_directiveChecker;
struct _1ac979855_ReferenceStack;
struct _1ac97ada6_Pass;
struct _1ac98085b_symBuilder;
struct _1ac98b8cd_ImportInfo;
struct _1ac98e150_Package;
struct _1ac9a8103_commonSemaMeta;
struct _1ac9a8c2a_sema;
struct _1acb39817_missingRetChecker;
struct _1acb3d420_Var;
struct _1acb3e29a_FuncPattern;
struct _1acb7923b_typeCompatibilityChecker;
struct _1acb7b0b7_assignTypeChecker;
struct _1acb7c98c_dynamicTypeAnnotation;
struct _1acb827e9_fnCallArgChecker;
struct _1acb85731_structLitChecker;
struct _1acb87513_rangeChecker;
struct _1acb89d51_retTypeChecker;
struct _1acb8cded_Data;
struct _1acb8e075_Value;
struct _1acb8e44e_target;
struct _1acb8edbc_eval;
struct _1acbae13e_unaryEval;
struct _1acbb10ca_binaryEval;
struct _1acbbe4b2_InsGeneric;
struct _1acbc00a6_TypeAlias;
struct _1acbc0d98_Type;
struct _1acbc85a9_TypeSym;
struct _1acbc8eb1_Prim;
struct _1acbcc9dc_Sptr;
struct _1acbcd4b0_Slc;
struct _1acbce0a4_Tuple;
struct _1acbceb54_Map;
struct _1acbd07d1_Arr;
struct _1acbd12a4_Ptr;
struct _1acbd22a5_referencer;
struct _1acbd3295_typeChecker;
struct _1acbdb358_identTypeLookup;
struct _1ac6ac588_FileInfo;
struct _1ad5d17ec_stmt;
struct _1ad5d218d_scopeParser;
struct _1ad5deab3_exprBuilder;
struct _1ad5ec1a8_assignInfo;
struct _1ad600398_parser;
struct _1ad611552_typeBuilder;
struct _1ace18244_CompileInfo;
struct _1ace19982_directiveEval;
struct _1ad615798_Importer;
struct _1ad61bace_ExprInspector;
struct _1ad623eb0_MetaStrBuilder;
struct _1ad624b81_MetaRuntime;
struct _1ad625654_MetaMathCmplx;
struct _1ad625c5e_Meta;
struct _1ad627304_OrderedDefines;
struct _1bb2393e2_liveTable;
struct _1bb239700_ObjectDeadCode;
struct _1bb23d825_scopeDeadCode;
struct _1bb242dac_exprDeadCode;
struct _1bb107931_anyData;
struct _1bb109d73_ExceptionalForwardingExprModel;
struct _1bb10a060_FnCallIgnoreExceptionalExprModel;
struct _1bb10a406_SwapExprModel;
struct _1bb10a824_EmptyCompareExprModel;
struct _1bb10ab21_RefExprModel;
struct _1bb10b0c7_StrCompExprModel;
struct _1bb10b65a_MutSlicingExprModel;
struct _1bb10b9e0_UnsafeBinaryExprModel;
struct _1bb10bcdc_UnsafeIndexingExprModel;
struct _1bb10c1b6_PushToSliceExprModel;
struct _1bb10c590_AppendToSliceExprModel;
struct _1bb10c969_StrRuneIter;
struct _1bb10cc66_UnsafeDerefExprModel;
struct _1bb10d063_UnsafeCastingExprModel;
struct _1bb10db8a_nilVar;
struct _1bb10decb_nils;
struct _1bb111b49_scopeOptimizer;
struct _1bb118854_exprOptimizer;
struct _1bb11e6c3_dynamicVar;
struct _1bb11ea14_dynamic;
struct _1bb1228e6_data;
struct _1bb123d8c_boundaryVar;
struct _1bb1241cd_boundary;
struct _1bb243ece_Optimizer;
struct _1aae3b5bb_AbsTime;
struct _1aae3bc92_Time;
struct _1bb248104_scopeCoder;
struct _1bb2545e9_exprCoder;
struct _1bb266b7d_TestCoder;
struct _1bb2697c9_identCoder;
struct _1aae469e4_SerializationInfo;
struct _1aae46e12_traitCast;
struct _1aae472db_anonHash;
struct _1aae47709_traitHash;
struct _1aae47a06_metadata;
struct _1aae49299_ObjectCoder;
struct _1aae58660_customType;
struct _1aae59298_typeCoder;
struct _1aae61d83_resultCoder;
struct _1c17117a4_Flag;
struct _1c1715137_Flag;
struct _1c1718844_Flag;
struct _1c171c095_Flag;
struct _1c17207a2_Flag;
struct _1aaec703b_FlagSet;
struct _1aaec9a00_argParser;
struct _1a6b8a3eb_Cmd;
struct _1bb12231e_dataCheckpoint;
struct _1a6b89818_Dir;
struct _1ad618328_IR;
struct _1bb48ade6_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1bb48ade6_acceptRange_eq(_1bb48ade6_acceptRange *_self_, _1bb48ade6_acceptRange _other_);


struct _1bb4dda81_LittleEndian {
};
inline jule::Bool _1bb4dda81_LittleEndian_eq(_1bb4dda81_LittleEndian *_self_, _1bb4dda81_LittleEndian _other_);


struct _1bb50879e_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1bb50879e_u128_eq(_1bb50879e_u128 *_self_, _1bb50879e_u128 _other_);


struct _1c0d58a23_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1c0d58a23_group_eq(_1c0d58a23_group *_self_, _1c0d58a23_group _other_);

struct _1c0da4d8d_group {
	jule::Array<jule::Ptr<_1acaa540e_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1c0d56724__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c0d58a23_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _1c0da2c59__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c0da4d8d_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _1c0d62e5b_mapIterator {
	jule::Ptr<_1c0d56724__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c0d58a23_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _1c0dac33a_mapIterator {
	jule::Ptr<_1c0da2c59__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c0da4d8d_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1a6a5cb3c_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1a8e41260_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1a8e41260_foldPair_eq(_1a8e41260_foldPair *_self_, _1a8e41260_foldPair _other_);


struct _1a8e4175a_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1a8e4175a_CaseRange_eq(_1a8e4175a_CaseRange *_self_, _1a8e4175a_CaseRange _other_);


struct _1a8e41c11_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1a8e41c11_Range16_eq(_1a8e41c11_Range16 *_self_, _1a8e41c11_Range16 _other_);


struct _1a8e4223e_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1a8e4223e_Range32_eq(_1a8e4223e_Range32 *_self_, _1a8e4223e_Range32 _other_);


struct _1a8e426b2_RangeTable {
	jule::Slice<_1a8e41c11_Range16> _field_R16;
	jule::Slice<_1a8e4223e_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _1a8e50a44_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1a6b2a91e_cmdAttrs {
	HANDLE _field_hProcess;
	HANDLE _field_hThread;
};
inline jule::Bool _1a6b2a91e_cmdAttrs_eq(_1a6b2a91e_cmdAttrs *_self_, _1a6b2a91e_cmdAttrs _other_);


struct _1a6b3087a_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1a6b3087a_File_eq(_1a6b3087a_File *_self_, _1a6b3087a_File _other_);


struct _1a6b32eba_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1a6b32eba_Stat_eq(_1a6b32eba_Stat *_self_, _1a6b32eba_Stat _other_);


struct _1a6a6bde3_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1a6a6bde3_Log_eq(_1a6a6bde3_Log *_self_, _1a6a6bde3_Log _other_);


struct _1aa502622_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _1aa502622_floatInfo_eq(_1aa502622_floatInfo *_self_, _1aa502622_floatInfo _other_);


struct _1aa503205_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _1aa515190_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1aa515190_leftCheat_eq(_1aa515190_leftCheat *_self_, _1aa515190_leftCheat _other_);


struct _1aa515ba7_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1aa515ba7_decimal_eq(_1aa515ba7_decimal *_self_, _1aa515ba7_decimal _other_);


struct _1bb5b3491_AnsiEscape {
};
inline jule::Bool _1bb5b3491_AnsiEscape_eq(_1bb5b3491_AnsiEscape *_self_, _1bb5b3491_AnsiEscape _other_);


struct _1aa51b493_Logger {
};
inline jule::Bool _1aa51b493_Logger_eq(_1aa51b493_Logger *_self_, _1aa51b493_Logger _other_);


struct _1abc2ba81_Token {
	jule::Ptr<_1abc32636_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _1abc2ba81_Token_eq(_1abc2ba81_Token *_self_, _1abc2ba81_Token _other_);


struct _1abc32636_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_Tokens;
};
struct _1abc34957_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _1abc34957_kindPair_eq(_1abc34957_kindPair *_self_, _1abc34957_kindPair _other_);


struct _1abc3a8e7_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_tokens;
	jule::Ptr<_1abc32636_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1a6a6bde3_Log> _field_errors;
};
struct _1abc40644_AST {
	jule::Ptr<_1abc32636_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1ac9c6660_UseDecl>> _field_UseDecls;
	jule::Slice<_1abc4159b_Node> _field_Nodes;
};
struct _1abc4159b_Node {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1abc4159b_Node_eq(_1abc4159b_Node *_self_, _1abc4159b_Node _other_);


struct _1abc419b9_Directive {
	jule::Ptr<_1abc2ba81_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_Args;
};
struct _1abc4259c_TypeDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1abc4259c_TypeDecl_eq(_1abc4259c_TypeDecl *_self_, _1abc4259c_TypeDecl _other_);


struct _1abc42ba7_IdentTypeDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _field_Generics;
};
struct _1abc42e71_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>> _field_Idents;
};
struct _1abc4334a_NamespaceTypeDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Namespace;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
};
inline jule::Bool _1abc4334a_NamespaceTypeDecl_eq(_1abc4334a_NamespaceTypeDecl *_self_, _1abc4334a_NamespaceTypeDecl _other_);


struct _1abc43647_SptrTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Elem;
};
inline jule::Bool _1abc43647_SptrTypeDecl_eq(_1abc43647_SptrTypeDecl *_self_, _1abc43647_SptrTypeDecl _other_);


struct _1abc439cc_SlcTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Elem;
};
inline jule::Bool _1abc439cc_SlcTypeDecl_eq(_1abc439cc_SlcTypeDecl *_self_, _1abc439cc_SlcTypeDecl _other_);


struct _1abc43cc9_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _field_Types;
};
struct _1abc440c6_PtrTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Elem;
};
inline jule::Bool _1abc440c6_PtrTypeDecl_eq(_1abc440c6_PtrTypeDecl *_self_, _1abc440c6_PtrTypeDecl _other_);


struct _1abc44868_ArrTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Elem;
	jule::Ptr<_1ac9b2a47_Expr> _field_Size;
};
inline jule::Bool _1abc44868_ArrTypeDecl_eq(_1abc44868_ArrTypeDecl *_self_, _1abc44868_ArrTypeDecl _other_);


struct _1abc450b6_MapTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Key;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Val;
};
inline jule::Bool _1abc450b6_MapTypeDecl_eq(_1abc450b6_MapTypeDecl *_self_, _1abc450b6_MapTypeDecl _other_);


struct _1abc45490_RetTypeDecl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_Idents;
};
struct _1ac9b2a47_Expr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1ac9b2a47_Expr_eq(_1ac9b2a47_Expr *_self_, _1ac9b2a47_Expr _other_);


struct _1ac9b2d11_RangeExpr {
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b2d11_RangeExpr_eq(_1ac9b2d11_RangeExpr *_self_, _1ac9b2d11_RangeExpr _other_);


struct _1ac9b341b_UseExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b341b_UseExpr_eq(_1ac9b341b_UseExpr *_self_, _1ac9b341b_UseExpr _other_);


struct _1ac9b363b_TupleExpr {
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Expr;
};
struct _1ac9b39d2_LitExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1ac9b39d2_LitExpr_eq(_1ac9b39d2_LitExpr *_self_, _1ac9b39d2_LitExpr _other_);


struct _1ac9b3dab_UnsafeExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b3dab_UnsafeExpr_eq(_1ac9b3dab_UnsafeExpr *_self_, _1ac9b3dab_UnsafeExpr _other_);


struct _1ac9b4362_IdentExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1ac9b4362_IdentExpr_eq(_1ac9b4362_IdentExpr *_self_, _1ac9b4362_IdentExpr _other_);


struct _1ac9b4b04_UnaryExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Op;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b4b04_UnaryExpr_eq(_1ac9b4b04_UnaryExpr *_self_, _1ac9b4b04_UnaryExpr _other_);


struct _1ac9b4ecd_VariadicExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b4ecd_VariadicExpr_eq(_1ac9b4ecd_VariadicExpr *_self_, _1ac9b4ecd_VariadicExpr _other_);


struct _1ac9b53a7_CastExpr {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b53a7_CastExpr_eq(_1ac9b53a7_CastExpr *_self_, _1ac9b53a7_CastExpr _other_);


struct _1ac9b5781_NamespaceExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Namespace;
	jule::Ptr<_1abc2ba81_Token> _field_Ident;
};
inline jule::Bool _1ac9b5781_NamespaceExpr_eq(_1ac9b5781_NamespaceExpr *_self_, _1ac9b5781_NamespaceExpr _other_);


struct _1ac9b5b5a_SubIdentExpr {
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1abc2ba81_Token> _field_Ident;
};
inline jule::Bool _1ac9b5b5a_SubIdentExpr_eq(_1ac9b5b5a_SubIdentExpr *_self_, _1ac9b5b5a_SubIdentExpr _other_);


struct _1ac9b6111_BinaryExpr {
	jule::Ptr<_1ac9b2a47_Expr> _field_Left;
	jule::Ptr<_1ac9b2a47_Expr> _field_Right;
	jule::Ptr<_1abc2ba81_Token> _field_Op;
};
inline jule::Bool _1ac9b6111_BinaryExpr_eq(_1ac9b6111_BinaryExpr *_self_, _1ac9b6111_BinaryExpr _other_);


struct _1ac9b6771_FnCallExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Args;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1ac9b7266_FieldExprPair {
	jule::Ptr<_1abc2ba81_Token> _field_Field;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9b7266_FieldExprPair_eq(_1ac9b7266_FieldExprPair *_self_, _1ac9b7266_FieldExprPair _other_);


struct _1ac9b7a91_StructLit {
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Exprs;
};
struct _1ac9b8047_BraceLit {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Exprs;
};
struct _1ac9b8872_KeyValPair {
	jule::Ptr<_1ac9b2a47_Expr> _field_Key;
	jule::Ptr<_1ac9b2a47_Expr> _field_Val;
	jule::Ptr<_1abc2ba81_Token> _field_Colon;
};
inline jule::Bool _1ac9b8872_KeyValPair_eq(_1ac9b8872_KeyValPair *_self_, _1ac9b8872_KeyValPair _other_);


struct _1ac9b909d_SliceExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Exprs;
};
struct _1ac9b9a0a_IndexingExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1ac9b2a47_Expr> _field_Index;
};
inline jule::Bool _1ac9b9a0a_IndexingExpr_eq(_1ac9b9a0a_IndexingExpr *_self_, _1ac9b9a0a_IndexingExpr _other_);


struct _1ac9ba16a_SlicingExpr {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1ac9b2a47_Expr> _field_Start;
	jule::Ptr<_1ac9b2a47_Expr> _field_To;
};
inline jule::Bool _1ac9ba16a_SlicingExpr_eq(_1ac9ba16a_SlicingExpr *_self_, _1ac9ba16a_SlicingExpr _other_);


struct _1ac9ba467_Constraint {
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _field_Mask;
};
struct _1ac9ba91d_GenericDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac9ba467_Constraint> _field_Constraint;
};
inline jule::Bool _1ac9ba91d_GenericDecl_eq(_1ac9ba91d_GenericDecl *_self_, _1ac9ba91d_GenericDecl _other_);


struct _1ac9bace7_LabelSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1ac9bace7_LabelSt_eq(_1ac9bace7_LabelSt *_self_, _1ac9bace7_LabelSt _other_);


struct _1ac9bb1c1_GotoSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_Label;
};
inline jule::Bool _1ac9bb1c1_GotoSt_eq(_1ac9bb1c1_GotoSt *_self_, _1ac9bb1c1_GotoSt _other_);


struct _1ac9bb4bd_FallSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
};
inline jule::Bool _1ac9bb4bd_FallSt_eq(_1ac9bb4bd_FallSt *_self_, _1ac9bb4bd_FallSt _other_);


struct _1ac9bbb2d_AssignLeft {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9bbb2d_AssignLeft_eq(_1ac9bbb2d_AssignLeft *_self_, _1ac9bbb2d_AssignLeft _other_);


struct _1ac9bc1b1_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1abc2ba81_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> _field_Left;
	jule::Ptr<_1ac9b2a47_Expr> _field_Right;
};
struct _1ac9bd1a1_Stmt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1ac9bd1a1_Stmt_eq(_1ac9bd1a1_Stmt *_self_, _1ac9bd1a1_Stmt _other_);


struct _1ac9bd811_ScopeTree {
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1ac9bd1a1_Stmt> _field_Stmts;
	jule::Ptr<_1abc2ba81_Token> _field_End;
};
struct _1ac9be04d_ParamDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1ac9be04d_ParamDecl_eq(_1ac9be04d_ParamDecl *_self_, _1ac9be04d_ParamDecl _other_);


struct _1ac9c04a0_FnDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_Generics;
	jule::Ptr<_1abc45490_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> _field_Params;
};
struct _1ac9c165a_VarDecl {
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
struct _1ac9c1a34_RetSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9c1a34_RetSt_eq(_1ac9c1a34_RetSt *_self_, _1ac9c1a34_RetSt _other_);


struct _1ac9c22a4_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
};
inline jule::Bool _1ac9c22a4_Iter_eq(_1ac9c22a4_Iter *_self_, _1ac9c22a4_Iter _other_);


struct _1ac9c2ace_WhileKind {
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1abc2ba81_Token> _field_NextToken;
};
inline jule::Bool _1ac9c2ace_WhileKind_eq(_1ac9c2ace_WhileKind *_self_, _1ac9c2ace_WhileKind _other_);


struct _1ac9c34d6_RangeKind {
	jule::Ptr<_1abc2ba81_Token> _field_InToken;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1ac9c165a_VarDecl> _field_KeyA;
	jule::Ptr<_1ac9c165a_VarDecl> _field_KeyB;
};
inline jule::Bool _1ac9c34d6_RangeKind_eq(_1ac9c34d6_RangeKind *_self_, _1ac9c34d6_RangeKind _other_);


struct _1ac9c38b0_BreakSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_Label;
};
inline jule::Bool _1ac9c38b0_BreakSt_eq(_1ac9c38b0_BreakSt *_self_, _1ac9c38b0_BreakSt _other_);


struct _1ac9c3c89_ContSt {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_Label;
};
inline jule::Bool _1ac9c3c89_ContSt_eq(_1ac9c3c89_ContSt *_self_, _1ac9c3c89_ContSt _other_);


struct _1ac9c4240_If {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
};
inline jule::Bool _1ac9c4240_If_eq(_1ac9c4240_If *_self_, _1ac9c4240_If _other_);


struct _1ac9c4619_Else {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
};
inline jule::Bool _1ac9c4619_Else_eq(_1ac9c4619_Else *_self_, _1ac9c4619_Else _other_);


struct _1ac9c4ac0_Conditional {
	jule::Ptr<_1ac9c4240_If> _field_Head;
	jule::Slice<jule::Ptr<_1ac9c4240_If>> _field_Tail;
	jule::Ptr<_1ac9c4619_Else> _field_Default;
};
struct _1ac9c530c_TypeAliasDecl {
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
};
inline jule::Bool _1ac9c530c_TypeAliasDecl_eq(_1ac9c530c_TypeAliasDecl *_self_, _1ac9c530c_TypeAliasDecl _other_);


struct _1ac9c57b3_Case {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_Exprs;
};
struct _1ac9c60cc_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1ac9c57b3_Case>> _field_Cases;
	jule::Ptr<_1ac9c4619_Else> _field_Default;
};
struct _1ac9c6660_UseDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_Path;
	jule::Ptr<_1abc2ba81_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1ac9c6660_UseDecl_eq(_1ac9c6660_UseDecl *_self_, _1ac9c6660_UseDecl _other_);


struct _1ac9c6b16_EnumItemDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
};
inline jule::Bool _1ac9c6b16_EnumItemDecl_eq(_1ac9c6b16_EnumItemDecl *_self_, _1ac9c6b16_EnumItemDecl _other_);


struct _1ac9c76c7_EnumDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> _field_Items;
	jule::Ptr<_1abc2ba81_Token> _field_End;
};
struct _1ac9c8002_TypeEnumItemDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
};
inline jule::Bool _1ac9c8002_TypeEnumItemDecl_eq(_1ac9c8002_TypeEnumItemDecl *_self_, _1ac9c8002_TypeEnumItemDecl _other_);


struct _1ac9c8662_TypeEnumDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1abc2ba81_Token> _field_End;
};
struct _1ac9c892b_FieldDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Kind;
	jule::Ptr<_1ac9b2a47_Expr> _field_Default;
};
inline jule::Bool _1ac9c892b_FieldDecl_eq(_1ac9c892b_FieldDecl *_self_, _1ac9c892b_FieldDecl _other_);


struct _1ac9c9322_StructDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_Generics;
};
struct _1ac9c9a5e_TraitDecl {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>> _field_Methods;
};
struct _1ac9ca1be_Impl {
	jule::Ptr<_1abc2ba81_Token> _field_End;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Base;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _field_Statics;
};
inline jule::Bool _1aca8e382_Eq(_1aca3208e_Const* _self_, _1aca3208e_Const _25814_x);
inline jule::Bool _1aca8e6c3_Lt(_1aca3208e_Const* _self_, _1aca3208e_Const _28514_x);
inline jule::Bool _1aca8ea14_LtEq(_1aca3208e_Const* _self_, _1aca3208e_Const _30816_x);
inline jule::Bool _1aca8ed55_Gt(_1aca3208e_Const* _self_, _1aca3208e_Const _33114_x);
inline jule::Bool _1aca90196_GtEq(_1aca3208e_Const* _self_, _1aca3208e_Const _35416_x);
struct _1aca3208e_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _1ac9cb203_Field {
	jule::Ptr<_1ac9ce129_Struct> _field_Owner;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Ptr<_1ac9b2a47_Expr> _field_Default;
};
inline jule::Bool _1ac9cb203_Field_eq(_1ac9cb203_Field *_self_, _1ac9cb203_Field _other_);


struct _1ac9cd216_Operators {
	jule::Ptr<_1acaa540e_FnIns> _field_Eq;
	jule::Ptr<_1acaa540e_FnIns> _field_Gt;
	jule::Ptr<_1acaa540e_FnIns> _field_GtEq;
	jule::Ptr<_1acaa540e_FnIns> _field_Lt;
	jule::Ptr<_1acaa540e_FnIns> _field_LtEq;
	jule::Ptr<_1acaa540e_FnIns> _field_Shl;
	jule::Ptr<_1acaa540e_FnIns> _field_Shr;
	jule::Ptr<_1acaa540e_FnIns> _field_Add;
	jule::Ptr<_1acaa540e_FnIns> _field_Sub;
	jule::Ptr<_1acaa540e_FnIns> _field_Div;
	jule::Ptr<_1acaa540e_FnIns> _field_Mul;
	jule::Ptr<_1acaa540e_FnIns> _field_Mod;
	jule::Ptr<_1acaa540e_FnIns> _field_BitAnd;
	jule::Ptr<_1acaa540e_FnIns> _field_BitOr;
	jule::Ptr<_1acaa540e_FnIns> _field_BitXor;
	jule::Ptr<_1acaa540e_FnIns> _field_Neg;
	jule::Ptr<_1acaa540e_FnIns> _field_Pos;
	jule::Ptr<_1acaa540e_FnIns> _field_BitNot;
	jule::Ptr<_1acaa540e_FnIns> _field_AddAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_SubAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_DivAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_MulAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_ModAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_ShlAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_ShrAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_BitOrAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_BitAndAssign;
	jule::Ptr<_1acaa540e_FnIns> _field_BitXorAssign;
};
inline jule::Bool _1ac9cd216_Operators_eq(_1ac9cd216_Operators *_self_, _1ac9cd216_Operators _other_);


struct _1ac9ce129_Struct {
	jule::Ptr<_1ac9a8c2a_sema> _field_sema;
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _field_Uses;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1ac9cb203_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1acaaca65_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>> _field_Instances;
};
struct _1ac9d13d4_FieldIns {
	jule::Ptr<_1ac9d1e84_StructIns> _field_Owner;
	jule::Ptr<_1ac9cb203_Field> _field_Decl;
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Ptr<_1acb8cded_Data> _field_Default;
};
inline jule::Bool _1ac9d13d4_FieldIns_eq(_1ac9d13d4_FieldIns *_self_, _1ac9d13d4_FieldIns _other_);


struct _1ac9d1e84_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1ac9ce129_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1ac9d13d4_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1ac979855_ReferenceStack> _field_Refers;
	_1ac9cd216_Operators _field_Operators;
};
struct _1aca94b3a_OperandExprModel {
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1aca94b3a_OperandExprModel_eq(_1aca94b3a_OperandExprModel *_self_, _1aca94b3a_OperandExprModel _other_);


struct _1aca95135_BinaryExprModel {
	jule::Ptr<_1aca94b3a_OperandExprModel> _field_Left;
	jule::Ptr<_1aca94b3a_OperandExprModel> _field_Right;
	jule::Ptr<_1abc2ba81_Token> _field_Op;
};
inline jule::Bool _1aca95135_BinaryExprModel_eq(_1aca95135_BinaryExprModel *_self_, _1aca95135_BinaryExprModel _other_);


struct _1aca9550e_UnaryExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1abc2ba81_Token> _field_Op;
};
inline jule::Bool _1aca9550e_UnaryExprModel_eq(_1aca9550e_UnaryExprModel *_self_, _1aca9550e_UnaryExprModel _other_);


struct _1aca95a3c_StructArgExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac9d13d4_FieldIns> _field_Field;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
};
inline jule::Bool _1aca95a3c_StructArgExprModel_eq(_1aca95a3c_StructArgExprModel *_self_, _1aca95a3c_StructArgExprModel _other_);


struct _1aca95dd3_StructLitExprModel {
	jule::Ptr<_1ac9d1e84_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aca95a3c_StructArgExprModel>> _field_Args;
};
struct _1aca961d0_AllocStructLitExprModel {
	jule::Ptr<_1aca95dd3_StructLitExprModel> _field_Lit;
};
inline jule::Bool _1aca961d0_AllocStructLitExprModel_eq(_1aca961d0_AllocStructLitExprModel *_self_, _1aca961d0_AllocStructLitExprModel _other_);


struct _1aca96763_CastingExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Ptr<_1acbc0d98_Type> _field_ExprType;
};
inline jule::Bool _1aca96763_CastingExprModel_eq(_1aca96763_CastingExprModel *_self_, _1aca96763_CastingExprModel _other_);


struct _1aca97115_FnCallExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1acaa540e_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1ac95aa56_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1aca974de_SliceExprModel {
	jule::Ptr<_1acbc0d98_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1aca97995_IndexingExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1acb8cded_Data> _field_Index;
};
inline jule::Bool _1aca97995_IndexingExprModel_eq(_1aca97995_IndexingExprModel *_self_, _1aca97995_IndexingExprModel _other_);


struct _1aca97e4b_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Captured;
	jule::Ptr<_1acaa540e_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1aca98325_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1aca98325_KeyValPairExprModel_eq(_1aca98325_KeyValPairExprModel *_self_, _1aca98325_KeyValPairExprModel _other_);


struct _1aca986ee_MapExprModel {
	jule::Ptr<_1acbceb54_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1aca98325_KeyValPairExprModel>> _field_Entries;
};
struct _1aca98c82_SlicingExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1aca98c82_SlicingExprModel_eq(_1aca98c82_SlicingExprModel *_self_, _1aca98c82_SlicingExprModel _other_);


struct _1aca99315_TraitSubIdentExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1acaa2351_Fn> _field_Method;
	jule::Ptr<_1acaaca65_Trait> _field_Trt;
};
inline jule::Bool _1aca99315_TraitSubIdentExprModel_eq(_1aca99315_TraitSubIdentExprModel *_self_, _1aca99315_TraitSubIdentExprModel _other_);


struct _1aca99ba6_StructSubIdentExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1acaa540e_FnIns> _field_Method;
	jule::Ptr<_1ac9d13d4_FieldIns> _field_Field;
	jule::Ptr<_1ac9d1e84_StructIns> _field_Owner;
};
inline jule::Bool _1aca99ba6_StructSubIdentExprModel_eq(_1aca99ba6_StructSubIdentExprModel *_self_, _1aca99ba6_StructSubIdentExprModel _other_);


struct _1aca9a04c_StructStaticIdentExprModel {
	jule::Ptr<_1ac9d1e84_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1acaa540e_FnIns> _field_Method;
};
inline jule::Bool _1aca9a04c_StructStaticIdentExprModel_eq(_1aca9a04c_StructStaticIdentExprModel *_self_, _1aca9a04c_StructStaticIdentExprModel _other_);


struct _1aca9a426_ArrayExprModel {
	jule::Ptr<_1acbd07d1_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1aca9a723_TupleExprModel {
	jule::Slice<jule::Ptr<_1acb8cded_Data>> _field_Datas;
};
struct _1aca9aa20_BuiltinPrintCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
};
inline jule::Bool _1aca9aa20_BuiltinPrintCallExprModel_eq(_1aca9aa20_BuiltinPrintCallExprModel *_self_, _1aca9aa20_BuiltinPrintCallExprModel _other_);


struct _1aca9ad1c_BuiltinPrintlnCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
};
inline jule::Bool _1aca9ad1c_BuiltinPrintlnCallExprModel_eq(_1aca9ad1c_BuiltinPrintlnCallExprModel *_self_, _1aca9ad1c_BuiltinPrintlnCallExprModel _other_);


struct _1aca9b1e6_BuiltinNewCallExprModel {
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1aca9b1e6_BuiltinNewCallExprModel_eq(_1aca9b1e6_BuiltinNewCallExprModel *_self_, _1aca9b1e6_BuiltinNewCallExprModel _other_);


struct _1aca9b5c0_BuiltinPanicCallExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1aca9b5c0_BuiltinPanicCallExprModel_eq(_1aca9b5c0_BuiltinPanicCallExprModel *_self_, _1aca9b5c0_BuiltinPanicCallExprModel _other_);


struct _1aca9ba76_BuiltinMakeCallExprModel {
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1aca9ba76_BuiltinMakeCallExprModel_eq(_1aca9ba76_BuiltinMakeCallExprModel *_self_, _1aca9ba76_BuiltinMakeCallExprModel _other_);


struct _1aca9be50_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1aca9be50_BuiltinAppendCallExprModel_eq(_1aca9be50_BuiltinAppendCallExprModel *_self_, _1aca9be50_BuiltinAppendCallExprModel _other_);


struct _1aca9c24c_BuiltinLenCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
};
inline jule::Bool _1aca9c24c_BuiltinLenCallExprModel_eq(_1aca9c24c_BuiltinLenCallExprModel *_self_, _1aca9c24c_BuiltinLenCallExprModel _other_);


struct _1aca9c549_BuiltinCapCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
};
inline jule::Bool _1aca9c549_BuiltinCapCallExprModel_eq(_1aca9c549_BuiltinCapCallExprModel *_self_, _1aca9c549_BuiltinCapCallExprModel _other_);


struct _1aca9c923_BuiltinDeleteCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Dest;
	jule::Ptr<_1acb8cded_Data> _field_Key;
};
inline jule::Bool _1aca9c923_BuiltinDeleteCallExprModel_eq(_1aca9c923_BuiltinDeleteCallExprModel *_self_, _1aca9c923_BuiltinDeleteCallExprModel _other_);


struct _1aca9ccec_BuiltinCopyCallExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Dest;
	jule::Ptr<_1acb8cded_Data> _field_Src;
};
inline jule::Bool _1aca9ccec_BuiltinCopyCallExprModel_eq(_1aca9ccec_BuiltinCopyCallExprModel *_self_, _1aca9ccec_BuiltinCopyCallExprModel _other_);


struct _1aca9d1c6_BuiltinErrorCallExprModel {
	jule::Ptr<_1acaa540e_FnIns> _field_Func;
	jule::Ptr<_1acb8cded_Data> _field_Err;
};
inline jule::Bool _1aca9d1c6_BuiltinErrorCallExprModel_eq(_1aca9d1c6_BuiltinErrorCallExprModel *_self_, _1aca9d1c6_BuiltinErrorCallExprModel _other_);


struct _1aca9d4c3_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1aca9d4c3_SizeofExprModel_eq(_1aca9d4c3_SizeofExprModel *_self_, _1aca9d4c3_SizeofExprModel _other_);


struct _1aca9db77_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1aca9db77_AlignofExprModel_eq(_1aca9db77_AlignofExprModel *_self_, _1aca9db77_AlignofExprModel _other_);


struct _1aca9dd64_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _1aca9dd64_RuneExprModel_eq(_1aca9dd64_RuneExprModel *_self_, _1aca9dd64_RuneExprModel _other_);


struct _1aca9e1d8_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1aca9e4d5_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1aca9e4d5_FreeExprModel_eq(_1aca9e4d5_FreeExprModel *_self_, _1aca9e4d5_FreeExprModel _other_);


struct _1acaa02b6_RetType {
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_Idents;
};
struct _1acaa087c_Param {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1acaa087c_Param_eq(_1acaa087c_Param *_self_, _1acaa087c_Param _other_);


struct _1acaa2351_Fn {
	jule::Ptr<_1ac9a8c2a_sema> _field_sema;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_Generics;
	jule::Ptr<_1acaa02b6_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1acaa087c_Param>> _field_Params;
	jule::Ptr<_1ac9ce129_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1acaa540e_FnIns>> _field_Instances;
};
struct _1acaa42a9_ParamIns {
	jule::Ptr<_1acaa087c_Param> _field_Decl;
	jule::Ptr<_1acbc0d98_Type> _field_Type;
};
inline jule::Bool _1acaa42a9_ParamIns_eq(_1acaa42a9_ParamIns *_self_, _1acaa42a9_ParamIns _other_);


struct _1acaa540e_FnIns {
	jule::Ptr<_1ac9d1e84_StructIns> _field_Owner;
	jule::Ptr<_1acaa2351_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _field_Params;
	jule::Ptr<_1acbc0d98_Type> _field_Result;
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Ptr<_1ac979855_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1acaa8654_SymTab {
	jule::Ptr<_1abc32636_Fileset> _field_File;
	jule::Slice<_1ac97ada6_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1acaaca65_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1acab021b_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1acab1926_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1ac956447_Impl>> _field_Impls;
};
struct _1acaaca65_Trait {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _field_Implemented;
};
struct _1acaae6b0_EnumItem {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acb8e075_Value> _field_Value;
};
inline jule::Bool _1acaae6b0_EnumItem_eq(_1acaae6b0_EnumItem *_self_, _1acaae6b0_EnumItem _other_);


struct _1acab021b_Enum {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _field_Items;
};
struct _1acab134e_TypeEnumItem {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
};
inline jule::Bool _1acab134e_TypeEnumItem_eq(_1acab134e_TypeEnumItem *_self_, _1acab134e_TypeEnumItem _other_);


struct _1acab1926_TypeEnum {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _field_Items;
};
struct _1ac92d0bc_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1ac92d0bc_comptimeRange_eq(_1ac92d0bc_comptimeRange *_self_, _1ac92d0bc_comptimeRange _other_);


struct _1ac92db28_comptimeStructField {
	jule::Ptr<_1ac9d13d4_FieldIns> _field_field;
};
inline jule::Bool _1ac92db28_comptimeStructField_eq(_1ac92db28_comptimeStructField *_self_, _1ac92db28_comptimeStructField _other_);


struct _1ac9303bb_comptimeStructFields {
	jule::Slice<jule::Ptr<_1ac9d13d4_FieldIns>> _field_fields;
};
struct _1ac931d4b_comptimeStatic {
	jule::Ptr<_1acb3d420_Var> _field_field;
};
inline jule::Bool _1ac931d4b_comptimeStatic_eq(_1ac931d4b_comptimeStatic *_self_, _1ac931d4b_comptimeStatic _other_);


struct _1ac933600_comptimeStatics {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_fields;
};
struct _1ac93506e_comptimeEnumField {
	jule::Ptr<_1acaae6b0_EnumItem> _field_field;
};
inline jule::Bool _1ac93506e_comptimeEnumField_eq(_1ac93506e_comptimeEnumField *_self_, _1ac93506e_comptimeEnumField _other_);


struct _1ac93637d_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _field_fields;
};
struct _1ac937d85_comptimeParam {
	jule::Ptr<_1acaa42a9_ParamIns> _field_param;
};
inline jule::Bool _1ac937d85_comptimeParam_eq(_1ac937d85_comptimeParam *_self_, _1ac937d85_comptimeParam _other_);


struct _1ac939bde_comptimeParams {
	jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _field_params;
};
struct _1ac93b54d_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>> _field_types;
};
struct _1ac93cebc_comptimeTypeInfo {
	jule::Ptr<_1acbc0d98_Type> _field_base;
};
inline jule::Bool _1ac93cebc_comptimeTypeInfo_eq(_1ac93cebc_comptimeTypeInfo *_self_, _1ac93cebc_comptimeTypeInfo _other_);


struct _1ac9440c2_comptimeValue {
	jule::Ptr<_1acb8cded_Data> _field_data;
};
inline jule::Bool _1ac9440c2_comptimeValue_eq(_1ac9440c2_comptimeValue *_self_, _1ac9440c2_comptimeValue _other_);


struct _1ac946d2d_comptimeFiles {
	jule::Slice<jule::Ptr<_1acaa8654_SymTab>> _field_files;
};
struct _1ac94879c_comptimeFile {
	jule::Ptr<_1acaa8654_SymTab> _field_file;
};
inline jule::Bool _1ac94879c_comptimeFile_eq(_1ac94879c_comptimeFile *_self_, _1ac94879c_comptimeFile _other_);


struct _1ac94a3c5_comptimeDecls {
	jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>> _field_decls;
};
struct _1ac94c6b3_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1ac94c6b3_comptimeDecl_eq(_1ac94c6b3_comptimeDecl *_self_, _1ac94c6b3_comptimeDecl _other_);


struct _1ac954148_constraintChecker {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _field_genericsA;
	jule::Ptr<_1acaa540e_FnIns> _field_fi;
	jule::Ptr<_1ac9d1e84_StructIns> _field_si;
	jule::Ptr<_1abc2ba81_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1ac956447_Impl {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Base;
	jule::Ptr<_1abc4259c_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Statics;
};
struct _1ac95aa56_Scope {
	jule::Ptr<_1ac95aa56_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _1ac95ae74_If {
	jule::Any _field_Expr;
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
};
inline jule::Bool _1ac95ae74_If_eq(_1ac95ae74_If *_self_, _1ac95ae74_If _other_);


struct _1ac95b271_Else {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
};
inline jule::Bool _1ac95b271_Else_eq(_1ac95b271_Else *_self_, _1ac95b271_Else _other_);


struct _1ac95b68e_Conditional {
	jule::Slice<jule::Ptr<_1ac95ae74_If>> _field_Elifs;
	jule::Ptr<_1ac95b271_Else> _field_Default;
};
struct _1ac95b98b_InfIter {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
};
inline jule::Bool _1ac95b98b_InfIter_eq(_1ac95b98b_InfIter *_self_, _1ac95b98b_InfIter _other_);


struct _1ac95be42_WhileIter {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1ac95be42_WhileIter_eq(_1ac95be42_WhileIter *_self_, _1ac95be42_WhileIter _other_);


struct _1ac95c88d_RangeIter {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1acb3d420_Var> _field_KeyA;
	jule::Ptr<_1acb3d420_Var> _field_KeyB;
};
inline jule::Bool _1ac95c88d_RangeIter_eq(_1ac95c88d_RangeIter *_self_, _1ac95c88d_RangeIter _other_);


struct _1ac95cc23_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1ac95cc23_ContSt_eq(_1ac95cc23_ContSt *_self_, _1ac95cc23_ContSt _other_);


struct _1ac95d0ec_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1ac95d0ec_BreakSt_eq(_1ac95d0ec_BreakSt *_self_, _1ac95d0ec_BreakSt _other_);


struct _1ac95d5a3_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1ac95d5a3_Label_eq(_1ac95d5a3_Label *_self_, _1ac95d5a3_Label _other_);


struct _1ac95dc13_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Ptr<_1ac95d5a3_Label> _field_Label;
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1ac95dc13_GotoSt_eq(_1ac95dc13_GotoSt *_self_, _1ac95dc13_GotoSt _other_);


struct _1ac95e0dc_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1ac95e0dc_Postfix_eq(_1ac95e0dc_Postfix *_self_, _1ac95e0dc_Postfix _other_);


struct _1ac95e593_Assign {
	jule::Ptr<_1aca94b3a_OperandExprModel> _field_Left;
	jule::Ptr<_1aca94b3a_OperandExprModel> _field_Right;
	jule::Ptr<_1abc2ba81_Token> _field_Op;
};
inline jule::Bool _1ac95e593_Assign_eq(_1ac95e593_Assign *_self_, _1ac95e593_Assign _other_);


struct _1ac95ea49_MultiAssign {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1acb8cded_Data>> _field_Left;
	jule::Any _field_Right;
};
struct _1ac960286_Match {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1ac960cae_Case>> _field_Cases;
	jule::Ptr<_1ac960cae_Case> _field_Default;
};
struct _1ac960cae_Case {
	jule::Ptr<_1ac960286_Match> _field_Owner;
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1acb8cded_Data>> _field_Exprs;
	jule::Ptr<_1ac960cae_Case> _field_Next;
};
struct _1ac9614a7_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1ac9614a7_FallSt_eq(_1ac9614a7_FallSt *_self_, _1ac9614a7_FallSt _other_);


struct _1ac96184d_RetSt {
	jule::Ptr<_1acaa540e_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1ac96184d_RetSt_eq(_1ac96184d_RetSt *_self_, _1ac96184d_RetSt _other_);


struct _1ac961d04_scopeLabel {
	jule::Ptr<_1abc2ba81_Token> _field_token;
	jule::Ptr<_1ac95d5a3_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1ac961d04_scopeLabel_eq(_1ac961d04_scopeLabel *_self_, _1ac961d04_scopeLabel _other_);


struct _1ac9621cd_result {
	jule::Ptr<_1acaa540e_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _1ac9621cd_result_eq(_1ac9621cd_result *_self_, _1ac9621cd_result _other_);


struct _1ac9631bd_scopeChecker {
	jule::Ptr<_1abc2ba81_Token> _field_calledFrom;
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Ptr<_1acaa540e_FnIns> _field_owner;
	jule::Ptr<_1ac9631bd_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1acaa8654_SymTab> _field_table;
	jule::Ptr<_1ac95aa56_Scope> _field_scope;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_tree;
	jule::Ptr<_1ac9621cd_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1acb3d420_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac961d04_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _1ac9631bd_scopeChecker_eq(_1ac9631bd_scopeChecker *_self_, _1ac9631bd_scopeChecker _other_);


struct _1ac97704a_directiveChecker {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1abc419b9_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1ac97704a_directiveChecker_eq(_1ac97704a_directiveChecker *_self_, _1ac97704a_directiveChecker _other_);


struct _1ac979855_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1ac97ada6_Pass {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1ac97ada6_Pass_eq(_1ac97ada6_Pass *_self_, _1ac97ada6_Pass _other_);


struct _1ac98085b_symBuilder {
	jule::Ptr<_1ac98085b_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1a6a6bde3_Log> _field_errors;
	jule::Ptr<_1abc40644_AST> _field_ast;
	jule::Ptr<_1acaa8654_SymTab> _field_table;
};
struct _1ac98b8cd_ImportInfo {
	jule::Ptr<_1ac9c6660_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1ac98e150_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _1ac98b8cd_ImportInfo_eq(_1ac98b8cd_ImportInfo *_self_, _1ac98b8cd_ImportInfo _other_);


struct _1ac98e150_Package {
	jule::Slice<jule::Ptr<_1acaa8654_SymTab>> _field_Files;
};
struct _1ac9a8103_commonSemaMeta {
	jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1ac98b8cd_ImportInfo> _field_runtime;
};
struct _1ac9a8c2a_sema {
	jule::Slice<_1a6a6bde3_Log> _field_errors;
	jule::Slice<jule::Ptr<_1acaa8654_SymTab>> _field_files;
	jule::Ptr<_1acaa8654_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1ac9a8103_commonSemaMeta> _field_meta;
};
struct _1acb39817_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1acb3d420_Var {
	jule::Ptr<_1ac95aa56_Scope> _field_Scope;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Ptr<_1acb8e075_Value> _field_Value;
	jule::Ptr<_1ac979855_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Depends;
};
struct _1acb3e29a_FuncPattern {
};
struct _1acb7923b_typeCompatibilityChecker {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Ptr<_1acbc0d98_Type> _field_dest;
	jule::Ptr<_1acbc0d98_Type> _field_src;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
};
inline jule::Bool _1acb7923b_typeCompatibilityChecker_eq(_1acb7923b_typeCompatibilityChecker *_self_, _1acb7923b_typeCompatibilityChecker _other_);


struct _1acb7b0b7_assignTypeChecker {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Ptr<_1acbc0d98_Type> _field_dest;
	jule::Ptr<_1acb8cded_Data> _field_d;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Ptr<_1ac979855_ReferenceStack> _field_refers;
};
inline jule::Bool _1acb7b0b7_assignTypeChecker_eq(_1acb7b0b7_assignTypeChecker *_self_, _1acb7b0b7_assignTypeChecker _other_);


struct _1acb7c98c_dynamicTypeAnnotation {
	jule::Ptr<_1acb8edbc_eval> _field_e;
	jule::Ptr<_1acaa540e_FnIns> _field_f;
	jule::Ptr<_1acaa42a9_ParamIns> _field_p;
	jule::Ptr<_1acb8cded_Data> _field_a;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Ptr<_1acbc0d98_Type>* _field_k;
	jule::Ptr<_1abc4259c_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_ignored;
};
struct _1acb827e9_fnCallArgChecker {
	jule::Ptr<_1acb8edbc_eval> _field_e;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_args;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Ptr<_1acaa540e_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_ignored;
};
struct _1acb85731_structLitChecker {
	jule::Ptr<_1acb8edbc_eval> _field_e;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Ptr<_1ac9d1e84_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aca95a3c_StructArgExprModel>> _field_args;
};
struct _1acb87513_rangeChecker {
	jule::Ptr<_1ac9631bd_scopeChecker> _field_sc;
	jule::Ptr<_1ac9c34d6_RangeKind> _field_rang;
	jule::Ptr<_1ac95c88d_RangeIter> _field_Kind;
	jule::Ptr<_1acb8cded_Data> _field_d;
};
inline jule::Bool _1acb87513_rangeChecker_eq(_1acb87513_rangeChecker *_self_, _1acb87513_rangeChecker _other_);


struct _1acb89d51_retTypeChecker {
	jule::Ptr<_1ac9631bd_scopeChecker> _field_sc;
	jule::Ptr<_1acaa540e_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_types;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _field_exprs;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _1acb8cded_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1aca3208e_Const> _field_Constant;
};
inline jule::Bool _1acb8cded_Data_eq(_1acb8cded_Data *_self_, _1acb8cded_Data _other_);


struct _1acb8e075_Value {
	jule::Ptr<_1ac9b2a47_Expr> _field_Expr;
	jule::Ptr<_1acb8cded_Data> _field_Data;
};
inline jule::Bool _1acb8e075_Value_eq(_1acb8e075_Value *_self_, _1acb8e075_Value _other_);


struct _1acb8e44e_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _1acb8e44e_target_eq(_1acb8e44e_target *_self_, _1acb8e44e_target _other_);


struct _1acb8edbc_eval {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1acbc0d98_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1acb3d420_Var> _field_owner;
	jule::Ptr<_1ac9d13d4_FieldIns> _field_field;
	_1acb8e44e_target _field_target;
};
inline jule::Bool _1acb8edbc_eval_eq(_1acb8edbc_eval *_self_, _1acb8edbc_eval _other_);


struct _1acbae13e_unaryEval {
	jule::Ptr<_1acb8edbc_eval> _field_e;
	jule::Ptr<_1acb8cded_Data> _field_d;
	jule::Ptr<_1ac9b4b04_UnaryExpr> _field_u;
};
inline jule::Bool _1acbae13e_unaryEval_eq(_1acbae13e_unaryEval *_self_, _1acbae13e_unaryEval _other_);


struct _1acbb10ca_binaryEval {
	jule::Ptr<_1acb8edbc_eval> _field_e;
	jule::Ptr<_1acb8cded_Data> _field_l;
	jule::Ptr<_1acb8cded_Data> _field_r;
	jule::Ptr<_1abc2ba81_Token> _field_op;
};
inline jule::Bool _1acbb10ca_binaryEval_eq(_1acbb10ca_binaryEval *_self_, _1acbb10ca_binaryEval _other_);


struct _1acbbe4b2_InsGeneric {
	jule::Ptr<_1acbc0d98_Type> _field_Type;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_Constraint;
};
struct _1acbc00a6_TypeAlias {
	jule::Ptr<_1ac9bd811_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1acbc85a9_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _field_Generics;
};
struct _1acbc0d98_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1acbc0d98_Type_eq(_1acbc0d98_Type *_self_, _1acbc0d98_Type _other_);


struct _1acbc85a9_TypeSym {
	jule::Ptr<_1abc4259c_TypeDecl> _field_Decl;
	jule::Ptr<_1acbc0d98_Type> _field_Type;
};
inline jule::Bool _1acbc85a9_TypeSym_eq(_1acbc85a9_TypeSym *_self_, _1acbc85a9_TypeSym _other_);


struct _1acbc8eb1_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1acbc8eb1_Prim_eq(_1acbc8eb1_Prim *_self_, _1acbc8eb1_Prim _other_);


struct _1acbcc9dc_Sptr {
	jule::Ptr<_1acbc0d98_Type> _field_Elem;
};
inline jule::Bool _1acbcc9dc_Sptr_eq(_1acbcc9dc_Sptr *_self_, _1acbcc9dc_Sptr _other_);


struct _1acbcd4b0_Slc {
	jule::Ptr<_1acbc0d98_Type> _field_Elem;
};
inline jule::Bool _1acbcd4b0_Slc_eq(_1acbcd4b0_Slc *_self_, _1acbcd4b0_Slc _other_);


struct _1acbce0a4_Tuple {
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_Types;
};
struct _1acbceb54_Map {
	jule::Ptr<_1acbc0d98_Type> _field_Key;
	jule::Ptr<_1acbc0d98_Type> _field_Val;
};
inline jule::Bool _1acbceb54_Map_eq(_1acbceb54_Map *_self_, _1acbceb54_Map _other_);


struct _1acbd07d1_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1acbc0d98_Type> _field_Elem;
};
inline jule::Bool _1acbd07d1_Arr_eq(_1acbd07d1_Arr *_self_, _1acbd07d1_Arr _other_);


struct _1acbd12a4_Ptr {
	jule::Ptr<_1acbc0d98_Type> _field_Elem;
};
inline jule::Bool _1acbd12a4_Ptr_eq(_1acbd12a4_Ptr *_self_, _1acbd12a4_Ptr _other_);


struct _1acbd22a5_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1acbd22a5_referencer_eq(_1acbd22a5_referencer *_self_, _1acbd22a5_referencer _other_);


struct _1acbd3295_typeChecker {
	jule::Ptr<_1ac9a8c2a_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1acbd22a5_referencer> _field_referencer;
	jule::Ptr<_1ac979855_ReferenceStack> _field_refers;
	jule::Ptr<_1abc2ba81_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1acbc00a6_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1acbdb358_identTypeLookup {
};
inline jule::Bool _1acbdb358_identTypeLookup_eq(_1acbdb358_identTypeLookup *_self_, _1acbdb358_identTypeLookup _other_);


struct _1ac6ac588_FileInfo {
	jule::Ptr<_1abc40644_AST> _field_Ast;
	jule::Slice<_1a6a6bde3_Log> _field_Errors;
};
struct _1ad5d17ec_stmt {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1ad5d218d_scopeParser {
	jule::Ptr<_1ad600398_parser> _field_p;
	jule::Ptr<_1ac9bd811_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _1ad5deab3_exprBuilder {
	jule::Ptr<_1ad600398_parser> _field_p;
};
inline jule::Bool _1ad5deab3_exprBuilder_eq(_1ad5deab3_exprBuilder *_self_, _1ad5deab3_exprBuilder _other_);


struct _1ad5ec1a8_assignInfo {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_l;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_r;
	jule::Ptr<_1abc2ba81_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1ad600398_parser {
	jule::Ptr<_1abc40644_AST> _field_ast;
	jule::Slice<jule::Ptr<_1abc419b9_Directive>> _field_directives;
	jule::Slice<_1a6a6bde3_Log> _field_errors;
	jule::Ptr<_1ad5deab3_exprBuilder> _field_ep;
};
struct _1ad611552_typeBuilder {
	jule::Ptr<_1ad600398_parser> _field_p;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _1ace18244_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1ace18244_CompileInfo_eq(_1ace18244_CompileInfo *_self_, _1ace18244_CompileInfo _other_);


struct _1ace19982_directiveEval {
	jule::Slice<_1a6a6bde3_Log> _field_logs;
	jule::Ptr<_1abc419b9_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1ad615798_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1ad61bace_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1ad623eb0_MetaStrBuilder {
	jule::Ptr<_1acaa540e_FnIns> _field_Write;
	jule::Ptr<_1acaa540e_FnIns> _field_WriteByte;
	jule::Ptr<_1acaa540e_FnIns> _field_WriteRune;
	jule::Ptr<_1acaa540e_FnIns> _field_WriteStr;
};
inline jule::Bool _1ad623eb0_MetaStrBuilder_eq(_1ad623eb0_MetaStrBuilder *_self_, _1ad623eb0_MetaStrBuilder _other_);


struct _1ad624b81_MetaRuntime {
	jule::Ptr<_1acaa2351_Fn> _field_ToStr;
	jule::Ptr<_1acaa2351_Fn> _field_ArrayCmp;
	jule::Ptr<_1acaa540e_FnIns> _field_RCAdd;
	jule::Ptr<_1acaa540e_FnIns> _field_RCLoad;
	jule::Ptr<_1acaa540e_FnIns> _field_RCDrop;
	jule::Ptr<_1acaa540e_FnIns> _field_RCAddAtomic;
	jule::Ptr<_1acaa540e_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_1acaa540e_FnIns> _field_RCDropAtomic;
	jule::Ptr<_1acaa540e_FnIns> _field_RuneCount;
	jule::Ptr<_1ac9ce129_Struct> _field_Map;
	jule::Ptr<_1ac9ce129_Struct> _field_MapIterator;
};
inline jule::Bool _1ad624b81_MetaRuntime_eq(_1ad624b81_MetaRuntime *_self_, _1ad624b81_MetaRuntime _other_);


struct _1ad625654_MetaMathCmplx {
	jule::Ptr<_1ac9d1e84_StructIns> _field_Cmplx;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxAdd;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxSub;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxMul;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxDiv;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxAddZ;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxSubZ;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxMulZ;
	jule::Ptr<_1acaa540e_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _1ad625654_MetaMathCmplx_eq(_1ad625654_MetaMathCmplx *_self_, _1ad625654_MetaMathCmplx _other_);


struct _1ad625c5e_Meta {
	jule::Ptr<_1ad624b81_MetaRuntime> _field_Runtime;
	jule::Ptr<_1ad623eb0_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1ad625654_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_1acaa2351_Fn> _field_EntryPoint;
};
inline jule::Bool _1ad625c5e_Meta_eq(_1ad625c5e_Meta *_self_, _1ad625c5e_Meta _other_);


struct _1ad627304_OrderedDefines {
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_Globals;
};
struct _1bb2393e2_liveTable {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1acaa540e_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1acaaca65_Trait>> _field_traits;
};
struct _1bb239700_ObjectDeadCode {
	_1bb2393e2_liveTable _field_live;
	jule::Ptr<_1ad618328_IR> _field_ir;
};
struct _1bb23d825_scopeDeadCode {
	jule::Ptr<_1bb23d825_scopeDeadCode> _field_parent;
	jule::Ptr<_1ac95aa56_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac95d5a3_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1bb23d825_scopeDeadCode_eq(_1bb23d825_scopeDeadCode *_self_, _1bb23d825_scopeDeadCode _other_);


struct _1bb242dac_exprDeadCode {
	jule::Ptr<_1bb23d825_scopeDeadCode> _field_s;
};
inline jule::Bool _1bb242dac_exprDeadCode_eq(_1bb242dac_exprDeadCode *_self_, _1bb242dac_exprDeadCode _other_);


struct _1bb107931_anyData {
	jule::Ptr<jule::U32> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _1bb107931_anyData_eq(_1bb107931_anyData *_self_, _1bb107931_anyData _other_);


struct _1bb109d73_ExceptionalForwardingExprModel {
	jule::Ptr<_1aca97115_FnCallExprModel> _field_Expr;
};
inline jule::Bool _1bb109d73_ExceptionalForwardingExprModel_eq(_1bb109d73_ExceptionalForwardingExprModel *_self_, _1bb109d73_ExceptionalForwardingExprModel _other_);


struct _1bb10a060_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_1aca97115_FnCallExprModel> _field_Base;
};
inline jule::Bool _1bb10a060_FnCallIgnoreExceptionalExprModel_eq(_1bb10a060_FnCallIgnoreExceptionalExprModel *_self_, _1bb10a060_FnCallIgnoreExceptionalExprModel _other_);


struct _1bb10a406_SwapExprModel {
	jule::Ptr<_1acb8cded_Data> _field_Left;
	jule::Ptr<_1acb8cded_Data> _field_Right;
};
inline jule::Bool _1bb10a406_SwapExprModel_eq(_1bb10a406_SwapExprModel *_self_, _1bb10a406_SwapExprModel _other_);


struct _1bb10a824_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1bb10a824_EmptyCompareExprModel_eq(_1bb10a824_EmptyCompareExprModel *_self_, _1bb10a824_EmptyCompareExprModel _other_);


struct _1bb10ab21_RefExprModel {
	jule::Ptr<_1acb3d420_Var> _field_Var;
};
inline jule::Bool _1bb10ab21_RefExprModel_eq(_1bb10ab21_RefExprModel *_self_, _1bb10ab21_RefExprModel _other_);


struct _1bb10b0c7_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1aca3208e_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1bb10b0c7_StrCompExprModel_eq(_1bb10b0c7_StrCompExprModel *_self_, _1bb10b0c7_StrCompExprModel _other_);


struct _1bb10b65a_MutSlicingExprModel {
	jule::Ptr<_1abc2ba81_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1bb10b65a_MutSlicingExprModel_eq(_1bb10b65a_MutSlicingExprModel *_self_, _1bb10b65a_MutSlicingExprModel _other_);


struct _1bb10b9e0_UnsafeBinaryExprModel {
	jule::Ptr<_1aca95135_BinaryExprModel> _field_Node;
};
inline jule::Bool _1bb10b9e0_UnsafeBinaryExprModel_eq(_1bb10b9e0_UnsafeBinaryExprModel *_self_, _1bb10b9e0_UnsafeBinaryExprModel _other_);


struct _1bb10bcdc_UnsafeIndexingExprModel {
	jule::Ptr<_1aca97995_IndexingExprModel> _field_Node;
};
inline jule::Bool _1bb10bcdc_UnsafeIndexingExprModel_eq(_1bb10bcdc_UnsafeIndexingExprModel *_self_, _1bb10bcdc_UnsafeIndexingExprModel _other_);


struct _1bb10c1b6_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1aca974de_SliceExprModel> _field_Elems;
};
inline jule::Bool _1bb10c1b6_PushToSliceExprModel_eq(_1bb10c1b6_PushToSliceExprModel *_self_, _1bb10c1b6_PushToSliceExprModel _other_);


struct _1bb10c590_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1bb10c590_AppendToSliceExprModel_eq(_1bb10c590_AppendToSliceExprModel *_self_, _1bb10c590_AppendToSliceExprModel _other_);


struct _1bb10c969_StrRuneIter {
	jule::Ptr<_1acb8cded_Data> _field_Expr;
	jule::Ptr<_1ac95c88d_RangeIter> _field_Base;
};
inline jule::Bool _1bb10c969_StrRuneIter_eq(_1bb10c969_StrRuneIter *_self_, _1bb10c969_StrRuneIter _other_);


struct _1bb10cc66_UnsafeDerefExprModel {
	jule::Ptr<_1aca9550e_UnaryExprModel> _field_Base;
};
inline jule::Bool _1bb10cc66_UnsafeDerefExprModel_eq(_1bb10cc66_UnsafeDerefExprModel *_self_, _1bb10cc66_UnsafeDerefExprModel _other_);


struct _1bb10d063_UnsafeCastingExprModel {
	jule::Ptr<_1aca96763_CastingExprModel> _field_Base;
};
inline jule::Bool _1bb10d063_UnsafeCastingExprModel_eq(_1bb10d063_UnsafeCastingExprModel *_self_, _1bb10d063_UnsafeCastingExprModel _other_);


struct _1bb10db8a_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1bb10db8a_nilVar_eq(_1bb10db8a_nilVar *_self_, _1bb10db8a_nilVar _other_);


struct _1bb10decb_nils {
	jule::Slice<_1bb10db8a_nilVar> _field_vars;
};
struct _1bb111b49_scopeOptimizer {
	jule::Ptr<_1bb111b49_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1ac95aa56_Scope> _field_scope;
	jule::Ptr<_1bb1228e6_data> _field_data;
};
inline jule::Bool _1bb111b49_scopeOptimizer_eq(_1bb111b49_scopeOptimizer *_self_, _1bb111b49_scopeOptimizer _other_);


struct _1bb118854_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1bb1228e6_data> _field_data;
	jule::Ptr<_1ad61bace_ExprInspector> _field_inspector;
};
inline jule::Bool _1bb118854_exprOptimizer_eq(_1bb118854_exprOptimizer *_self_, _1bb118854_exprOptimizer _other_);


struct _1bb11e6c3_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1acbc0d98_Type> _field_kind;
};
inline jule::Bool _1bb11e6c3_dynamicVar_eq(_1bb11e6c3_dynamicVar *_self_, _1bb11e6c3_dynamicVar _other_);


struct _1bb11ea14_dynamic {
	jule::Slice<_1bb11e6c3_dynamicVar> _field_vars;
};
struct _1bb1228e6_data {
	jule::Ptr<_1bb1241cd_boundary> _field_boundary;
	jule::Ptr<_1bb10decb_nils> _field_nils;
	jule::Ptr<_1bb11ea14_dynamic> _field_dynamic;
	jule::I32 _field_flags;
};
inline jule::Bool _1bb1228e6_data_eq(_1bb1228e6_data *_self_, _1bb1228e6_data _other_);


struct _1bb123d8c_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1bb1241cd_boundary {
	jule::Slice<_1bb123d8c_boundaryVar> _field_vars;
};
struct _1bb243ece_Optimizer {
	jule::Ptr<_1ad618328_IR> _field_ir;
};
inline jule::Bool _1bb243ece_Optimizer_eq(_1bb243ece_Optimizer *_self_, _1bb243ece_Optimizer _other_);


struct _1aae3b5bb_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1aae3b5bb_AbsTime_eq(_1aae3b5bb_AbsTime *_self_, _1aae3b5bb_AbsTime _other_);


struct _1aae3bc92_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1aae3bc92_Time_eq(_1aae3bc92_Time *_self_, _1aae3bc92_Time _other_);


struct _1bb248104_scopeCoder {
	jule::Ptr<_1aae49299_ObjectCoder> _field_oc;
};
inline jule::Bool _1bb248104_scopeCoder_eq(_1bb248104_scopeCoder *_self_, _1bb248104_scopeCoder _other_);


struct _1bb2545e9_exprCoder {
	jule::Ptr<_1aae49299_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1acb3d420_Var>>> _field_varPrefixes;
};
struct _1bb266b7d_TestCoder {
	jule::Ptr<_1ac9d1e84_StructIns> _field_t;
	jule::Ptr<_1acaa2351_Fn> _field_tmReset;
	jule::Ptr<_1acaa2351_Fn> _field_tmFailed;
	jule::Ptr<_1acaa2351_Fn> _field_tmSkipped;
	jule::Ptr<_1aae49299_ObjectCoder> _field_oc;
};
inline jule::Bool _1bb266b7d_TestCoder_eq(_1bb266b7d_TestCoder *_self_, _1bb266b7d_TestCoder _other_);


struct _1bb2697c9_identCoder {
};
inline jule::Bool _1bb2697c9_identCoder_eq(_1bb2697c9_identCoder *_self_, _1bb2697c9_identCoder _other_);


struct _1aae469e4_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1aae469e4_SerializationInfo_eq(_1aae469e4_SerializationInfo *_self_, _1aae469e4_SerializationInfo _other_);


struct _1aae46e12_traitCast {
	jule::Ptr<_1acaaca65_Trait> _field_t1;
	jule::Ptr<_1acaaca65_Trait> _field_t2;
};
inline jule::Bool _1aae46e12_traitCast_eq(_1aae46e12_traitCast *_self_, _1aae46e12_traitCast _other_);


struct _1aae472db_anonHash {
	jule::Ptr<_1aca97e4b_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1aae472db_anonHash_eq(_1aae472db_anonHash *_self_, _1aae472db_anonHash _other_);


struct _1aae47709_traitHash {
	jule::Ptr<_1acaaca65_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _field_methods;
};
struct _1aae47a06_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1aae47a06_metadata_eq(_1aae47a06_metadata *_self_, _1aae47a06_metadata _other_);


struct _1aae49299_ObjectCoder {
	_1a6a5cb3c_Builder _field_Buf;
	_1a6a5cb3c_Builder _field_resultDecls;
	_1a6a5cb3c_Builder _field_anyObj;
	_1a6a5cb3c_Builder _field_anonObj;
	_1a6a5cb3c_Builder _field_deallocObj;
	_1a6a5cb3c_Builder _field_coSpawnObj;
	jule::Ptr<_1ad618328_IR> _field_ir;
	_1aae469e4_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1aae472db_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1c0d56724__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _field_anyTypeMap;
	jule::Slice<_1aae46e12_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1acaa540e_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1aae47709_traitHash>> _field_traitMap;
	jule::Ptr<_1c0da2c59__Map> _field_traitMetMap;
	jule::Ptr<_1bb2545e9_exprCoder> _field_ec;
	jule::Ptr<_1bb248104_scopeCoder> _field_sc;
	jule::Ptr<_1aae59298_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_1aae47a06_metadata _field_meta;
};
struct _1aae58660_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1aae58660_customType_eq(_1aae58660_customType *_self_, _1aae58660_customType _other_);


struct _1aae59298_typeCoder {
	jule::Ptr<_1aae49299_ObjectCoder> _field_oc;
	jule::Ptr<_1aae61d83_resultCoder> _field_rc;
};
inline jule::Bool _1aae59298_typeCoder_eq(_1aae59298_typeCoder *_self_, _1aae59298_typeCoder _other_);


struct _1aae61d83_resultCoder {
	jule::Ptr<_1aae59298_typeCoder> _field_tc;
};
inline jule::Bool _1aae61d83_resultCoder_eq(_1aae61d83_resultCoder *_self_, _1aae61d83_resultCoder _other_);


struct _1c17117a4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1c17117a4_Flag_eq(_1c17117a4_Flag *_self_, _1c17117a4_Flag _other_);

struct _1c1715137_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1c1715137_Flag_eq(_1c1715137_Flag *_self_, _1c1715137_Flag _other_);

struct _1c1718844_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1c1718844_Flag_eq(_1c1718844_Flag *_self_, _1c1718844_Flag _other_);

struct _1c171c095_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1c171c095_Flag_eq(_1c171c095_Flag *_self_, _1c171c095_Flag _other_);

struct _1c17207a2_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1c17207a2_Flag_eq(_1c17207a2_Flag *_self_, _1c17207a2_Flag _other_);


struct _1aaec703b_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1aaec9a00_argParser {
	_1aaec703b_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1a6b8a3eb_Cmd {
	_1a6b2a91e_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct _1bb12231e_dataCheckpoint {
	_1bb1241cd_boundary _field_boundary;
	_1bb10decb_nils _field_nils;
	_1bb11ea14_dynamic _field_dynamic;
};
struct _1a6b89818_Dir {
	jule::Str _field_Name;
	_1a6b32eba_Stat _field_Stat;
};
inline jule::Bool _1a6b89818_Dir_eq(_1a6b89818_Dir *_self_, _1a6b89818_Dir _other_);


struct _1ad618328_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1ac98e150_Package> _field_Main;
	jule::Ptr<_1ac98b8cd_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _field_Used;
	_1ad627304_OrderedDefines _field_Ordered;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1acaa540e_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1acaa540e_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1acb8cded_Data__jule_tuple_x_1acb8cded_Data {
	jule::Ptr<_1acb8cded_Data> __jule_result_arg0;
	jule::Ptr<_1acb8cded_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1acb8cded_Data__jule_tuple_bool {
	jule::Ptr<_1acb8cded_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac9b2a47_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac9c57b3_Case__jule_tuple_bool {
	jule::Ptr<_1ac9c57b3_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1ac9c57b3_Case__jule_tuple_x_1ac9c4619_Else {
	jule::Slice<jule::Ptr<_1ac9c57b3_Case>> __jule_result_arg0;
	jule::Ptr<_1ac9c4619_Else> __jule_result_arg1;
};
struct __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ac9bc1b1_AssignSt__jule_tuple_bool {
	jule::Ptr<_1ac9bc1b1_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1abc4259c_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1abc45490_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log {
	jule::Slice<jule::Ptr<_1abc40644_AST>> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a6a6bde3_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool {
	jule::Ptr<_1acaa540e_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ad618328_IR__jule_tuple_s_1a6a6bde3_Log {
	jule::Ptr<_1ad618328_IR> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_i32 {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a940b54e_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a940b54e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a940b54e_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log {
	jule::Ptr<_1acaa8654_SymTab> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log {
	jule::Ptr<_1ac98e150_Package> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log {
	jule::Ptr<_1abc40644_AST> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1abc2ba81_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> __jule_result_arg0;
	jule::Slice<_1a6a6bde3_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1bb504745_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1bb50516e_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1c0d56724__Map> static__1c0d56cda_make(void);
inline void _1c0d56e3e_initData(_1c0d56724__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1c0d57093_hash(_1c0d56724__Map* _self_, jule::Str _14616_k);
inline void _1c0d571e7_rehash(_1c0d56724__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1c0d5734b_nextSize(_1c0d56724__Map* _self_);
inline void _1c0d574a0_lookup(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1c0d57604_get(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1c0d57758_set(_1c0d56724__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1c0d578ac_del(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _27624_k);
inline void _1c0d57a11_clear(jule::Ptr<_1c0d56724__Map> _self_);
inline jule::I32 _1c0d57b65_len(jule::Ptr<_1c0d56724__Map> _self_);
inline jule::I32 _1c0d57cb9_cap(_1c0d56724__Map* _self_);
inline _1c0d62e5b_mapIterator _1c0d57e1d_iterator(jule::Ptr<_1c0d56724__Map> _self_);
inline jule::Ptr<_1c0da2c59__Map> static__1c0da3276_make(void);
inline void _1c0da33ca_initData(_1c0da2c59__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1c0da352e_hash(_1c0da2c59__Map* _self_, jule::Ptr<_1acaa540e_FnIns> _14616_k);
inline void _1c0da3683_rehash(_1c0da2c59__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1c0da37d7_nextSize(_1c0da2c59__Map* _self_);
inline void _1c0da393b_lookup(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1c0da3a90_get(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1c0da3be4_set(_1c0da2c59__Map* _self_, jule::Ptr<_1acaa540e_FnIns> _24123_k);
inline jule::Bool _1c0da3d48_del(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _27624_k);
inline void _1c0da3e9c_clear(jule::Ptr<_1c0da2c59__Map> _self_);
inline jule::I32 _1c0da4101_len(jule::Ptr<_1c0da2c59__Map> _self_);
inline jule::I32 _1c0da4255_cap(_1c0da2c59__Map* _self_);
inline _1c0dac33a_mapIterator _1c0da43a9_iterator(jule::Ptr<_1c0da2c59__Map> _self_);
inline void _1c0d634de_init(_1c0d62e5b_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1c0d63643_next(_1c0d62e5b_mapIterator* _self_);
inline void _1c0dac8bd_init(_1c0dac33a_mapIterator* _self_);
inline __jule_tuple_px_1acaa540e_FnIns__jule_tuple_psuintptr _1c0daca22_next(_1c0dac33a_mapIterator* _self_);
inline _1a6a5cb3c_Builder static__1a6a5d489_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1a6a5d7ca_Write(_1a6a5cb3c_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1a6a5db1b_WriteStr(_1a6a5cb3c_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1a6a5ddc4_WriteByte(_1a6a5cb3c_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1a6a5e215_WriteRune(_1a6a5cb3c_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1a6a5e49b_Str(_1a6a5cb3c_Builder* _self_);
inline void _1a6a5e699_Clear(_1a6a5cb3c_Builder* _self_);
inline jule::I32 _1a6a5e930_Len(_1a6a5cb3c_Builder* _self_);
inline jule::Slice<jule::U8> _1a6a5ee4c_Buf(_1a6a5cb3c_Builder* _self_);
inline void _1a6a60205_SetBuf(_1a6a5cb3c_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1a8e5100b_index(_1a8e50a44_lazyBuff* _self_, jule::I32 _5521_i);
inline void _1a8e512b4_append(_1a8e50a44_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1a8e5154a_string(_1a8e50a44_lazyBuff* _self_);
inline jule::Ptr<_1a6b3087a_File> static__1a6b3135e_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1a6b3087a_File>> static__1a6b31628_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1a6b318e2_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__1a6b31c88_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm);
inline jule::VoidExceptional _1a6b32591_Close(_1a6b3087a_File* _self_);
inline jule::Exceptional<jule::Ptr<_1a6b3087a_File>> static__1a6b34719_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode);
inline jule::VoidExceptional static__1a6b3494a_Remove(jule::Str _2719_path);
inline jule::Exceptional<jule::I32> _1a6b34dce_Write(_1a6b3087a_File* _self_, jule::Slice<jule::U8> _4021_buf);
inline jule::Exceptional<jule::I32> _1a6b35220_Read(_1a6b3087a_File* _self_, jule::Slice<jule::U8> _6824_buf);
inline jule::Bool _1a6b333c7_IsDir(_1a6b32eba_Stat* _self_);
inline jule::Bool _1a6b3365d_IsReg(_1a6b32eba_Stat* _self_);
inline jule::U32 _1a6b338e4_Size(_1a6b32eba_Stat* _self_);
inline jule::Exceptional<_1a6b32eba_Stat> static__1a8e596eb_Of(jule::Str _1015_path);
inline jule::Bool _1aa50c671_set(_1aa515ba7_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1aa50c9b2_floatBits(_1aa515ba7_decimal* _self_, _1aa502622_floatInfo* _33226_flt);
inline void _1aa516092_assign(_1aa515ba7_decimal* _self_, jule::U64 _15126_v);
inline void _1aa51634a_shift(_1aa515ba7_decimal* _self_, jule::I32 _17625_k);
inline void _1aa516603_roundDown(_1aa515ba7_decimal* _self_, jule::I32 _19625_nd);
inline void _1aa5168ab_roundUp(_1aa515ba7_decimal* _self_, jule::I32 _20523_nd);
inline void _1aa516b64_round(_1aa515ba7_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1aa516dea_roundedInteger(_1aa515ba7_decimal* _self_);
inline void static__1bb5b4c9a_Reset(void);
inline void static__1bb5b4ea9_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1aa51b74b_LogFlat(_1a6a6bde3_Log* _1421_l);
inline void static__1aa51b95a_LogError(_1a6a6bde3_Log* _1922_l);
inline void static__1aa51bb8b_Log(_1a6a6bde3_Log* _6417_l);
inline void static__1aa51bdbc_PrintLogs(jule::Slice<_1a6a6bde3_Log>* _7423_logs);
inline jule::U8 _1abc2be38_Prec(_1abc2ba81_Token* _self_);
inline jule::Ptr<_1abc32636_Fileset> static__1abc329bb_New(jule::Str _2016_path);
inline void _1abc3302c_FillMut(_1abc32636_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _1abc332b3_Dir(_1abc32636_Fileset* _self_);
inline jule::Str _1abc33549_Name(_1abc32636_Fileset* _self_);
inline jule::Str _1abc33b21_GetRow(_1abc32636_Fileset* _self_, jule::I32 _5718_row);
inline void _1abc3aead_pushErr(_1abc3a8e7_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1abc3b51e_lex(_1abc3a8e7_lex* _self_);
inline jule::Str _1abc3b860_id(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1abc3bae6_resume(_1abc3a8e7_lex* _self_);
inline void _1abc3bd9e_lexLineComment(_1abc3a8e7_lex* _self_, jule::Ptr<_1abc2ba81_Token>* _52235_token);
inline void _1abc3c157_lexRangeComment(_1abc3a8e7_lex* _self_, jule::Ptr<_1abc2ba81_Token>* _53736_token);
inline jule::Str _1abc3c498_num(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1abc3c7d9_escapeSeq(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1abc3cbd5_getRune(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1abc3d026_lexRune(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1abc3d2ac_lexStr(_1abc3a8e7_lex* _self_);
inline void _1abc3d741_newLine(_1abc3a8e7_lex* _self_);
inline jule::Bool _1abc3dca2_isOp(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1abc2ba81_Token>* _70858_t);
inline jule::Bool _1abc3e19d_lexBasicOps(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1abc2ba81_Token>* _71845_tok);
inline jule::Bool _1abc3e599_lexId(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1abc2ba81_Token>* _72740_t);
inline jule::Bool _1abc3e995_lexNum(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1abc2ba81_Token>* _73741_t);
inline jule::Ptr<_1abc2ba81_Token> _1abc3ec2b_token(_1abc3a8e7_lex* _self_);
inline jule::Bool _1abc4446c_IsUnsafe(_1abc440c6_PtrTypeDecl* _self_);
inline jule::Bool _1abc44c0e_AutoSized(_1abc44868_ArrTypeDecl* _self_);
inline jule::Bool _1ac9b6b28_Unhandled(_1ac9b6771_FnCallExpr* _self_);
inline jule::Bool _1ac9b6dae_Ignored(_1ac9b6771_FnCallExpr* _self_);
inline jule::Bool _1ac9be405_IsSelf(_1ac9be04d_ParamDecl* _self_);
inline jule::Bool _1ac9c0846_IsAnon(_1ac9c04a0_FnDecl* _self_);
inline jule::Bool _1ac9c264a_IsInf(_1ac9c22a4_Iter* _self_);
inline jule::Bool _1ac9c2e75_IsWhileNext(_1ac9c2ace_WhileKind* _self_);
inline jule::Ptr<_1aca3208e_Const> static__1aca88c61_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1aca3208e_Const> static__1aca88ed6_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1aca3208e_Const> static__1aca892a0_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1aca3208e_Const> static__1aca89569_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1aca3208e_Const> static__1aca89833_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1aca3208e_Const> static__1aca89a42_NewNil(void);
inline jule::I64 _1aca8a1a2_ReadI64(_1aca3208e_Const* _self_);
inline jule::U64 _1aca8a438_ReadU64(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8a6be_ReadBool(_1aca3208e_Const* _self_);
inline jule::Str _1aca8a955_ReadStr(_1aca3208e_Const* _self_);
inline jule::F64 _1aca8abdb_ReadF64(_1aca3208e_Const* _self_);
inline jule::I64 _1aca8ae72_AsI64(_1aca3208e_Const* _self_);
inline jule::U64 _1aca8b208_AsU64(_1aca3208e_Const* _self_);
inline jule::F64 _1aca8b48e_AsF64(_1aca3208e_Const* _self_);
inline void _1aca8b747_SetI64(_1aca3208e_Const* _self_, jule::I64 _13622_x);
inline void _1aca8ba00_SetU64(_1aca3208e_Const* _self_, jule::U64 _13922_x);
inline void _1aca8bca8_SetBool(_1aca3208e_Const* _self_, jule::Bool _14223_x);
inline void _1aca8c061_SetStr(_1aca3208e_Const* _self_, jule::Str _14522_x);
inline void _1aca8c319_SetF64(_1aca3208e_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1aca8c79d_IsI64(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8ca34_IsU64(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8ccba_IsBool(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8d051_IsStr(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8d2d7_IsF64(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8d56d_IsNil(_1aca3208e_Const* _self_);
inline jule::Bool _1aca8dc00_And(_1aca3208e_Const* _self_, _1aca3208e_Const _23615_x);
inline jule::Bool _1aca8e041_Or(_1aca3208e_Const* _self_, _1aca3208e_Const _24714_x);
inline jule::Bool _1aca904d7_Add(_1aca3208e_Const* _self_, _1aca3208e_Const _37519_x);
inline jule::Bool _1aca90828_Sub(_1aca3208e_Const* _self_, _1aca3208e_Const _40419_x);
inline jule::Bool _1aca90b69_Mul(_1aca3208e_Const* _self_, _1aca3208e_Const _42819_x);
inline jule::Bool _1aca90eaa_Div(_1aca3208e_Const* _self_, _1aca3208e_Const _45619_x);
inline jule::Bool _1aca912eb_Mod(_1aca3208e_Const* _self_, _1aca3208e_Const _48519_x);
inline jule::Bool _1aca9163c_BitwiseAnd(_1aca3208e_Const* _self_, _1aca3208e_Const _50726_x);
inline jule::Bool _1aca9197d_BitwiseOr(_1aca3208e_Const* _self_, _1aca3208e_Const _52125_x);
inline jule::Bool _1aca91cbe_Xor(_1aca3208e_Const* _self_, _1aca3208e_Const _53519_x);
inline jule::Bool _1aca92110_Lshift(_1aca3208e_Const* _self_, _1aca3208e_Const _54922_x);
inline jule::Bool _1aca92451_Rshift(_1aca3208e_Const* _self_, _1aca3208e_Const _56922_x);
inline jule::Ptr<_1ac9d13d4_FieldIns> _1ac9cb5dd_instance(jule::Ptr<_1ac9cb203_Field> _self_);
inline jule::Ptr<_1ac9d1e84_StructIns> _1ac9ce5be_instance(jule::Ptr<_1ac9ce129_Struct> _self_);
inline jule::Ptr<_1ac9d1e84_StructIns> _1ac9ce8cc_appendInstance(_1ac9ce129_Struct* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _13535_ins);
inline jule::Ptr<_1acaa2351_Fn> _1ac9cecc8_FindMethod(_1ac9ce129_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1acb3d420_Var> _1ac9d0119_FindStatic(_1ac9ce129_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1ac9cb203_Field> _1ac9d045a_FindField(_1ac9ce129_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1ac9d079b_IsImplements(_1ac9ce129_Struct* _self_, jule::Ptr<_1acaaca65_Trait> _18524_t);
inline jule::Bool _1ac9d0adc_IsUses(_1ac9ce129_Struct* _self_, jule::Ptr<_1ac9ce129_Struct> _19518_s);
inline jule::Str _1ac9d233b_Str(_1ac9d1e84_StructIns* _self_);
inline jule::Bool _1ac9d267c_Equal(jule::Ptr<_1ac9d1e84_StructIns> _self_, jule::Ptr<_1acbc0d98_Type> _25718_other);
inline jule::Bool _1ac9d2b33_Same(_1ac9d1e84_StructIns* _self_, jule::Ptr<_1ac9d1e84_StructIns> _28516_s);
inline jule::Ptr<_1acaa2351_Fn> _1ac9d302e_FindMethod(_1ac9d1e84_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1ac9d13d4_FieldIns> _1ac9d3370_FindField(_1ac9d1e84_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1acb3d420_Var> _1ac9d36b1_FindStatic(_1ac9d1e84_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1acaa42a9_ParamIns> _1acaa0c45_instance(jule::Ptr<_1acaa087c_Param> _self_);
inline jule::Bool _1acaa0ecb_IsSelf(_1acaa087c_Param* _self_);
inline jule::Bool _1acaa1262_IsRef(_1acaa087c_Param* _self_);
inline jule::Bool _1acaa2807_IsVoid(_1acaa2351_Fn* _self_);
inline jule::Bool _1acaa2a8d_IsMethod(_1acaa2351_Fn* _self_);
inline jule::Bool _1acaa2d24_IsEntryPoint(_1acaa2351_Fn* _self_);
inline jule::Bool _1acaa30aa_IsInit(_1acaa2351_Fn* _self_);
inline jule::Bool _1acaa3341_IsAnon(_1acaa2351_Fn* _self_);
inline jule::Bool _1acaa35c7_AnyVar(_1acaa2351_Fn* _self_);
inline jule::Ptr<_1acaa540e_FnIns> _1acaa385d_instanceForce(jule::Ptr<_1acaa2351_Fn> _self_);
inline jule::Ptr<_1acaa540e_FnIns> _1acaa3ae4_instance(jule::Ptr<_1acaa2351_Fn> _self_);
inline jule::Ptr<_1acaa540e_FnIns> _1acaa3e02_appendInstance(_1acaa2351_Fn* _self_, jule::Ptr<_1acaa540e_FnIns>* _13835_ins);
inline jule::Str _1acaa4650_Str(_1acaa42a9_ParamIns* _self_);
inline jule::Str _1acaa5783_Str(_1acaa540e_FnIns* _self_);
inline jule::Bool _1acaa5ac4_Equal(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acbc0d98_Type> _22918_other);
inline jule::Bool _1acaa6069_EqualFn(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acaa540e_FnIns>* _24021_f);
inline jule::Bool _1acaa63aa_equalTrait(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acaa540e_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1acbc0d98_Type>> _1acaa6641_Types(_1acaa540e_FnIns* _self_);
inline jule::Bool _1acaa68c7_IsBuiltin(_1acaa540e_FnIns* _self_);
inline jule::Bool _1acaa6b5d_IsAnon(_1acaa540e_FnIns* _self_);
inline jule::Bool _1acaa6e9e_Same(_1acaa540e_FnIns* _self_, jule::Ptr<_1acaa540e_FnIns> _34216_f);
inline jule::Str _1acaa72e0_GetKindStr(_1acaa540e_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1acaa8b71_SelectPackage(_1acaa8654_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _2729_selector);
inline jule::Ptr<_1acb3d420_Var> _1acaa906c_FindVar(_1acaa8654_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1acaa9468_FindTypeAlias(_1acaa8654_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1ac9ce129_Struct> _1acaa9864_FindStruct(_1acaa8654_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1acaa2351_Fn> _1acaa9c60_FindFn(_1acaa8654_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1acaaca65_Trait> _1acaaa0a1_FindTrait(_1acaa8654_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1acab021b_Enum> _1acaaa3e2_FindEnum(_1acaa8654_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1acaaa733_FindTypeEnum(_1acaa8654_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _1acaaabea_findVar1(_1acaa8654_SymTab* _self_, jule::Ptr<_1acb3d420_Var>* _10825_v);
inline jule::Ptr<_1acb3d420_Var> _1acaab1a1_findVar(_1acaa8654_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1acaab657_findTypeAlias(_1acaa8654_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1acaaba53_defByIdent(_1acaa8654_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1acaac009_isDuplicatedIdent(_1acaa8654_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1acaace61_Str(_1acaaca65_Trait* _self_);
inline jule::Bool _1acaad2a2_Equal(jule::Ptr<_1acaaca65_Trait> _self_, jule::Ptr<_1acbc0d98_Type> _2518_other);
inline jule::Ptr<_1acaa2351_Fn> _1acaad747_FindMethod(_1acaaca65_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1acaa2351_Fn> _1acaaddc9_findMethodInherit(_1acaaca65_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1acaaea89_AutoExpr(_1acaae6b0_EnumItem* _self_);
inline jule::Str _1acab05c3_Str(_1acab021b_Enum* _self_);
inline jule::Bool _1acab0914_Equal(jule::Ptr<_1acab021b_Enum> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other);
inline jule::Ptr<_1acaae6b0_EnumItem> _1acab0d43_FindItem(_1acab021b_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1acab1c9a_Str(_1acab1926_TypeEnum* _self_);
inline jule::Bool _1acab20db_Equal(jule::Ptr<_1acab1926_TypeEnum> _self_, jule::Ptr<_1acbc0d98_Type> _8018_other);
inline jule::Ptr<_1acab134e_TypeEnumItem> _1acab251a_FindItem(_1acab1926_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1ac92d4b8_Str(_1ac92d0bc_comptimeRange* _self_);
inline jule::Bool _1ac92d809_Equal(jule::Ptr<_1ac92d0bc_comptimeRange> _self_, jule::Ptr<_1acbc0d98_Type> _2718_other);
inline jule::Str _1ac92ded0_Str(_1ac92db28_comptimeStructField* _self_);
inline jule::Bool _1ac92e321_Equal(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acbc0d98_Type> _3718_other);
inline jule::Ptr<_1acb8cded_Data> _1ac92e82c__Decl(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acb8edbc_eval>* _4127_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac92ec28__Type(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acb8edbc_eval>* _5327_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac930069_subIdent(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1ac930784_Str(_1ac9303bb_comptimeStructFields* _self_);
inline jule::Bool _1ac930ac5_Equal(jule::Ptr<_1ac9303bb_comptimeStructFields> _self_, jule::Ptr<_1acbc0d98_Type> _9018_other);
inline void _1ac931059_ready(_1ac9303bb_comptimeStructFields* _self_, jule::Ptr<_1acb3d420_Var>* _9426_keyA, jule::Ptr<_1acb3d420_Var>* _9443_keyB);
inline void _1ac9313bc_index(_1ac9303bb_comptimeStructFields* _self_, jule::Ptr<_1acb8cded_Data>* _11526_d, jule::I32 _11536_i);
inline void _1ac9317da_step(_1ac9303bb_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1acb3d420_Var>* _12633_keyA, jule::Ptr<_1acb3d420_Var>* _12650_keyB);
inline jule::I32 _1ac931a71_len(_1ac9303bb_comptimeStructFields* _self_);
inline jule::Str _1ac932203_Str(_1ac931d4b_comptimeStatic* _self_);
inline jule::Bool _1ac932544_Equal(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acbc0d98_Type> _15018_other);
inline jule::Ptr<_1acb8cded_Data> _1ac932a50__Decl(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acb8edbc_eval>* _15427_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac932e4b__Type(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acb8edbc_eval>* _16627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac93328c_subIdent(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1ac9339a7_Str(_1ac933600_comptimeStatics* _self_);
inline jule::Bool _1ac933ce8_Equal(jule::Ptr<_1ac933600_comptimeStatics> _self_, jule::Ptr<_1acbc0d98_Type> _20318_other);
inline void _1ac93427c_ready(_1ac933600_comptimeStatics* _self_, jule::Ptr<_1acb3d420_Var>* _20726_keyA, jule::Ptr<_1acb3d420_Var>* _20743_keyB);
inline void _1ac9345e0_index(_1ac933600_comptimeStatics* _self_, jule::Ptr<_1acb8cded_Data>* _22826_d, jule::I32 _22836_i);
inline void _1ac934a0d_step(_1ac933600_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1acb3d420_Var>* _23933_keyA, jule::Ptr<_1acb3d420_Var>* _23950_keyB);
inline jule::I32 _1ac934c94_len(_1ac933600_comptimeStatics* _self_);
inline jule::Str _1ac935426_Str(_1ac93506e_comptimeEnumField* _self_);
inline jule::Bool _1ac935767_Equal(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Ptr<_1acbc0d98_Type> _26318_other);
inline jule::Ptr<_1acb8cded_Data> _1ac935c62__Decl(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Ptr<_1acb8edbc_eval>* _26727_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9360a3_subIdent(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1ac936845_Str(_1ac93637d_comptimeEnumFields* _self_);
inline jule::Bool _1ac936b86_Equal(jule::Ptr<_1ac93637d_comptimeEnumFields> _self_, jule::Ptr<_1acbc0d98_Type> _30118_other);
inline void _1ac937093_ready(_1ac93637d_comptimeEnumFields* _self_, jule::Ptr<_1acb3d420_Var>* _30526_keyA, jule::Ptr<_1acb3d420_Var>* _30543_keyB);
inline void _1ac937406_index(_1ac93637d_comptimeEnumFields* _self_, jule::Ptr<_1acb8cded_Data>* _32626_d, jule::I32 _32636_i);
inline void _1ac937824_step(_1ac93637d_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1acb3d420_Var>* _33733_keyA, jule::Ptr<_1acb3d420_Var>* _33750_keyB);
inline jule::I32 _1ac937aaa_len(_1ac93637d_comptimeEnumFields* _self_);
inline jule::Str _1ac93823c_Str(_1ac937d85_comptimeParam* _self_);
inline jule::Bool _1ac93857d_Equal(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acbc0d98_Type> _36118_other);
inline jule::Ptr<_1acb8cded_Data> _1ac938a9a__Decl(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _36527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac938e96__Type(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _37727_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac939392__Recv(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _38527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9396d3_subIdent(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1ac939e86_Str(_1ac939bde_comptimeParams* _self_);
inline jule::Bool _1ac93a2c7_Equal(jule::Ptr<_1ac939bde_comptimeParams> _self_, jule::Ptr<_1acbc0d98_Type> _43418_other);
inline void _1ac93a75b_ready(_1ac939bde_comptimeParams* _self_, jule::Ptr<_1acb3d420_Var>* _43826_keyA, jule::Ptr<_1acb3d420_Var>* _43843_keyB);
inline void _1ac93aabe_index(_1ac939bde_comptimeParams* _self_, jule::Ptr<_1acb8cded_Data>* _45926_d, jule::I32 _45936_i);
inline void _1ac93aedc_step(_1ac939bde_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1acb3d420_Var>* _47033_keyA, jule::Ptr<_1acb3d420_Var>* _47050_keyB);
inline jule::I32 _1ac93b273_len(_1ac939bde_comptimeParams* _self_);
inline jule::Str _1ac93b905_Str(_1ac93b54d_comptimeTypeInfos* _self_);
inline jule::Bool _1ac93bc46_Equal(jule::Ptr<_1ac93b54d_comptimeTypeInfos> _self_, jule::Ptr<_1acbc0d98_Type> _49418_other);
inline void _1ac93c1ca_ready(_1ac93b54d_comptimeTypeInfos* _self_, jule::Ptr<_1acb3d420_Var>* _49826_keyA, jule::Ptr<_1acb3d420_Var>* _49843_keyB);
inline void _1ac93c53d_index(_1ac93b54d_comptimeTypeInfos* _self_, jule::Ptr<_1acb8cded_Data>* _51926_d, jule::I32 _51936_i);
inline void _1ac93c95b_step(_1ac93b54d_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1acb3d420_Var>* _52833_keyA, jule::Ptr<_1acb3d420_Var>* _52850_keyB);
inline jule::I32 _1ac93cbe2_len(_1ac93b54d_comptimeTypeInfos* _self_);
inline jule::Str _1ac93d374_Str(_1ac93cebc_comptimeTypeInfo* _self_);
inline jule::Bool _1ac93d6b5_Equal(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acbc0d98_Type> _55218_other);
inline jule::Ptr<_1acb8cded_Data> _1ac93dd03__Decl(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _55627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac93e1ee__Str(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _59322_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac93e5ea__Kind(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _60627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac93e9e6__Bits(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _68627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac93ede2__Elem(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _71027_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9402dd__Size(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _74327_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9406d9__Key(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _76226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac940ad5__Value(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _77528_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac940ed1__Fields(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _78829_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9413cc__Statics(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _81730_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9417c8__Binded(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _83629_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac941bc4__Ordered(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _84926_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9420c0__Comparable(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _86229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9424bb__Mutable(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _87526_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9428b7__Types(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _88828_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac942cb3__CanNil(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _91129_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9431ae__GC(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _92425_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9435aa__Result(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _93729_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9439a6__Params(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _95329_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac943ce7_subIdent(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1ac944479_Str(_1ac9440c2_comptimeValue* _self_);
inline jule::Bool _1ac9447ba_Equal(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acbc0d98_Type> _111818_other);
inline jule::Ptr<_1acb8cded_Data> _1ac944d2b__Unwrap(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _112229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac945227__Type(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _113027_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac945623__Lvalue(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _113829_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac945a1e__Mutable(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _115130_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac945e1a__Const(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _116428_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac946316__Field(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _117728_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac946712__Method(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _121229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac946a53_subIdent(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1ac9471d5_Str(_1ac946d2d_comptimeFiles* _self_);
inline jule::Bool _1ac947526_Equal(jule::Ptr<_1ac946d2d_comptimeFiles> _self_, jule::Ptr<_1acbc0d98_Type> _132218_other);
inline void _1ac9479aa_ready(_1ac946d2d_comptimeFiles* _self_, jule::Ptr<_1acb3d420_Var>* _132626_keyA, jule::Ptr<_1acb3d420_Var>* _132643_keyB);
inline void _1ac947d1d_index(_1ac946d2d_comptimeFiles* _self_, jule::Ptr<_1acb8cded_Data>* _134726_d, jule::I32 _134736_i);
inline void _1ac94823b_step(_1ac946d2d_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1acb3d420_Var>* _135833_keyA, jule::Ptr<_1acb3d420_Var>* _135850_keyB);
inline jule::I32 _1ac9484c2_len(_1ac946d2d_comptimeFiles* _self_);
inline jule::Str _1ac948b54_Str(_1ac94879c_comptimeFile* _self_);
inline jule::Bool _1ac948e95_Equal(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acbc0d98_Type> _138218_other);
inline jule::Ptr<_1acb8cded_Data> _1ac9494b2__Path(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _138627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9498ad__Name(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _139927_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac949ca9__Dir(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _141226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94a0ea_subIdent(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1ac94a9ad_Str(_1ac94a3c5_comptimeDecls* _self_);
inline jule::Bool _1ac94acee_Equal(jule::Ptr<_1ac94a3c5_comptimeDecls> _self_, jule::Ptr<_1acbc0d98_Type> _146118_other);
inline void _1ac94b173_ready(_1ac94a3c5_comptimeDecls* _self_, jule::Ptr<_1acb3d420_Var>* _146526_keyA, jule::Ptr<_1acb3d420_Var>* _146543_keyB);
inline void _1ac94b4d6_index(_1ac94a3c5_comptimeDecls* _self_, jule::Ptr<_1acb8cded_Data>* _148626_d, jule::I32 _148636_i);
inline void _1ac94b904_step(_1ac94a3c5_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1acb3d420_Var>* _149533_keyA, jule::Ptr<_1acb3d420_Var>* _149550_keyB);
inline jule::I32 _1ac94bb8a_len(_1ac94a3c5_comptimeDecls* _self_);
inline jule::Str _1ac94ca6a_Str(_1ac94c6b3_comptimeDecl* _self_);
inline jule::Bool _1ac94cdab_Equal(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acbc0d98_Type> _153418_other);
inline jule::Str _1ac94d30c_declAsStr(_1ac94c6b3_comptimeDecl* _self_);
inline jule::Ptr<_1acb8cded_Data> _1ac94d708__Name(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _156527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94db04__Public(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _160329_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94e000__Binded(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _164129_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94e3eb__Exceptional(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _167534_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94e7e7__Mutable(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _169630_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac94ebe3__Variadic(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _172931_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9500de__Reference(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _176032_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9504da__Params(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _179229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9508d6__Fields(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _182729_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac950cd2__Statics(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _186830_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac9511cd__Methods(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _190430_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1acb8cded_Data> _1ac95151e_subIdent(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*> _1ac954577_readyFn(jule::Ptr<_1ac954148_constraintChecker> _self_);
inline jule::Bool _1ac95480d_readyFi(jule::Ptr<_1ac954148_constraintChecker> _self_);
inline jule::Bool _1ac954a94_readySi(jule::Ptr<_1ac954148_constraintChecker> _self_);
inline jule::Bool _1ac954d2a_ready(jule::Ptr<_1ac954148_constraintChecker> _self_);
inline jule::Bool _1ac9550b1_check(jule::Ptr<_1ac954148_constraintChecker> _self_);
inline jule::Bool _1ac956843_IsTraitImpl(_1ac956447_Impl* _self_);
inline jule::Bool _1ac956ac9_IsStructImpl(_1ac956447_Impl* _self_);
inline jule::Bool _1ac95c2d8_IsWhileNext(_1ac95be42_WhileIter* _self_);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac963696_SelectPackage(_1ac9631bd_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _35429_selector);
inline jule::Ptr<_1acb3d420_Var> _1ac963a92_FindVar(_1ac9631bd_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac963e8d_FindTypeAlias(_1ac9631bd_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded);
inline jule::Ptr<_1ac9ce129_Struct> _1ac964389_FindStruct(_1ac9631bd_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded);
inline jule::Ptr<_1acaa2351_Fn> _1ac964785_FindFn(_1ac9631bd_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded);
inline jule::Ptr<_1acaaca65_Trait> _1ac964ac6_FindTrait(_1ac9631bd_scopeChecker* _self_, jule::Str _42525_ident);
inline jule::Ptr<_1acab021b_Enum> _1ac964e17_FindEnum(_1ac9631bd_scopeChecker* _self_, jule::Str _43424_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac965258_FindTypeEnum(_1ac9631bd_scopeChecker* _self_, jule::Str _44328_ident);
inline jule::Bool _1ac9655aa_isUnsafe(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline jule::Bool _1ac965841_isRoot(_1ac9631bd_scopeChecker* _self_);
inline void _1ac965a3e_stop(_1ac9631bd_scopeChecker* _self_);
inline jule::Bool _1ac965cc5_stopped(_1ac9631bd_scopeChecker* _self_);
inline jule::Bool _1ac96605b_isDeferred(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline void _1ac966314_pushCaptured(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acb3d420_Var>* _50534_v);
inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac96659a_getRoot(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac966831_getHardRoot(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline jule::Ptr<_1ac979855_ReferenceStack> _1ac966ab7_getOwnerRefers(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline jule::Ptr<_1acb3d420_Var> _1ac966e08_findVar(_1ac9631bd_scopeChecker* _self_, jule::Str _55223_ident);
inline jule::Ptr<_1ac95d5a3_Label> _1ac967249_findLabel(_1ac9631bd_scopeChecker* _self_, jule::Str* _57326_ident);
inline jule::Ptr<_1ac961d04_scopeLabel> _1ac96758a_findLabelScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Str* _58932_ident);
inline jule::Ptr<_1ac961d04_scopeLabel> _1ac9678cb_findLabelAll(_1ac9631bd_scopeChecker* _self_, jule::Str* _60029_ident);
inline jule::Bool _1ac967cc7_isDuplicatedIdent(_1ac9631bd_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident);
inline void _1ac968080_checkVarDecl(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c165a_VarDecl> _63233_decl);
inline void _1ac968338_checkTypeAlias(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _66336_ta);
inline void _1ac9685e1_checkTypeAliasDecl(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c530c_TypeAliasDecl> _67939_decl);
inline jule::Ptr<_1ac95aa56_Scope> _1ac968877_getChild(_1ac9631bd_scopeChecker* _self_);
inline void _1ac968c95_checkChildSsc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _69035_tree, jule::Ptr<_1ac95aa56_Scope>* _69063_s, jule::Ptr<_1ac9631bd_scopeChecker>* _69079_ssc);
inline jule::Ptr<_1ac95aa56_Scope> _1ac969191_checkChildSc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _69734_tree, jule::Ptr<_1ac9631bd_scopeChecker>* _69762_ssc);
inline jule::Ptr<_1ac95aa56_Scope> _1ac9694d2_checkChild(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _70332_tree);
inline void _1ac96978a_checkAnonScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree> _70835_tree);
inline void _1ac969aed_processErrorCall(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1abc2ba81_Token> _71369_err);
inline void _1ac969da6_checkExpr(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9b2a47_Expr> _72630_expr);
inline jule::Ptr<_1ac95ae74_If> _1ac96a1e7_checkIf(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4240_If> _75628_i);
inline jule::Ptr<_1ac95b271_Else> _1ac96a538_checkElse(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4619_Else> _77630_e);
inline void _1ac96a7e1_checkConditional(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4ac0_Conditional> _78237_conditional);
inline void _1ac96acb9_checkIterScopeSsc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1ac9bd811_ScopeTree> _79851_tree, jule::Ptr<_1ac95aa56_Scope>* _79879_s, jule::Ptr<_1ac9631bd_scopeChecker> _79894_ssc);
inline jule::Ptr<_1ac95aa56_Scope> _1ac96b270_checkIterScopeSc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1ac9bd811_ScopeTree> _80350_tree, jule::Ptr<_1ac9631bd_scopeChecker> _80377_ssc);
inline jule::Ptr<_1ac95aa56_Scope> _1ac96b66b_checkIterScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1ac9bd811_ScopeTree>* _80949_tree);
inline void _1ac96b924_checkInfIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _81434_it);
inline void _1ac96bbcc_checkWhileIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _82036_it);
inline void _1ac96c0ea_checkComptimeRangeIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _87044_it, jule::Ptr<_1ac95c88d_RangeIter>* _87065_kind, jule::Ptr<_1acb8cded_Data>* _87088_d);
inline void _1ac96c3a3_checkRangeIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _92736_it);
inline void _1ac96c65b_checkIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter> _99430_it);
inline jule::Bool _1ac96c99c_checkValidContLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _101836_it);
inline jule::Bool _1ac96ccdd_checkValidBreakLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _103437_ptr);
inline jule::Ptr<_1ac95cc23_ContSt> _1ac96d12e_checkContValidScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c3c89_ContSt> _105736_c);
inline void _1ac96d3d7_checkCont(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c3c89_ContSt> _108126_c);
inline void _1ac96d690_checkLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bace7_LabelSt> _112831_l);
inline void _1ac96d948_pushGoto(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bb1c1_GotoSt> _114729_gt);
inline void _1ac96dc01_checkPostfix(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt> _115833_a);
inline jule::Bool _1ac96e042_isNewAssignIdent(_1ac9631bd_scopeChecker* _self_, jule::Str _119432_ident);
inline void _1ac96e2ea_removeInteriorMutRisk(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acb8cded_Data>* _120743_d);
inline jule::Bool _1ac96e7a1_checkStructureAssignOp(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _122144_s, jule::Ptr<_1ac9bc1b1_AssignSt>* _122164_a, jule::Ptr<_1acb8cded_Data>* _122188_r);
inline void _1ac96ea59_checkSingleAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt>* _126039_a);
inline void _1ac970197_processEndPartOfMultiAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _134549_st, jule::Ptr<_1ac9bc1b1_AssignSt>* _134572_a, jule::Ptr<_1ac9bbb2d_AssignLeft>* _13468_lexpr, jule::Ptr<_1acb8cded_Data>* _134638_l, jule::Ptr<_1acb8cded_Data>* _134653_r, jule::Bool _134663_strict);
inline void _1ac970450_checkMultiAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt>* _142138_a);
inline void _1ac970708_checkAssignSt(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt> _149234_a);
inline jule::Ptr<_1ac95aa56_Scope> _1ac970b04_checkCaseScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960cae_Case>* _150332_c, jule::Ptr<_1ac9bd811_ScopeTree>* _150347_tree);
inline jule::Ptr<_1ac960cae_Case> _1ac971165_checkCase(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match> _150930_m, jule::I32 _150941_i, jule::Ptr<_1ac9c57b3_Case> _150953_c, jule::Ptr<_1acb8cded_Data> _150972_expr);
inline void _1ac971583_checkCases(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _158632_m, jule::Ptr<_1ac960286_Match> _158656_rm, jule::Ptr<_1acb8cded_Data> _158672_expr);
inline jule::Ptr<_1ac960cae_Case> _1ac97197e_checkDefault(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match> _160733_m, jule::Ptr<_1ac9c4619_Else> _160748_d);
inline void _1ac971ce2_checkComptimePanic(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1abc2ba81_Token> _161539_callToken, jule::Ptr<_1ac95aa56_Scope>* _161566_s);
inline void _1ac972155_processConstMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match>* _164739_tm, jule::Ptr<_1ac9c60cc_MatchCase>* _164756_m);
inline void _1ac97240d_checkTypeMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _167636_m);
inline void _1ac9726b6_checkCommonMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _171938_m);
inline void _1ac97296e_checkMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase> _177031_m);
inline void _1ac972c27_checkFall(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bb4bd_FallSt> _177826_f);
inline jule::Ptr<_1ac95d0ec_BreakSt> _1ac973068_checkBreakWithLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _180136_b);
inline jule::Ptr<_1ac95d0ec_BreakSt> _1ac9733a9_checkPlainBreak(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _185932_b);
inline void _1ac973662_checkBreak(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _188127_b);
inline void _1ac97391a_checkRet(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c1a34_RetSt> _189229_r);
inline void _1ac973bc3_checkUseExpr(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9b341b_UseExpr> _191829_ue);
inline void _1ac973e7b_checkNode(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Any* _193431_node);
inline void _1ac974179_checkResult(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline void _1ac974377_checkTree(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline void _1ac9746da_checkGoto(_1ac9631bd_scopeChecker* _self_, jule::Ptr<_1ac95dc13_GotoSt>* _203730_gt, jule::Ptr<_1ac961d04_scopeLabel>* _203748_label);
inline void _1ac9748d8_checkGotos(_1ac9631bd_scopeChecker* _self_);
inline void _1ac974ad6_checkLabels(_1ac9631bd_scopeChecker* _self_);
inline void _1ac974cd4_checkVars(_1ac9631bd_scopeChecker* _self_);
inline void _1ac974ed2_checkAliases(_1ac9631bd_scopeChecker* _self_);
inline void _1ac975345_check(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _213227_tree, jule::Ptr<_1ac95aa56_Scope>* _213255_s);
inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac9755cb_newChildChecker(jule::Ptr<_1ac9631bd_scopeChecker> _self_);
inline void _1ac97749b_checkCdef(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _1626_d);
inline void _1ac977754_checkTypedef(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _3229_d);
inline void _1ac977a0c_checkNamespace(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _4835_d);
inline void _1ac977cb5_checkDeprecated(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _10036_d);
inline void _1ac97806d_checkTest(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _14126_d);
inline void _1ac978326_checkExport(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _16232_d);
inline void _1ac9785ce_checkDirective(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _20035_d);
inline void _1ac9787cc_check(_1ac97704a_directiveChecker* _self_);
inline jule::Ptr<_1ac979855_ReferenceStack> static__1ac979bb8_new(void);
inline jule::I32 _1ac97a0b4_Len(_1ac979855_ReferenceStack* _self_);
inline jule::Any _1ac97a405_At(_1ac979855_ReferenceStack* _self_, jule::I32 _4318_i);
inline void _1ac97a6ad_Push(_1ac979855_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _1becd564e_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acaa540e_FnIns> _5320_t);
inline jule::Bool _1bed01c20_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acb3d420_Var> _5320_t);
inline jule::Bool _1be21a2c1_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1ac9d1e84_StructIns> _5320_t);
inline jule::Bool _1be984ead_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acaaca65_Trait> _5320_t);
inline void _1ac981362_pushErr(_1ac98085b_symBuilder* _self_, jule::Ptr<_1abc2ba81_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args);
inline void _1ac981ae3_pushSuggestion(_1ac98085b_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args);
inline jule::Bool _1ac981ede_checkCppUseDeclPath(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _32036_decl, jule::Str* _32058_path);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac9822ec_buildCppHeaderImport(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _34041_decl);
inline jule::Str _1ac9826e8_checkAbsPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1ac9c6660_UseDecl>* _37053_decl);
inline jule::Str _1ac982ae4_checkStdAbsPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1ac9c6660_UseDecl>* _39956_decl);
inline __jule_tuple_bool__jule_tuple_str _1ac982e35_checkImpPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _42234_decl);
inline void _1ac9831dd_assignAlias(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _45233_imp);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98352e_buildImport(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _45933_decl);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac983870_findUseDecl(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _48628_pkg);
inline jule::Bool _1ac983bb1_checkDuplicateUseDecl(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _49442_pkg);
inline jule::Str _1ac984002_getAsLinkPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _50434_path);
inline void _1ac984420_pushCycleError(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98085b_symBuilder>* _52532_sb, jule::Str _52549_path, _1a6a5cb3c_Builder* _52565_message);
inline void _1ac98483d_pushCrossCycleError(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98085b_symBuilder>* _53837_target, jule::Ptr<_1ac98b8cd_ImportInfo>* _53859_imp, jule::Ptr<_1abc2ba81_Token>* _53878_errorToken);
inline jule::Bool _1ac984c39_checkImportCycles(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _56134_imp, jule::Ptr<_1ac9c6660_UseDecl>* _56153_decl);
inline void _1ac985157_checkPackageAccessibility(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path);
inline jule::Bool _1ac985553_importPackage(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _62235_imp, jule::Ptr<_1ac9c6660_UseDecl>* _62258_decl);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac985894_importUseDecl(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _66835_decl);
inline void _1ac985a92_importUseDecls(jule::Ptr<_1ac98085b_symBuilder> _self_);
inline void _1ac985d4a_appendNode(_1ac98085b_symBuilder* _self_, _1abc4159b_Node* _69731_node);
inline void _1ac986048_appendNodes(_1ac98085b_symBuilder* _self_);
inline void _1ac986301_pushDirectivePass(_1ac98085b_symBuilder* _self_, jule::Ptr<_1abc419b9_Directive>* _73338_d);
inline void _1ac9864ee_appendTopDirectives(_1ac98085b_symBuilder* _self_);
inline void _1ac9866ec_build(jule::Ptr<_1ac98085b_symBuilder> _self_);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98bdea_SelectPackage(_1ac98b8cd_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> );
inline jule::Ptr<_1acb3d420_Var> _1ac98c2e6_FindVar(_1ac98b8cd_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac98c6e2_FindTypeAlias(_1ac98b8cd_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1ac9ce129_Struct> _1ac98cadd_FindStruct(_1ac98b8cd_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1acaa2351_Fn> _1ac98ced9_FindFn(_1ac98b8cd_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1acaaca65_Trait> _1ac98d32a_FindTrait(_1ac98b8cd_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1acab021b_Enum> _1ac98d66b_FindEnum(_1ac98b8cd_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac98d9ac_FindTypeEnum(_1ac98b8cd_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1ac98dd75_isLookupable(_1ac98b8cd_ImportInfo* _self_);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98e628_SelectPackage(_1ac98e150_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> );
inline jule::Ptr<_1acb3d420_Var> _1ac98ea24_FindVar(_1ac98e150_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac98ee20_FindTypeAlias(_1ac98e150_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1ac9ce129_Struct> _1ac99031b_FindStruct(_1ac98e150_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1acaa2351_Fn> _1ac990717_FindFn(_1ac98e150_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1acaaca65_Trait> _1ac990a58_FindTrait(_1ac98e150_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1acab021b_Enum> _1ac990d99_FindEnum(_1ac98e150_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac9911da_FindTypeEnum(_1ac98e150_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1ac93cebc_comptimeTypeInfo> _1ac9a8598_pushComptimeTypeInfo(_1ac9a8103_commonSemaMeta* _self_, jule::Ptr<_1acbc0d98_Type>* _21341_t);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac9a9203_SelectPackage(_1ac9a8c2a_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _24229_selector);
inline jule::Ptr<_1acb3d420_Var> _1ac9a95ee_FindVar(_1ac9a8c2a_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac9a99ea_FindTypeAlias(_1ac9a8c2a_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded);
inline jule::Ptr<_1ac9ce129_Struct> _1ac9a9de6_FindStruct(_1ac9a8c2a_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded);
inline jule::Ptr<_1acaa2351_Fn> _1ac9aa2e2_FindFn(_1ac9a8c2a_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded);
inline jule::Ptr<_1acaaca65_Trait> _1ac9aa633_FindTrait(_1ac9a8c2a_sema* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1acab021b_Enum> _1ac9aa974_FindEnum(_1ac9a8c2a_sema* _self_, jule::Str _32724_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac9aacb5_FindTypeEnum(_1ac9a8c2a_sema* _self_, jule::Str _34228_ident);
inline jule::Bool _1ac9ab1c2_isFlag(_1ac9a8c2a_sema* _self_, jule::I32 _35418_flags);
inline jule::Ptr<_1acaa8654_SymTab> _1ac9ab458_getCurrentFile(_1ac9a8c2a_sema* _self_);
inline void _1ac9ab711_setCurrentFile(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa8654_SymTab> _35734_f);
inline void _1ac9abb2e_pushErr(_1ac9a8c2a_sema* _self_, jule::Ptr<_1abc2ba81_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args);
inline void _1ac9abe92_pushSuggestion(_1ac9a8c2a_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args);
inline jule::Bool _1acb1cc4b_isAccessibleDefine(_1ac9a8c2a_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1abc2ba81_Token> _37044_token);
inline jule::Bool _1acb1d202_isDuplicatedIdent(_1ac9a8c2a_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded);
inline void _1acb1d565_checkDirectives(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _40237_d, jule::Any _40263_o);
inline jule::Bool _1acb1da1b_checkGenericQuantity(_1ac9a8c2a_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_1abc2ba81_Token> _41163_token);
inline jule::Bool _1acb1ea50_isUseAliasDuplication(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _46938_imp);
inline jule::Bool _1acb1ed91_checkAutoAlias(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _48135_imp);
inline jule::Bool _1acb201d2_checkImport(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _49932_imp);
inline void _1acb203d0_checkImports(_1ac9a8c2a_sema* _self_);
inline void _1acb205cd_implFileImpls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb207cb_implImpls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb209c9_checkEnums(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb20bc7_checkFileInherits(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb20dc5_checkInherits(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline _1acbd3295_typeChecker _1acb2137b_typeChecker(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _59247_generics, jule::Ptr<_1acbd22a5_referencer> _5937_referencer);
inline jule::Ptr<_1acbc0d98_Type> _1acb218dc_buildTypeWithRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6207_generics, jule::Ptr<_1acbd22a5_referencer> _62035_referencer);
inline jule::Bool _1acb21e4d_checkTypeSymWithRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc85a9_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6277_generics, jule::Ptr<_1acbd22a5_referencer> _62735_referencer);
inline jule::Ptr<_1ac954148_constraintChecker> _1acb221d4_constraintChecker(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Bool _1acb225d0_checkTypeSym(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc85a9_TypeSym>* _64134_t, jule::Trait _64151_l);
inline jule::Ptr<_1acbc0d98_Type> _1acb22a86_checkTypeSymRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1ac979855_ReferenceStack> _64678_refers);
inline jule::Ptr<_1acbc0d98_Type> _1acb2303c_buildTypeWithGenerics(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6597_generics, jule::Ptr<_1ac979855_ReferenceStack> _65935_refers);
inline jule::Ptr<_1acbc0d98_Type> _1acb236be_selectType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _67632_t);
inline jule::Ptr<_1acb8edbc_eval> _1acb23b75_evalpd(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1acbc0d98_Type> _68842_p, jule::Ptr<_1acb3d420_Var> _68856_owner);
inline jule::Ptr<_1acb8edbc_eval> _1acb24071_evalp(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1acbc0d98_Type> _70341_p);
inline jule::Ptr<_1acb8edbc_eval> _1acb243b2_eval(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _70825_l);
inline jule::Bool _1acb249cd_checkAssignType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1acbc0d98_Type>* _71254_dest, jule::Ptr<_1acb8cded_Data>* _7138_d, jule::Ptr<_1abc2ba81_Token> _71322_errorToken, jule::Ptr<_1ac979855_ReferenceStack> _71353_refers);
inline jule::Bool _1acb24e84__checkTypeCompatibility(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _75545_dest, jule::Ptr<_1acbc0d98_Type>* _75563_src, jule::Ptr<_1abc2ba81_Token> _7567_errorToken);
inline jule::Bool _1acb2543a_checkTypeCompatibility(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _77344_dest, jule::Ptr<_1acbc0d98_Type>* _7748_src, jule::Ptr<_1abc2ba81_Token>* _77425_errorToken);
inline void _1acb25858_pushCompatiblityError(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acbc0d98_Type>* _78242_dest, jule::Ptr<_1acb8cded_Data>* _78260_src, jule::Ptr<_1abc2ba81_Token>* _7838_errorToken);
inline jule::Bool _1acb25d0e_checkTypeCompatibility1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _80045_dest, jule::Ptr<_1acb8cded_Data>* _80063_src, jule::Ptr<_1abc2ba81_Token>* _8018_errorToken);
inline jule::Ptr<_1acbc0d98_Type> _1acb262b5_buildNonGenericType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1acbc0d98_Type>>* _81644_ignored);
inline jule::Bool _1acb266b1_buildFnNonGenericTypes(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns> _82743_f, jule::Slice<jule::Ptr<_1acbc0d98_Type>>* _82759_ignored);
inline jule::Ptr<_1acaa540e_FnIns> _1acb26a02_getTraitCheckFnKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _85041_f);
inline jule::Bool _1acb26ea8_checkConstraintsFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _87940_f, jule::Ptr<_1abc2ba81_Token>* _87956_et, jule::Ptr<_1acaa540e_FnIns> _87979_exist);
inline jule::Bool _1acb2745e_checkConstraintsStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _89344_s, jule::Ptr<_1abc2ba81_Token>* _89364_et, jule::Ptr<_1ac9d1e84_StructIns> _89387_exist);
inline jule::Bool _1acb2785a_basicFnEnvironment(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*> _91051_algo);
inline jule::Bool _1acb27c56_fnEnvironment(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*> _93046_algo);
inline void _1acb2800e_checkFnParamKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa42a9_ParamIns>* _94238_p);
inline jule::Bool _1acb28350_reloadFnInsTypes(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns> _94937_f);
inline jule::Bool _1acb28806_checkRefValidityForInitExpr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _98944_leftMut, jule::Ptr<_1acb8cded_Data>* _98964_d, jule::Ptr<_1abc2ba81_Token>* _98979_errorToken);
inline jule::Bool _1acb28b47_isMutRiskyStruct(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _100629_s);
inline jule::Bool _1acb29263_checkValidityForInitExpr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _103341_leftMut, jule::Bool _103356_leftRef, jule::Ptr<_1acbc0d98_Type>* _10344_leftKind, jule::Ptr<_1acb8cded_Data>* _103426_d, jule::Ptr<_1abc2ba81_Token>* _103441_errorToken);
inline jule::Bool _1acb2965e_checkTypeAliasDeclKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _106144_ta, jule::Trait _106164_l);
inline void _1acb299c2_checkTypeAliasDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _108440_ta, jule::Trait _108460_l);
inline void _1acb29c7a_checkTypeAliasDeclDup(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _109243_ta);
inline jule::Bool _1acb2a011_checkTypeAliasDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1be8532ee_checkEnumItemsDup(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _111636_items);
inline void _1be861340_checkEnumItemsDup(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _111636_items);
inline void _1acb2a572_checkEnumItemsStr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _113639_e);
inline void _1be8322cd_checkEnumItemInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb8edbc_eval>* _116343_eval, jule::Ptr<_1acab021b_Enum>* _116361_e, jule::Ptr<_1acbc8eb1_Prim>* _116372_prim, jule::Ptr<_1acaae6b0_EnumItem>* _116390_item, jule::U64* _1163112_n);
inline void _1be842d38_checkEnumItemInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb8edbc_eval>* _116343_eval, jule::Ptr<_1acab021b_Enum>* _116361_e, jule::Ptr<_1acbc8eb1_Prim>* _116372_prim, jule::Ptr<_1acaae6b0_EnumItem>* _116390_item, jule::I64* _1163112_n);
inline void _1be82d461_checkEnumItemsInt1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc8eb1_Prim>* _119941_prim, jule::Ptr<_1acab021b_Enum>* _119959_e);
inline void _1be82d73b_checkEnumItemsInt1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc8eb1_Prim>* _119941_prim, jule::Ptr<_1acab021b_Enum>* _119959_e);
inline void _1acb2b221_checkEnumItemsInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _123439_e);
inline void _1acb2b4c9_checkEnumDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _124435_e);
inline void _1acb2b782_checkTypeEnumDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab1926_TypeEnum>* _128539_e);
inline jule::Bool _1acb2ba18_checkEnumDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Bool _1acb2bc9e_checkTypeEnumDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Bool _1acb2c0e0_checkDeclGenerics(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _134834_generics);
inline jule::Bool _1acb2c431_checkFnDeclParamsDup(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa2351_Fn>* _137537_f);
inline jule::Bool _1acb2c772_checkFnDeclResultDup(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa2351_Fn>* _141237_f);
inline jule::Bool _1acb2cab3_checkFnVariadicParam(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _145742_f);
inline void _1acb2cd6b_checkFnDeclPrototype(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _147042_f);
inline jule::Bool _1acb2d322_catchTraitInheritCycle(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait> _149239_t1, jule::Ptr<_1acaaca65_Trait> _149255_t2, _1a6a5cb3c_Builder* _149272_message);
inline jule::Bool _1acb2d663__checkTraitDeclInherits(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _151145_t);
inline void _1acb2d91b_checkTraitDeclInherits(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _155244_t);
inline void _1acb2dbc4_checkTraitDeclMethod(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _157742_f);
inline void _1acb2de7c_checkTraitDeclMethods(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _159143_t);
inline void _1acb2e235_checkTraitDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _162736_t);
inline jule::Bool _1acb2e4bb_checkTraitDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Bool _1acb2e8b7_checkTraitImplMethods(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaaca65_Trait>* _165142_base, jule::Ptr<_1ac956447_Impl>* _165157_ipl);
inline jule::Bool _1acb2ecb3_implToStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _166234_dest, jule::Ptr<_1ac956447_Impl>* _166254_ipl);
inline void _1acb3006b_implTrait(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _170431_decl);
inline void _1acb30324_implStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _174732_decl);
inline void _1acb305cc_implImpl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _177130_decl);
inline void _1acb30940_checkVarDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _178234_decl, jule::Trait _178250_l);
inline void _1acb30be8_checkGlobalVarDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _182840_decl);
inline jule::Bool _1acb30e7e_checkGlobalDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Bool _1acb3137a_checkStructTraitImpl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _185642_strct, jule::Ptr<_1acaaca65_Trait>* _185663_trt);
inline jule::Bool _1acb316bb_checkStructImpls(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _188238_s);
inline jule::Bool _1acb31a0c_checkStructFields(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _189039_st);
inline void _1acb31cb5_checkStructDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _190737_s);
inline jule::Bool _1acb3204b_checkStructDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb32304_checkAnonFuncDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _193739_f);
inline void _1acb325ac_checkFuncDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _194235_f);
inline jule::Bool _1acb328ed_checkFuncDeclsBy(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _196438_funcs);
inline jule::Bool _1acb32b84_checkFuncDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb330a2_pushCycleError(_1ac9a8c2a_sema* _self_, jule::Str* _198027_st1, jule::Str* _198038_st2, _1a6a5cb3c_Builder* _198053_message);
inline void _1acb33756_checkPackageDecls(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb33ab9_checkDataForTypeInference(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acb8cded_Data>* _204042_d, jule::Ptr<_1abc2ba81_Token>* _204053_errToken);
inline void _1acb33d72_checkVarValue(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _205235_v);
inline void _1acb341d5_evalVarValue(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _210534_decl, jule::Trait _210550_l);
inline void _1acb34548_checkVar(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _212230_decl, jule::Trait _212246_l);
inline void _1acb34746_checkGlobals(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline jule::Ptr<_1acaa540e_FnIns> _1acb34b42_readyToCheckFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _214536_s, jule::Ptr<_1acaa2351_Fn>* _214556_f);
inline __jule_tuple_bool__jule_tuple_bool _1acb3503d_checkGenericFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _216136_f, jule::Ptr<_1abc2ba81_Token>* _216152_et);
inline void _1acb353a1_checkTypeMethod(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _218437_s, jule::Ptr<_1acaa2351_Fn>* _218457_f);
inline jule::Ptr<_1acaa540e_FnIns> _1acb35857_checkStructInsOp(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _219738_s, jule::Ptr<_1acaa2351_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1acaa2351_Fn>> _219766_p);
inline jule::Bool _1acb35c53_checkStructEnv(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _220736_s, jule::Ptr<_1abc2ba81_Token> _220755_errorToken);
inline jule::Bool _1acb3614e_precheckStructIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _230539_s, jule::Ptr<_1abc2ba81_Token> _230558_errorToken);
inline void _1acb36407_checkStructIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _234236_s);
inline void _1acb366b0_checkTypeStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _234837_s);
inline void _1acb368ad_checkStructTypes(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb36b66_checkStructInsOperators(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns> _237244_s);
inline void _1acb36e1e_precheckStructType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _243640_s);
inline void _1acb3711c_precheckStructTypes(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb373c5_checkRets(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _246530_f);
inline void _1acb37738_checkFnInsSc(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _247633_f, jule::Ptr<_1ac9631bd_scopeChecker>* _247649_sc);
inline void _1acb37a9b_checkFnInsCaller(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _248938_f, jule::Ptr<_1abc2ba81_Token> _248953_caller);
inline void _1acb37d54_checkFnIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _251132_f);
inline void _1acb3810c_checkFunc(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _251531_f);
inline void _1acb383b5_checkTestFn(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _253032_f);
inline void _1acb3866d_precheckFunc(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _256334_f);
inline void _1acb3886b_precheckFuncs(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb38a69_checkFuncs(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb38c67_checkPackageTypes(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb38e65_setFileSemaFields(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb39163_setSemaFields(jule::Ptr<_1ac9a8c2a_sema> _self_);
inline void _1acb3941b_check(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _264127_files);
inline _1acb39817_missingRetChecker static__1acb39c13_new(void);
inline jule::Bool _1acb3a021_checkConditional(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95b68e_Conditional> _268932_c);
inline jule::Bool _1acb3a362_checkMatch(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac960286_Match> _270126_m);
inline jule::Bool _1acb3a75d_checkInfIter(_1acb39817_missingRetChecker* _self_, jule::Uintptr _272724_it, jule::Ptr<_1ac95aa56_Scope>* _272742_s);
inline jule::Bool _1acb3aa9e_checkScope(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95aa56_Scope> _274526_s);
inline jule::Bool _1acb3ade0_check(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95aa56_Scope> _280021_s);
inline jule::Bool _1acb3d82c_IsInitialized(_1acb3d420_Var* _self_);
inline jule::Bool _1acb3dab3_IsTypeInferred(_1acb3d420_Var* _self_);
inline jule::Bool _1acb3dd49_untypedConstant(_1acb3d420_Var* _self_);
inline jule::Bool static__1acb3e8d8_Str(jule::Ptr<_1acaa2351_Fn> _1016_f);
inline jule::Bool static__1acb3ec5c_logical(jule::Ptr<_1acaa2351_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__1acb40026_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _5815_f);
inline jule::Bool static__1acb402e0_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _6315_f);
inline jule::Bool static__1acb405a9_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _6817_f);
inline jule::Bool static__1acb40873_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _7315_f);
inline jule::Bool static__1acb40b3c_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _7817_f);
inline jule::Bool static__1acb40eb1_result(jule::Ptr<_1acaa2351_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__1acb4127a_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _10416_f);
inline jule::Bool static__1acb41544_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _10916_f);
inline jule::Bool static__1acb4180d_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _11416_f);
inline jule::Bool static__1acb41ac7_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _11916_f);
inline jule::Bool static__1acb41d91_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _12416_f);
inline jule::Bool static__1acb4215a_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _12916_f);
inline jule::Bool static__1acb42424_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _13416_f);
inline jule::Bool static__1acb426dd_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _13919_f);
inline jule::Bool static__1acb429a7_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _14418_f);
inline jule::Bool static__1acb42c71_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _14919_f);
inline jule::Bool static__1acb430e5_unary(jule::Ptr<_1acaa2351_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__1acb433ae_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _17316_f);
inline jule::Bool static__1acb43678_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _17816_f);
inline jule::Bool static__1acb43942_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _18319_f);
inline jule::Bool static__1acb43cb6_assign(jule::Ptr<_1acaa2351_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__1acb44080_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _20722_f);
inline jule::Bool static__1acb44349_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _21222_f);
inline jule::Bool static__1acb44613_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _21722_f);
inline jule::Bool static__1acb448cc_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _22222_f);
inline jule::Bool static__1acb44b96_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _22722_f);
inline jule::Bool static__1acb44e60_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _23222_f);
inline jule::Bool static__1acb45229_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _23722_f);
inline jule::Bool static__1acb454e3_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _24224_f);
inline jule::Bool static__1acb457ac_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _24725_f);
inline jule::Bool static__1acb45a76_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _25225_f);
inline void _1acb79769_pushErr(_1acb7923b_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1acb79a00_checkTrait(_1acb7923b_typeCompatibilityChecker* _self_);
inline jule::Bool _1acb79c86_checkPtr(_1acb7923b_typeCompatibilityChecker* _self_);
inline jule::Bool _1acb7a01c_checkPrim(_1acb7923b_typeCompatibilityChecker* _self_);
inline jule::Bool _1acb7a418_typeEnum(_1acb7923b_typeCompatibilityChecker* _self_, jule::Ptr<_1acab1926_TypeEnum>* _18725_e, jule::Ptr<_1acbc0d98_Type>* _18744_t2);
inline jule::Bool _1acb7a69e_checkTypeEnum(_1acb7923b_typeCompatibilityChecker* _self_);
inline jule::Bool _1acb7a935_check(_1acb7923b_typeCompatibilityChecker* _self_);
inline void _1acb7b57e_pushErr(_1acb7b0b7_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1acb7b815_checkValidity(_1acb7b0b7_assignTypeChecker* _self_);
inline jule::Bool _1acb7ba9b_checkConst(_1acb7b0b7_assignTypeChecker* _self_);
inline jule::Bool _1acb7bd32_checkCompatibility(_1acb7b0b7_assignTypeChecker* _self_);
inline jule::Bool _1acb7c0b8_check(_1acb7b0b7_assignTypeChecker* _self_);
inline jule::Bool _1be5a9330_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k);
inline jule::Bool _1be5a95c7_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k);
inline jule::Bool _1be5b1a1e_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k);
inline jule::Bool _1be5bbc5a_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k);
inline jule::Bool _1acb7d3b6_annotateConstraintMap(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _36642_k);
inline jule::Bool _1acb7d707_annotateConstraintTup(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _38142_k);
inline jule::Bool _1acb7da48_annotateConstraintFn(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _39841_k);
inline jule::Bool _1acb7dd89_annotateConstraintIdent(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _41944_k);
inline jule::Bool _1acb7e1ca_annotateConstraint(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _44839_k);
inline void _1acb7e53d_pushGeneric(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _47332_k, jule::I32 _47342_i);
inline jule::Bool _1acb7e87e_annotatePrim(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _48840_k);
inline jule::Bool _1acb7ebc0_annotateArr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _49239_k);
inline jule::Bool _1acb80011_annotateSlc(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _50239_k);
inline jule::Bool _1acb8040c_checkMapKey(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _51238_k, jule::Ptr<_1acbc0d98_Type>* _51254_ck);
inline jule::Bool _1acb8074d_annotateMap(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _52039_k);
inline jule::Bool _1acb80a8e_annotateFn(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _53038_k);
inline jule::Bool _1acb80dd0_annotatePtr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _55939_k);
inline jule::Bool _1acb81221_annotateSptr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _56940_k);
inline jule::Bool _1acb81562_annotateStruct(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _57942_k);
inline jule::Bool _1acb818a3_annotateAny(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _60139_k);
inline jule::Bool _1acb81be4_annotateKind(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _62240_k);
inline jule::Bool _1acb81e7a_annotate(_1acb7c98c_dynamicTypeAnnotation* _self_);
inline void _1acb82d8d_pushErrToken(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1abc2ba81_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1acb83201_pushErr(_1acb827e9_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _1acb83487_getParams(_1acb827e9_fnCallArgChecker* _self_);
inline jule::Bool _1acb837c8_checkCounts(_1acb827e9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>* _68428_params);
inline jule::Bool _1acb83c7e_checkArg(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _71629_p, jule::Ptr<_1acb8cded_Data>* _71648_arg, jule::Ptr<_1abc2ba81_Token>* _71665_errorToken);
inline jule::Bool _1acb8417a_push(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _74525_p, jule::Ptr<_1ac9b2a47_Expr> _74543_arg);
inline jule::Bool _1acb84576_pushVariadic(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _76933_p, jule::I32 _76951_i);
inline jule::Bool _1acb848b7_checkArgs(_1acb827e9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>* _85030_params);
inline jule::Bool _1acb84b4d_checkDynamicTypeAnnotation(_1acb827e9_fnCallArgChecker* _self_);
inline jule::Bool _1acb84dd4_check(_1acb827e9_fnCallArgChecker* _self_);
inline void _1acb85cb4_pushErr(_1acb85731_structLitChecker* _self_, jule::Ptr<_1abc2ba81_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1acb86127_pushSuggestion(_1acb85731_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1acb86545_pushMatch(_1acb85731_structLitChecker* _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _93930_f, jule::Ptr<_1acb8cded_Data>* _93949_d, jule::Ptr<_1abc2ba81_Token>* _93964_errorToken);
inline void _1acb868a8_checkPair(_1acb85731_structLitChecker* _self_, jule::Ptr<_1ac9b7266_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _95862_exprs);
inline jule::Bool _1acb86be9_readyExprs(_1acb85731_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _99731_exprs);
inline void _1acb86ea2_check(_1acb85731_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _102126_exprs);
inline jule::Ptr<_1acb3d420_Var> _1acb87a30_buildVar(_1acb87513_rangeChecker* _self_, jule::Ptr<_1ac9c165a_VarDecl>* _109725_decl);
inline void _1acb87c2d_setSizeKey(_1acb87513_rangeChecker* _self_);
inline void _1acb8814b_checkRangeExprValidity(_1acb87513_rangeChecker* _self_, jule::Ptr<_1acb8cded_Data>* _111643_d, jule::Ptr<_1acb3d420_Var>* _111654_key, jule::Ptr<_1acbc0d98_Type>* _111670_k);
inline void _1acb88349_checkSlice(_1acb87513_rangeChecker* _self_);
inline void _1acb88547_checkArray(_1acb87513_rangeChecker* _self_);
inline void _1acb88745_checkMapKeyA(_1acb87513_rangeChecker* _self_);
inline void _1acb88943_checkMapKeyB(_1acb87513_rangeChecker* _self_);
inline void _1acb88b41_checkMap(_1acb87513_rangeChecker* _self_);
inline void _1acb88d3e_checkStr(_1acb87513_rangeChecker* _self_);
inline void _1acb8903c_checkComptime(_1acb87513_rangeChecker* _self_);
inline jule::Bool _1acb892c3_checkComptimeRange(_1acb87513_rangeChecker* _self_);
inline jule::Bool _1acb89559_check(_1acb87513_rangeChecker* _self_);
inline void _1acb8a2b3_prepareTypes(_1acb89d51_retTypeChecker* _self_);
inline void _1acb8a56b_prepareExprs(_1acb89d51_retTypeChecker* _self_, jule::Ptr<_1ac9b2a47_Expr>* _127633_e);
inline void _1acb8a769_checkExprs(_1acb89d51_retTypeChecker* _self_);
inline jule::Bool _1acb8aa00_tryFuncMultiRetForward(_1acb89d51_retTypeChecker* _self_);
inline jule::Bool _1acb8ad41_check(_1acb89d51_retTypeChecker* _self_, jule::Ptr<_1ac9b2a47_Expr>* _137926_e);
inline jule::Bool _1acb8d31b_IsNil(_1acb8cded_Data* _self_);
inline jule::Bool _1acb8d5a2_IsVoid(_1acb8cded_Data* _self_);
inline jule::Bool _1acb8d838_IsConst(_1acb8cded_Data* _self_);
inline jule::Bool _1acb8db79_GoodOperand(_1acb8cded_Data* _self_, jule::Ptr<_1acb8cded_Data>* _6228_other);
inline void _1acb90395_pushErr(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _1acb90708_pushSuggestion(_1acb8edbc_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _1acb90906_allowBuiltin(_1acb8edbc_eval* _self_);
inline void _1acb90b04_disallowBuiltin(_1acb8edbc_eval* _self_);
inline jule::Bool _1acb90d8a_isUnsafe(_1acb8edbc_eval* _self_);
inline jule::Bool _1acb91121_isGlobal(_1acb8edbc_eval* _self_);
inline jule::Bool _1acb91462_applyNumericPrefix(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _12939_d);
inline jule::Ptr<_1acb8cded_Data> _1acb917a3_litStr(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _16419_l);
inline jule::Ptr<_1acb8cded_Data> _1acb91ae4_litRune(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _18120_l);
inline jule::Ptr<_1acb8cded_Data> _1acb91e35_litFloat(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _20021_l);
inline jule::Ptr<_1acb8cded_Data> _1acb92276_litInt(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _21223_l);
inline jule::Ptr<_1acb8cded_Data> _1acb925b7_litNum(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _26723_l);
inline jule::Ptr<_1acb8cded_Data> _1acb92908_evalLit(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr> _27623_lit);
inline jule::Any _1acb92c49_findBuiltins(_1acb8edbc_eval* _self_, jule::Str* _28929_ident);
inline jule::Any _1acb93145_getDef(_1acb8edbc_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded);
inline jule::Ptr<_1ac979855_ReferenceStack> _1acb933cb_getOwnerRefers(_1acb8edbc_eval* _self_);
inline void _1becd3075_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _37437_ref);
inline void _1becee8cc_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _37437_ref);
inline void _1be23bce8_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _37437_ref);
inline jule::Ptr<_1acb8cded_Data> _1acb939c5__evalEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _38125_enm);
inline jule::Ptr<_1acb8cded_Data> _1acb93dc1_evalEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _39028_enm, jule::Ptr<_1abc2ba81_Token> _39040_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acb94212__evalTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _39929_enm);
inline jule::Ptr<_1acb8cded_Data> _1acb9460d_evalTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _40832_enm, jule::Ptr<_1abc2ba81_Token> _40848_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acb9494e__evalStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns> _41727_s);
inline jule::Ptr<_1acb8cded_Data> _1acb94d4a_evalStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9ce129_Struct> _43130_s, jule::Ptr<_1abc2ba81_Token> _43146_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acb9518b_evalFnIns(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns> _46025_f);
inline void _1acb954ee_checkDeprecated(_1acb8edbc_eval* _self_, jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _46936_directives, jule::Ptr<_1abc2ba81_Token> _46967_tok);
inline jule::Ptr<_1acb8cded_Data> _1acb958ea_evalFn(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa2351_Fn> _48526_f, jule::Ptr<_1abc2ba81_Token> _48534_errorToken);
inline void _1acb95d18_pushIllegalCycleError(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _51038_v1, jule::Ptr<_1acb3d420_Var>* _51049_v2, _1a6a5cb3c_Builder* _51064_message);
inline jule::Bool _1acb96214_checkCrossCycle(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _52032_v, _1a6a5cb3c_Builder* _52046_message);
inline jule::Bool _1acb96610_checkIllegalCycles(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _53739_v, jule::Ptr<_1abc2ba81_Token> _53748_declToken);
inline jule::Ptr<_1acb8cded_Data> _1acb96a0b_evalVar(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var> _56527_v, jule::Ptr<_1abc2ba81_Token> _56536_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acb96e07_evalTypeAlias(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc00a6_TypeAlias> _66533_ta, jule::Ptr<_1abc2ba81_Token> _66549_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acb97303_evalDef(_1acb8edbc_eval* _self_, jule::Any* _70428_def, jule::Ptr<_1abc2ba81_Token> _70442_ident);
inline jule::Ptr<_1acb8cded_Data> _1acb97644_evalIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b4362_IdentExpr> _72829_ident);
inline jule::Ptr<_1acb8cded_Data> _1acb97985_evalUnary(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b4b04_UnaryExpr> _73330_u);
inline jule::Ptr<_1acb8cded_Data> _1acb97cc6_evalVariadic(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b4ecd_VariadicExpr> _73833_v);
inline jule::Ptr<_1acb8cded_Data> _1acb98117_evalUnsafe(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b3dab_UnsafeExpr> _76031_u);
inline jule::Ptr<_1acb8cded_Data> _1acb98458_evalArr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _76828_s);
inline jule::Ptr<_1acb8cded_Data> _1acb9890e_evalExpSlc(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _84531_s, jule::Ptr<_1acbc0d98_Type> _84555_t, jule::Any _84569_first);
inline jule::Ptr<_1acb8cded_Data> _1acb98c50_evalSliceExpr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _88334_s);
inline jule::Bool _1acb9914b_checkIntegerIndexingByData(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _91947_d, jule::Ptr<_1abc2ba81_Token> _91961_token);
inline void _1acb99569_indexingPtr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _93232_d, jule::Ptr<_1acb8cded_Data>* _93247_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _93266_i);
inline void _1acb99987_indexingArr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _94832_d, jule::Ptr<_1acb8cded_Data>* _94847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _94866_i);
inline void _1acb99da5_indexingSlc(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _95832_d, jule::Ptr<_1acb8cded_Data>* _95847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _95866_i);
inline void _1acb9a2c3_indexingMap(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _98132_d, jule::Ptr<_1acb8cded_Data>* _98147_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _98166_i);
inline void _1acb9a6e1_indexingStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _99832_d, jule::Ptr<_1acb8cded_Data>* _99847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _99866_i);
inline void _1acb9ab0e_comptimeRange(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _102634_d, jule::Ptr<_1acb8cded_Data>* _102649_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _102668_i);
inline void _1acb9b02c_toIndexing(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _105131_d, jule::Ptr<_1acb8cded_Data>* _105146_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _105165_i);
inline jule::Bool _1acb9b4d3_pushGenericsFromExprSubIdent(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _107950_sexpr, jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _10808_generics, jule::Ptr<_1ac9b2a47_Expr>* _108041_expr);
inline jule::Bool _1acb9b8ce_pushGenericsFromData(jule::Ptr<_1acb8edbc_eval> _self_, jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _109042_generics, jule::Ptr<_1ac9b2a47_Expr>* _109075_expr);
inline void _1acb9bc42_evalIdentDeclFromIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acb8cded_Data>* _116047_d, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _116062_i);
inline __jule_tuple_bool__jule_tuple_bool _1acb9c1e8_checkGenericFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acaa540e_FnIns>* _120336_f, jule::Ptr<_1abc2ba81_Token>* _120352_et, jule::Any* _120376_model);
inline void _1acb9c55b_evalFnGenericFromIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acb8cded_Data>* _121947_d, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _121962_i);
inline jule::Ptr<_1acb8cded_Data> _1acb9c89c_evalIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b9a0a_IndexingExpr> _125933_i);
inline __jule_tuple_x_1acb8cded_Data__jule_tuple_x_1acb8cded_Data _1acb9cbdd_evalSlicingExprs(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9ba16a_SlicingExpr>* _131938_s);
inline void _1acb9ce96_slicingArr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _135527_d);
inline void _1acb9d3b4_slicingStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _137027_d, jule::Ptr<_1acb8cded_Data>* _137038_l, jule::Ptr<_1acb8cded_Data>* _137049_r);
inline void _1acb9d88c_checkSlicing(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _140833_d, jule::Ptr<_1acb8cded_Data>* _140844_l, jule::Ptr<_1acb8cded_Data>* _140855_r, jule::Ptr<_1ac9ba16a_SlicingExpr>* _140866_s);
inline jule::Ptr<_1acb8cded_Data> _1acb9dbcd_evalSlicing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9ba16a_SlicingExpr> _142732_s);
inline void _1acb9e0eb_castPtr(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _146427_t, jule::Ptr<_1acb8cded_Data> _146441_d, jule::Ptr<_1abc2ba81_Token> _146451_errorToken);
inline void _1acb9e519_castStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _148630_t, jule::Ptr<_1acb8cded_Data> _148644_d, jule::Ptr<_1abc2ba81_Token> _148654_errorToken);
inline void _1acb9e937_castRef(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _150327_t, jule::Ptr<_1acb8cded_Data> _150341_d, jule::Ptr<_1abc2ba81_Token> _150351_errorToken);
inline void _1acb9ed55_castSlc(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _152627_t, jule::Ptr<_1acb8cded_Data> _152641_d, jule::Ptr<_1abc2ba81_Token> _152651_errorToken);
inline void _1acba01b8_castStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _158127_d, jule::Ptr<_1abc2ba81_Token> _158137_errorToken);
inline void _1acba05d6_castInt(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _162827_t, jule::Ptr<_1acb8cded_Data> _162841_d, jule::Ptr<_1abc2ba81_Token> _162851_errorToken);
inline void _1acba0a04_castNum(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _167427_t, jule::Ptr<_1acb8cded_Data> _167441_d, jule::Ptr<_1abc2ba81_Token> _167451_errorToken);
inline void _1acba0e22_castPrim(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _170528_t, jule::Ptr<_1acb8cded_Data> _170542_d, jule::Ptr<_1abc2ba81_Token> _170552_errorToken);
inline void _1acba1285_castConstant(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _172133_t, jule::Ptr<_1acb8cded_Data>* _172148_d);
inline void _1acba16a3_castTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _173033_t, jule::Ptr<_1acb8cded_Data>* _173048_d, jule::Ptr<_1abc2ba81_Token>* _173063_errorToken);
inline void _1acba1ac1_castTypeEnumT(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _174034_t, jule::Ptr<_1acb8cded_Data>* _174049_d, jule::Ptr<_1abc2ba81_Token>* _174064_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acba2077_evalCastByTypeNData(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _175039_t, jule::Ptr<_1acb8cded_Data> _175053_d, jule::Ptr<_1abc2ba81_Token> _175067_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acba252d_evalCastT(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acbc0d98_Type>* _183531_t, jule::Ptr<_1ac9b2a47_Expr>* _183546_e, jule::Ptr<_1abc2ba81_Token>* _183566_et);
inline jule::Ptr<_1acb8cded_Data> _1acba286e_evalCast(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b53a7_CastExpr> _185229_c);
inline jule::Ptr<_1acb8cded_Data> _1acba2bb0_evalNamespace(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b5781_NamespaceExpr> _186133_s);
inline jule::Ptr<_1acb8cded_Data> _1acba3166_evalStructLitExplicit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9d1e84_StructIns> _188042_s, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _18817_exprs, jule::Ptr<_1abc2ba81_Token> _188132_errorToken);
inline jule::Ptr<_1acb8cded_Data> _1acba34a7_evalStructLit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b7a91_StructLit> _191834_lit);
inline _1acbd3295_typeChecker _1acba373d_typeChecker(_1acb8edbc_eval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acba3a7e_evalType(_1acb8edbc_eval* _self_, jule::Ptr<_1abc4259c_TypeDecl> _195028_t);
inline void _1acba3de2_callTypeFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _196332_fc, jule::Ptr<_1acb8cded_Data>* _196359_d);
inline void _1acba4255_callBuiltinFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _198935_fc, jule::Ptr<_1acb8cded_Data>* _198962_d);
inline void _1acba45b8_checkFnOfConcurrentCall(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _200140_f, jule::Ptr<_1abc2ba81_Token> _200151_errorToken);
inline void _1acba49d6_processExceptionalHandler(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _202046_f, jule::Ptr<_1ac9b6771_FnCallExpr>* _202062_fc, jule::Ptr<_1acb8cded_Data>* _202089_d);
inline void _1acba4d49_callFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _204728_fc, jule::Ptr<_1acb8cded_Data>* _204755_d);
inline jule::Ptr<_1acb8cded_Data> _1acba518a_evalFnCall(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr> _219631_fc);
inline jule::Ptr<_1acb8cded_Data> _1acba5586_evalEnumStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _222934_enm, jule::Ptr<_1abc2ba81_Token> _222950_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba5982_evalTypeEnumStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _223738_enm, jule::Ptr<_1abc2ba81_Token> _223754_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba5d7d_evalStructStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns> _226036_s, jule::Ptr<_1abc2ba81_Token> _226051_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba6334_evalTraitSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _229537_d, jule::Ptr<_1acaaca65_Trait> _229551_trt, jule::Ptr<_1abc2ba81_Token> _229568_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba6895_evalStructSubIdentField(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _231744_d, jule::Ptr<_1ac9d1e84_StructIns>* _231759_s, jule::Ptr<_1abc2ba81_Token>* _231779_tok, jule::Ptr<_1ac9d13d4_FieldIns>* _2317104_f);
inline jule::Ptr<_1acb8cded_Data> _1acba6eb1_evalStructSubIdentMethod(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _234245_d, jule::Ptr<_1ac9d1e84_StructIns>* _234260_s, jule::Ptr<_1abc2ba81_Token>* _234280_tok, jule::Ptr<_1acaa2351_Fn>* _2342105_m, jule::Bool _2342113_ref);
inline jule::Ptr<_1acb8cded_Data> _1acba7522_evalStructSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _236338_d, jule::Ptr<_1ac9d1e84_StructIns> _236352_s, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _236371_si, jule::Bool _236395_ref);
inline jule::Ptr<_1acb8cded_Data> _1acba7863_evalIntTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _238733_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba7ba4_evalUintTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _241434_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba7ee5_evalI8TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _243232_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba8336_evalI16TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _246133_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba8677_evalI32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _249033_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba89b8_evalI64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _251933_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba8d09_evalU8TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _254832_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba914a_evalU16TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _256733_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba948b_evalU32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _258633_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba97cc_evalU64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _260533_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba9b1d_evalF32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _262433_ident);
inline jule::Ptr<_1acb8cded_Data> _1acba9e5e_evalF64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _266333_ident);
inline jule::Ptr<_1acb8cded_Data> _1acbaa35a_evalPrimStatic(_1acb8edbc_eval* _self_, jule::Str _270230_kind, jule::Ptr<_1abc2ba81_Token> _270241_ident);
inline jule::Ptr<_1acb8cded_Data> _1acbaa756_evalTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _273434_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _273448_si);
inline jule::Ptr<_1acb8cded_Data> _1c0163dea_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac93cebc_comptimeTypeInfo>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c01686d5_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac92db28_comptimeStructField>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c016ce59_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac93506e_comptimeEnumField>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c0172722_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac937d85_comptimeParam>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c01770d9_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac931d4b_comptimeStatic>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c017b85d_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9440c2_comptimeValue>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c01810d2_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac94879c_comptimeFile>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline jule::Ptr<_1acb8cded_Data> _1c01858de_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac94c6b3_comptimeDecl>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si);
inline __jule_tuple_x_1acb8cded_Data__jule_tuple_bool _1acbab108_tryComptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _275843_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _275857_si);
inline jule::Ptr<_1acb8cded_Data> _1acbab504_evalObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _278935_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _278949_si);
inline jule::Ptr<_1acb8cded_Data> _1acbab845_evalSubIdent(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _283133_si);
inline jule::Ptr<_1acb8cded_Data> _1acbabb86_evalTuple(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b363b_TupleExpr> _284530_tup);
inline jule::Ptr<_1acb8cded_Data> _1acbac082_evalMap(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acbceb54_Map> _287428_m, jule::Ptr<_1ac9b8047_BraceLit> _287441_lit);
inline jule::Ptr<_1acb8cded_Data> _1acbac3c3_evalBraceLit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b8047_BraceLit> _292233_lit);
inline jule::Ptr<_1acb8cded_Data> _1acbac714_evalAnonFunc(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9c04a0_FnDecl> _293733_decl);
inline jule::Ptr<_1acb8cded_Data> _1acbaca55_evalBinary(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6111_BinaryExpr> _297531_op);
inline jule::Ptr<_1acb8cded_Data> _1acbacd96_evalExprKind(jule::Ptr<_1acb8edbc_eval> _self_, jule::Any _299033_kind);
inline jule::Ptr<_1acb8cded_Data> _1acbad1d7_eval1(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _303826_expr);
inline jule::Ptr<_1acb8cded_Data> _1acbad528_eval(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _308325_expr);
inline jule::Ptr<_1acb8cded_Data> _1acbad869_evalExpr1(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _309830_expr);
inline jule::Ptr<_1acb8cded_Data> _1acbadbaa_evalExpr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _311429_expr);
inline _1acbae13e_unaryEval static__1acbae5b2_new(jule::Ptr<_1acb8edbc_eval> _313520_e);
inline void _1acbae7b0_minus(_1acbae13e_unaryEval* _self_);
inline void _1acbae9ad_plus(_1acbae13e_unaryEval* _self_);
inline void _1acbaebab_caret(_1acbae13e_unaryEval* _self_);
inline void _1acbaeda9_excl(_1acbae13e_unaryEval* _self_);
inline void _1acbb00a7_star(_1acbae13e_unaryEval* _self_);
inline void _1acbb02a5_amper(_1acbae13e_unaryEval* _self_);
inline void _1acbb04a3_typeDecl(_1acbae13e_unaryEval* _self_);
inline void _1acbb06a1_evalData(_1acbae13e_unaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb09e2_eval(_1acbae13e_unaryEval* _self_, jule::Ptr<_1ac9b4b04_UnaryExpr> _342224_u);
inline _1acbb10ca_binaryEval static__1acbb16b3_newPlain(jule::Ptr<_1acb8edbc_eval> _347025_e);
inline _1acbb10ca_binaryEval static__1acbb1a37_new(jule::Ptr<_1acb8edbc_eval> _347620_e, jule::Ptr<_1abc2ba81_Token> _347634_op);
inline jule::Bool _1acbb1cbd_checkTypeCompatibility(_1acbb10ca_binaryEval* _self_);
inline jule::Bool _1acbb2054_checkStructCommonOperatorCompatibility(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb22da_evalComptimeTypeInfo(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb2571_evalNil(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb2807_evalEnum(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb2a8d_evalTypeEnum(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb2d24_evalSptr(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb30aa_evalPtr(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb3341_evalArr(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb35c7_evalStruct(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb385d_evalTrait(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb3ae4_evalAny(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb3d7a_evalBool(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb4111_evalStr(_1acbb10ca_binaryEval* _self_);
inline void _1acbb430e_setTypeToGreater(_1acbb10ca_binaryEval* _self_);
inline void _1acbb45b7_checkModData(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _387533_d);
inline void _1acbb47b5_mod(_1acbb10ca_binaryEval* _self_);
inline jule::Bool _1acbb4bb1_numbersAreCompatibile(_1acbb10ca_binaryEval* _self_, jule::Str* _389734_lk, jule::Str* _389744_rk);
inline jule::Ptr<_1acb8cded_Data> _1acbb4e47_shift(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb51cd_evalFloat(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb5464_evalInt(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb56ea_evalPrim(_1acbb10ca_binaryEval* _self_);
inline jule::Bool _1acbb5981_checkSpecialCases(_1acbb10ca_binaryEval* _self_);
inline jule::Ptr<_1acb8cded_Data> _1acbb5c17_evalOp(_1acbb10ca_binaryEval* _self_);
inline void _1acbb5ec0_evalConst(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _418730_d);
inline void _1acbb6278_checkData(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _426530_d);
inline void _1acbb6476_checkDatas(_1acbb10ca_binaryEval* _self_);
inline void _1acbb672e_setModel(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _427729_d);
inline void _1acbb69d7_postEval(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _430629_d);
inline jule::Ptr<_1acb8cded_Data> _1acbb6dd3_solveExplicit(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _431134_l, jule::Ptr<_1acb8cded_Data>* _431149_r);
inline jule::Ptr<_1acb8cded_Data> _1acbb7224_eval(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1ac9b6111_BinaryExpr>* _433125_op);
inline jule::Str _1acbc1294_Str(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc15d5_Equal(jule::Ptr<_1acbc0d98_Type> _self_, jule::Ptr<_1acbc0d98_Type> _7218_other);
inline jule::Bool _1acbc1c45_Binded(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc1ecb_IsNil(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc2262_Void(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc24e8_Comparable(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc277e_Mutable(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc2a15_Ordered(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc2c9b_NilCompatible(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc3032_GC(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc32b8_Variadicable(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbc8eb1_Prim> _1acbc354e_Prim(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbcc9dc_Sptr> _1acbc37d5_Sptr(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbd12a4_Ptr> _1acbc3a6b_Ptr(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acab021b_Enum> _1acbc3d02_Enum(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acab1926_TypeEnum> _1acbc4088_TypeEnum(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbd07d1_Arr> _1acbc431e_Arr(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbcd4b0_Slc> _1acbc45a5_Slc(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acaa540e_FnIns> _1acbc483b_Fn(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac9d1e84_StructIns> _1acbc4ac2_Struct(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acaaca65_Trait> _1acbc4d58_Trait(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbceb54_Map> _1acbc50de_Map(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1acbce0a4_Tuple> _1acbc5375_Tup(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc560b_comptime(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac9303bb_comptimeStructFields> _1acbc5892_comptimeStructFields(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac92db28_comptimeStructField> _1acbc5b28_comptimeStructField(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac93637d_comptimeEnumFields> _1acbc5dae_comptimeEnumFields(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac93506e_comptimeEnumField> _1acbc6145_comptimeEnumField(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac939bde_comptimeParams> _1acbc63cb_comptimeParams(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac937d85_comptimeParam> _1acbc6662_comptimeParam(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac92d0bc_comptimeRange> _1acbc68e8_comptimeRange(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac93b54d_comptimeTypeInfos> _1acbc6b7e_comptimeTypeInfos(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac93cebc_comptimeTypeInfo> _1acbc6e15_comptimeTypeInfo(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac933600_comptimeStatics> _1acbc719b_comptimeStatics(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac931d4b_comptimeStatic> _1acbc7432_comptimeStatic(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac9440c2_comptimeValue> _1acbc76b8_comptimeValue(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac94c6b3_comptimeDecl> _1acbc794e_comptimeDecl(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac94a3c5_comptimeDecls> _1acbc7bd5_comptimeDecls(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac94879c_comptimeFile> _1acbc7e6b_comptimeFile(_1acbc0d98_Type* _self_);
inline jule::Ptr<_1ac946d2d_comptimeFiles> _1acbc8202_comptimeFiles(_1acbc0d98_Type* _self_);
inline jule::Bool _1acbc8961_checked(_1acbc85a9_TypeSym* _self_);
inline jule::Str _1acbc9335_Str(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbc9676_Equal(jule::Ptr<_1acbc8eb1_Prim> _self_, jule::Ptr<_1acbc0d98_Type> _51418_other);
inline jule::Bool _1acbc9b1b_IsConstraint(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbc9da2_IsI8(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbca138_IsI16(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbca3be_IsI32(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbca655_IsI64(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbca8db_IsU8(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcab72_IsU16(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcae08_IsU32(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcb18e_IsU64(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcb425_IsF32(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcb6ab_IsF64(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcb942_IsInt(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcbbc8_IsUint(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcbe5e_IsUintptr(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcc1e5_IsBool(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcc47b_IsStr(_1acbc8eb1_Prim* _self_);
inline jule::Bool _1acbcc712_IsAny(_1acbc8eb1_Prim* _self_);
inline jule::Str _1acbccd94_Str(_1acbcc9dc_Sptr* _self_);
inline jule::Bool _1acbcd1d5_Equal(jule::Ptr<_1acbcc9dc_Sptr> _self_, jule::Ptr<_1acbc0d98_Type> _59118_other);
inline jule::Str _1acbcd977_Str(_1acbcd4b0_Slc* _self_);
inline jule::Bool _1acbcdcb8_Equal(jule::Ptr<_1acbcd4b0_Slc> _self_, jule::Ptr<_1acbc0d98_Type> _61018_other);
inline jule::Str _1acbce45b_Str(_1acbce0a4_Tuple* _self_);
inline jule::Bool _1acbce79c_Equal(jule::Ptr<_1acbce0a4_Tuple> _self_, jule::Ptr<_1acbc0d98_Type> _63918_other);
inline jule::Str _1acbd000b_Str(_1acbceb54_Map* _self_);
inline jule::Bool _1acbd034c_Equal(jule::Ptr<_1acbceb54_Map> _self_, jule::Ptr<_1acbc0d98_Type> _67618_other);
inline jule::Str _1acbd0b88_Str(_1acbd07d1_Arr* _self_);
inline jule::Bool _1acbd0ec9_Equal(jule::Ptr<_1acbd07d1_Arr> _self_, jule::Ptr<_1acbc0d98_Type> _70418_other);
inline jule::Str _1acbd165b_Str(_1acbd12a4_Ptr* _self_);
inline jule::Bool _1acbd199c_Equal(jule::Ptr<_1acbd12a4_Ptr> _self_, jule::Ptr<_1acbc0d98_Type> _72818_other);
inline jule::Bool _1acbd1d21_IsUnsafe(_1acbd12a4_Ptr* _self_);
inline void _1acbd3a26_pushErr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc2ba81_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1acbd3c24_allowBuiltin(_1acbd3295_typeChecker* _self_);
inline void _1acbd3e22_disallowBuiltin(_1acbd3295_typeChecker* _self_);
inline void _1be9807d3_pushReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _83237_t);
inline void _1be9832a8_pushReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acaaca65_Trait>* _83237_t);
inline void _1acbd4483_pushReferenceByKind(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _84240_k);
inline void _1acbd48a1_pushCycleError(_1acbd3295_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a6a5cb3c_Builder* _85353_message);
inline jule::Bool _1acbd4c9c_checkCrossCycle(_1acbd3295_typeChecker* _self_, jule::Any _87527_decl, _1a6a5cb3c_Builder* _87543_message);
inline jule::Bool _1acbd5198_checkIllegalCycles(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1acbd5594_fromTypeAlias(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _95930_decl, jule::Ptr<_1acbc00a6_TypeAlias>* _95962_ta);
inline jule::Ptr<_1acab021b_Enum> _1acbd5990_fromEnum(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _103625_decl, jule::Ptr<_1acab021b_Enum>* _103657_e);
inline jule::Ptr<_1acab1926_TypeEnum> _1acbd5d8b_fromTypeEnum(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _104829_decl, jule::Ptr<_1acab1926_TypeEnum>* _104861_e);
inline jule::Ptr<_1acaaca65_Trait> _1acbd6287_fromTrait(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _106026_decl, jule::Ptr<_1acaaca65_Trait>* _106058_t);
inline jule::Bool _1acbd6683_checkStructIns(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _107335_ins, jule::Ptr<_1abc2ba81_Token>* _107357_errorToken);
inline void _1acbd693b_appendUsedStructReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9ce129_Struct>* _109446_s);
inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd6d37_buildStructInstance(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _110740_decl, jule::Ptr<_1ac9ce129_Struct>* _110772_s);
inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd7233_fromStructIns(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115534_ins, jule::Ptr<_1abc2ba81_Token> _115555_token);
inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd762e_fromStruct(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _117331_decl, jule::Ptr<_1ac9ce129_Struct>* _117363_s);
inline jule::Trait _1acbd7970_getDef(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1acbd7cb1_buildIdent(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl> _127830_decl);
inline jule::Trait _1acbd8102_buildSubIdent(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42e71_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1acbcc9dc_Sptr> _1acbd8443_buildSptrFromType(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _131638_elem);
inline jule::Ptr<_1acbcc9dc_Sptr> _1acbd8784_buildSptr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc43647_SptrTypeDecl> _133629_decl);
inline jule::Ptr<_1acbd12a4_Ptr> _1acbd8ac5_buildPtrFromType(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _134537_elem);
inline jule::Ptr<_1acbd12a4_Ptr> _1acbd8e16_buildPtr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc440c6_PtrTypeDecl> _136028_decl);
inline jule::Ptr<_1acbcd4b0_Slc> _1acbd9257_buildSlc(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc439cc_SlcTypeDecl> _137728_decl);
inline jule::Ptr<_1acbd07d1_Arr> _1acbd9598_buildArr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc44868_ArrTypeDecl> _139828_decl);
inline jule::Ptr<_1acbceb54_Map> _1acbd98d9_buildMap(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc450b6_MapTypeDecl> _144728_decl);
inline jule::Ptr<_1acbce0a4_Tuple> _1acbd9c2a_buildTuple(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc43cc9_TupleTypeDecl> _147930_decl);
inline jule::Bool _1acbda06b_checkFuncTypes(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acaa540e_FnIns>* _149235_f);
inline jule::Ptr<_1acaa540e_FnIns> _1acbda3ac_buildFunc(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9c04a0_FnDecl> _151029_decl);
inline jule::Trait _1acbda6ed_buildNamespace(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc4334a_NamespaceTypeDecl> _154034_ns);
inline jule::Ptr<_1acbc0d98_Type> _1acbdaa3e_build(_1acbd3295_typeChecker* _self_, jule::Any* _155626_declKind);
inline jule::Ptr<_1acbc0d98_Type> _1acbdad80_checkDecl(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc4259c_TypeDecl>* _164430_decl);
inline jule::Bool static__1acbdb7cb_prim(jule::Str* _167118_ident, jule::Ptr<_1acbc8eb1_Prim> _167130_t);
inline jule::Bool static__1acbdbb50_exist(jule::Str* _167519_ident, jule::Ptr<_1acbc0d98_Type>* _167536_k);
inline void _1ad5d2842_stop(_1ad5d218d_scopeParser* _self_);
inline jule::Bool _1ad5d2ac8_stopped(_1ad5d218d_scopeParser* _self_);
inline jule::Bool _1ad5d2d5e_finished(_1ad5d218d_scopeParser* _self_);
inline jule::Bool _1ad5d30e5_isLastSt(_1ad5d218d_scopeParser* _self_);
inline void _1ad5d3458_pushErr(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1abc2ba81_Token> _15423_token, jule::Str _15445_fmt);
inline void _1ad5d37bb_pushSuggestion(_1ad5d218d_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1ad5d3a74_insertAsNext(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _16333_tokens);
inline jule::Ptr<_1ad5d17ec_stmt> _1ad5d3d0a_next(_1ad5d218d_scopeParser* _self_);
inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5d4206_buildScope(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _17331_tokens, jule::Ptr<_1abc2ba81_Token> _17360_end);
inline jule::Ptr<_1ac9c165a_VarDecl> _1ad5d4547_buildVarSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _18431_tokens);
inline jule::Ptr<_1ac9c1a34_RetSt> _1ad5d4888_buildRetSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _19230_tokens);
inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d4bc9_buildWhileNextIter(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _20339_s);
inline jule::Ptr<_1ac9c2ace_WhileKind> _1ad5d501a_buildWhileIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5d535b_getRangeKindKeysTokens(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _25443_toks);
inline jule::Ptr<_1ac9c165a_VarDecl> _1ad5d569c_buildRangeKindKey(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _1ad5d59dd_buildRangeKindKeys(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _28639_parts);
inline void _1ad5d5d51_setupRangeKindKeysPlain(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _29471_tokens);
inline void _1ad5d61b4_setupRangeKindKeysExplicit(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _30974_tokens);
inline void _1ad5d6527_setupRangeKindKeys(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _31866_tokens);
inline jule::Ptr<_1ac9c34d6_RangeKind> _1ad5d69cd_buildRangeIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3278_exprTokens, jule::Ptr<_1abc2ba81_Token>* _32742_inToken);
inline jule::Any _1ad5d6dc9_buildCommonIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _34240_tokens, jule::Ptr<_1abc2ba81_Token>* _34266_errTok);
inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d721a_buildCommonIter(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _36935_tokens);
inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d755b_buildIterSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _39932_st);
inline jule::Ptr<_1ac9c38b0_BreakSt> _1ad5d789c_buildBreakSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _40633_tokens);
inline jule::Ptr<_1ac9c3c89_ContSt> _1ad5d7bdd_buildContSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _42432_tokens);
inline jule::Ptr<_1ac9c4240_If> _1ad5d802e_buildIf(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _44228_tokens);
inline jule::Ptr<_1ac9c4619_Else> _1ad5d8370_buildElse(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _47530_tokens);
inline jule::Ptr<_1ac9c4ac0_Conditional> _1ad5d86b1_buildIfElseChain(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _49936_tokens);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad5d8a02_buildCoCallSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _52233_tokens);
inline jule::Ptr<_1ac9bb1c1_GotoSt> _1ad5d8d43_buildGotoSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _53832_tokens);
inline jule::Ptr<_1ac9bb4bd_FallSt> _1ad5d9184_buildFallSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _55832_tokens);
inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad5d94c5_buildTypeAliasSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _56837_tokens);
inline void _1ad5d999d_pushCaseExpr(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _57432_tokens, jule::Ptr<_1abc2ba81_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1ac9b2a47_Expr__jule_tuple_bool _1ad5d9e54_buildCaseExprs(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _59735_tokens, jule::Ptr<_1abc2ba81_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5da295_buildCaseScope(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _63935_tokens);
inline __jule_tuple_x_1ac9c57b3_Case__jule_tuple_bool _1ad5da691_buildCase(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1ac9c57b3_Case__jule_tuple_x_1ac9c4619_Else _1ad5daa8c_buildCases(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1ac9c60cc_MatchCase> _1ad5dadcd_buildMatchCase(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _71934_tokens);
inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5db21e_buildScopeSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _75232_tokens);
inline jule::Ptr<_1ac9bace7_LabelSt> _1ad5db560_buildLabelSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _79533_tokens);
inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5db8a1_buildIdSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _81030_tokens);
inline jule::Ptr<_1ad5ec1a8_assignInfo> _1ad5dbbe2_buildAssignInfo(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _82436_tokens);
inline jule::Ptr<_1ac9bbb2d_AssignLeft> _1ad5dc033_buildAssignL(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> _1ad5dc374_buildAssignLs(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _88034_parts);
inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5dc6b5_buildPlainAssign(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _88937_tokens);
inline jule::Bool _1ad5dcab1_buildDeclAssign1(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _94337_lefts, jule::Ptr<_1ac9bc1b1_AssignSt>* _94366_assign);
inline __jule_tuple_x_1ac9bc1b1_AssignSt__jule_tuple_bool _1ad5dce02_buildDeclAssign(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _99135_tokens);
inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5dd243_buildAssignSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _102534_tokens);
inline jule::Ptr<_1ac9b341b_UseExpr> _1ad5dd584_buildUseExpr(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _103833_tokens);
inline jule::Any _1ad5dd8c5_buildConstSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _105133_st);
inline jule::Any _1ad5ddc16_buildSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _107628_st);
inline void _1ad5de079_build(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _114026_tokens, jule::Ptr<_1ac9bd811_ScopeTree>* _114056_s);
inline void _1ad5e02bc_pushErr(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1ad5e0630_pushSuggestion(_1ad5deab3_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1ac9b363b_TupleExpr> _1ad5e0971_buildTuple(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _2331_parts);
inline jule::Ptr<_1ac9b39d2_LitExpr> _1ad5e0cb2_buildLit(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _3324_token);
inline jule::Any _1ad5e1444_buildSingle(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _4431_token);
inline jule::Ptr<_1ac9b4362_IdentExpr> _1ad5e1785_buildBindIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6135_tokens);
inline jule::Ptr<_1ac9b4b04_UnaryExpr> _1ad5e1ac6_buildUnary(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8030_tokens);
inline jule::Ptr<_1ac9b5b5a_SubIdentExpr> _1ad5e1e17_buildObjSubIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10136_tokens);
inline jule::Ptr<_1ac9b5781_NamespaceExpr> _1ad5e2258_buildNamespace(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _11635_tokens);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad5e2599_buildType(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _15030_tokens);
inline jule::Any _1ad5e28da_buildSubIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _16434_tokens);
inline jule::Ptr<_1ac9b4ecd_VariadicExpr> _1ad5e2c2b_buildVariadic(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _18633_tokens);
inline jule::Ptr<_1ac9b2d11_RangeExpr> _1ad5e306c_buildBetweenParentheses(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _19543_tokens);
inline jule::Ptr<_1ac9b53a7_CastExpr> _1ad5e33ad_tryBuildCast(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _20733_tokens);
inline void _1ad5e37cb_pushArg(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _28152_tokens, jule::Ptr<_1abc2ba81_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _1ad5e3b1c_buildArgs(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _29029_tokens);
inline jule::Ptr<_1ac9b6771_FnCallExpr> _1ad5e4414_buildFnCall(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token>* _35632_token, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _35687_args);
inline jule::Any _1ad5e4755_buildParenthesesRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _36442_tokens);
inline jule::Ptr<_1ac9b3dab_UnsafeExpr> _1ad5e4a96_buildUnsafeExpr(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _38635_tokens);
inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad5e4dd7_buildAnonFn(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _40132_tokens);
inline jule::Any _1ad5e5228_buildUnsafe(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _41032_tokens);
inline void _1ad5e5646_pushRangeLitPart(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _42036_part, jule::Ptr<_1abc2ba81_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5e5987_getBraceRangeLitExprParts(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _43145_tokens);
inline jule::Ptr<_1ac9b7266_FieldExprPair> _1ad5e5cc8_buildFieldExprPair(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _47338_tokens);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e6119_buildStructLitExpr(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _1ad5e645a_buildStructLitExprs(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _50140_tokens);
inline jule::Ptr<_1ac9b7a91_StructLit> _1ad5e679b_buildTypedStructLiteral(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _51443_tokens);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e6adc_buildBraceLitPart(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _53838_tokens);
inline jule::Ptr<_1ac9b8047_BraceLit> _1ad5e6e2d_buildBraceLit(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _55534_tokens);
inline jule::Any _1ad5e726e_buildBraceRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5e75b0_getEnumerableParts(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _62638_tokens);
inline jule::Ptr<_1ac9b909d_SliceExpr> _1ad5e7901_buildSlice(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _63330_tokens);
inline jule::Ptr<_1ac9b9a0a_IndexingExpr> _1ad5e7da7_buildIndexing(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6567_tokens, jule::Ptr<_1abc2ba81_Token> _65636_errorToken);
inline jule::Ptr<_1ac9ba16a_SlicingExpr> _1ad5e84c3_buildSlicing(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _67967_start, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6808_to, jule::Ptr<_1abc2ba81_Token>* _68034_errorToken, jule::Ptr<_1abc2ba81_Token> _68065_end);
inline jule::Any _1ad5e8814_buildBracketRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _69537_tokens);
inline jule::Any _1ad5e8b55_buildExclRight(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _72035_tokens);
inline jule::Any _1ad5e8e96_buildData(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _73830_tokens);
inline jule::Any _1ad5e9392_buildBinary(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _80732_tokens, jule::I32 _80757_i);
inline jule::Any _1ad5e96d3_build(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _83226_tokens);
inline jule::Any _1ad5e9a24_buildKind(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _84330_tokens);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e9d65_buildFromTokens(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _85435_tokens);
inline void _1ad6006c8_stop(_1ad600398_parser* _self_);
inline jule::Bool _1ad60095e_stopped(_1ad600398_parser* _self_);
inline void _1ad600d7c_pushErr(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1ad6011e0_pushSuggestion(_1ad600398_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad601531_buildExpr(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _17831_tokens);
inline jule::Ptr<_1abc419b9_Directive> _1ad601872_buildDirective(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _18234_tokens);
inline void _1ad601b2a_pushDirective(_1ad600398_parser* _self_, jule::Ptr<_1abc419b9_Directive> _19733_d);
inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad602026_buildScope(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _21032_tokens, jule::Ptr<_1abc2ba81_Token> _21061_end);
inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad6024cc__buildType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad602983_buildType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad602cc4_buildTypeAliasDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _24240_tokens);
inline void _1ad603137_buildVarTypeAndExpr(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c165a_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _28264_tokens);
inline void _1ad60349a_buildVarCommon(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c165a_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _31558_tokens);
inline void _1ad60380d_buildVarBegin(_1ad600398_parser* _self_, jule::Ptr<_1ac9c165a_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _33157_tokens);
inline jule::Ptr<_1ac9c165a_VarDecl> _1ad603b4e_buildVar(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _35929_tokens);
inline jule::Ptr<_1ac9ba91d_GenericDecl> _1ad603e90_buildGeneric(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _1ad60438b_buildGenerics(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _41535_tokens, jule::Ptr<_1abc2ba81_Token>* _41561_errorToken);
inline jule::Ptr<_1ac9be04d_ParamDecl> _1ad6046cc_buildSelfParam(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _43534_tokens);
inline void _1ad604aea_paramTypeBegin(_1ad600398_parser* _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _47573_tokens);
inline void _1ad604e5d_buildParamType(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _49065_tokens);
inline void _1ad6052c1_buildParamBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _50364_tokens);
inline jule::Ptr<_1ac9be04d_ParamDecl> _1ad605612_buildParam(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _52331_tokens);
inline void _1ad6058ba_checkParams(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> _1ad605cb6_buildParams(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool _1ad6061b2_buildMultiRetType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _61639_tokens, jule::I32* _61669_i);
inline __jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool _1ad6065ad_buildRetType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _68734_tokens, jule::I32* _68764_i);
inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad606a64_buildFnPrototype(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60701a_buildFn(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1ad60737d_buildBindUseDecl(_1ad600398_parser* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _83763_tokens);
inline void _1ad6076e1_parseUseDecl(_1ad600398_parser* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _85058_tokens);
inline jule::Ptr<_1ac9c6660_UseDecl> _1ad607adc_buildUseDecl(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad607ed8_buildTypeEnumItemKind(jule::Ptr<_1ad600398_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>> _1ad608329_buildTypeEnumItems(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _93140_tokens);
inline jule::Ptr<_1ac9c8662_TypeEnumDecl> _1ad60866a_buildTypeEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _95539_tokens);
inline jule::Ptr<_1ac9b2a47_Expr> _1ad608a66_buildEnumItemExpr(jule::Ptr<_1ad600398_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> _1ad608da7_buildEnumItems(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _101436_tokens);
inline jule::Ptr<_1ac9c76c7_EnumDecl> _1ad6091e8_buildEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _105135_tokens);
inline jule::Any _1ad609539_buildNodeEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _109639_tokens);
inline jule::Ptr<_1ac9c892b_FieldDecl> _1ad60987a_buildField(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>> _1ad609bbb_buildStructDeclFields(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _115442_tokens);
inline jule::Ptr<_1ac9c9322_StructDecl> _1ad60a00c_buildStructDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _116537_tokens);
inline void _1ad60a2b5_checkMethodReceiver(_1ad600398_parser* _self_, jule::Ptr<_1ac9c04a0_FnDecl>* _121336_f);
inline void _1ad60a628_buildTraitBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c9a5e_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _123260_tokens);
inline jule::Ptr<_1ac9c9a5e_TraitDecl> _1ad60a969_buildTraitDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _126436_tokens);
inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60acaa_buildBindFn(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _129432_tokens);
inline jule::Ptr<_1ac9c165a_VarDecl> _1ad60b0eb_buildBindVar(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _130433_tokens);
inline jule::Ptr<_1ac9c9322_StructDecl> _1ad60b43c_buildBindStruct(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _131736_tokens);
inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad60b77d_buildBindTypeAlias(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _133139_tokens);
inline jule::Ptr<_1ac9c6660_UseDecl> _1ad60babe_buildBindUse(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _134133_tokens);
inline jule::Any _1ad60be10_buildBind(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _135231_tokens);
inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60c251_getMethod(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _137631_tokens);
inline void _1ad60c5b4_parseImplBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9ca1be_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _140557_tokens);
inline jule::Ptr<_1ac9ca1be_Impl> _1ad60c905_buildImpl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _143830_tokens);
inline jule::Any _1ad60cc46_buildNodeData(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _150935_tokens);
inline void _1ad60ceee_applyFnMeta(_1ad600398_parser* _self_, jule::Ptr<_1ac9c04a0_FnDecl>* _154232_f);
inline void _1ad60d2a7_applyMeta(_1ad600398_parser* _self_, _1abc4159b_Node* _154730_node);
inline void _1ad60d560_pushUseDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _157233_decl);
inline jule::Bool _1ad60d8a1_pushMetaNodes(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _158035_tokens);
inline _1abc4159b_Node _1ad60dbe2_parseNode(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _160031_st);
inline void _1ad60de9a_appendNode(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _162432_st);
inline void _1ad60e473_removeRange(_1ad600398_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges);
inline void _1ad60e891_pushWrongOrderCloseErr(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token>* _164639_t, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges);
inline void _1ad60ed69_pushRangeClose(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges);
inline void _1ad610122_checkRanges(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _167528_tokens);
inline void _1ad6103ca_parse(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1abc32636_Fileset>* _170627_f);
inline void _1ad611b29_pushErr(_1ad611552_typeBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _3123_token, jule::Str _3145_fmt);
inline void _1ad611e8c_pushSuggestion(_1ad611552_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612223_buildNamespace(_1ad611552_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _1ad6124a9_buildGenerics(_1ad611552_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad612740_identGenerics(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad6129c6_buildIdent(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612c5c_buildCppLink(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612ee3_buildFn(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613279_buildPtr(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613510_buildSptr(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613796_buildSlc(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613a2c_buildArr(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613cb3_buildMap(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad614049_buildEnumerable(_1ad611552_typeBuilder* _self_);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad6142d0_step(_1ad611552_typeBuilder* _self_);
inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad614566_build(_1ad611552_typeBuilder* _self_);
inline void _1ace1a015_pushErr(_1ace19982_directiveEval* _self_, jule::Ptr<_1abc2ba81_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ace1a411_splitOperans(_1ace19982_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3348_tokens);
inline jule::Bool _1ace1a752_evalDirectiveIdent(_1ace19982_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1ace1aa93_evalDirectivePart(_1ace19982_directiveEval* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7037_part);
inline jule::Bool _1ace1ad29_eval(_1ace19982_directiveEval* _self_);
inline jule::Bool _1ace172a9_isPassFileAnnotation(_1ad615798_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_1ad615798_Importer> static__1ad615bc7_New(_1ace18244_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _1ad615e5d_AllPackages(_1ad615798_Importer* _self_);
inline void _1ad61639d_SetModPath(_1ad615798_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1ad616634_GetModPath(_1ad615798_Importer* _self_);
inline jule::Str _1ad616975_ModById(_1ad615798_Importer* _self_, jule::I32 _7019_id);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ad616cb6_GetImport(_1ad615798_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log _1ad6171b2_ImportPackage(_1ad615798_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1ad61746a_Imported(_1ad615798_Importer* _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1a6a6bde3_Log _1ad617899_isPassBuildDirectives(_1ad615798_Importer* _self_, jule::Ptr<_1abc40644_AST>* _16842_file);
inline jule::Ptr<_1ad61bace_ExprInspector> static__1ad61be0e_New(void);
inline void _1ad61c1b7_args(_1ad61bace_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1ad61c470_inspect(_1ad61bace_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1ad61c7d3_Inspect(_1ad61bace_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Ptr<_1ad625c5e_Meta> static__1ad626138_Collect(jule::Ptr<_1ad618328_IR> _7124_ir);
inline jule::Ptr<_1ad624b81_MetaRuntime> static__1ad626402_CollectRuntime(jule::Ptr<_1ad618328_IR>* _8032_ir);
inline jule::Ptr<_1ad623eb0_MetaStrBuilder> static__1ad6266bb_CollectStrBuilder(jule::Ptr<_1ad618328_IR>* _10635_ir);
inline jule::Ptr<_1ad625654_MetaMathCmplx> static__1ad626985_CollectMathCmplx(jule::Ptr<_1ad618328_IR>* _12334_ir);
inline jule::Ptr<_1bb239700_ObjectDeadCode> static__1bb239bd9_new(jule::Ptr<_1ad618328_IR>* _2621_ir);
inline jule::Bool _1c0bbd38d_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _3227_t);
inline jule::Bool _1c0bc50dc_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa540e_FnIns>* _3227_t);
inline jule::Bool _1c0be9cc1_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaaca65_Trait>* _3227_t);
inline jule::Bool _1c0c04eeb_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acb3d420_Var>* _3227_t);
inline void _1c0bbdd1c_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns> _5232_t);
inline void _1c0bc62ca_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa540e_FnIns> _5232_t);
inline void _1c0bea750_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaaca65_Trait> _5232_t);
inline void _1c0c084e9_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acb3d420_Var> _5232_t);
inline void _1bb23a58b_pushStructAsLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _6538_s);
inline void _1bb23a844_setReferencesAsLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac979855_ReferenceStack>* _12141_rs);
inline void _1bb23aaec_inits(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _17127_pkg);
inline void _1bb23ada5_collectLivePackage(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _18540_pkg);
inline void _1bb23b0a3_collectLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_);
inline void _1bb23b35b_removeDeadGlobals(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acb3d420_Var>>* _26139_vars);
inline void _1bb23b614_removeDeadFns(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _27335_funcs);
inline void _1bb23b8bc_removeDeadStructs(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _29439_structs);
inline void _1bb23bb75_removeDeadTraits(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acaaca65_Trait>>* _31638_traits);
inline void _1bb23be2d_removeDeadsFile(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa8654_SymTab>* _33737_file);
inline void _1bb23c1d6_removeDeadsPackage(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _34440_pkg);
inline void _1bb23c3d4_removeDeads(jule::Ptr<_1bb239700_ObjectDeadCode> _self_);
inline void _1bb23c5d2_elimanate(jule::Ptr<_1bb239700_ObjectDeadCode> _self_);
inline void _1bb23dd42_optimizeChild(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _1935_s);
inline void _1bb23e0ea_optimizeBodyChildExceptional(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _2950_s);
inline void _1bb23e3a3_optimizeBodyChild(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _3939_s);
inline void _1bb23e65b_optimizeExprModel(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1bb23e859_eliminateFollowed(_1bb23d825_scopeDeadCode* _self_);
inline void _1bb23eb12_pushGoto(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95dc13_GotoSt> _6929_gt);
inline void _1bb23edba_pushLabel(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95d5a3_Label> _7930_l);
inline void _1bb240173_optimizeRangeIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95c88d_RangeIter> _9238_it);
inline void _1bb24042b_optimizeWhileIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95be42_WhileIter> _9738_it);
inline void _1bb2406d4_optimizeInfIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95b98b_InfIter> _10536_it);
inline void _1bb24098c_optimizeConditional(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95b68e_Conditional> _10940_c);
inline void _1bb240c45_optimizeMatch(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac960286_Match> _12734_m);
inline void _1bb240eed_optimizeAssign(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95e593_Assign> _14535_assign);
inline void _1bb2412a6_optimizeMultiAssign(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _15040_assign);
inline void _1bb24155e_optimizeStmt(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1bb24175c_optimizeStmts(jule::Ptr<_1bb23d825_scopeDeadCode> _self_);
inline _1bb242dac_exprDeadCode static__1bb2432ca_new(jule::Ptr<_1bb23d825_scopeDeadCode>* _1421_s);
inline void _1bb243583_optimize(_1bb242dac_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1bb10e471_pushVar(_1bb10decb_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1bb10e7b2_removeVar(_1bb10decb_nils* _self_, jule::Uintptr _4625_var);
inline jule::Bool _1bb10eb03_isSafe(_1bb10decb_nils* _self_, jule::Uintptr _6022_var);
inline jule::Ptr<_1bb111b49_scopeOptimizer> static__1bb1121bb_new(jule::Ptr<_1ac95aa56_Scope> _2320_scope);
inline void _1bb112474_setCurrentStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1bb112672_removeCurrent(jule::Ptr<_1bb111b49_scopeOptimizer> _self_);
inline jule::Bool _1bb112908_isLastStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_);
inline jule::Bool _1bb112b8e_isIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_);
inline void _1bb112e47_optimizeData(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1acb8cded_Data> _6733_d);
inline void _1bb113200_optimizeVar(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1acb3d420_Var> _10032_v);
inline void _1bb1134a8_optimizeConditional(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95b68e_Conditional> _12140_c);
inline void _1bb1138c6_buildDefaultConstantTrueCase(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac960cae_Case> _19549_case, jule::I32* _19573_i, jule::Ptr<_1ac960286_Match>* _19586_m);
inline void _1bb113b7e_optimizeMatch(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac960286_Match> _22134_m);
inline void _1bb113e37_optimizeRangeIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95c88d_RangeIter> _30338_it);
inline void _1bb1141e0_optimizeWhileIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95be42_WhileIter> _36038_it);
inline jule::Bool _1bb114531_substr(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _36627_a);
inline jule::Bool _1bb114872_strAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _38630_a);
inline jule::Bool _1bb114bb3_sliceAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _39732_a);
inline void _1bb114e6b_optimizePostfix(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e0dc_Postfix> _40536_postfix);
inline jule::Bool _1bb1152ac_cmplxAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign>* _41233_assign);
inline void _1bb115565_optimizeAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _45435_assign);
inline jule::Bool _1bb1158a6_tryOptimizeSwap(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _58537_assign);
inline void _1bb115b5e_optimizeMultiAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _62240_assign);
inline void _1bb115e17_optimizeRet(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac96184d_RetSt> _66832_r);
inline void _1bb1161c0_optimizeStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Any _69233_stmt);
inline void _1bb116478_optimizeChild(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95aa56_Scope> _72134_child);
inline void _1bb116676_optimize(jule::Ptr<_1bb111b49_scopeOptimizer> _self_);
inline void static__1bb118c61_optimize(jule::Any* _2226_model);
inline void static__1bb11904c_optimizeData(jule::Any* _2630_model, jule::Ptr<_1bb1228e6_data>* _2659_d);
inline jule::Bool _1bb11938d_selfCmpCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _3828_m);
inline jule::Bool _1bb1196ce_boolCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _6725_m);
inline jule::Bool _1bb119a20_arrayCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _12025_m);
inline jule::Bool _1bb119d61_strCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _13223_m);
inline jule::Bool _1bb11a317_tryNeutralElement1(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _18935_m, jule::Ptr<_1aca3208e_Const> _18966_c, jule::Ptr<_1aca94b3a_OperandExprModel>* _18992_nc);
inline jule::Bool _1bb11a658_tryNeutralElement(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _23934_m);
inline void _1bb11a911_checkBinaryForBoundary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _25439_m);
inline void _1bb11abb9_checkBinaryForNil(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _30634_m);
inline void _1bb11ae72_shift(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _34021_m);
inline void _1bb11b22a_binary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _35722_m);
inline void _1bb11b4d3_unary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca9550e_UnaryExprModel> _49521_m);
inline void _1bb11b78b_structureLit(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95dd3_StructLitExprModel> _53828_m);
inline void _1bb11ba44_casting(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca96763_CastingExprModel> _55423_m);
inline void _1bb11bda7_args(_1bb118854_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _56820_params, jule::Slice<jule::Any>* _56852_args);
inline void _1bb11c160_scope(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1ac95aa56_Scope>* _59022_s);
inline void _1bb11c418_optimizeStrBuilderCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _59639_m);
inline void _1bb11c6c1_lenCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _61223_m);
inline void _1bb11c979_funcCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97115_FnCallExprModel> _65524_m);
inline void _1bb11cc32_indexing(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97995_IndexingExprModel> _66624_m);
inline void _1bb11ceda_anonFunc(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _69024_m);
inline void _1bb11d1d8_do(_1bb118854_exprOptimizer* _self_);
inline void _1bb11eea9_pushVar(jule::Ptr<_1bb11ea14_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1acbc0d98_Type> _2442_kind);
inline jule::Bool _1bb1202ea_removeVar(_1bb11ea14_dynamic* _self_, jule::Uintptr _4725_var);
inline jule::Bool _1bb1206e6_isFits(_1bb11ea14_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1acbc0d98_Type> _6136_kind);
inline _1bb12231e_dataCheckpoint _1bb122c9d_getCheckpoint(_1bb1228e6_data* _self_);
inline void _1bb123056_loadCheckpoint(_1bb1228e6_data* _self_, _1bb12231e_dataCheckpoint* _4535_c);
inline void _1bb124673_pushVar(_1bb1241cd_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize);
inline jule::Bool _1bb124db0_fitsMaxSize(_1bb1241cd_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr);
inline jule::Ptr<_1bb243ece_Optimizer> static__1bb244496_New(jule::Ptr<_1ad618328_IR>* _2121_ir);
inline void _1bb24474e_optimizeExpr(_1bb243ece_Optimizer* _self_, jule::Any* _2733_model);
inline void _1bb244a07_optimizeGlobal(_1bb243ece_Optimizer* _self_, jule::Ptr<_1acb3d420_Var>* _3135_v);
inline void _1bb244cb0_optimizeFunction(_1bb243ece_Optimizer* _self_, jule::Ptr<_1acaa2351_Fn>* _3737_func);
inline void _1bb245068_optimizeStruct(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac9ce129_Struct>* _4735_s);
inline void _1bb245321_optimizeGlobals(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _6336_p);
inline void _1bb2455c9_optimizeFunctions(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _7138_p);
inline void _1bb245882_optimizeStructs(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _7936_p);
inline void _1bb245b3a_optimizePackage(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _8736_p);
inline void _1bb245d38_Optimize(_1bb243ece_Optimizer* _self_);
inline _1aae3bc92_Time static__1aae3c17c_Unix(jule::U64 _9117_sec);
inline _1aae3bc92_Time static__1aae3c38b_Now(void);
inline _1aae3b5bb_AbsTime _1aae3da74_Abs(_1aae3bc92_Time* _self_);
inline jule::Ptr<_1bb248104_scopeCoder> static__1bb2487ec_new(jule::Ptr<_1aae49299_ObjectCoder>* _3721_oc);
inline void _1c10e4ad3_iterHead(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1bb248ec3_rangeIndexIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _9336_it);
inline void _1bb24927b_rangeHashmapIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _16038_it);
inline void _1bb249534_strRuneIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10c969_StrRuneIter> _24132_it);
inline void _1bb2497dc_ifCase(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ae74_If> _35327_i);
inline void _1bb249a95_conditional(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95b68e_Conditional> _36232_c);
inline void _1bb249d4d_infIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95b98b_InfIter> _38228_it);
inline void _1bb24a106_whileIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95be42_WhileIter> _39930_it);
inline void _1bb24a3ae_rangeIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter> _43830_it);
inline void _1bb24a667_cont(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95cc23_ContSt> _45121_c);
inline void _1bb24a920_label(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95d5a3_Label> _45622_l);
inline void _1bb24abc8_gotoSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95dc13_GotoSt> _46123_gt);
inline void _1bb24ae81_postfix(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e0dc_Postfix> _46628_p);
inline void _1bb24b239_assignLeft(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Any* _47332_model);
inline void _1bb24b4e2_shl(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _50424_a);
inline void _1bb24b79a_shr(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _51024_a);
inline void _1bb24ba53_divByZeroAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _51636_a);
inline void _1bb24c02b_operatorOverloadingAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _52247_s, jule::Ptr<_1aca94b3a_OperandExprModel>* _52273_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _5238_r, jule::U32 _52336_op);
inline void _1bb24c2d4_assign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _53727_a);
inline void _1bb24c58c_mapLookupAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _57037_a);
inline void _1bb24c845_multiAssignTup(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _60236_a);
inline void _1bb24caed_multiAssignFn(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _67235_a);
inline void _1bb24cda6_multiAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _73132_a);
inline jule::Fn<void> _1bb24d1e7_matchExpr(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _75730_m);
inline void _1bb24d55a_case(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _76725_m, jule::Ptr<_1ac960cae_Case> _76746_c);
inline void _1bb24d813_matchSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _83728_m);
inline void _1bb24dabb_fallSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac9614a7_FallSt> _89223_f);
inline void _1bb24dd74_breakSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95d0ec_BreakSt> _89724_b);
inline void _1bb24e12c_setResult(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac96184d_RetSt> _90630_r);
inline void _1bb24e3d5_retSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac96184d_RetSt> _93426_r);
inline void _1bb24e68d_var(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acb3d420_Var> _97024_v);
inline void _1bb24e946_mutSlicing(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10b65a_MutSlicingExprModel> _97631_m);
inline void _1bb24ebee_swap(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10a406_SwapExprModel> _99325_m);
inline void _1bb24eea7_exceptionalForwarding(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb109d73_ExceptionalForwardingExprModel> _100142_m);
inline void _1bb250260_st(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Any _100723_st);
inline void _1bb250518_scopeStmts(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95aa56_Scope>* _106332_s);
inline void _1bb2507c1_scope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95aa56_Scope> _107226_s);
inline void _1bb250a79_commonFuncScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _108737_f);
inline void _1bb250ddc_anonFuncScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _112734_m, jule::Str _112761_ident);
inline void _1bb251195_funcScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _115930_f);
inline jule::Ptr<_1bb2545e9_exprCoder> static__1bb2549e5_new(jule::Ptr<_1aae49299_ObjectCoder>* _4821_oc);
inline void _1bb254c9d_string(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _5424_c);
inline void _1bb255056_boolean(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Bool _6924_b);
inline void _1bb255254_nilLit(jule::Ptr<_1bb2545e9_exprCoder> _self_);
inline jule::Bool _1bb255595_ftoaSpecialCases(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::F64* _8134_x);
inline void _1bb25584d_float32(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _9525_c);
inline void _1bb255b06_float64(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _11425_c);
inline void _1bb255dae_constant(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const> _13229_c);
inline void _1bb2562cc_operatorOverloadingUnary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _15646_s, jule::U32 _15667_op, jule::Any _15686_e);
inline void _1bb2566ea_divByZeroBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1abc2ba81_Token>* _16833_op, jule::Ptr<_1aca94b3a_OperandExprModel>* _16857_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _16890_r);
inline void _1bb256de3__unsafeBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, _1a6a5cb3c_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1acbc0d98_Type>* _2088_lk, jule::Ptr<_1acbc0d98_Type>* _20830_rk, jule::U32 _20847_op, jule::Str _20862_kind);
inline void _1bb25719b_unsafeBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95135_BinaryExprModel> _27733_m);
inline void _1bb25750e_shl(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca94b3a_OperandExprModel>* _28925_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _28958_r);
inline void _1bb257872_shr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca94b3a_OperandExprModel>* _31725_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _31758_r);
inline void _1bb257b2a_binary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95135_BinaryExprModel> _34527_m);
inline void _1bb257dd3_var(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acb3d420_Var> _36924_m);
inline void _1bb25818b_structureIns(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns> _38533_m);
inline void _1bb258444_unary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9550e_UnaryExprModel> _38926_m);
inline void _1bb2586ec_structureLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95dd3_StructLitExprModel> _42033_m);
inline void _1bb2589a5_allocStructure(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca961d0_AllocStructLitExprModel> _46335_m);
inline void _1bb258c5d_possibleRefExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _47132_expr);
inline void _1bb25917b_castTraitFromTrait(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca96763_CastingExprModel>* _48540_m, jule::Ptr<_1acaaca65_Trait> _48572_t1, jule::Ptr<_1acaaca65_Trait> _48594_t2);
inline void _1bb259434_casting(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca96763_CastingExprModel> _49828_m);
inline void _1bb2596dc_args(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _64526_m);
inline void _1bb259995_modelForCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _67633_expr);
inline void _1bb259c4d_pushCallInf(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _69129_m);
inline jule::Bool _1bb25a08e_isWrapped(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _71431_m);
inline jule::Bool _1bb25a3d0_writeReceiver(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _73834_m);
inline void _1bb25a688_pureFuncCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _75134_m);
inline void _1bb25a941_coFuncCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _84132_m);
inline void _1bb25aca4_writeUseExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _91934_f, jule::Ptr<_1acb8cded_Data> _91955_d);
inline void _1bb25b117_funcCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel> _94029_m, jule::Bool _94056_ignoreExceptional);
inline void _1bb25b3c0_slice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca974de_SliceExprModel> _102326_m);
inline void _1bb25b678_indexing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97995_IndexingExprModel> _105229_m);
inline void _1bb25b931_unsafeIndexing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10bcdc_UnsafeIndexingExprModel> _110335_m);
inline void _1bb25bbd9_anonFunc(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _112029_m);
inline void _1bb25be92_mapExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca986ee_MapExprModel> _115128_m);
inline void _1bb25c24a_slicing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca98c82_SlicingExprModel> _118628_m);
inline void _1bb25c503_traitSub(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca99315_TraitSubIdentExprModel> _120229_m);
inline void _1bb25c7ab_structureSub(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _121833_m);
inline void _1bb25ca64_array(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a426_ArrayExprModel> _122726_m);
inline void _1bb25cd1c_funcInsCommon(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _127734_m);
inline void _1bb25d0c5_funcIns(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _128428_m);
inline void _1bb25d37d_tuple(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a723_TupleExprModel> _129526_m);
inline void _1bb25d636_newCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> _130628_m);
inline void _1bb25d8de_printCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> _131830_m);
inline void _1bb25db97_printlnCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> _132732_m);
inline void _1bb25de50_panicCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _133630_m);
inline void _1bb25e208_errorCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _134430_m);
inline void _1bb25e4b1_copyCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ccec_BuiltinCopyCallExprModel> _137629_m);
inline void _1bb25e769_lenCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _138428_m);
inline void _1bb25ea22_capCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> _140028_m);
inline void _1bb25ecca_deleteCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _140531_m);
inline void _1bb260083_makeCallSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel>* _142935_m);
inline void _1bb26033b_makeCallStr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel>* _145333_m);
inline void _1bb2605e4_makeCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _146429_m);
inline void _1bb26089c_pushToSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10c1b6_PushToSliceExprModel> _147232_m);
inline void _1bb260b55_appendToSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10c590_AppendToSliceExprModel> _153234_m);
inline void _1bb260e0d_appendCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _154031_m);
inline void _1bb2611b6_sizeof(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9d4c3_SizeofExprModel> _154827_m);
inline void _1bb26146e_alignof(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9db77_AlignofExprModel> _155428_m);
inline void _1bb261727_runeLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9dd64_RuneExprModel> _156024_m);
inline void _1bb2619d0_structureStatic(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a04c_StructStaticIdentExprModel> _157436_m);
inline void _1bb261c88_backendEmit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _157832_m);
inline void _1bb262041_free(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9e4d5_FreeExprModel> _159425_m);
inline void _1bb2622e9_strComp(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10b0c7_StrCompExprModel> _160328_m);
inline void _1bb2625a2_emptyCompare(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10a824_EmptyCompareExprModel> _161933_m);
inline void _1bb26285a_unsafeDeref(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10cc66_UnsafeDerefExprModel> _162832_m);
inline void _1bb262b13_unsafeCasting(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10d063_UnsafeCastingExprModel> _163934_m);
inline void _1bb262dbb_model(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _165626_m);
inline jule::Bool _1bb26320c_handleFieldByDefault(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _175842_f);
inline void _1bb2634b5_initStructLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _177935_s);
inline void _1bb26376d_fillCollectionByDefault(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _180145_elem);
inline void _1bb263a26_initCollection(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _181636_elem);
inline void _1bb263cce_initArray(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbd07d1_Arr>* _183031_arr);
inline void _1bb264087_initExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type> _184429_t);
inline jule::Ptr<_1bb266b7d_TestCoder> static__1bb267134_New(jule::Ptr<_1aae49299_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1bb2673ba_findTestingPackage(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void _1bb267673_appendTest(jule::Ptr<_1bb266b7d_TestCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _3531_f);
inline void _1bb26792b_appendPackageTests(jule::Ptr<_1bb266b7d_TestCoder> _self_, jule::Ptr<_1ac98e150_Package>* _5040_p);
inline jule::Bool _1bb267bb2_readyTestingPackage(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void _1bb267db0_callTmReset(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void _1bb2680ad_callTmFailed(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void _1bb2682ab_callTmSkipped(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void _1bb2684a9_Serialize(jule::Ptr<_1bb266b7d_TestCoder> _self_);
inline void static__1bb269d18_writeIdentTo(_1a6a5cb3c_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1bb26a1ae_toOut(_1a6a5cb3c_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1bb26a610_toLocal(_1a6a5cb3c_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__1bb26a8eb_func(_1a6a5cb3c_Builder* _7722_buf, jule::Ptr<_1acaa2351_Fn>* _7750_f);
inline void static__1bb26abd7_funcIns(_1a6a5cb3c_Builder* _9525_buf, jule::Ptr<_1acaa540e_FnIns>* _9553_f);
inline void static__1bb26aec3_traitDecl(_1a6a5cb3c_Builder* _11027_buf, jule::Ptr<_1acaaca65_Trait> _11050_t);
inline void static__1bb26b2ae_param(_1a6a5cb3c_Builder* _11423_buf, jule::Ptr<_1acaa087c_Param>* _11447_p);
inline void static__1bb26b59a_structure(_1a6a5cb3c_Builder* _12927_buf, jule::Ptr<_1ac9ce129_Struct>* _12951_s);
inline void static__1bb26b886_structureIns(_1a6a5cb3c_Builder* _14030_buf, jule::Ptr<_1ac9d1e84_StructIns>* _14054_s);
inline void static__1bb26bb72_field(_1a6a5cb3c_Builder* _14823_buf, jule::Ptr<_1ac9cb203_Field>* _14847_f);
inline void static__1bb26be5d_var(_1a6a5cb3c_Builder* _15821_buf, jule::Ptr<_1acb3d420_Var> _15848_v);
inline void static__1bb26c249_iterBegin(_1a6a5cb3c_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1bb26c535_iterEnd(_1a6a5cb3c_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1bb26c821_iterNext(_1a6a5cb3c_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1bb26cb0c_label(_1a6a5cb3c_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1bb26cde8_matchEnd(_1a6a5cb3c_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1bb26d1d4_caseBegin(_1a6a5cb3c_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1aae49299_ObjectCoder> static__1aae4970b_New(jule::Ptr<_1ad618328_IR>* _12021_ir, _1aae469e4_SerializationInfo _12035_info);
inline void _1aae499b4_write(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Str _13322_s);
inline void _1aae49c6c_writeBytes(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _1aae49e6a_addIndent(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4a168_doneIndent(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4a366_indent(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline jule::I32 _1aae4a6a7_findAnyType(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _15633_t);
inline jule::I32 _1aae4a9e8_pushCoSpawn(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _16532_f);
inline jule::I32 _1aae4ad39_pushDealloc(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type> _26832_t);
inline jule::Str _1aae4b17a_pushAnonFn(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _28432_m);
inline jule::I32 _1aae4b4bb_pushAnyType(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type> _32632_t);
inline void _1aae4b774_pushResultIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _42635_f);
inline void _1aae4ba2c_pushResult(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _44732_f);
inline void _1aae4bd90_pushAndWriteMaskMapper(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait> _46043_t1, jule::Ptr<_1acaaca65_Trait> _46065_t2);
inline void _1aae4c148_locInfo(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1abc2ba81_Token>* _51125_t);
inline void _1aae4c346_head(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4c5ee_links(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Bool _57822_std);
inline void _1aae4c8a7_prepareStructure(_1aae49299_ObjectCoder* _self_, jule::Ptr<_1ac9ce129_Struct>* _60137_s);
inline void _1aae4caa5_prepareStructures(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4cd5d_structurePlainDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _63240_s);
inline void _1aae4d05b_structurePlainDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4d314_fieldDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _64831_f);
inline void _1aae4d732_structureOperatorEq(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1ac9d1e84_StructIns>* _65553_s, jule::Bool _65574_decl);
inline void _1aae4da95_structureOperators(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _72340_s, jule::Bool _72361_decl);
inline void _1aae4dd4d_structureInsDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _73238_s);
inline void _1aae4e106_structureDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _75835_s);
inline void _1aae4e304_structureDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4e502_structureMethodDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae4e9ca_funcHead(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _79230_buf, jule::Ptr<_1acaa540e_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident);
inline void _1aae4ed3d_funcDeclIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _81133_f, jule::Bool _81150_ptr);
inline void _1aae501a1_funcDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _81930_f, jule::Bool _81944_ptr);
inline void _1aae50459_funcDeclTrait(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _82535_f);
inline void _1aae50657_funcDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae50910_traitDataTypeMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _84742_hash);
inline void _1aae50b0d_traitDataTypes(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae50e71_paramIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _87530_buf, jule::Ptr<_1acaa42a9_ParamIns>* _87558_p);
inline void _1aae512d4_paramsIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _88131_buf, jule::Ptr<_1acaa540e_FnIns>* _88159_f);
inline void _1aae51647_varInitExpr(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acb3d420_Var>* _90233_v, jule::Fn<void> _90248_init);
inline void _1aae51900_var(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acb3d420_Var> _92024_v);
inline void _1aae51c63_anonFuncInsDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _95137_m, jule::Str _95164_ident);
inline void _1aae520c6_anonFuncIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _95733_m, jule::Str _95760_ident);
inline void _1aae52439_funcIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _96728_f, jule::Str _96745_ident);
inline void _1aae526e2_func(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _97726_f);
inline void _1aae52a55_funcTrait(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _98327_s, jule::Ptr<_1acaa540e_FnIns>* _98353_f);
inline __jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool _1aae52d96_findTraitMetMap(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _99837_m);
inline void _1aae53209_traitWrapper(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait>* _101034_t, jule::Ptr<_1acaa2351_Fn>* _101056_m);
inline void _1aae53407_traitWrappers(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae5376a_traitDataMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _107438_hash, jule::Ptr<_1ac9d1e84_StructIns> _107456_s);
inline void _1aae53b88_traitData(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_1ac9d1e84_StructIns>* _109262_s);
inline void _1aae53d86_traitDatas(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae54084_globalDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae54282_decls(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae5453a_structureMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115238_s);
inline void _1aae547e3_structureIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115934_s);
inline void _1aae54a9b_structure(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _116531_s);
inline void _1aae54c99_structures(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae54e97_funcs(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae55250_pushInit(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac98e150_Package>* _120430_pkg);
inline void _1aae5544d_anonHashes(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae5564b_initGlobals(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae55849_initCaller(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae55a47_end(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae55d00_buildTraitHash(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait>* _127636_t);
inline void _1aae55eed_buildTraitHashes(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae56361_insertBuf(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _130631_buf, jule::I32 _130654_pos);
inline void _1aae5655e_implementRC(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae5675c_serializeHead(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline void _1aae5695a_Serialize(jule::Ptr<_1aae49299_ObjectCoder> _self_);
inline jule::Str _1aae58a5b_Str(_1aae58660_customType* _self_);
inline jule::Bool _1aae58d9c_Equal(jule::Ptr<_1aae58660_customType> _self_, jule::Ptr<_1acbc0d98_Type> _2518_k);
inline jule::Ptr<_1aae59298_typeCoder> static__1aae597e8_new(jule::Ptr<_1aae49299_ObjectCoder>* _5021_oc);
inline void _1aae59b5b_toType(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _5727_buf, jule::Str _5754_id);
inline void _1aae59ebe_prim(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _7125_buf, jule::Ptr<_1acbc8eb1_Prim> _7148_p);
inline void _1aae5a332_tuple(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _7626_buf, jule::Ptr<_1acbce0a4_Tuple> _7653_t);
inline void _1aae5a695_asSptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1aae5aa08_sptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _9525_buf, jule::Ptr<_1acbcc9dc_Sptr> _9552_sptr);
inline void _1aae5ad6b_ptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _10224_buf, jule::Ptr<_1acbd12a4_Ptr> _10251_p);
inline void _1aae5b1ce_enumDecl(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _11329_buf, jule::Ptr<_1acab021b_Enum> _11356_e);
inline void _1aae5b542_typeEnumDecl(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _11833_buf, jule::Ptr<_1acab1926_TypeEnum> _11860_e);
inline void _1aae5b8a5_asSlice(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _12228_buf, jule::Ptr<_1acbc0d98_Type> _12255_elem);
inline void _1aae5bc18_slice(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _12926_buf, jule::Ptr<_1acbcd4b0_Slc> _12953_s);
inline void _1aae5c07b_mapType(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _13428_buf, jule::Ptr<_1acbceb54_Map> _13455_m);
inline void _1aae5c752_structureIns(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _14733_buf, jule::Ptr<_1ac9d1e84_StructIns> _14760_s);
inline void _1aae5cab5_array(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _17126_buf, jule::Ptr<_1acbd07d1_Arr> _17153_a);
inline void _1aae5d28b_paramIns(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _19429_buf, jule::Ptr<_1acaa42a9_ParamIns>* _19457_p);
inline void _1aae5d962_funcInsResult(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _22634_s, jule::Ptr<_1acaa540e_FnIns>* _22660_f);
inline void _1aae5dcc5_anonFunc(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _24429_buf, jule::Ptr<_1acaa540e_FnIns> _24456_f);
inline void _1aae5e138_func(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _26525_buf, jule::Ptr<_1acaa540e_FnIns> _26552_f);
inline void _1aae5e49b_kind(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _27225_buf, jule::Ptr<_1acbc0d98_Type> _27252_k);
inline jule::Ptr<_1aae61d83_resultCoder> static__1aae6238e_new(jule::Ptr<_1aae59298_typeCoder>* _34021_tc);
inline void _1aae62702_ptr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _34424_s, jule::Ptr<_1acbd12a4_Ptr> _34449_p);
inline void _1aae62a65_sptr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _34925_s, jule::Ptr<_1acbcc9dc_Sptr> _34950_p);
inline void _1aae62dc8_mapType(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _35428_s, jule::Ptr<_1acbceb54_Map> _35453_p);
inline void _1aae6323b_slice(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _36026_s, jule::Ptr<_1acbcd4b0_Slc> _36051_slc);
inline void _1aae6359e_arr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _36524_s, jule::Ptr<_1acbd07d1_Arr> _36549_arr);
inline void _1aae63912_func(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _37125_s, jule::Ptr<_1acaa540e_FnIns> _37150_f);
inline void _1aae63c75_tup(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _38424_s, jule::Ptr<_1acbce0a4_Tuple> _38449_tup);
inline void _1aae640d8_codeMut(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _39128_s, jule::Ptr<_1acbc0d98_Type>* _39154_t);
inline void _1aae6444b_codeMut1(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _43129_s, jule::Ptr<_1acbc0d98_Type>* _43155_t);
inline jule::Slice<jule::U8> _1aae64759_code(_1aae61d83_resultCoder* _self_, jule::Ptr<_1acbc0d98_Type>* _44025_t);
inline jule::Str _1c1711a90_Name(_1c17117a4_Flag* _self_);
inline jule::Str _1c1711bd3_What(_1c17117a4_Flag* _self_);
inline void _1c1711d26_Reset(_1c17117a4_Flag* _self_);
inline jule::I32 _1c1711e69_Short(_1c17117a4_Flag* _self_);
inline jule::Str _1c1714cb3_Name(_1c1715137_Flag* _self_);
inline jule::Str _1c1715423_What(_1c1715137_Flag* _self_);
inline void _1c1715566_Reset(_1c1715137_Flag* _self_);
inline jule::I32 _1c17156a9_Short(_1c1715137_Flag* _self_);
inline jule::Str _1c17184c0_Name(_1c1718844_Flag* _self_);
inline jule::Str _1c1718b30_What(_1c1718844_Flag* _self_);
inline void _1c1718c73_Reset(_1c1718844_Flag* _self_);
inline jule::I32 _1c1718db6_Short(_1c1718844_Flag* _self_);
inline jule::Str _1c171bc21_Name(_1c171c095_Flag* _self_);
inline jule::Str _1c171c381_What(_1c171c095_Flag* _self_);
inline void _1c171c4c4_Reset(_1c171c095_Flag* _self_);
inline jule::I32 _1c171c617_Short(_1c171c095_Flag* _self_);
inline jule::Str _1c172042d_Name(_1c17207a2_Flag* _self_);
inline jule::Str _1c1720a8d_What(_1c17207a2_Flag* _self_);
inline void _1c1720bd1_Reset(_1c17207a2_Flag* _self_);
inline jule::I32 _1c1720d24_Short(_1c17207a2_Flag* _self_);
inline jule::Ptr<_1aaec703b_FlagSet> static__1aaec735a_New(void);
inline jule::Trait _1aaec7811_FindFlag(_1aaec703b_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1aaec7b52_FindFlagShort(_1aaec703b_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1aaec8229_Parse(_1aaec703b_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1c17207a2_Flag> _1c0411d9b_addFlagCommon(_1aaec703b_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1c171c095_Flag> _1c041ae71_addFlagCommon(_1aaec703b_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1c040e66d_AddVar(_1aaec703b_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1c0418787_AddVar(_1aaec703b_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1c135cbe7_parseInteger(_1aaec9a00_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1c13657c1_parseInteger(_1aaec9a00_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1aaeca34c_getData(_1aaec9a00_argParser* _self_);
inline jule::VoidExceptional _1aaeca5c2_processFlag(_1aaec9a00_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1aaeca87a_singleDash(_1aaec9a00_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1aaecab33_doubleDash(_1aaec9a00_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1aaecad31_tryArg(_1aaec9a00_argParser* _self_);
inline jule::VoidExceptional _1aaecb02e_parse(_1aaec9a00_argParser* _self_);
inline jule::Ptr<_1a6b8a3eb_Cmd> static__1a6b8a84c_New(jule::Str _3516_path);
inline jule::VoidExceptional _1a6b8aa4a_Spawn(_1a6b8a3eb_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1a6b8aece_Wait(_1a6b8a3eb_Cmd* _self_);
inline jule::VoidExceptional _1a6b2acc6_spawn(_1a6b8a3eb_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1a6b2b25a_wait(_1a6b8a3eb_Cmd* _self_);
inline jule::Exceptional<jule::Slice<_1a6b89818_Dir>> static__1a8e5374a_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__1a8e53948_Create(jule::Str _3319_path);
inline jule::VoidExceptional static__1a8e53b79_Remove(jule::Str _4519_path);
inline __jule_tuple_x_1ad618328_IR__jule_tuple_s_1a6a6bde3_Log static__1ad618801_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _1ad618cda_appendStructs(_1ad618328_IR* _self_, jule::Ptr<_1ac98e150_Package>* _6830_p, jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _1ad619071_GetAllStructures(_1ad618328_IR* _self_);
inline void _1ad6193d4_appendGlobals(_1ad618328_IR* _self_, jule::Ptr<_1ac98e150_Package>* _9130_p, jule::Slice<jule::Ptr<_1acb3d420_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1acb3d420_Var>> _1ad61966a_GetAllGlobals(_1ad618328_IR* _self_);
inline void _1ad619868_Order(_1ad618328_IR* _self_);
inline jule::I32 _1bb6ee027_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2);
inline __jule_tuple_i32__jule_tuple_i32 _1bb6ee2e1_EncodeRune(jule::I32 _7819_r);
inline jule::Slice<jule::U16> _1bb6ee632_Encode(jule::Slice<jule::I32> _8711_s);
inline jule::Slice<jule::I32> _1bb6ee8b8_Decode(jule::Slice<jule::U16> _11911_s);
inline jule::Slice<jule::U16> _1bb6eec3c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r);
inline jule::Slice<jule::U16> _1bb6eeec3_UTF16FromStr(jule::Str _1017_s);
inline jule::Str _1bb7002d1_UTF16ToStr(jule::Slice<jule::U16> _3015_s);
inline jule::Str _1bb70059a_U16PtrToStr(jule::U16* _4623_s);
inline jule::I32 _1bb3e9a14_GetLastErrno(void);
inline jule::Uintptr _1bb727c76_GetStdHandle(jule::Uintptr _6517_stdh);
inline jule::Bool _1bb728040_CloseHandle(jule::Uintptr _6623_stdh);
inline jule::I32 _1bb7283b4_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat);
inline jule::I32 _1bb7287e3_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode);
inline jule::U32 _1bb728a02_GetLastError(void);
inline jule::U32 _1bb728d76_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff);
inline jule::Bool _1bb729409_DeleteFile(jule::U16* _9422_path);
inline jule::Bool _1bb7296c3_CreateDirectory(jule::U16* _9927_path);
inline jule::Bool _1bb72998c_RemoveDirectory(jule::U16* _10427_path);
inline jule::U32 _1bb729e76_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname);
inline jule::Bool _1bb72a2ea_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode);
inline jule::Bool _1bb72a905_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode);
inline jule::Bool _1bb72ae55_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved);
inline jule::Bool _1bb72b43e_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed);
inline jule::Uintptr _1bb72b9c2_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data);
inline jule::I32 _1bb72bd46_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data);
inline jule::I32 _1bb72c110_FindClose(jule::Uintptr _15514_h);
inline jule::I32 _1bb73c2c9_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1bb73c6a3_Close(jule::I32 _2510_handle);
inline jule::I32 _1bb73ca5a_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1bb73cc8b_Exit(jule::I32 _339_code);
inline jule::Str _1bb74d64d_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1bbb8e033_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1bb76481d_StrBytes(jule::Str _4013_s);
inline jule::Str _1bb764aa4_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1bb764d6d_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1bb48bac8_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1bb48be19_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1bb48c469_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::I32 _1bb48c733_RuneLen(jule::I32 _35212_r);
inline jule::I32 _1bb48cbb7_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r);
inline jule::Slice<jule::U8> _1bb48ceb4_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1bb48d338_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1bb48d8bb_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1bb48db85_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1a690a941_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1a690b887_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1a690c26c_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1a690c536_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1a691300e_Len32(jule::U32 _35014_x);
inline jule::I32 _1a69132c8_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1a6914065_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1a691586e_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1d663696c_f64bits(jule::F64 _612_f);
inline jule::I32 _1d6846088_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Bool _1bbe2630e_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1bbe748bd_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1bd626777_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1c0d59260_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline void _1bb48e8cd__handleRW(jule::Slice<jule::U8>* _1115_b);
inline jule::I32 _1bb48ec96_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf);
inline jule::I32 _1bb49011a_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf);
inline jule::U32 _1bbcd6367_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _1bbcd6532_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Slice<jule::Str> _1bb49686e_args(void);
inline jule::Str _1bb496d25_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I32 _1bb4a24a1_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1c1396ba9_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1c138b9b2_structToStr(_1a6a5cb3c_Builder _17519_x);
inline jule::Str _1bbdce262_toStr(jule::Any _21613_x);
inline jule::Str _1bbdd1440_toStr(jule::Str _21613_x);
inline jule::Str _1bbdd1b8d_toStr(jule::I32 _21613_x);
inline jule::Str _1bbdd6940_toStr(jule::I8 _21613_x);
inline jule::Str _1bbdd4674_toStr(jule::I16 _21613_x);
inline jule::Str _1bbddbd52_toStr(jule::I32 _21613_x);
inline jule::Str _1bbdde838_toStr(jule::I64 _21613_x);
inline jule::Str _1bbde2385_toStr(jule::U32 _21613_x);
inline jule::Str _1bbdded99_toStr(jule::Uintptr _21613_x);
inline jule::Str _1bbde5069_toStr(jule::U8 _21613_x);
inline jule::Str _1bbde74ab_toStr(jule::U16 _21613_x);
inline jule::Str _1bbde98ed_toStr(jule::U32 _21613_x);
inline jule::Str _1bbdebd40_toStr(jule::U64 _21613_x);
inline jule::Str _1bbe0021c_toStr(jule::F32 _21613_x);
inline jule::Str _1bbe00591_toStr(jule::F64 _21613_x);
inline jule::Str _1bbddc22b_toStr(jule::Bool _21613_x);
inline jule::Str _1bd570281_toStr(jule::I32 _21613_x);
inline jule::Str _1bd57b3be_toStr(jule::I32 _21613_x);
inline jule::Str _1bd5b36d1_toStr(jule::I32 _21613_x);
inline jule::Str _1bd6b5be0_toStr(jule::I32 _21613_x);
inline jule::Str _1be30394d_toStr(jule::Ptr<_1acb3d420_Var> _21613_x);
inline jule::Str _1be305ee4_toStr(jule::Ptr<_1acbc00a6_TypeAlias> _21613_x);
inline jule::Str _1be309987_toStr(jule::Ptr<_1ac9ce129_Struct> _21613_x);
inline jule::Str _1be30d24e_toStr(jule::Ptr<_1acaa2351_Fn> _21613_x);
inline jule::Str _1be311d13_toStr(jule::Ptr<_1acaaca65_Trait> _21613_x);
inline jule::Str _1be3153cc_toStr(jule::Ptr<_1acab021b_Enum> _21613_x);
inline jule::Str _1be318985_toStr(jule::Ptr<_1acab1926_TypeEnum> _21613_x);
inline jule::Str _1be336eae_toStr(jule::Ptr<_1ac9cb203_Field> _21613_x);
inline jule::Str _1be34de0a_toStr(jule::Ptr<_1aca3208e_Const> _21613_x);
inline jule::Str _1be368111_toStr(jule::Ptr<_1acaae6b0_EnumItem> _21613_x);
inline jule::Str _1be37970a_toStr(jule::Ptr<_1acaa087c_Param> _21613_x);
inline jule::Str _1bdb1568e_toStr(jule::Str _21613_x);
inline jule::Str _1be4ab166_toStr(jule::Ptr<_1abc42ba7_IdentTypeDecl> _21613_x);
inline jule::Str _1be4c3447_toStr(jule::Ptr<_1aca9a723_TupleExprModel> _21613_x);
inline jule::Str _1be4c5856_toStr(jule::Ptr<_1ac9b363b_TupleExpr> _21613_x);
inline jule::Str _1be4d5745_toStr(jule::Ptr<_1ac9bc1b1_AssignSt> _21613_x);
inline jule::Str _1be4d87e2_toStr(jule::Ptr<_1ac9b2a47_Expr> _21613_x);
inline jule::Str _1be4d7db8_toStr(jule::Ptr<_1ac95e0dc_Postfix> _21613_x);
inline jule::Str _1be4dd709_toStr(jule::Ptr<_1ac95e593_Assign> _21613_x);
inline jule::Str _1be4daccd_toStr(jule::Ptr<_1ac95ea49_MultiAssign> _21613_x);
inline jule::Str _1be4e3de6_toStr(jule::Ptr<_1acb8cded_Data> _21613_x);
inline jule::Str _1be4e7548_toStr(jule::Ptr<_1aca97115_FnCallExprModel> _21613_x);
inline jule::Str _1be52916d_toStr(jule::Ptr<_1ac95d5a3_Label> _21613_x);
inline jule::Str _1be547a0a_toStr(jule::Ptr<_1ac95aa56_Scope> _21613_x);
inline jule::Str _1be552075_toStr(jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _1be5566d9_toStr(jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _21613_x);
inline jule::Str _1be556de3_toStr(jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _1bdb45a21_toStr(jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _1bdb45669_toStr(jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _1bdb48b67_toStr(jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _1bdb4b483_toStr(jule::Ptr<_1aca9ccec_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _1bdb4cb6b_toStr(jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _1bdb50740_toStr(jule::Ptr<_1aca9e4d5_FreeExprModel> _21613_x);
inline jule::Str _1be614016_toStr(jule::Ptr<_1ac95b68e_Conditional> _21613_x);
inline jule::Str _1be61e8e5_toStr(jule::Ptr<_1ac95b98b_InfIter> _21613_x);
inline jule::Str _1be625753_toStr(jule::Ptr<_1ac95be42_WhileIter> _21613_x);
inline jule::Str _1be64cabb_toStr(jule::Ptr<_1ac95c88d_RangeIter> _21613_x);
inline jule::Str _1be65c6d0_toStr(jule::Ptr<_1ac9c2ace_WhileKind> _21613_x);
inline jule::Str _1be66034d_toStr(jule::Ptr<_1ac9c34d6_RangeKind> _21613_x);
inline jule::Str _1be67bbb6_toStr(jule::Ptr<_1ac95cc23_ContSt> _21613_x);
inline jule::Str _1be685a8d_toStr(jule::Ptr<_1ac95dc13_GotoSt> _21613_x);
inline jule::Str _1be6bd06a_toStr(jule::Ptr<_1ac9b4362_IdentExpr> _21613_x);
inline jule::Str _1be6d30d5_toStr(jule::Ptr<_1aca97995_IndexingExprModel> _21613_x);
inline jule::Str _1be383bed_toStr(jule::Ptr<_1ac960286_Match> _21613_x);
inline jule::Str _1be397cab_toStr(jule::Ptr<_1ac9614a7_FallSt> _21613_x);
inline jule::Str _1be3b3d93_toStr(jule::Ptr<_1ac95d0ec_BreakSt> _21613_x);
inline jule::Str _1be3ba51a_toStr(jule::Ptr<_1ac96184d_RetSt> _21613_x);
inline jule::Str _1be3c505d_toStr(jule::Ptr<_1ac9bd811_ScopeTree> _21613_x);
inline jule::Str _1be3c5316_toStr(jule::Ptr<_1ac9c165a_VarDecl> _21613_x);
inline jule::Str _1be3c7318_toStr(jule::Ptr<_1ac9c530c_TypeAliasDecl> _21613_x);
inline jule::Str _1be3cdc9d_toStr(jule::Ptr<_1ac9c4ac0_Conditional> _21613_x);
inline jule::Str _1be3cde8a_toStr(jule::Ptr<_1ac9c22a4_Iter> _21613_x);
inline jule::Str _1be3d2268_toStr(jule::Ptr<_1ac9c3c89_ContSt> _21613_x);
inline jule::Str _1be3d60b3_toStr(jule::Ptr<_1ac9bace7_LabelSt> _21613_x);
inline jule::Str _1be3d8604_toStr(jule::Ptr<_1ac9bb1c1_GotoSt> _21613_x);
inline jule::Str _1be3debe3_toStr(jule::Ptr<_1ac9c60cc_MatchCase> _21613_x);
inline jule::Str _1be3e319c_toStr(jule::Ptr<_1ac9bb4bd_FallSt> _21613_x);
inline jule::Str _1be3e6eb4_toStr(jule::Ptr<_1ac9c38b0_BreakSt> _21613_x);
inline jule::Str _1be3ea182_toStr(jule::Ptr<_1ac9c1a34_RetSt> _21613_x);
inline jule::Str _1be3ed350_toStr(jule::Ptr<_1ac9b341b_UseExpr> _21613_x);
inline jule::Str _1be73b490_toStr(jule::Ptr<_1ac9ca1be_Impl> _21613_x);
inline jule::Str _1be741077_toStr(jule::Ptr<_1ac9c9322_StructDecl> _21613_x);
inline jule::Str _1be74408b_toStr(jule::Ptr<_1ac9c04a0_FnDecl> _21613_x);
inline jule::Str _1be747754_toStr(jule::Ptr<_1ac9c9a5e_TraitDecl> _21613_x);
inline jule::Str _1be74d826_toStr(jule::Ptr<_1ac9c76c7_EnumDecl> _21613_x);
inline jule::Str _1be750e00_toStr(jule::Ptr<_1ac9c8662_TypeEnumDecl> _21613_x);
inline jule::Str _1be8d9907_toStr(jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _21613_x);
inline jule::Str _1be8da188_toStr(jule::Ptr<_1aca9550e_UnaryExprModel> _21613_x);
inline jule::Str _1be91d188_toStr(jule::Ptr<_1acaa540e_FnIns> _21613_x);
inline jule::Str _1be5921e7_toStr(jule::Ptr<_1abc450b6_MapTypeDecl> _21613_x);
inline jule::Str _1be597a7c_toStr(jule::Ptr<_1abc43cc9_TupleTypeDecl> _21613_x);
inline jule::Str _1be5aae69_toStr(jule::Ptr<_1abc44868_ArrTypeDecl> _21613_x);
inline jule::Str _1be5b24c0_toStr(jule::Ptr<_1abc439cc_SlcTypeDecl> _21613_x);
inline jule::Str _1be5b8ae2_toStr(jule::Ptr<_1abc440c6_PtrTypeDecl> _21613_x);
inline jule::Str _1be5becb3_toStr(jule::Ptr<_1abc43647_SptrTypeDecl> _21613_x);
inline jule::Str _1beb9d1a4_toStr(jule::Ptr<_1ac9b4ecd_VariadicExpr> _21613_x);
inline jule::Str _1beba3e35_toStr(jule::Ptr<_1aca974de_SliceExprModel> _21613_x);
inline jule::Str _1bebbde50_toStr(jule::Ptr<_1ac9b7266_FieldExprPair> _21613_x);
inline jule::Str _1bebc7970_toStr(jule::Ptr<_1ac9b8872_KeyValPair> _21613_x);
inline jule::Str _1bec2e6ca_toStr(jule::Ptr<_1ac9b6771_FnCallExpr> _21613_x);
inline jule::Str _1bec423e1_toStr(jule::Ptr<_1aca961d0_AllocStructLitExprModel> _21613_x);
inline jule::Str _1bec5546a_toStr(jule::Ptr<_1aca96763_CastingExprModel> _21613_x);
inline jule::Str _1bec6cd34_toStr(jule::Ptr<_1aca9a04c_StructStaticIdentExprModel> _21613_x);
inline jule::Str _1bec704eb_toStr(jule::Ptr<_1ac9b5b5a_SubIdentExpr> _21613_x);
inline jule::Str _1bec7c23e_toStr(jule::Ptr<_1aca95dd3_StructLitExprModel> _21613_x);
inline jule::Str _1bec9e0b8_toStr(jule::Ptr<_1aca9dd64_RuneExprModel> _21613_x);
inline jule::Str _1becc1ea9_toStr(jule::Ptr<_1ac9d1e84_StructIns> _21613_x);
inline jule::Str _1bed13cdc_toStr(jule::Ptr<_1acbc0d98_Type> _21613_x);
inline jule::Str _1bdee7b92_toStr(jule::Ptr<_1aca9a426_ArrayExprModel> _21613_x);
inline jule::Str _1be031e0c_toStr(jule::Ptr<_1abc42e71_SubIdentTypeDecl> _21613_x);
inline jule::Str _1be03651b_toStr(jule::Ptr<_1ac9b4b04_UnaryExpr> _21613_x);
inline jule::Str _1be0406bd_toStr(jule::Ptr<_1abc4259c_TypeDecl> _21613_x);
inline jule::Str _1be045030_toStr(jule::Ptr<_1ac9b5781_NamespaceExpr> _21613_x);
inline jule::Str _1be04bd17_toStr(jule::Ptr<_1abc4334a_NamespaceTypeDecl> _21613_x);
inline jule::Str _1aa764ad7_toStr(jule::Ptr<_1aca98c82_SlicingExprModel> _21613_x);
inline jule::Str _1beb690b5_toStr(jule::Ptr<_1ac9b909d_SliceExpr> _21613_x);
inline jule::Str _1c010c1a1_toStr(jule::Ptr<_1aca99315_TraitSubIdentExprModel> _21613_x);
inline jule::Str _1c01a6734_toStr(jule::Ptr<_1aca986ee_MapExprModel> _21613_x);
inline jule::Str _1c01b6b2e_toStr(jule::Ptr<_1aca97e4b_AnonFnExprModel> _21613_x);
inline jule::Str _1c01bdbbe_toStr(jule::Ptr<_1ac9b2d11_RangeExpr> _21613_x);
inline jule::Str _1aa77380a_toStr(jule::Ptr<_1ac9b39d2_LitExpr> _21613_x);
inline jule::Str _1aa776d08_toStr(jule::Ptr<_1ac9b3dab_UnsafeExpr> _21613_x);
inline jule::Str _1aa776412_toStr(jule::Ptr<_1ac9b9a0a_IndexingExpr> _21613_x);
inline jule::Str _1aa77b857_toStr(jule::Ptr<_1ac9ba16a_SlicingExpr> _21613_x);
inline jule::Str _1aa77ea8b_toStr(jule::Ptr<_1ac9b53a7_CastExpr> _21613_x);
inline jule::Str _1aa785c90_toStr(jule::Ptr<_1ac9b7a91_StructLit> _21613_x);
inline jule::Str _1aa78b944_toStr(jule::Ptr<_1ac9b8047_BraceLit> _21613_x);
inline jule::Str _1aa78e903_toStr(jule::Ptr<_1ac9b6111_BinaryExpr> _21613_x);
inline jule::Str _1c04ce793_toStr(jule::Ptr<_1aca95135_BinaryExprModel> _21613_x);
inline jule::Str _1c01d19d4_toStr(jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _1c01e73ce_toStr(jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _1c07ae941_toStr(jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _1bd9255d1_toStr(jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _1bd96c33c_toStr(jule::Ptr<_1aca9d4c3_SizeofExprModel> _21613_x);
inline jule::Str _1bd976346_toStr(jule::Ptr<_1aca9db77_AlignofExprModel> _21613_x);
inline jule::Str _1c0cd4edd_toStr(jule::Ptr<_1bb109d73_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _1c0d1d444_toStr(jule::Ptr<_1bb10c969_StrRuneIter> _21613_x);
inline jule::Str _1c0d2d7c8_toStr(jule::Ptr<_1bb10b65a_MutSlicingExprModel> _21613_x);
inline jule::Str _1c0b9693d_toStr(jule::Ptr<_1bb10c590_AppendToSliceExprModel> _21613_x);
inline jule::Str _1c0b9928c_toStr(jule::Ptr<_1bb10c1b6_PushToSliceExprModel> _21613_x);
inline jule::Str _1c0ba7256_toStr(jule::Ptr<_1bb10a406_SwapExprModel> _21613_x);
inline jule::Str _1c0eb4a5d_toStr(jule::Ptr<_1bb10a824_EmptyCompareExprModel> _21613_x);
inline jule::Str _1c0eb77db_toStr(jule::Ptr<_1bb10b0c7_StrCompExprModel> _21613_x);
inline jule::Str _1c0ee2cde_toStr(jule::Ptr<_1bb10b9e0_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _1c10163a6_toStr(jule::Ptr<_1bb10cc66_UnsafeDerefExprModel> _21613_x);
inline jule::Str _1c101cd4c_toStr(jule::Ptr<_1bb10ab21_RefExprModel> _21613_x);
inline jule::Str _1c102247d_toStr(jule::Ptr<_1aca95a3c_StructArgExprModel> _21613_x);
inline jule::Str _1c1028bb0_toStr(jule::Ptr<_1bb10d063_UnsafeCastingExprModel> _21613_x);
inline jule::Str _1c1036827_toStr(jule::Ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _1c1048c35_toStr(jule::Ptr<_1bb10bcdc_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1c12e31bb_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1c13869e0_toStr(_1a6a5cb3c_Builder _21613_x);
inline jule::Str _1c13933d1_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1c1395c0d_toStr(jule::Str _21613_x);
inline jule::Str _1c139ac46_toStr(jule::Str _21613_x);
inline void _1bb4a364a_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline jule::I32 __jule_runeCount(jule::Str _10514_s);
inline void _1bb4a6054_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Bool _1bb4a7000__coSpawn(void* _1020_func, void* _1035_args);
inline jule::U64 _1bb508b56_hash128to64(_1bb50879e_u128 _4316_sum);
inline jule::U64 _1bb508e64_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1bb50922d_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1bb50956e_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1bb5098b0_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1bb509c34_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1bb50a163_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1bb50a5e7_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1bb50879e_u128 _1bb50a99e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1bb50879e_u128 _10342_seed);
inline _1bb50879e_u128 _1bb50b0ed_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1bb50879e_u128 _1bb50b52c_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1bb50879e_u128 _1bb50b95b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1bb50879e_u128 _16048_seed);
inline jule::U64 _1bb50bc25_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1a6919ee4_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1a691a302_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1a691a5bb_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1a691a90c_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1a691ab93_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1a691ae5c_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1a691b16b_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1a691b545_splitHash(jule::U64 _9414_h);
inline jule::U32 _1a691b842_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1a691bbb6_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline jule::I32 _1a6b26d16_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _1a6b27553_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _1a6b278c7_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1a6b403d4_Getwd(void);
inline jule::Bool _1a8dccd89_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1a8e4399e_is16(jule::Slice<_1a8e41c11_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1a8e43d23_is32(jule::Slice<_1a8e4223e_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1a8e4462b_isExcludingLatin(jule::Ptr<_1a8e426b2_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1a8e4486d_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1a8e45066_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1a8e4175a_CaseRange> _31336_cr);
inline jule::Ptr<_1a8e4175a_CaseRange> _1a8e453da_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1a8e4175a_CaseRange> _33329_caseRange);
inline jule::I32 _1a8e456a4_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1a8e45b27_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1a8e45ee0_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1a8e46364_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1a8e4681a_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1a8e46b5b_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1a8e4708a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1a8e4740e_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1a8e48be6_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1a8e4906a_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1a8e49994_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1a8e4a137_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _1a8e4a4ab_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1a8e4a830_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1a8e4b39c_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _1a8e4b721_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1a8e4bc0a_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _1a8e4c139_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1a8e4cdb5_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1a8e4d239_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1a8e4d844_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Bool _1a8e5034b_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Bool _1a721205a_IsPathSep(jule::U8 _4914_c);
inline jule::Bool _1a7212368_isSlash(jule::U8 _5312_c);
inline jule::U8 _1a7212632_toUpper(jule::U8 _5512_c);
inline jule::I32 _1a7212c09_volumeNameLen(jule::Str _8318_path);
inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1a7212ec3_cutPath(jule::Str _12012_path);
inline __jule_tuple_str__jule_tuple_bool _1a721328c_fullPath(jule::Str _12913_name);
inline __jule_tuple_str__jule_tuple_bool _1a7213666_abs(jule::Str _14612_path);
inline jule::Str _1a72138a8_join(jule::Slice<jule::Str> _1609_elem);
inline jule::Str _1a8e518d0_Clean(jule::Str _10914_path);
inline jule::Str _1a8e51ea7_FromSlash(jule::Str _21214_path);
inline jule::Str _1a8e522e8_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1a8e5257e_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1a8e52848_Abs(jule::Str _2468_path);
inline jule::Str _1a8e52b12_Base(jule::Str _25213_path);
inline jule::Str _1a8e52edb_Dir(jule::Str _2838_path);
inline jule::Str _1a8e5322d_VolumeName(jule::Str _30115_path);
inline void _1a6b2b5ce_appendEscapeArg(_1a6a5cb3c_Builder* _10225_s, jule::Str _10246_arg);
inline jule::Str _1a6b2b898_makeCmdLine(jule::Slice<jule::Str> _16316_args);
inline jule::Exceptional<jule::Slice<jule::U16>> _1a6b2bc72_createEnvBlock(jule::Slice<jule::Str> _17919_env);
inline jule::I32 _1a6b2beb4_cmdErrorFromCode(jule::I32 _20221_code);
inline jule::I32 _1a6b2c1c3_getLastCmdError(void);
inline jule::I32 _1a6b2c734_getLastFsErrorWindows(void);
inline jule::I32 _1a6b2ccb7_getLastOsError(void);
inline jule::Bool _1a6b35561_isConsoleHandle(jule::Uintptr _9020_handle);
inline void _1a6b4363a_Exit(jule::I32 _119_code);
inline jule::Str _1a6b4389e_Executable(void);
inline jule::Slice<jule::Str> _1a6b43a69_Args(void);
inline jule::Exceptional<jule::Str> _1a6b43ecb_Getwd(void);
inline jule::I32 _1a8e58e37_getLastFsError(void);
inline jule::Bool _1a6a21e53_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1a6a2222d_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1a6a224e7_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1a6a6c355_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args);
inline jule::Str _1a6a6c663_argToStr(jule::Any _32813_arg);
inline jule::I32 _1a6a6c92c_findNextFmt(jule::Str _34116_fmt);
inline jule::Str _1a6a6cce5_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args);
inline jule::Bool _1a6a6dbe7_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1a6a70116_IsWindows(jule::Str _3714_os);
inline jule::Bool _1a6a70424_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1a6a706dd_IsLinux(jule::Str _4312_os);
inline jule::Bool _1a6a70a2e_IsI386(jule::Str _4611_arch);
inline jule::Bool _1a6a70cb5_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1a6a7107e_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1a6a71348_IsUnix(jule::Str _5511_os);
inline jule::Bool _1a6a71722_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1a6a71964_Is64Bit(jule::Str _6112_arch);
inline void _1a8e5ad29_init(void);
inline jule::U32 _1aa4b66e6_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1aa4b6a04_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1aa4b6cbd_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1aa4b710e_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1aa4b9672_Frexp(jule::F64 _4714_f);
inline jule::F64 _1aa4bead9_NaN(void);
inline jule::Bool _1aa4bede7_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1aa4c01b1_Inf(jule::I32 _618_sign);
inline jule::Bool _1aa4c0579_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1aa4c0843_normalize(jule::F64 _8214_x);
inline jule::F64 _1aa4c2317_Log(jule::F64 _1118_x);
inline jule::F64 _1aa4c2bec_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1aa4c9770_Modf(jule::F64 _449_f);
inline jule::F64 _1aa4ca078_Log2(jule::F64 _449_x);
inline jule::Str _1aa503788_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1aa503d71_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1aa50457a_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1aa502622_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1aa504c51_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1aa503205_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1aa50516e_roundShortest(_1aa515ba7_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1aa502622_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1aa505713_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1aa503205_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1aa505bec_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1aa503205_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1aa5063a1_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1aa502622_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1aa506a33_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1aa502622_floatInfo* _51232_flt);
inline jule::I32 _1aa506da7_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1aa50722b_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1aa507ccb_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a940b54e_ConvError _1aa50824e_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1aa50867d_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1aa508b34_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1aa5097c2_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1aa509bac_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1aa50b8d4_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1aa50bbe2_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1aa50beab_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1aa50da07_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1aa50de36_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a940b54e_ConvError _1aa50e4ca_atofHex(_1aa502622_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50e8a4_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50eae6_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50ee6a_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1aa5102de_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1aa510b19_ryuFtoaFixed32(_1aa503205_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1aa5110ae_ryuFtoaFixed64(_1aa503205_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1aa5118ea_formatDecimal(_1aa503205_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1aa511dc3_ryuFtoaShortest(_1aa503205_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1aa502622_floatInfo* _26168_flt);
inline jule::I32 _1aa512159_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1aa512423_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aa512852_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1aa502622_floatInfo* _3963_flt);
inline void _1aa512ea1_ryuDigits(_1aa503205_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1aa513622_ryuDigits32(_1aa503205_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aa513a51_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aa513e80_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1aa514304_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1aa5145bd_divmod1e9(jule::U64 _60214_x);
inline void _1aa517505_trim(_1aa515ba7_decimal* _27414_a);
inline void _1aa5177e1_rightShift(_1aa515ba7_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1aa517c97_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1aa518050_leftShift(_1aa515ba7_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1aa5183c4_shouldRoundUp(_1aa515ba7_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1aa519a9b_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1aa519e64_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1aa51a22d_Itoa(jule::I32 _819_i);
inline jule::Str _1aa51a56e_small(jule::I32 _8610_i);
inline jule::Bool _1aa51a805_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1aa51ad99_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1aa51c890_Throw(jule::Str _910_msg);
inline jule::Bool _1abc2c2bd_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _1abc2c5cb_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _1abc2cbd6_IsStr(jule::Str _36310_k);
inline jule::Bool _1abc2ce6c_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1abc2d236_IsRune(jule::Str _37011_k);
inline jule::Bool _1abc2db1b_IsFloat(jule::Str _37912_k);
inline jule::Bool _1abc2ddd5_IsNum(jule::Str _38710_k);
inline jule::Bool _1abc2e468_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1abc2e732_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1abc2ecb5_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1abc302b0_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1abc30733_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1abc309ec_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1abc30cb6_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1abc31080_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1abc31349_IsHex(jule::I32 _46710_r);
inline jule::Bool _1abc31613_IsAssign(jule::U32 _48213_id);
inline jule::Bool _1abc318cc_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _1abc31b96_IsAssignOp(jule::U32 _50415_id);
inline _1a6a6bde3_Log _1abc356b1_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1abc32636_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1abc35a79_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1abc35ded_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _1abc362b6_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _1abc3663a_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _1abc369ae_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _1abc36d33_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _1abc372b7_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _1abc37509_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1abc377c3_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1abc37b47_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _1abc37ebb_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _1abc38340_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _1abc386b4_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _1abc38a38_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _1abc39033_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1abc3920e_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1abc39561_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _1abc3982a_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1abc39ae4_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1abc39dad_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1abc3a177_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1a6a6bde3_Log> _1abc4016b_Lex(jule::Ptr<_1abc32636_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _1aca927b4_lshiftUnsig(_1aca3208e_Const* _58821_c, _1aca3208e_Const* _58832_x);
inline void _1aca92ae4_rshiftUnsig(_1aca3208e_Const* _59421_c, _1aca3208e_Const* _59432_x);
inline jule::Str _1ac9231b1_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1ac92347a_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1ac9237bb_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1ac923a52_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1ac923d1b_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1ac924921_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1ac924bda_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1ac924ea4_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1ac92526d_BitSizeOfUint(jule::U64 _19718_x);
inline void _1ac925416_UpdateTarget(void);
inline void _1ac92558c_init(void);
inline jule::I64 _1ac929151_MinI(jule::Str _6113_k);
inline jule::I64 _1ac92945e_MaxI(jule::Str _7913_k);
inline jule::U64 _1ac929728_MaxU(jule::Str _9713_k);
inline jule::F64 _1ac929a69_Min(jule::Str _11512_k);
inline jule::F64 _1ac929d00_Max(jule::Str _13312_k);
inline jule::Bool _1ac92ae22_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1ac92b230_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1ac92b4e9_IsInt(jule::Str _4610_k);
inline jule::Bool _1ac92b83a_IsFloat(jule::Str _5112_k);
inline jule::Bool _1ac92bac1_IsNum(jule::Str _5610_k);
inline jule::Bool _1ac92bd8a_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1ac9a50de_FindModuleFile(jule::Slice<_1a6b89818_Dir>* _1420_dirents);
inline jule::Str _1ac9a53b9_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_1a6a6bde3_Log> _1ac9a5683_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _1ac9a5e25_IsPub(jule::Str _910_ident);
inline jule::Bool _1acb74962_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1acb5b3e9_ToRune(jule::Str _2015_lit);
inline jule::Str _1acb76887_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1acb76bc8_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1acb76e5e_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1acb772d3_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1acb77679_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1acc381eb_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _1acc3ec91_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1acc4007c_FmtByDefault(_1a6a5cb3c_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1acc4049a_applyFmtByDefault(_1a6a5cb3c_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1acc408b8_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a6a5cb3c_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1acc40c3c_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1acc42dd7_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1acaa2351_Fn> _1abd166c6_runtimeFindFn(jule::Ptr<_1ac98b8cd_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1ac9ce129_Struct> _1abd16c26_runtimeFindStruct(jule::Ptr<_1ac98b8cd_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1acaa76db_parameterUsesGenerics(jule::Ptr<_1acaa42a9_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1acb8cded_Data> _1ac951ba1_buildAsComptimeMethodData(jule::Ptr<_1acaa540e_FnIns>* _203035_f);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac951db0_findComptimePackage(jule::Ptr<_1ac9a8c2a_sema>* _203829_s);
inline jule::Ptr<_1acb8cded_Data> _1ac952234_buildComptimeTypeInfoData(jule::Ptr<_1ac9a8c2a_sema>* _204435_s, jule::Ptr<_1acbc0d98_Type>* _204450_t);
inline jule::Ptr<_1acb8cded_Data> _1ac952575_buildComptimeValue(jule::Ptr<_1acb8cded_Data>* _205228_d);
inline jule::Str _1ac955446_toStrConstraints(jule::Ptr<_1acbbe4b2_InsGeneric> _14321_g);
inline jule::Bool _1ac95580e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1acbc0d98_Type>* _15434_g);
inline jule::Bool _1ac955ac8_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac9584b0_newScopeCheckerBase(jule::Ptr<_1ac9a8c2a_sema>* _3229_s, jule::Ptr<_1acaa540e_FnIns> _3243_owner);
inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac958878_newScopeChecker(jule::Ptr<_1ac9a8c2a_sema>* _4025_s, jule::Ptr<_1acaa540e_FnIns> _4039_owner);
inline jule::Ptr<_1ac961d04_scopeLabel> _1ac958bec_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ac9631bd_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1acb8cded_Data>> _1ac95903d_getDatasFromTupleData(jule::Ptr<_1acb8cded_Data>* _6231_d);
inline jule::Bool _1ac9597ad_checkMut(jule::Ptr<_1ac9a8c2a_sema>* _9718_s, jule::Ptr<_1acb8cded_Data>* _9729_left, jule::Ptr<_1acb8cded_Data> _9746_right, jule::Ptr<_1abc2ba81_Token> _9760_op);
inline jule::Bool _1ac959c97_checkAssign(jule::Ptr<_1ac9a8c2a_sema>* _11621_s, jule::Ptr<_1acb8cded_Data>* _11636_left, jule::Ptr<_1acb8cded_Data> _11653_right, jule::Ptr<_1abc2ba81_Token> _11667_op);
inline jule::Bool _1ac95a171_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1ac95a3b3_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U32 _1ac97591c_removeEqFromOp(jule::U32 _216519_op);
inline void _1ac975b4d_makeComptimeRange(jule::Ptr<_1acb8cded_Data>* _219427_d);
inline jule::Bool _1ac975e17_canComptimeMatch(jule::Ptr<_1acb8cded_Data>* _221726_d);
inline jule::Bool _1ac9761d1_stmtIsDef(jule::Any* _222515_stmt);
inline jule::I32 _1ac976555_countMatchType(jule::Ptr<_1ac960286_Match>* _223720_m, jule::Ptr<_1acbc0d98_Type>* _223732_t);
inline jule::Ptr<_1acbc85a9_TypeSym> _1ac97b219_buildType(jule::Ptr<_1abc4259c_TypeDecl> _6918_t);
inline jule::Ptr<_1acb8e075_Value> _1ac97b527_buildExpr(jule::Ptr<_1ac9b2a47_Expr> _7818_expr);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac97b7e1_buildTypeAlias(jule::Ptr<_1ac9c530c_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_1ac9cb203_Field> _1ac97bb32_buildField(jule::Ptr<_1ac9c892b_FieldDecl> _9819_decl);
inline jule::Slice<jule::Ptr<_1ac9cb203_Field>> _1ac97bdb8_buildFields(jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>>* _10921_decls);
inline jule::Ptr<_1ac9ce129_Struct> _1ac97c182_buildStruct(jule::Ptr<_1ac9c9322_StructDecl> _11720_decl);
inline jule::Ptr<_1acaa087c_Param> _1ac97c44b_buildParam(jule::Ptr<_1ac9be04d_ParamDecl> _12919_decl);
inline jule::Slice<jule::Ptr<_1acaa087c_Param>> _1ac97c825_buildParams(jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>>* _14021_decls);
inline jule::Ptr<_1acaa02b6_RetType> _1ac97ca67_buildRetType(jule::Ptr<_1abc45490_RetTypeDecl> _14821_decl);
inline jule::Ptr<_1acaa2351_Fn> _1ac97cd31_buildFunc(jule::Ptr<_1ac9c04a0_FnDecl> _15818_decl);
inline jule::Slice<jule::Ptr<_1acaa2351_Fn>> _1ac97d0ea_buildMethods(jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>>* _17622_decls);
inline jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>> _1ac97d3b4_buildTraitInherits(jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _18428_inherits);
inline jule::Ptr<_1acaaca65_Trait> _1ac97d67d_buildTrait(jule::Ptr<_1ac9c9a5e_TraitDecl> _19219_decl);
inline jule::Ptr<_1acaae6b0_EnumItem> _1ac97d947_buildEnumItem(jule::Ptr<_1ac9c6b16_EnumItemDecl> _20222_decl);
inline jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _1ac97dc11_buildEnumItems(jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>>* _21024_decls);
inline jule::Ptr<_1acab021b_Enum> _1ac97e20b_buildEnum(jule::Ptr<_1ac9c76c7_EnumDecl> _21818_decl);
inline jule::Ptr<_1acab134e_TypeEnumItem> _1ac97e3d7_buildTypeEnumItem(jule::Ptr<_1ac9c8002_TypeEnumItemDecl> _22826_decl);
inline jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _1ac97e67e_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>>* _23628_decls);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac97e948_buildTypeEnum(jule::Ptr<_1ac9c8662_TypeEnumDecl> _24422_decl);
inline jule::Ptr<_1acb3d420_Var> _1ac97ec12_buildVar(jule::Ptr<_1ac9c165a_VarDecl> _25317_decl);
inline jule::Slice<jule::Ptr<_1acb3d420_Var>> _1ac97eecb_buildVars(jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _27018_decls);
inline jule::Ptr<_1ac956447_Impl> _1ac980295_buildImpl(jule::Ptr<_1ac9ca1be_Impl> _27818_decl);
inline jule::Bool _1ac986ab5_isImplicitImport(jule::Ptr<_1ac98b8cd_ImportInfo> _79121_imp);
inline jule::Ptr<_1acaa8654_SymTab> _1ac988c1b_findVarFileInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _4430_files, jule::Ptr<_1acb3d420_Var>* _4449_v);
inline jule::Ptr<_1acb3d420_Var> _1ac98918e_findVarInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac9895bd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1ac9ce129_Struct> _1ac989a74_findStructInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1acaa2351_Fn> _1ac989e70_findFnInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1acaaca65_Trait> _1ac98a2e4_findTraitInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1acab021b_Enum> _1ac98a668_findEnumInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1acab1926_TypeEnum> _1ac98aaec_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1ac99162a_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1ac9a65da_isValidModelForRef(jule::Any* _1528_m);
inline _1a6a6bde3_Log _1ac9a6b18_compilerErr(jule::Ptr<_1abc2ba81_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _1ac9a6e04_appendRetVars(jule::Slice<jule::Ptr<_1acb3d420_Var>>* _6323_dest, jule::Ptr<_1acaa540e_FnIns>* _6342_f);
inline void _1ac9a7234_appendParamVars(jule::Slice<jule::Ptr<_1acb3d420_Var>>* _9325_dest, jule::Ptr<_1acaa540e_FnIns>* _9344_f);
inline void _1ac9a7520_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _15334_dest, jule::Ptr<_1acaa540e_FnIns>* _15359_f);
inline jule::Ptr<_1acaa8654_SymTab> _1ac9a7894_findFile(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _19418_files, jule::Ptr<_1abc32636_Fileset>* _19437_handler);
inline void _1ac9a7c3a_pushSuggestion(_1a6a6bde3_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args);
inline void _1acb3b253_pushImplemented(jule::Ptr<_1acaaca65_Trait> _280524_t, jule::Ptr<_1ac9ce129_Struct>* _280540_d);
inline void _1acb3b53e_pushImplements(jule::Ptr<_1ac9ce129_Struct>* _282324_s, jule::Ptr<_1acaaca65_Trait> _282340_t);
inline void _1acb3b990_pushRuntimeToStr(jule::Ptr<_1ac9a8c2a_sema>* _284126_s, jule::Ptr<_1acbc0d98_Type>* _284141_t, jule::Ptr<_1abc2ba81_Token>* _284156_token, jule::Ptr<_1ac979855_ReferenceStack> _28426_refers);
inline jule::Bool _1acb3bc59_isValidImpAlias(jule::Str _285924_alias);
inline jule::Bool _1acb77cc8_traitHasReferenceReceiver(jule::Ptr<_1acaaca65_Trait>* _1631_t);
inline jule::Bool _1acb78191_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1acb8cded_Data>* _3133_d);
inline jule::Bool _1acb78515_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1acb8cded_Data>* _3630_d);
inline jule::Bool _1acb788cd_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1acb8cded_Data>* _5932_d);
inline jule::Bool _1acb78c52_intAssignable(jule::Str _8818_kind, jule::Ptr<_1acb8cded_Data>* _8830_d);
inline void _1acb85247_checkMutRiskOfStructLit(jule::Ptr<_1ac9a8c2a_sema>* _90933_s, jule::Ptr<_1aca95dd3_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1acbc0d98_Type> _1acb8b160_lenKind(void);
inline jule::Bool _1acb8b4b2_isGoodValueToInfer(jule::Ptr<_1acb8cded_Data>* _141424_d);
inline jule::Ptr<_1abc419b9_Directive> _1acbb7620_findDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _436523_directives, jule::Str _436554_d);
inline jule::Any _1acbb79d8_findBuiltinsImport(jule::Str* _437424_ident, jule::Ptr<_1ac98b8cd_ImportInfo> _437436_imp);
inline void _1acbb7c19_fitBitsize(jule::Ptr<_1acb8cded_Data>* _438320_d);
inline void _1acbb8049_makeStructLitAlloc(jule::Ptr<_1acb8cded_Data>* _441228_d, jule::Ptr<_1aca95dd3_StructLitExprModel>* _441243_lit);
inline jule::Ptr<_1acb3d420_Var> _1acbb83bd_buildErrorVar(jule::Ptr<_1ac95aa56_Scope>* _442323_s, jule::Ptr<_1ac9b6771_FnCallExpr>* _442339_fc);
inline jule::Any _1acbb8742_findBuiltinsSema(jule::Str* _443822_ident, jule::Ptr<_1ac9a8c2a_sema> _443838_s);
inline jule::Bool _1acbb8a0b_isOkForShifting(jule::Ptr<_1acb8cded_Data>* _445325_d);
inline jule::Bool _1acbb8dd5_isInstancedStruct(jule::Ptr<_1ac9d1e84_StructIns> _447022_s);
inline jule::Bool _1acbb91d2_isPtrArithmeticCompatible(jule::Ptr<_1acb8cded_Data>* _447435_l, jule::Ptr<_1acb8cded_Data>* _447450_r);
inline void _1acbb96dd_applyRuntimeToStr(jule::Ptr<_1ac9a8c2a_sema>* _449527_s, jule::Ptr<_1acbc0d98_Type>* _449542_from, jule::Ptr<_1acbc0d98_Type>* _449560_to, jule::Ptr<_1abc2ba81_Token>* _44967_token, jule::Ptr<_1ac979855_ReferenceStack> _449633_refers);
inline void _1acbb9be9_applyCastKindModel(jule::Ptr<_1ac9a8c2a_sema>* _451028_s, jule::Ptr<_1acb8cded_Data>* _451043_d, jule::Ptr<_1acbc0d98_Type>* _451058_t, jule::Ptr<_1abc2ba81_Token>* _45117_token, jule::Ptr<_1ac979855_ReferenceStack> _451133_refers);
inline void _1acbba205_applyCastKind(jule::Ptr<_1ac9a8c2a_sema>* _452123_s, jule::Ptr<_1acb8cded_Data>* _452138_d, jule::Ptr<_1acbc0d98_Type>* _452153_t, jule::Ptr<_1abc2ba81_Token>* _45227_token, jule::Ptr<_1ac979855_ReferenceStack> _452233_refers);
inline jule::Ptr<_1acb8cded_Data> _1acbba414_buildVoidData(void);
inline jule::Str _1acbba8ed_checkDataForIntegerIndexing(jule::Ptr<_1ac9a8c2a_sema>* _453337_s, jule::Ptr<_1acb8cded_Data>* _453352_d, jule::Ptr<_1abc2ba81_Token>* _45347_token, jule::Ptr<_1ac979855_ReferenceStack> _453433_refers);
inline void _1acbbae09_applyCastModelByEnum(jule::Ptr<_1ac9a8c2a_sema>* _455930_s, jule::Ptr<_1acb8cded_Data>* _455945_d, jule::Ptr<_1acab021b_Enum> _455959_e, jule::Ptr<_1abc2ba81_Token>* _45607_token, jule::Ptr<_1ac979855_ReferenceStack> _456033_refers);
inline void _1acbbb426_castConstByType(jule::Str* _456721_t, jule::Ptr<_1acb8cded_Data>* _456734_d);
inline void _1acbbb602_updateModelToGenericIns(jule::Any* _460133_m, jule::Ptr<_1acaa540e_FnIns>* _460152_f);
inline jule::Bool _1acbbb976_pushSubIdentFromExpr(jule::Any _461229_expr, jule::Ptr<_1abc42e71_SubIdentTypeDecl>* _461255_t);
inline jule::Str _1acbbbc40_constoa(jule::Ptr<_1aca3208e_Const>* _463513_c);
inline jule::Ptr<_1acb8cded_Data> _1acbbc2d4_evalEnumStatic(jule::Ptr<_1ac9a8c2a_sema>* _464624_s, jule::Ptr<_1acab021b_Enum>* _464639_enm, jule::Ptr<_1acaae6b0_EnumItem>* _464656_item, jule::Ptr<_1abc2ba81_Token>* _46477_token, jule::Ptr<_1ac979855_ReferenceStack> _464733_refers);
inline jule::Ptr<_1aca95dd3_StructLitExprModel> _1acbbc59d_isLitBased(jule::Any* _466420_m);
inline void _1acbbc889_makeImplicitDeref(jule::Ptr<_1acb8cded_Data>* _468127_d, jule::Ptr<_1abc2ba81_Token> _468141_baseToken);
inline void _1be05a2cb_updateRefer(jule::Ptr<_1ac979855_ReferenceStack> _469223_ref, jule::Ptr<_1acaa540e_FnIns>* _469246_old, jule::Ptr<_1acaa540e_FnIns>* _469259_new);
inline void _1acbbd01b_makeVariadic(jule::Ptr<_1acb8cded_Data>* _470022_d, jule::Ptr<_1acbc0d98_Type> _470036_elem);
inline jule::Bool _1acbbd44a_isVarCaptured(jule::Ptr<_1ac9631bd_scopeChecker> _471418_r, jule::Ptr<_1ac9631bd_scopeChecker> _471440_s, jule::Ptr<_1acb3d420_Var> _471458_v);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1acbbd7be_findNamespace(jule::Trait _473122_lookup, jule::Str _473138_namespace);
inline jule::Bool _1acbdc04b_kindUsesGenerics(jule::Ptr<_1acbc0d98_Type>* _173126_k, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _173137_generics);
inline jule::Bool _1acbdc414_hasDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _174122_directives, jule::Str _174153_tag);
inline jule::Bool _1acbdc6cd_canGetPtr(jule::Ptr<_1acb8cded_Data>* _175019_d);
inline jule::Bool _1acbdca1e_isValidForSptrType(jule::Ptr<_1acbc0d98_Type>* _175328_t);
inline jule::Bool _1acbdcca5_isValidForRef(jule::Ptr<_1acbc0d98_Type>* _176223_t);
inline jule::Bool _1acbdd06e_isBuiltinStrConvertable(jule::Ptr<_1acbc0d98_Type>* _176533_t);
inline jule::Ptr<_1acbc8eb1_Prim> _1acbdd338_buildPrimType(jule::Str _176918_kind);
inline void _1acbddb96_applyImplicitCast(jule::Ptr<_1ac9a8c2a_sema>* _179727_s, jule::Ptr<_1acbc0d98_Type>* _179742_dest, jule::Ptr<_1acb8cded_Data>* _179760_d, jule::Ptr<_1abc2ba81_Token>* _17987_token, jule::Ptr<_1ac979855_ReferenceStack> _179833_refers);
inline jule::Bool _1acbdde60_validTypeForXof(jule::Ptr<_1acbc0d98_Type>* _182725_t);
inline __jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log _1acbe1e63_buildSymbols(jule::Ptr<_1abc40644_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ac98085b_symBuilder> _1667_owner);
inline void _1acbe2293_collectImplicitImports(jule::Ptr<_1ac9a8c2a_sema>* _3132_s, jule::Ptr<_1acaa8654_SymTab>* _3147_file);
inline __jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log _1acbe26c2_analyzePackage(jule::Slice<jule::Ptr<_1abc40644_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log _1acbe2b78_AnalyzePackage(jule::Slice<jule::Ptr<_1abc40644_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_1acaa540e_FnIns> _1acc43844_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1acc43b30_primTypeAlias(jule::Ptr<_1acbc0d98_Type>* _5723_k);
inline jule::Ptr<_1acb3d420_Var> _1acc474d5_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1acbc00a6_TypeAlias> _1acc47826_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1acc47aac_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1acc47d76_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _1acc48140_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _1acc48519_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _1acc48816_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_1acb8cded_Data> _1acc48b8a_builtinCallerError(jule::Ptr<_1acb8edbc_eval>* _27328_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _27343_fc);
inline jule::Ptr<_1acb8cded_Data> _1acc490b9_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _30428_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _30443_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc494e8_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _33130_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _33145_fc, jule::Ptr<_1acb8cded_Data>* _33172_d);
inline jule::Ptr<_1acb8cded_Data> _1acc49927_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _34326_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _34341_fc, jule::Ptr<_1acb8cded_Data>* _34368_d);
inline jule::Ptr<_1acb8cded_Data> _1acc49d56_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40528_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40543_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc4a285_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _43127_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _43142_fc, jule::Ptr<_1acb8cded_Data>* _43169_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4a8e5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _48229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _48244_fc, jule::Ptr<_1acb8cded_Data>* _48271_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4acbe_callerCopySlice(jule::Ptr<_1acb8cded_Data>* _60225_dest, jule::Ptr<_1acb8edbc_eval>* _60243_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _60258_fc, jule::Ptr<_1acb8cded_Data>* _60285_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4b1ed_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _63627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _63642_fc, jule::Ptr<_1acb8cded_Data>* _63669_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4b572_callerLenSlice(jule::Ptr<_1acb8cded_Data>* _66124_expr, jule::Ptr<_1acb8cded_Data>* _66142_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4b8e6_callerLenMap(jule::Ptr<_1acb8cded_Data>* _66922_expr, jule::Ptr<_1acb8cded_Data>* _66940_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4bc6a_callerLenArr(jule::Ptr<_1acb8cded_Data>* _67722_expr, jule::Ptr<_1acb8cded_Data>* _67740_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4c0de_callerLenStr(jule::Ptr<_1acb8cded_Data>* _68422_expr, jule::Ptr<_1acb8cded_Data>* _68440_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4c463_callerLenComptime(jule::Ptr<_1acb8cded_Data>* _69727_d, jule::I32 _69737_n);
inline jule::Ptr<_1acb8cded_Data> _1acc4c892_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _70426_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _70441_fc, jule::Ptr<_1acb8cded_Data>* _70468_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4cc16_callerCapSlice(jule::Ptr<_1acb8cded_Data>* _74424_expr, jule::Ptr<_1acb8cded_Data>* _74442_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4d145_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _75226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _75241_fc, jule::Ptr<_1acb8cded_Data>* _75268_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4d62e_callerDeleteMap(jule::Ptr<_1acb8edbc_eval>* _77525_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _77540_fc, jule::Ptr<_1acb8cded_Data>* _77567_expr, jule::Ptr<_1acb8cded_Data>* _77585_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4da5d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _80429_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _80444_fc, jule::Ptr<_1acb8cded_Data>* _80471_d);
inline jule::Ptr<_1acb8cded_Data> _1acc4de8c_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _82740_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _82755_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc4e3bb_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _86341_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _86356_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc4e7ea_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _88338_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _88353_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc4ee6b_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _89538_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _89553_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc5039a_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _90839_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _90854_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc507c9_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _92143_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _92158_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc50c08_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98135_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98150_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc51137_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100636_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100651_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc51566_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103133_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103148_fc, jule::Ptr<_1acb8cded_Data>* );
inline jule::Ptr<_1acb8cded_Data> _1acc51995_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105444_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105459_fc, jule::Ptr<_1acb8cded_Data>* _105486_d);
inline jule::Ptr<_1ac6ac588_FileInfo> _1ad5ce61e_ParseFile(jule::Ptr<_1abc32636_Fileset> _2318_f);
inline __jule_tuple_x_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log _1ad5cebe6_parseFileset(jule::Ptr<_1abc32636_Fileset> _5521_f);
inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5d0576_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ad5d090b_isSt(jule::Ptr<_1abc2ba81_Token> _149_current, jule::Ptr<_1abc2ba81_Token> _1433_prev);
inline jule::Bool _1ad5d0c80_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1ad5d1148_nextStPos(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool _1ad5d14bc_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _1ad5d1ba4_splitStmts(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _11720_tokens);
inline jule::Bool _1ad5ea1ea_isTypeOp(jule::U32* _87114_id);
inline jule::Bool _1ad5ea508_isTypeRange(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1ad5ea7c2_getBlockExpr(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _91122_tokens);
inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token _1ad5eab8a_splitDelim(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _94320_tokens, jule::U32 _94345_delim);
inline jule::I32 _1ad5eae54_findLowestPrecOp(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _98222_tokens);
inline jule::Ptr<_1ac9b4362_IdentExpr> _1ad5eb21d_buildIdentExpr(jule::Ptr<_1abc2ba81_Token>* _104724_token);
inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_int _1ad5eb4d7_getRangeExprTokens(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _105528_tokens);
inline jule::Bool _1ad5eb8b1_isAnonFnHead(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _107818_tokens);
inline jule::Bool _1ad5ec560_checkAssignTokens(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _1623_tokens);
inline _1a6a6bde3_Log _1ad5ed51c_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1abc32636_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1ad5eda4a_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3063_tokens);
inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token _1ad5edd14_rangeLast(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log _1ad5ee2ba_parts(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _1ad5ee551_getCloseOfBrace(jule::U32 _12820_left);
inline _1a6a6bde3_Log _1ad5ee980_compilerErr(jule::Ptr<_1abc2ba81_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1ad5eed26_pushSuggestion(_1a6a6bde3_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1abc4259c_TypeDecl> _1ad610c8d_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1acdebd1b_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1acdec0e6_checkArch(jule::Str _2814_arg);
inline void _1ace18563_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1ace187d8_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1ace18ac4_initVars(jule::Slice<jule::Str>* _5518_vars, _1ace18244_CompileInfo* _5532_info);
inline jule::I32 _1ace18e8c_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _1ad6150b1_readBuff(jule::Str _1713_path);
inline _1a6a6bde3_Log _1ad6152ae_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1acaa2351_Fn> _1acc51cb4_RuntimeFindFn(jule::Ptr<_1ac98b8cd_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_1ac9ce129_Struct> _1acc5217c_RuntimeFindStruct(jule::Ptr<_1ac98b8cd_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline void _1ad619bcb_pushPasses(jule::Ptr<_1ac98e150_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1ad61a094_getAllUniquePasses(jule::Ptr<_1ac98e150_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _14053_uses);
inline _1ace18244_CompileInfo _1ad61a2a3_buildCompileInfo(void);
inline void _1ad61a55b_pushRuntimeToAST(jule::Ptr<_1abc40644_AST>* _17926_f);
inline void _1ad61aca9_IterPackages(jule::Ptr<_1ad618328_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ac98e150_Package>*> _731_f);
inline void _1ad61b02e_IterFiles(jule::Ptr<_1ac98e150_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1acaa8654_SymTab>*> _1640_f);
inline void _1ad61b31a_IterTraitMethods(jule::Ptr<_1acaaca65_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1acaa2351_Fn>*> _2443_f);
inline jule::Bool _1ad61d55e_IsForwarded(jule::Ptr<_1ac95aa56_Scope>* _1217_s);
inline jule::Bool _1ad61d73a_IsExprComesFromBind(jule::Ptr<_1acb8cded_Data>* _2825_d);
inline jule::Bool _1ad61da04_IsAny(jule::Ptr<_1acbc0d98_Type>* _4015_t);
inline jule::Bool _1ad61dd45_IsClosure(jule::Ptr<_1aca97e4b_AnonFnExprModel>* _4915_m);
inline jule::Bool _1ad61e0cb_IsOpMethod(jule::Ptr<_1acaa2351_Fn>* _5216_m);
inline jule::Bool _1ad61e450_IsTraitMethod(jule::Ptr<_1ac9d1e84_StructIns>* _6823_owner, jule::Ptr<_1acaa540e_FnIns>* _6849_f);
inline jule::Bool _1ad61e7c4_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1abc419b9_Directive> _1ad620660_FindDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1ad620a28_HasDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I32 _1ad621562_FindTraitTypeOffsetS(jule::Ptr<_1acaaca65_Trait> _3925_t, jule::Ptr<_1ac9d1e84_StructIns> _3946_s);
inline jule::I32 _1ad6218d6_FindTraitTypeOffset(jule::Ptr<_1acaaca65_Trait> _6224_t, jule::Ptr<_1acbc0d98_Type> _6245_k);
inline jule::Ptr<_1acaa540e_FnIns> _1ad621d15_FindOperator(jule::Ptr<_1ac9d1e84_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1acaa540e_FnIns> _1ad622189_FindFnGenericInstance(jule::Ptr<_1acaa2351_Fn>* _14731_f, jule::Slice<jule::Ptr<_1acbc0d98_Type>> _14745_generics);
inline jule::Ptr<_1ac9d1e84_StructIns> _1ad62261d_FindStructGenericInstance(jule::Ptr<_1ac9ce129_Struct>* _16335_s, jule::Slice<jule::Ptr<_1acbc0d98_Type>> _16353_generics);
inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ad62291a_SelectImport(jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _1c0864782_isOrdered(jule::Ptr<_1acb3d420_Var>* _1418_t, jule::Slice<jule::Ptr<_1acb3d420_Var>> _1425_s);
inline jule::Bool _1c086a502_isOrdered(jule::Ptr<_1ac9ce129_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _1425_s);
inline void _1c086196b_order(jule::Slice<jule::Ptr<_1acb3d420_Var>> _3717_s);
inline void _1c086254e_order(jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _3717_s);
inline void _1bb23c8ce_EliminateDefines(jule::Ptr<_1ad618328_IR>* _36526_ir);
inline jule::Bool _1bb23cbdc_isAllMethodsLive(jule::Ptr<_1ac9ce129_Struct> _37121_s);
inline void _1bb241a59_eliminateDeadCodeOfScope(jule::Ptr<_1ac95aa56_Scope> _21833_s);
inline void _1bb241cce_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _23033_funcs);
inline void _1bb242010_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _23937_structs);
inline void _1bb2422b8_eliminateFunctionsScopePackage(jule::Ptr<_1ac98e150_Package>* _24740_pkg);
inline void _1bb2424b6_eliminateScopePackage(jule::Ptr<_1ac98e150_Package>* _25431_pkg);
inline void _1bb2426e7_EliminateScopes(jule::Ptr<_1ad618328_IR>* _25925_ir);
inline jule::Uintptr _1bb107b84_typeData(jule::Any* _1314_m);
inline jule::Bool _1bb10804c_equalConst(jule::Ptr<_1aca3208e_Const> _1715_l, jule::Ptr<_1aca3208e_Const> _1736_r);
inline jule::Bool _1bb1083c1_equalCasting(jule::Ptr<_1aca96763_CastingExprModel> _3617_l, jule::Ptr<_1aca96763_CastingExprModel> _3645_r);
inline jule::Bool _1bb108789_equalUnary(jule::Ptr<_1aca9550e_UnaryExprModel> _4315_l, jule::Ptr<_1aca9550e_UnaryExprModel> _4341_r);
inline jule::Bool _1bb108b0d_equalIndexing(jule::Ptr<_1aca97995_IndexingExprModel> _5018_l, jule::Ptr<_1aca97995_IndexingExprModel> _5047_r);
inline jule::Bool _1bb108e82_equalBinary(jule::Ptr<_1aca95135_BinaryExprModel> _5516_l, jule::Ptr<_1aca95135_BinaryExprModel> _5543_r);
inline jule::Bool _1bb109306_equalModels(jule::Any _6616_l, jule::Any _6636_r);
inline void _1bb10eeaa_possibleNilRemove(jule::Ptr<_1bb10decb_nils>* _7227_n, jule::Any _7237_m);
inline jule::Bool _1bb110373_isGuaranteedNonNilExpr(jule::Ptr<_1bb10decb_nils>* _7832_n, jule::Any _7842_m);
inline jule::Bool _1bb11063c_isNilValidType(jule::Ptr<_1acbc0d98_Type> _8623_t);
inline jule::Uintptr _1bb11097d_getNilVar(jule::Any _8814_m);
inline jule::Bool _1bb116a0b_isConstantValidConditionalCase(jule::Ptr<_1ac95ae74_If>* _73736_i);
inline jule::Bool _1bb116d19_isUnreachableExpr(jule::Any* _74623_expr);
inline jule::Bool _1bb1170d3_isConstantValidMatchCase(jule::Ptr<_1ac960cae_Case>* _76130_case);
inline jule::Bool _1bb117424_isUnreachableConditionalCase(jule::Ptr<_1ac95ae74_If>* _77034_i);
inline jule::Bool _1bb1176aa_isUnreachableMatchCase(jule::Ptr<_1ac960cae_Case>* _77428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1bb11d628_checkForBitShiftOpt(jule::Ptr<_1aca94b3a_OperandExprModel>* _72925_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _72954_r);
inline jule::Bool _1bb11d9e1_areSameLvalueExprModel(jule::Any* _74628_l, jule::Any* _74649_r);
inline void _1bb120a9d_possibleDynamicRemove(jule::Ptr<_1bb11ea14_dynamic>* _7331_d, jule::Any _7344_m);
inline jule::Bool _1bb120dab_isDynamicValidType(jule::Ptr<_1acbc0d98_Type> _7927_t);
inline jule::Ptr<_1acbc0d98_Type> _1bb1212da_isTypeGuaranteedDynamicData(jule::Ptr<_1bb11ea14_dynamic>* _8137_dy, jule::Ptr<_1acbc0d98_Type> _8155_t, jule::Any _8175_m);
inline jule::Uintptr _1bb12162b_getDynamicVar(jule::Any _10618_m);
inline jule::Bool _1bb125245_isValidBoundaryInfo(jule::Any _8424_m);
inline jule::I32 _1bb12560d_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr);
inline jule::Bool _1bb125982_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2);
inline void _1bb125cb2_possibleBoundaryRemove(jule::Ptr<_1bb1241cd_boundary>* _12432_b, jule::Any _12446_model);
inline jule::Bool _1bb12607b_isBoundaryRiskyType(jule::Ptr<_1acbc0d98_Type> _13628_t);
inline jule::Bool _1bb126345_isBoundaryValidType(jule::Ptr<_1acbc0d98_Type> _14128_t);
inline jule::Uintptr _1bb12660e_getBoundaryVar(jule::Any _14319_m);
inline void _1bb12a3e3_PushOptLevel(jule::I32 _4117_level);
inline void _1bb24609c_detectEnabled(void);
inline void _1c16a205d_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1c16a0b72_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _1c169c07a_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _1c169a71b_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::U8> _1c1696371_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v);
inline jule::U64 _1aae3dd82_unix(void);
inline jule::Bool _1bb25152a_isCopyOptimizable(jule::Ptr<_1acb8cded_Data>* _117223_expr);
inline jule::Bool _1bb2518e3_isIterCopyOptimizable(jule::Ptr<_1acb8cded_Data>* _118327_expr, jule::Ptr<_1acb3d420_Var>* _118347_v);
inline jule::Bool _1bb251d22_captureVarHandling(jule::Ptr<_1aae49299_ObjectCoder>* _119028_oc, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _119051_m, jule::Ptr<_1acb3d420_Var>* _119083_v);
inline jule::Str _1bb26441c_decomposeCommonEsq(jule::U8 _190923_b);
inline jule::Str _1bb26472a_sbtoa(jule::U8 _193610_b);
inline void _1bb264a16_cstrBytes(_1a6a5cb3c_Builder* _195619_s, jule::Str _195640_ctx);
inline void _1bb264d46_cstrLit(_1a6a5cb3c_Builder* _196217_s, jule::Str _196238_ctx);
inline void _1bb2651dc_ftoa(_1a6a5cb3c_Builder* _196814_s, jule::F64 _196835_f, jule::I32 _196843_bitsize);
inline void _1bb2654c8_itoa(_1a6a5cb3c_Builder* _198614_s, jule::I64 _198635_x);
inline void _1bb2657b4_utoa(_1a6a5cb3c_Builder* _200314_s, jule::U64 _200335_x);
inline void _1bb265e13_operatorOverloadingBinary(_1a6a5cb3c_Builder* _201735_buf, jule::Ptr<_1ac9d1e84_StructIns>* _201763_s, jule::Str* _201785_l, jule::Str* _20183_r, jule::U32 _201811_op, jule::Str _201826_kind);
inline jule::Slice<jule::U8> _1aae56ce0_concatAllParts(jule::Slice<jule::Ptr<_1abc2ba81_Token>> _137519_parts);
inline jule::Bool _1aae570ed_isHeadDecl(jule::Ptr<_1acaa2351_Fn>* _139120_m);
inline jule::Bool _1aae573b7_defaultEq(jule::Ptr<_1ac9d1e84_StructIns>* _139915_s);
inline jule::Bool _1aae6634e_ableToInit(jule::Ptr<_1acbc0d98_Type>* _44820_t);
inline jule::Bool _1aae66629_shouldInitialized(jule::Ptr<_1acbc0d98_Type>* _45527_t);
inline void _1a8e632d7_printErrorMessage(jule::Str _3022_msg);
inline void _1a8e6355c_help(jule::Slice<jule::Str>* _3510_args);
inline void _1a8e6378d_version(jule::Slice<jule::Str>* _6313_args);
inline void _1a8e6399c_toolDistos(void);
inline void _1a8e63b12_toolDistarch(void);
inline void _1a8e63d10_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1a8e64041_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1a8e64382_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1a8e645c4_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1a8e6476c_showInfo(void);
void _1a8e648e3_main(void);
inline void _1a8e65240_enableVtp(void);
inline void _1a8e6540a_init(void);
inline void _1aaecc4d6_init(void);
inline jule::Ptr<_1a6b3087a_File> _1aaecc7a0_openOutput(jule::Str* _3016_path);
inline void _1aaecc948_clearObjects(void);
inline void _1aaeccc56_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1aaecd020_isCppSourceFile(jule::Str _8620_path);
inline void _1aaecd251_pushCompCmdClang(_1a6a5cb3c_Builder* _9426_cmd);
inline void _1aaecd482_pushCompCmdGcc(_1a6a5cb3c_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1aaecd916_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1ad618328_IR>* _14636_ir);
inline jule::Str _1aaecda9d_getCompilePath(void);
inline void _1aaecdcce_applyTargetIndependentOptimizations(jule::Ptr<_1ad618328_IR>* _19245_ir);
inline void _1aaecde77_checkCompilerFlag(void);
inline void _1aaece186_checkTargetArch(jule::Str _21420_arch);
inline void _1aaece3b7_checkTargetOs(jule::Str _22218_os);
inline void _1aaece5e8_checkTargetFlag(jule::Str* _23021_target);
inline void _1aaece829_checkOptFlag(jule::Str* _25318_opt);
inline void _1aaece9b1_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1bbb029ad_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _1bbb02bde_setupSemaFlags(jule::I32* _33024_flags);
inline jule::Ptr<_1ad618328_IR> _1bbb02ea8_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _1bbb031d9_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _1ac92cd9c_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ac92c231_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i);
	void(*_1ac92c594_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB);
	void(*_1ac92c9b2_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB);
	jule::I32(*_1ac92cc48_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1ac9888ca_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1ac987753_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1ac987940_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ac987c81_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1ac98b8cd_ImportInfo>(*_1ac9880c2_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log(*_1ac9884bd_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1ac988776_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _4128__0);
};

struct _1acbc08e2_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1acbc044c_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1acbc078d_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other);
};

struct _1acbe1281_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1ac98b8cd_ImportInfo>(*_1acbde56a_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector);
	jule::Ptr<_1acb3d420_Var>(*_1acbde966_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1acbc00a6_TypeAlias>(*_1acbded62_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1ac9ce129_Struct>(*_1acbe025d_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1acaa2351_Fn>(*_1acbe0659_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1acaaca65_Trait>(*_1acbe099a_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1acab021b_Enum>(*_1acbe0cdb_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1acab1926_TypeEnum>(*_1acbe112c_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1aaec5468_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1aae93832_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1aae93975_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1aae93b51_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1aaec5325_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9303bb_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac933600_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac93637d_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac939bde_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac93b54d_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac946d2d_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94a3c5_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad615798_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9d1e84_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaa540e_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaaca65_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acab021b_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acab1926_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac92d0bc_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac92db28_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac931d4b_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac93506e_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac937d85_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac93cebc_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9440c2_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94879c_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac94c6b3_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbc0d98_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbc8eb1_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbcc9dc_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbcd4b0_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbce0a4_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbceb54_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbd07d1_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbd12a4_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aae58660_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaa8654_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9631bd_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac98b8cd_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac98e150_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9a8c2a_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c17117a4_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1715137_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c1718844_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c171c095_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c17207a2_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb3d420_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acbc00a6_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9ce129_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaa2351_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9cb203_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca3208e_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaae6b0_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acaa087c_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95d5a3_Label>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95aa56_Scope>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9d1c6_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1acb8cded_Data>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9e1d8_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9be50_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9aa20_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9ad1c_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9b5c0_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9ccec_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9c923_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9e4d5_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca97115_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95b68e_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95b98b_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c2ace_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95be42_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c34d6_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95c88d_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95cc23_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95dc13_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95e0dc_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95e593_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b4362_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca97995_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95ea49_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac960286_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9614a7_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac95d0ec_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac96184d_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9bd811_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c165a_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c530c_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b2a47_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c4ac0_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c22a4_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c3c89_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9bace7_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9bb1c1_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9bc1b1_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c60cc_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9bb4bd_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c38b0_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c1a34_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b341b_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9ca1be_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c9322_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c04a0_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c9a5e_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c76c7_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9c8662_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc44868_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc439cc_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc440c6_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc43647_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc450b6_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc43cc9_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc42ba7_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b4ecd_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca974de_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b7266_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b8872_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b363b_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9a723_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b6771_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9dd64_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9a426_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b5b5a_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc42e71_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b4b04_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc4259c_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b5781_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1abc4334a_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca98c82_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca96763_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b909d_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca95dd3_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9a04c_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca99315_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca99ba6_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca986ee_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca97e4b_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b2d11_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b39d2_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b3dab_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b9a0a_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9ba16a_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b53a7_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b7a91_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b8047_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac9b6111_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9550e_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca95135_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca961d0_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9b1e6_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9ba76_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9c24c_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9c549_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9d4c3_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca9db77_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb109d73_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10c969_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10b65a_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10c1b6_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10c590_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10a406_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10a824_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10b0c7_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10b9e0_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10cc66_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10ab21_RefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aca95a3c_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10d063_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10a060_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bb10bcdc_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1be1cbbcd_1be1754d4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac9313bc_index(_self_.as<_1ac9303bb_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be18de48(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac9345e0_index(_self_.as<_1ac933600_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be17b81a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac937406_index(_self_.as<_1ac93637d_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be182326(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac93aabe_index(_self_.as<_1ac939bde_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be18a670(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac93c53d_index(_self_.as<_1ac93b54d_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be1aacde(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac947d1d_index(_self_.as<_1ac946d2d_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cbbcd_1be1a417d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb8cded_Data>* _1426_d, jule::I32 _1436_i) {
	_1ac94b4d6_index(_self_.as<_1ac94a3c5_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1be1cc272_1be1754d4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac931059_ready(_self_.as<_1ac9303bb_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be18de48(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac93427c_ready(_self_.as<_1ac933600_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be17b81a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac937093_ready(_self_.as<_1ac93637d_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be182326(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac93a75b_ready(_self_.as<_1ac939bde_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be18a670(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac93c1ca_ready(_self_.as<_1ac93b54d_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be1aacde(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac9479aa_ready(_self_.as<_1ac946d2d_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc272_1be1a417d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acb3d420_Var>* _1526_keyA, jule::Ptr<_1acb3d420_Var>* _1543_keyB) {
	_1ac94b173_ready(_self_.as<_1ac94a3c5_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1be1cc948_1be1754d4(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac9317da_step(_self_.as<_1ac9303bb_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be18de48(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac934a0d_step(_self_.as<_1ac933600_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be17b81a(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac937824_step(_self_.as<_1ac93637d_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be182326(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac93aedc_step(_self_.as<_1ac939bde_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be18a670(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac93c95b_step(_self_.as<_1ac93b54d_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be1aacde(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac94823b_step(_self_.as<_1ac946d2d_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1be1cc948_1be1a417d(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1acb3d420_Var>* _1633_keyA, jule::Ptr<_1acb3d420_Var>* _1650_keyB) {
	_1ac94b904_step(_self_.as<_1ac94a3c5_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be1754d4(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac931a71_len(_self_.as<_1ac9303bb_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be18de48(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac934c94_len(_self_.as<_1ac933600_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be17b81a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac937aaa_len(_self_.as<_1ac93637d_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be182326(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac93b273_len(_self_.as<_1ac939bde_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be18a670(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac93cbe2_len(_self_.as<_1ac93b54d_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be1aacde(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9484c2_len(_self_.as<_1ac946d2d_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1be1cd130_1be1a417d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac94bb8a_len(_self_.as<_1ac94a3c5_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1be1cd471_1c07db907(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1ad61639d_SetModPath(_self_.as<_1ad615798_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1be1cd8c2_1c07db907(jule::Ptr<jule::Uintptr> _self_) {
	return _1ad616634_GetModPath(_self_.as<_1ad615798_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1be1cdcce_1c07db907(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1ad616975_ModById(_self_.as<_1ad615798_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1ce296_1c07db907(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1ad616cb6_GetImport(_self_.as<_1ad615798_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_trait_method_1be1ce87e_1c07db907(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1ad6171b2_ImportPackage(_self_.as<_1ad615798_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1be1d0242_1c07db907(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _4128__0) {
	_1ad61746a_Imported(_self_.as<_1ad615798_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1be1d072b_1bdde691a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9d233b_Str(_self_.as<_1ac9d1e84_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bdde5c8d(jule::Ptr<jule::Uintptr> _self_) {
	return _1acaa5783_Str(_self_.as<_1acaa540e_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bde0dec6(jule::Ptr<jule::Uintptr> _self_) {
	return _1acaace61_Str(_self_.as<_1acaaca65_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddd7c3b(jule::Ptr<jule::Uintptr> _self_) {
	return _1acab05c3_Str(_self_.as<_1acab021b_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddded64(jule::Ptr<jule::Uintptr> _self_) {
	return _1acab1c9a_Str(_self_.as<_1acab1926_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be188e87(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac92d4b8_Str(_self_.as<_1ac92d0bc_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1787a1(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac92ded0_Str(_self_.as<_1ac92db28_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1754d4(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac930784_Str(_self_.as<_1ac9303bb_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be192215(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac932203_Str(_self_.as<_1ac931d4b_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be18de48(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9339a7_Str(_self_.as<_1ac933600_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be17ead7(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac935426_Str(_self_.as<_1ac93506e_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be17b81a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac936845_Str(_self_.as<_1ac93637d_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1855e3(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac93823c_Str(_self_.as<_1ac937d85_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be182326(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac939e86_Str(_self_.as<_1ac939bde_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be18a670(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac93b905_Str(_self_.as<_1ac93b54d_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be0814ab(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac93d374_Str(_self_.as<_1ac93cebc_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be19527e(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac944479_Str(_self_.as<_1ac9440c2_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1aacde(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac9471d5_Str(_self_.as<_1ac946d2d_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1a744a(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac948b54_Str(_self_.as<_1ac94879c_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be1a417d(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac94a9ad_Str(_self_.as<_1ac94a3c5_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be19adcd(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac94ca6a_Str(_self_.as<_1ac94c6b3_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddc8aea(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbc1294_Str(_self_.as<_1acbc0d98_Type>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddccdda(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbc9335_Str(_self_.as<_1acbc8eb1_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddd46e9(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbccd94_Str(_self_.as<_1acbcc9dc_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bdde440c(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbcd977_Str(_self_.as<_1acbcd4b0_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be0bc4a3(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbce45b_Str(_self_.as<_1acbce0a4_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1be0ba935(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbd000b_Str(_self_.as<_1acbceb54_Map>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bdde29b0(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbd0b88_Str(_self_.as<_1acbd07d1_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1bddd5eae(jule::Ptr<jule::Uintptr> _self_) {
	return _1acbd165b_Str(_self_.as<_1acbd12a4_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1be1d072b_1c0e71267(jule::Ptr<jule::Uintptr> _self_) {
	return _1aae58a5b_Str(_self_.as<_1aae58660_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bdde691a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac9d267c_Equal(_self_.as<_1ac9d1e84_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bdde5c8d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acaa5ac4_Equal(_self_.as<_1acaa540e_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bde0dec6(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acaad2a2_Equal(_self_.as<_1acaaca65_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddd7c3b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acab0914_Equal(_self_.as<_1acab021b_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddded64(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acab20db_Equal(_self_.as<_1acab1926_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be188e87(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac92d809_Equal(_self_.as<_1ac92d0bc_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1787a1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac92e321_Equal(_self_.as<_1ac92db28_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1754d4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac930ac5_Equal(_self_.as<_1ac9303bb_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be192215(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac932544_Equal(_self_.as<_1ac931d4b_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be18de48(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac933ce8_Equal(_self_.as<_1ac933600_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be17ead7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac935767_Equal(_self_.as<_1ac93506e_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be17b81a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac936b86_Equal(_self_.as<_1ac93637d_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1855e3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac93857d_Equal(_self_.as<_1ac937d85_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be182326(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac93a2c7_Equal(_self_.as<_1ac939bde_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be18a670(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac93bc46_Equal(_self_.as<_1ac93b54d_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be0814ab(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac93d6b5_Equal(_self_.as<_1ac93cebc_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be19527e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac9447ba_Equal(_self_.as<_1ac9440c2_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1aacde(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac947526_Equal(_self_.as<_1ac946d2d_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1a744a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac948e95_Equal(_self_.as<_1ac94879c_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be1a417d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac94acee_Equal(_self_.as<_1ac94a3c5_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be19adcd(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1ac94cdab_Equal(_self_.as<_1ac94c6b3_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddc8aea(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbc15d5_Equal(_self_.as<_1acbc0d98_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddccdda(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbc9676_Equal(_self_.as<_1acbc8eb1_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddd46e9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbcd1d5_Equal(_self_.as<_1acbcc9dc_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bdde440c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbcdcb8_Equal(_self_.as<_1acbcd4b0_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be0bc4a3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbce79c_Equal(_self_.as<_1acbce0a4_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1be0ba935(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbd034c_Equal(_self_.as<_1acbceb54_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bdde29b0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbd0ec9_Equal(_self_.as<_1acbd07d1_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1bddd5eae(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1acbd199c_Equal(_self_.as<_1acbd12a4_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1be1d0aa0_1c0e71267(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	return _1aae58d9c_Equal(_self_.as<_1aae58660_customType>(), _3818_other);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1d1122_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector) {
	return _1acaa8b71_SelectPackage(_self_.as<_1acaa8654_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1d1122_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector) {
	return _1ac963696_SelectPackage(_self_.as<_1ac9631bd_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1d1122_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector) {
	return _1ac98bdea_SelectPackage(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1d1122_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector) {
	return _1ac98e628_SelectPackage(_self_.as<_1ac98e150_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1ac98b8cd_ImportInfo> __jule_trait_method_1be1d1122_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _929_selector) {
	return _1ac9a9203_SelectPackage(_self_.as<_1ac9a8c2a_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1acb3d420_Var> __jule_trait_method_1be1d1e9c_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1acaa906c_FindVar(_self_.as<_1acaa8654_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1acb3d420_Var> __jule_trait_method_1be1d1e9c_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac963a92_FindVar(_self_.as<_1ac9631bd_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1acb3d420_Var> __jule_trait_method_1be1d1e9c_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac98c2e6_FindVar(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1acb3d420_Var> __jule_trait_method_1be1d1e9c_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac98ea24_FindVar(_self_.as<_1ac98e150_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1acb3d420_Var> __jule_trait_method_1be1d1e9c_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1ac9a95ee_FindVar(_self_.as<_1ac9a8c2a_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1acbc00a6_TypeAlias> __jule_trait_method_1be1d2574_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1acaa9468_FindTypeAlias(_self_.as<_1acaa8654_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1acbc00a6_TypeAlias> __jule_trait_method_1be1d2574_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac963e8d_FindTypeAlias(_self_.as<_1ac9631bd_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1acbc00a6_TypeAlias> __jule_trait_method_1be1d2574_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac98c6e2_FindTypeAlias(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1acbc00a6_TypeAlias> __jule_trait_method_1be1d2574_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac98ee20_FindTypeAlias(_self_.as<_1ac98e150_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1acbc00a6_TypeAlias> __jule_trait_method_1be1d2574_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1ac9a99ea_FindTypeAlias(_self_.as<_1ac9a8c2a_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1ac9ce129_Struct> __jule_trait_method_1be1d2b7e_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1acaa9864_FindStruct(_self_.as<_1acaa8654_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac9ce129_Struct> __jule_trait_method_1be1d2b7e_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac964389_FindStruct(_self_.as<_1ac9631bd_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac9ce129_Struct> __jule_trait_method_1be1d2b7e_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac98cadd_FindStruct(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac9ce129_Struct> __jule_trait_method_1be1d2b7e_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac99031b_FindStruct(_self_.as<_1ac98e150_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1ac9ce129_Struct> __jule_trait_method_1be1d2b7e_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1ac9a9de6_FindStruct(_self_.as<_1ac9a8c2a_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1acaa2351_Fn> __jule_trait_method_1be1d3289_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1acaa9c60_FindFn(_self_.as<_1acaa8654_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1acaa2351_Fn> __jule_trait_method_1be1d3289_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac964785_FindFn(_self_.as<_1ac9631bd_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1acaa2351_Fn> __jule_trait_method_1be1d3289_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac98ced9_FindFn(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1acaa2351_Fn> __jule_trait_method_1be1d3289_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac990717_FindFn(_self_.as<_1ac98e150_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1acaa2351_Fn> __jule_trait_method_1be1d3289_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1ac9aa2e2_FindFn(_self_.as<_1ac9a8c2a_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1acaaca65_Trait> __jule_trait_method_1be1d3894_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1acaaa0a1_FindTrait(_self_.as<_1acaa8654_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1acaaca65_Trait> __jule_trait_method_1be1d3894_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac964ac6_FindTrait(_self_.as<_1ac9631bd_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1acaaca65_Trait> __jule_trait_method_1be1d3894_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac98d32a_FindTrait(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1acaaca65_Trait> __jule_trait_method_1be1d3894_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac990a58_FindTrait(_self_.as<_1ac98e150_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1acaaca65_Trait> __jule_trait_method_1be1d3894_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1ac9aa633_FindTrait(_self_.as<_1ac9a8c2a_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1acab021b_Enum> __jule_trait_method_1be1d3de4_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1acaaa3e2_FindEnum(_self_.as<_1acaa8654_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1acab021b_Enum> __jule_trait_method_1be1d3de4_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac964e17_FindEnum(_self_.as<_1ac9631bd_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1acab021b_Enum> __jule_trait_method_1be1d3de4_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac98d66b_FindEnum(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1acab021b_Enum> __jule_trait_method_1be1d3de4_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac990d99_FindEnum(_self_.as<_1ac98e150_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1acab021b_Enum> __jule_trait_method_1be1d3de4_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1ac9aa974_FindEnum(_self_.as<_1ac9a8c2a_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1acab1926_TypeEnum> __jule_trait_method_1be1d4444_1bdde8c4c(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1acaaa733_FindTypeEnum(_self_.as<_1acaa8654_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1acab1926_TypeEnum> __jule_trait_method_1be1d4444_1be12e2c3(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac965258_FindTypeEnum(_self_.as<_1ac9631bd_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1acab1926_TypeEnum> __jule_trait_method_1be1d4444_1bddea37a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac98d9ac_FindTypeEnum(_self_.as<_1ac98b8cd_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1acab1926_TypeEnum> __jule_trait_method_1be1d4444_1bddeb1a0(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac9911da_FindTypeEnum(_self_.as<_1ac98e150_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1acab1926_TypeEnum> __jule_trait_method_1be1d4444_1bdde8235(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1ac9aacb5_FindTypeEnum(_self_.as<_1ac9a8c2a_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1c17227c6_1c17117a4(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1711a90_Name(_self_.as<_1c17117a4_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c17227c6_1c1715137(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1714cb3_Name(_self_.as<_1c1715137_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c17227c6_1c1718844(jule::Ptr<jule::Uintptr> _self_) {
	return _1c17184c0_Name(_self_.as<_1c1718844_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c17227c6_1c171c095(jule::Ptr<jule::Uintptr> _self_) {
	return _1c171bc21_Name(_self_.as<_1c171c095_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c17227c6_1c17207a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1c172042d_Name(_self_.as<_1c17207a2_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c17228b4_1c17117a4(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1711e69_Short(_self_.as<_1c17117a4_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c17228b4_1c1715137(jule::Ptr<jule::Uintptr> _self_) {
	return _1c17156a9_Short(_self_.as<_1c1715137_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c17228b4_1c1718844(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1718db6_Short(_self_.as<_1c1718844_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c17228b4_1c171c095(jule::Ptr<jule::Uintptr> _self_) {
	return _1c171c617_Short(_self_.as<_1c171c095_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c17228b4_1c17207a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1720d24_Short(_self_.as<_1c17207a2_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c1724289_1c17117a4(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1711bd3_What(_self_.as<_1c17117a4_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c1724289_1c1715137(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1715423_What(_self_.as<_1c1715137_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c1724289_1c1718844(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1718b30_What(_self_.as<_1c1718844_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c1724289_1c171c095(jule::Ptr<jule::Uintptr> _self_) {
	return _1c171c381_What(_self_.as<_1c171c095_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c1724289_1c17207a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1c1720a8d_What(_self_.as<_1c17207a2_Flag>().alloc);
}
inline void __jule_trait_method_1c1724696_1c17117a4(jule::Ptr<jule::Uintptr> _self_) {
	_1c1711d26_Reset(_self_.as<_1c17117a4_Flag>().alloc);
}
inline void __jule_trait_method_1c1724696_1c1715137(jule::Ptr<jule::Uintptr> _self_) {
	_1c1715566_Reset(_self_.as<_1c1715137_Flag>().alloc);
}
inline void __jule_trait_method_1c1724696_1c1718844(jule::Ptr<jule::Uintptr> _self_) {
	_1c1718c73_Reset(_self_.as<_1c1718844_Flag>().alloc);
}
inline void __jule_trait_method_1c1724696_1c171c095(jule::Ptr<jule::Uintptr> _self_) {
	_1c171c4c4_Reset(_self_.as<_1c171c095_Flag>().alloc);
}
inline void __jule_trait_method_1c1724696_1c17207a2(jule::Ptr<jule::Uintptr> _self_) {
	_1c1720bd1_Reset(_self_.as<_1c17207a2_Flag>().alloc);
}


static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be1754d4,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be1754d4,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be1754d4,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be1754d4,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be18de48,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be18de48,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be18de48,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be18de48,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be17b81a,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be17b81a,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be17b81a,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be17b81a,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be182326,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be182326,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be182326,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be182326,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be18a670,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be18a670,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be18a670,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be18a670,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be1aacde,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be1aacde,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be1aacde,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be1aacde,
};
static _1ac92cd9c_comptimeRangeKindMptrData _1ac92cd9c_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1ac92c231_index=__jule_trait_method_1be1cbbcd_1be1a417d,
	._1ac92c594_ready=__jule_trait_method_1be1cc272_1be1a417d,
	._1ac92c9b2_step=__jule_trait_method_1be1cc948_1be1a417d,
	._1ac92cc48_len=__jule_trait_method_1be1cd130_1be1a417d,
};
static _1ac9888ca_ImporterMptrData _1ac9888ca_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1ac987753_SetModPath=__jule_trait_method_1be1cd471_1c07db907,
	._1ac987940_GetModPath=__jule_trait_method_1be1cd8c2_1c07db907,
	._1ac987c81_ModById=__jule_trait_method_1be1cdcce_1c07db907,
	._1ac9880c2_GetImport=__jule_trait_method_1be1ce296_1c07db907,
	._1ac9884bd_ImportPackage=__jule_trait_method_1be1ce87e_1c07db907,
	._1ac988776_Imported=__jule_trait_method_1be1d0242_1c07db907,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bdde691a,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bdde691a,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bdde5c8d,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bdde5c8d,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bde0dec6,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bde0dec6,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddd7c3b,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddd7c3b,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddded64,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddded64,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be188e87,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be188e87,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1787a1,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1787a1,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1754d4,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1754d4,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be192215,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be192215,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be18de48,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be18de48,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be17ead7,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be17ead7,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be17b81a,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be17b81a,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1855e3,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1855e3,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be182326,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be182326,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be18a670,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be18a670,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be0814ab,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be0814ab,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be19527e,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be19527e,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1aacde,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1aacde,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1a744a,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1a744a,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be1a417d,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be1a417d,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be19adcd,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be19adcd,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddc8aea,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddc8aea,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddccdda,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddccdda,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddd46e9,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddd46e9,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bdde440c,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bdde440c,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be0bc4a3,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be0bc4a3,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1be0ba935,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1be0ba935,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bdde29b0,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bdde29b0,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1bddd5eae,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1bddd5eae,
};
static _1acbc08e2_KindMptrData _1acbc08e2_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1acbc044c_Str=__jule_trait_method_1be1d072b_1c0e71267,
	._1acbc078d_Equal=__jule_trait_method_1be1d0aa0_1c0e71267,
};
static _1acbe1281_LookupMptrData _1acbe1281_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1acbde56a_SelectPackage=__jule_trait_method_1be1d1122_1bdde8c4c,
	._1acbde966_FindVar=__jule_trait_method_1be1d1e9c_1bdde8c4c,
	._1acbded62_FindTypeAlias=__jule_trait_method_1be1d2574_1bdde8c4c,
	._1acbe025d_FindStruct=__jule_trait_method_1be1d2b7e_1bdde8c4c,
	._1acbe0659_FindFn=__jule_trait_method_1be1d3289_1bdde8c4c,
	._1acbe099a_FindTrait=__jule_trait_method_1be1d3894_1bdde8c4c,
	._1acbe0cdb_FindEnum=__jule_trait_method_1be1d3de4_1bdde8c4c,
	._1acbe112c_FindTypeEnum=__jule_trait_method_1be1d4444_1bdde8c4c,
};
static _1acbe1281_LookupMptrData _1acbe1281_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1acbde56a_SelectPackage=__jule_trait_method_1be1d1122_1be12e2c3,
	._1acbde966_FindVar=__jule_trait_method_1be1d1e9c_1be12e2c3,
	._1acbded62_FindTypeAlias=__jule_trait_method_1be1d2574_1be12e2c3,
	._1acbe025d_FindStruct=__jule_trait_method_1be1d2b7e_1be12e2c3,
	._1acbe0659_FindFn=__jule_trait_method_1be1d3289_1be12e2c3,
	._1acbe099a_FindTrait=__jule_trait_method_1be1d3894_1be12e2c3,
	._1acbe0cdb_FindEnum=__jule_trait_method_1be1d3de4_1be12e2c3,
	._1acbe112c_FindTypeEnum=__jule_trait_method_1be1d4444_1be12e2c3,
};
static _1acbe1281_LookupMptrData _1acbe1281_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1acbde56a_SelectPackage=__jule_trait_method_1be1d1122_1bddea37a,
	._1acbde966_FindVar=__jule_trait_method_1be1d1e9c_1bddea37a,
	._1acbded62_FindTypeAlias=__jule_trait_method_1be1d2574_1bddea37a,
	._1acbe025d_FindStruct=__jule_trait_method_1be1d2b7e_1bddea37a,
	._1acbe0659_FindFn=__jule_trait_method_1be1d3289_1bddea37a,
	._1acbe099a_FindTrait=__jule_trait_method_1be1d3894_1bddea37a,
	._1acbe0cdb_FindEnum=__jule_trait_method_1be1d3de4_1bddea37a,
	._1acbe112c_FindTypeEnum=__jule_trait_method_1be1d4444_1bddea37a,
};
static _1acbe1281_LookupMptrData _1acbe1281_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1acbde56a_SelectPackage=__jule_trait_method_1be1d1122_1bddeb1a0,
	._1acbde966_FindVar=__jule_trait_method_1be1d1e9c_1bddeb1a0,
	._1acbded62_FindTypeAlias=__jule_trait_method_1be1d2574_1bddeb1a0,
	._1acbe025d_FindStruct=__jule_trait_method_1be1d2b7e_1bddeb1a0,
	._1acbe0659_FindFn=__jule_trait_method_1be1d3289_1bddeb1a0,
	._1acbe099a_FindTrait=__jule_trait_method_1be1d3894_1bddeb1a0,
	._1acbe0cdb_FindEnum=__jule_trait_method_1be1d3de4_1bddeb1a0,
	._1acbe112c_FindTypeEnum=__jule_trait_method_1be1d4444_1bddeb1a0,
};
static _1acbe1281_LookupMptrData _1acbe1281_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1acbde56a_SelectPackage=__jule_trait_method_1be1d1122_1bdde8235,
	._1acbde966_FindVar=__jule_trait_method_1be1d1e9c_1bdde8235,
	._1acbded62_FindTypeAlias=__jule_trait_method_1be1d2574_1bdde8235,
	._1acbe025d_FindStruct=__jule_trait_method_1be1d2b7e_1bdde8235,
	._1acbe0659_FindFn=__jule_trait_method_1be1d3289_1bdde8235,
	._1acbe099a_FindTrait=__jule_trait_method_1be1d3894_1bdde8235,
	._1acbe0cdb_FindEnum=__jule_trait_method_1be1d3de4_1bdde8235,
	._1acbe112c_FindTypeEnum=__jule_trait_method_1be1d4444_1bdde8235,
};
static _1aaec5468_CommonFlagMptrData _1aaec5468_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1aae93832_Name=__jule_trait_method_1c17227c6_1c17117a4,
	._1aae93975_Short=__jule_trait_method_1c17228b4_1c17117a4,
	._1aae93b51_What=__jule_trait_method_1c1724289_1c17117a4,
	._1aaec5325_Reset=__jule_trait_method_1c1724696_1c17117a4,
};
static _1aaec5468_CommonFlagMptrData _1aaec5468_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1aae93832_Name=__jule_trait_method_1c17227c6_1c1715137,
	._1aae93975_Short=__jule_trait_method_1c17228b4_1c1715137,
	._1aae93b51_What=__jule_trait_method_1c1724289_1c1715137,
	._1aaec5325_Reset=__jule_trait_method_1c1724696_1c1715137,
};
static _1aaec5468_CommonFlagMptrData _1aaec5468_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1aae93832_Name=__jule_trait_method_1c17227c6_1c1718844,
	._1aae93975_Short=__jule_trait_method_1c17228b4_1c1718844,
	._1aae93b51_What=__jule_trait_method_1c1724289_1c1718844,
	._1aaec5325_Reset=__jule_trait_method_1c1724696_1c1718844,
};
static _1aaec5468_CommonFlagMptrData _1aaec5468_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1aae93832_Name=__jule_trait_method_1c17227c6_1c171c095,
	._1aae93975_Short=__jule_trait_method_1c17228b4_1c171c095,
	._1aae93b51_What=__jule_trait_method_1c1724289_1c171c095,
	._1aaec5325_Reset=__jule_trait_method_1c1724696_1c171c095,
};
static _1aaec5468_CommonFlagMptrData _1aaec5468_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1aae93832_Name=__jule_trait_method_1c17227c6_1c17207a2,
	._1aae93975_Short=__jule_trait_method_1c17228b4_1c17207a2,
	._1aae93b51_What=__jule_trait_method_1c1724289_1c17207a2,
	._1aaec5325_Reset=__jule_trait_method_1c1724696_1c17207a2,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1bd570281_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1bbddbd52_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1bbdde838_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1bbdebd40_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1bbddc22b_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1bbdd1440_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1bbe00591_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1acb3d420_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1acbc00a6_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1ac9ce129_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1acaa2351_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1acaaca65_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1acab021b_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1acab1926_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1ac9cb203_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1aca3208e_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1acaae6b0_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1acaa087c_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type18_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type18_to_str(void *alloc) noexcept { return _1bdb1568e_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_any_type18_eq, .to_str=__jule_any_type18_to_str};
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ac95d5a3_Label> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1ac95aa56_Scope> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1acb8cded_Data> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1aca9e1d8_BackendEmitExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aca9ccec_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aca9e4d5_FreeExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aca97115_FnCallExprModel> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1ac95b68e_Conditional> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1ac95b98b_InfIter> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1ac9c2ace_WhileKind> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1ac95be42_WhileIter> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1ac9c34d6_RangeKind> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1ac95c88d_RangeIter> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1ac95cc23_ContSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1ac95dc13_GotoSt> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1ac95e0dc_Postfix> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1ac95e593_Assign> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1ac9b4362_IdentExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1aca97995_IndexingExprModel> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1ac95ea49_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1ac960286_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1ac9614a7_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1ac95d0ec_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1ac96184d_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1ac9bd811_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1ac9c165a_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1ac9c530c_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1ac9b2a47_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1ac9c4ac0_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1ac9c22a4_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1ac9c3c89_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1ac9bace7_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1ac9bb1c1_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1ac9bc1b1_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1ac9c60cc_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1ac9bb4bd_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1ac9c38b0_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1ac9c1a34_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1ac9b341b_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1acaa540e_FnIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1ac9d1e84_StructIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1ac9ca1be_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1ac9c9322_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1ac9c04a0_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1ac9c9a5e_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1ac9c76c7_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1ac9c8662_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1abc44868_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1abc439cc_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1abc440c6_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1abc43647_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1abc450b6_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1abc43cc9_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1abc42ba7_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1ac9b4ecd_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1aca974de_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1ac9b7266_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1ac9b8872_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1ac9b363b_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1aca9a723_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1ac9b6771_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1aca9dd64_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1acbc0d98_Type> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1aca9a426_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1ac9b5b5a_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1abc42e71_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1ac9b4b04_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1abc4259c_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1ac9b5781_NamespaceExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1abc4334a_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1aca98c82_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1aca96763_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1ac9b909d_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1aca95dd3_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1aca9a04c_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aca99315_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1aca99ba6_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aca986ee_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1aca97e4b_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1ac9b2d11_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1ac9b39d2_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1ac9b3dab_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1ac9b9a0a_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1ac9ba16a_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1ac9b53a7_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1ac9b7a91_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1ac9b8047_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1ac9b6111_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1aca9550e_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1aca95135_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1aca961d0_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aca9d4c3_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1aca9db77_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1bb109d73_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1bb10c969_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1bb10b65a_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1bb10c1b6_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1bb10c590_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1bb10a406_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1bb10a824_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1bb10b0c7_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1bb10b9e0_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1bb10cc66_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1bb10ab21_RefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1aca95a3c_StructArgExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1bb10d063_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1bb10bcdc_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type138_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type138_to_str(void *alloc) noexcept { return _1bd57b3be_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator172, .eq=__jule_any_type138_eq, .to_str=__jule_any_type138_to_str};
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1bd5b36d1_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1bbde5069_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1bd6b5be0_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1bbe0021c_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _1bbdd6940_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _1bbdd4674_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _1bbde74ab_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _1bbde98ed_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
inline jule::Bool __jule_anon1be2c7cc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa42a9_ParamIns> _25021_p1, jule::Ptr<_1acaa42a9_ParamIns> _25036_p2);
struct __jule_anon_1be33d812_ctx{
	jule::Ptr<_1ac92db28_comptimeStructField> _self_;
};
static void __jule_anon_1be33d812_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be33d812_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be33d812(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _6521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _6536_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1be34078c_ctx{
	jule::Ptr<_1ac92db28_comptimeStructField> _self_;
};
static void __jule_anon_1be34078c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be34078c_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be34078c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _7221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _7236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1be359157_ctx{
	jule::Ptr<_1ac931d4b_comptimeStatic> _self_;
};
static void __jule_anon_1be359157_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be359157_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be359157(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _17821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _17836_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1be35b0d2_ctx{
	jule::Ptr<_1ac931d4b_comptimeStatic> _self_;
};
static void __jule_anon_1be35b0d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be35b0d2_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be35b0d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _18521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _18536_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1be36c544_ctx{
	jule::Ptr<_1ac93506e_comptimeEnumField> _self_;
};
static void __jule_anon_1be36c544_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be36c544_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be36c544(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _28321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _28336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bda394b4_ctx{
	jule::Ptr<_1ac937d85_comptimeParam> _self_;
};
static void __jule_anon_1bda394b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bda394b4_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda394b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bda3b483_ctx{
	jule::Ptr<_1ac937d85_comptimeParam> _self_;
};
static void __jule_anon_1bda3b483_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bda3b483_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda3b483(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bda3d40d_ctx{
	jule::Ptr<_1ac937d85_comptimeParam> _self_;
};
static void __jule_anon_1bda3d40d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bda3d40d_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda3d40d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _41621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _41636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdac8c90_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdac8c90_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdac8c90_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdac8c90(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _97421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _97436_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdacac1a_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdacac1a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdacac1a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdacac1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98136_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdaccb95_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdaccb95_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdaccb95_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaccb95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98836_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdaceb20_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdaceb20_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdaceb20_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaceb20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _99521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _99536_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdad1a9a_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdad1a9a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdad1a9a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad1a9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdad3a25_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdad3a25_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdad3a25_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad3a25(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdad59a0_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdad59a0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdad59a0_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad59a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _101621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _101636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdad792a_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdad792a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdad792a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad792a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _102321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _102336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdad9b2a_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdad9b2a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdad9b2a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad9b2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103036_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdadbaa5_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdadbaa5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdadbaa5_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdadbaa5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103736_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdadda30_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdadda30_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdadda30_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdadda30(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _104421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _104436_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdae09aa_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdae09aa_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdae09aa_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae09aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105136_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdae2935_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdae2935_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdae2935_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae2935(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105836_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdae48b0_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdae48b0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdae48b0_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae48b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _106521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _106536_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdae683a_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdae683a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdae683a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae683a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _107221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _107236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdae87b5_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdae87b5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdae87b5_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae87b5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _107921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _107936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdaea740_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdaea740_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdaea740_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaea740(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _108621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _108636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdaec6ba_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdaec6ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdaec6ba_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaec6ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _109321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _109336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdaee645_ctx{
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bdaee645_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdaee645_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaee645(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _110021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _110036_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb2abb0_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb2abb0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb2abb0_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2abb0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _126221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _126236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb2cb3a_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb2cb3a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb2cb3a_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2cb3a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _126921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _126936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb2eab5_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb2eab5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb2eab5_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2eab5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _127621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _127636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb31a40_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb31a40_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb31a40_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb31a40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _128321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _128336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb339ba_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb339ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb339ba_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb339ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _129021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _129036_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb35945_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb35945_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb35945_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb35945(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _129721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _129736_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bdb378c0_ctx{
	jule::Ptr<_1ac9440c2_comptimeValue> _self_;
};
static void __jule_anon_1bdb378c0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb378c0_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb378c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _130421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _130436_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd3d768c_ctx{
	jule::Ptr<_1ac94879c_comptimeFile> _self_;
};
static void __jule_anon_1bd3d768c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3d768c_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3d768c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _142921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _142936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd3d965b_ctx{
	jule::Ptr<_1ac94879c_comptimeFile> _self_;
};
static void __jule_anon_1bd3d965b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3d965b_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3d965b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _143621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _143636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd3db5d6_ctx{
	jule::Ptr<_1ac94879c_comptimeFile> _self_;
};
static void __jule_anon_1bd3db5d6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3db5d6_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3db5d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _144321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _144336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd45166d_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd45166d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd45166d_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45166d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _194921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _194936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd4535e8_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd4535e8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd4535e8_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd4535e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _195621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _195636_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd455573_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd455573_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd455573_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd455573(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _196321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _196336_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd4574ed_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd4574ed_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd4574ed_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd4574ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _197021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _197036_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd459478_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd459478_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd459478_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd459478(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _197721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _197736_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd45b403_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd45b403_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd45b403_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45b403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _198421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _198436_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd45d37d_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd45d37d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd45d37d_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45d37d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _199121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _199136_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd460308_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd460308_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd460308_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd460308(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _199821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _199836_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd462508_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd462508_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd462508_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd462508(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _200521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _200536_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd464483_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd464483_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd464483_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd464483(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _201221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _201236_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1bd46640d_ctx{
	jule::Ptr<_1ac94c6b3_comptimeDecl> _self_;
};
static void __jule_anon_1bd46640d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd46640d_ctx>().dealloc(); }
inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd46640d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _201921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _201936_fc, jule::Ptr<_1acb8cded_Data>* );
struct __jule_anon_1be4a4deb_ctx{
	jule::Ptr<_1ac954148_constraintChecker> _self_;
};
static void __jule_anon_1be4a4deb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be4a4deb_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be4a4deb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _6415_sema, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _6433_generics);
struct __jule_anon_1be7767e9_ctx{
	jule::Ptr<_1ac98b8cd_ImportInfo> *_48628_pkg;
};
static void __jule_anon_1be7767e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be7767e9_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be7767e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _48735_spkg);
struct __jule_anon_1be7d8086_ctx{
	jule::Ptr<_1acaa540e_FnIns> _82743_f;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _82811_generics;
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> *_82759_ignored;
};
static void __jule_anon_1be7d8086_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be7d8086_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be7d8086(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _83442_sema);
struct __jule_anon_1be80105a_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*> _93046_algo;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _9357_generics;
};
static void __jule_anon_1be80105a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be80105a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be80105a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _93742_sema);
struct __jule_anon_1be805845_ctx{
	jule::Ptr<_1acaa540e_FnIns> _94937_f;
	jule::Ptr<_1ac9a8c2a_sema> _self_;
};
static void __jule_anon_1be805845_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be805845_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1be805845(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _95337_sema, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _95355_generics);
inline jule::Str __jule_anon1be987378(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1c0c0e346_ctx{
	jule::Ptr<_1bb239700_ObjectDeadCode> _self_;
};
static void __jule_anon_1c0c0e346_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c0e346_ctx>().dealloc(); }
inline void __jule_anon_1c0c0e346(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _19031_file);
struct __jule_anon_1c0c65776_ctx{
	_1bb242dac_exprDeadCode *_self_;
};
static void __jule_anon_1c0c65776_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c65776_ctx>().dealloc(); }
inline void __jule_anon_1c0c65776(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1c1052414_ctx{
	_1bb118854_exprOptimizer *_self_;
};
static void __jule_anon_1c1052414_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1052414_ctx>().dealloc(); }
inline void __jule_anon_1c1052414(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _69547_m);
struct __jule_anon_1c11054d9_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1c11054d9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c11054d9_ctx>().dealloc(); }
inline void __jule_anon_1c11054d9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c1109125_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
	jule::Ptr<_1ac95c88d_RangeIter> *_9336_it;
};
static void __jule_anon_1c1109125_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1109125_ctx>().dealloc(); }
inline void __jule_anon_1c1109125(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c1128b17_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
};
static void __jule_anon_1c1128b17_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1128b17_ctx>().dealloc(); }
inline void __jule_anon_1c1128b17(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c112b103_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
};
static void __jule_anon_1c112b103_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c112b103_ctx>().dealloc(); }
inline void __jule_anon_1c112b103(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c11451e9_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
};
static void __jule_anon_1c11451e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c11451e9_ctx>().dealloc(); }
inline void __jule_anon_1c11451e9(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c11ce8d2_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
};
static void __jule_anon_1c11ce8d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c11ce8d2_ctx>().dealloc(); }
inline void __jule_anon_1c11ce8d2(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c11d0c13_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
	jule::Ptr<_1ac960286_Match> _75730_m;
};
static void __jule_anon_1c11d0c13_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c11d0c13_ctx>().dealloc(); }
inline void __jule_anon_1c11d0c13(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c1256d88_ctx{
	jule::Ptr<_1bb248104_scopeCoder> _self_;
	jule::Ptr<_1aca97e4b_AnonFnExprModel> _112734_m;
};
static void __jule_anon_1c1256d88_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1256d88_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c1256d88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb3d420_Var> _113367_v);
struct __jule_anon_1c1623100_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c1623100_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1623100_ctx>().dealloc(); }
inline void __jule_anon_1c1623100(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _83538_pkg);
struct __jule_anon_1c1637dd4_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
	jule::Ptr<_1acb3d420_Var> _92024_v;
};
static void __jule_anon_1c1637dd4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1637dd4_ctx>().dealloc(); }
inline void __jule_anon_1c1637dd4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c1639ec4_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
	jule::Ptr<_1acb3d420_Var> _92024_v;
};
static void __jule_anon_1c1639ec4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1639ec4_ctx>().dealloc(); }
inline void __jule_anon_1c1639ec4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c163c6d0_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c163c6d0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c163c6d0_ctx>().dealloc(); }
inline void __jule_anon_1c163c6d0(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c163d879_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
	jule::Ptr<_1acb3d420_Var> _92024_v;
};
static void __jule_anon_1c163d879_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c163d879_ctx>().dealloc(); }
inline void __jule_anon_1c163d879(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c167ca1c_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c167ca1c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c167ca1c_ctx>().dealloc(); }
inline void __jule_anon_1c167ca1c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _118238_pkg);
struct __jule_anon_1c167de4c_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c167de4c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c167de4c_ctx>().dealloc(); }
inline void __jule_anon_1c167de4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _120531_file);
struct __jule_anon_1c168a387_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c168a387_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c168a387_ctx>().dealloc(); }
inline void __jule_anon_1c168a387(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _124438_pkg);
struct __jule_anon_1c1690568_ctx{
	jule::Ptr<_1aae47709_traitHash> _12777_hash;
};
static void __jule_anon_1c1690568_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1690568_ctx>().dealloc(); }
inline void __jule_anon_1c1690568(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn>* _128136_m);
struct __jule_anon_1c1692b42_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c1692b42_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1692b42_ctx>().dealloc(); }
inline void __jule_anon_1c1692b42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _129538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c1361734(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c13694c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1be332174(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _203925_pkg);
struct __jule_anon_1bec88019_ctx{
	jule::Str _473138_namespace;
};
static void __jule_anon_1bec88019_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bec88019_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bec88019(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _473230_imp);
struct __jule_anon_1c1624013_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c1624013_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1624013_ctx>().dealloc(); }
inline void __jule_anon_1c1624013(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _83632_file);
struct __jule_anon_1c167d930_ctx{
	jule::Ptr<_1ac98e150_Package> *_118238_pkg;
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c167d930_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c167d930_ctx>().dealloc(); }
inline void __jule_anon_1c167d930(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _118332_file);
struct __jule_anon_1c1693a55_ctx{
	jule::Ptr<_1aae49299_ObjectCoder> _self_;
};
static void __jule_anon_1c1693a55_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1693a55_ctx>().dealloc(); }
inline void __jule_anon_1c1693a55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _129632_file);
jule::Array<jule::Array<jule::Str,2>,5> _1a8e6310b_HelpMap;
jule::Str _1aaecbb9a_OutDir;
jule::Str _1aaecc074_OutName;
jule::Str _1aaecc32c_Out;
jule::Uintptr _1bb72746d_STDIN;
jule::Uintptr _1bb727715_STDOUT;
jule::Uintptr _1bb727a12_STDERR;
jule::Array<jule::U8,256> _1bb48a841_first;
jule::Array<_1bb48ade6_acceptRange,16> _1bb48b28c_acceptRanges;
jule::Array<jule::U8,32> _1a690b03a__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1a690b623__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1a8e426b2_RangeTable> _1a8dcee68__L;
jule::Ptr<_1a8e426b2_RangeTable> _1a8dd0d7b__LU;
jule::Ptr<_1a8e426b2_RangeTable> _1a8dd6d60_Letter;
jule::Ptr<_1a8e426b2_RangeTable> _1a8ddd130_Upper;
jule::Slice<_1a8e4175a_CaseRange> _1a8e3a820__CaseRanges;
jule::Array<jule::U8,256> _1a8e3ab0b__PROPERTIES;
jule::Array<jule::U16,128> _1a8e3c8dd_asciiFold;
jule::Slice<_1a8e41260_foldPair> _1a8e3cbc9_caseOrbit;
jule::Array<jule::Str,4> _1a6a21738_CppHeaderExts;
jule::Array<jule::Str,3> _1a6a21947_CppExts;
jule::Array<jule::Str,1> _1a6a21b67_ObjectiveCppExts;
jule::Str _1a8e59d8e_PathStdlib;
jule::Str _1a8e5a0e2_PathExec;
jule::Str _1a8e5a378_PathWd;
jule::Str _1a8e5a675_PathApi;
jule::Str _1a8e5a92d_OS;
jule::Str _1a8e5abd6_Arch;
jule::Str _1a8e5e668_Compiler;
jule::Str _1a8e60a65_CompilerPath;
jule::Str _1a8e60c74_CppStd;
jule::Bool _1a8e6101b_Shadowing;
jule::Bool _1a8e612c4_Transpilation;
jule::Bool _1a8e6157c_Test;
jule::Bool _1a8e61835_RC;
jule::Bool _1a8e61bed_Safety;
jule::Bool _1a8e61e40_Production;
_1aa502622_floatInfo _1aa502974_f32info;
_1aa502622_floatInfo _1aa502c71_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1aa50a5a3_detailedPowsOfTen;
jule::Slice<jule::I32> _1aa50c30d_powtab;
jule::Slice<jule::F64> _1aa50cdbe_f64pow10;
jule::Slice<jule::F32> _1aa50d1ee_f32pow10;
jule::Array<jule::U64,20> _1aa511400_u64pow10;
jule::Slice<_1aa515190_leftCheat> _1aa5155be_leftCheats;
jule::Array<jule::I32,5> _1abc25393_Spaces;
jule::Array<jule::U32,6> _1abc2565c_UnaryOps;
jule::Array<jule::U32,18> _1abc2598c_BinOps;
jule::Array<jule::U32,2> _1abc26064_PostfixOps;
jule::Array<jule::U32,11> _1abc26350_AssignOps;
jule::Array<_1abc34957_kindPair,28> _1abc34d42_keywords;
jule::Array<_1abc34957_kindPair,46> _1abc35172_basicOps;
jule::I32 _1ac92249b_BitSize;
jule::Str _1ac9226dd_SysInt;
jule::Str _1ac922985_SysUint;
jule::Slice<jule::Str> _1ac95380c_builtinConstraints;
jule::Ptr<_1acbc0d98_Type> _1acc43e3d_primNil;
jule::Ptr<_1acbc0d98_Type> _1acc4423a_primVoid;
jule::Ptr<_1acbc0d98_Type> _1acc444e3_primAny;
jule::Ptr<_1acbc0d98_Type> _1acc447e0_primStr;
jule::Ptr<_1acbc0d98_Type> _1acc44a98_primBool;
jule::Ptr<_1acbc0d98_Type> _1acc44d51_primUintptr;
jule::Ptr<_1acbc0d98_Type> _1acc45109_primUint;
jule::Ptr<_1acbc0d98_Type> _1acc454c2_primInt;
jule::Ptr<_1acbc0d98_Type> _1acc45714_primI8;
jule::Ptr<_1acbc0d98_Type> _1acc459ab_primI16;
jule::Ptr<_1acbc0d98_Type> _1acc45c64_primI32;
jule::Ptr<_1acbc0d98_Type> _1acc4601c_primI64;
jule::Ptr<_1acbc0d98_Type> _1acc462c5_primU8;
jule::Ptr<_1acbc0d98_Type> _1acc4657d_primU16;
jule::Ptr<_1acbc0d98_Type> _1acc46836_primU32;
jule::Ptr<_1acbc0d98_Type> _1acc46d20_primU64;
jule::Ptr<_1acbc0d98_Type> _1acc47062_primF32;
jule::Ptr<_1acbc0d98_Type> _1acc47271_primF64;
jule::Ptr<_1ad625c5e_Meta> _1ad623a2b_ProgramMeta;
jule::Ptr<_1bb1228e6_data> _1bb121e34_emptyData;
jule::Bool _1bb126dd4_Copy;
jule::Bool _1bb1271d1_Deadcode;
jule::Bool _1bb127489_Append;
jule::Bool _1bb127786_Math;
jule::Bool _1bb127a3e_Access;
jule::Bool _1bb127ce7_Inline;
jule::Bool _1bb1280a0_Ptr;
jule::Bool _1bb128468_Cond;
jule::Bool _1bb1286aa_Str;
jule::Bool _1bb128952_Slice;
jule::Bool _1bb128c0a_Assign;
jule::Bool _1bb128eb3_Exceptional;
jule::Bool _1bb12926b_Iter;
jule::Bool _1bb129524_Dynamic;
jule::Bool _1bb1297cc_Array;
jule::Bool _1bb129cb6_Len;
jule::Bool _1bb12a008_StdStrings;
jule::Bool _1bb12a217_StdMathCmplx;
jule::Bool _1bb243b38_exprEnabled;
jule::Bool _1bb243d47_scopeEnabled;
jule::Array<jule::U64,12> _1aae3aa2c_mdays;
jule::Str _1bb247895_assignArgName;
jule::Ptr<_1acbc0d98_Type> _1aae46719_generalGCPtr;
jule::Slice<_1a8e4175a_CaseRange> _1a8e3a534_CaseRanges;


inline jule::Bool _1bb48ade6_acceptRange_eq(_1bb48ade6_acceptRange *_self_, _1bb48ade6_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1bb4dda81_LittleEndian_eq(_1bb4dda81_LittleEndian *_self_, _1bb4dda81_LittleEndian _other_) { return true; }

inline jule::U32 static__1bb504745_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1bb50516e_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1bb50879e_u128_eq(_1bb50879e_u128 *_self_, _1bb50879e_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1c0d58a23_group_eq(_1c0d58a23_group *_self_, _1c0d58a23_group _other_) {
	return 
		_1bbe2630e_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1c0d59260_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1c0d56724__Map> static__1c0d56cda_make(void) {
	return jule::new_ptr<_1c0d56724__Map>(_1c0d56724__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c0d58a23_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c0d56e3e_initData(_1c0d56724__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1a691ae5c_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c0d58a23_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c0d58a23_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d7604b:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a691b16b_newEmptyMetadata();
			}
			_iter_next_1c0d7604b:;
			++it;
			_1407_i++;
			goto _iter_begin_1c0d7604b;
		}
		_iter_end_1c0d7604b:;
	};
}



inline jule::U64 _1c0d57093_hash(_1c0d56724__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1bbdd1440_toStr(_14616_k);;
	return _1bb50bc25_hash(_1bb76481d_StrBytes(_1473_bytes));;
}



inline void _1c0d571e7_rehash(_1c0d56724__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c0d56e3e_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c0d58a23_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c0d58a23_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c0d58a23_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c0d58a23_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d79637:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a691b16b_newEmptyMetadata();
			}
			_iter_next_1c0d79637:;
			++it;
			_1617_i++;
			goto _iter_begin_1c0d79637;
		}
		_iter_end_1c0d79637:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d79291:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0d7b1a5:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c0d7b1a5;
							};
							{
								(*(_1c0d57758_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c0d7b1a5:;
						++it;
						_1678_s++;
						goto _iter_begin_1c0d7b1a5;
					}
					_iter_end_1c0d7b1a5:;
				};
			}
			_iter_next_1c0d79291:;
			++it;
			_1667_g++;
			goto _iter_begin_1c0d79291;
		}
		_iter_end_1c0d79291:;
	};
}



inline jule::I32 _1c0d5734b_nextSize(_1c0d56724__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c0d574a0_lookup(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0d57093_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a691b842_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a691a5bb_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c0d8280a:;
			}
			_iter_end_1c0d8280a:;;
			_2018_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c0d7e50a:;
	}
	_iter_end_1c0d7e50a:;;
}



inline jule::Bool _1c0d57604_get(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c0d574a0_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1c0d57758_set(_1c0d56724__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c0d571e7_rehash(_self_, _1c0d5734b_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0d57093_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a691b842_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a691a5bb_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c0d8a648:;
			}
			_iter_end_1c0d8a648:;;
			_2488_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a691a5bb_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c0d88aa8:;
	}
	_iter_end_1c0d88aa8:;;
}



inline jule::Bool _1c0d578ac_del(jule::Ptr<_1c0d56724__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0d57093_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a691b842_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a691a5bb_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c0d93332:;
			}
			_iter_end_1c0d93332:;;
			_2838_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c0d92122:;
	}
	_iter_end_1c0d92122:;;
}



inline void _1c0d57a11_clear(jule::Ptr<_1c0d56724__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d99aca:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0d9a5d1:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c0d9a5d1:;
						++it;
						_3298_j++;
						goto _iter_begin_1c0d9a5d1;
					}
					_iter_end_1c0d9a5d1:;
				};
			}
			_iter_next_1c0d99aca:;
			++it;
			_3287_i++;
			goto _iter_begin_1c0d99aca;
		}
		_iter_end_1c0d99aca:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d99965:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1c0d58a23_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0d9cc32:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c0d9cc32:;
							++it;
							_3389_j++;
							goto _iter_begin_1c0d9cc32;
						}
						_iter_end_1c0d9cc32:;
					};
				};
			}
			_iter_next_1c0d99965:;
			++it;
			_3357_i++;
			goto _iter_begin_1c0d99965;
		}
		_iter_end_1c0d99965:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1c0d57b65_len(jule::Ptr<_1c0d56724__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I32 _1c0d57cb9_cap(_1c0d56724__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c0d62e5b_mapIterator _1c0d57e1d_iterator(jule::Ptr<_1c0d56724__Map> _self_) {
	_1c0d62e5b_mapIterator _3607_iterator = _1c0d62e5b_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c0d58a23_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c0d634de_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1c0da2c59__Map> static__1c0da3276_make(void) {
	return jule::new_ptr<_1c0da2c59__Map>(_1c0da2c59__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c0da4d8d_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c0da33ca_initData(_1c0da2c59__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1a691ae5c_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c0da4d8d_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c0da4d8d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1acaa540e_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa540e_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0dc04b3:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a691b16b_newEmptyMetadata();
			}
			_iter_next_1c0dc04b3:;
			++it;
			_1407_i++;
			goto _iter_begin_1c0dc04b3;
		}
		_iter_end_1c0dc04b3:;
	};
}



inline jule::U64 _1c0da352e_hash(_1c0da2c59__Map* _self_, jule::Ptr<_1acaa540e_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1be91d188_toStr(_14616_k);;
	return _1bb50bc25_hash(_1bb76481d_StrBytes(_1473_bytes));;
}



inline void _1c0da3683_rehash(_1c0da2c59__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c0da33ca_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c0da4d8d_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c0da4d8d_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c0da4d8d_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c0da4d8d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1acaa540e_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa540e_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0dc3a9e:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a691b16b_newEmptyMetadata();
			}
			_iter_next_1c0dc3a9e:;
			++it;
			_1617_i++;
			goto _iter_begin_1c0dc3a9e;
		}
		_iter_end_1c0dc3a9e:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0dc3708:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0dc561c:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c0dc561c;
							};
							{
								(*(_1c0da3be4_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c0dc561c:;
						++it;
						_1678_s++;
						goto _iter_begin_1c0dc561c;
					}
					_iter_end_1c0dc561c:;
				};
			}
			_iter_next_1c0dc3708:;
			++it;
			_1667_g++;
			goto _iter_begin_1c0dc3708;
		}
		_iter_end_1c0dc3708:;
	};
}



inline jule::I32 _1c0da37d7_nextSize(_1c0da2c59__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c0da393b_lookup(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0da352e_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a691b842_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a691a5bb_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*(_self_))._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c0dcbc72:;
			}
			_iter_end_1c0dcbc72:;;
			_2018_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c0dc8972:;
	}
	_iter_end_1c0dc8972:;;
}



inline jule::Slice<jule::Uintptr> _1c0da3a90_get(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c0da393b_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1c0da3be4_set(_1c0da2c59__Map* _self_, jule::Ptr<_1acaa540e_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c0da3683_rehash(_self_, _1c0da37d7_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0da352e_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a691b842_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a691a5bb_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c0dd4ab0:;
			}
			_iter_end_1c0dd4ab0:;;
			_2488_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a691a5bb_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c0dd3020:;
	}
	_iter_end_1c0dd3020:;;
}



inline jule::Bool _1c0da3d48_del(jule::Ptr<_1c0da2c59__Map> _self_, jule::Ptr<_1acaa540e_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a691b545_splitHash(_1c0da352e_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a691b842_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a6919ee4_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a691a5bb_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*(_self_))._field_resident)--;
						} else {
							(*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*(_self_))._field_dead)++;
						};
						jule::Ptr<_1acaa540e_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*(_self_))._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c0ddc799:;
			}
			_iter_end_1c0ddc799:;;
			_2838_matches=_1a691a302_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c0ddb589:;
	}
	_iter_end_1c0ddb589:;;
}



inline void _1c0da3e9c_clear(jule::Ptr<_1c0da2c59__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0de4042:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0de4a48:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c0de4a48:;
						++it;
						_3298_j++;
						goto _iter_begin_1c0de4a48;
					}
					_iter_end_1c0de4a48:;
				};
			}
			_iter_next_1c0de4042:;
			++it;
			_3287_i++;
			goto _iter_begin_1c0de4042;
		}
		_iter_end_1c0de4042:;
	};
	jule::Ptr<_1acaa540e_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*(_self_))._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0de3dcc:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1c0da4d8d_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0de7199:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c0de7199:;
							++it;
							_3389_j++;
							goto _iter_begin_1c0de7199;
						}
						_iter_end_1c0de7199:;
					};
				};
			}
			_iter_next_1c0de3dcc:;
			++it;
			_3357_i++;
			goto _iter_begin_1c0de3dcc;
		}
		_iter_end_1c0de3dcc:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1c0da4101_len(jule::Ptr<_1c0da2c59__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*(_self_))._field_dead);;
}



inline jule::I32 _1c0da4255_cap(_1c0da2c59__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c0dac33a_mapIterator _1c0da43a9_iterator(jule::Ptr<_1c0da2c59__Map> _self_) {
	_1c0dac33a_mapIterator _3607_iterator = _1c0dac33a_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c0da4d8d_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c0dac8bd_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1c0d634de_init(_1c0d62e5b_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c0d58a23_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c0d57b65_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1d6846088_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1c0d63643_next(_1c0d62e5b_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c0d6b085;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c0d6b085:;
			}
			_iter_end_1c0d6b085:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c0d6a31a:;
	}
	_iter_end_1c0d6a31a:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1c0dac8bd_init(_1c0dac33a_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c0da4d8d_group> _1___jule_assign_arg = (*((*(_self_))._field_m))._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c0da4101_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1d6846088_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1acaa540e_FnIns__jule_tuple_psuintptr _1c0daca22_next(_1c0dac33a_mapIterator* _self_) {
	__jule_tuple_px_1acaa540e_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c0db54ec;
					};
					jule::Ptr<_1acaa540e_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c0db54ec:;
			}
			_iter_end_1c0db54ec:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c0db4782:;
	}
	_iter_end_1c0db4782:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _1a6a5cb3c_Builder static__1a6a5d489_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1a6a5cb3c_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1a6a5d7ca_Write(_1a6a5cb3c_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1a6a5db1b_WriteStr(_1a6a5cb3c_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1a6a5ddc4_WriteByte(_1a6a5cb3c_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a6a5e215_WriteRune(_1a6a5cb3c_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1bb48ceb4_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1a6a5e49b_Str(_1a6a5cb3c_Builder* _self_) {
	jule::Str _687_s = _1bb764d6d_StrFromBytes((*(_self_))._field_buf);;
	_1a6a5e699_Clear(_self_);
	return _687_s;;
}



inline void _1a6a5e699_Clear(_1a6a5cb3c_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1a6a5e930_Len(_1a6a5cb3c_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1a6a5ee4c_Buf(_1a6a5cb3c_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1a6a60205_SetBuf(_1a6a5cb3c_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1a8e41260_foldPair_eq(_1a8e41260_foldPair *_self_, _1a8e41260_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1a8e4175a_CaseRange_eq(_1a8e4175a_CaseRange *_self_, _1a8e4175a_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1bbe748bd_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1a8e41c11_Range16_eq(_1a8e41c11_Range16 *_self_, _1a8e41c11_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1a8e4223e_Range32_eq(_1a8e4223e_Range32 *_self_, _1a8e4223e_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _1a8e5100b_index(_1a8e50a44_lazyBuff* _self_, jule::I32 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1a8e512b4_append(_1a8e50a44_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1a8e5154a_string(_1a8e50a44_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1bb764aa4_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1a6b2a91e_cmdAttrs_eq(_1a6b2a91e_cmdAttrs *_self_, _1a6b2a91e_cmdAttrs _other_) {
	return 
		(_self_->_field_hProcess == _other_._field_hProcess) &&
		(_self_->_field_hThread == _self_->_field_hThread);
}






inline jule::Bool _1a6b3087a_File_eq(_1a6b3087a_File *_self_, _1a6b3087a_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Ptr<_1a6b3087a_File> static__1a6b3135e_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1a6b3087a_File>(_1a6b3087a_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1a6b3087a_File>> static__1a6b31628_Create(jule::Str _7819_path) {
	return static__1a6b34719_Open(_7819_path, static_cast<jule::I32>(770LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1a6b318e2_Read(jule::Str _8517_path) {
	_1a6b32eba_Stat _863_s = ({
		auto except = static__1a8e596eb_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a6b3365d_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _917_sz = static_cast<jule::I32>(_1a6b338e4_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I32>(_1a6b338e4_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_1a6b3087a_File> _1047_f = ({
		auto except = static__1a6b34719_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1a6b3087a_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I32 _1084_rn = ({
				auto except = _1a6b35220_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_1bd59a5ca;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_1bd59a5ca:;
	}
	_iter_end_1bd59a5ca:;;
	({
		auto except = _1a6b32591_Close(_1047_f);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__1a6b31c88_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm) {
	jule::Ptr<_1a6b3087a_File> _1257_f = ({
		auto except = static__1a6b34719_Open(_12418_path, static_cast<jule::I32>(769LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1a6b3087a_File>(nullptr);});
	});;
	jule::I32 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _1a6b34dce_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1bd5a0778:;
	}
	_iter_end_1bd5a0778:;;
	return _1a6b32591_Close(_1257_f);
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a6b32591_Close(_1a6b3087a_File* _self_) {
	if ((_1bb73c6a3_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::Ptr<_1a6b3087a_File>> static__1a6b34719_Open(jule::Str _1717_path, jule::I32 _1728_flag, jule::I32 _1741_mode) {
	jule::Slice<jule::U16> _183_utf16Path = _1bb6eeec3_UTF16FromStr(_1717_path);;
	jule::I32 _193_handle = _1bb7287e3_Wopen((&(_183_utf16Path[0LL])), _1728_flag, _1741_mode);;
	if ((_193_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1a6b3087a_File>>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1a6b3087a_File>>{.result=static__1a6b3135e_New(static_cast<jule::Uintptr>(_193_handle))};;
}



inline jule::VoidExceptional static__1a6b3494a_Remove(jule::Str _2719_path) {
	jule::Slice<jule::U16> _283_utf16Path = _1bb6eeec3_UTF16FromStr(_2719_path);;
	if ((!(_1bb729409_DeleteFile((&(_283_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1a6b2c734_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a6b34dce_Write(_1a6b3087a_File* _self_, jule::Slice<jule::U8> _4021_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_4021_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1bb4a6054_handleRW(&(_4021_buf));
	if (_1a6b35561_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1bb48ec96_writeConsole((*(_self_))._field_handle, _4021_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1bb73ca5a_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_4021_buf[0LL])), static_cast<jule::U32>(_4021_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1a6b35220_Read(_1a6b3087a_File* _self_, jule::Slice<jule::U8> _6824_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_6824_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1bb4a6054_handleRW(&(_6824_buf));
	if (_1a6b35561_isConsoleHandle((*(_self_))._field_handle)) {
		__jule_func_result=_1bb49011a_readConsole((*(_self_))._field_handle, _6824_buf);
		if ((__jule_func_result == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
		};
		__jule_func_result = __jule_func_result;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=_1bb73c2c9_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_6824_buf[0LL])), static_cast<jule::U32>(_6824_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}








inline jule::Bool _1a6b32eba_Stat_eq(_1a6b32eba_Stat *_self_, _1a6b32eba_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Bool _1a6b333c7_IsDir(_1a6b32eba_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1a6b3365d_IsReg(_1a6b32eba_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1a6b338e4_Size(_1a6b32eba_Stat* _self_) {
	return (*(_self_))._field_size;;
}



inline jule::Exceptional<_1a6b32eba_Stat> static__1a8e596eb_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_1a6b32eba_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	jule::Slice<jule::U16> _143_utf16Path = _1bb6eeec3_UTF16FromStr(_1015_path);;
	struct _stat _157_handle = (struct _stat){};;
	jule::I32 _163_code = _1bb7283b4_Wstat((&(_143_utf16Path[0LL])), (&(_157_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_1a6b32eba_Stat>{.error=jule::Any(_1a8e58e37_getLastFsError(), &__jule_any_type0)};
	};
	_1a6b32eba_Stat _207_stat = _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U32>(_157_handle.st_size);
	if (((_157_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_157_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1a6b32eba_Stat>{.result=_207_stat};;
}








inline jule::Bool _1a6a6bde3_Log_eq(_1a6a6bde3_Log *_self_, _1a6a6bde3_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1aa502622_floatInfo_eq(_1aa502622_floatInfo *_self_, _1aa502622_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1aa515190_leftCheat_eq(_1aa515190_leftCheat *_self_, _1aa515190_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1aa515ba7_decimal_eq(_1aa515ba7_decimal *_self_, _1aa515ba7_decimal _other_) {
	return 
		_1bd626777_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1aa50c671_set(_1aa515ba7_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1bdbd3592:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1bdbd3729:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1bdbd352b:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1bdbd5176:;
					{
						goto _iter_next_1bdbd4906;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1bdbd5220:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bdbd4906;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1bdbd5286:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bdbd4906;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bdbd4906;
					}
				}
				_match_end_1bdbd5044:;
			};
			goto _iter_end_1bdbd4906;
		}
	_iter_next_1bdbd4906:;
	}
	_iter_end_1bdbd4906:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1aa507ccb_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1bdbdb0a0;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1bdbdb0a0:;
		}
		_iter_end_1bdbdb0a0:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1aa50c9b2_floatBits(_1aa515ba7_decimal* _self_, _1aa502622_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bdbe9ae7;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bdbe8b4b;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bdbe9ae7;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1aa50c30d_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1aa50c30d_powtab[(*(_self_))._field_dp];
			};
			_1aa51634a_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1bdbe145c:;
	}
	_iter_end_1bdbe145c:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1aa50c30d_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1aa50c30d_powtab[(-((*(_self_))._field_dp))];
			};
			_1aa51634a_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1bdbde9aa:;
	}
	_iter_end_1bdbde9aa:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1aa51634a_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1bdbe8b4b;
	};
	_1aa51634a_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1aa516dea_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1bdbe8b4b;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1bdbe9ae7;
	_julec_label_1bdbe8b4b:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bdbe9ae7:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1aa516092_assign(_1aa515ba7_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1bdbec369:;
	}
	_iter_end_1bdbec369:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bdbec666:;
	}
	_iter_end_1bdbec666:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1aa517505_trim(_self_);
}



inline void _1aa51634a_shift(_1aa515ba7_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bdbeec62:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1bdbeed0b:;
			{
				while ((_17625_k > 28LL)) {
					{
						_1aa518050_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_1bdc00911:;
				}
				_iter_end_1bdc00911:;;
				_1aa518050_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1bdbeed72:;
			{
				while ((_17625_k < -28LL)) {
					{
						_1aa5177e1_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_1bdc00834:;
				}
				_iter_end_1bdc00834:;;
				_1aa5177e1_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1bdbeeaec:;
	};
}



inline void _1aa516603_roundDown(_1aa515ba7_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1aa517505_trim(_self_);
}



inline void _1aa5168ab_roundUp(_1aa515ba7_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1bdc03cbb:;
	}
	_iter_end_1bdc03cbb:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1aa516b64_round(_1aa515ba7_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1aa5183c4_shouldRoundUp(_self_, _23221_nd)) {
		_1aa5168ab_roundUp(_self_, _23221_nd);
	} else {
		_1aa516603_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1aa516dea_roundedInteger(_1aa515ba7_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1bdc06c25:;
	}
	_iter_end_1bdc06c25:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1bdc086a5:;
	}
	_iter_end_1bdc086a5:;;
	if (_1aa5183c4_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1bb5b3491_AnsiEscape_eq(_1bb5b3491_AnsiEscape *_self_, _1bb5b3491_AnsiEscape _other_) { return true; }

inline void static__1bb5b4c9a_Reset(void) {
	jule::print(_1bbdd1440_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1bb5b4ea9_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1bbdd1440_toStr(_1918_escape));
	jule::print(_1bbdd1440_toStr(_1931_text));
	static__1bb5b4c9a_Reset();
}








inline jule::Bool _1aa51b493_Logger_eq(_1aa51b493_Logger *_self_, _1aa51b493_Logger _other_) { return true; }

inline void static__1aa51b74b_LogFlat(_1a6a6bde3_Log* _1421_l) {
	jule::println(_1bbdd1440_toStr((*(_1421_l))._field_Text));
}



inline void static__1aa51b95a_LogError(_1a6a6bde3_Log* _1922_l) {
	jule::print(_1bbdd1440_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1bbdd1440_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1bbdd1440_toStr((*(_1922_l))._field_Text));
	static__1bb5b4c9a_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1bbdd1440_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1bbdd1440_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1bbdd1440_toStr(jule::Str::lit(":", 1)));
		jule::print(_1bbdd1440_toStr(_1aa51a22d_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1bbdd1440_toStr(jule::Str::lit(":", 1)));
		jule::print(_1bbdd1440_toStr(_1aa51a22d_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1a8e4d844_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1a8e4c139_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1bbdd1440_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1aa51a22d_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1bbdd1440_toStr(_434_row));
		jule::print(_1bbdd1440_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1bbdd1440_toStr(_388_line));
		jule::print(_1bbdd1440_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1bbdd1440_toStr(_1a8e45b27_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1bbdd1440_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1bbdd1440_toStr(_1a8e45b27_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1bbdd1440_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1bbdd1440_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1bbdd1440_toStr(_1a8e45b27_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1bbdd1440_toStr(jule::Str::lit(" | ", 3)));
			static__1bb5b4ea9_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1bbdd1440_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1bbdd1440_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1aa51bb8b_Log(_1a6a6bde3_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1bdc2b8c6:;
			{
				static__1aa51b74b_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1bdc2bb7e:;
			{
				static__1aa51b95a_LogError(_6417_l);
			}
		}
		_match_end_1bdc2ba80:;
	};
}



inline void static__1aa51bdbc_PrintLogs(jule::Slice<_1a6a6bde3_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc2c652:;
		if (it != expr_end) {
			_1a6a6bde3_Log *_7510_l = it;
			{
				static__1aa51bb8b_Log(_7510_l);
			}
			_iter_next_1bdc2c652:;
			++it;
			goto _iter_begin_1bdc2c652;
		}
		_iter_end_1bdc2c652:;
	};
	jule::print(_1bbdd1440_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1bbdd1440_toStr(_1aa51a22d_Itoa((*(_7423_logs)).len())));
	jule::println(_1bbdd1440_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1abc2ba81_Token_eq(_1abc2ba81_Token *_self_, _1abc2ba81_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1abc2be38_Prec(_1abc2ba81_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bdc8d42c:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bdc8de55:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bdc8decc:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1bdc8d4a4:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1bdc8d52b:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1bdc8dc24:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bdc8d361:;
	};
}







inline jule::Ptr<_1abc32636_Fileset> static__1abc329bb_New(jule::Str _2016_path) {
	return jule::new_ptr<_1abc32636_Fileset>(_1abc32636_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr)});;
}



inline void _1abc3302c_FillMut(_1abc32636_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _1abc332b3_Dir(_1abc32636_Fileset* _self_) {
	return _1a8e52edb_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1abc33549_Name(_1abc32636_Fileset* _self_) {
	return _1a8e52b12_Base((*(_self_))._field_Path);;
}



inline jule::Str _1abc33b21_GetRow(_1abc32636_Fileset* _self_, jule::I32 _5718_row) {
	jule::I32 _587_n = 0LL;;
	jule::I32 _597_lineStart = 0LL;;
	jule::I32 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_1bdc9505a;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _1bb764d6d_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_1bdc9505a:;
	}
	_iter_end_1bdc9505a:;;
	return jule::Str();;
}








inline jule::Bool _1abc34957_kindPair_eq(_1abc34957_kindPair *_self_, _1abc34957_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1abc3aead_pushErr(_1abc3a8e7_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1abc356b1_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1abc3b51e_lex(_1abc3a8e7_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1abc3d741_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_1abc2ba81_Token> _4638_token = _1abc3ec2b_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1abc2ba81_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1bdcc8ac7:;
	}
	_iter_end_1bdcc8ac7:;;
}



inline jule::Str _1abc3b860_id(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1abc302b0_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1abc309ec_IsDecimal(_4824_pr)))) && (!(_1abc302b0_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1bb764d6d_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1bdccbd3e:;
	}
	_iter_end_1bdccbd3e:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1bb764d6d_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1abc3bae6_resume(_1abc3a8e7_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_data[_4977_i]);;
			if (_1abc2ecb5_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bdcd0d65:;
						{
							_1abc3d741_newLine(_self_);
						}
					}
					else {
						_case_begin_1bdcd0727:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bdcd09ad:;
				};
				goto _iter_next_1bdcce57d;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_1bdcd02d7;
					};
				}
			_iter_next_1bdcd02d7:;
			}
			_iter_end_1bdcd02d7:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1bdcce57d:;
	}
	_iter_end_1bdcce57d:;;
	return nullptr;;
}



inline void _1abc3bd9e_lexLineComment(_1abc3a8e7_lex* _self_, jule::Ptr<_1abc2ba81_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1bdcd340b;
			};
		}
	_iter_next_1bdcd340b:;
	}
	_iter_end_1bdcd340b:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1bb764d6d_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1abc3c157_lexRangeComment(_1abc3a8e7_lex* _self_, jule::Ptr<_1abc2ba81_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1bdcd6a6e;
			};
			if ((_5414_r == '\n')) {
				_1abc3d741_newLine(_self_);
				goto _iter_next_1bdcd6a6e;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1bb764d6d_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bdcd6a6e:;
	}
	_iter_end_1bdcd6a6e:;;
	_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1abc3c498_num(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1abc3920e_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bdcdd823;
	};
	__jule_func_result=_1abc39033_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bdcdd823;
	};
	__jule_func_result=_1abc377c3_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bdcdd823;
	};
	__jule_func_result=_1abc37509_commonNum(_56520_txt);
	_julec_label_1bdcdd823:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1abc3c7d9_escapeSeq(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1bdce25d5;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bdce04c3:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1bb764d6d_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bdce0380:;
			{
				_5887_seq=_1abc3982a_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bdce03e6:;
			{
				_5887_seq=_1abc39ae4_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bdce0061:;
			{
				_5887_seq=_1abc39dad_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1bdcde835:;
			{
				_5887_seq=_1abc3a177_byteEscape(_58726_txt);
			}
		}
		_match_end_1bdcdedda:;
	};
	_julec_label_1bdce25d5:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1abc3cbd5_getRune(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1abc3c7d9_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1abc3d026_lexRune(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1a6a5cb3c_Builder _6277_run = static__1a6a5d489_New(8LL);;
	({
		auto except = _1a6a5ddc4_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1bdce63db;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1abc3d741_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1abc3cbd5_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1a6a5db1b_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1bb48d8bb_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bdce63db;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1bdce63db:;
	}
	_iter_end_1bdce63db:;;
	if ((_6307_n == 0LL)) {
		_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1a6a5e49b_Str(&_6277_run);;
}



inline jule::Str _1abc3d2ac_lexStr(_1abc3a8e7_lex* _self_) {
	_1a6a5cb3c_Builder _6677_s = static__1a6a5d489_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1a6a5ddc4_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1bdcebe19;
			};
			if ((_6754_ch == '\n')) {
				_1abc3d741_newLine(_self_);
				if ((!(_6703_raw))) {
					_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1abc3cbd5_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1a6a5db1b_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1bb48d8bb_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1bdcebe19;
			};
		}
	_iter_next_1bdcebe19:;
	}
	_iter_end_1bdcebe19:;;
	return _1a6a5e49b_Str(&_6677_s);;
}



inline void _1abc3d741_newLine(_1abc3a8e7_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1abc3dca2_isOp(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1abc2ba81_Token>* _70858_t) {
	if ((!(_1abc35a79_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1abc3e19d_lexBasicOps(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1abc2ba81_Token>* _71845_tok) {
	{
		auto expr = &(_1abc35172_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdd038d2:;
		if (it != expr_end) {
			_1abc34957_kindPair *_71910_pair = it;
			{
				if (_1abc3dca2_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1bdd038d2:;
			++it;
			goto _iter_begin_1bdd038d2;
		}
		_iter_end_1bdd038d2:;
	};
	return false;;
}



inline jule::Bool _1abc3e599_lexId(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1abc2ba81_Token>* _72740_t) {
	jule::Str _7283_lex = _1abc3b860_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1abc3e995_lexNum(_1abc3a8e7_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1abc2ba81_Token>* _73741_t) {
	jule::Str _7383_lex = _1abc3c498_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1abc2ba81_Token> _1abc3ec2b_token(_1abc3a8e7_lex* _self_) {
	jule::Ptr<_1abc2ba81_Token> _7497_t = jule::new_ptr<_1abc2ba81_Token>(_1abc2ba81_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1abc3bae6_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1abc3e995_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1bdd0992c:;
			{
				goto _match_end_1bdd09333;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1bdd09696:;
			{
				(*_7497_t.alloc)._field_Kind=_1abc3d026_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1bdd0970c:;
			{
				(*_7497_t.alloc)._field_Kind=_1abc3d2ac_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1abc35a79_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1bdd09773:;
			{
				_1abc3bd9e_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1abc35a79_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1bdd097d9:;
			{
				_1abc3c157_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1abc3e19d_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1bdd09850:;
			{
				goto _match_end_1bdd09333;
			}
		}
		else if (_1abc3e599_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1bdd0ac4c:;
			{
				{
					auto expr = &(_1abc34d42_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdd0eab9:;
					if (it != expr_end) {
						_1abc34957_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1bdd0eab9;
							};
						}
						_iter_next_1bdd0eab9:;
						++it;
						goto _iter_begin_1bdd0eab9;
					}
					_iter_end_1bdd0eab9:;
				};
			}
		}
		else {
			_case_begin_1bdd09597:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1abc3aead_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1bdd09333:;
	};
	(*(_self_))._field_column+=_1bb48d8bb_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1abc4159b_Node_eq(_1abc4159b_Node *_self_, _1abc4159b_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1abc4259c_TypeDecl_eq(_1abc4259c_TypeDecl *_self_, _1abc4259c_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1abc4334a_NamespaceTypeDecl_eq(_1abc4334a_NamespaceTypeDecl *_self_, _1abc4334a_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1abc43647_SptrTypeDecl_eq(_1abc43647_SptrTypeDecl *_self_, _1abc43647_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1abc439cc_SlcTypeDecl_eq(_1abc439cc_SlcTypeDecl *_self_, _1abc439cc_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1abc440c6_PtrTypeDecl_eq(_1abc440c6_PtrTypeDecl *_self_, _1abc440c6_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1abc4446c_IsUnsafe(_1abc440c6_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1abc44868_ArrTypeDecl_eq(_1abc44868_ArrTypeDecl *_self_, _1abc44868_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1abc44c0e_AutoSized(_1abc44868_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1abc450b6_MapTypeDecl_eq(_1abc450b6_MapTypeDecl *_self_, _1abc450b6_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1ac9b2a47_Expr_eq(_1ac9b2a47_Expr *_self_, _1ac9b2a47_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1ac9b2d11_RangeExpr_eq(_1ac9b2d11_RangeExpr *_self_, _1ac9b2d11_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac9b341b_UseExpr_eq(_1ac9b341b_UseExpr *_self_, _1ac9b341b_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac9b39d2_LitExpr_eq(_1ac9b39d2_LitExpr *_self_, _1ac9b39d2_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1ac9b3dab_UnsafeExpr_eq(_1ac9b3dab_UnsafeExpr *_self_, _1ac9b3dab_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac9b4362_IdentExpr_eq(_1ac9b4362_IdentExpr *_self_, _1ac9b4362_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ac9b4b04_UnaryExpr_eq(_1ac9b4b04_UnaryExpr *_self_, _1ac9b4b04_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac9b4ecd_VariadicExpr_eq(_1ac9b4ecd_VariadicExpr *_self_, _1ac9b4ecd_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac9b53a7_CastExpr_eq(_1ac9b53a7_CastExpr *_self_, _1ac9b53a7_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac9b5781_NamespaceExpr_eq(_1ac9b5781_NamespaceExpr *_self_, _1ac9b5781_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ac9b5b5a_SubIdentExpr_eq(_1ac9b5b5a_SubIdentExpr *_self_, _1ac9b5b5a_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ac9b6111_BinaryExpr_eq(_1ac9b6111_BinaryExpr *_self_, _1ac9b6111_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1ac9b6b28_Unhandled(_1ac9b6771_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1ac9b6dae_Ignored(_1ac9b6771_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1ac9b7266_FieldExprPair_eq(_1ac9b7266_FieldExprPair *_self_, _1ac9b7266_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1ac9b8872_KeyValPair_eq(_1ac9b8872_KeyValPair *_self_, _1ac9b8872_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1ac9b9a0a_IndexingExpr_eq(_1ac9b9a0a_IndexingExpr *_self_, _1ac9b9a0a_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac9ba16a_SlicingExpr_eq(_1ac9ba16a_SlicingExpr *_self_, _1ac9ba16a_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1ac9ba91d_GenericDecl_eq(_1ac9ba91d_GenericDecl *_self_, _1ac9ba91d_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1ac9bace7_LabelSt_eq(_1ac9bace7_LabelSt *_self_, _1ac9bace7_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1ac9bb1c1_GotoSt_eq(_1ac9bb1c1_GotoSt *_self_, _1ac9bb1c1_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac9bb4bd_FallSt_eq(_1ac9bb4bd_FallSt *_self_, _1ac9bb4bd_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1ac9bbb2d_AssignLeft_eq(_1ac9bbb2d_AssignLeft *_self_, _1ac9bbb2d_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac9bd1a1_Stmt_eq(_1ac9bd1a1_Stmt *_self_, _1ac9bd1a1_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1ac9be04d_ParamDecl_eq(_1ac9be04d_ParamDecl *_self_, _1ac9be04d_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1ac9be405_IsSelf(_1ac9be04d_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1ac9c0846_IsAnon(_1ac9c04a0_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1ac9c1a34_RetSt_eq(_1ac9c1a34_RetSt *_self_, _1ac9c1a34_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac9c22a4_Iter_eq(_1ac9c22a4_Iter *_self_, _1ac9c22a4_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1ac9c264a_IsInf(_1ac9c22a4_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1ac9c2ace_WhileKind_eq(_1ac9c2ace_WhileKind *_self_, _1ac9c2ace_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1ac9c2e75_IsWhileNext(_1ac9c2ace_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ac9c34d6_RangeKind_eq(_1ac9c34d6_RangeKind *_self_, _1ac9c34d6_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ac9c38b0_BreakSt_eq(_1ac9c38b0_BreakSt *_self_, _1ac9c38b0_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac9c3c89_ContSt_eq(_1ac9c3c89_ContSt *_self_, _1ac9c3c89_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1ac9c4240_If_eq(_1ac9c4240_If *_self_, _1ac9c4240_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ac9c4619_Else_eq(_1ac9c4619_Else *_self_, _1ac9c4619_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1ac9c530c_TypeAliasDecl_eq(_1ac9c530c_TypeAliasDecl *_self_, _1ac9c530c_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1ac9c6660_UseDecl_eq(_1ac9c6660_UseDecl *_self_, _1ac9c6660_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1ac9c6b16_EnumItemDecl_eq(_1ac9c6b16_EnumItemDecl *_self_, _1ac9c6b16_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1ac9c8002_TypeEnumItemDecl_eq(_1ac9c8002_TypeEnumItemDecl *_self_, _1ac9c8002_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1ac9c892b_FieldDecl_eq(_1ac9c892b_FieldDecl *_self_, _1ac9c892b_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1aca3208e_Const> static__1aca88c61_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1aca3208e_Const> static__1aca88ed6_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1aca3208e_Const> static__1aca892a0_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1aca3208e_Const> static__1aca89569_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1aca3208e_Const> static__1aca89833_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1aca3208e_Const> static__1aca89a42_NewNil(void) {
	return jule::new_ptr<_1aca3208e_Const>(_1aca3208e_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1aca8a1a2_ReadI64(_1aca3208e_Const* _self_) {
	if ((!(_1aca8c79d_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1aca8a438_ReadU64(_1aca3208e_Const* _self_) {
	if ((!(_1aca8ca34_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1aca8a6be_ReadBool(_1aca3208e_Const* _self_) {
	if ((!(_1aca8ccba_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1aca8a955_ReadStr(_1aca3208e_Const* _self_) {
	if ((!(_1aca8d051_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1aca8abdb_ReadF64(_1aca3208e_Const* _self_) {
	if ((!(_1aca8d2d7_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1aca8ae72_AsI64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bdd69e21:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bdd6a86c:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bdd6a8d3:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bdd6a3c7:;
			{
				return 0LL;;
			}
		}
		_match_end_1bdd6a22e:;
	};
}



inline jule::U64 _1aca8b208_AsU64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bdd6b4b6:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bdd6c1dc:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bdd6c253:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bdd6b98e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bdd6b928:;
	};
}



inline jule::F64 _1aca8b48e_AsF64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bdd6dc49:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bdd6cd25:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bdd6da3a:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1bdd6d2dc:;
			{
				return 0LL;;
			}
		}
		_match_end_1bdd6d276:;
	};
}



inline void _1aca8b747_SetI64(_1aca3208e_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1aca8ba00_SetU64(_1aca3208e_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1aca8bca8_SetBool(_1aca3208e_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1aca8c061_SetStr(_1aca3208e_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1aca8c319_SetF64(_1aca3208e_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1aca8c79d_IsI64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bdd72643:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdd72874:;
			{
				return false;;
			}
		}
		_match_end_1bdd7280d:;
	};
}



inline jule::Bool _1aca8ca34_IsU64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bdd731d2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdd729a6:;
			{
				return false;;
			}
		}
		_match_end_1bdd72940:;
	};
}



inline jule::Bool _1aca8ccba_IsBool(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bdd73622:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdd73b0b:;
			{
				return false;;
			}
		}
		_match_end_1bdd73a95:;
	};
}



inline jule::Bool _1aca8d051_IsStr(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bdd740a1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdd7458a:;
			{
				return false;;
			}
		}
		_match_end_1bdd74524:;
	};
}



inline jule::Bool _1aca8d2d7_IsF64(_1aca3208e_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bdd74a30:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdd75019:;
			{
				return false;;
			}
		}
		_match_end_1bdd74ea3:;
	};
}



inline jule::Bool _1aca8d56d_IsNil(_1aca3208e_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1aca8dc00_And(_1aca3208e_Const* _self_, _1aca3208e_Const _23615_x) {
	{
		
		if ((_1aca8ccba_IsBool(_self_) && _1aca8ccba_IsBool(&_23615_x))) {
			_case_begin_1bdd794b3:;
			{
				return (_1aca8a6be_ReadBool(_self_) && _1aca8a6be_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1bdd7944c:;
			{
				return false;;
			}
		}
		_match_end_1bdd7900c:;
	};
}



inline jule::Bool _1aca8e041_Or(_1aca3208e_Const* _self_, _1aca3208e_Const _24714_x) {
	{
		
		if ((_1aca8ccba_IsBool(_self_) && _1aca8ccba_IsBool(&_24714_x))) {
			_case_begin_1bdd7a7b1:;
			{
				return (_1aca8a6be_ReadBool(_self_) || _1aca8a6be_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1bdd79e97:;
			{
				return false;;
			}
		}
		_match_end_1bdd79da9:;
	};
}



inline jule::Bool _1aca8e382_Eq(_1aca3208e_Const* _self_, _1aca3208e_Const _25814_x) {
	{
		
		if (_1aca8d56d_IsNil(_self_)) {
			_case_begin_1bdd7bb25:;
			{
				return _1aca8d56d_IsNil(&_25814_x);;
			}
		}
		else if (_1aca8ccba_IsBool(_self_)) {
			_case_begin_1bdd7bb8b:;
			{
				return (_1aca8ccba_IsBool(&_25814_x) && (_1aca8a6be_ReadBool(_self_) == _1aca8a6be_ReadBool(&_25814_x)));;
			}
		}
		else if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd7bc02:;
			{
				return (_1aca8d051_IsStr(&_25814_x) && (_1aca8a955_ReadStr(_self_) == _1aca8a955_ReadStr(&_25814_x)));;
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd7bc79:;
			{
				return (_1aca8a1a2_ReadI64(_self_) == _1aca8ae72_AsI64(&_25814_x));;
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd7bd01:;
			{
				return (_1aca8a438_ReadU64(_self_) == _1aca8b208_AsU64(&_25814_x));;
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd7be99:;
			{
				return (_1aca8abdb_ReadF64(_self_) == _1aca8b48e_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1bdd7b284:;
			{
				return false;;
			}
		}
		_match_end_1bdd7b196:;
	};
}



inline jule::Bool _1aca8e6c3_Lt(_1aca3208e_Const* _self_, _1aca3208e_Const _28514_x) {
	{
		
		if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd8084e:;
			{
				return (_1aca8d051_IsStr(&_28514_x) && (_1aca8a955_ReadStr(_self_) < _1aca8a955_ReadStr(&_28514_x)));;
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd808b5:;
			{
				return (_1aca8a1a2_ReadI64(_self_) < _1aca8ae72_AsI64(&_28514_x));;
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd8092b:;
			{
				return (_1aca8a438_ReadU64(_self_) < _1aca8b208_AsU64(&_28514_x));;
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd809a3:;
			{
				return (_1aca8abdb_ReadF64(_self_) < _1aca8b48e_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1bdd7c5d7:;
			{
				return false;;
			}
		}
		_match_end_1bdd7c50a:;
	};
}



inline jule::Bool _1aca8ea14_LtEq(_1aca3208e_Const* _self_, _1aca3208e_Const _30816_x) {
	{
		
		if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd83555:;
			{
				return (_1aca8d051_IsStr(&_30816_x) && (_1aca8a955_ReadStr(_self_) <= _1aca8a955_ReadStr(&_30816_x)));;
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd835bb:;
			{
				return (_1aca8a1a2_ReadI64(_self_) <= _1aca8ae72_AsI64(&_30816_x));;
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd83632:;
			{
				return (_1aca8a438_ReadU64(_self_) <= _1aca8b208_AsU64(&_30816_x));;
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd836a9:;
			{
				return (_1aca8abdb_ReadF64(_self_) <= _1aca8b48e_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1bdd81212:;
			{
				return false;;
			}
		}
		_match_end_1bdd81135:;
	};
}



inline jule::Bool _1aca8ed55_Gt(_1aca3208e_Const* _self_, _1aca3208e_Const _33114_x) {
	{
		
		if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd8625b:;
			{
				return (_1aca8d051_IsStr(&_33114_x) && (_1aca8a955_ReadStr(_self_) > _1aca8a955_ReadStr(&_33114_x)));;
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd862c2:;
			{
				return (_1aca8a1a2_ReadI64(_self_) > _1aca8ae72_AsI64(&_33114_x));;
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd86338:;
			{
				return (_1aca8a438_ReadU64(_self_) > _1aca8b208_AsU64(&_33114_x));;
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd863b0:;
			{
				return (_1aca8abdb_ReadF64(_self_) > _1aca8b48e_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1bdd83e18:;
			{
				return false;;
			}
		}
		_match_end_1bdd83d3b:;
	};
}



inline jule::Bool _1aca90196_GtEq(_1aca3208e_Const* _self_, _1aca3208e_Const _35416_x) {
	{
		
		if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd88e62:;
			{
				return (_1aca8d051_IsStr(&_35416_x) && (_1aca8a955_ReadStr(_self_) >= _1aca8a955_ReadStr(&_35416_x)));;
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd88ec8:;
			{
				return (_1aca8a1a2_ReadI64(_self_) >= _1aca8ae72_AsI64(&_35416_x));;
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd8903e:;
			{
				return (_1aca8a438_ReadU64(_self_) >= _1aca8b208_AsU64(&_35416_x));;
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd890b6:;
			{
				return (_1aca8abdb_ReadF64(_self_) >= _1aca8b48e_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1bdd86b1e:;
			{
				return false;;
			}
		}
		_match_end_1bdd86a42:;
	};
}



inline jule::Bool _1aca904d7_Add(_1aca3208e_Const* _self_, _1aca3208e_Const _37519_x) {
	{
		
		if (_1aca8d051_IsStr(_self_)) {
			_case_begin_1bdd8bb68:;
			{
				if ((!(_1aca8d051_IsStr(&_37519_x)))) {
					return false;;
				};
				_1aca8c061_SetStr(_self_, (_1aca8a955_ReadStr(_self_) + _1aca8a955_ReadStr(&_37519_x)));
			}
		}
		else if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd8bbce:;
			{
				_1aca8c319_SetF64(_self_, (_1aca8abdb_ReadF64(_self_) + _1aca8b48e_AsF64(&_37519_x)));
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd8bc45:;
			{
				if (_1aca8d2d7_IsF64(&_37519_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) + _1aca8abdb_ReadF64(&_37519_x)));
				} else {
					_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) + _1aca8ae72_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd8bcbc:;
			{
				if (_1aca8d2d7_IsF64(&_37519_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) + _1aca8abdb_ReadF64(&_37519_x)));
				} else {
					_1aca8ba00_SetU64(_self_, (jule::U64)(_1aca8a438_ReadU64(_self_) + _1aca8b208_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1bdd89825:;
			{
				return false;;
			}
		}
		_match_end_1bdd89748:;
	};
	return true;;
}



inline jule::Bool _1aca90828_Sub(_1aca3208e_Const* _self_, _1aca3208e_Const _40419_x) {
	{
		
		if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd91992:;
			{
				_1aca8c319_SetF64(_self_, (_1aca8abdb_ReadF64(_self_) - _1aca8b48e_AsF64(&_40419_x)));
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd91a08:;
			{
				if (_1aca8d2d7_IsF64(&_40419_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) - _1aca8abdb_ReadF64(&_40419_x)));
				} else {
					_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) - _1aca8ae72_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd91a6e:;
			{
				if (_1aca8d2d7_IsF64(&_40419_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) - _1aca8abdb_ReadF64(&_40419_x)));
				} else {
					_1aca8ba00_SetU64(_self_, (jule::U64)(_1aca8a438_ReadU64(_self_) - _1aca8b208_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1bdd911cd:;
			{
				return false;;
			}
		}
		_match_end_1bdd910ce:;
	};
	return true;;
}



inline jule::Bool _1aca90b69_Mul(_1aca3208e_Const* _self_, _1aca3208e_Const _42819_x) {
	{
		
		if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd958a8:;
			{
				_1aca8c319_SetF64(_self_, (_1aca8abdb_ReadF64(_self_) * _1aca8b48e_AsF64(&_42819_x)));
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd9591e:;
			{
				if (_1aca8d2d7_IsF64(&_42819_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) * _1aca8abdb_ReadF64(&_42819_x)));
				} else {
					_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) * _1aca8ae72_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd95985:;
			{
				if (_1aca8d2d7_IsF64(&_42819_x)) {
					_1aca8c319_SetF64(_self_, (_1aca8b48e_AsF64(_self_) * _1aca8abdb_ReadF64(&_42819_x)));
				} else {
					_1aca8ba00_SetU64(_self_, (jule::U64)(_1aca8a438_ReadU64(_self_) * _1aca8b208_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1bdd94e7e:;
			{
				return false;;
			}
		}
		_match_end_1bdd94d91:;
	};
	return true;;
}



inline jule::Bool _1aca90eaa_Div(_1aca3208e_Const* _self_, _1aca3208e_Const _45619_x) {
	{
		
		if (_1aca8d2d7_IsF64(_self_)) {
			_case_begin_1bdd997ad:;
			{
				jule::F64 _4594_l = _1aca8b48e_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1aca8c319_SetF64(_self_, ({ jule::F64 __jule_x = _1aca8abdb_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd99824:;
			{
				jule::F64 _4654_l = _1aca8b48e_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1aca8c319_SetF64(_self_, ({ jule::F64 __jule_x = _1aca8b48e_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd9988a:;
			{
				jule::F64 _4714_l = _1aca8b48e_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1aca8c319_SetF64(_self_, ({ jule::F64 __jule_x = _1aca8b48e_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1bdd98d84:;
			{
				return false;;
			}
		}
		_match_end_1bdd98c96:;
	};
	return true;;
}



inline jule::Bool _1aca912eb_Mod(_1aca3208e_Const* _self_, _1aca3208e_Const _48519_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdd9d691:;
			{
				jule::I64 _4884_l = _1aca8ae72_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1aca8b747_SetI64(_self_, ({ jule::I64 __jule_x = _1aca8a1a2_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdd9da9d:;
			{
				jule::U64 _4944_l = _1aca8b208_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1aca8ba00_SetU64(_self_, ({ jule::U64 __jule_x = _1aca8a438_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1bdd9d619:;
			{
				return false;;
			}
		}
		_match_end_1bdd9d509:;
	};
	return true;;
}



inline jule::Bool _1aca9163c_BitwiseAnd(_1aca3208e_Const* _self_, _1aca3208e_Const _50726_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdda150c:;
			{
				_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) & _1aca8ae72_AsI64(&_50726_x)));
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdda1919:;
			{
				_1aca8ba00_SetU64(_self_, (_1aca8a438_ReadU64(_self_) & _1aca8b208_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1bdda1485:;
			{
				return false;;
			}
		}
		_match_end_1bdda1375:;
	};
	return true;;
}



inline jule::Bool _1aca9197d_BitwiseOr(_1aca3208e_Const* _self_, _1aca3208e_Const _52125_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdda32cd:;
			{
				_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) | _1aca8ae72_AsI64(&_52125_x)));
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdda36da:;
			{
				_1aca8ba00_SetU64(_self_, (_1aca8a438_ReadU64(_self_) | _1aca8b208_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1bdda3256:;
			{
				return false;;
			}
		}
		_match_end_1bdda3146:;
	};
	return true;;
}



inline jule::Bool _1aca91cbe_Xor(_1aca3208e_Const* _self_, _1aca3208e_Const _53519_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdda509e:;
			{
				_1aca8b747_SetI64(_self_, (_1aca8a1a2_ReadI64(_self_) ^ _1aca8ae72_AsI64(&_53519_x)));
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdda54ab:;
			{
				_1aca8ba00_SetU64(_self_, (_1aca8a438_ReadU64(_self_) ^ _1aca8b208_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1bdda5027:;
			{
				return false;;
			}
		}
		_match_end_1bdda4e17:;
	};
	return true;;
}



inline jule::Bool _1aca92110_Lshift(_1aca3208e_Const* _self_, _1aca3208e_Const _54922_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdda6d70:;
			{
				jule::I64 _5524_l = _1aca8ae72_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1aca8b208_AsU64(&_54922_x);;
					_1aca8b747_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1aca927b4_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdda727c:;
			{
				_1aca927b4_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1bdda6ce8:;
			{
				return false;;
			}
		}
		_match_end_1bdda6bd8:;
	};
	return true;;
}



inline jule::Bool _1aca92451_Rshift(_1aca3208e_Const* _self_, _1aca3208e_Const _56922_x) {
	{
		
		if (_1aca8c79d_IsI64(_self_)) {
			_case_begin_1bdda9405:;
			{
				jule::I64 _5724_l = _1aca8ae72_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1aca8b208_AsU64(&_56922_x);;
					_1aca8b747_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1aca92ae4_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1aca8ca34_IsU64(_self_)) {
			_case_begin_1bdda9812:;
			{
				_1aca92ae4_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1bdda937d:;
			{
				return false;;
			}
		}
		_match_end_1bdda927e:;
	};
	return true;;
}








inline jule::Bool _1ac9cb203_Field_eq(_1ac9cb203_Field *_self_, _1ac9cb203_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1ac9d13d4_FieldIns> _1ac9cb5dd_instance(jule::Ptr<_1ac9cb203_Field> _self_) {
	return jule::new_ptr<_1ac9d13d4_FieldIns>(_1ac9d13d4_FieldIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Default=jule::Ptr<_1acb8cded_Data>(nullptr)});;
}








inline jule::Bool _1ac9cd216_Operators_eq(_1ac9cd216_Operators *_self_, _1ac9cd216_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1ac9d1e84_StructIns> _1ac9ce5be_instance(jule::Ptr<_1ac9ce129_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _997_ins = jule::new_ptr<_1ac9d1e84_StructIns>(_1ac9d1e84_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9d13d4_FieldIns>>::alloc(0LL, (*_self_.alloc)._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9d13d4_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb3d420_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1acaa2351_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1ac979bb8_new(), ._field_Operators=_1ac9cd216_Operators{._field_Eq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Add=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Div=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29138b:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acb3d420_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1be29138b:;
			++it;
			goto _iter_begin_1be29138b;
		}
		_iter_end_1be29138b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29226b:;
		if (it != expr_end) {
			jule::Ptr<_1ac9cb203_Field> _11015_f = *it;
			{
				jule::Ptr<_1ac9d13d4_FieldIns> _1118_f2 = _1ac9cb5dd_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*_997_ins.alloc)._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9d13d4_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1acbc277e_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1be29226b:;
			++it;
			goto _iter_begin_1be29226b;
		}
		_iter_end_1be29226b:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*_997_ins.alloc)._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*_997_ins.alloc)._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa2351_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be29658e:;
			if (it != expr_end) {
				jule::Ptr<_1acaa2351_Fn> _12316_f = *it;
				{
					jule::Ptr<_1acaa2351_Fn> _1249_fins = jule::new_ptr<_1acaa2351_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1be29658e:;
				++it;
				goto _iter_begin_1be29658e;
			}
			_iter_end_1be29658e:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1ac9ce8cc_appendInstance(_1ac9ce129_Struct* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be298915:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _14115_ains = *it;
			{
				if (_1ac9d2b33_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1be298915:;
			++it;
			goto _iter_begin_1be298915;
		}
		_iter_end_1be298915:;
	};
	{ jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac9cecc8_FindMethod(_1ac9ce129_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be299e88:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1be299e88:;
			++it;
			goto _iter_begin_1be299e88;
		}
		_iter_end_1be299e88:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac9d0119_FindStatic(_1ac9ce129_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29b2ca:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1be29b2ca:;
			++it;
			goto _iter_begin_1be29b2ca;
		}
		_iter_end_1be29b2ca:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac9cb203_Field> _1ac9d045a_FindField(_1ac9ce129_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29c2a9:;
		if (it != expr_end) {
			jule::Ptr<_1ac9cb203_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1be29c2a9:;
			++it;
			goto _iter_begin_1be29c2a9;
		}
		_iter_end_1be29c2a9:;
	};
	return nullptr;;
}



inline jule::Bool _1ac9d079b_IsImplements(_1ac9ce129_Struct* _self_, jule::Ptr<_1acaaca65_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29d299:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1be29d299:;
			++it;
			goto _iter_begin_1be29d299;
		}
		_iter_end_1be29d299:;
	};
	return false;;
}



inline jule::Bool _1ac9d0adc_IsUses(_1ac9ce129_Struct* _self_, jule::Ptr<_1ac9ce129_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29dc4a:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1be29e7ea:;
				}
				_iter_end_1be29e7ea:;;
			}
			_iter_next_1be29dc4a:;
			++it;
			goto _iter_begin_1be29dc4a;
		}
		_iter_end_1be29dc4a:;
	};
	return false;;
}








inline jule::Bool _1ac9d13d4_FieldIns_eq(_1ac9d13d4_FieldIns *_self_, _1ac9d13d4_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1ac9d233b_Str(_1ac9d1e84_StructIns* _self_) {
	_1a6a5cb3c_Builder _2417_kind = static__1a6a5d489_New(32LL);;
	({
		auto except = _1a6a5db1b_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1a6a5ddc4_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be2a24ac:;
			if (it != expr_end) {
				jule::I32 _2458_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _1a6a5db1b_WriteStr(&_2417_kind, _1acbc1294_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1a6a5ddc4_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_1be2a24ac:;
				++it;
				_2458_i++;
				goto _iter_begin_1be2a24ac;
			}
			_iter_end_1be2a24ac:;
		};
		({
			auto except = _1a6a5ddc4_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _1a6a5e49b_Str(&_2417_kind);;
}



inline jule::Bool _1ac9d267c_Equal(jule::Ptr<_1ac9d1e84_StructIns> _self_, jule::Ptr<_1acbc0d98_Type> _25718_other) {
	jule::Ptr<_1ac9d1e84_StructIns> _2583_s = _1acbc4ac2_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*_self_.alloc)._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _2717_i = 0LL;;
	for (; (_2717_i < (*_self_.alloc)._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1acbc15d5_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1be2a6824:;
	}
	_iter_end_1be2a6824:;;
	return true;;
}



inline jule::Bool _1ac9d2b33_Same(_1ac9d1e84_StructIns* _self_, jule::Ptr<_1ac9d1e84_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2a92e9:;
		if (it != expr_end) {
			jule::I32 _2897_i = it - expr->begin();
			jule::Ptr<_1acbbe4b2_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1acbbe4b2_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_1acbc15d5_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1be2a92e9:;
			++it;
			_2897_i++;
			goto _iter_begin_1be2a92e9;
		}
		_iter_end_1be2a92e9:;
	};
	return true;;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac9d302e_FindMethod(_1ac9d1e84_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2abd13:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1be2abd13:;
			++it;
			goto _iter_begin_1be2abd13;
		}
		_iter_end_1be2abd13:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac9d13d4_FieldIns> _1ac9d3370_FindField(_1ac9d1e84_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2ad155:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1be2ad155:;
			++it;
			goto _iter_begin_1be2ad155;
		}
		_iter_end_1be2ad155:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac9d36b1_FindStatic(_1ac9d1e84_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2ae343:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1be2ae343:;
			++it;
			goto _iter_begin_1be2ae343;
		}
		_iter_end_1be2ae343:;
	};
	return nullptr;;
}








inline jule::Bool _1aca94b3a_OperandExprModel_eq(_1aca94b3a_OperandExprModel *_self_, _1aca94b3a_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1aca95135_BinaryExprModel_eq(_1aca95135_BinaryExprModel *_self_, _1aca95135_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1aca9550e_UnaryExprModel_eq(_1aca9550e_UnaryExprModel *_self_, _1aca9550e_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1aca95a3c_StructArgExprModel_eq(_1aca95a3c_StructArgExprModel *_self_, _1aca95a3c_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1aca961d0_AllocStructLitExprModel_eq(_1aca961d0_AllocStructLitExprModel *_self_, _1aca961d0_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1aca96763_CastingExprModel_eq(_1aca96763_CastingExprModel *_self_, _1aca96763_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1aca97995_IndexingExprModel_eq(_1aca97995_IndexingExprModel *_self_, _1aca97995_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1aca98325_KeyValPairExprModel_eq(_1aca98325_KeyValPairExprModel *_self_, _1aca98325_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1aca98c82_SlicingExprModel_eq(_1aca98c82_SlicingExprModel *_self_, _1aca98c82_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1aca99315_TraitSubIdentExprModel_eq(_1aca99315_TraitSubIdentExprModel *_self_, _1aca99315_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1aca99ba6_StructSubIdentExprModel_eq(_1aca99ba6_StructSubIdentExprModel *_self_, _1aca99ba6_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1aca9a04c_StructStaticIdentExprModel_eq(_1aca9a04c_StructStaticIdentExprModel *_self_, _1aca9a04c_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1aca9aa20_BuiltinPrintCallExprModel_eq(_1aca9aa20_BuiltinPrintCallExprModel *_self_, _1aca9aa20_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9ad1c_BuiltinPrintlnCallExprModel_eq(_1aca9ad1c_BuiltinPrintlnCallExprModel *_self_, _1aca9ad1c_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9b1e6_BuiltinNewCallExprModel_eq(_1aca9b1e6_BuiltinNewCallExprModel *_self_, _1aca9b1e6_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1aca9b5c0_BuiltinPanicCallExprModel_eq(_1aca9b5c0_BuiltinPanicCallExprModel *_self_, _1aca9b5c0_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aca9ba76_BuiltinMakeCallExprModel_eq(_1aca9ba76_BuiltinMakeCallExprModel *_self_, _1aca9ba76_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1aca9be50_BuiltinAppendCallExprModel_eq(_1aca9be50_BuiltinAppendCallExprModel *_self_, _1aca9be50_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1aca9c24c_BuiltinLenCallExprModel_eq(_1aca9c24c_BuiltinLenCallExprModel *_self_, _1aca9c24c_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9c549_BuiltinCapCallExprModel_eq(_1aca9c549_BuiltinCapCallExprModel *_self_, _1aca9c549_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9c923_BuiltinDeleteCallExprModel_eq(_1aca9c923_BuiltinDeleteCallExprModel *_self_, _1aca9c923_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1aca9ccec_BuiltinCopyCallExprModel_eq(_1aca9ccec_BuiltinCopyCallExprModel *_self_, _1aca9ccec_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1aca9d1c6_BuiltinErrorCallExprModel_eq(_1aca9d1c6_BuiltinErrorCallExprModel *_self_, _1aca9d1c6_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1aca9d4c3_SizeofExprModel_eq(_1aca9d4c3_SizeofExprModel *_self_, _1aca9d4c3_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9db77_AlignofExprModel_eq(_1aca9db77_AlignofExprModel *_self_, _1aca9db77_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aca9dd64_RuneExprModel_eq(_1aca9dd64_RuneExprModel *_self_, _1aca9dd64_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1aca9e4d5_FreeExprModel_eq(_1aca9e4d5_FreeExprModel *_self_, _1aca9e4d5_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1acaa087c_Param_eq(_1acaa087c_Param *_self_, _1acaa087c_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1acaa42a9_ParamIns> _1acaa0c45_instance(jule::Ptr<_1acaa087c_Param> _self_) {
	return jule::new_ptr<_1acaa42a9_ParamIns>(_1acaa42a9_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr)});;
}



inline jule::Bool _1acaa0ecb_IsSelf(_1acaa087c_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1acaa1262_IsRef(_1acaa087c_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1acaa2807_IsVoid(_1acaa2351_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1acaa2a8d_IsMethod(_1acaa2351_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1acaa087c_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1acaa0ecb_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1acaa2d24_IsEntryPoint(_1acaa2351_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1acaa30aa_IsInit(_1acaa2351_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1acaa3341_IsAnon(_1acaa2351_Fn* _self_) {
	return _1abc2e732_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1acaa35c7_AnyVar(_1acaa2351_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acaa385d_instanceForce(jule::Ptr<_1acaa2351_Fn> _self_) {
	jule::Ptr<_1acaa540e_FnIns> _1107_ins = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::new_ptr<_1ac95aa56_Scope>(_1ac95aa56_Scope{._field_Parent=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1ac979bb8_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa42a9_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2b76c0:;
		if (it != expr_end) {
			jule::Ptr<_1acaa087c_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1acaa0c45_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1be2b76c0:;
			++it;
			goto _iter_begin_1be2b76c0;
		}
		_iter_end_1be2b76c0:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acaa3ae4_instance(jule::Ptr<_1acaa2351_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1acaa385d_instanceForce(_self_);;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acaa3e02_appendInstance(_1acaa2351_Fn* _self_, jule::Ptr<_1acaa540e_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1acaa540e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1acaa540e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2bce89:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _15415_ains = *it;
			{
				if (_1acaa6e9e_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1be2bce89:;
			++it;
			goto _iter_begin_1be2bce89;
		}
		_iter_end_1be2bce89:;
	};
	{ jule::Slice<jule::Ptr<_1acaa540e_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1acaa42a9_ParamIns_eq(_1acaa42a9_ParamIns *_self_, _1acaa42a9_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1acaa4650_Str(_1acaa42a9_ParamIns* _self_) {
	_1a6a5cb3c_Builder _1767_s = static__1a6a5d489_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Reference) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_1acaa0ecb_IsSelf((*(_self_))._field_Decl)) {
		if (_1acaa1262_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1a6a5ddc4_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _1a6a5db1b_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _1a6a5e49b_Str(&_1767_s);;
	};
	if ((*(*(_self_))._field_Decl.alloc)._field_Variadic) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1767_s, _1acbc1294_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _1a6a5e49b_Str(&_1767_s);;
}







inline jule::Str _1acaa5783_Str(_1acaa540e_FnIns* _self_) {
	;
	return _1acaa72e0_GetKindStr(_self_, false);;
}



inline jule::Bool _1acaa5ac4_Equal(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acbc0d98_Type> _22918_other) {
	jule::Ptr<_1acaa540e_FnIns> _2303_f = _1acbc483b_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1acaa6069_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1acaa6069_EqualFn(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acaa540e_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1acaa2807_IsVoid((*(_self_))._field_Decl) != _1acaa2807_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1acaa42a9_ParamIns>,jule::Ptr<_1acaa42a9_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1acaa42a9_ParamIns>,jule::Ptr<_1acaa42a9_ParamIns>>((void*)__jule_anon1be2c7cc9, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*_self_.alloc)._field_Params.len())) {
		return false;;
	};
	jule::I32 _2827_i = 0LL;;
	for (; (_2827_i < (*_self_.alloc)._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1be2cdb37:;
	}
	_iter_end_1be2cdb37:;;
	if ((!(_1acaa2807_IsVoid((*(_self_))._field_Decl)))) {
		if ((!(_1acbc15d5_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1acaa63aa_equalTrait(jule::Ptr<_1acaa540e_FnIns> _self_, jule::Ptr<_1acaa540e_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1acaa6069_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*(*(_self_))._field_Decl.alloc)._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1acbc0d98_Type>> _1acaa6641_Types(_1acaa540e_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1be2d47ca:;
			{
				return nullptr;;
			}
		}
		else if ((_1acbc5375_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1be2d4841:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1be2d4357:;
			{
				return (*(_1acbc5375_Tup((*(_self_))._field_Result.ptr())))._field_Types;;
			}
		}
		_match_end_1be2d4247:;
	};
}



inline jule::Bool _1acaa68c7_IsBuiltin(_1acaa540e_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1acaa6b5d_IsAnon(_1acaa540e_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1acaa3341_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1acaa6e9e_Same(_1acaa540e_FnIns* _self_, jule::Ptr<_1acaa540e_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2d7c95:;
		if (it != expr_end) {
			jule::I32 _3477_i = it - expr->begin();
			jule::Ptr<_1acbbe4b2_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1acbbe4b2_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_1acbc15d5_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1be2d7c95:;
			++it;
			_3477_i++;
			goto _iter_begin_1be2d7c95;
		}
		_iter_end_1be2d7c95:;
	};
	return true;;
}



inline jule::Str _1acaa72e0_GetKindStr(_1acaa540e_FnIns* _self_, jule::Bool _35922_ident) {
	_1a6a5cb3c_Builder _3607_s = static__1a6a5d489_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1a6a5db1b_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _1a6a5db1b_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1a6a5ddc4_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _1a6a5db1b_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I32 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be2dd40a:;
			if (it != expr_end) {
				jule::I32 _3768_i = it - expr->begin();
				jule::Ptr<_1acaa42a9_ParamIns> *_37611_p = it;
				{
					({
						auto except = _1a6a5db1b_WriteStr(&_3607_s, _1acaa4650_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1a6a5ddc4_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_1be2dd40a:;
				++it;
				_3768_i++;
				goto _iter_begin_1be2dd40a;
			}
			_iter_end_1be2dd40a:;
		};
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1a6a5ddc4_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1acaa2807_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1a6a5ddc4_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _1a6a5db1b_WriteStr(&_3607_s, _1acbc1294_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _1a6a5e49b_Str(&_3607_s);;
}







inline jule::Ptr<_1ac98b8cd_ImportInfo> _1acaa8b71_SelectPackage(_1acaa8654_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e21ab:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1be2e21ab:;
			++it;
			goto _iter_begin_1be2e21ab;
		}
		_iter_end_1be2e21ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1acaa906c_FindVar(_1acaa8654_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1acaab1a1_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1acaa9468_FindTypeAlias(_1acaa8654_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1acaab657_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1ac9ce129_Struct> _1acaa9864_FindStruct(_1acaa8654_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e45dc:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1be2e45dc:;
			++it;
			goto _iter_begin_1be2e45dc;
		}
		_iter_end_1be2e45dc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaa2351_Fn> _1acaa9c60_FindFn(_1acaa8654_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e5b4e:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1be2e5b4e:;
			++it;
			goto _iter_begin_1be2e5b4e;
		}
		_iter_end_1be2e5b4e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaaca65_Trait> _1acaaa0a1_FindTrait(_1acaa8654_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e6ea2:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1be2e6ea2:;
			++it;
			goto _iter_begin_1be2e6ea2;
		}
		_iter_end_1be2e6ea2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab021b_Enum> _1acaaa3e2_FindEnum(_1acaa8654_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e7e70:;
		if (it != expr_end) {
			jule::Ptr<_1acab021b_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1be2e7e70:;
			++it;
			goto _iter_begin_1be2e7e70;
		}
		_iter_end_1be2e7e70:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1acaaa733_FindTypeEnum(_1acaa8654_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e8e60:;
		if (it != expr_end) {
			jule::Ptr<_1acab1926_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1be2e8e60:;
			++it;
			goto _iter_begin_1be2e8e60;
		}
		_iter_end_1be2e8e60:;
	};
	return nullptr;;
}



inline jule::I32 _1acaaabea_findVar1(_1acaa8654_SymTab* _self_, jule::Ptr<_1acb3d420_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2e9e50:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1be2e9e50:;
			++it;
			_1097_i++;
			goto _iter_begin_1be2e9e50;
		}
		_iter_end_1be2e9e50:;
	};
	return -1LL;;
}



inline jule::Ptr<_1acb3d420_Var> _1acaab1a1_findVar(_1acaa8654_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1acb3d420_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1be2ebccb:;
		}
		_iter_end_1be2ebccb:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be2ed261:;
			if (it != expr_end) {
				jule::Ptr<_1acb3d420_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1be2ed261:;
				++it;
				goto _iter_begin_1be2ed261;
			}
			_iter_end_1be2ed261:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1acaab657_findTypeAlias(_1acaa8654_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1acbc00a6_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1be300120:;
		}
		_iter_end_1be300120:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be3015a5:;
			if (it != expr_end) {
				jule::Ptr<_1acbc00a6_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1be3015a5:;
				++it;
				goto _iter_begin_1be3015a5;
			}
			_iter_end_1be3015a5:;
		};
	};
	return nullptr;;
}



inline jule::Any _1acaaba53_defByIdent(_1acaa8654_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3027e8:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1be3027e8:;
			++it;
			goto _iter_begin_1be3027e8;
		}
		_iter_end_1be3027e8:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3035da:;
		if (it != expr_end) {
			jule::Ptr<_1acbc00a6_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1be3035da:;
			++it;
			goto _iter_begin_1be3035da;
		}
		_iter_end_1be3035da:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be306973:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1be306973:;
			++it;
			goto _iter_begin_1be306973;
		}
		_iter_end_1be306973:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be306269:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1be306269:;
			++it;
			goto _iter_begin_1be306269;
		}
		_iter_end_1be306269:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be30a207:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1be30a207:;
			++it;
			goto _iter_begin_1be30a207;
		}
		_iter_end_1be30a207:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be30a2a1:;
		if (it != expr_end) {
			jule::Ptr<_1acab021b_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1be30a2a1:;
			++it;
			goto _iter_begin_1be30a2a1;
		}
		_iter_end_1be30a2a1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3139a2:;
		if (it != expr_end) {
			jule::Ptr<_1acab1926_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1be3139a2:;
			++it;
			goto _iter_begin_1be3139a2;
		}
		_iter_end_1be3139a2:;
	};
	return nullptr;;
}



inline jule::Bool _1acaac009_isDuplicatedIdent(_1acaa8654_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3118e5:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1be3118e5:;
			++it;
			goto _iter_begin_1be3118e5;
		}
		_iter_end_1be3118e5:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be316411:;
		if (it != expr_end) {
			jule::Ptr<_1acbc00a6_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1be316411:;
			++it;
			goto _iter_begin_1be316411;
		}
		_iter_end_1be316411:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be31de30:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1be31de30:;
			++it;
			goto _iter_begin_1be31de30;
		}
		_iter_end_1be31de30:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3201c8:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1be3201c8:;
			++it;
			goto _iter_begin_1be3201c8;
		}
		_iter_end_1be3201c8:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be32130b:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1be32130b:;
			++it;
			goto _iter_begin_1be32130b;
		}
		_iter_end_1be32130b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3226d6:;
		if (it != expr_end) {
			jule::Ptr<_1acab021b_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1be3226d6:;
			++it;
			goto _iter_begin_1be3226d6;
		}
		_iter_end_1be3226d6:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be323a8e:;
		if (it != expr_end) {
			jule::Ptr<_1acab1926_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1be323a8e:;
			++it;
			goto _iter_begin_1be323a8e;
		}
		_iter_end_1be323a8e:;
	};
	return false;;
}







inline jule::Str _1acaace61_Str(_1acaaca65_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acaad2a2_Equal(jule::Ptr<_1acaaca65_Trait> _self_, jule::Ptr<_1acbc0d98_Type> _2518_other) {
	jule::Ptr<_1acaaca65_Trait> _263_trt = _1acbc4d58_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1acaa2351_Fn> _1acaad747_FindMethod(_1acaaca65_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be32660d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1be32660d:;
			++it;
			goto _iter_begin_1be32660d;
		}
		_iter_end_1be32660d:;
	};
	return _1acaaddc9_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1acaa2351_Fn> _1acaaddc9_findMethodInherit(_1acaaca65_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be32929d:;
		if (it != expr_end) {
			jule::Ptr<_1acbc85a9_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1be32929d;
				};
				jule::Ptr<_1acaaca65_Trait> _608_t = _1acbc4d58_Trait((*_5615_i.alloc)._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1acaa2351_Fn> _629_f2 = _1acaad747_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1be32929d:;
			++it;
			goto _iter_begin_1be32929d;
		}
		_iter_end_1be32929d:;
	};
	return nullptr;;
}








inline jule::Bool _1acaae6b0_EnumItem_eq(_1acaae6b0_EnumItem *_self_, _1acaae6b0_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1acaaea89_AutoExpr(_1acaae6b0_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1acab05c3_Str(_1acab021b_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acab0914_Equal(jule::Ptr<_1acab021b_Enum> _self_, jule::Ptr<_1acbc0d98_Type> _3818_other) {
	jule::Ptr<_1acab021b_Enum> _393_enm = _1acbc3d02_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1acaae6b0_EnumItem> _1acab0d43_FindItem(_1acab021b_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be32d0d7:;
		if (it != expr_end) {
			jule::Ptr<_1acaae6b0_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1be32d0d7:;
			++it;
			goto _iter_begin_1be32d0d7;
		}
		_iter_end_1be32d0d7:;
	};
	return nullptr;;
}








inline jule::Bool _1acab134e_TypeEnumItem_eq(_1acab134e_TypeEnumItem *_self_, _1acab134e_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1acab1c9a_Str(_1acab1926_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1acab20db_Equal(jule::Ptr<_1acab1926_TypeEnum> _self_, jule::Ptr<_1acbc0d98_Type> _8018_other) {
	jule::Ptr<_1acab1926_TypeEnum> _813_tenm = _1acbc4088_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1acab134e_TypeEnumItem> _1acab251a_FindItem(_1acab1926_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be330381:;
		if (it != expr_end) {
			jule::Ptr<_1acab134e_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1be330381:;
			++it;
			goto _iter_begin_1be330381;
		}
		_iter_end_1be330381:;
	};
	return nullptr;;
}








inline jule::Bool _1ac92d0bc_comptimeRange_eq(_1ac92d0bc_comptimeRange *_self_, _1ac92d0bc_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ac92d4b8_Str(_1ac92d0bc_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1ac92d809_Equal(jule::Ptr<_1ac92d0bc_comptimeRange> _self_, jule::Ptr<_1acbc0d98_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1ac92db28_comptimeStructField_eq(_1ac92db28_comptimeStructField *_self_, _1ac92db28_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac92ded0_Str(_1ac92db28_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1ac92e321_Equal(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acbc0d98_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac92e82c__Decl(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acb8edbc_eval>* _4127_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac92ec28__Type(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Ptr<_1acb8edbc_eval>* _5327_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac930069_subIdent(jule::Ptr<_1ac92db28_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1be33c58b:;
			{
				jule::Ptr<_1acaa540e_FnIns> _648_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1be33d812, jule::Ptr<__jule_anon_1be33d812_ctx>::make(__jule_anon_1be33d812_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be33d812_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1be33c624:;
			{
				jule::Ptr<_1acaa540e_FnIns> _718_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1be34078c, jule::Ptr<__jule_anon_1be34078c_ctx>::make(__jule_anon_1be34078c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be34078c_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1be33c3c1:;
			{
				return nullptr;;
			}
		}
		_match_end_1be33c4d1:;
	};
}







inline jule::Str _1ac930784_Str(_1ac9303bb_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1ac930ac5_Equal(jule::Ptr<_1ac9303bb_comptimeStructFields> _self_, jule::Ptr<_1acbc0d98_Type> _9018_other) {
	return false;;
}



inline void _1ac931059_ready(_1ac9303bb_comptimeStructFields* _self_, jule::Ptr<_1acb3d420_Var>* _9426_keyA, jule::Ptr<_1acb3d420_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92db28_comptimeStructField>(_1ac92db28_comptimeStructField{._field_field=jule::Ptr<_1ac9d13d4_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data6)})});
	};
}



inline void _1ac9313bc_index(_1ac9303bb_comptimeStructFields* _self_, jule::Ptr<_1acb8cded_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92db28_comptimeStructField>(_1ac92db28_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data6)});
}



inline void _1ac9317da_step(_1ac9303bb_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1acb3d420_Var>* _12633_keyA, jule::Ptr<_1acb3d420_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1acbc5b28_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _1ac931a71_len(_1ac9303bb_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac931d4b_comptimeStatic_eq(_1ac931d4b_comptimeStatic *_self_, _1ac931d4b_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac932203_Str(_1ac931d4b_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1ac932544_Equal(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acbc0d98_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac932a50__Decl(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acb8edbc_eval>* _15427_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac932e4b__Type(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Ptr<_1acb8edbc_eval>* _16627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93328c_subIdent(jule::Ptr<_1ac931d4b_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1be357dd1:;
			{
				jule::Ptr<_1acaa540e_FnIns> _1778_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1be359157, jule::Ptr<__jule_anon_1be359157_ctx>::make(__jule_anon_1be359157_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be359157_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1be357e69:;
			{
				jule::Ptr<_1acaa540e_FnIns> _1848_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1be35b0d2, jule::Ptr<__jule_anon_1be35b0d2_ctx>::make(__jule_anon_1be35b0d2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be35b0d2_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1be357c16:;
			{
				return nullptr;;
			}
		}
		_match_end_1be357d26:;
	};
}







inline jule::Str _1ac9339a7_Str(_1ac933600_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1ac933ce8_Equal(jule::Ptr<_1ac933600_comptimeStatics> _self_, jule::Ptr<_1acbc0d98_Type> _20318_other) {
	return false;;
}



inline void _1ac93427c_ready(_1ac933600_comptimeStatics* _self_, jule::Ptr<_1acb3d420_Var>* _20726_keyA, jule::Ptr<_1acb3d420_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac931d4b_comptimeStatic>(_1ac931d4b_comptimeStatic{._field_field=jule::Ptr<_1acb3d420_Var>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data8)})});
	};
}



inline void _1ac9345e0_index(_1ac933600_comptimeStatics* _self_, jule::Ptr<_1acb8cded_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac931d4b_comptimeStatic>(_1ac931d4b_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data8)});
}



inline void _1ac934a0d_step(_1ac933600_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1acb3d420_Var>* _23933_keyA, jule::Ptr<_1acb3d420_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1acbc7432_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _1ac934c94_len(_1ac933600_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac93506e_comptimeEnumField_eq(_1ac93506e_comptimeEnumField *_self_, _1ac93506e_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1ac935426_Str(_1ac93506e_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1ac935767_Equal(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Ptr<_1acbc0d98_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac935c62__Decl(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Ptr<_1acb8edbc_eval>* _26727_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9360a3_subIdent(jule::Ptr<_1ac93506e_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1be3683db:;
			{
				jule::Ptr<_1acaa540e_FnIns> _2828_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1be36c544, jule::Ptr<__jule_anon_1be36c544_ctx>::make(__jule_anon_1be36c544_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be36c544_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1be3689a2:;
			{
				return nullptr;;
			}
		}
		_match_end_1be367918:;
	};
}







inline jule::Str _1ac936845_Str(_1ac93637d_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1ac936b86_Equal(jule::Ptr<_1ac93637d_comptimeEnumFields> _self_, jule::Ptr<_1acbc0d98_Type> _30118_other) {
	return false;;
}



inline void _1ac937093_ready(_1ac93637d_comptimeEnumFields* _self_, jule::Ptr<_1acb3d420_Var>* _30526_keyA, jule::Ptr<_1acb3d420_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac93506e_comptimeEnumField>(_1ac93506e_comptimeEnumField{._field_field=jule::Ptr<_1acaae6b0_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data10)})});
	};
}



inline void _1ac937406_index(_1ac93637d_comptimeEnumFields* _self_, jule::Ptr<_1acb8cded_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac93506e_comptimeEnumField>(_1ac93506e_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data10)});
}



inline void _1ac937824_step(_1ac93637d_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1acb3d420_Var>* _33733_keyA, jule::Ptr<_1acb3d420_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1acbc6145_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _1ac937aaa_len(_1ac93637d_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1ac937d85_comptimeParam_eq(_1ac937d85_comptimeParam *_self_, _1ac937d85_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1ac93823c_Str(_1ac937d85_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1ac93857d_Equal(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acbc0d98_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac938a9a__Decl(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _36527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac938e96__Type(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _37727_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac939392__Recv(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Ptr<_1acb8edbc_eval>* _38527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _3907_constant = static__1aca892a0_NewBool(_1acaa0ecb_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9396d3_subIdent(jule::Ptr<_1ac937d85_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bda38172:;
			{
				jule::Ptr<_1acaa540e_FnIns> _4018_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bda394b4, jule::Ptr<__jule_anon_1bda394b4_ctx>::make(__jule_anon_1bda394b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bda394b4_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1bda3821b:;
			{
				jule::Ptr<_1acaa540e_FnIns> _4088_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bda3b483, jule::Ptr<__jule_anon_1bda3b483_ctx>::make(__jule_anon_1bda3b483_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bda3b483_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bda38293:;
			{
				jule::Ptr<_1acaa540e_FnIns> _4158_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bda3d40d, jule::Ptr<__jule_anon_1bda3d40d_ctx>::make(__jule_anon_1bda3d40d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bda3d40d_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1bda37d64:;
			{
				return nullptr;;
			}
		}
		_match_end_1bda38084:;
	};
}







inline jule::Str _1ac939e86_Str(_1ac939bde_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1ac93a2c7_Equal(jule::Ptr<_1ac939bde_comptimeParams> _self_, jule::Ptr<_1acbc0d98_Type> _43418_other) {
	return false;;
}



inline void _1ac93a75b_ready(_1ac939bde_comptimeParams* _self_, jule::Ptr<_1acb3d420_Var>* _43826_keyA, jule::Ptr<_1acb3d420_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac937d85_comptimeParam>(_1ac937d85_comptimeParam{._field_param=jule::Ptr<_1acaa42a9_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data12)})});
	};
}



inline void _1ac93aabe_index(_1ac939bde_comptimeParams* _self_, jule::Ptr<_1acb8cded_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac937d85_comptimeParam>(_1ac937d85_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data12)});
}



inline void _1ac93aedc_step(_1ac939bde_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1acb3d420_Var>* _47033_keyA, jule::Ptr<_1acb3d420_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1acbc6662_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _1ac93b273_len(_1ac939bde_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1ac93b905_Str(_1ac93b54d_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1ac93bc46_Equal(jule::Ptr<_1ac93b54d_comptimeTypeInfos> _self_, jule::Ptr<_1acbc0d98_Type> _49418_other) {
	return false;;
}



inline void _1ac93c1ca_ready(_1ac93b54d_comptimeTypeInfos* _self_, jule::Ptr<_1acb3d420_Var>* _49826_keyA, jule::Ptr<_1acb3d420_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac93cebc_comptimeTypeInfo>(_1ac93cebc_comptimeTypeInfo{._field_base=jule::Ptr<_1acbc0d98_Type>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15)})});
	};
}



inline void _1ac93c53d_index(_1ac93b54d_comptimeTypeInfos* _self_, jule::Ptr<_1acb8cded_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15)});
}



inline void _1ac93c95b_step(_1ac93b54d_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1acb3d420_Var>* _52833_keyA, jule::Ptr<_1acb3d420_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15);
	};
}



inline jule::I32 _1ac93cbe2_len(_1ac93b54d_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1ac93cebc_comptimeTypeInfo_eq(_1ac93cebc_comptimeTypeInfo *_self_, _1ac93cebc_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1ac93d374_Str(_1ac93cebc_comptimeTypeInfo* _self_) {
	return ((jule::Str::lit("comptimeTypeInfo[", 17) + _1acbc1294_Str((*(_self_))._field_base.ptr())) + jule::Str::lit("]", 1));;
}



inline jule::Bool _1ac93d6b5_Equal(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acbc0d98_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93dd03__Decl(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _55627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1acbc4ac2_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda5549c:;
			{
				_5617_decl=jule::Any((*(_1acbc4ac2_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1acbc4d58_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda55513:;
			{
				_5617_decl=jule::Any(_1acbc4d58_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1acbc3d02_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda53ed4:;
			{
				_5617_decl=jule::Any(_1acbc3d02_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1acbc4088_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda5404a:;
			{
				_5617_decl=jule::Any(_1acbc4088_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1acbc483b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda540b1:;
			{
				jule::Ptr<_1acaa540e_FnIns> _5728_f = _1acbc483b_Fn((*(_self_))._field_base);;
				{
					
					if (_1acaa68c7_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1bda5a66c:;
						{
							_1acb90395_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1acaa6b5d_IsAnon(_5728_f.ptr())) {
						_case_begin_1bda5a716:;
						{
							_1acb90395_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1bda5a5d4:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1bda53e6d:;
			{
				_1acb90395_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bda53d4c:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93e1ee__Str(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _59322_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _5987_constant = static__1aca89569_NewStr(_1acbc1294_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93e5ea__Kind(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _60627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acab021b_Enum> _6117_enm = _1ac98d66b_FindEnum(_1ac951db0_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1acaae6b0_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1acbc2262_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bda645cc:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1acbc4ac2_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda644de:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1acbc4d58_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda6428b:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1acbc3a6b_Ptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64302:;
			{
				if (_1acbd1d21_IsUnsafe(_1acbc3a6b_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1acbc37d5_Sptr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64368:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1acbc3d02_Enum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda643ce:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1acbc4088_TypeEnum((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64d3b:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1acbc50de_Map((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64da2:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Map", 3));
			}
		}
		else if ((_1acbc45a5_Slc((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64e18:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1acbc431e_Arr((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda64e7e:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Array", 5));
			}
		}
		else if ((_1acbc483b_Fn((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda65006:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Func", 4));
			}
		}
		else if ((_1acbc5375_Tup((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda6507d:;
			{
				_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1acbc354e_Prim((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bda65105:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _6434_prim = _1acbc354e_Prim((*(_self_))._field_base);;
				{
					
					if (_1acbcc712_IsAny(_6434_prim.ptr())) {
						_case_begin_1bda71b8e:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Any", 3));
						}
					}
					else if (_1acbcc1e5_IsBool(_6434_prim.ptr())) {
						_case_begin_1bda71aa1:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Bool", 4));
						}
					}
					else if (_1acbcc47b_IsStr(_6434_prim.ptr())) {
						_case_begin_1bda71881:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Str", 3));
						}
					}
					else if (_1acbcb425_IsF32(_6434_prim.ptr())) {
						_case_begin_1bda718e7:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("F32", 3));
						}
					}
					else if (_1acbcb6ab_IsF64(_6434_prim.ptr())) {
						_case_begin_1bda7195d:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("F64", 3));
						}
					}
					else if (_1acbc9da2_IsI8(_6434_prim.ptr())) {
						_case_begin_1bda719c4:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("I8", 2));
						}
					}
					else if (_1acbca138_IsI16(_6434_prim.ptr())) {
						_case_begin_1bda723ed:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("I16", 3));
						}
					}
					else if (_1acbca3be_IsI32(_6434_prim.ptr())) {
						_case_begin_1bda72475:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("I32", 3));
						}
					}
					else if (_1acbca655_IsI64(_6434_prim.ptr())) {
						_case_begin_1bda724ec:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("I64", 3));
						}
					}
					else if (_1acbca8db_IsU8(_6434_prim.ptr())) {
						_case_begin_1bda72574:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("U8", 2));
						}
					}
					else if (_1acbcab72_IsU16(_6434_prim.ptr())) {
						_case_begin_1bda725eb:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("U16", 3));
						}
					}
					else if (_1acbcae08_IsU32(_6434_prim.ptr())) {
						_case_begin_1bda72673:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("U32", 3));
						}
					}
					else if (_1acbcb18e_IsU64(_6434_prim.ptr())) {
						_case_begin_1bda726ea:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("U64", 3));
						}
					}
					else if (_1acbcb942_IsInt(_6434_prim.ptr())) {
						_case_begin_1bda72772:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Int", 3));
						}
					}
					else if (_1acbcbbc8_IsUint(_6434_prim.ptr())) {
						_case_begin_1bda727e9:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Uint", 4));
						}
					}
					else if (_1acbcbe5e_IsUintptr(_6434_prim.ptr())) {
						_case_begin_1bda72871:;
						{
							_61211_item=_1acab0d43_FindItem(_6117_enm.ptr(), jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bda716d8:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1acbc1294_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1bda71661:;
				};
			}
		}
		else {
			_case_begin_1bda64126:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1acbc1294_Str((*(_self_))._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1bda6406b:;
	};
	return _1acbbc2d4_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1acb933cb_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93e9e6__Bits(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _68627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _6913_prim = _1acbc354e_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1acb90395_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _1ac92347a_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1acb90395_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _7017_constant = static__1aca88c61_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac93ede2__Elem(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _71027_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbd12a4_Ptr> _7157_ptr = _1acbc3a6b_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1acbd1d21_IsUnsafe(_7157_ptr)) {
			_1acb90395_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1acbcc9dc_Sptr> _7237_sptr = _1acbc37d5_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1acbcd4b0_Slc> _7277_slice = _1acbc45a5_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1acbd07d1_Arr> _7317_array = _1acbc431e_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1acab021b_Enum> _7357_enm = _1acbc3d02_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1acb90395_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9402dd__Size(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _74327_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbd07d1_Arr> _7487_arr = _1acbc431e_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1acb90395_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _7537_constant = static__1aca88c61_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9406d9__Key(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _76226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbceb54_Map> _7677_m = _1acbc50de_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1acb90395_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac940ad5__Value(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _77528_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbceb54_Map> _7807_m = _1acbc50de_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1acb90395_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac940ed1__Fields(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _78829_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _7937_s = _1acbc4ac2_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac9303bb_comptimeStructFields>(_1ac9303bb_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	};
	jule::Ptr<_1acab021b_Enum> _8037_enm = _1acbc3d02_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac93637d_comptimeEnumFields>(_1ac93637d_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	};
	_1acb90395_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9413cc__Statics(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _81730_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _8227_s = _1acbc4ac2_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1acb90395_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac933600_comptimeStatics>(_1ac933600_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9417c8__Binded(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _83629_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _8417_constant = static__1aca892a0_NewBool(_1acbc1c45_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac941bc4__Ordered(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _84926_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _8547_constant = static__1aca892a0_NewBool(_1acbc2a15_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9420c0__Comparable(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _86229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _8677_constant = static__1aca892a0_NewBool(_1acbc24e8_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9424bb__Mutable(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _87526_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _8807_constant = static__1aca892a0_NewBool(_1acbc277e_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9428b7__Types(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _88828_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbce0a4_Tuple> _8937_tup = _1acbc5375_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1acb90395_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac93b54d_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1ac93b54d_comptimeTypeInfos>(_1ac93b54d_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac93cebc_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*(_8937_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdab5c8d:;
		if (it != expr_end) {
			jule::Ptr<_1acbc0d98_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac9a8598_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1bdab5c8d:;
			++it;
			goto _iter_begin_1bdab5c8d;
		}
		_iter_end_1bdab5c8d:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac942cb3__CanNil(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _91129_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _9167_constant = static__1aca892a0_NewBool(_1acbc2c9b_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9431ae__GC(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _92425_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _9297_constant = static__1aca892a0_NewBool(_1acbc3032_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9435aa__Result(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _93729_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acaa540e_FnIns> _9427_f = _1acbc483b_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1acb90395_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1ac952234_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1acc4423a_primVoid));;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9439a6__Params(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Ptr<_1acb8edbc_eval>* _95329_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acaa540e_FnIns> _9587_f = _1acbc483b_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1acb90395_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac939bde_comptimeParams>(_1ac939bde_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac943ce7_subIdent(jule::Ptr<_1ac93cebc_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bdac71cd:;
			{
				jule::Ptr<_1acaa540e_FnIns> _9738_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdac8c90, jule::Ptr<__jule_anon_1bdac8c90_ctx>::make(__jule_anon_1bdac8c90_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdac8c90_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bdac7244:;
			{
				jule::Ptr<_1acaa540e_FnIns> _9808_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdacac1a, jule::Ptr<__jule_anon_1bdacac1a_ctx>::make(__jule_anon_1bdacac1a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdacac1a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bdac72aa:;
			{
				jule::Ptr<_1acaa540e_FnIns> _9878_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdaccb95, jule::Ptr<__jule_anon_1bdaccb95_ctx>::make(__jule_anon_1bdaccb95_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdaccb95_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bdac7442:;
			{
				jule::Ptr<_1acaa540e_FnIns> _9948_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdaceb20, jule::Ptr<__jule_anon_1bdaceb20_ctx>::make(__jule_anon_1bdaceb20_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdaceb20_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bdac74b9:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10018_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdad1a9a, jule::Ptr<__jule_anon_1bdad1a9a_ctx>::make(__jule_anon_1bdad1a9a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdad1a9a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bdac7541:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10088_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdad3a25, jule::Ptr<__jule_anon_1bdad3a25_ctx>::make(__jule_anon_1bdad3a25_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdad3a25_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bdac75b8:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10158_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdad59a0, jule::Ptr<__jule_anon_1bdad59a0_ctx>::make(__jule_anon_1bdad59a0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdad59a0_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bdac76c8:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10228_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdad792a, jule::Ptr<__jule_anon_1bdad792a_ctx>::make(__jule_anon_1bdad792a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdad792a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bdac773e:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10298_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdad9b2a, jule::Ptr<__jule_anon_1bdad9b2a_ctx>::make(__jule_anon_1bdad9b2a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdad9b2a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bdac77a5:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10368_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdadbaa5, jule::Ptr<__jule_anon_1bdadbaa5_ctx>::make(__jule_anon_1bdadbaa5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdadbaa5_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bdac781b:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10438_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdadda30, jule::Ptr<__jule_anon_1bdadda30_ctx>::make(__jule_anon_1bdadda30_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdadda30_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bdac7893:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10508_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdae09aa, jule::Ptr<__jule_anon_1bdae09aa_ctx>::make(__jule_anon_1bdae09aa_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdae09aa_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bdac791a:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10578_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdae2935, jule::Ptr<__jule_anon_1bdae2935_ctx>::make(__jule_anon_1bdae2935_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdae2935_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bdac7992:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10648_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdae48b0, jule::Ptr<__jule_anon_1bdae48b0_ctx>::make(__jule_anon_1bdae48b0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdae48b0_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bdac7a19:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10718_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdae683a, jule::Ptr<__jule_anon_1bdae683a_ctx>::make(__jule_anon_1bdae683a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdae683a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bdac7a91:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10788_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdae87b5, jule::Ptr<__jule_anon_1bdae87b5_ctx>::make(__jule_anon_1bdae87b5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdae87b5_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1bdac7b18:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10858_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdaea740, jule::Ptr<__jule_anon_1bdaea740_ctx>::make(__jule_anon_1bdaea740_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdaea740_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bdac7b90:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10928_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdaec6ba, jule::Ptr<__jule_anon_1bdaec6ba_ctx>::make(__jule_anon_1bdaec6ba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdaec6ba_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bdac7c17:;
			{
				jule::Ptr<_1acaa540e_FnIns> _10998_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdaee645, jule::Ptr<__jule_anon_1bdaee645_ctx>::make(__jule_anon_1bdaee645_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdaee645_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1bdac4a38:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdac6ead:;
	};
}








inline jule::Bool _1ac9440c2_comptimeValue_eq(_1ac9440c2_comptimeValue *_self_, _1ac9440c2_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1ac944479_Str(_1ac9440c2_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1ac9447ba_Equal(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acbc0d98_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac944d2b__Unwrap(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _112229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac945227__Type(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _113027_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac945623__Lvalue(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _113829_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _11437_constant = static__1aca892a0_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac945a1e__Mutable(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _115130_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _11567_constant = static__1aca892a0_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac945e1a__Const(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _116428_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _11697_constant = static__1aca892a0_NewBool(_1acb8d838_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac946316__Field(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _117728_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _11827_s = _1acbc4ac2_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1acb90395_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1acb8cded_Data> _11887_d = _1acbadbaa_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acb8d838_IsConst(_11887_d.ptr())))) {
		_1acb90395_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _11963_prim = _1acbc354e_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1acbcc47b_IsStr(_11963_prim.ptr()))))) {
		_1acb90395_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1aca8a955_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1ac9d13d4_FieldIns> _12027_f = _1ac9d3370_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1acb90395_pushErr((*(_117728_e)).ptr(), (*_11877_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11827_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1acba6895_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*_11877_arg.alloc)._field_Token), &(_12027_f));
	return _1ac952575_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac946712__Method(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Ptr<_1acb8edbc_eval>* _121229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1ac9d1e84_StructIns> _12187_s = static_cast<jule::Ptr<_1ac9d1e84_StructIns>>(nullptr);;
	if ((_1acbc37d5_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_1acbc4ac2_Struct((*(_1acbc37d5_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1acbc4ac2_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1acb90395_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1acb8cded_Data> _12307_d = _1acbadbaa_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acb8d838_IsConst(_12307_d.ptr())))) {
		_1acb90395_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _12383_prim = _1acbc354e_Prim((*(_12307_d))._field_Type);;
	if (((_12383_prim == nullptr) || (!(_1acbcc47b_IsStr(_12383_prim.ptr()))))) {
		_1acb90395_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1aca8a955_ReadStr((*(_12307_d))._field_Constant.ptr());;
	;
	jule::Ptr<_1acaa2351_Fn> _12457_m = _1ac9d302e_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1acb90395_pushErr((*(_121229_e)).ptr(), (*_12297_arg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_12187_s))._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_data.alloc));
	if (_12177_ref) {
		_1acbbc889_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1acba6eb1_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*_12297_arg.alloc)._field_Token), &(_12457_m), _12177_ref);
	return _1ac952575_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac946a53_subIdent(jule::Ptr<_1ac9440c2_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bdb296e7:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12618_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb2abb0, jule::Ptr<__jule_anon_1bdb2abb0_ctx>::make(__jule_anon_1bdb2abb0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb2abb0_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bdb2975d:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12688_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb2cb3a, jule::Ptr<__jule_anon_1bdb2cb3a_ctx>::make(__jule_anon_1bdb2cb3a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb2cb3a_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bdb297c4:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12758_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb2eab5, jule::Ptr<__jule_anon_1bdb2eab5_ctx>::make(__jule_anon_1bdb2eab5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb2eab5_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bdb2984b:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12828_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb31a40, jule::Ptr<__jule_anon_1bdb31a40_ctx>::make(__jule_anon_1bdb31a40_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb31a40_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bdb29a38:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12898_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb339ba, jule::Ptr<__jule_anon_1bdb339ba_ctx>::make(__jule_anon_1bdb339ba_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb339ba_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bdb29a9e:;
			{
				jule::Ptr<_1acaa540e_FnIns> _12968_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb35945, jule::Ptr<__jule_anon_1bdb35945_ctx>::make(__jule_anon_1bdb35945_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb35945_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1bdb29b15:;
			{
				jule::Ptr<_1acaa540e_FnIns> _13038_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bdb378c0, jule::Ptr<__jule_anon_1bdb378c0_ctx>::make(__jule_anon_1bdb378c0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bdb378c0_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1bdb291b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdb295a4:;
	};
}







inline jule::Str _1ac9471d5_Str(_1ac946d2d_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1ac947526_Equal(jule::Ptr<_1ac946d2d_comptimeFiles> _self_, jule::Ptr<_1acbc0d98_Type> _132218_other) {
	return false;;
}



inline void _1ac9479aa_ready(_1ac946d2d_comptimeFiles* _self_, jule::Ptr<_1acb3d420_Var>* _132626_keyA, jule::Ptr<_1acb3d420_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94879c_comptimeFile>(_1ac94879c_comptimeFile{._field_file=jule::Ptr<_1acaa8654_SymTab>(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18)})});
	};
}



inline void _1ac947d1d_index(_1ac946d2d_comptimeFiles* _self_, jule::Ptr<_1acb8cded_Data>* _134726_d, jule::I32 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94879c_comptimeFile>(_1ac94879c_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18)});
}



inline void _1ac94823b_step(_1ac946d2d_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1acb3d420_Var>* _135833_keyA, jule::Ptr<_1acb3d420_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1ac94879c_comptimeFile>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I32 _1ac9484c2_len(_1ac946d2d_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1ac94879c_comptimeFile_eq(_1ac94879c_comptimeFile *_self_, _1ac94879c_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1ac948b54_Str(_1ac94879c_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1ac948e95_Equal(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acbc0d98_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9494b2__Path(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _138627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _13917_constant = static__1aca89569_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9498ad__Name(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _139927_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _14047_constant = static__1aca89569_NewStr(_1abc33549_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac949ca9__Dir(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Ptr<_1acb8edbc_eval>* _141226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aca3208e_Const> _14177_constant = static__1aca89569_NewStr(_1abc332b3_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94a0ea_subIdent(jule::Ptr<_1ac94879c_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bd3d634a:;
			{
				jule::Ptr<_1acaa540e_FnIns> _14288_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd3d768c, jule::Ptr<__jule_anon_1bd3d768c_ctx>::make(__jule_anon_1bd3d768c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3d768c_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bd3d63e4:;
			{
				jule::Ptr<_1acaa540e_FnIns> _14358_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd3d965b, jule::Ptr<__jule_anon_1bd3d965b_ctx>::make(__jule_anon_1bd3d965b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3d965b_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bd3d646b:;
			{
				jule::Ptr<_1acaa540e_FnIns> _14428_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd3db5d6, jule::Ptr<__jule_anon_1bd3db5d6_ctx>::make(__jule_anon_1bd3db5d6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3db5d6_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1bd3d603c:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd3d625c:;
	};
}







inline jule::Str _1ac94a9ad_Str(_1ac94a3c5_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1ac94acee_Equal(jule::Ptr<_1ac94a3c5_comptimeDecls> _self_, jule::Ptr<_1acbc0d98_Type> _146118_other) {
	return false;;
}



inline void _1ac94b173_ready(_1ac94a3c5_comptimeDecls* _self_, jule::Ptr<_1acb3d420_Var>* _146526_keyA, jule::Ptr<_1acb3d420_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)})});
	};
}



inline void _1ac94b4d6_index(_1ac94a3c5_comptimeDecls* _self_, jule::Ptr<_1acb8cded_Data>* _148626_d, jule::I32 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)});
}



inline void _1ac94b904_step(_1ac94a3c5_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1acb3d420_Var>* _149533_keyA, jule::Ptr<_1acb3d420_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1ac94c6b3_comptimeDecl>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I32 _1ac94bb8a_len(_1ac94a3c5_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1ac94c6b3_comptimeDecl_eq(_1ac94c6b3_comptimeDecl *_self_, _1ac94c6b3_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1ac94ca6a_Str(_1ac94c6b3_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1ac94cdab_Equal(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acbc0d98_Type> _153418_other) {
	return false;;
}



inline jule::Str _1ac94d30c_declAsStr(_1ac94c6b3_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd3e6767:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd3e6217:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd3e6624:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd3e669b:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd3e6921:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd3e6998:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd3e6c1d:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd3e6c84:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd3e6cea:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd3e6d61:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1bd3e65ad:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1bd3e6349:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1ac94d708__Name(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _156527_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd3eb6e5:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd3eba9c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa2351_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd3ebb13:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acab021b_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd3ebb8a:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acab1926_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd3ebc12:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaaca65_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd3ebc89:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9cb203_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd3ec141:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acbc00a6_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd3ec1a7:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd3ec21d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaae6b0_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd3ec284:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa087c_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1bd3eba36:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1bd3eb9c0:;
	};
	jule::Ptr<_1aca3208e_Const> _15957_constant = static__1aca89569_NewStr(_15707_name);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94db04__Public(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _160329_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd405c0a:;
			{
				_1acb90395_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd4060a1:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd406117:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa2351_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd40617d:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acab021b_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd406205:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acab1926_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd40627c:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaaca65_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd406304:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9cb203_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd406656:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acbc00a6_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd4066cd:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1bd40603a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1bd405ec4:;
	};
	jule::Ptr<_1aca3208e_Const> _16337_constant = static__1aca892a0_NewBool(_16087_public);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94e000__Binded(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _164129_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd410819:;
			{
				_1acb90395_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd4104ea:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd410561:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa2351_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd4105c7:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acbc00a6_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd41063d:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1bd410484:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1bd41041d:;
	};
	jule::Ptr<_1aca3208e_Const> _16677_constant = static__1aca892a0_NewBool(_16467_binded);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94e3eb__Exceptional(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _167534_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd415e18:;
			{
				goto _match_end_1bd41729e;
			}
		}
		else {
			_case_begin_1bd417315:;
			{
				_1acb90395_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bd41729e:;
	};
	jule::Ptr<_1acaa2351_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1acaa2351_Fn>(&__jule_any_type10);;
	jule::Ptr<_1aca3208e_Const> _16887_constant = static__1aca892a0_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94e7e7__Mutable(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _169630_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1bd41c43b:;
			{
				_1acb90395_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd41c11c:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa087c_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd41c183:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1ac9cb203_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd41c1e9:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1bd41c0a6:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1bd41c040:;
	};
	jule::Ptr<_1aca3208e_Const> _17217_constant = static__1aca892a0_NewBool(_17017_mutable);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac94ebe3__Variadic(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _172931_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1bd423db0:;
			{
				_1acb90395_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd423a91:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa087c_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1bd423a2a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1bd4239b4:;
	};
	jule::Ptr<_1aca3208e_Const> _17527_constant = static__1aca892a0_NewBool(_17347_variadic);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9500de__Reference(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _176032_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1bd429745:;
			{
				_1acb90395_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd429426:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd42948c:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1acaa087c_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1bd4293b0:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1bd429349:;
	};
	jule::Ptr<_1aca3208e_Const> _17847_constant = static__1aca892a0_NewBool(_17657_ref);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9504da__Params(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _179229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd42dc55:;
			{
				_1acb90395_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd43054d:;
			{
				jule::Ptr<_1acaa2351_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1acaa2351_Fn>();;
				jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd433bc2:;
					if (it != expr_end) {
						jule::I32 _18129_i = it - expr->begin();
						jule::Ptr<_1acaa087c_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1bd433bc2:;
						++it;
						_18129_i++;
						goto _iter_begin_1bd433bc2;
					}
					_iter_end_1bd433bc2:;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94a3c5_comptimeDecls>(_1ac94a3c5_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bd430152:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1bd4300db:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1ac9508d6__Fields(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _182729_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1bd4376ed:;
			{
				_1acb90395_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd4373ce:;
			{
				jule::Ptr<_1acab021b_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1acab021b_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd43aa42:;
					if (it != expr_end) {
						jule::I32 _18479_i = it - expr->begin();
						jule::Ptr<_1acaae6b0_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1bd43aa42:;
						++it;
						_18479_i++;
						goto _iter_begin_1bd43aa42;
					}
					_iter_end_1bd43aa42:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd437445:;
			{
				jule::Ptr<_1ac9ce129_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd43c956:;
					if (it != expr_end) {
						jule::I32 _18539_i = it - expr->begin();
						jule::Ptr<_1ac9cb203_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1bd43c956:;
						++it;
						_18539_i++;
						goto _iter_begin_1bd43c956;
					}
					_iter_end_1bd43c956:;
				};
			}
		}
		else {
			_case_begin_1bd437368:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1bd437302:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94a3c5_comptimeDecls>(_1ac94a3c5_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac950cd2__Statics(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _186830_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bd4414c6:;
			{
				_1acb90395_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd4411a7:;
			{
				jule::Ptr<_1ac9ce129_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd444908:;
					if (it != expr_end) {
						jule::I32 _18899_i = it - expr->begin();
						jule::Ptr<_1acb3d420_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1bd444908:;
						++it;
						_18899_i++;
						goto _iter_begin_1bd444908;
					}
					_iter_end_1bd444908:;
				};
			}
		}
		else {
			_case_begin_1bd441141:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1bd4410ca:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94a3c5_comptimeDecls>(_1ac94a3c5_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac9511cd__Methods(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Ptr<_1acb8edbc_eval>* _190430_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bd448478:;
			{
				_1acb90395_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac94d30c_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd448159:;
			{
				jule::Ptr<_1acaaca65_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1acaaca65_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd44b7bc:;
					if (it != expr_end) {
						jule::I32 _19249_i = it - expr->begin();
						jule::Ptr<_1acaa2351_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1bd44b7bc:;
						++it;
						_19249_i++;
						goto _iter_begin_1bd44b7bc;
					}
					_iter_end_1bd44b7bc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd4481c0:;
			{
				jule::Ptr<_1ac9ce129_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1ac9ce129_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac94c6b3_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac94c6b3_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd44d6d1:;
					if (it != expr_end) {
						jule::I32 _19309_i = it - expr->begin();
						jule::Ptr<_1acaa2351_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1ac94c6b3_comptimeDecl>(_1ac94c6b3_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1bd44d6d1:;
						++it;
						_19309_i++;
						goto _iter_begin_1bd44d6d1;
					}
					_iter_end_1bd44d6d1:;
				};
			}
		}
		else {
			_case_begin_1bd4480e3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1bd44807c:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94a3c5_comptimeDecls>(_1ac94a3c5_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac95151e_subIdent(jule::Ptr<_1ac94c6b3_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bd44ee85:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19488_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd45166d, jule::Ptr<__jule_anon_1bd45166d_ctx>::make(__jule_anon_1bd45166d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd45166d_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bd44eeeb:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19558_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd4535e8, jule::Ptr<__jule_anon_1bd4535e8_ctx>::make(__jule_anon_1bd4535e8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd4535e8_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bd450073:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19628_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd455573, jule::Ptr<__jule_anon_1bd455573_ctx>::make(__jule_anon_1bd455573_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd455573_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bd4500ea:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19698_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd4574ed, jule::Ptr<__jule_anon_1bd4574ed_ctx>::make(__jule_anon_1bd4574ed_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd4574ed_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bd4502a4:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19768_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd459478, jule::Ptr<__jule_anon_1bd459478_ctx>::make(__jule_anon_1bd459478_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd459478_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bd45031a:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19838_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd45b403, jule::Ptr<__jule_anon_1bd45b403_ctx>::make(__jule_anon_1bd45b403_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd45b403_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bd450392:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19908_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd45d37d, jule::Ptr<__jule_anon_1bd45d37d_ctx>::make(__jule_anon_1bd45d37d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd45d37d_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bd450419:;
			{
				jule::Ptr<_1acaa540e_FnIns> _19978_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd460308, jule::Ptr<__jule_anon_1bd460308_ctx>::make(__jule_anon_1bd460308_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd460308_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bd45053a:;
			{
				jule::Ptr<_1acaa540e_FnIns> _20048_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd462508, jule::Ptr<__jule_anon_1bd462508_ctx>::make(__jule_anon_1bd462508_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd462508_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bd4505a1:;
			{
				jule::Ptr<_1acaa540e_FnIns> _20118_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd464483, jule::Ptr<__jule_anon_1bd464483_ctx>::make(__jule_anon_1bd464483_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd464483_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1bd450617:;
			{
				jule::Ptr<_1acaa540e_FnIns> _20188_method = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>((void*)__jule_anon_1bd46640d, jule::Ptr<__jule_anon_1bd46640d_ctx>::make(__jule_anon_1bd46640d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd46640d_ctx_handler), ._field_reloaded=false});;
				return _1ac951ba1_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1bd44a744:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd44ecdc:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*> _1ac954577_readyFn(jule::Ptr<_1ac954148_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*>((void*)__jule_anon_1be4a4deb, jule::Ptr<__jule_anon_1be4a4deb_ctx>::make(__jule_anon_1be4a4deb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be4a4deb_ctx_handler);;
}



inline jule::Bool _1ac95480d_readyFi(jule::Ptr<_1ac954148_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1acb27c56_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1ac954577_readyFn(_self_)));;
}



inline jule::Bool _1ac954a94_readySi(jule::Ptr<_1ac954148_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1ac954577_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1ac954d2a_ready(jule::Ptr<_1ac954148_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1ac95480d_readyFi(_self_);;
	};
	return _1ac954a94_readySi(_self_);;
}



inline jule::Bool _1ac9550b1_check(jule::Ptr<_1ac954148_constraintChecker> _self_) {
	if ((!(_1ac954d2a_ready(_self_)))) {
		return false;;
	};
	_julec_label_1be4b5a44:;
	{
		auto expr = &((*_self_.alloc)._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4b5eea:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1acbbe4b2_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1be4b5eea;
				};
				{
					auto expr = &((*_12015_g.alloc)._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be4b7293:;
					if (it != expr_end) {
						jule::Ptr<_1acbc0d98_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1acbc8eb1_Prim> _1259_prim = _1acbc354e_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1acbc9b1b_IsConstraint(_1259_prim))) {
								if (_1ac95580e_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*_12015_g.alloc)._field_Type))) {
									goto _iter_next_1be4b5eea;
								};
								goto _iter_next_1be4b7293;
							};
							if (_1acbc15d5_Equal(_12416_c2, (*_12015_g.alloc)._field_Type)) {
								goto _iter_next_1be4b5eea;
							};
						}
						_iter_next_1be4b7293:;
						++it;
						goto _iter_begin_1be4b7293;
					}
					_iter_end_1be4b7293:;
				};
				_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1ac955446_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1be4b5eea:;
			++it;
			_1208_i++;
			goto _iter_begin_1be4b5eea;
		}
		_iter_end_1be4b5eea:;
	};
	return true;;
}







inline jule::Bool _1ac956843_IsTraitImpl(_1ac956447_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1ac956ac9_IsStructImpl(_1ac956447_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1ac95ae74_If_eq(_1ac95ae74_If *_self_, _1ac95ae74_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1ac95b271_Else_eq(_1ac95b271_Else *_self_, _1ac95b271_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1ac95b98b_InfIter_eq(_1ac95b98b_InfIter *_self_, _1ac95b98b_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1ac95be42_WhileIter_eq(_1ac95be42_WhileIter *_self_, _1ac95be42_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1ac95c2d8_IsWhileNext(_1ac95be42_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1ac95c88d_RangeIter_eq(_1ac95c88d_RangeIter *_self_, _1ac95c88d_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1ac95cc23_ContSt_eq(_1ac95cc23_ContSt *_self_, _1ac95cc23_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1ac95d0ec_BreakSt_eq(_1ac95d0ec_BreakSt *_self_, _1ac95d0ec_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1ac95d5a3_Label_eq(_1ac95d5a3_Label *_self_, _1ac95d5a3_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac95dc13_GotoSt_eq(_1ac95dc13_GotoSt *_self_, _1ac95dc13_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1ac95e0dc_Postfix_eq(_1ac95e0dc_Postfix *_self_, _1ac95e0dc_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1ac95e593_Assign_eq(_1ac95e593_Assign *_self_, _1ac95e593_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1ac9614a7_FallSt_eq(_1ac9614a7_FallSt *_self_, _1ac9614a7_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1ac96184d_RetSt_eq(_1ac96184d_RetSt *_self_, _1ac96184d_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1ac961d04_scopeLabel_eq(_1ac961d04_scopeLabel *_self_, _1ac961d04_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1ac9621cd_result_eq(_1ac9621cd_result *_self_, _1ac9621cd_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1ac9631bd_scopeChecker_eq(_1ac9631bd_scopeChecker *_self_, _1ac9631bd_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac963696_SelectPackage(_1ac9631bd_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _35429_selector) {
	return _1ac9a9203_SelectPackage((*(_self_))._field_s.ptr(), _35429_selector);;
}



inline jule::Ptr<_1acb3d420_Var> _1ac963a92_FindVar(_1ac9631bd_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded) {
	if ((!(_36535_binded))) {
		jule::Ptr<_1acb3d420_Var> _3678_v = _1ac966e08_findVar(_self_, _36523_ident);;
		if ((_3678_v != nullptr)) {
			return _3678_v;;
		};
	};
	return _1ac9a95ee_FindVar((*(_self_))._field_s.ptr(), _36523_ident, _36535_binded);;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac963e8d_FindTypeAlias(_1ac9631bd_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded) {
	;
	jule::Ptr<_1acbc00a6_TypeAlias> _3857_ta = _1acaab657_findTypeAlias((*(_self_))._field_table.ptr(), &(_38229_ident), _38241_binded, true);;
	if ((_3857_ta != nullptr)) {
		return _3857_ta;;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _3907_parent = (*(_self_))._field_parent;;
	while ((_3907_parent != nullptr)) {
		{
			_3857_ta=_1acaab657_findTypeAlias((*(_3907_parent))._field_table, &(_38229_ident), _38241_binded, true);
			if ((_3857_ta != nullptr)) {
				return _3857_ta;;
			};
			_3907_parent=(*_3907_parent.alloc)._field_parent;
		}
	_iter_next_1be515027:;
	}
	_iter_end_1be515027:;;
	return _1ac9a99ea_FindTypeAlias((*(_self_))._field_s.ptr(), _38229_ident, _38241_binded);;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac964389_FindStruct(_1ac9631bd_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded) {
	return _1ac9a9de6_FindStruct((*(_self_))._field_s.ptr(), _40726_ident, _40738_binded);;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac964785_FindFn(_1ac9631bd_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded) {
	return _1ac9aa2e2_FindFn((*(_self_))._field_s.ptr(), _41622_ident, _41634_binded);;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac964ac6_FindTrait(_1ac9631bd_scopeChecker* _self_, jule::Str _42525_ident) {
	return _1ac9aa633_FindTrait((*(_self_))._field_s.ptr(), _42525_ident);;
}



inline jule::Ptr<_1acab021b_Enum> _1ac964e17_FindEnum(_1ac9631bd_scopeChecker* _self_, jule::Str _43424_ident) {
	return _1ac9aa974_FindEnum((*(_self_))._field_s.ptr(), _43424_ident);;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac965258_FindTypeEnum(_1ac9631bd_scopeChecker* _self_, jule::Str _44328_ident) {
	return _1ac9aacb5_FindTypeEnum((*(_self_))._field_s.ptr(), _44328_ident);;
}



inline jule::Bool _1ac9655aa_isUnsafe(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	jule::Ptr<_1ac9631bd_scopeChecker> _4517_scope = _self_;;
	_julec_label_1be51a2e6:;
	if ((*((*(_4517_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*_4517_scope.alloc)._field_parent != nullptr)) {
		_4517_scope=(*_4517_scope.alloc)._field_parent;
		goto _julec_label_1be51a2e6;
	};
	return false;;
}



inline jule::Bool _1ac965841_isRoot(_1ac9631bd_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1ac965a3e_stop(_1ac9631bd_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1ac965cc5_stopped(_1ac9631bd_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1ac96605b_isDeferred(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	jule::Ptr<_1ac9631bd_scopeChecker> _4847_scope = _self_;;
	_julec_label_1be51cdba:;
	if ((*((*(_4847_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*_4847_scope.alloc)._field_parent != nullptr)) {
		_4847_scope=(*_4847_scope.alloc)._field_parent;
		goto _julec_label_1be51cdba;
	};
	return false;;
}



inline void _1ac966314_pushCaptured(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acb3d420_Var>* _50534_v) {
	jule::Ptr<_1ac9631bd_scopeChecker> _5067_sc = _self_;;
	for (;;) {
		{
			if (((*(_5067_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5067_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be5204e9:;
					if (it != expr_end) {
						jule::Ptr<_1acb3d420_Var> _50912_cv = *it;
						{
							if ((_50912_cv == (*(_50534_v)))) {
								goto _julec_label_1be521440;
							};
						}
						_iter_next_1be5204e9:;
						++it;
						goto _iter_begin_1be5204e9;
					}
					_iter_end_1be5204e9:;
				};
				(*(*(_5067_sc))._field_captured.alloc)=jule::append((*(*(_5067_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_50534_v)); __jule_collection; }));
				_julec_label_1be521440:;
			};
			if (((*_5067_sc.alloc)._field_parent == nullptr)) {
				goto _iter_end_1be51e790;
			};
			_5067_sc=(*_5067_sc.alloc)._field_parent;
			if ((!(_1acbbd44a_isVarCaptured(_5067_sc, _5067_sc, (*(_50534_v)))))) {
				goto _iter_end_1be51e790;
			};
		}
	_iter_next_1be51e790:;
	}
	_iter_end_1be51e790:;;
}



inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac96659a_getRoot(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	jule::Ptr<_1ac9631bd_scopeChecker> _5307_root = _self_;;
	while ((((*(_5307_root))._field_parent != nullptr) && ((*_5307_root.alloc)._field_owner == nullptr))) {
		{
			_5307_root=(*_5307_root.alloc)._field_parent;
		}
	_iter_next_1be52251d:;
	}
	_iter_end_1be52251d:;;
	return _5307_root;;
}



inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac966831_getHardRoot(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	jule::Ptr<_1ac9631bd_scopeChecker> _5407_root = _self_;;
	while (((*(_5407_root))._field_parent != nullptr)) {
		{
			_5407_root=(*_5407_root.alloc)._field_parent;
		}
	_iter_next_1be5237a5:;
	}
	_iter_end_1be5237a5:;;
	return _5407_root;;
}



inline jule::Ptr<_1ac979855_ReferenceStack> _1ac966ab7_getOwnerRefers(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	return (*((*(_1ac966831_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac966e08_findVar(_1ac9631bd_scopeChecker* _self_, jule::Str _55223_ident) {
	;
	;
	jule::Ptr<_1acb3d420_Var> _5557_v = _1acaab1a1_findVar((*(_self_))._field_table.ptr(), &(_55223_ident), false, true);;
	if ((_5557_v != nullptr)) {
		return _5557_v;;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _5597_parent = (*(_self_))._field_parent;;
	while ((_5597_parent != nullptr)) {
		{
			_5557_v=_1acaab1a1_findVar((*(_5597_parent))._field_table, &(_55223_ident), false, true);
			if ((_5557_v != nullptr)) {
				return _5557_v;;
			};
			_5597_parent=(*_5597_parent.alloc)._field_parent;
		}
	_iter_next_1be526335:;
	}
	_iter_end_1be526335:;;
	return nullptr;;
}



inline jule::Ptr<_1ac95d5a3_Label> _1ac967249_findLabel(_1ac9631bd_scopeChecker* _self_, jule::Str* _57326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be52837b:;
		if (it != expr_end) {
			jule::Any _57415_st = *it;
			{
				{
					auto &_match_expr{ _57415_st };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1be528bea:;
						{
							jule::Ptr<_1ac95d5a3_Label> _5779_label = _57415_st.unsafe_cast_ptr<_1ac95d5a3_Label>();;
							if (((*(_5779_label))._field_Ident == (*(_57326_ident)))) {
								return _5779_label;;
							};
						}
					}
					_match_end_1be528b84:;
				};
			}
			_iter_next_1be52837b:;
			++it;
			goto _iter_begin_1be52837b;
		}
		_iter_end_1be52837b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac961d04_scopeLabel> _1ac96758a_findLabelScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Str* _58932_ident) {
	jule::Ptr<_1ac961d04_scopeLabel> _5907_label = _1ac9678cb_findLabelAll(_self_.ptr(), _58932_ident);;
	if (((_5907_label != nullptr) && ((*((*_5907_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5907_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac961d04_scopeLabel> _1ac9678cb_findLabelAll(_1ac9631bd_scopeChecker* _self_, jule::Str* _60029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be52e096:;
		if (it != expr_end) {
			jule::Ptr<_1ac961d04_scopeLabel> _60115_lbl = *it;
			{
				if (((*((*(_60115_lbl))._field_node))._field_Ident == (*(_60029_ident)))) {
					return _60115_lbl;;
				};
			}
			_iter_next_1be52e096:;
			++it;
			goto _iter_begin_1be52e096;
		}
		_iter_end_1be52e096:;
	};
	return nullptr;;
}



inline jule::Bool _1ac967cc7_isDuplicatedIdent(_1ac9631bd_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident) {
	jule::Ptr<_1acb3d420_Var> _6133_v = _1ac963a92_FindVar(_self_, (*(_61251_ident)), false);;
	if (((_6133_v != nullptr) && (static_cast<jule::Uintptr>(_6133_v) != _61233_itself))) {
		if (((*_6133_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6133_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1ac9ab1c2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1acbc00a6_TypeAlias> _6213_ta = _1ac963e8d_FindTypeAlias(_self_, (*(_61251_ident)), false);;
	if (((_6213_ta != nullptr) && (static_cast<jule::Uintptr>(_6213_ta) != _61233_itself))) {
		if (((*_6213_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6213_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1ac9ab1c2_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1ac968080_checkVarDecl(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c165a_VarDecl> _63233_decl) {
	jule::Ptr<_1acb3d420_Var> _6337_v = _1ac97ec12_buildVar(_63233_decl);;
	(*(_6337_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6337_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6337_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1ac967cc7_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6337_v), &((*_6337_v.alloc)._field_Ident))) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_6337_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6337_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ac965a3e_stop(_self_);
		return;;
	};
	_1acb30940_checkVarDecl((*(_self_))._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
	if (((!(_1acb3dab3_IsTypeInferred(_6337_v))) && (((*_6337_v.alloc)._field_TypeSym == nullptr) || ((*((*_6337_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1acb341d5_evalVarValue((*(_self_))._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
	if (((!(_1acb3d82c_IsInitialized(_6337_v))) || ((*((*_6337_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1ac96e2ea_removeInteriorMutRisk(_self_, &((*(*(_6337_v))._field_Value.alloc)._field_Data));
	_1acb33d72_checkVarValue((*(_self_))._field_s, &(_6337_v));
}



inline void _1ac968338_checkTypeAlias(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _66336_ta) {
	if (_1ac967cc7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_66336_ta))), &((*((*(_66336_ta))))._field_Ident))) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_66336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_66336_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1ac965a3e_stop(_self_);
		return;;
	};
	_1acb299c2_checkTypeAliasDecl((*(_self_))._field_s, _66336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_66336_ta)); __jule_collection; }));
	if (((*((*((*(_66336_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1ac965a3e_stop(_self_);
	};
}



inline void _1ac9685e1_checkTypeAliasDecl(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c530c_TypeAliasDecl> _67939_decl) {
	jule::Ptr<_1acbc00a6_TypeAlias> _6807_ta = _1ac97b7e1_buildTypeAlias(_67939_decl);;
	_1ac968338_checkTypeAlias(_self_, &(_6807_ta));
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac968877_getChild(_1ac9631bd_scopeChecker* _self_) {
	return jule::new_ptr<_1ac95aa56_Scope>(_1ac95aa56_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1ac968c95_checkChildSsc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _69035_tree, jule::Ptr<_1ac95aa56_Scope>* _69063_s, jule::Ptr<_1ac9631bd_scopeChecker>* _69079_ssc) {
	(*((*(_69063_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_69063_s))))._field_ChildIndex=(*((*(_69079_ssc))))._field_childIndex;
	(*((*(_69079_ssc))))._field_parent=_self_;
	_1ac975345_check((*(_69079_ssc)), _69035_tree, _69063_s);
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac969191_checkChildSc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _69734_tree, jule::Ptr<_1ac9631bd_scopeChecker>* _69762_ssc) {
	jule::Ptr<_1ac95aa56_Scope> _6987_s = _1ac968877_getChild(_self_.ptr());;
	_1ac968c95_checkChildSsc(_self_, _69734_tree, &(_6987_s), _69762_ssc);
	return _6987_s;;
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac9694d2_checkChild(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _70332_tree) {
	jule::Ptr<_1ac9631bd_scopeChecker> _7047_ssc = _1ac9755cb_newChildChecker(_self_);;
	return _1ac969191_checkChildSc(_self_, _70332_tree, &(_7047_ssc));;
}



inline void _1ac96978a_checkAnonScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree> _70835_tree) {
	jule::Ptr<_1ac95aa56_Scope> _7097_s = _1ac9694d2_checkChild(_self_, &(_70835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7097_s, &__jule_any_type20); __jule_collection; }));
}



inline void _1ac969aed_processErrorCall(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1abc2ba81_Token> _71369_err) {
	if (_1ac96605b_isDeferred(_self_)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), _71369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _7187_root = _1ac96659a_getRoot(_self_);;
	if ((!((*((*((*(_7187_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _71369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_71338_m))))._field_Func=(*_7187_root.alloc)._field_owner;
}



inline void _1ac969da6_checkExpr(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9b2a47_Expr> _72630_expr) {
	jule::Ptr<_1acb8edbc_eval> _7277_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	(*(_7277_eval))._field_target._field_ignored=true;
	jule::Ptr<_1acb8cded_Data> _7297_d = _1acbadbaa_evalExpr(_7277_eval, _72630_expr);;
	if (((_7297_d == nullptr) || ((*(_7297_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7297_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1be5508c0:;
			{
				jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _7388_m = (*(_7297_d))._field_Model.unsafe_cast_ptr<_1aca9d1c6_BuiltinErrorCallExprModel>();;
				_1ac969aed_processErrorCall(_self_, &(_7388_m), (*(_72630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31) {
			_case_begin_1be550edb:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else {
			_case_begin_1be550e75:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s, (*(_72630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be550e0e:;
	};
}



inline jule::Ptr<_1ac95ae74_If> _1ac96a1e7_checkIf(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4240_If> _75628_i) {
	jule::Ptr<_1ac95aa56_Scope> _7577_s = _1ac9694d2_checkChild(_self_, &((*(_75628_i))._field_Scope));;
	jule::Ptr<_1acb8cded_Data> _7597_d = _1acbadbaa_evalExpr(_1acb243b2_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), (*_75628_i.alloc)._field_Expr);;
	if ((_7597_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _7647_prim = _1acbc354e_Prim((*(_7597_d))._field_Type.ptr());;
	if (((_7647_prim == nullptr) || (!(_1acbcc1e5_IsBool(_7647_prim.ptr()))))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*_75628_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac95ae74_If>(_1ac95ae74_If{._field_Expr=(*(_7597_d))._field_Model, ._field_Scope=_7577_s});;
}



inline jule::Ptr<_1ac95b271_Else> _1ac96a538_checkElse(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4619_Else> _77630_e) {
	return jule::new_ptr<_1ac95b271_Else>(_1ac95b271_Else{._field_Scope=_1ac9694d2_checkChild(_self_, &((*(_77630_e))._field_Scope))});;
}



inline void _1ac96a7e1_checkConditional(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c4ac0_Conditional> _78237_conditional) {
	jule::Ptr<_1ac95b68e_Conditional> _7837_c = jule::new_ptr<_1ac95b68e_Conditional>(_1ac95b68e_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1ac95ae74_If>>(nullptr), ._field_Default=jule::Ptr<_1ac95b271_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7837_c, &__jule_any_type32); __jule_collection; }));
	(*_7837_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95ae74_If>>::alloc(0LL, ((*(_78237_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac95ae74_If>(nullptr); __jule_collection; });
	(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95ae74_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac96a1e7_checkIf(_self_, (*_78237_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_78237_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6164be:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c4240_If> _78915_elif = *it;
			{
				(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95ae74_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac96a1e7_checkIf(_self_, _78915_elif); __jule_collection; }));
			}
			_iter_next_1be6164be:;
			++it;
			goto _iter_begin_1be6164be;
		}
		_iter_end_1be6164be:;
	};
	if (((*_78237_conditional.alloc)._field_Default != nullptr)) {
		(*_7837_c.alloc)._field_Default=_1ac96a538_checkElse(_self_, (*_78237_conditional.alloc)._field_Default);
	};
}



inline void _1ac96acb9_checkIterScopeSsc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1ac9bd811_ScopeTree> _79851_tree, jule::Ptr<_1ac95aa56_Scope>* _79879_s, jule::Ptr<_1ac9631bd_scopeChecker> _79894_ssc) {
	(*(_79894_ssc))._field_it=_79834_it;
	_1ac968c95_checkChildSsc(_self_, &(_79851_tree), _79879_s, &(_79894_ssc));
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac96b270_checkIterScopeSc(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1ac9bd811_ScopeTree> _80350_tree, jule::Ptr<_1ac9631bd_scopeChecker> _80377_ssc) {
	jule::Ptr<_1ac95aa56_Scope> _8047_scope = _1ac968877_getChild(_self_.ptr());;
	_1ac96acb9_checkIterScopeSsc(_self_, _80333_it, _80350_tree, &(_8047_scope), _80377_ssc);
	return _8047_scope;;
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac96b66b_checkIterScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1ac9bd811_ScopeTree>* _80949_tree) {
	jule::Ptr<_1ac9631bd_scopeChecker> _8107_ssc = _1ac9755cb_newChildChecker(_self_);;
	return _1ac96b270_checkIterScopeSc(_self_, _80931_it, (*(_80949_tree)), _8107_ssc);;
}



inline void _1ac96b924_checkInfIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _81434_it) {
	jule::Ptr<_1ac95b98b_InfIter> _8157_kind = jule::new_ptr<_1ac95b98b_InfIter>(_1ac95b98b_InfIter{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8157_kind, &__jule_any_type33); __jule_collection; }));
	(*_8157_kind.alloc)._field_Scope=_1ac96b66b_checkIterScope(_self_, static_cast<jule::Uintptr>(_8157_kind), &((*((*(_81434_it))))._field_Scope));
}



inline void _1ac96bbcc_checkWhileIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _82036_it) {
	jule::Ptr<_1ac9c2ace_WhileKind> _8217_wh = (*((*(_82036_it))))._field_Kind.cast_ptr<_1ac9c2ace_WhileKind>(&__jule_any_type34);;
	if ((((*(_8217_wh))._field_Expr == nullptr) && ((*_8217_wh.alloc)._field_Next == nullptr))) {
		_1ac96b924_checkInfIter(_self_, _82036_it);
		return;;
	};
	jule::Ptr<_1ac95be42_WhileIter> _8277_kind = jule::new_ptr<_1ac95be42_WhileIter>(_1ac95be42_WhileIter{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8277_kind, &__jule_any_type35); __jule_collection; }));
	(*_8277_kind.alloc)._field_Scope=_1ac96b66b_checkIterScope(_self_, static_cast<jule::Uintptr>(_8277_kind), &((*((*(_82036_it))))._field_Scope));
	if (((*_8217_wh.alloc)._field_Expr != nullptr)) {
		jule::Ptr<_1acb8cded_Data> _8328_d = _1acbadbaa_evalExpr(_1acb243b2_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), (*_8217_wh.alloc)._field_Expr);;
		if ((_8328_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1acbc8eb1_Prim> _8374_prim = _1acbc354e_Prim((*(_8328_d))._field_Type.ptr());;
		if ((_8374_prim == nullptr)) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1acbcc1e5_IsBool(_8374_prim.ptr())))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8277_kind.alloc)._field_Expr=(*(_8328_d))._field_Model;
	};
	if (_1ac9c2e75_IsWhileNext(_8217_wh)) {
		if ((!(_1ac95a171_isValidAstStForNextSt(&((*_8217_wh.alloc)._field_Next))))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _8574_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1ac973e7b_checkNode(_self_, &((*_8217_wh.alloc)._field_Next));
		if ((_8574_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8609_st = (*((*(_self_))._field_scope))._field_Stmts[_8574_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8574_n);;
			if ((!(_1ac95a3b3_isValidStForNextSt(&(_8609_st))))) {
				_1ac9abb2e_pushErr((*(_self_))._field_s, (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8277_kind.alloc)._field_Next=_8609_st;
		};
	};
}



inline void _1ac96c0ea_checkComptimeRangeIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _87044_it, jule::Ptr<_1ac95c88d_RangeIter>* _87065_kind, jule::Ptr<_1acb8cded_Data>* _87088_d) {
	if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
		if (((!(_1ac9ab1c2_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1ac967cc7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
		if (((!(_1ac9ab1c2_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1ac967cc7_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1ac9c34d6_RangeKind> _8847_rang = (*((*(_87044_it))))._field_Kind.cast_ptr<_1ac9c34d6_RangeKind>(&__jule_any_type36);;
	_1ac975b4d_makeComptimeRange(_87088_d);
	if ((*((*(_87088_d))))._field_Decl) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_8847_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_87088_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1acb87513_rangeChecker _8917_rc = _1acb87513_rangeChecker{._field_sc=_self_, ._field_rang=_8847_rang, ._field_Kind=(*(_87065_kind)), ._field_d=(*(_87088_d))};;
	jule::Bool _8973_ok = _1acb89559_check(&_8917_rc);;
	if ((!(_8973_ok))) {
		return;;
	};
	jule::Ptr<_1ac92d0bc_comptimeRange> _9027_comptime = _1acbc68e8_comptimeRange((*((*(_87088_d))))._field_Type);;
	((_1ac92cd9c_comptimeRangeKindMptrData*)(*(_9027_comptime))._field_kind.safe_type())->_1ac92c594_ready((*(_9027_comptime))._field_kind.data, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
	jule::I32 _9047_i = 0LL;;
	jule::I32 _9053_errors = (*(*(_self_))._field_s.alloc)._field_errors.len();;
	for (; (_9047_i < ((_1ac92cd9c_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1ac92cc48_len((*_9027_comptime.alloc)._field_kind.data)); (_9047_i)++) {
		{
			jule::Ptr<_1ac9631bd_scopeChecker> _9078_ssc = _1ac9755cb_newChildChecker(_self_);;
			jule::Ptr<_1ac95aa56_Scope> _9088_scope = _1ac968877_getChild(_self_);;
			if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Scope=_9088_scope;
				(*((*(_9078_ssc))._field_table))._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Scope=_9088_scope;
				(*(*(_9078_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1ac92cd9c_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1ac92c9b2_step((*_9027_comptime.alloc)._field_kind.data, _9047_i, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
			_1ac968c95_checkChildSsc(_self_, &((*((*(_87044_it))))._field_Scope), &(_9088_scope), &(_9078_ssc));
			if ((_9053_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1be63e30a;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9088_scope, &__jule_any_type20); __jule_collection; }));
		}
	_iter_next_1be63e30a:;
	}
	_iter_end_1be63e30a:;;
}



inline void _1ac96c3a3_checkRangeIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter>* _92736_it) {
	jule::Ptr<_1ac9c34d6_RangeKind> _9287_rang = (*((*(_92736_it))))._field_Kind.cast_ptr<_1ac9c34d6_RangeKind>(&__jule_any_type36);;
	jule::Ptr<_1acb8edbc_eval> _9347_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	(*(_9347_eval))._field_target._field_mutable=true;
	jule::Ptr<_1acb8cded_Data> _9377_d = _1acbad869_evalExpr1(_9347_eval, (*(_9287_rang))._field_Expr);;
	if ((_9377_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac95c88d_RangeIter> _9427_kind = jule::new_ptr<_1ac95c88d_RangeIter>(_1ac95c88d_RangeIter{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Expr=_9377_d, ._field_KeyA=jule::Ptr<_1acb3d420_Var>(nullptr), ._field_KeyB=jule::Ptr<_1acb3d420_Var>(nullptr)});;
	if ((*((*(_92736_it))))._field_Comptime) {
		_1ac96c0ea_checkComptimeRangeIter(_self_, _92736_it, &(_9427_kind), &(_9377_d));
		return;;
	};
	if (_1acbc560b_comptime((*(_9377_d))._field_Type.ptr())) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*_9287_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1acb87513_rangeChecker _9567_rc = _1acb87513_rangeChecker{._field_sc=_self_, ._field_rang=_9287_rang, ._field_Kind=_9427_kind, ._field_d=_9377_d};;
	jule::Bool _9623_ok = _1acb89559_check(&_9567_rc);;
	if ((!(_9623_ok))) {
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9427_kind, &__jule_any_type37); __jule_collection; }));
	jule::Ptr<_1ac9631bd_scopeChecker> _9697_ssc = _1ac9755cb_newChildChecker(_self_);;
	jule::Ptr<_1ac95aa56_Scope> _9707_scope = _1ac968877_getChild(_self_);;
	if (((*(_9427_kind))._field_KeyA != nullptr)) {
		if (((!(_1ac9ab1c2_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1ac967cc7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyA.alloc)._field_Scope=_9707_scope;
		(*((*(_9697_ssc))._field_table))._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*_9427_kind.alloc)._field_KeyB != nullptr)) {
		if (((!(_1ac9ab1c2_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1ac967cc7_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyB.alloc)._field_Scope=_9707_scope;
		(*(*(_9697_ssc))._field_table.alloc)._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1ac96acb9_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9427_kind), (*((*(_92736_it))))._field_Scope, &(_9707_scope), _9697_ssc);
	(*_9427_kind.alloc)._field_Scope=_9707_scope;
}



inline void _1ac96c65b_checkIter(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c22a4_Iter> _99430_it) {
	if (_1ac9c264a_IsInf(_99430_it.ptr())) {
		if ((*_99430_it.alloc)._field_Comptime) {
			_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1ac96b924_checkInfIter(_self_, &(_99430_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_99430_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1be65aca5:;
			{
				if ((*_99430_it.alloc)._field_Comptime) {
					_1ac9abb2e_pushErr((*(_self_))._field_s, (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1ac96bbcc_checkWhileIter(_self_, &(_99430_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1be65be71:;
			{
				_1ac96c3a3_checkRangeIter(_self_, &(_99430_it));
			}
		}
		else {
			_case_begin_1be65be0a:;
			{
				jule::println(_1bbdd1440_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1be65bd94:;
	};
}



inline jule::Bool _1ac96c99c_checkValidContLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _101836_it) {
	jule::Ptr<_1ac9631bd_scopeChecker> _10197_scope = _self_;;
	_julec_label_1be664495:;
	if (((*(_10197_scope))._field_it == _101836_it)) {
		return true;;
	};
	if (((*_10197_scope.alloc)._field_parent != nullptr)) {
		_10197_scope=(*_10197_scope.alloc)._field_parent;
		goto _julec_label_1be664495;
	};
	return false;;
}



inline jule::Bool _1ac96ccdd_checkValidBreakLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Uintptr _103437_ptr) {
	jule::Ptr<_1ac9631bd_scopeChecker> _10357_scope = _self_;;
	_julec_label_1be666563:;
	if (((*(_10357_scope))._field_it == _103437_ptr)) {
		return true;;
	};
	if (((*_10357_scope.alloc)._field_cse != 0LLU)) {
		jule::Uintptr _10434_mtch = static_cast<jule::Uintptr>((*(((_1ac960cae_Case*)((*_10357_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10434_mtch == _103437_ptr)) {
			return true;;
		};
	};
	if (((*_10357_scope.alloc)._field_parent != nullptr)) {
		_10357_scope=(*_10357_scope.alloc)._field_parent;
		goto _julec_label_1be666563;
	};
	return false;;
}



inline jule::Ptr<_1ac95cc23_ContSt> _1ac96d12e_checkContValidScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c3c89_ContSt> _105736_c) {
	if (_1ac96605b_isDeferred(_self_)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_105736_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*_105736_c.alloc)._field_Label != nullptr)) {
		return jule::new_ptr<_1ac95cc23_ContSt>(_1ac95cc23_ContSt{._field_It=0});;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _10677_scope = _self_;;
	_julec_label_1be668d29:;
	{
		
		if (((((*_10677_scope.alloc)._field_it == 0LLU) && ((*_10677_scope.alloc)._field_parent != nullptr)) && ((*_10677_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1be66a9c9:;
			{
				_10677_scope=(*_10677_scope.alloc)._field_parent;
				goto _julec_label_1be668d29;
			}
		}
		else if (((*_10677_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1be66aa62:;
			{
				return jule::new_ptr<_1ac95cc23_ContSt>(_1ac95cc23_ContSt{._field_It=(*_10677_scope.alloc)._field_it});;
			}
		}
		_match_end_1be66a91e:;
	};
	_1ac9abb2e_pushErr((*(_self_))._field_s, (*_105736_c.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac96d3d7_checkCont(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c3c89_ContSt> _108126_c) {
	jule::Ptr<_1ac95cc23_ContSt> _10827_cont = _1ac96d12e_checkContValidScope(_self_, _108126_c);;
	if ((_10827_cont == nullptr)) {
		return;;
	};
	if (((*(_108126_c))._field_Label != nullptr)) {
		jule::Ptr<_1ac961d04_scopeLabel> _10888_label = _1ac958bec_findLabelParent(&((*(*(_108126_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10888_label == nullptr)) {
			_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10888_label))._field_used=true;
		if ((((*((*(_10888_label))._field_node))._field_Index + 1LL) >= (*((*(*(_10888_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _11014_i = ((*(*(_10888_label))._field_node.alloc)._field_Index + 1LL);;
		if ((_11014_i >= (*(*((*(_10888_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11059_st = (*(*((*(_10888_label))._field_node))._field_Scope.alloc)._field_Stmts[_11014_i];;
			{
				auto &_match_expr{ _11059_st };
				
				if (_match_expr.type == &__jule_any_type33) {
					_case_begin_1be67773e:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1ac95b98b_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1be6763a8:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1ac95c88d_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1be676595:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1ac95be42_WhileIter>());
					}
				}
				else {
					_case_begin_1be67652e:;
					{
						_1ac9abb2e_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1be6764b8:;
			};
		};
	};
	if (((*(_10827_cont))._field_It != 0LLU)) {
		if ((!(_1ac96c99c_checkValidContLabel(_self_, (*(_10827_cont))._field_It)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10827_cont, &__jule_any_type38); __jule_collection; }));
}



inline void _1ac96d690_checkLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bace7_LabelSt> _112831_l) {
	if ((_1ac967249_findLabel(_self_.ptr(), &((*(_112831_l))._field_Ident)) != nullptr)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_112831_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_112831_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac95d5a3_Label> _11347_label = jule::new_ptr<_1ac95d5a3_Label>(_1ac95d5a3_Label{._field_Ident=(*_112831_l.alloc)._field_Ident, ._field_Scope=(*_self_.alloc)._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11347_label, &__jule_any_type19); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac961d04_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac961d04_scopeLabel>(_1ac961d04_scopeLabel{._field_token=(*_112831_l.alloc)._field_Token, ._field_node=_11347_label, ._field_used=false}); __jule_collection; }));
}



inline void _1ac96d948_pushGoto(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bb1c1_GotoSt> _114729_gt) {
	jule::Ptr<_1ac95dc13_GotoSt> _11487_st = jule::new_ptr<_1ac95dc13_GotoSt>(_1ac95dc13_GotoSt{._field_Ident=(*((*_114729_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_114729_gt))._field_Label, ._field_Label=jule::Ptr<_1ac95d5a3_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11487_st, &__jule_any_type39); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11487_st; __jule_collection; }));
}



inline void _1ac96dc01_checkPostfix(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt> _115833_a) {
	if (((*(_115833_a))._field_Left.len() > 1LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb8edbc_eval> _11647_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	(*(_11647_eval))._field_target._field_mutable=true;
	jule::Ptr<_1ac9b2a47_Expr> _11677_expr = (*((*(_115833_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1acb8cded_Data> _11687_d = _1acbadbaa_evalExpr(_11647_eval, _11677_expr);;
	if ((_11687_d == nullptr)) {
		return;;
	};
	_1ac959c97_checkAssign(&((*_self_.alloc)._field_s), &(_11687_d), nullptr, (*_115833_a.alloc)._field_Setter);
	if ((_1acbc3a6b_Ptr((*(_11687_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1acbd12a4_Ptr> _11768_ptr = _1acbc3a6b_Ptr((*(_11687_d))._field_Type);;
		if (_1acbd1d21_IsUnsafe(_11768_ptr.ptr())) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1acbc354e_Prim((*(_11687_d))._field_Type.ptr()) == nullptr) || (!(_1ac92bac1_IsNum((*(_1acbc354e_Prim((*(_11687_d))._field_Type)))._field_Kind))))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac95e0dc_Postfix>(_1ac95e0dc_Postfix{._field_Expr=(*(_11687_d))._field_Model, ._field_Op=(*((*_115833_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type40); __jule_collection; }));
}



inline jule::Bool _1ac96e042_isNewAssignIdent(_1ac9631bd_scopeChecker* _self_, jule::Str _119432_ident) {
	if ((_1abc2e468_IsIgnoreIdent(_119432_ident) || (_119432_ident).empty())) {
		return false;;
	};
	return (_1acaaba53_defByIdent((*(_self_))._field_table.ptr(), &(_119432_ident), false) == nullptr);;
}



inline void _1ac96e2ea_removeInteriorMutRisk(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1acb8cded_Data>* _120743_d) {
	jule::Ptr<_1ac9d1e84_StructIns> _12083_s = _1acbc4ac2_Struct((*((*(_120743_d))))._field_Type.ptr());;
	if ((_12083_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _12123_root = _1ac966831_getHardRoot(_self_);;
	if (((*((*(_12123_root))._field_owner))._field_Owner != _12083_s)) {
		return;;
	};
	(*((*(_120743_d))))._field_Mutable=true;
}



inline jule::Bool _1ac96e7a1_checkStructureAssignOp(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _122144_s, jule::Ptr<_1ac9bc1b1_AssignSt>* _122164_a, jule::Ptr<_1acb8cded_Data>* _122188_r) {
	jule::Ptr<_1acaa540e_FnIns> _122411_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122164_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1be698d15:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1be6989b3:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1be698a29:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1be698a90:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1be698b06:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1be698b6c:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1be698bd3:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1be69a487:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1be69a4ed:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1be69a564:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1be698298:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ac9d233b_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1be69893b:;
	};
	if ((_122411_overload == nullptr)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1ac9d233b_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1acaa42a9_ParamIns> _12567_p = (*(_122411_overload))._field_Params[1LL];;
	return _1acb249cd_checkAssignType((*(_self_))._field_s, (*((*(_12567_p))._field_Decl))._field_Reference, &((*_12567_p.alloc)._field_Type), _122188_r, (*((*(_122164_a))))._field_Setter, _1ac966ab7_getOwnerRefers(_self_));;
}



inline void _1ac96ea59_checkSingleAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt>* _126039_a) {
	jule::Ptr<_1acb8cded_Data> _126111_l = nullptr;;
	if ((!(_1abc2e468_IsIgnoreIdent((*((*((*(_126039_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1ac9b2a47_Expr> _12648_expr = (*((*((*(_126039_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_1acb8edbc_eval> _12658_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
		(*(_12658_eval))._field_target._field_mutable=true;
		_126111_l=_1acbadbaa_evalExpr(_12658_eval, _12648_expr);
		if ((_126111_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1acb8edbc_eval> _12737_eval = static_cast<jule::Ptr<_1acb8edbc_eval>>(nullptr);;
	if ((_126111_l != nullptr)) {
		_12737_eval=_1acb24071_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1), (*(_126111_l))._field_Type);
	} else {
		_12737_eval=_1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
	};
	(*(_12737_eval))._field_target._field_mutable=true;
	(*_12737_eval.alloc)._field_unsafety=_1ac9655aa_isUnsafe(_self_);
	jule::Ptr<_1acb8cded_Data> _12817_r = _1acbadbaa_evalExpr(_12737_eval, (*((*(_126039_a))))._field_Right);;
	if ((_12817_r == nullptr)) {
		return;;
	};
	_1ac96e2ea_removeInteriorMutRisk(_self_, &(_12817_r));
	if ((_126111_l == nullptr)) {
		if (_1acbc2262_Void((*(_12817_r))._field_Type.ptr())) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*((*(_126039_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_126039_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12817_r, &__jule_any_type22); __jule_collection; }));
		return;;
	};
	if ((!(_1ac959c97_checkAssign(&((*_self_.alloc)._field_s), &(_126111_l), _12817_r, (*((*(_126039_a))))._field_Setter)))) {
		return;;
	};
	if ((_1acbc5375_Tup((*(_12817_r))._field_Type) != nullptr)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aca94b3a_OperandExprModel> _13087_lm = jule::new_ptr<_1aca94b3a_OperandExprModel>(_1aca94b3a_OperandExprModel{._field_Type=(*(_126111_l))._field_Type, ._field_Model=(*(_126111_l))._field_Model});;
	jule::Ptr<_1aca94b3a_OperandExprModel> _13127_rm = jule::new_ptr<_1aca94b3a_OperandExprModel>(_1aca94b3a_OperandExprModel{._field_Type=(*(_12817_r))._field_Type, ._field_Model=(*(_12817_r))._field_Model});;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac95e593_Assign>(_1ac95e593_Assign{._field_Left=_13087_lm, ._field_Right=_13127_rm, ._field_Op=(*((*(_126039_a))))._field_Setter}), &__jule_any_type41); __jule_collection; }));
	if (((*(*((*(_126039_a))))._field_Setter.alloc)._field_Id == static_cast<jule::U32>(71LLU))) {
		_1acb7b0b7_assignTypeChecker _13198_checker = _1acb7b0b7_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_126111_l))._field_Type, ._field_d=_12817_r, ._field_errorToken=(*((*(_126039_a))))._field_Setter, ._field_refers=_1ac966ab7_getOwnerRefers(_self_)};;
		if (_1acb7c0b8_check(&_13198_checker)) {
			(*(_13127_rm))._field_Model=(*(_12817_r))._field_Model;
			(*(_13087_lm))._field_Model=(*(_126111_l))._field_Model;
		};
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _13327_strct = _1acbc4ac2_Struct((*(_126111_l))._field_Type);;
	if ((_13327_strct != nullptr)) {
		_1ac96e7a1_checkStructureAssignOp(_self_, &(_13327_strct), _126039_a, &(_12817_r));
		return;;
	};
	jule::U32 _13373_id = (*(*((*(_126039_a))))._field_Setter.alloc)._field_Id;;
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_1ac97591c_removeEqFromOp((*(*((*(_126039_a))))._field_Setter.alloc)._field_Id);
	_1acbb10ca_binaryEval _13397_solver = static__1acbb1a37_new(_12737_eval, (*((*(_126039_a))))._field_Setter);;
	({
		jule::Ptr<_1acb8cded_Data> ___jule_assign_arg = _126111_l;
		jule::Ptr<_1acb8cded_Data> _1___jule_assign_arg = _12817_r;
		_13397_solver._field_l = ___jule_assign_arg;
		_13397_solver._field_r = _1___jule_assign_arg;
	});
	_1acbb5c17_evalOp(&_13397_solver);
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_13373_id;
}



inline void _1ac970197_processEndPartOfMultiAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _134549_st, jule::Ptr<_1ac9bc1b1_AssignSt>* _134572_a, jule::Ptr<_1ac9bbb2d_AssignLeft>* _13468_lexpr, jule::Ptr<_1acb8cded_Data>* _134638_l, jule::Ptr<_1acb8cded_Data>* _134653_r, jule::Bool _134663_strict) {
	if (((!((*((*(_13468_lexpr))))._field_Reference)) && _1abc2e468_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident))) {
		if (_1acbc2262_Void((*((*(_134653_r))))._field_Type.ptr())) {
			_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_134572_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1acb8cded_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_134572_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13468_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1be6bb80a:;
				{
					if ((!(_1ac96e042_isNewAssignIdent(_self_, (*((*(_13468_lexpr))))._field_Ident)))) {
						goto _julec_label_1be6c732c;
					};
				}
			}
			else {
				_case_begin_1be6bb794:;
				{
					if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
						_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1be6c732c;
				}
			}
			_match_end_1be6bb72d:;
		};
		if (_1ac967cc7_isDuplicatedIdent(_self_, 0LLU, &((*((*(_13468_lexpr))))._field_Ident))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1ac965a3e_stop(_self_);
			return;;
		};
		if (_1abc2e468_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident)) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1acb3d420_Var> _13788_v = jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=(*_self_.alloc)._field_scope, ._field_Token=(*((*(_13468_lexpr))))._field_Token, ._field_Ident=(*((*(_13468_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13468_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13468_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1acbc85a9_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=(*((*(_134572_a))))._field_Right, ._field_Data=(*(_134653_r))}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
		_1acb33d72_checkVarValue((*(_self_))._field_s, &(_13788_v));
		{ jule::Slice<jule::Ptr<_1acb8cded_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*((*_13788_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13788_v.alloc)._field_Mutable, ._field_Reference=(*_13788_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13788_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13788_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*((*(_134549_st))))._field_Decls; __jule_push_dest.push(_13788_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13788_v; __jule_collection; }));
		return;;
	};
	_julec_label_1be6c732c:;
	if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1ac959c97_checkAssign(&((*_self_.alloc)._field_s), _134638_l, (*(_134653_r)), (*((*(_13468_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14137_reference = false;;
	if (_1acb29263_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_134638_l))))._field_Mutable, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, &((*((*(_13468_lexpr))))._field_Token))) {
		_14137_reference=_134663_strict;
		_1acb249cd_checkAssignType((*(_self_))._field_s, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, (*((*(_13468_lexpr))))._field_Token, _1ac966ab7_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1acb8cded_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push((*(_134638_l))); };
}



inline void _1ac970450_checkMultiAssign(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt>* _142138_a) {
	if ((((*((*((*(_142138_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_142138_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acb8edbc_eval> _14267_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	jule::Ptr<_1acb8cded_Data> _14277_rd = _1acbadbaa_evalExpr(_14267_eval, (*((*(_142138_a))))._field_Right);;
	if ((_14277_rd == nullptr)) {
		return;;
	};
	jule::Bool _14317_strict = false;;
	jule::Slice<jule::Ptr<_1acb8cded_Data>> _14327_right = _1ac95903d_getDatasFromTupleData(&(_14277_rd));;
	if ((_14327_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14327_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1be6d2b62:;
				{
					jule::Ptr<_1aca97995_IndexingExprModel> _14369_iem = (*(_14327_right[0LL]))._field_Model.unsafe_cast_ptr<_1aca97995_IndexingExprModel>();;
					if ((_1acbc50de_Map((*((*(_14369_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14317_strict=true;
						_14327_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*(_1acbc50de_Map((*((*(_14369_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14327_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)}); (*it++) = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1be6d2aa7:;
		};
	};
	{
		
		if (((*((*(_142138_a))))._field_Left.len() > _14327_right.len())) {
			_case_begin_1be6d635d:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142138_a))))._field_Left.len() < _14327_right.len())) {
			_case_begin_1be6d63c4:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1be6d2c0b:;
	};
	(*_14267_eval.alloc)._field_target._field_mutable=true;
	jule::Ptr<_1ac95ea49_MultiAssign> _14597_st = jule::new_ptr<_1ac95ea49_MultiAssign>(_1ac95ea49_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1acb8cded_Data>>(nullptr), ._field_Right=(*(_14277_rd))._field_Model});;
	{
		auto expr = &((*((*(_142138_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6db61b:;
		if (it != expr_end) {
			jule::I32 _14627_i = it - expr->begin();
			{
				jule::Ptr<_1ac9bbb2d_AssignLeft> _14638_lexpr = (*((*(_142138_a))))._field_Left[_14627_i];;
				jule::Ptr<_1acb8cded_Data> _146412_l = nullptr;;
				if ((!(_1abc2e468_IsIgnoreIdent((*(_14638_lexpr))._field_Ident)))) {
					if ((!((*((*(_142138_a))))._field_Declarative))) {
						goto _julec_label_1be6dce36;
					};
					if (((*_14638_lexpr.alloc)._field_Mutable && (*_14638_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1be6e0697;
					};
					{
						auto &_match_expr{ (*((*(_14638_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type42) {
							_case_begin_1be6de146:;
							{
								if (_1ac96e042_isNewAssignIdent(_self_, (*_14638_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1be6e0697;
								};
							}
						}
						_match_end_1be6de0be:;
					};
					_julec_label_1be6dce36:;
					_146412_l=_1acbadbaa_evalExpr(_14267_eval, (*_14638_lexpr.alloc)._field_Expr);
					if ((_146412_l == nullptr)) {
						goto _iter_next_1be6db61b;
					};
					_julec_label_1be6e0697:;
				};
				jule::Ptr<_1acb8cded_Data> _14858_r = _14327_right[_14627_i];;
				_1ac96e2ea_removeInteriorMutRisk(_self_, &(_14858_r));
				_1ac970197_processEndPartOfMultiAssign(_self_, &(_14597_st), _142138_a, &(_14638_lexpr), &(_146412_l), &(_14858_r), _14317_strict);
			}
			_iter_next_1be6db61b:;
			++it;
			_14627_i++;
			goto _iter_begin_1be6db61b;
		}
		_iter_end_1be6db61b:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14597_st, &__jule_any_type44); __jule_collection; }));
}



inline void _1ac970708_checkAssignSt(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bc1b1_AssignSt> _149234_a) {
	{
		
		if (_1abc318cc_IsPostfixOp((*((*(_149234_a))._field_Setter))._field_Id)) {
			_case_begin_1be6e2424:;
			{
				_1ac96dc01_checkPostfix(_self_, _149234_a);
			}
		}
		else if (((*(_149234_a))._field_Left.len() == 1LL)) {
			_case_begin_1be6e20c2:;
			{
				_1ac96ea59_checkSingleAssign(_self_, &(_149234_a));
			}
		}
		else {
			_case_begin_1be6e205b:;
			{
				_1ac970450_checkMultiAssign(_self_, &(_149234_a));
			}
		}
		_match_end_1be6e1e6d:;
	};
}



inline jule::Ptr<_1ac95aa56_Scope> _1ac970b04_checkCaseScope(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960cae_Case>* _150332_c, jule::Ptr<_1ac9bd811_ScopeTree>* _150347_tree) {
	jule::Ptr<_1ac9631bd_scopeChecker> _15047_ssc = _1ac9755cb_newChildChecker(_self_);;
	(*(_15047_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150332_c)));
	return _1ac969191_checkChildSc(_self_, _150347_tree, &(_15047_ssc));;
}



inline jule::Ptr<_1ac960cae_Case> _1ac971165_checkCase(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match> _150930_m, jule::I32 _150941_i, jule::Ptr<_1ac9c57b3_Case> _150953_c, jule::Ptr<_1acb8cded_Data> _150972_expr) {
	jule::Ptr<_1ac960cae_Case> _15107_case = (*(_150930_m))._field_Cases[_150941_i];;
	(*(_15107_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(0LL, (*(_150953_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb8cded_Data>(nullptr); __jule_collection; });
	jule::Bool _15127_constMatched = false;;
	jule::Ptr<_1acb8edbc_eval> _15137_eval = _1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	{
		auto expr = &((*_150953_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e7bcc:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _151415_e = *it;
			{
				jule::Ptr<_1acb8cded_Data> _15158_d = _1acbacd96_evalExprKind(_15137_eval, (*(_151415_e))._field_Kind);;
				if ((_15158_d == nullptr)) {
					goto _iter_next_1be6e7bcc;
				};
				if ((*_150930_m.alloc)._field_TypeMatch) {
					(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
					if ((_1ac976555_countMatchType(&(_150930_m), &((*(_15158_d))._field_Type)) > 1LL)) {
						_1ac9abb2e_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_15158_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_150930_m.alloc)._field_Comptime) {
						_15127_constMatched=(_15127_constMatched || _1acbc15d5_Equal((*(_150972_expr))._field_Type, (*(_15158_d))._field_Type));
					} else {
						if ((_1acbc4088_TypeEnum((*(_150972_expr))._field_Type) != nullptr)) {
							_1acb2543a_checkTypeCompatibility((*(_self_))._field_s, &((*(_150972_expr))._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1acaaca65_Trait> _15347_trt = _1acbc4d58_Trait((*(_150972_expr))._field_Type);;
							if ((_15347_trt != nullptr)) {
								_1acb2543a_checkTypeCompatibility((*(_self_))._field_s, &((*(_150972_expr))._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
							};
						};
					};
					_1acbb96dd_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15158_d))._field_Type), &((*((*_150930_m.alloc)._field_Expr))._field_Type), &((*_151415_e.alloc)._field_Token), _1ac966ab7_getOwnerRefers(_self_));
					goto _iter_next_1be6e7bcc;
				};
				if ((*(_15158_d))._field_Decl) {
					_1ac9abb2e_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1be6e7bcc;
				};
				if ((*_150930_m.alloc)._field_Comptime) {
					if (((!(_1acb8d838_IsConst(_15158_d.ptr()))) && (_1acbc6e15_comptimeTypeInfo((*(_15158_d))._field_Type) == nullptr))) {
						_1ac9abb2e_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1be6e7bcc;
					};
					if ((!(_15127_constMatched))) {
						if (_1acb8d838_IsConst(_15158_d.ptr())) {
							_15127_constMatched=(_1acb8d838_IsConst(_150972_expr.ptr()) && _1aca8e382_Eq((*(_15158_d))._field_Constant.ptr(), (*((*(_150972_expr))._field_Constant))));
						} else {
							jule::Ptr<_1ac93cebc_comptimeTypeInfo> _15607_exprCti = _1acbc6e15_comptimeTypeInfo((*(_150972_expr))._field_Type);;
							_15127_constMatched=((_15607_exprCti != nullptr) && _1acbc15d5_Equal((*(_1acbc6e15_comptimeTypeInfo((*(_15158_d))._field_Type)))._field_base, (*_15607_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
				if ((((!((*_150930_m.alloc)._field_Comptime)) || (_1acbc6e15_comptimeTypeInfo((*(_150972_expr))._field_Type) == nullptr)) || (_1acbc6e15_comptimeTypeInfo((*(_15158_d))._field_Type) == nullptr))) {
					_1acb7b0b7_assignTypeChecker _15709_checker = _1acb7b0b7_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_150972_expr))._field_Type, ._field_d=_15158_d, ._field_errorToken=(*_151415_e.alloc)._field_Token, ._field_refers=_1ac966ab7_getOwnerRefers(_self_)};;
					_1acb7c0b8_check(&_15709_checker);
				};
			}
			_iter_next_1be6e7bcc:;
			++it;
			goto _iter_begin_1be6e7bcc;
		}
		_iter_end_1be6e7bcc:;
	};
	if (((!((*_150930_m.alloc)._field_Comptime)) || _15127_constMatched)) {
		(*_15107_case.alloc)._field_Scope=_1ac970b04_checkCaseScope(_self_, &(_15107_case), &((*_150953_c.alloc)._field_Scope));
	};
	return _15107_case;;
}



inline void _1ac971583_checkCases(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _158632_m, jule::Ptr<_1ac960286_Match> _158656_rm, jule::Ptr<_1acb8cded_Data> _158672_expr) {
	(*(_158656_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac960cae_Case>>::alloc(0LL, (*((*(_158632_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac960cae_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be70bb25:;
		if (it != expr_end) {
			jule::I32 _15887_i = it - expr->begin();
			{
				jule::Ptr<_1ac960cae_Case> _15898_case = jule::new_ptr<_1ac960cae_Case>(_1ac960cae_Case{._field_Owner=_158656_rm, ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1acb8cded_Data>>(nullptr), ._field_Next=jule::Ptr<_1ac960cae_Case>(nullptr)});;
				if ((_15887_i > 0LL)) {
					(*((*_158656_rm.alloc)._field_Cases[(_15887_i - 1LL)]))._field_Next=_15898_case;
				};
				(*_158656_rm.alloc)._field_Cases=jule::append((*_158656_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac960cae_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15898_case; __jule_collection; }));
			}
			_iter_next_1be70bb25:;
			++it;
			_15887_i++;
			goto _iter_begin_1be70bb25;
		}
		_iter_end_1be70bb25:;
	};
	if ((((*_158656_rm.alloc)._field_Default != nullptr) && ((*((*(_158632_m))))._field_Cases.len() > 0LL))) {
		(*((*_158656_rm.alloc)._field_Cases[((*_158656_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158656_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be710167:;
		if (it != expr_end) {
			jule::I32 _16028_i = it - expr->begin();
			jule::Ptr<_1ac9c57b3_Case> _160215_c = *it;
			{
				_1ac971165_checkCase(_self_, _158656_rm, _16028_i, _160215_c, _158672_expr);
			}
			_iter_next_1be710167:;
			++it;
			_16028_i++;
			goto _iter_begin_1be710167;
		}
		_iter_end_1be710167:;
	};
}



inline jule::Ptr<_1ac960cae_Case> _1ac97197e_checkDefault(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match> _160733_m, jule::Ptr<_1ac9c4619_Else> _160748_d) {
	jule::Ptr<_1ac960cae_Case> _16087_def = jule::new_ptr<_1ac960cae_Case>(_1ac960cae_Case{._field_Owner=_160733_m, ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1acb8cded_Data>>(nullptr), ._field_Next=jule::Ptr<_1ac960cae_Case>(nullptr)});;
	(*(_16087_def))._field_Scope=_1ac970b04_checkCaseScope(_self_, &(_16087_def), &((*(_160748_d))._field_Scope));
	return _16087_def;;
}



inline void _1ac971ce2_checkComptimePanic(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1abc2ba81_Token> _161539_callToken, jule::Ptr<_1ac95aa56_Scope>* _161566_s) {
	if (((*((*(_161566_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16193_stmt = (*((*(_161566_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16193_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1be713863:;
			{
				jule::Ptr<_1acb8cded_Data> _16224_d = _16193_stmt.unsafe_cast_ptr<_1acb8cded_Data>();;
				{
					auto &_match_expr{ (*(_16224_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1be714842:;
						{
							jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _16259_m = (*(_16224_d))._field_Model.unsafe_cast_ptr<_1aca9b5c0_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16259_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1be715a0d:;
									{
										jule::Ptr<_1aca3208e_Const> _16286_c = (*(_16259_m))._field_Expr.unsafe_cast_ptr<_1aca3208e_Const>();;
										if ((!(_1aca8d051_IsStr(_16286_c.ptr())))) {
											goto _match_end_1be715986;
										};
										if ((_161539_callToken == nullptr)) {
											jule::Ptr<_1ac9631bd_scopeChecker> _163311_root = _1ac966831_getHardRoot(_self_);;
											if (((*(_163311_root))._field_calledFrom == nullptr)) {
												_161539_callToken=(*(_16259_m))._field_Token;
											} else {
												_161539_callToken=(*(_163311_root))._field_calledFrom;
											};
										};
										_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), _161539_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aca8a955_ReadStr(_16286_c), &__jule_any_type5); __jule_collection; }));
										_1ac965a3e_stop(_self_);
									}
								}
								_match_end_1be715986:;
							};
						}
					}
					_match_end_1be7147cb:;
				};
			}
		}
		_match_end_1be712da1:;
	};
}



inline void _1ac972155_processConstMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac960286_Match>* _164739_tm, jule::Ptr<_1ac9c60cc_MatchCase>* _164756_m) {
	{
		auto expr = &((*((*(_164739_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be715e92:;
		if (it != expr_end) {
			jule::I32 _16488_i = it - expr->begin();
			jule::Ptr<_1ac960cae_Case> _164815_c = *it;
			{
				if (((*(_164815_c))._field_Scope != nullptr)) {
					jule::Ptr<_1abc2ba81_Token> _165013_token = nullptr;;
					if (((!((*((*(_164739_tm))))._field_TypeMatch)) && ((*(*(_164815_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165013_token=(*((*((*((*(_164756_m))))._field_Cases[_16488_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1ac971ce2_checkComptimePanic(_self_, _165013_token, &((*_164815_c.alloc)._field_Scope));
					(*((*(_164739_tm))))._field_Default=_164815_c;
					(*((*(_164739_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1be715e92:;
			++it;
			_16488_i++;
			goto _iter_begin_1be715e92;
		}
		_iter_end_1be715e92:;
	};
	if (((*((*(_164756_m))))._field_Default != nullptr)) {
		(*((*(_164739_tm))))._field_Cases=nullptr;
		(*((*(_164739_tm))))._field_Default=_1ac97197e_checkDefault(_self_, (*(_164739_tm)), (*((*(_164756_m))))._field_Default);
		if (((*((*(_164739_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1abc2ba81_Token> _166413_token = nullptr;;
			if ((!((*((*(_164739_tm))))._field_TypeMatch))) {
				_166413_token=(*((*((*((*(_164756_m))))._field_Default))._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1ac971ce2_checkComptimePanic(_self_, _166413_token, &((*(*((*(_164739_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_164739_tm))))._field_Cases=nullptr;
	};
}



inline void _1ac97240d_checkTypeMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _167636_m) {
	jule::Ptr<_1acb8cded_Data> _16777_d = _1acbad1d7_eval1(_1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), (*((*(_167636_m))))._field_Expr);;
	if ((_16777_d == nullptr)) {
		return;;
	};
	if ((*((*(_167636_m))))._field_Comptime) {
		jule::Ptr<_1ac93cebc_comptimeTypeInfo> _16838_cti = _1acbc6e15_comptimeTypeInfo((*(_16777_d))._field_Type.ptr());;
		if ((_16838_cti == nullptr)) {
			if ((!((*(_16777_d))._field_Decl))) {
				_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*(_16777_d))._field_Type=(*(_16838_cti))._field_base;
		};
	} else if (((*(_16777_d))._field_Decl || (!(((((_1acbc354e_Prim((*(_16777_d))._field_Type.ptr()) != nullptr) && _1acbcc712_IsAny(_1acbc354e_Prim((*(_16777_d))._field_Type).ptr())) || (_1acbc4d58_Trait((*(_16777_d))._field_Type) != nullptr)) || (_1acbc4088_TypeEnum((*(_16777_d))._field_Type) != nullptr)))))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac960286_Match> _16977_tm = jule::new_ptr<_1ac960286_Match>(_1ac960286_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16777_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167636_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ac960cae_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac960cae_Case>(nullptr)});;
	if (((!((*(_16977_tm))._field_Comptime)) && ((*((*(_167636_m))))._field_Default != nullptr))) {
		(*_16977_tm.alloc)._field_Default=_1ac97197e_checkDefault(_self_, _16977_tm, (*((*(_167636_m))))._field_Default);
	};
	_1ac971583_checkCases(_self_, _167636_m, _16977_tm, _16777_d);
	if ((*_16977_tm.alloc)._field_Comptime) {
		_1ac972155_processConstMatch(_self_, &(_16977_tm), _167636_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16977_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _1ac9726b6_checkCommonMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase>* _171938_m) {
	jule::Ptr<_1acb8cded_Data> _172011_d = nullptr;;
	if (((*((*(_171938_m))))._field_Expr == nullptr)) {
		_172011_d=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca892a0_NewBool(true)});
		(*(_172011_d))._field_Model=jule::Any((*_172011_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_172011_d=_1acbad869_evalExpr1(_1acb243b2_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), (*((*(_171938_m))))._field_Expr);
		if ((_172011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_171938_m))))._field_Comptime) {
		if ((!(_1ac975e17_canComptimeMatch(&(_172011_d))))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1acbc560b_comptime((*(_172011_d))._field_Type.ptr())) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac960286_Match> _17467_mc = jule::new_ptr<_1ac960286_Match>(_1ac960286_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172011_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_171938_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1ac960cae_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac960cae_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17467_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_17467_mc))._field_Comptime)) && ((*((*(_171938_m))))._field_Default != nullptr))) {
		(*_17467_mc.alloc)._field_Default=_1ac97197e_checkDefault(_self_, _17467_mc, (*((*(_171938_m))))._field_Default);
	};
	_1ac971583_checkCases(_self_, _171938_m, _17467_mc, _172011_d);
	if ((*_17467_mc.alloc)._field_Comptime) {
		_1ac972155_processConstMatch(_self_, &(_17467_mc), _171938_m);
	};
}



inline void _1ac97296e_checkMatch(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c60cc_MatchCase> _177031_m) {
	if ((*(_177031_m))._field_TypeMatch) {
		_1ac97240d_checkTypeMatch(_self_, &(_177031_m));
		return;;
	};
	_1ac9726b6_checkCommonMatch(_self_, &(_177031_m));
}



inline void _1ac972c27_checkFall(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bb4bd_FallSt> _177826_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1ac96605b_isDeferred(_self_))) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177826_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1ac960cae_Case* _17867_case = ((_1ac960cae_Case*)((*_self_.alloc)._field_cse));;
	if ((*((*(_17867_case))._field_Owner))._field_Comptime) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_177826_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17867_case))._field_Next == nullptr)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_177826_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1ac9614a7_FallSt>(_1ac9614a7_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17867_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_1ac95d0ec_BreakSt> _1ac973068_checkBreakWithLabel(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _180136_b) {
	jule::Ptr<_1ac95d0ec_BreakSt> _18027_brk = _1ac9733a9_checkPlainBreak(_self_, _180136_b);;
	if ((_18027_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18027_brk))._field_It=0LLU;
	(*(_18027_brk))._field_Mtch=0LLU;
	jule::Ptr<_1ac961d04_scopeLabel> _18127_label = _1ac958bec_findLabelParent(&((*((*(_180136_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18127_label == nullptr)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_18127_label))._field_used=true;
	if ((((*((*(_18127_label))._field_node))._field_Index + 1LL) >= (*((*(*(_18127_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _18253_i = ((*(*(_18127_label))._field_node.alloc)._field_Index + 1LL);;
	if ((_18253_i >= (*(*((*(_18127_label))._field_node))._field_Scope.alloc)._field_Stmts.len())) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18298_st = (*(*((*(_18127_label))._field_node))._field_Scope.alloc)._field_Stmts[_18253_i];;
		{
			auto &_match_expr{ _18298_st };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1be3a5c86:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1ac95b98b_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1be3a4900:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1ac95c88d_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1be3a4adc:;
				{
					(*(_18027_brk))._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1ac95be42_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1be3a4b53:;
				{
					(*(_18027_brk))._field_Mtch=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1ac960286_Match>());
				}
			}
			else {
				_case_begin_1be3a4a76:;
				{
					_1ac9abb2e_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1be3a4a10:;
		};
	};
	if (((*(_18027_brk))._field_It != 0LLU)) {
		if ((!(_1ac96ccdd_checkValidBreakLabel(_self_, (*(_18027_brk))._field_It)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*(_18027_brk))._field_Mtch != 0LLU)) {
		if ((!(_1ac96ccdd_checkValidBreakLabel(_self_, (*(_18027_brk))._field_Mtch)))) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _18027_brk;;
}



inline jule::Ptr<_1ac95d0ec_BreakSt> _1ac9733a9_checkPlainBreak(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _185932_b) {
	if (_1ac96605b_isDeferred(_self_)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185932_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _18657_scope = _self_;;
	_julec_label_1be3ac0cd:;
	{
		
		if ((((((*_18657_scope.alloc)._field_it == 0LLU) && ((*_18657_scope.alloc)._field_cse == 0LLU)) && ((*_18657_scope.alloc)._field_parent != nullptr)) && ((*_18657_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1be3ad596:;
			{
				_18657_scope=(*_18657_scope.alloc)._field_parent;
				goto _julec_label_1be3ac0cd;
			}
		}
		else if (((*_18657_scope.alloc)._field_it != 0LLU)) {
			_case_begin_1be3ad62e:;
			{
				return jule::new_ptr<_1ac95d0ec_BreakSt>(_1ac95d0ec_BreakSt{._field_It=(*_18657_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18657_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1be3ad695:;
			{
				return jule::new_ptr<_1ac95d0ec_BreakSt>(_1ac95d0ec_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1ac960cae_Case*)((*_18657_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1be3ad497:;
	};
	_1ac9abb2e_pushErr((*(_self_))._field_s, (*_185932_b.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1ac973662_checkBreak(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c38b0_BreakSt> _188127_b) {
	if (((*(_188127_b))._field_Label != nullptr)) {
		jule::Ptr<_1ac95d0ec_BreakSt> _18838_brk = _1ac973068_checkBreakWithLabel(_self_, _188127_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18838_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac95d0ec_BreakSt> _18887_brk = _1ac9733a9_checkPlainBreak(_self_, _188127_b);;
	(*(*(_self_))._field_scope.alloc)._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18887_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _1ac97391a_checkRet(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9c1a34_RetSt> _189229_r) {
	if (_1ac96605b_isDeferred(_self_)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189229_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1ac96184d_RetSt> _18977_rt = jule::new_ptr<_1ac96184d_RetSt>(_1ac96184d_RetSt{._field_Func=(*(_1ac96659a_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18977_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_1acb89d51_retTypeChecker> _19027_rtc = jule::new_ptr<_1acb89d51_retTypeChecker>(_1acb89d51_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18977_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>(nullptr), ._field_errorToken=(*_189229_r.alloc)._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _19083_ok = _1acb8ad41_check(_19027_rtc.ptr(), &((*_189229_r.alloc)._field_Expr));;
	if ((!(_19083_ok))) {
		return;;
	};
	if (((*_189229_r.alloc)._field_Expr != nullptr)) {
		(*_18977_rt.alloc)._field_Expr=(*_19027_rtc.alloc)._field_model;
	};
}



inline void _1ac973bc3_checkUseExpr(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9b341b_UseExpr> _191829_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191829_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1ac96605b_isDeferred(_self_)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_191829_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*_self_.alloc)._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*_191829_ue.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1ac973e7b_checkNode(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Any* _193431_node) {
	{
		auto &_match_expr{ (*(_193431_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1be3c3d92:;
			{
				_1ac96978a_checkAnonScope(_self_, (*(_193431_node)).cast_ptr<_1ac9bd811_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be3c4205:;
			{
				_1ac968080_checkVarDecl(_self_, (*(_193431_node)).cast_ptr<_1ac9c165a_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1be3c426b:;
			{
				_1ac9685e1_checkTypeAliasDecl(_self_, (*(_193431_node)).cast_ptr<_1ac9c530c_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1be3c42d2:;
			{
				_1ac969da6_checkExpr(_self_, (*(_193431_node)).cast_ptr<_1ac9b2a47_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1be3c4634:;
			{
				_1ac96a7e1_checkConditional(_self_, (*(_193431_node)).cast_ptr<_1ac9c4ac0_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1be3c469a:;
			{
				_1ac96c65b_checkIter(_self_, (*(_193431_node)).cast_ptr<_1ac9c22a4_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1be3c4711:;
			{
				_1ac96d3d7_checkCont(_self_, (*(_193431_node)).cast_ptr<_1ac9c3c89_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1be3c4777:;
			{
				_1ac96d690_checkLabel(_self_, (*(_193431_node)).cast_ptr<_1ac9bace7_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1be3c47dd:;
			{
				_1ac96d948_pushGoto(_self_, (*(_193431_node)).cast_ptr<_1ac9bb1c1_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1be3c4854:;
			{
				_1ac970708_checkAssignSt(_self_, (*(_193431_node)).cast_ptr<_1ac9bc1b1_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1be3c48ba:;
			{
				_1ac97296e_checkMatch(_self_, (*(_193431_node)).cast_ptr<_1ac9c60cc_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1be3c4931:;
			{
				_1ac972c27_checkFall(_self_, (*(_193431_node)).cast_ptr<_1ac9bb4bd_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1be3c49a8:;
			{
				_1ac973662_checkBreak(_self_, (*(_193431_node)).cast_ptr<_1ac9c38b0_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1be3c4a30:;
			{
				_1ac97391a_checkRet(_self_, (*(_193431_node)).cast_ptr<_1ac9c1a34_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1be3c4aa7:;
			{
				_1ac973bc3_checkUseExpr(_self_, (*(_193431_node)).cast_ptr<_1ac9b341b_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1be3c406d:;
			{
				jule::println(_1bbdd1440_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1be3c4007:;
	};
}



inline void _1ac974179_checkResult(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	_1ac9bd1a1_Stmt _19727_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19727_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1be4013b9:;
			{
				jule::Ptr<_1ac9b341b_UseExpr> _19758_ue = _19727_stmt._field_Data.unsafe_cast_ptr<_1ac9b341b_UseExpr>();;
				jule::Ptr<_1acb8cded_Data> _19768_d = _1acbadbaa_evalExpr(_1acb243b2_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), (*(_19758_ue))._field_Expr);;
				if ((_19768_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19768_d, &__jule_any_type22); __jule_collection; }));
				jule::Ptr<_1acb89d51_retTypeChecker> _19818_rtc = jule::new_ptr<_1acb89d51_retTypeChecker>(_1acb89d51_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_types=_1acaa6641_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>(nullptr), ._field_errorToken=(*((*_19758_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_1acb8ad41_check(_19818_rtc.ptr(), &((*_19758_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1be4032de:;
			{
				jule::Ptr<_1ac9b2a47_Expr> _19898_expr = _19727_stmt._field_Data.unsafe_cast_ptr<_1ac9b2a47_Expr>();;
				jule::Ptr<_1acb8cded_Data> _19908_d = _1acbadbaa_evalExpr(_1acb243b2_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)), _19898_expr);;
				if ((_19908_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19908_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1be4094d2:;
						{
							jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _19969_m = (*(_19908_d))._field_Model.unsafe_cast_ptr<_1aca9d1c6_BuiltinErrorCallExprModel>();;
							_1ac969aed_processErrorCall(_self_, &(_19969_m), (*(_19898_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19908_d, &__jule_any_type22); __jule_collection; }));
						}
					}
					else {
						_case_begin_1be4096ad:;
						{
							return;;
						}
					}
					_match_end_1be409647:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1be40294d:;
			{
				_1ac973e7b_checkNode(_self_, &(_19727_stmt._field_Data));
			}
		}
		else {
			_case_begin_1be4028d7:;
			{
				_1ac973e7b_checkNode(_self_, &(_19727_stmt._field_Data));
				return;;
			}
		}
		_match_end_1be402871:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1ac974377_checkTree(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _20187_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20187_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20187_n); ((*_self_.alloc)._field_i)++) {
		{
			_1ac9bd1a1_Stmt _20268_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1ac973e7b_checkNode(_self_, &(_20268_stmt._field_Data));
			if (_1ac965cc5_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1be40d34e:;
	}
	_iter_end_1be40d34e:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1ac974179_checkResult(_self_);
	};
}



inline void _1ac9746da_checkGoto(_1ac9631bd_scopeChecker* _self_, jule::Ptr<_1ac95dc13_GotoSt>* _203730_gt, jule::Ptr<_1ac961d04_scopeLabel>* _203748_label) {
	jule::I32 _20387_n = 0LL;;
	if (((*((*(_203730_gt))))._field_Scope == (*((*((*(_203748_label))))._field_node))._field_Scope)) {
		if (((*((*(_203730_gt))))._field_Index > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*((*(_203730_gt))))._field_Index;
	} else if (((*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203748_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1ac95aa56_Scope> _20518_gtsc = (*((*(_203730_gt))))._field_Scope;;
		while ((((*_20518_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203748_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20518_gtsc=(*_20518_gtsc.alloc)._field_Parent;
			}
		_iter_next_1be4137a5:;
		}
		_iter_end_1be4137a5:;;
		if (((*_20518_gtsc.alloc)._field_StmtIndex > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*_20518_gtsc.alloc)._field_StmtIndex;
	} else {
		_20387_n=0LL;
	};
	jule::Ptr<_1ac95aa56_Scope> _20737_s = (*((*((*(_203748_label))))._field_node))._field_Scope;;
	jule::I32 _20747_i = ((*(*((*(_203748_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20747_i >= _20387_n); (_20747_i)--) {
				{
					jule::Any _20779_stmt = (*(_20737_s))._field_Stmts[_20747_i];;
					if (_1ac9761d1_stmtIsDef(&(_20779_stmt))) {
						_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_203730_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203730_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1be4172ae:;
			}
			_iter_end_1be4172ae:;;
			if (((*_20737_s.alloc)._field_ChildIndex > (*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex)) {
				_20737_s=(*_20737_s.alloc)._field_Parent;
				_20747_i=((*_20737_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1be416e3a;
			};
			goto _iter_end_1be416e3a;
		}
	_iter_next_1be416e3a:;
	}
	_iter_end_1be416e3a:;;
}



inline void _1ac9748d8_checkGotos(_1ac9631bd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be419e71:;
		if (it != expr_end) {
			jule::Ptr<_1ac95dc13_GotoSt> _209515_gt = *it;
			{
				jule::Ptr<_1ac961d04_scopeLabel> _20968_label = _1ac9678cb_findLabelAll(_self_, &((*(_209515_gt))._field_Ident));;
				if ((_20968_label == nullptr)) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_209515_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1be419e71;
				};
				(*_209515_gt.alloc)._field_Label=(*(_20968_label))._field_node;
				(*(_20968_label))._field_used=true;
				_1ac9746da_checkGoto(_self_, &(_209515_gt), &(_20968_label));
			}
			_iter_next_1be419e71:;
			++it;
			goto _iter_begin_1be419e71;
		}
		_iter_end_1be419e71:;
	};
}



inline void _1ac974ad6_checkLabels(_1ac9631bd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be41ca89:;
		if (it != expr_end) {
			jule::Ptr<_1ac961d04_scopeLabel> _210810_l = *it;
			{
				if ((!((*(_210810_l))._field_used))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_210810_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_210810_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be41ca89:;
			++it;
			goto _iter_begin_1be41ca89;
		}
		_iter_end_1be41ca89:;
	};
}



inline void _1ac974cd4_checkVars(_1ac9631bd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be41e816:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _211610_v = *it;
			{
				if (((((!((*(_211610_v))._field_Used)) && (!((*_211610_v.alloc)._field_Constant))) && (!(_1abc2e468_IsIgnoreIdent((*_211610_v.alloc)._field_Ident)))) && (!(_1abc2e732_IsAnonIdent((*_211610_v.alloc)._field_Ident))))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_211610_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211610_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be41e816:;
			++it;
			goto _iter_begin_1be41e816;
		}
		_iter_end_1be41e816:;
	};
}



inline void _1ac974ed2_checkAliases(_1ac9631bd_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be422121:;
		if (it != expr_end) {
			jule::Ptr<_1acbc00a6_TypeAlias> _212410_a = *it;
			{
				if ((((!((*(_212410_a))._field_Used)) && (!(_1abc2e468_IsIgnoreIdent((*_212410_a.alloc)._field_Ident)))) && (!(_1abc2e732_IsAnonIdent((*_212410_a.alloc)._field_Ident))))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_212410_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212410_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be422121:;
			++it;
			goto _iter_begin_1be422121;
		}
		_iter_end_1be422121:;
	};
}



inline void _1ac975345_check(jule::Ptr<_1ac9631bd_scopeChecker> _self_, jule::Ptr<_1ac9bd811_ScopeTree>* _213227_tree, jule::Ptr<_1ac95aa56_Scope>* _213255_s) {
	(*((*(_213255_s))))._field_Deferred=(*((*(_213227_tree))))._field_Deferred;
	(*((*(_213255_s))))._field_Unsafety=(*((*(_213227_tree))))._field_Unsafety;
	jule::I32 _21363_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213227_tree));
	(*_self_.alloc)._field_scope=(*(_213255_s));
	_1ac974377_checkTree(_self_);
	if ((_21363_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1ac974cd4_checkVars(_self_);
		_1ac974ed2_checkAliases(_self_);
		if (_1ac965841_isRoot(_self_)) {
			_1ac9748d8_checkGotos(_self_);
			_1ac974ad6_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac9755cb_newChildChecker(jule::Ptr<_1ac9631bd_scopeChecker> _self_) {
	jule::Ptr<_1ac9631bd_scopeChecker> _21567_base = _1ac9584b0_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21567_base))._field_parent=_self_;
	(*_21567_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21567_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21567_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21567_base;;
}








inline jule::Bool _1ac97704a_directiveChecker_eq(_1ac97704a_directiveChecker *_self_, _1ac97704a_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1ac97749b_checkCdef(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be42b37d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1acaa2351_Fn>()))._field_Binded) {
					goto _match_end_1be42a1d4;
				};
				goto _case_begin_1be42a24a;
			}
		}
		else {
			_case_begin_1be42a24a:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be42a1d4:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac977754_checkTypedef(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be42e5a1:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Binded) {
					goto _match_end_1be42d407;
				};
				goto _case_begin_1be42d46d;
			}
		}
		else {
			_case_begin_1be42d46d:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be42d407:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac977a0c_checkNamespace(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be4327c4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Binded))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be4313e9:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1acaa2351_Fn>()))._field_Binded))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be431707:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Binded))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be431691:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be43162a:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1abc2ba81_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_733_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*_733_arg.alloc)._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be43cd62:;
			{
				if ((_1acbb7620_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1abc419b9_Directive> _919_typedef = jule::new_ptr<_1abc419b9_Directive>(_1abc419b9_Directive{._field_Tag=(*((*(_4835_d))))._field_Tag, ._field_Args=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr)});;
					(*((*(_919_typedef))._field_Tag))._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc419b9_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1be43cceb:;
	};
}



inline void _1ac977cb5_checkDeprecated(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be44156e:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Binded) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be44021b:;
			{
				jule::Ptr<_1acaa2351_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1acaa2351_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1acaa2d24_IsEntryPoint(_1078_f)) || _1acaa30aa_IsInit(_1078_f))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be4404a2:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Binded) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be44043b:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be4403c5:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1abc2ba81_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1263_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*_1263_arg.alloc)._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ac97806d_checkTest(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be44d23a:;
			{
				jule::Ptr<_1acaa2351_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1acaa2351_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1acaa30aa_IsInit(_1444_f)))) && (!(_1acaa2d24_IsEntryPoint(_1444_f))))) {
					goto _match_end_1be44c091;
				};
				if (_1acaa2a8d_IsMethod(_1444_f)) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1be44c091;
				};
				goto _case_begin_1be44c107;
			}
		}
		else {
			_case_begin_1be44c107:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be44c091:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ac978326_checkExport(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1be452e87:;
			{
				jule::Ptr<_1acaa2351_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1acaa2351_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1acaa30aa_IsInit(_1654_f)) || _1acaa2d24_IsEntryPoint(_1654_f)) || _1acaa2a8d_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be451aac:;
			{
				jule::Ptr<_1acb3d420_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1acb3d420_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1be451d54:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1be451cdd:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1abc2ba81_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_1873_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac9abb2e_pushErr((*(_self_))._field_s, _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*_1873_arg.alloc)._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1ac9785ce_checkDirective(_1ac97704a_directiveChecker* _self_, jule::Ptr<_1abc419b9_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1be460093:;
			{
				_1ac97749b_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1be45de3d:;
			{
				_1ac977754_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1be45dea4:;
			{
				_1ac977a0c_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1be45e01a:;
			{
				_1ac977cb5_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1be45e081:;
			{
				_1ac97806d_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1be45e0e7:;
			{
				_1ac978326_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1be45e15d:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1be459444:;
			{
				_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1be45dd61:;
	};
}



inline void _1ac9787cc_check(_1ac97704a_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be462d65:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _22315_d = *it;
			{
				_1ac9785ce_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1be462d65:;
			++it;
			goto _iter_begin_1be462d65;
		}
		_iter_end_1be462d65:;
	};
}







inline jule::Ptr<_1ac979855_ReferenceStack> static__1ac979bb8_new(void) {
	return jule::new_ptr<_1ac979855_ReferenceStack>(_1ac979855_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1ac97a0b4_Len(_1ac979855_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1ac97a405_At(_1ac979855_ReferenceStack* _self_, jule::I32 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _1ac97a6ad_Push(_1ac979855_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _1becd564e_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acaa540e_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1becd69b3:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1becd69b3:;
			++it;
			goto _iter_begin_1becd69b3;
		}
		_iter_end_1becd69b3:;
	};
	return false;;
}

inline jule::Bool _1bed01c20_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acb3d420_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bed03040:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1bed03040:;
			++it;
			goto _iter_begin_1bed03040;
		}
		_iter_end_1bed03040:;
	};
	return false;;
}

inline jule::Bool _1be21a2c1_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1ac9d1e84_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb0ae9c:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1beb0ae9c:;
			++it;
			goto _iter_begin_1beb0ae9c;
		}
		_iter_end_1beb0ae9c:;
	};
	return false;;
}

inline jule::Bool _1be984ead_Exist(_1ac979855_ReferenceStack* _self_, jule::Ptr<_1acaaca65_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9862bc:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1be9862bc:;
			++it;
			goto _iter_begin_1be9862bc;
		}
		_iter_end_1be9862bc:;
	};
	return false;;
}








inline jule::Bool _1ac97ada6_Pass_eq(_1ac97ada6_Pass *_self_, _1ac97ada6_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1ac981362_pushErr(_1ac98085b_symBuilder* _self_, jule::Ptr<_1abc2ba81_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args) {
	{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac9a6b18_compilerErr(_30724_token, true, _30746_fmt, _30766_args)); };
}



inline void _1ac981ae3_pushSuggestion(_1ac98085b_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args) {
	{
		_1ac9a7c3a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31630_fmt, _31650_args);
	};
}



inline jule::Bool _1ac981ede_checkCppUseDeclPath(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _32036_decl, jule::Str* _32058_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3213_ext = _1a8e5257e_Ext((*(_32058_path)));;
	if (((!(_1a6a2222d_IsValidHeaderExt(_3213_ext))) && (!(_1a6a224e7_IsValidCppExt(_3213_ext))))) {
		_1ac981362_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3213_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a6b32eba_Stat _3283_info = ({
		auto except = static__1a8e596eb_Of((*(_32058_path)));
		(except.ok()) ? (except.result) : ({{
			_1ac981362_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1a6b333c7_IsDir(&_3283_info)) {
		_1ac981362_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_32036_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac9822ec_buildCppHeaderImport(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _34041_decl) {
	jule::Str _3417_path = (*((*((*(_34041_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1a6a21e53_IsStdHeaderPath(_3417_path)))) {
		_3417_path=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1abc332b3_Dir((*((*((*(_34041_decl))))._field_Token))._field_File.ptr()); (*it++) = _3417_path; __jule_collection; }));
		jule::Bool _3458_ok = _1ac981ede_checkCppUseDeclPath(_self_, _34041_decl, &(_3417_path));;
		if ((!(_3458_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a8e52848_Abs(_3417_path);
			_3417_path = __jule_assign_result.__jule_result_arg0;
			_3458_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3458_ok))) {
			_1ac981362_pushErr(_self_, &((*((*(_34041_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1ac98b8cd_ImportInfo>(_1ac98b8cd_ImportInfo{._field_Decl=(*(_34041_decl)), ._field_Path=_3417_path, ._field_LinkPath=(*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1ac9826e8_checkAbsPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1ac9c6660_UseDecl>* _37053_decl) {
	jule::Str _3713_modPath = ((_1ac9888ca_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac987940_GetModPath((*(_self_))._field_importer.data);;
	if ((_3713_modPath.len() == 0LL)) {
		_1ac981362_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1ac981ae3_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37033_filepath=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3713_modPath; (*it++) = _37033_filepath; __jule_collection; }));
	jule::Bool _37913_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a8e52848_Abs(_37033_filepath);
		_37033_filepath = __jule_assign_result.__jule_result_arg0;
		_37913_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37913_ok))) {
		_1ac981362_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a6b32eba_Stat _3863_info = ({
		auto except = static__1a8e596eb_Of(_37033_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ac981362_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_37053_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a6b333c7_IsDir(&_3863_info)))) {
		_1ac981362_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_37053_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37033_filepath;;
}



inline jule::Str _1ac982ae4_checkStdAbsPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1ac9c6660_UseDecl>* _39956_decl) {
	(_39936_filepath).mut_slice(4LL);;
	_39936_filepath=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a8e59d8e_PathStdlib; (*it++) = _39936_filepath; __jule_collection; }));
	jule::Bool _40213_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a8e52848_Abs(_39936_filepath);
		_39936_filepath = __jule_assign_result.__jule_result_arg0;
		_40213_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40213_ok))) {
		_1ac981362_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a6b32eba_Stat _4093_info = ({
		auto except = static__1a8e596eb_Of(_39936_filepath);
		(except.ok()) ? (except.result) : ({{
			_1ac981362_pushErr(_self_, &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39956_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a6b333c7_IsDir(&_4093_info)))) {
		_1ac981362_pushErr(_self_, &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_39956_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39936_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1ac982e35_checkImpPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _42234_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4233_path = (*((*((*(_42234_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1a8e46364_HasSuffix(_4233_path, jule::Str::lit("/", 1))) {
		_1ac981362_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4283_parts = _1a8e4a4ab_SplitAll(_4233_path, jule::Str::lit("/", 1));;
	if ((_4283_parts.len() == 0LL)) {
		_1ac981362_pushErr(_self_, &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4283_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4283_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be76b35a:;
		if (it != expr_end) {
			jule::Str *_43410_part = it;
			{
				if ((((*(_43410_part))).empty() || _1abc2e468_IsIgnoreIdent((*(_43410_part))))) {
					_1ac981362_pushErr(_self_, &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43410_part)); __jule_collection; }));
			}
			_iter_next_1be76b35a:;
			++it;
			goto _iter_begin_1be76b35a;
		}
		_iter_end_1be76b35a:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1ac982ae4_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1ac9826e8_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	};
	return __jule_func_result;;
}



inline void _1ac9831dd_assignAlias(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _45233_imp) {
	jule::I32 _4537_i = _1a8e4740e_FindLast((*((*(_45233_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4537_i)++;
	jule::Str _4553_path = (*((*(_45233_imp))))._field_LinkPath.slice(_4537_i);;
	(*((*(_45233_imp))))._field_Alias=_4553_path;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98352e_buildImport(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _45933_decl) {
	if ((*((*(_45933_decl))))._field_Binded) {
		return _1ac9822ec_buildCppHeaderImport(_self_.ptr(), _45933_decl);;
	};
	jule::Bool _4633_std;
	jule::Str _4638_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1ac982e35_checkImpPath(_self_, _45933_decl);
		_4633_std = __jule_assign_result.__jule_result_arg0;
		_4638_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4638_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1ac98b8cd_ImportInfo> _4687_imp = jule::new_ptr<_1ac98b8cd_ImportInfo>(_1ac98b8cd_ImportInfo{._field_Decl=(*(_45933_decl)), ._field_Path=_4638_filepath, ._field_LinkPath=(*((*((*(_45933_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45933_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4633_std, ._field_Package=jule::new_ptr<_1ac98e150_Package>(_1ac98e150_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45933_decl))))._field_Alias != nullptr)) {
		(*(_4687_imp))._field_Alias=(*(*((*(_45933_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1ac986ab5_isImplicitImport(_4687_imp)))) {
		_1ac9831dd_assignAlias(_self_, &(_4687_imp));
	};
	return _4687_imp;;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac983870_findUseDecl(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _48628_pkg) {
	return _1acaa8b71_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>>((void*)__jule_anon_1be7767e9, jule::Ptr<__jule_anon_1be7767e9_ctx>::make(__jule_anon_1be7767e9_ctx{._48628_pkg=_48628_pkg}).as<jule::Uintptr>(), __jule_anon_1be7767e9_ctx_handler));;
}



inline jule::Bool _1ac983bb1_checkDuplicateUseDecl(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _49442_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac98b8cd_ImportInfo> _4957_lpkg = _1ac983870_findUseDecl(_self_, _49442_pkg);;
	if ((_4957_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1ac981362_pushErr(_self_, &((*((*((*(_49442_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49442_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1ac981ae3_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1ac984002_getAsLinkPath(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Str _50434_path) {
	_1a6a5cb3c_Builder _5057_sb = static__1a6a5d489_New(_50434_path.len());;
	if (_1a8e45ee0_HasPrefix(_50434_path, _1a8e59d8e_PathStdlib)) {
		(_50434_path).mut_slice(_1a8e59d8e_PathStdlib.len());;
		({
			auto except = _1a6a5db1b_WriteStr(&_5057_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&_5057_sb, _1a8e4c139_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _1a6a5ddc4_WriteByte(&_5057_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
		});
		return _1a6a5e49b_Str(&_5057_sb);;
	};
	jule::Str _5143_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a8e52848_Abs(((_1ac9888ca_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac987940_GetModPath((*(_self_))._field_importer.data));
		_5143_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50434_path).mut_slice(_5143_root.len());;
	if ((_50434_path[0LL] == 92LLU)) {
		(_50434_path).mut_slice(1LL);;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_5057_sb, _1a8e4c139_ReplaceAll(_50434_path, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
	});
	return _1a6a5e49b_Str(&_5057_sb);;
}



inline void _1ac984420_pushCycleError(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98085b_symBuilder>* _52532_sb, jule::Str _52549_path, _1a6a5cb3c_Builder* _52565_message) {
	;
	jule::Str _5273_refersTo = _1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac984002_getAsLinkPath(_self_, _1abc332b3_Dir((*((*((*(_52532_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1ac984002_getAsLinkPath(_self_, _52549_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5313_m = _1a6a5e49b_Str(_52565_message);;
	({
		auto except = _1a6a5db1b_WriteStr(_52565_message, _1a8e45b27_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_52565_message, _5273_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_52565_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_52565_message, _5313_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
		(except.result);
	});
}



inline void _1ac98483d_pushCrossCycleError(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98085b_symBuilder>* _53837_target, jule::Ptr<_1ac98b8cd_ImportInfo>* _53859_imp, jule::Ptr<_1abc2ba81_Token>* _53878_errorToken) {
	_1a6a5cb3c_Builder _5397_message = static__1a6a5d489_New(32LL);;
	_1ac984420_pushCycleError(_self_, &(_self_), (*((*(_53859_imp))))._field_Path, &(_5397_message));
	jule::Ptr<_1ac98085b_symBuilder> _5437_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1ac98085b_symBuilder> _5447_old = _self_;;
	while (((*(_5437_owner))._field_owner != nullptr)) {
		{
			_1ac984420_pushCycleError(_self_, &((*_5447_old.alloc)._field_owner), _1abc332b3_Dir((*((*_5447_old.alloc)._field_table))._field_File.ptr()), &(_5397_message));
			if (((*_5437_owner.alloc)._field_owner == (*(_53837_target)))) {
				_1ac984420_pushCycleError(_self_, _53837_target, _1abc332b3_Dir((*((*(_5437_owner))._field_table))._field_File), &(_5397_message));
				goto _iter_end_1be782805;
			};
			_5447_old=_5437_owner;
			_5437_owner=(*_5437_owner.alloc)._field_owner;
		}
	_iter_next_1be782805:;
	}
	_iter_end_1be782805:;;
	_1ac981362_pushErr(_self_, _53878_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a6a5e49b_Str(&_5397_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1ac984c39_checkImportCycles(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _56134_imp, jule::Ptr<_1ac9c6660_UseDecl>* _56153_decl) {
	if (((*(_56134_imp))._field_Path == _1abc332b3_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1ac981362_pushErr(_self_, &((*((*(_56153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ac984002_getAsLinkPath(_self_, (*_56134_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*_self_.alloc)._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1ac98085b_symBuilder> _5717_owner = (*_self_.alloc)._field_owner;;
	_julec_label_1be721662:;
	if ((_1abc332b3_Dir((*((*(_5717_owner))._field_table))._field_File) == (*_56134_imp.alloc)._field_Path)) {
		_1ac98483d_pushCrossCycleError(_self_, &(_5717_owner), &(_56134_imp), &((*((*(_56153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5717_owner))._field_owner != nullptr)) {
		_5717_owner=(*_5717_owner.alloc)._field_owner;
		goto _julec_label_1be721662;
	};
	return true;;
}



inline void _1ac985157_checkPackageAccessibility(_1ac98085b_symBuilder* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path) {
	if ((((_1ac9888ca_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac987940_GetModPath((*(_self_))._field_importer.data) == (*(_59264_mod)))) {
		return;;
	};
	;
	jule::I32 _5973_i = _1a8e46b5b_Find((*(_59275_path)), jule::Str::lit("internal", 8));;
	if ((_5973_i == -1LL)) {
		return;;
	};
	if ((_5973_i == 0LL)) {
		if (((((*(_59275_path)).len() - 8LL) == 0LL) || _1a8e45ee0_HasPrefix((*(_59275_path)), jule::Str::lit("internal/", 9)))) {
			_1ac981362_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59275_path)).slice((_5973_i - 1LL)).equal("/internal", 9)) {
		_1ac981362_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6153_n = ((_5973_i + 8LL) + 1LL);;
	if (((_6153_n < (*(_59275_path)).len()) && (*(_59275_path)).slice((_5973_i - 1LL), _6153_n).equal("/internal/", 10))) {
		_1ac981362_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1ac985553_importPackage(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _62235_imp, jule::Ptr<_1ac9c6660_UseDecl>* _62258_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62235_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac98b8cd_ImportInfo> _6277_port = ((_1ac9888ca_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1ac9880c2_GetImport((*(_self_))._field_importer.data, (*((*(_62235_imp))))._field_Path);;
	if ((_6277_port != nullptr)) {
		(*((*(_62235_imp))))._field_Package=(*_6277_port.alloc)._field_Package;
		(*((*(_62235_imp))))._field_Duplicate=true;
		jule::Str _6324_oldMod = ((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987940_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987753_SetModPath((*_self_.alloc)._field_importer.data, ((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987c81_ModById((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_ModId));
		_1ac985157_checkPackageAccessibility(_self_, _62258_decl, &(_6324_oldMod), &((*_6277_port.alloc)._field_Path));
		((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987753_SetModPath((*_self_.alloc)._field_importer.data, _6324_oldMod);
	} else {
		if ((!(_1ac984c39_checkImportCycles(_self_, (*(_62235_imp)), _62258_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6414_oldMod = ((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987940_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987753_SetModPath((*_self_.alloc)._field_importer.data, _6414_oldMod);
		});;
		if ((*((*(_62235_imp))))._field_Std) {
			((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac987753_SetModPath((*_self_.alloc)._field_importer.data, _1a8e59d8e_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1abc40644_AST>> _6468_asts;
		jule::Slice<_1a6a6bde3_Log> _64618_errors;
		({
			__jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = ((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac9884bd_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_Path, (!((*((*(_62235_imp))))._field_Std)));
			_6468_asts = __jule_assign_result.__jule_result_arg0;
			_64618_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64618_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1ac985157_checkPackageAccessibility(_self_, _62258_decl, &(_6414_oldMod), &((*((*(_62235_imp))))._field_Path));
		{
			auto expr = &(_6468_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be7335b9:;
			if (it != expr_end) {
				jule::Ptr<_1abc40644_AST> _65416_ast = *it;
				{
					jule::Ptr<_1acaa8654_SymTab> _6559_table = static_cast<jule::Ptr<_1acaa8654_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1acbe1e63_buildSymbols(&(_65416_ast), &((*_self_.alloc)._field_importer), _self_);
						_6559_table = __jule_assign_result.__jule_result_arg0;
						_64618_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64618_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62235_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62235_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa8654_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6559_table; __jule_collection; }));
				}
				_iter_next_1be7335b9:;
				++it;
				goto _iter_begin_1be7335b9;
			}
			_iter_end_1be7335b9:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac985894_importUseDecl(jule::Ptr<_1ac98085b_symBuilder> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _66835_decl) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _6697_imp = _1ac98352e_buildImport(_self_, _66835_decl);;
	if ((_6697_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6747_ok = _1ac983bb1_checkDuplicateUseDecl(_self_, &(_6697_imp));;
	if ((!(_6747_ok))) {
		return nullptr;;
	};
	_6747_ok=_1ac985553_importPackage(_self_, &(_6697_imp), _66835_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6697_imp; __jule_collection; }));
	if (_6747_ok) {
		((_1ac9888ca_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1ac988776_Imported((*_self_.alloc)._field_importer.data, _6697_imp);
		return _6697_imp;;
	};
	return nullptr;;
}



inline void _1ac985a92_importUseDecls(jule::Ptr<_1ac98085b_symBuilder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be738ee8:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c6660_UseDecl> _68815_decl = *it;
			{
				_1ac985894_importUseDecl(_self_, &(_68815_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1be738ee8;
				};
			}
			_iter_next_1be738ee8:;
			++it;
			goto _iter_begin_1be738ee8;
		}
		_iter_end_1be738ee8:;
	};
}



inline void _1ac985d4a_appendNode(_1ac98085b_symBuilder* _self_, _1abc4159b_Node* _69731_node) {
	{
		auto &_match_expr{ (*(_69731_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1be73a4c2:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac956447_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac980295_buildImpl((*(_69731_node))._field_Data.cast_ptr<_1ac9ca1be_Impl>(&__jule_any_type66)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1be73a538:;
			{
				jule::Ptr<_1acbc00a6_TypeAlias> _7028_ta = _1ac97b7e1_buildTypeAlias((*(_69731_node))._field_Data.cast_ptr<_1ac9c530c_TypeAliasDecl>(&__jule_any_type51));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1be73a59e:;
			{
				jule::Ptr<_1ac9ce129_Struct> _7058_srct = _1ac97c182_buildStruct((*(_69731_node))._field_Data.cast_ptr<_1ac9c9322_StructDecl>(&__jule_any_type67));;
				(*((*(_self_))._field_table))._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ce129_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1be73a615:;
			{
				jule::Ptr<_1acaa2351_Fn> _7088_f = _1ac97cd31_buildFunc((*(_69731_node))._field_Data.cast_ptr<_1ac9c04a0_FnDecl>(&__jule_any_type68));;
				(*((*(_self_))._field_table))._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1be73a67b:;
			{
				jule::Ptr<_1acaaca65_Trait> _7118_t = _1ac97d67d_buildTrait((*(_69731_node))._field_Data.cast_ptr<_1ac9c9a5e_TraitDecl>(&__jule_any_type69));;
				(*((*(_self_))._field_table))._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaaca65_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be73a6e2:;
			{
				jule::Ptr<_1acb3d420_Var> _7148_v = _1ac97ec12_buildVar((*(_69731_node))._field_Data.cast_ptr<_1ac9c165a_VarDecl>(&__jule_any_type50));;
				(*((*(_self_))._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1be73ae95:;
			{
				jule::Ptr<_1acab021b_Enum> _7178_e = _1ac97e20b_buildEnum((*(_69731_node))._field_Data.cast_ptr<_1ac9c76c7_EnumDecl>(&__jule_any_type70));;
				(*((*(_self_))._field_table))._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acab021b_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1be73b00b:;
			{
				jule::Ptr<_1acab1926_TypeEnum> _7208_e = _1ac97e948_buildTypeEnum((*(_69731_node))._field_Data.cast_ptr<_1ac9c8662_TypeEnumDecl>(&__jule_any_type71));;
				(*((*(_self_))._field_table))._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acab1926_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7208_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1be73a45b:;
			{
				_1ac981362_pushErr(_self_, &((*(_69731_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be73a3e5:;
	};
}



inline void _1ac986048_appendNodes(_1ac98085b_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be754ae6:;
		if (it != expr_end) {
			_1abc4159b_Node _72815_node = *it;
			{
				_1ac985d4a_appendNode(_self_, &(_72815_node));
			}
			_iter_next_1be754ae6:;
			++it;
			goto _iter_begin_1be754ae6;
		}
		_iter_end_1be754ae6:;
	};
}



inline void _1ac986301_pushDirectivePass(_1ac98085b_symBuilder* _self_, jule::Ptr<_1abc419b9_Directive>* _73338_d) {
	if (((*((*(_73338_d))))._field_Args.len() == 0LL)) {
		_1ac981362_pushErr(_self_, &((*((*(_73338_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73338_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1abc2ba81_Token> _7384_arg = (*((*(_73338_d))))._field_Args[1LL];;
		_1ac981362_pushErr(_self_, &(_7384_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73338_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1abc2ba81_Token> _7423_arg = (*((*(_73338_d))))._field_Args[0LL];;
	if (((*(_7423_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1ac981362_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_7423_arg.alloc)._field_Kind[0LL] != '\"')) {
		_1ac981362_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1ac97ada6_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac97ada6_Pass{._field_Token=(*((*(_73338_d))))._field_Tag, ._field_Text=(*_7423_arg.alloc)._field_Kind.slice(1LL, ((*_7423_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1ac9864ee_appendTopDirectives(_1ac98085b_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be75c2d5:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _76015_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76015_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1be75d56c:;
						{
							_1ac986301_pushDirectivePass(_self_, &(_76015_d));
						}
					}
					_match_end_1be75d490:;
				};
			}
			_iter_next_1be75c2d5:;
			++it;
			goto _iter_begin_1be75c2d5;
		}
		_iter_end_1be75c2d5:;
	};
}



inline void _1ac9866ec_build(jule::Ptr<_1ac98085b_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1acaa8654_SymTab>(_1acaa8654_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1ac97ada6_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1acaa2351_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1acaaca65_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1acab021b_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1acab1926_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ac956447_Impl>>(nullptr)});
	_1ac9864ee_appendTopDirectives(_self_);
	_1ac985a92_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1ac986048_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1ac98b8cd_ImportInfo_eq(_1ac98b8cd_ImportInfo *_self_, _1ac98b8cd_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98bdea_SelectPackage(_1ac98b8cd_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac98c2e6_FindVar(_1ac98b8cd_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac98918e_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac98c6e2_FindTypeAlias(_1ac98b8cd_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac9895bd_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac98cadd_FindStruct(_1ac98b8cd_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac989a74_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac98ced9_FindFn(_1ac98b8cd_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac989e70_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac98d32a_FindTrait(_1ac98b8cd_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac98a2e4_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1acab021b_Enum> _1ac98d66b_FindEnum(_1ac98b8cd_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac98a668_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac98d9ac_FindTypeEnum(_1ac98b8cd_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1ac98dd75_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1ac98aaec_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1ac98dd75_isLookupable(_1ac98b8cd_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac98e628_SelectPackage(_1ac98e150_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac98ea24_FindVar(_1ac98e150_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1ac98918e_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac98ee20_FindTypeAlias(_1ac98e150_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1ac9895bd_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac99031b_FindStruct(_1ac98e150_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1ac989a74_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac990717_FindFn(_1ac98e150_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1ac989e70_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac990a58_FindTrait(_1ac98e150_Package* _self_, jule::Str _31125_ident) {
	return _1ac98a2e4_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1acab021b_Enum> _1ac990d99_FindEnum(_1ac98e150_Package* _self_, jule::Str _31724_ident) {
	return _1ac98a668_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac9911da_FindTypeEnum(_1ac98e150_Package* _self_, jule::Str _32328_ident) {
	return _1ac98aaec_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1ac93cebc_comptimeTypeInfo> _1ac9a8598_pushComptimeTypeInfo(_1ac9a8103_commonSemaMeta* _self_, jule::Ptr<_1acbc0d98_Type>* _21341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be922654:;
		if (it != expr_end) {
			jule::Ptr<_1ac93cebc_comptimeTypeInfo> _21415_t2 = *it;
			{
				if ((((*((*(_21415_t2))._field_base))._field_BindIdent == (*((*(_21341_t))))._field_BindIdent) && _1acbc15d5_Equal((*(_21415_t2))._field_base, (*(_21341_t))))) {
					return _21415_t2;;
				};
			}
			_iter_next_1be922654:;
			++it;
			goto _iter_begin_1be922654;
		}
		_iter_end_1be922654:;
	};
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _2197_t1 = jule::new_ptr<_1ac93cebc_comptimeTypeInfo>(_1ac93cebc_comptimeTypeInfo{._field_base=(*(_21341_t))});;
	{ jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2197_t1); };
	return _2197_t1;;
}







inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac9a9203_SelectPackage(_1ac9a8c2a_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>> _24229_selector) {
	return _1acaa8b71_SelectPackage((*(_self_))._field_file.ptr(), _24229_selector);;
}



inline jule::Ptr<_1acb3d420_Var> _1ac9a95ee_FindVar(_1ac9a8c2a_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded) {
	jule::Ptr<_1acb3d420_Var> _2547_v = _1ac98918e_findVarInPackage(&((*(_self_))._field_files), &(_25223_ident), _25235_binded);;
	if ((_2547_v != nullptr)) {
		return _2547_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac9a99ea_FindTypeAlias(_1ac9a8c2a_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded) {
	jule::Ptr<_1acbc00a6_TypeAlias> _2697_ta = _1ac9895bd_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26729_ident), _26741_binded);;
	if ((_2697_ta != nullptr)) {
		return _2697_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac9a9de6_FindStruct(_1ac9a8c2a_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded) {
	jule::Ptr<_1ac9ce129_Struct> _2847_s = _1ac989a74_findStructInPackage(&((*(_self_))._field_files), &(_28226_ident), _28238_binded);;
	if ((_2847_s != nullptr)) {
		return _2847_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac9aa2e2_FindFn(_1ac9a8c2a_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded) {
	jule::Ptr<_1acaa2351_Fn> _2997_f = _1ac989e70_findFnInPackage(&((*(_self_))._field_files), &(_29722_ident), _29734_binded);;
	if ((_2997_f != nullptr)) {
		return _2997_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac9aa633_FindTrait(_1ac9a8c2a_sema* _self_, jule::Str _31225_ident) {
	jule::Ptr<_1acaaca65_Trait> _3147_t = _1ac98a2e4_findTraitInPackage(&((*(_self_))._field_files), &(_31225_ident));;
	if ((_3147_t != nullptr)) {
		return _3147_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab021b_Enum> _1ac9aa974_FindEnum(_1ac9a8c2a_sema* _self_, jule::Str _32724_ident) {
	jule::Ptr<_1acab021b_Enum> _3297_e = _1ac98a668_findEnumInPackage(&((*(_self_))._field_files), &(_32724_ident));;
	if ((_3297_e != nullptr)) {
		return _3297_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac9aacb5_FindTypeEnum(_1ac9a8c2a_sema* _self_, jule::Str _34228_ident) {
	jule::Ptr<_1acab1926_TypeEnum> _3447_e = _1ac98aaec_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34228_ident));;
	if ((_3447_e != nullptr)) {
		return _3447_e;;
	};
	return nullptr;;
}



inline jule::Bool _1ac9ab1c2_isFlag(_1ac9a8c2a_sema* _self_, jule::I32 _35418_flags) {
	return (((*(_self_))._field_flags & _35418_flags) == _35418_flags);;
}



inline jule::Ptr<_1acaa8654_SymTab> _1ac9ab458_getCurrentFile(_1ac9a8c2a_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1ac9ab711_setCurrentFile(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa8654_SymTab> _35734_f) {
	(*(_self_))._field_file=_35734_f;
}



inline void _1ac9abb2e_pushErr(_1ac9a8c2a_sema* _self_, jule::Ptr<_1abc2ba81_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args) {
	{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ac9a6b18_compilerErr(&(_35923_token), true, _35945_fmt, _35965_args)); };
}



inline void _1ac9abe92_pushSuggestion(_1ac9a8c2a_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args) {
	{
		_1ac9a7c3a_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36430_fmt, _36450_args);
	};
}



inline jule::Bool _1acb1cc4b_isAccessibleDefine(_1ac9a8c2a_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1abc2ba81_Token> _37044_token) {
	if ((_37030_public || ((*(_37044_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3753_selfDir = _1abc332b3_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3763_tokenDir = _1abc332b3_Dir((*_37044_token.alloc)._field_File.ptr());;
	if ((_3753_selfDir == _3763_tokenDir)) {
		return true;;
	};
	if ((_1ac99162a_isStdPackage(&(_3763_tokenDir), jule::Str::lit("runtime", 7)) && _1ac99162a_isStdPackage(&(_3753_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1acb1d202_isDuplicatedIdent(_1ac9a8c2a_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be78e724:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> *_39410_f = it;
			{
				if (_1acaac009_isDuplicatedIdent((*(_39410_f)).ptr(), _39329_itself, _39347_ident, _39359_binded)) {
					return true;;
				};
			}
			_iter_next_1be78e724:;
			++it;
			goto _iter_begin_1be78e724;
		}
		_iter_end_1be78e724:;
	};
	return false;;
}



inline void _1acb1d565_checkDirectives(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _40237_d, jule::Any _40263_o) {
	_1ac97704a_directiveChecker _4037_dc = _1ac97704a_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1abc419b9_Directive>>>)(_40237_d)), ._field_o=_40263_o};;
	_1ac9787cc_check(&_4037_dc);
}



inline jule::Bool _1acb1da1b_checkGenericQuantity(_1ac9a8c2a_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_1abc2ba81_Token> _41163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41136_required == 0LL) && (_41151_given > 0LL))) {
			_case_begin_1be792408:;
			{
				_1ac9abb2e_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41136_required > 0LL) && (_41151_given == 0LL))) {
			_case_begin_1be792480:;
			{
				_1ac9abb2e_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required < _41151_given)) {
			_case_begin_1be792507:;
			{
				_1ac9abb2e_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required > _41151_given)) {
			_case_begin_1be79257e:;
			{
				_1ac9abb2e_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be79233c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be792260:;
	};
}



inline jule::Bool _1acb1ea50_isUseAliasDuplication(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _46938_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be796583:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _47015_imp2 = *it;
			{
				if ((_47015_imp2 == (*(_46938_imp)))) {
					goto _iter_end_1be796583;
				};
				if (((*(_47015_imp2))._field_Alias == (*((*(_46938_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1be796583:;
			++it;
			goto _iter_begin_1be796583;
		}
		_iter_end_1be796583:;
	};
	return false;;
}



inline jule::Bool _1acb1ed91_checkAutoAlias(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _48135_imp) {
	if ((*((*(_48135_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4863_valid = _1acb3bc59_isValidImpAlias((*((*(_48135_imp))))._field_Alias);;
	if (_4863_valid) {
		if (_1acb1ea50_isUseAliasDuplication(_self_, _48135_imp)) {
			_1ac9abb2e_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48135_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1ac9abb2e_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48135_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4863_valid;;
}



inline jule::Bool _1acb201d2_checkImport(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac98b8cd_ImportInfo>* _49932_imp) {
	if ((*((*(_49932_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49932_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1abc2e468_IsIgnoreIdent((*((*(_49932_imp))))._field_Alias)) {
			_1ac9abb2e_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1acb1ea50_isUseAliasDuplication(_self_, _49932_imp)) {
			_1ac9abb2e_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49932_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49932_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1ac9abb2e_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1ac986ab5_isImplicitImport((*(_49932_imp))))) && (!(_1acb1ed91_checkAutoAlias(_self_, _49932_imp))))) {
		return false;;
	};
	if (((*((*((*(_49932_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49932_imp))))._field_Duplicate))) {
		jule::Ptr<_1ac9a8c2a_sema> _5268_sema = jule::new_ptr<_1ac9a8c2a_sema>(_1ac9a8c2a_sema{._field_errors=jule::Slice<_1a6a6bde3_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1acaa8654_SymTab>>(nullptr), ._field_file=jule::Ptr<_1acaa8654_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1acb3941b_check(_5268_sema, &((*(*((*(_49932_imp))))._field_Package.alloc)._field_Files));
		if (((*_5268_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5268_sema.alloc)._field_errors);;
			(*_5268_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1acb203d0_checkImports(_1ac9a8c2a_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7a683a:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _54115_file = *it;
			{
				_1ac9ab711_setCurrentFile(_self_, _54115_file);
				{
					auto expr = &((*(_54115_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7a75a5:;
					if (it != expr_end) {
						jule::Ptr<_1ac98b8cd_ImportInfo> _54316_imp = *it;
						{
							jule::Bool _5445_ok = _1acb201d2_checkImport(_self_, &(_54316_imp));;
							if ((!(_5445_ok))) {
								return;;
							};
						}
						_iter_next_1be7a75a5:;
						++it;
						goto _iter_begin_1be7a75a5;
					}
					_iter_end_1be7a75a5:;
				};
			}
			_iter_next_1be7a683a:;
			++it;
			goto _iter_begin_1be7a683a;
		}
		_iter_end_1be7a683a:;
	};
}



inline void _1acb205cd_implFileImpls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7a793a:;
		if (it != expr_end) {
			jule::Ptr<_1ac956447_Impl> _55415_imp = *it;
			{
				_1acb305cc_implImpl(_self_, &(_55415_imp));
			}
			_iter_next_1be7a793a:;
			++it;
			goto _iter_begin_1be7a793a;
		}
		_iter_end_1be7a793a:;
	};
}



inline void _1acb207cb_implImpls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7a9376:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _56015_file = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _56015_file);
				_1acb205cd_implFileImpls(_self_);
			}
			_iter_next_1be7a9376:;
			++it;
			goto _iter_begin_1be7a9376;
		}
		_iter_end_1be7a9376:;
	};
}



inline void _1acb209c9_checkEnums(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7aa432:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _56715_file = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _56715_file);
				{
					
					if ((!(_1acb2ba18_checkEnumDecls(_self_)))) {
						_case_begin_1be7aab19:;
					}
					else if ((!(_1acb2bc9e_checkTypeEnumDecls(_self_)))) {
						_case_begin_1be7ab1e1:;
					}
					_match_end_1be7ab114:;
				};
			}
			_iter_next_1be7aa432:;
			++it;
			goto _iter_begin_1be7aa432;
		}
		_iter_end_1be7aa432:;
	};
}



inline void _1acb20bc7_checkFileInherits(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7ac016:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _57715_t = *it;
			{
				jule::Bool _5784_ok = _1acb2d663__checkTraitDeclInherits(_self_, &(_57715_t));;
				if ((!(_5784_ok))) {
					return;;
				};
			}
			_iter_next_1be7ac016:;
			++it;
			goto _iter_begin_1be7ac016;
		}
		_iter_end_1be7ac016:;
	};
}



inline void _1acb20dc5_checkInherits(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7ac588:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _58615_file = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _58615_file);
				_1acb20bc7_checkFileInherits(_self_);
			}
			_iter_next_1be7ac588:;
			++it;
			goto _iter_begin_1be7ac588;
		}
		_iter_end_1be7ac588:;
	};
}



inline _1acbd3295_typeChecker _1acb2137b_typeChecker(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _59247_generics, jule::Ptr<_1acbd22a5_referencer> _5937_referencer) {
	_1acbd3295_typeChecker _5947_tc = _1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=_59232_l, ._field_lookup=_59232_l, ._field_referencer=_5937_referencer, ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59247_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59232_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1be7b0239:;
			{
				jule::Ptr<_1ac9631bd_scopeChecker> _6038_hard = _1ac966831_getHardRoot(_59232_l.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
				_5947_tc._field_refers=(*((*(_6038_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1be7b01c3:;
	};
	if (((_5937_referencer != nullptr) && ((*_5937_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5937_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1be7b1acb:;
				{
					_5947_tc._field_ownerAlias=(*(_5937_referencer))._field_owner.unsafe_cast_ptr<_1acbc00a6_TypeAlias>();
				}
			}
			_match_end_1be7b1a65:;
		};
	};
	return _5947_tc;;
}



inline jule::Ptr<_1acbc0d98_Type> _1acb218dc_buildTypeWithRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6207_generics, jule::Ptr<_1acbd22a5_referencer> _62035_referencer) {
	return ({ auto _wrap_copy = _1acb2137b_typeChecker(_self_, _61964_l, _6207_generics, _62035_referencer); _1acbdad80_checkDecl(&_wrap_copy, _61941_t); });;
}



inline jule::Bool _1acb21e4d_checkTypeSymWithRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc85a9_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6277_generics, jule::Ptr<_1acbd22a5_referencer> _62735_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1acbc8961_checked((*(_62644_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62644_t))))._field_Type=_1acb218dc_buildTypeWithRefers(_self_, &((*((*(_62644_t))))._field_Decl), _62661_l, _6277_generics, _62735_referencer);
	__jule_func_result = _1acbc8961_checked((*(_62644_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac954148_constraintChecker> _1acb221d4_constraintChecker(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	return jule::new_ptr<_1ac954148_constraintChecker>(_1ac954148_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_si=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_et=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1acb225d0_checkTypeSym(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc85a9_TypeSym>* _64134_t, jule::Trait _64151_l) {
	return _1acb21e4d_checkTypeSymWithRefers(_self_, _64134_t, _64151_l, nullptr, nullptr);;
}



inline jule::Ptr<_1acbc0d98_Type> _1acb22a86_checkTypeSymRefers(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1ac979855_ReferenceStack> _64678_refers) {
	jule::Ptr<_1acbd3295_typeChecker> _6477_tc = jule::new_ptr<_1acbd3295_typeChecker>(_1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=_64663_l, ._field_lookup=_64663_l, ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=_64678_refers, ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1acbdad80_checkDecl(_6477_tc.ptr(), _64640_t);;
}



inline jule::Ptr<_1acbc0d98_Type> _1acb2303c_buildTypeWithGenerics(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _6597_generics, jule::Ptr<_1ac979855_ReferenceStack> _65935_refers) {
	jule::Ptr<_1acbd3295_typeChecker> _6607_tc = jule::new_ptr<_1acbd3295_typeChecker>(_1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=_65935_refers, ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6597_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1acbdad80_checkDecl(_6607_tc.ptr(), _65843_t);;
}



inline jule::Ptr<_1acbc0d98_Type> _1acb236be_selectType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _67632_t) {
	jule::Ptr<_1acbd3295_typeChecker> _6777_tc = jule::new_ptr<_1acbd3295_typeChecker>(_1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1acbdad80_checkDecl(_6777_tc.ptr(), _67632_t);;
}



inline jule::Ptr<_1acb8edbc_eval> _1acb23b75_evalpd(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1acbc0d98_Type> _68842_p, jule::Ptr<_1acb3d420_Var> _68856_owner) {
	jule::Ptr<_1acb8edbc_eval> _6897_e = jule::new_ptr<_1acb8edbc_eval>(_1acb8edbc_eval{._field_s=_self_, ._field_lookup=_68827_l, ._field_prefix=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_68856_owner, ._field_field=jule::Ptr<_1ac9d13d4_FieldIns>(nullptr), ._field_target=_1acb8e44e_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _68827_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1be7bc488:;
			{
				(*(_6897_e))._field_unsafety=_1ac9655aa_isUnsafe(_68827_l.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
			}
		}
		_match_end_1be7bc422:;
	};
	(*_6897_e.alloc)._field_prefix=_68842_p;
	return _6897_e;;
}



inline jule::Ptr<_1acb8edbc_eval> _1acb24071_evalp(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1acbc0d98_Type> _70341_p) {
	return _1acb23b75_evalpd(_self_, _70326_l, _70341_p, nullptr);;
}



inline jule::Ptr<_1acb8edbc_eval> _1acb243b2_eval(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Trait _70825_l) {
	return _1acb24071_evalp(_self_, _70825_l, nullptr);;
}



inline jule::Bool _1acb249cd_checkAssignType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1acbc0d98_Type>* _71254_dest, jule::Ptr<_1acb8cded_Data>* _7138_d, jule::Ptr<_1abc2ba81_Token> _71322_errorToken, jule::Ptr<_1ac979855_ReferenceStack> _71353_refers) {
	if ((*((*(_7138_d))))._field_Decl) {
		_1ac9abb2e_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71232_destIsRef) {
		if ((!(_1acbc15d5_Equal((*(_71254_dest)), (*((*(_7138_d))))._field_Type)))) {
			_1ac9abb2e_pushErr(_self_, _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_71254_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_7138_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1acb7b0b7_assignTypeChecker> _7248_atc = jule::new_ptr<_1acb7b0b7_assignTypeChecker>(_1acb7b0b7_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71254_dest)), ._field_d=(*(_7138_d)), ._field_errorToken=_71322_errorToken, ._field_refers=_71353_refers});;
		jule::Bool _7314_ok = _1acb7c0b8_check(_7248_atc.ptr());;
		if ((!(_7314_ok))) {
			return false;;
		};
	};
	if (((!(_1acb8d838_IsConst((*(_7138_d)).ptr()))) || (_1acbc354e_Prim((*(_71254_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7417_kind = (*(_1acbc354e_Prim((*(_71254_dest)).ptr())))._field_Kind;;
	{
		
		if (_1ac92ae22_IsSigInt(_7417_kind)) {
			_case_begin_1be7c5507:;
			{
				_1aca8b747_SetI64((*((*(_7138_d))))._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1ac92b230_IsUnsigInt(_7417_kind)) {
			_case_begin_1be7c5590:;
			{
				_1aca8ba00_SetU64((*((*(_7138_d))))._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1ac92b83a_IsFloat(_7417_kind)) {
			_case_begin_1be7c5606:;
			{
				_1aca8c319_SetF64((*((*(_7138_d))))._field_Constant.ptr(), _1aca8b48e_AsF64((*((*(_7138_d))))._field_Constant));
			}
		}
		_match_end_1be7c544c:;
	};
	return true;;
}



inline jule::Bool _1acb24e84__checkTypeCompatibility(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _75545_dest, jule::Ptr<_1acbc0d98_Type>* _75563_src, jule::Ptr<_1abc2ba81_Token> _7567_errorToken) {
	if (((*(_75563_src)) == nullptr)) {
		return false;;
	};
	if ((_1acbc5375_Tup((*(_75563_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1acb7923b_typeCompatibilityChecker _7647_tcc = _1acb7923b_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75545_dest)), ._field_src=(*(_75563_src)), ._field_errorToken=_7567_errorToken};;
	return _1acb7a935_check(&_7647_tcc);;
}



inline jule::Bool _1acb2543a_checkTypeCompatibility(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _77344_dest, jule::Ptr<_1acbc0d98_Type>* _7748_src, jule::Ptr<_1abc2ba81_Token>* _77425_errorToken) {
	if (_1acb24e84__checkTypeCompatibility(_self_, _77344_dest, _7748_src, (*(_77425_errorToken)))) {
		return true;;
	};
	_1ac9abb2e_pushErr(_self_, (*(_77425_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_77344_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_7748_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1acb25858_pushCompatiblityError(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acbc0d98_Type>* _78242_dest, jule::Ptr<_1acb8cded_Data>* _78260_src, jule::Ptr<_1abc2ba81_Token>* _7838_errorToken) {
	if ((*((*(_78260_src))))._field_untyped) {
		{
			
			if (_1aca8c79d_IsI64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1be7cc92c:;
				{
					_1ac9abb2e_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1aca8ca34_IsU64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1be7cc9c6:;
				{
					_1ac9abb2e_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1aca8d2d7_IsF64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1be7cca3c:;
				{
					_1ac9abb2e_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1be7cc7ea:;
		};
	};
	_1ac9abb2e_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_78260_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1acb25d0e_checkTypeCompatibility1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc0d98_Type>* _80045_dest, jule::Ptr<_1acb8cded_Data>* _80063_src, jule::Ptr<_1abc2ba81_Token>* _8018_errorToken) {
	if (_1acb24e84__checkTypeCompatibility(_self_, _80045_dest, &((*((*(_80063_src))))._field_Type), (*(_8018_errorToken)))) {
		return true;;
	};
	_1acb25858_pushCompatiblityError(_self_, _80045_dest, _80063_src, _8018_errorToken);
	return false;;
}



inline jule::Ptr<_1acbc0d98_Type> _1acb262b5_buildNonGenericType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1abc4259c_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1acbc0d98_Type>>* _81644_ignored) {
	jule::Ptr<_1acbd3295_typeChecker> _8177_tc = jule::new_ptr<_1acbd3295_typeChecker>(_1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=(*(_8168_generics)), ._field_ignoredGenerics=_81644_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1acbdad80_checkDecl(_8177_tc.ptr(), _81541_ast);;
}



inline jule::Bool _1acb266b1_buildFnNonGenericTypes(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns> _82743_f, jule::Slice<jule::Ptr<_1acbc0d98_Type>>* _82759_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _82811_generics = nullptr;;
	if (_1acaa2a8d_IsMethod((*(_82743_f))._field_Decl.ptr())) {
		_82811_generics=jule::append((*(*(_82743_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82743_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82811_generics=(*((*(_82743_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1acb2785a_basicFnEnvironment(_self_, &(_82743_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*>((void*)__jule_anon_1be7d8086, jule::Ptr<__jule_anon_1be7d8086_ctx>::make(__jule_anon_1be7d8086_ctx{._82743_f=_82743_f,._82811_generics=_82811_generics,._82759_ignored=_82759_ignored}).as<jule::Uintptr>(), __jule_anon_1be7d8086_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acb26a02_getTraitCheckFnKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _85041_f) {
	if (((*((*(_85041_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85041_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1acaa540e_FnIns> _8547_ins = _1acaa385d_instanceForce((*(_85041_f)));;
	jule::Ptr<_1acbd3295_typeChecker> _8567_tc = jule::new_ptr<_1acbd3295_typeChecker>(_1acbd3295_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8547_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7de488:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _86115_p = *it;
			{
				if ((!(_1acaa0ecb_IsSelf((*(_86115_p))._field_Decl.ptr())))) {
					(*_86115_p.alloc)._field_Type=_1acbdad80_checkDecl(_8567_tc.ptr(), &((*((*(*(_86115_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86115_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1be7de488:;
			++it;
			goto _iter_begin_1be7de488;
		}
		_iter_end_1be7de488:;
	};
	if ((!(_1acaa2807_IsVoid((*(_85041_f)).ptr())))) {
		(*_8547_ins.alloc)._field_Result=_1acbdad80_checkDecl(_8567_tc, &((*((*((*((*(_85041_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8547_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8547_ins;;
}



inline jule::Bool _1acb26ea8_checkConstraintsFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _87940_f, jule::Ptr<_1abc2ba81_Token>* _87956_et, jule::Ptr<_1acaa540e_FnIns> _87979_exist) {
	jule::Ptr<_1ac954148_constraintChecker> _8807_cc = _1acb221d4_constraintChecker(_self_);;
	(*(_8807_cc))._field_et=(*(_87956_et));
	(*_8807_cc.alloc)._field_fi=(*(_87940_f));
	if ((_87979_exist != nullptr)) {
		{
			auto expr = &((*_87979_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be7e4614:;
			if (it != expr_end) {
				jule::I32 _8849_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> _88416_g = *it;
				{
					(*((*((*(_87940_f))))._field_Generics[_8849_i]))._field_Constraint=(*(_88416_g))._field_Constraint;
				}
				_iter_next_1be7e4614:;
				++it;
				_8849_i++;
				goto _iter_begin_1be7e4614;
			}
			_iter_end_1be7e4614:;
		};
	} else {
		(*_8807_cc.alloc)._field_uniq=true;
	};
	return _1ac9550b1_check(_8807_cc);;
}



inline jule::Bool _1acb2745e_checkConstraintsStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _89344_s, jule::Ptr<_1abc2ba81_Token>* _89364_et, jule::Ptr<_1ac9d1e84_StructIns> _89387_exist) {
	jule::Ptr<_1ac954148_constraintChecker> _8947_cc = _1acb221d4_constraintChecker(_self_);;
	(*(_8947_cc))._field_et=(*(_89364_et));
	(*_8947_cc.alloc)._field_si=(*(_89344_s));
	if ((_89387_exist != nullptr)) {
		{
			auto expr = &((*_89387_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be7e77d2:;
			if (it != expr_end) {
				jule::I32 _8989_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> _89816_g = *it;
				{
					(*((*((*(_89344_s))))._field_Generics[_8989_i]))._field_Constraint=(*(_89816_g))._field_Constraint;
				}
				_iter_next_1be7e77d2:;
				++it;
				_8989_i++;
				goto _iter_begin_1be7e77d2;
			}
			_iter_end_1be7e77d2:;
		};
	} else {
		(*_8947_cc.alloc)._field_uniq=true;
	};
	return _1ac9550b1_check(_8947_cc);;
}



inline jule::Bool _1acb2785a_basicFnEnvironment(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*> _91051_algo) {
	jule::Ptr<_1ac9a8c2a_sema> _9117_sema = (*((*((*(_91040_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1acaa8654_SymTab> _9127_old = _1ac9ab458_getCurrentFile(_9117_sema.ptr());;
	jule::Ptr<_1acaa8654_SymTab> _9137_file = _1ac9a7894_findFile(&((*_9117_sema.alloc)._field_files), &((*((*(*((*(_91040_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9137_file != nullptr)) {
		_1ac9ab711_setCurrentFile(_9117_sema, _9137_file);
	};
	jule::Bool _9183_ok = _91051_algo(&(_9117_sema));;
	if ((_9117_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*_9117_sema.alloc)._field_errors);
		(*_9117_sema.alloc)._field_errors=nullptr;
	};
	_1ac9ab711_setCurrentFile(_9117_sema, _9127_old);
	return _9183_ok;;
}



inline jule::Bool _1acb27c56_fnEnvironment(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*> _93046_algo) {
	jule::I32 _9317_size = (*((*(_93035_f))))._field_Generics.len();;
	if ((((*((*(_93035_f))))._field_Decl != nullptr) && ((*(*((*(_93035_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9317_size+=(*(*((*((*(_93035_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _9357_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>::alloc(0LL, _9317_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc00a6_TypeAlias>(nullptr); __jule_collection; });;
	_1ac9a7520_appendGenericTypeAliases(&(_9357_generics), _93035_f);
	return _1acb2785a_basicFnEnvironment(_self_, _93035_f, jule::__new_closure<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*>((void*)__jule_anon_1be80105a, jule::Ptr<__jule_anon_1be80105a_ctx>::make(__jule_anon_1be80105a_ctx{._93046_algo=_93046_algo,._9357_generics=_9357_generics}).as<jule::Uintptr>(), __jule_anon_1be80105a_ctx_handler));;
}



inline void _1acb2800e_checkFnParamKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa42a9_ParamIns>* _94238_p) {
	(*((*((*(_94238_p))))._field_Type))._field_Variadic=(*((*((*(_94238_p))))._field_Decl))._field_Variadic;
	if (((*(*((*(_94238_p))))._field_Decl.alloc)._field_Reference && (!(_1acbdcca5_isValidForRef(&((*((*(_94238_p))))._field_Type)))))) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*(*((*(_94238_p))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_94238_p))))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1acb28350_reloadFnInsTypes(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns> _94937_f) {
	if ((_1acaa68c7_IsBuiltin(_94937_f.ptr()) || _1acaa6b5d_IsAnon(_94937_f))) {
		return true;;
	};
	return _1acb27c56_fnEnvironment(_self_, &(_94937_f), jule::__new_closure<jule::Bool,jule::Ptr<_1ac9a8c2a_sema>*,jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>*>((void*)__jule_anon_1be805845, jule::Ptr<__jule_anon_1be805845_ctx>::make(__jule_anon_1be805845_ctx{._94937_f=_94937_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be805845_ctx_handler));;
}



inline jule::Bool _1acb28806_checkRefValidityForInitExpr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _98944_leftMut, jule::Ptr<_1acb8cded_Data>* _98964_d, jule::Ptr<_1abc2ba81_Token>* _98979_errorToken) {
	if ((!(_1ac9a65da_isValidModelForRef(&((*((*(_98964_d))))._field_Model))))) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*(_98979_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98944_leftMut && (!((*((*(_98964_d))))._field_Mutable)))) {
		_1ac9abb2e_pushErr(_self_, (*(_98979_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1acb28b47_isMutRiskyStruct(_1ac9a8c2a_sema* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _100629_s) {
	{
		auto expr = &((*((*(_100629_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be810982:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> *_100710_f = it;
			{
				if ((((*((*((*(_100710_f))))._field_Decl))._field_Mutable && _1acbc277e_Mutable((*(*(_100710_f)).alloc)._field_Type.ptr())) && _1acb1cc4b_isAccessibleDefine(_self_, (*(*((*(_100710_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100710_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1be810982:;
			++it;
			goto _iter_begin_1be810982;
		}
		_iter_end_1be810982:;
	};
	return false;;
}



inline jule::Bool _1acb29263_checkValidityForInitExpr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Bool _103341_leftMut, jule::Bool _103356_leftRef, jule::Ptr<_1acbc0d98_Type>* _10344_leftKind, jule::Ptr<_1acb8cded_Data>* _103426_d, jule::Ptr<_1abc2ba81_Token>* _103441_errorToken) {
	if ((_103341_leftMut && (!((*((*(_103426_d))))._field_Mutable)))) {
		if ((_1acbc277e_Mutable((*((*(_103426_d))))._field_Type.ptr()) || (*(*((*(_103426_d))))._field_Type.alloc)._field_Variadic)) {
			_1ac9abb2e_pushErr(_self_.ptr(), (*(_103441_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_103426_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1ac9d1e84_StructIns> _10424_s = _1acbc4ac2_Struct((*((*(_103426_d))))._field_Type);;
		if (((_10424_s != nullptr) && _1acb28b47_isMutRiskyStruct(_self_, &(_10424_s)))) {
			_1ac9abb2e_pushErr(_self_, (*(_103441_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_103426_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103356_leftRef) {
		if ((!(_1acb28806_checkRefValidityForInitExpr(_self_, _103341_leftMut, _103426_d, _103441_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1acb7b0b7_assignTypeChecker> _10537_atc = jule::new_ptr<_1acb7b0b7_assignTypeChecker>(_1acb7b0b7_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_d=(*(_103426_d)), ._field_errorToken=(*(_103441_errorToken)), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr)});;
	return _1acb7b815_checkValidity(_10537_atc.ptr());;
}



inline jule::Bool _1acb2965e_checkTypeAliasDeclKind(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _106144_ta, jule::Trait _106164_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acaa8654_SymTab> _10627_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac9ab711_setCurrentFile(_self_, _10627_old);
	});;
	if (((*((*(_106144_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1acaa8654_SymTab> _10678_file = _1ac9a7894_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106144_ta))))._field_Token.alloc)._field_File));;
		if ((_10678_file != nullptr)) {
			_1ac9ab711_setCurrentFile(_self_, _10678_file);
		};
	};
	__jule_func_result=_1acb21e4d_checkTypeSymWithRefers(_self_, &((*((*(_106144_ta))))._field_TypeSym), _106164_l, nullptr, jule::new_ptr<_1acbd22a5_referencer>(_1acbd22a5_referencer{._field_ident=(*((*(_106144_ta))))._field_Ident, ._field_owner=jule::Any((*(_106144_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106144_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1acbc431e_Arr((*((*((*(_106144_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1acbc431e_Arr((*((*((*(_106144_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1ac9abb2e_pushErr(_self_, (*((*(*((*(_106144_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1acb299c2_checkTypeAliasDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _108440_ta, jule::Trait _108460_l) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_108440_ta))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_108440_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1acb2965e_checkTypeAliasDeclKind(_self_, _108440_ta, _108460_l);
}



inline void _1acb29c7a_checkTypeAliasDeclDup(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc00a6_TypeAlias>* _109243_ta) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_109243_ta))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_109243_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1acb1d202_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_109243_ta))), &((*((*(_109243_ta))))._field_Ident), (*((*(_109243_ta))))._field_Binded)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_109243_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_109243_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1acb2965e_checkTypeAliasDeclKind(_self_, _109243_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
}



inline jule::Bool _1acb2a011_checkTypeAliasDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be824413:;
		if (it != expr_end) {
			jule::Ptr<_1acbc00a6_TypeAlias> _110515_ta = *it;
			{
				_1acb29c7a_checkTypeAliasDeclDup(_self_, &(_110515_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be824413:;
			++it;
			goto _iter_begin_1be824413;
		}
		_iter_end_1be824413:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1be8532ee_checkEnumItemsDup(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _111636_items) {
	{
		auto expr = &(_111636_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be853a6e:;
		if (it != expr_end) {
			jule::Ptr<_1acaae6b0_EnumItem> *_111710_item = it;
			{
				if (((*((*(_111710_item))))._field_Ident).empty()) {
					goto _iter_next_1be853a6e;
				} else if (_1abc2e468_IsIgnoreIdent((*((*(_111710_item))))._field_Ident)) {
					_1ac9abb2e_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111636_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be8557a7:;
						if (it != expr_end) {
							jule::Ptr<_1acaae6b0_EnumItem> *_112312_citem = it;
							{
								if (((*(_111710_item)) == (*(_112312_citem)))) {
									goto _iter_end_1be8557a7;
								} else if (((*((*(_111710_item))))._field_Ident == (*((*(_112312_citem))))._field_Ident)) {
									_1ac9abb2e_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111710_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1be8557a7;
								};
							}
							_iter_next_1be8557a7:;
							++it;
							goto _iter_begin_1be8557a7;
						}
						_iter_end_1be8557a7:;
					};
				};
			}
			_iter_next_1be853a6e:;
			++it;
			goto _iter_begin_1be853a6e;
		}
		_iter_end_1be853a6e:;
	};
}

inline void _1be861340_checkEnumItemsDup(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _111636_items) {
	{
		auto expr = &(_111636_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be861ab0:;
		if (it != expr_end) {
			jule::Ptr<_1acab134e_TypeEnumItem> *_111710_item = it;
			{
				if (((*((*(_111710_item))))._field_Ident).empty()) {
					goto _iter_next_1be861ab0;
				} else if (_1abc2e468_IsIgnoreIdent((*((*(_111710_item))))._field_Ident)) {
					_1ac9abb2e_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111636_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be8637a4:;
						if (it != expr_end) {
							jule::Ptr<_1acab134e_TypeEnumItem> *_112312_citem = it;
							{
								if (((*(_111710_item)) == (*(_112312_citem)))) {
									goto _iter_end_1be8637a4;
								} else if (((*((*(_111710_item))))._field_Ident == (*((*(_112312_citem))))._field_Ident)) {
									_1ac9abb2e_pushErr(_self_, (*(*(_111710_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111710_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1be8637a4;
								};
							}
							_iter_next_1be8637a4:;
							++it;
							goto _iter_begin_1be8637a4;
						}
						_iter_end_1be8637a4:;
					};
				};
			}
			_iter_next_1be861ab0:;
			++it;
			goto _iter_begin_1be861ab0;
		}
		_iter_end_1be861ab0:;
	};
}



inline void _1acb2a572_checkEnumItemsStr(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _113639_e) {
	jule::Ptr<_1acb8edbc_eval> _11377_eval = _1acb243b2_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113639_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8261a1:;
		if (it != expr_end) {
			jule::Ptr<_1acaae6b0_EnumItem> _113815_item = *it;
			{
				if (_1acaaea89_AutoExpr(_113815_item.ptr())) {
					(*_113815_item.alloc)._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca89569_NewStr((*_113815_item.alloc)._field_Ident)})});
					(*((*((*_113815_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113815_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1acb8cded_Data> _11479_d = _1acbadbaa_evalExpr(_11377_eval, (*((*(_113815_item))._field_Value))._field_Expr);;
					if ((_11479_d == nullptr)) {
						goto _iter_next_1be8261a1;
					};
					if ((!(_1acb8d838_IsConst(_11479_d.ptr())))) {
						_1ac9abb2e_pushErr(_self_, (*((*(*(_113815_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1ac979855_ReferenceStack> _11569_refers = static_cast<jule::Ptr<_1ac979855_ReferenceStack>>(nullptr);;
					_1acb249cd_checkAssignType(_self_, false, &((*((*((*(_113639_e))))._field_TypeSym))._field_Type), &(_11479_d), (*_113815_item.alloc)._field_Token, _11569_refers);
					(*(*(_113815_item))._field_Value.alloc)._field_Data=_11479_d;
				};
			}
			_iter_next_1be8261a1:;
			++it;
			goto _iter_begin_1be8261a1;
		}
		_iter_end_1be8261a1:;
	};
}



inline void _1be8322cd_checkEnumItemInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb8edbc_eval>* _116343_eval, jule::Ptr<_1acab021b_Enum>* _116361_e, jule::Ptr<_1acbc8eb1_Prim>* _116372_prim, jule::Ptr<_1acaae6b0_EnumItem>* _116390_item, jule::U64* _1163112_n) {
	if (_1acaaea89_AutoExpr((*(_116390_item)).ptr())) {
		(*((*(_116390_item))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		{
			
{
				_case_begin_1be8346ba:;
				{
					(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Constant=static__1aca88ed6_NewU64((*(_1163112_n)));
				}
			}
			_match_end_1be83507d:;
		};
		(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116390_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1acb8cded_Data> _11788_d = _1acbadbaa_evalExpr((*(_116343_eval)), (*((*((*(_116390_item))))._field_Value))._field_Expr);;
		if ((_11788_d == nullptr)) {
			return;;
		};
		if ((!(_1acb8d838_IsConst(_11788_d.ptr())))) {
			_1ac9abb2e_pushErr(_self_.ptr(), (*((*(*((*(_116390_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac979855_ReferenceStack> _11858_refers = static_cast<jule::Ptr<_1ac979855_ReferenceStack>>(nullptr);;
		_1acb249cd_checkAssignType(_self_, false, &((*((*((*(_116361_e))))._field_TypeSym))._field_Type), &(_11788_d), (*((*(_116390_item))))._field_Token, _11858_refers);
		(*(*((*(_116390_item))))._field_Value.alloc)._field_Data=_11788_d;
		{
			
{
				_case_begin_1be83923b:;
				{
					(*(_1163112_n))=_1aca8a438_ReadU64((*((*(*((*(_116390_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1be83a55b:;
		};
	};
}

inline void _1be842d38_checkEnumItemInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb8edbc_eval>* _116343_eval, jule::Ptr<_1acab021b_Enum>* _116361_e, jule::Ptr<_1acbc8eb1_Prim>* _116372_prim, jule::Ptr<_1acaae6b0_EnumItem>* _116390_item, jule::I64* _1163112_n) {
	if (_1acaaea89_AutoExpr((*(_116390_item)).ptr())) {
		(*((*(_116390_item))))._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})});
		{
			
{
				_case_begin_1be845b0a:;
				{
					(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Constant=static__1aca88c61_NewI64((*(_1163112_n)));
				}
			}
			_match_end_1be845a94:;
		};
		(*((*((*((*(_116390_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116390_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1acb8cded_Data> _11788_d = _1acbadbaa_evalExpr((*(_116343_eval)), (*((*((*(_116390_item))))._field_Value))._field_Expr);;
		if ((_11788_d == nullptr)) {
			return;;
		};
		if ((!(_1acb8d838_IsConst(_11788_d.ptr())))) {
			_1ac9abb2e_pushErr(_self_.ptr(), (*((*(*((*(_116390_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1ac979855_ReferenceStack> _11858_refers = static_cast<jule::Ptr<_1ac979855_ReferenceStack>>(nullptr);;
		_1acb249cd_checkAssignType(_self_, false, &((*((*((*(_116361_e))))._field_TypeSym))._field_Type), &(_11788_d), (*((*(_116390_item))))._field_Token, _11858_refers);
		(*(*((*(_116390_item))))._field_Value.alloc)._field_Data=_11788_d;
		{
			
{
				_case_begin_1be84b281:;
				{
					(*(_1163112_n))=_1aca8a1a2_ReadI64((*((*(*((*(_116390_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1be84b209:;
		};
	};
}



inline void _1be82d461_checkEnumItemsInt1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc8eb1_Prim>* _119941_prim, jule::Ptr<_1acab021b_Enum>* _119959_e) {
	jule::U64 _12007_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1be830144:;
			{
				_12007_max=_1ac929728_MaxU(_1acbc9335_Str((*(_119941_prim)).ptr()));
			}
		}
		_match_end_1be8302a9:;
	};
	jule::Ptr<_1acb8edbc_eval> _12107_eval = _1acb243b2_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
	jule::U64 _12117_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1acaae6b0_EnumItem> _12127_first = (*((*(_119959_e))))._field_Items[0LL];;
	_1be8322cd_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_12127_first), &(_12117_n));
	if (((*((*(_12127_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1be82e96d:;
				{
					_12117_n=_1aca8b208_AsU64((*(*((*(_12127_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1be83ad31:;
		};
	};
	{
		auto expr = (*((*(_119959_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be836cb6:;
		if (it != expr_end) {
			jule::Ptr<_1acaae6b0_EnumItem> _122415_item = *it;
			{
				if (((_1acaaea89_AutoExpr(_122415_item.ptr()) && (_12117_n > 0LLU)) && ((jule::U64)(_12007_max - _12117_n) <= 0LLU))) {
					_1ac9abb2e_pushErr(_self_, (*_122415_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1be836cb6;
				};
				(_12117_n)++;
				_1be8322cd_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_122415_item), &(_12117_n));
			}
			_iter_next_1be836cb6:;
			++it;
			goto _iter_begin_1be836cb6;
		}
		_iter_end_1be836cb6:;
	};
}

inline void _1be82d73b_checkEnumItemsInt1(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acbc8eb1_Prim>* _119941_prim, jule::Ptr<_1acab021b_Enum>* _119959_e) {
	jule::I64 _12007_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1be840be3:;
			{
				_12007_max=_1ac92945e_MaxI(_1acbc9335_Str((*(_119941_prim)).ptr()));
			}
		}
		_match_end_1be840b7c:;
	};
	jule::Ptr<_1acb8edbc_eval> _12107_eval = _1acb243b2_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
	jule::I64 _12117_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1acaae6b0_EnumItem> _12127_first = (*((*(_119959_e))))._field_Items[0LL];;
	_1be842d38_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_12127_first), &(_12117_n));
	if (((*((*(_12127_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1be8436eb:;
				{
					_12117_n=_1aca8ae72_AsI64((*(*((*(_12127_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1be848734:;
		};
	};
	{
		auto expr = (*((*(_119959_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be84d0b8:;
		if (it != expr_end) {
			jule::Ptr<_1acaae6b0_EnumItem> _122415_item = *it;
			{
				if (((_1acaaea89_AutoExpr(_122415_item.ptr()) && (_12117_n > 0LL)) && ((_12007_max - _12117_n) <= 0LL))) {
					_1ac9abb2e_pushErr(_self_, (*_122415_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1be84d0b8;
				};
				(_12117_n)++;
				_1be842d38_checkEnumItemInt(_self_, &(_12107_eval), _119959_e, _119941_prim, &(_122415_item), &(_12117_n));
			}
			_iter_next_1be84d0b8:;
			++it;
			goto _iter_begin_1be84d0b8;
		}
		_iter_end_1be84d0b8:;
	};
}



inline void _1acb2b221_checkEnumItemsInt(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _123439_e) {
	jule::Ptr<_1acbc8eb1_Prim> _12353_prim = _1acbc354e_Prim((*((*((*(_123439_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1ac92ae22_IsSigInt((*(_12353_prim))._field_Kind)) {
			_case_begin_1be8332ce:;
			{
				_1be82d73b_checkEnumItemsInt1(_self_, &(_12353_prim), _123439_e);
			}
		}
		else {
			_case_begin_1be82cbad:;
			{
				_1be82d461_checkEnumItemsInt1(_self_, &(_12353_prim), _123439_e);
			}
		}
		_match_end_1be82cb36:;
	};
}



inline void _1acb2b4c9_checkEnumDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab021b_Enum>* _124435_e) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_124435_e))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1acb1d202_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124435_e))), &((*((*(_124435_e))))._field_Ident), false)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124435_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124435_e))))._field_Items.len() == 0LL)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124435_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1be8532ee_checkEnumItemsDup(_self_, (*((*(_124435_e))))._field_Items);
	if (((*((*(_124435_e))))._field_TypeSym != nullptr)) {
		if ((!(_1acb225d0_checkTypeSym(_self_, &((*((*(_124435_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124435_e))))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1acbc8eb1_Prim> _12687_t = _1acbc354e_Prim((*((*((*(_124435_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12687_t == nullptr)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1acbcc47b_IsStr(_12687_t.ptr())) {
			_case_begin_1be85a9aa:;
			{
				_1acb2a572_checkEnumItemsStr(_self_, _124435_e);
			}
		}
		else if (_1ac92b4e9_IsInt(_1acbc9335_Str(_12687_t.ptr()))) {
			_case_begin_1be85a68b:;
			{
				_1acb2b221_checkEnumItemsInt(_self_, _124435_e);
			}
		}
		else {
			_case_begin_1be859a53:;
			{
				_1ac9abb2e_pushErr(_self_, (*((*(_124435_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be859b41:;
	};
}



inline void _1acb2b782_checkTypeEnumDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acab1926_TypeEnum>* _128539_e) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_128539_e))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1acb1d202_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128539_e))), &((*((*(_128539_e))))._field_Ident), false)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128539_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128539_e))))._field_Items.len() == 0LL)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_128539_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128539_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1be861340_checkEnumItemsDup(_self_, (*((*(_128539_e))))._field_Items);
	{
		auto expr = &((*((*(_128539_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be861b37:;
		if (it != expr_end) {
			jule::Ptr<_1acab134e_TypeEnumItem> _129915_item = *it;
			{
				if (((*(_129915_item))._field_TypeSym == nullptr)) {
					_1ac9abb2e_pushErr(_self_, (*_129915_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1be861b37;
				};
				jule::Bool _13044_ok = _1acb225d0_checkTypeSym(_self_, &((*_129915_item.alloc)._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
				if ((!(_13044_ok))) {
					goto _iter_next_1be861b37;
				};
				jule::Ptr<_1acbc8eb1_Prim> _13084_p = _1acbc354e_Prim((*((*_129915_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13084_p != nullptr) && _1acbcc712_IsAny(_13084_p))) {
					_1ac9abb2e_pushErr(_self_, (*_129915_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1be861b37:;
			++it;
			goto _iter_begin_1be861b37;
		}
		_iter_end_1be861b37:;
	};
	if (((*((*(_128539_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1acab134e_TypeEnumItem> _13148_item = (*((*(_128539_e))))._field_Items[0LL];;
		_1acbc0d98_Type _13154_tk = _1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128539_e)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)};;
		if ((((*((*(_13148_item))._field_TypeSym))._field_Type != nullptr) && _1acbc15d5_Equal((*((*(_13148_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1acbc0d98_Type>)((&(_13154_tk))))))) {
			_1ac9abb2e_pushErr(_self_, (*_13148_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acab1c9a_Str((*(_128539_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1acb2ba18_checkEnumDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be86ccb9:;
		if (it != expr_end) {
			jule::Ptr<_1acab021b_Enum> _132615_e = *it;
			{
				_1acb2b4c9_checkEnumDecl(_self_, &(_132615_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be86ccb9:;
			++it;
			goto _iter_begin_1be86ccb9;
		}
		_iter_end_1be86ccb9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb2bc9e_checkTypeEnumDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be86e491:;
		if (it != expr_end) {
			jule::Ptr<_1acab1926_TypeEnum> _133815_e = *it;
			{
				_1acb2b782_checkTypeEnumDecl(_self_, &(_133815_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be86e491:;
			++it;
			goto _iter_begin_1be86e491;
		}
		_iter_end_1be86e491:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb2c0e0_checkDeclGenerics(_1ac9a8c2a_sema* _self_, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _134834_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134834_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be87096a:;
		if (it != expr_end) {
			jule::I32 _13507_i = it - expr->begin();
			jule::Ptr<_1ac9ba91d_GenericDecl> *_135010_g = it;
			{
				if (_1abc2e468_IsIgnoreIdent((*((*(_135010_g))))._field_Ident)) {
					_1ac9abb2e_pushErr(_self_, (*(*(_135010_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1be87096a;
				};
				_julec_label_1be871a48:;
				{
					auto expr = _134834_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be87252c:;
					if (it != expr_end) {
						jule::I32 _13598_j = it - expr->begin();
						jule::Ptr<_1ac9ba91d_GenericDecl> *_135911_ct = it;
						{
							{
								
								if ((_13598_j >= _13507_i)) {
									_case_begin_1be873187:;
									{
										goto _iter_end_1be87252c;
									}
								}
								else if (((*(*(_135010_g)).alloc)._field_Ident == (*((*(_135911_ct))))._field_Ident)) {
									_case_begin_1be873220:;
									{
										_1ac9abb2e_pushErr(_self_, (*(*(_135010_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_135010_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1be87252c;
									}
								}
								_match_end_1be873077:;
							};
						}
						_iter_next_1be87252c:;
						++it;
						_13598_j++;
						goto _iter_begin_1be87252c;
					}
					_iter_end_1be87252c:;
				};
			}
			_iter_next_1be87096a:;
			++it;
			_13507_i++;
			goto _iter_begin_1be87096a;
		}
		_iter_end_1be87096a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb2c431_checkFnDeclParamsDup(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa2351_Fn>* _137537_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1be8712ea:;
	{
		auto expr = &((*((*(_137537_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be873d7a:;
		if (it != expr_end) {
			jule::I32 _13787_i = it - expr->begin();
			jule::Ptr<_1acaa087c_Param> *_137810_p = it;
			{
				{
					auto expr = &((*((*(_137537_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be875db0:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ba91d_GenericDecl> *_138011_g = it;
						{
							if (((*((*(_137810_p))))._field_Ident == (*((*(_138011_g))))._field_Ident)) {
								__jule_func_result=false;
								_1ac9abb2e_pushErr(_self_, (*(*(_137810_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137810_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1be873d7a;
							};
						}
						_iter_next_1be875db0:;
						++it;
						goto _iter_begin_1be875db0;
					}
					_iter_end_1be875db0:;
				};
				_julec_label_1be877e4a:;
				{
					auto expr = &((*((*(_137537_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be876388:;
					if (it != expr_end) {
						jule::I32 _13908_j = it - expr->begin();
						jule::Ptr<_1acaa087c_Param> *_139011_jp = it;
						{
							{
								
								if ((_13908_j >= _13787_i)) {
									_case_begin_1be878a0b:;
									{
										goto _iter_end_1be876388;
									}
								}
								else if (_1abc2e468_IsIgnoreIdent((*(*(_137810_p)).alloc)._field_Ident) || _1abc2e468_IsIgnoreIdent((*((*(_139011_jp))))._field_Ident) || _1abc2e732_IsAnonIdent((*(*(_137810_p)).alloc)._field_Ident) || _1abc2e732_IsAnonIdent((*(*(_139011_jp)).alloc)._field_Ident)) {
									_case_begin_1be878a94:;
									{
										goto _iter_end_1be876388;
									}
								}
								else if (((*(*(_137810_p)).alloc)._field_Ident == (*((*(_139011_jp))))._field_Ident)) {
									_case_begin_1be878b0a:;
									{
										__jule_func_result=false;
										_1ac9abb2e_pushErr(_self_, (*(*(_137810_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137810_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1be873d7a;
									}
								}
								_match_end_1be8788a7:;
							};
						}
						_iter_next_1be876388:;
						++it;
						_13908_j++;
						goto _iter_begin_1be876388;
					}
					_iter_end_1be876388:;
				};
			}
			_iter_next_1be873d7a:;
			++it;
			_13787_i++;
			goto _iter_begin_1be873d7a;
		}
		_iter_end_1be873d7a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb2c772_checkFnDeclResultDup(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa2351_Fn>* _141237_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1acaa2807_IsVoid((*(_141237_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(*((*(_141237_f))))._field_Result.alloc)._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be87be71:;
		if (it != expr_end) {
			jule::I32 _14197_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> *_141910_v = it;
			{
				if ((_1abc2e468_IsIgnoreIdent((*((*(_141910_v))))._field_Kind) || _1abc2e732_IsAnonIdent((*(*(_141910_v)).alloc)._field_Kind))) {
					goto _iter_next_1be87be71;
				};
				{
					auto expr = &((*((*(_141237_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be87d5d2:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ba91d_GenericDecl> *_142411_g = it;
						{
							if (((*(*(_141910_v)).alloc)._field_Kind == (*((*(_142411_g))))._field_Ident)) {
								goto _julec_label_1be87ca10;
							};
						}
						_iter_next_1be87d5d2:;
						++it;
						goto _iter_begin_1be87d5d2;
					}
					_iter_end_1be87d5d2:;
				};
				{
					auto expr = &((*((*(_141237_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be87d9ab:;
					if (it != expr_end) {
						jule::Ptr<_1acaa087c_Param> *_143011_p = it;
						{
							if (((*(*(_141910_v)).alloc)._field_Kind == (*((*(_143011_p))))._field_Ident)) {
								goto _julec_label_1be87ca10;
							};
						}
						_iter_next_1be87d9ab:;
						++it;
						goto _iter_begin_1be87d9ab;
					}
					_iter_end_1be87d9ab:;
				};
				_julec_label_1be8801d8:;
				{
					auto expr = &((*((*((*(_141237_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be88055c:;
					if (it != expr_end) {
						jule::I32 _14388_j = it - expr->begin();
						jule::Ptr<_1abc2ba81_Token> *_143811_jv = it;
						{
							{
								
								if ((_14388_j >= _14197_i)) {
									_case_begin_1be881173:;
									{
										goto _iter_end_1be88055c;
									}
								}
								else if (((*((*(_143811_jv))))._field_Kind == (*(*(_141910_v)).alloc)._field_Kind)) {
									_case_begin_1be88120b:;
									{
										goto _julec_label_1be87ca10;
									}
								}
								_match_end_1be881063:;
							};
						}
						_iter_next_1be88055c:;
						++it;
						_14388_j++;
						goto _iter_begin_1be88055c;
					}
					_iter_end_1be88055c:;
				};
				goto _iter_next_1be87be71;
				_julec_label_1be87ca10:;
				_1ac9abb2e_pushErr(_self_, (*(_141910_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_141910_v)).alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1be87be71:;
			++it;
			_14197_i++;
			goto _iter_begin_1be87be71;
		}
		_iter_end_1be87be71:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb2cab3_checkFnVariadicParam(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _145742_f) {
	if (((*((*(_145742_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1acaa087c_Param> _14617_param = (*((*(_145742_f))))._field_Params[((*((*(_145742_f))))._field_Params.len() - 1LL)];;
	if (((*(_14617_param))._field_Variadic && (*_14617_param.alloc)._field_Reference)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*_14617_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1acb2cd6b_checkFnDeclPrototype(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _147042_f) {
	if (((*((*(_147042_f))))._field_Exceptional && (*((*(_147042_f))))._field_Binded)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_147042_f))))._field_Exceptional) {
		if (_1acaa2d24_IsEntryPoint((*(_147042_f)).ptr())) {
			_1ac9abb2e_pushErr(_self_, (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1acaa30aa_IsInit((*(_147042_f)).ptr())) {
			_1ac9abb2e_pushErr(_self_, (*((*(_147042_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1acb2c0e0_checkDeclGenerics(_self_, &((*((*(_147042_f))))._field_Generics))))) {
			_case_begin_1be887db1:;
		}
		else if ((!(_1acb2c431_checkFnDeclParamsDup(_self_, _147042_f)))) {
			_case_begin_1be887e27:;
		}
		else if ((!(_1acb2c772_checkFnDeclResultDup(_self_, _147042_f)))) {
			_case_begin_1be887e8d:;
		}
		else if ((!(_1acb2cab3_checkFnVariadicParam(_self_, _147042_f)))) {
			_case_begin_1be888004:;
		}
		_match_end_1be886112:;
	};
}



inline jule::Bool _1acb2d322_catchTraitInheritCycle(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait> _149239_t1, jule::Ptr<_1acaaca65_Trait> _149255_t2, _1a6a5cb3c_Builder* _149272_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*_149255_t2.alloc)._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be88a589:;
		if (it != expr_end) {
			jule::Ptr<_1acbc85a9_TypeSym> _149415_i = *it;
			{
				if (((*(_149415_i))._field_Type == nullptr)) {
					goto _iter_next_1be88a589;
				};
				jule::Ptr<_1acaaca65_Trait> _14988_t3 = _1acbc4d58_Trait((*_149415_i.alloc)._field_Type.ptr());;
				if ((_149239_t1 == _14988_t3)) {
					_1acb330a2_pushCycleError(_self_.ptr(), &((*(_149255_t2))._field_Ident), &((*(_14988_t3))._field_Ident), _149272_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1acb2d322_catchTraitInheritCycle(_self_, _149239_t1, _14988_t3, _149272_message)))) {
					_1acb330a2_pushCycleError(_self_, &((*_149255_t2.alloc)._field_Ident), &((*_14988_t3.alloc)._field_Ident), _149272_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be88a589:;
			++it;
			goto _iter_begin_1be88a589;
		}
		_iter_end_1be88a589:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb2d663__checkTraitDeclInherits(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _151145_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_151145_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be88dd51:;
		if (it != expr_end) {
			jule::I32 _15138_i = it - expr->begin();
			jule::Ptr<_1acbc85a9_TypeSym> _151315_it = *it;
			{
				if ((!(_1acb225d0_checkTypeSym(_self_, &(_151315_it), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1be88dd51;
				};
				jule::Ptr<_1acaaca65_Trait> _15188_t2 = _1acbc4d58_Trait((*(_151315_it))._field_Type.ptr());;
				if ((_15188_t2 == nullptr)) {
					_1ac9abb2e_pushErr(_self_, (*((*_151315_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151145_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_151315_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be88dd51;
				};
				{
					auto expr = &((*((*(_151145_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be890c54:;
					if (it != expr_end) {
						jule::I32 _15248_j = it - expr->begin();
						jule::Ptr<_1acbc85a9_TypeSym> _152411_it2 = *it;
						{
							if ((_15248_j >= _15138_i)) {
								goto _iter_end_1be890c54;
							};
							if ((((*(_152411_it2))._field_Type != nullptr) && _1acbc15d5_Equal((*(_151315_it))._field_Type, (*_152411_it2.alloc)._field_Type))) {
								_1ac9abb2e_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15188_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1be890c54;
							};
						}
						_iter_next_1be890c54:;
						++it;
						_15248_j++;
						goto _iter_begin_1be890c54;
					}
					_iter_end_1be890c54:;
				};
				if (((*(_151145_t)) == _15188_t2)) {
					_1ac9abb2e_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_151145_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1a6a5cb3c_Builder _15389_message = static__1a6a5d489_New(64LL);;
					__jule_func_result=(__jule_func_result && _1acb2d322_catchTraitInheritCycle(_self_, (*(_151145_t)), _15188_t2, &(_15389_message)));
					if ((_1a6a5e930_Len(&_15389_message) > 0LL)) {
						jule::Str _154110_errMsg = _1a6a5e49b_Str(&_15389_message);;
						_1a6a5e699_Clear(&_15389_message);
						_1acb330a2_pushCycleError(_self_, &((*((*(_151145_t))))._field_Ident), &((*(_15188_t2))._field_Ident), &(_15389_message));
						_154110_errMsg+=_1a6a5e49b_Str(&_15389_message);
						_1ac9abb2e_pushErr(_self_, (*(*(_151315_it))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_154110_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1be88dd51:;
			++it;
			_15138_i++;
			goto _iter_begin_1be88dd51;
		}
		_iter_end_1be88dd51:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1acb2d91b_checkTraitDeclInherits(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _155244_t) {
	{
		auto expr = &((*((*(_155244_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be88e615:;
		if (it != expr_end) {
			jule::I32 _15538_i = it - expr->begin();
			jule::Ptr<_1acbc85a9_TypeSym> _155315_it = *it;
			{
				jule::Ptr<_1acaaca65_Trait> _15548_t1 = _1acbc4d58_Trait((*(_155315_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_155244_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be89a7a8:;
					if (it != expr_end) {
						jule::I32 _15559_j = it - expr->begin();
						jule::Ptr<_1acbc85a9_TypeSym> _155516_it2 = *it;
						{
							if ((_15559_j == _15538_i)) {
								goto _iter_next_1be89a7a8;
							};
							jule::Ptr<_1acaaca65_Trait> _15599_t2 = _1acbc4d58_Trait((*(_155516_it2))._field_Type);;
							{
								auto expr = &((*(_15548_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be89c0d4:;
								if (it != expr_end) {
									jule::Ptr<_1acaa2351_Fn> _156017_t1m = *it;
									{
										jule::Ptr<_1acaa2351_Fn> _156110_t2m = _1acaad747_FindMethod(_15599_t2.ptr(), (*(_156017_t1m))._field_Ident);;
										if ((_156110_t2m == nullptr)) {
											goto _iter_next_1be89c0d4;
										};
										jule::Ptr<_1acaa540e_FnIns> _15656_t1f = _1acb26a02_getTraitCheckFnKind(_self_, &(_156017_t1m));;
										jule::Ptr<_1acaa540e_FnIns> _15666_t2f = _1acb26a02_getTraitCheckFnKind(_self_, &(_156110_t2m));;
										if ((!(_1acaa63aa_equalTrait(_15656_t1f, &(_15666_t2f))))) {
											_1ac9abb2e_pushErr(_self_, (*((*_155315_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_155244_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15599_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1acaa72e0_GetKindStr(_15656_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1acaa72e0_GetKindStr(_15666_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1be89c0d4:;
									++it;
									goto _iter_begin_1be89c0d4;
								}
								_iter_end_1be89c0d4:;
							};
						}
						_iter_next_1be89a7a8:;
						++it;
						_15559_j++;
						goto _iter_begin_1be89a7a8;
					}
					_iter_end_1be89a7a8:;
				};
			}
			_iter_next_1be88e615:;
			++it;
			_15538_i++;
			goto _iter_begin_1be88e615;
		}
		_iter_end_1be88e615:;
	};
}



inline void _1acb2dbc4_checkTraitDeclMethod(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _157742_f) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_157742_f))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_157742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1abc2e732_IsAnonIdent((*((*(_157742_f))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_157742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157742_f))))._field_sema=_self_;
	_1acb2cd6b_checkFnDeclPrototype(_self_, _157742_f);
	jule::Ptr<_1acaa540e_FnIns> _15857_ins = _1acaa3ae4_instance((*(_157742_f)));;
	_1acb28350_reloadFnInsTypes(_self_, _15857_ins);
	(*(_15857_ins))._field_reloaded=true;
	_1acaa3e02_appendInstance((*(_157742_f)).ptr(), &(_15857_ins));
}



inline void _1acb2de7c_checkTraitDeclMethods(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _159143_t) {
	{
		auto expr = &((*((*(_159143_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8a462a:;
		if (it != expr_end) {
			jule::I32 _15928_i = it - expr->begin();
			jule::Ptr<_1acaa2351_Fn> _159215_f = *it;
			{
				_1acb2dbc4_checkTraitDeclMethod(_self_, &(_159215_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1acaaddc9_findMethodInherit((*(_159143_t)).ptr(), &((*(_159215_f))._field_Ident)) != nullptr)) {
					_1ac9abb2e_pushErr(_self_, (*_159215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1be8a462a;
				};
				_julec_label_1be8a752e:;
				{
					auto expr = &((*((*(_159143_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be8a796e:;
					if (it != expr_end) {
						jule::I32 _16088_j = it - expr->begin();
						jule::Ptr<_1acaa2351_Fn> _160811_jf = *it;
						{
							{
								
								if ((_16088_j >= _15928_i)) {
									_case_begin_1be8a8585:;
									{
										goto _iter_end_1be8a796e;
									}
								}
								else if (((*_159215_f.alloc)._field_Ident == (*(_160811_jf))._field_Ident)) {
									_case_begin_1be8a861d:;
									{
										_1ac9abb2e_pushErr(_self_, (*_159215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_159215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1be8a796e;
									}
								}
								_match_end_1be8a8475:;
							};
						}
						_iter_next_1be8a796e:;
						++it;
						_16088_j++;
						goto _iter_begin_1be8a796e;
					}
					_iter_end_1be8a796e:;
				};
			}
			_iter_next_1be8a462a:;
			++it;
			_15928_i++;
			goto _iter_begin_1be8a462a;
		}
		_iter_end_1be8a462a:;
	};
}



inline void _1acb2e235_checkTraitDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaaca65_Trait>* _162736_t) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_162736_t))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_162736_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1acb1d202_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162736_t))), &((*((*(_162736_t))))._field_Ident), false)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_162736_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162736_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1acb2d91b_checkTraitDeclInherits(_self_, _162736_t);
	_1acb2de7c_checkTraitDeclMethods(_self_, _162736_t);
}



inline jule::Bool _1acb2e4bb_checkTraitDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8ad733:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _164115_t = *it;
			{
				_1acb2e235_checkTraitDecl(_self_, &(_164115_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be8ad733:;
			++it;
			goto _iter_begin_1be8ad733;
		}
		_iter_end_1be8ad733:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb2e8b7_checkTraitImplMethods(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaaca65_Trait>* _165142_base, jule::Ptr<_1ac956447_Impl>* _165157_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165157_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8b0218:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> *_165310_f = it;
			{
				if ((_1acaad747_FindMethod((*(_165142_base)).ptr(), (*((*(_165310_f))))._field_Ident) == nullptr)) {
					_1ac9abb2e_pushErr(_self_, (*(*(_165310_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165142_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165310_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1be8b0218:;
			++it;
			goto _iter_begin_1be8b0218;
		}
		_iter_end_1be8b0218:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb2ecb3_implToStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _166234_dest, jule::Ptr<_1ac956447_Impl>* _166254_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_166254_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8b2a89:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _166615_f = *it;
			{
				if (((_1ac9cecc8_FindMethod((*(_166234_dest)).ptr(), (*(_166615_f))._field_Ident, (*_166615_f.alloc)._field_Statically) != nullptr) || (_1ac9d045a_FindField((*(_166234_dest)).ptr(), (*_166615_f.alloc)._field_Ident) != nullptr))) {
					_1ac9abb2e_pushErr(_self_.ptr(), (*_166615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166234_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be8b2a89;
				};
				if ((((*((*(_166234_dest))))._field_Generics.len() > 0LL) && ((*_166615_f.alloc)._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166615_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be8b5bad:;
						if (it != expr_end) {
							jule::Ptr<_1ac9ba91d_GenericDecl> _167412_fg = *it;
							{
								{
									auto expr = &((*((*(_166234_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1be8b66a3:;
									if (it != expr_end) {
										jule::Ptr<_1ac9ba91d_GenericDecl> _167513_dg = *it;
										{
											if (((*(_167412_fg))._field_Ident == (*(_167513_dg))._field_Ident)) {
												_1ac9abb2e_pushErr(_self_, (*_167412_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1be8b66a3:;
										++it;
										goto _iter_begin_1be8b66a3;
									}
									_iter_end_1be8b66a3:;
								};
							}
							_iter_next_1be8b5bad:;
							++it;
							goto _iter_begin_1be8b5bad;
						}
						_iter_end_1be8b5bad:;
					};
				};
				_1acb1d565_checkDirectives(_self_, &((*_166615_f.alloc)._field_Directives), jule::Any(_166615_f, &__jule_any_type10));
				(*_166615_f.alloc)._field_sema=_self_;
				(*_166615_f.alloc)._field_Owner=(*(_166234_dest));
				{ jule::Slice<jule::Ptr<_1acaa2351_Fn>> &__jule_push_dest = (*((*(_166234_dest))))._field_Methods; __jule_push_dest.push(_166615_f); };
			}
			_iter_next_1be8b2a89:;
			++it;
			goto _iter_begin_1be8b2a89;
		}
		_iter_end_1be8b2a89:;
	};
	{
		auto expr = &((*((*(_166254_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8b2e1e:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _169115_v = *it;
			{
				;
				if (((_1ac9cecc8_FindMethod((*(_166234_dest)).ptr(), (*(_169115_v))._field_Ident, true) != nullptr) || (_1ac9d0119_FindStatic((*(_166234_dest)).ptr(), (*_169115_v.alloc)._field_Ident) != nullptr))) {
					_1ac9abb2e_pushErr(_self_, (*_169115_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_166234_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169115_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1be8b2e1e;
				};
				{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*((*(_166234_dest))))._field_Statics; __jule_push_dest.push(_169115_v); };
			}
			_iter_next_1be8b2e1e:;
			++it;
			goto _iter_begin_1be8b2e1e;
		}
		_iter_end_1be8b2e1e:;
	};
	return __jule_func_result;;
}



inline void _1acb3006b_implTrait(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _170431_decl) {
	jule::Ptr<_1acbc0d98_Type> _17057_base_t = _1acb236be_selectType(_self_, &((*((*(_170431_decl))))._field_Base));;
	if ((_17057_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1acaaca65_Trait> _17097_base = _1acbc4d58_Trait(_17057_base_t.ptr());;
	if ((_17097_base == nullptr)) {
		_1ac9abb2e_pushErr(_self_, (*((*((*(_170431_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str(_17057_base_t.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acbc0d98_Type> _17167_destT = _1acb236be_selectType(_self_, &((*((*(_170431_decl))))._field_Dest));;
	if ((_17167_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _17207_destS = _1acbc4ac2_Struct(_17167_destT.ptr());;
	if ((_17207_destS == nullptr)) {
		_1ac9abb2e_pushErr(_self_, (*((*((*(_170431_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str(_17167_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac9ce129_Struct> _17277_dest = (*(_17207_destS))._field_Decl;;
	if ((_1abc332b3_Dir((*((*(_17277_dest))._field_Token))._field_File.ptr()) != _1abc332b3_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_170431_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1acb3b253_pushImplemented(_17097_base, &(_17277_dest));
	_1acb3b53e_pushImplements(&(_17277_dest), _17097_base);
	if (((*((*(_170431_decl))))._field_Statics.len() > 0LL)) {
		_1ac9abb2e_pushErr(_self_, (*((*((*(_170431_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1acb2e8b7_checkTraitImplMethods(_self_, &(_17097_base), _170431_decl)))) {
			_case_begin_1bea36db7:;
		}
		else if ((!(_1acb2ecb3_implToStruct(_self_, &(_17277_dest), _170431_decl)))) {
			_case_begin_1bea36e2d:;
		}
		_match_end_1bea35e0a:;
	};
}



inline void _1acb30324_implStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _174732_decl) {
	jule::Ptr<_1acbc0d98_Type> _17487_destT = _1acb236be_selectType(_self_, &((*((*(_174732_decl))))._field_Dest));;
	if ((_17487_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _17527_destS = _1acbc4ac2_Struct(_17487_destT.ptr());;
	if ((_17527_destS == nullptr)) {
		_1ac9abb2e_pushErr(_self_, (*((*((*(_174732_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str(_17487_destT.ptr()), &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac9ce129_Struct> _17597_dest = (*(_17527_destS))._field_Decl;;
	if ((_1abc332b3_Dir((*((*(_17597_dest))._field_Token))._field_File.ptr()) != _1abc332b3_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_174732_decl))))._field_Dest.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1acb2ecb3_implToStruct(_self_, &(_17597_dest), _174732_decl)))) {
			_case_begin_1bea3cc36:;
		}
		_match_end_1bea3b2ea:;
	};
}



inline void _1acb305cc_implImpl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac956447_Impl>* _177130_decl) {
	{
		
		if (_1ac956843_IsTraitImpl((*(_177130_decl)).ptr())) {
			_case_begin_1bea3d7c5:;
			{
				_1acb3006b_implTrait(_self_, _177130_decl);
			}
		}
		else if (_1ac956ac9_IsStructImpl((*(_177130_decl)).ptr())) {
			_case_begin_1bea3d86e:;
			{
				_1acb30324_implStruct(_self_, _177130_decl);
			}
		}
		_match_end_1bea3d6a4:;
	};
}



inline void _1acb30940_checkVarDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _178234_decl, jule::Trait _178250_l) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_178234_decl))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1acb3dab3_IsTypeInferred((*(_178234_decl)).ptr())) {
		if ((!(_1acb3d82c_IsInitialized((*(_178234_decl)).ptr())))) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1ac979855_ReferenceStack> _17928_refers = static_cast<jule::Ptr<_1ac979855_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _178250_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4)) {
				_case_begin_1bea42994:;
				{
					_17928_refers=(*((*(_178234_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
				_case_begin_1bea42e6c:;
				{
					_17928_refers=_1ac966ab7_getOwnerRefers(_178250_l.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1bea42a82:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1799:5"));;
				}
			}
			_match_end_1bea42a1b:;
		};
		(*((*((*(_178234_decl))))._field_TypeSym))._field_Type=_1acb22a86_checkTypeSymRefers(_self_, &((*(*((*(_178234_decl))))._field_TypeSym.alloc)._field_Decl), _178250_l, _17928_refers);
	};
	if ((*((*(_178234_decl))))._field_Reference) {
		if ((*((*(_178234_decl))))._field_Constant) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Statically) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1acb3d82c_IsInitialized((*(_178234_decl)).ptr())))) {
		if ((*((*(_178234_decl))))._field_Constant) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Statically) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_178234_decl))))._field_Reference) {
			_1ac9abb2e_pushErr(_self_, (*((*(_178234_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1acb30be8_checkGlobalVarDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _182840_decl) {
	if (_1acb1d202_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182840_decl))), &((*((*(_182840_decl))))._field_Ident), (*((*(_182840_decl))))._field_Binded)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182840_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182840_decl))))._field_Binded && (*((*(_182840_decl))))._field_Constant)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182840_decl))))._field_Binded)) && (!((*((*(_182840_decl))))._field_Constant))) && (!((*((*(_182840_decl))))._field_Statically)))) {
		_1ac9abb2e_pushErr(_self_, (*((*(_182840_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1acb1d565_checkDirectives(_self_, &((*((*(_182840_decl))))._field_Directives), jule::Any((*(_182840_decl)), &__jule_any_type7));
	_1acb30940_checkVarDecl(_self_, _182840_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
}



inline jule::Bool _1acb30e7e_checkGlobalDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea4eb5a:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _184615_decl = *it;
			{
				_1acb30be8_checkGlobalVarDecl(_self_, &(_184615_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bea4eb5a:;
			++it;
			goto _iter_begin_1bea4eb5a;
		}
		_iter_end_1bea4eb5a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb3137a_checkStructTraitImpl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _185642_strct, jule::Ptr<_1acaaca65_Trait>* _185663_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185663_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea51541:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _185715_tf = *it;
			{
				jule::Bool _18588_exist = false;;
				jule::Ptr<_1acaa2351_Fn> _18598_sf = _1ac9cecc8_FindMethod((*(_185642_strct)).ptr(), (*(_185715_tf))._field_Ident, (*_185715_tf.alloc)._field_Statically);;
				jule::Ptr<_1acaa540e_FnIns> _18604_tfK = _1acb26a02_getTraitCheckFnKind(_self_, &(_185715_tf));;
				if ((_18598_sf != nullptr)) {
					jule::Ptr<_1acaa540e_FnIns> _18629_sfK = _1acb26a02_getTraitCheckFnKind(_self_, &(_18598_sf));;
					if ((_18629_sfK != nullptr)) {
						_18588_exist=_1acaa63aa_equalTrait(_18604_tfK, &(_18629_sfK));
					};
				};
				if (_18588_exist) {
					jule::Ptr<_1abc419b9_Directive> _18685_d = _1acbb7620_findDirective(&((*_18598_sf.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18685_d != nullptr)) {
						_1ac9abb2e_pushErr(_self_, (*_18685_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1ac9abb2e_pushErr(_self_, (*((*(_185642_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185663_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1acaa72e0_GetKindStr(_18604_tfK, true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1bea51541:;
			++it;
			goto _iter_begin_1bea51541;
		}
		_iter_end_1bea51541:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb316bb_checkStructImpls(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _188238_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188238_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea57954:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _188415_trt = *it;
			{
				__jule_func_result=(_1acb3137a_checkStructTraitImpl(_self_, _188238_s, &(_188415_trt)) && __jule_func_result);
			}
			_iter_next_1bea57954:;
			++it;
			goto _iter_begin_1bea57954;
		}
		_iter_end_1bea57954:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1acb31a0c_checkStructFields(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _189039_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_189039_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea58dea:;
		if (it != expr_end) {
			jule::Ptr<_1ac9cb203_Field> _189215_f = *it;
			{
				(*(_189215_f))._field_Owner=(*(_189039_st));
				{
					auto expr = &((*((*(_189039_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea59ba9:;
					if (it != expr_end) {
						jule::Ptr<_1ac9cb203_Field> _189411_cf = *it;
						{
							if ((_189215_f == _189411_cf)) {
								goto _iter_end_1bea59ba9;
							} else if (((*_189215_f.alloc)._field_Ident == (*(_189411_cf))._field_Ident)) {
								_1ac9abb2e_pushErr(_self_.ptr(), (*_189215_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_189215_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bea59ba9:;
						++it;
						goto _iter_begin_1bea59ba9;
					}
					_iter_end_1bea59ba9:;
				};
			}
			_iter_next_1bea58dea:;
			++it;
			goto _iter_begin_1bea58dea;
		}
		_iter_end_1bea58dea:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1acb31cb5_checkStructDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _190737_s) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_190737_s))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_190737_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1acb1d202_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190737_s))), &((*((*(_190737_s))))._field_Ident), (*((*(_190737_s))))._field_Binded)) {
		_1ac9abb2e_pushErr(_self_, (*((*(_190737_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190737_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1acb1d565_checkDirectives(_self_, &((*((*(_190737_s))))._field_Directives), jule::Any((*(_190737_s)), &__jule_any_type9));
	{
		
		if ((!(_1acb2c0e0_checkDeclGenerics(_self_, &((*((*(_190737_s))))._field_Generics))))) {
			_case_begin_1bea5eede:;
		}
		else if ((!(_1acb31a0c_checkStructFields(_self_, _190737_s)))) {
			_case_begin_1bea60055:;
		}
		else if ((!(_1acb316bb_checkStructImpls(_self_, _190737_s)))) {
			_case_begin_1bea600bb:;
		}
		else if ((!(_1acb328ed_checkFuncDeclsBy(_self_, &((*((*(_190737_s))))._field_Methods))))) {
			_case_begin_1bea60132:;
		}
		_match_end_1bea5edac:;
	};
}



inline jule::Bool _1acb3204b_checkStructDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea62497:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _192715_s = *it;
			{
				_1acb31cb5_checkStructDecl(_self_, &(_192715_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bea62497:;
			++it;
			goto _iter_begin_1bea62497;
		}
		_iter_end_1bea62497:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1acb32304_checkAnonFuncDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _193739_f) {
	(*((*(_193739_f))))._field_sema=_self_;
	_1acb2cd6b_checkFnDeclPrototype(_self_, _193739_f);
}



inline void _1acb325ac_checkFuncDecl(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _194235_f) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_194235_f))))._field_Ident)) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1acaa3341_IsAnon((*(_194235_f)).ptr())) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1acb1d565_checkDirectives(_self_, &((*((*(_194235_f))))._field_Directives), jule::Any((*(_194235_f)), &__jule_any_type10));
	_1acb32304_checkAnonFuncDecl(_self_, _194235_f);
	if ((((*((*(_194235_f))))._field_Owner == nullptr) && _1acb1d202_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_194235_f))), &((*((*(_194235_f))))._field_Ident), (*((*(_194235_f))))._field_Binded))) {
		if ((*((*(_194235_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1acaa2351_Fn> _19545_init = _1ac9aa2e2_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19545_init != nullptr)) {
				return;;
			};
		};
		_1ac9abb2e_pushErr(_self_, (*((*(_194235_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194235_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1acb328ed_checkFuncDeclsBy(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _196438_funcs) {
	{
		auto expr = _196438_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea69e3e:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _196515_f = *it;
			{
				_1acb325ac_checkFuncDecl(_self_, &(_196515_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bea69e3e:;
			++it;
			goto _iter_begin_1bea69e3e;
		}
		_iter_end_1bea69e3e:;
	};
	return true;;
}



inline jule::Bool _1acb32b84_checkFuncDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1acb328ed_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1acb330a2_pushCycleError(_1ac9a8c2a_sema* _self_, jule::Str* _198027_st1, jule::Str* _198038_st2, _1a6a5cb3c_Builder* _198053_message) {
	;
	jule::Str _19823_refersTo = _1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_198027_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_198038_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19833_m = _1a6a5e49b_Str(_198053_message);;
	({
		auto except = _1a6a5db1b_WriteStr(_198053_message, _1a8e45b27_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_198053_message, _19823_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1985:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_198053_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1986:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_198053_message, _19833_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1987:3"));
		(except.result);
	});
}



inline void _1acb33756_checkPackageDecls(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea71b5a:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _200715_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _200715_f);
				if ((!(_1acb2a011_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bea71b5a:;
			++it;
			goto _iter_begin_1bea71b5a;
		}
		_iter_end_1bea71b5a:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea72133:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _201415_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_, _201415_f);
				if ((!(_1acb2e4bb_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bea72133:;
			++it;
			goto _iter_begin_1bea72133;
		}
		_iter_end_1bea72133:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea73101:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _202115_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_, _202115_f);
				if ((!(_1acb30e7e_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bea73101:;
			++it;
			goto _iter_begin_1bea73101;
		}
		_iter_end_1bea73101:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea74146:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _202815_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_, _202815_f);
				{
					
					if ((!(_1acb32b84_checkFuncDecls(_self_)))) {
						_case_begin_1bea75862:;
					}
					else if ((!(_1acb3204b_checkStructDecls(_self_)))) {
						_case_begin_1bea7590b:;
					}
					else {
						_case_begin_1bea752ac:;
						{
							goto _iter_next_1bea74146;
						}
					}
					_match_end_1bea757b8:;
				};
				return;;
			}
			_iter_next_1bea74146:;
			++it;
			goto _iter_begin_1bea74146;
		}
		_iter_end_1bea74146:;
	};
}



inline void _1acb33ab9_checkDataForTypeInference(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acb8cded_Data>* _204042_d, jule::Ptr<_1abc2ba81_Token>* _204053_errToken) {
	{
		
		if (_1acb8d31b_IsNil((*(_204042_d)).ptr())) {
			_case_begin_1bea76973:;
			{
				_1ac9abb2e_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1acb8d5a2_IsVoid((*(_204042_d)).ptr())) {
			_case_begin_1bea76a1c:;
			{
				_1ac9abb2e_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_204042_d))))._field_Type))._field_Variadic) {
			_case_begin_1bea76a83:;
			{
				_1ac9abb2e_pushErr(_self_, (*(_204053_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bea76841:;
	};
}



inline void _1acb33d72_checkVarValue(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _205235_v) {
	if (_1acb3dab3_IsTypeInferred((*(_205235_v)).ptr())) {
		(*((*(_205235_v))))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Type});
		_1acb33ab9_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1acb29263_checkValidityForInitExpr(_self_, (*((*(_205235_v))))._field_Mutable, (*((*(_205235_v))))._field_Reference, &((*((*((*(_205235_v))))._field_TypeSym))._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205235_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1acbd07d1_Arr> _20658_arr = _1acbc431e_Arr((*((*((*(_205235_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20658_arr != nullptr)) {
			if ((*_20658_arr.alloc)._field_Auto) {
				jule::Ptr<_1acbd07d1_Arr> _20686_dataArr = _1acbc431e_Arr((*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20686_dataArr != nullptr)) {
					(*_20658_arr.alloc)._field_N=(*_20686_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1acb249cd_checkAssignType(_self_, (*((*(_205235_v))))._field_Reference, &((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), (*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_205235_v))))._field_Refers)) {
			_1acb29263_checkValidityForInitExpr(_self_, (*((*(_205235_v))))._field_Mutable, (*((*(_205235_v))))._field_Reference, &((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_205235_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_205235_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if (((*((*(_205235_v))))._field_Reference && (!(_1acbdcca5_isValidForRef(&((*((*((*(_205235_v))))._field_TypeSym))._field_Type)))))) {
		_1ac9abb2e_pushErr(_self_.ptr(), (*((*(_205235_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot points to type @", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	};
	if ((*((*(_205235_v))))._field_Constant) {
		if (((!(_1acb8d838_IsConst((*((*((*(_205235_v))))._field_Value))._field_Data.ptr()))) && (!(_1acbc560b_comptime((*(*((*((*(_205235_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1ac9abb2e_pushErr(_self_, (*((*(*((*(_205235_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_205235_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_205235_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1acbc5375_Tup((*((*((*(_205235_v))))._field_TypeSym))._field_Type) != nullptr)) {
		(*(*((*(_205235_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1acb341d5_evalVarValue(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _210534_decl, jule::Trait _210550_l) {
	if ((!(_1acb3d82c_IsInitialized((*(_210534_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1acb8edbc_eval> _21107_eval = static_cast<jule::Ptr<_1acb8edbc_eval>>(nullptr);;
	if (((*((*(_210534_decl))))._field_TypeSym != nullptr)) {
		_21107_eval=_1acb23b75_evalpd(_self_, _210550_l, (*(*((*(_210534_decl))))._field_TypeSym.alloc)._field_Type, (*(_210534_decl)));
	} else {
		_21107_eval=_1acb23b75_evalpd(_self_, _210550_l, nullptr, (*(_210534_decl)));
	};
	(*(_21107_eval))._field_target._field_mutable=(*((*(_210534_decl))))._field_Mutable;
	(*((*((*(_210534_decl))))._field_Value))._field_Data=_1acbadbaa_evalExpr(_21107_eval, (*(*((*(_210534_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1acb34548_checkVar(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acb3d420_Var>* _212230_decl, jule::Trait _212246_l) {
	_1acb341d5_evalVarValue(_self_, _212230_decl, _212246_l);
	if (((*((*((*(_212230_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1acb33d72_checkVarValue(_self_, _212230_decl);
}



inline void _1acb34746_checkGlobals(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea8de41:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _213215_decl = *it;
			{
				if (((*(_213215_decl))._field_Binded || (*_213215_decl.alloc)._field_Used)) {
					goto _iter_next_1bea8de41;
				};
				_1acb34548_checkVar(_self_, &(_213215_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
			}
			_iter_next_1bea8de41:;
			++it;
			goto _iter_begin_1bea8de41;
		}
		_iter_end_1bea8de41:;
	};
}



inline jule::Ptr<_1acaa540e_FnIns> _1acb34b42_readyToCheckFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _214536_s, jule::Ptr<_1acaa2351_Fn>* _214556_f) {
	jule::Ptr<_1acaa540e_FnIns> _21467_ins = _1acaa3ae4_instance((*(_214556_f)));;
	if (((*((*(_214556_f))))._field_Instances.len() != 0LL)) {
		return _21467_ins;;
	};
	(*(_21467_ins))._field_Owner=(*(_214536_s));
	_1acaa3e02_appendInstance((*(_214556_f)).ptr(), &(_21467_ins));
	(*_21467_ins.alloc)._field_reloaded=true;
	if (_1acb28350_reloadFnInsTypes(_self_, _21467_ins)) {
		return _21467_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1acb3503d_checkGenericFn(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _216136_f, jule::Ptr<_1abc2ba81_Token>* _216152_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1acb28350_reloadFnInsTypes(_self_, (*(_216136_f)));
	(*((*(_216136_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acaa540e_FnIns> _21677_existInstance = _1acaa3e02_appendInstance((*((*(_216136_f))))._field_Decl.ptr(), _216136_f);;
	if ((!(_1acb26ea8_checkConstraintsFn(_self_, _216136_f, _216152_et, _21677_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21677_existInstance != nullptr)) {
		(*(_216136_f))=_21677_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1acb37a9b_checkFnInsCaller(_self_, _216136_f, (*(_216152_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1acb353a1_checkTypeMethod(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _218437_s, jule::Ptr<_1acaa2351_Fn>* _218457_f) {
	if (((*((*(_218457_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1acaa540e_FnIns> _21897_ins = (*((*(_218457_f))))._field_Instances[0LL];;
	if (((*((*(_21897_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1acb37d54_checkFnIns(_self_, &(_21897_ins));
}



inline jule::Ptr<_1acaa540e_FnIns> _1acb35857_checkStructInsOp(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _219738_s, jule::Ptr<_1acaa2351_Fn>* _219758_f, jule::Fn<jule::Bool,jule::Ptr<_1acaa2351_Fn>> _219766_p) {
	if (((((*(_219758_f)) == nullptr) || ((*((*(_219758_f))))._field_Generics.len() > 0LL)) || (!(_219766_p((*(_219758_f))))))) {
		return nullptr;;
	};
	return (*((*(_219758_f))))._field_Instances[0LL];;
}



inline jule::Bool _1acb35c53_checkStructEnv(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _220736_s, jule::Ptr<_1abc2ba81_Token> _220755_errorToken) {
	jule::Bool __jule_func_result = false;
	_1acbd3295_typeChecker _22087_tc = _1acbd3295_typeChecker{._field_s=(*((*((*(_220736_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1acbd22a5_referencer>(_1acbd22a5_referencer{._field_ident=(*(*((*(_220736_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220736_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220736_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		_22087_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>::alloc(0LL, (*((*(_220736_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc00a6_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220736_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea9c933:;
			if (it != expr_end) {
				jule::I32 _22219_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> _222116_g = *it;
				{
					jule::Ptr<_1ac9ba91d_GenericDecl> _22229_decl = (*(*((*(_220736_s))))._field_Decl.alloc)._field_Generics[_22219_i];;
					{ jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> &__jule_push_dest = _22087_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22229_decl.alloc)._field_Token, ._field_Ident=(*(_22229_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_222116_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1bea9c933:;
				++it;
				_22219_i++;
				goto _iter_begin_1bea9c933;
			}
			_iter_end_1bea9c933:;
		};
	};
	jule::Ptr<_1acaa8654_SymTab> _22317_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1ac9ab711_setCurrentFile(_self_, _22317_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220736_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1acaa8654_SymTab> _22358_file = _1ac9a7894_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220736_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22358_file != nullptr)) {
			_1ac9ab711_setCurrentFile(_self_, _22358_file);
		};
	};
	if (((*((*(_220736_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1ac954148_constraintChecker> _22428_cc = _1acb221d4_constraintChecker(_self_);;
		(*(_22428_cc))._field_et=_220755_errorToken;
		(*_22428_cc.alloc)._field_si=(*(_220736_s));
		(*_22428_cc.alloc)._field_genericsA=_22087_tc._field_useGenerics;
		(*_22428_cc.alloc)._field_uniq=true;
		if ((!(_1ac9550b1_check(_22428_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220736_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22558_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22087_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220736_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1beaa6420:;
			if (it != expr_end) {
				jule::Ptr<_1acb3d420_Var> _225716_v = *it;
				{
					_1acb30940_checkVarDecl(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
					_1acb34548_checkVar(_self_, &(_225716_v), jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22558_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1beaa6420:;
				++it;
				goto _iter_begin_1beaa6420;
			}
			_iter_end_1beaa6420:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22087_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1acb8edbc_eval> _22687_eval = _1acb243b2_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
	(*((*(_220736_s))))._field_Comparable=(!((*(*((*(_220736_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220736_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beaa9dd5:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _227015_f = *it;
			{
				jule::Ptr<_1acbc0d98_Type> _22718_kind = _1acbdad80_checkDecl(&_22087_tc, &((*((*((*(_227015_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22718_kind != nullptr) && __jule_func_result);
				if ((_22718_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220736_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220736_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220736_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1beaa9dd5;
				};
				(*_227015_f.alloc)._field_Type=_22718_kind;
				(*((*(_220736_s))))._field_Mutable=((*((*(_220736_s))))._field_Mutable || ((!((*(*(_227015_f))._field_Decl.alloc)._field_Mutable)) && _1acbc277e_Mutable((*(_227015_f))._field_Type)));
				(*((*(_220736_s))))._field_Comparable=((*((*(_220736_s))))._field_Comparable && _1acbc24e8_Comparable((*(_227015_f))._field_Type));
				if (((*(*(_227015_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1beaa9dd5;
				};
				(*(_22687_eval))._field_prefix=(*_227015_f.alloc)._field_Type;
				(*_22687_eval.alloc)._field_field=_227015_f;
				(*_22687_eval.alloc)._field_target._field_mutable=true;
				(*_227015_f.alloc)._field_Default=_1acbadbaa_evalExpr(_22687_eval, (*(*(_227015_f))._field_Decl.alloc)._field_Default);
				if (((*_227015_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1beaa9dd5;
				};
				;
				_1acb249cd_checkAssignType(_self_, false, &((*_227015_f.alloc)._field_Type), &((*_227015_f.alloc)._field_Default), (*((*(*(_227015_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220736_s))))._field_Refers);
			}
			_iter_next_1beaa9dd5:;
			++it;
			goto _iter_begin_1beaa9dd5;
		}
		_iter_end_1beaa9dd5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1acb3614e_precheckStructIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _230539_s, jule::Ptr<_1abc2ba81_Token> _230558_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1acb35c53_checkStructEnv(_self_, _230539_s, _230558_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_230539_s))))._field_Comparable && ((*((*(_230539_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1acaa2351_Fn> _23168_decl = _1abd166c6_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_230539_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1beab6177:;
			if (it != expr_end) {
				jule::Ptr<_1ac9d13d4_FieldIns> _231716_field = *it;
				{
					jule::Ptr<_1acbd07d1_Arr> _23189_arr = _1acbc431e_Arr((*(_231716_field))._field_Type.ptr());;
					if ((_23189_arr == nullptr)) {
						goto _iter_next_1beab6177;
					};
					jule::Ptr<_1acaa540e_FnIns> _23229_f = _1acaa385d_instanceForce(_23168_decl);;
					(*(_23229_f))._field_Generics=jule::append((*_23229_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=(*(_23189_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb3503d_checkGenericFn(_self_, &(_23229_f), &((*((*_231716_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2326:6"));;
					};
					_1ac97a6ad_Push((*((*(_230539_s))))._field_Refers.ptr(), jule::Any(_23229_f, &__jule_any_type64));
				}
				_iter_next_1beab6177:;
				++it;
				goto _iter_begin_1beab6177;
			}
			_iter_end_1beab6177:;
		};
	};
	{
		auto expr = &((*((*(_230539_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beaba214:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _233215_f = *it;
			{
				if (((*(_233215_f))._field_Generics.len() == 0LL)) {
					if ((_1acb34b42_readyToCheckFn(_self_, _230539_s, &(_233215_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1beaba214:;
			++it;
			goto _iter_begin_1beaba214;
		}
		_iter_end_1beaba214:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1acb36407_checkStructIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _234236_s) {
	{
		auto expr = &((*((*(_234236_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beabbbc7:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _234315_f = *it;
			{
				_1acb353a1_checkTypeMethod(_self_, _234236_s, &(_234315_f));
			}
			_iter_next_1beabbbc7:;
			++it;
			goto _iter_begin_1beabbbc7;
		}
		_iter_end_1beabbbc7:;
	};
}



inline void _1acb366b0_checkTypeStruct(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _234837_s) {
	if ((*((*(_234837_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234837_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beabd6bd:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _236115_ins = *it;
			{
				_1acb36407_checkStructIns(_self_, &(_236115_ins));
			}
			_iter_next_1beabd6bd:;
			++it;
			goto _iter_begin_1beabd6bd;
		}
		_iter_end_1beabd6bd:;
	};
}



inline void _1acb368ad_checkStructTypes(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beabe67a:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _236715_s = *it;
			{
				_1acb366b0_checkTypeStruct(_self_, &(_236715_s));
			}
			_iter_next_1beabe67a:;
			++it;
			goto _iter_begin_1beabe67a;
		}
		_iter_end_1beabe67a:;
	};
}



inline void _1acb36b66_checkStructInsOperators(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9d1e84_StructIns> _237244_s) {
	{
		auto expr = &((*(_237244_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beac0615:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _237315_m = *it;
			{
				{
					auto &_match_expr{ (*(_237315_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1beac0d1e:;
						{
							(*(_237244_s))._field_Operators._field_Eq=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb40026_Eq);
							(*_237244_s.alloc)._field_Comparable=((*_237244_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1beac1418:;
						{
							(*(_237244_s))._field_Operators._field_Gt=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb402e0_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1beac147e:;
						{
							(*(_237244_s))._field_Operators._field_GtEq=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb405a9_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1beac14e5:;
						{
							(*(_237244_s))._field_Operators._field_Lt=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb40873_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1beac155b:;
						{
							(*(_237244_s))._field_Operators._field_LtEq=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb40b3c_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1beac15d3:;
						{
							(*(_237244_s))._field_Operators._field_Shl=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb4127a_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1beac165a:;
						{
							(*(_237244_s))._field_Operators._field_Shr=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb41544_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1beac16d2:;
						{
							(*(_237244_s))._field_Operators._field_Add=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb4180d_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1beac1759:;
						{
							(*(_237244_s))._field_Operators._field_Sub=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb41ac7_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1beac17d1:;
						{
							(*(_237244_s))._field_Operators._field_Div=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb41d91_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1beac1858:;
						{
							(*(_237244_s))._field_Operators._field_Mul=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb4215a_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1beac18d0:;
						{
							(*(_237244_s))._field_Operators._field_Mod=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb42424_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1beac1957:;
						{
							(*(_237244_s))._field_Operators._field_BitAnd=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb426dd_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1beac19ce:;
						{
							(*(_237244_s))._field_Operators._field_BitOr=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb429a7_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1beac1a56:;
						{
							(*(_237244_s))._field_Operators._field_BitXor=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb42c71_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1beac1acd:;
						{
							(*(_237244_s))._field_Operators._field_Neg=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb433ae_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1beac1b55:;
						{
							(*(_237244_s))._field_Operators._field_Pos=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb43678_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1beac1bcc:;
						{
							(*(_237244_s))._field_Operators._field_BitNot=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb43942_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1beac1c54:;
						{
							(*(_237244_s))._field_Operators._field_AddAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb44080_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1beac1ccb:;
						{
							(*(_237244_s))._field_Operators._field_SubAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb44349_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1beac1d53:;
						{
							(*(_237244_s))._field_Operators._field_DivAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb44613_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1beac1dca:;
						{
							(*(_237244_s))._field_Operators._field_MulAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb448cc_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1beac1e52:;
						{
							(*(_237244_s))._field_Operators._field_ModAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb44b96_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1beac1ec9:;
						{
							(*(_237244_s))._field_Operators._field_ShlAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb44e60_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1beac2051:;
						{
							(*(_237244_s))._field_Operators._field_ShrAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb45229_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1beac20c8:;
						{
							(*(_237244_s))._field_Operators._field_BitOrAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb454e3_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1beac2150:;
						{
							(*(_237244_s))._field_Operators._field_BitAndAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb457ac_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1beac21c7:;
						{
							(*(_237244_s))._field_Operators._field_BitXorAssign=_1acb35857_checkStructInsOp(_self_, &(_237244_s), &(_237315_m), static__1acb45a76_BitXorAssign);
						}
					}
					_match_end_1beac10e9:;
				};
			}
			_iter_next_1beac0615:;
			++it;
			goto _iter_begin_1beac0615;
		}
		_iter_end_1beac0615:;
	};
}



inline void _1acb36e1e_precheckStructType(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1ac9ce129_Struct>* _243640_s) {
	if ((*((*(_243640_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_243640_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1ac9d1e84_StructIns> _24478_ins = _1ac9ce5be_instance((*(_243640_s)));;
		(*(_24478_ins))._field_Checked=true;
		_1ac9ce8cc_appendInstance((*(_243640_s)).ptr(), &(_24478_ins));
		jule::Bool _24504_ok = _1acb3614e_precheckStructIns(_self_, &(_24478_ins), nullptr);;
		if ((!(_24504_ok))) {
			return;;
		};
	};
	_1acb36b66_checkStructInsOperators(_self_, (*((*(_243640_s))))._field_Instances[0LL]);
}



inline void _1acb3711c_precheckStructTypes(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bead8809:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _246015_s = *it;
			{
				_1acb36e1e_precheckStructType(_self_, &(_246015_s));
			}
			_iter_next_1bead8809:;
			++it;
			goto _iter_begin_1bead8809;
		}
		_iter_end_1bead8809:;
	};
}



inline void _1acb373c5_checkRets(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _246530_f) {
	if (_1acaa2807_IsVoid((*((*(_246530_f))))._field_Decl.ptr())) {
		return;;
	};
	_1acb39817_missingRetChecker _24693_mrc = static__1acb39c13_new();;
	jule::Bool _24703_ok = _1acb3ade0_check(&_24693_mrc, (*((*(_246530_f))))._field_Scope);;
	if ((!(_24703_ok))) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_246530_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1acb37738_checkFnInsSc(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _247633_f, jule::Ptr<_1ac9631bd_scopeChecker>* _247649_sc) {
	_1ac9a6e04_appendRetVars(&((*((*((*(_247649_sc))))._field_table))._field_Vars), _247633_f);
	_1ac9a7234_appendParamVars(&((*(*((*(_247649_sc))))._field_table.alloc)._field_Vars), _247633_f);
	_1ac9a7520_appendGenericTypeAliases(&((*(*((*(_247649_sc))))._field_table.alloc)._field_TypeAliases), _247633_f);
	_1ac975345_check((*(_247649_sc)), &((*((*((*(_247633_f))))._field_Decl))._field_Scope), &((*((*(_247633_f))))._field_Scope));
	if ((!(_1ac965cc5_stopped((*(_247649_sc)).ptr())))) {
		_1acb373c5_checkRets(_self_, _247633_f);
	};
}



inline void _1acb37a9b_checkFnInsCaller(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _248938_f, jule::Ptr<_1abc2ba81_Token> _248953_caller) {
	if ((*((*((*(_248938_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1acaa8654_SymTab> _24947_old = (*((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema))._field_file;;
	__JULE_DEFER({
		_1ac9ab711_setCurrentFile((*((*((*(_248938_f))))._field_Decl))._field_sema, _24947_old);
	});;
	jule::Ptr<_1acaa8654_SymTab> _24967_file = _1ac9a7894_findFile(&((*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248938_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24967_file != nullptr)) {
		_1ac9ab711_setCurrentFile((*((*((*(_248938_f))))._field_Decl))._field_sema, _24967_file);
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _25017_sc = _1ac958878_newScopeChecker(&((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema), (*(_248938_f)));;
	(*(_25017_sc))._field_calledFrom=_248953_caller;
	_1acb37738_checkFnInsSc(_self_.ptr(), _248938_f, &(_25017_sc));
	if (((*(*((*(_248938_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_errors);
		(*(*((*((*(_248938_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1acb37d54_checkFnIns(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa540e_FnIns>* _251132_f) {
	_1acb37a9b_checkFnInsCaller(_self_, _251132_f, nullptr);
}



inline void _1acb3810c_checkFunc(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _251531_f) {
	if ((*((*(_251531_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_251531_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_251531_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beae6e33:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _252515_ins = *it;
			{
				_1acb37d54_checkFnIns(_self_, &(_252515_ins));
			}
			_iter_next_1beae6e33:;
			++it;
			goto _iter_begin_1beae6e33;
		}
		_iter_end_1beae6e33:;
	};
}



inline void _1acb383b5_checkTestFn(_1ac9a8c2a_sema* _self_, jule::Ptr<_1acaa540e_FnIns>* _253032_f) {
	if ((*((*((*(_253032_f))))._field_Decl))._field_Public) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(*((*(_253032_f))))._field_Decl.alloc)._field_Unsafety || (!(_1acaa2807_IsVoid((*((*(_253032_f))))._field_Decl)))) || ((*(*((*(_253032_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_253032_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_253032_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_253032_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acbcc9dc_Sptr> _25487_sptr = _1acbc37d5_Sptr((*((*((*(_253032_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25487_sptr == nullptr)) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _25553_s = _1acbc4ac2_Struct((*(_25487_sptr))._field_Elem.ptr());;
	if (((_25553_s == nullptr) || (!(_1ac99162a_isStdPackage(&((*((*((*((*(_25553_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1ac9abb2e_pushErr(_self_, (*(*((*(_253032_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1ac9abe92_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1acb3866d_precheckFunc(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Ptr<_1acaa2351_Fn>* _256334_f) {
	if ((*((*(_256334_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_256334_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_256334_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1acaa540e_FnIns> _25748_ins = _1acaa385d_instanceForce((*(_256334_f)));;
		{ jule::Slice<jule::Ptr<_1acaa540e_FnIns>> &__jule_push_dest = (*((*(_256334_f))))._field_Instances; __jule_push_dest.push(_25748_ins); };
		jule::Bool _25764_ok = _1acb28350_reloadFnInsTypes(_self_, _25748_ins);;
		(*(_25748_ins))._field_reloaded=true;
		if ((_25764_ok && _1acbdc414_hasDirective(&((*((*(_256334_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1acb383b5_checkTestFn(_self_, &(_25748_ins));
		};
	};
}



inline void _1acb3886b_precheckFuncs(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb05b89:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _258715_decl = *it;
			{
				{
					auto expr = &((*(_258715_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb0667e:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _258816_m = *it;
						{
							_1acb3866d_precheckFunc(_self_, &(_258816_m));
						}
						_iter_next_1beb0667e:;
						++it;
						goto _iter_begin_1beb0667e;
					}
					_iter_end_1beb0667e:;
				};
			}
			_iter_next_1beb05b89:;
			++it;
			goto _iter_begin_1beb05b89;
		}
		_iter_end_1beb05b89:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb0623e:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _259215_decl = *it;
			{
				_1acb3866d_precheckFunc(_self_, &(_259215_decl));
			}
			_iter_next_1beb0623e:;
			++it;
			goto _iter_begin_1beb0623e;
		}
		_iter_end_1beb0623e:;
	};
}



inline void _1acb38a69_checkFuncs(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb07dcd:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _259915_decl = *it;
			{
				_1acb3810c_checkFunc(_self_, &(_259915_decl));
			}
			_iter_next_1beb07dcd:;
			++it;
			goto _iter_begin_1beb07dcd;
		}
		_iter_end_1beb07dcd:;
	};
}



inline void _1acb38c67_checkPackageTypes(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb08bae:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _260715_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _260715_f);
				_1acb34746_checkGlobals(_self_);
				_1acb3886b_precheckFuncs(_self_);
				_1acb3711c_precheckStructTypes(_self_);
			}
			_iter_next_1beb08bae:;
			++it;
			goto _iter_begin_1beb08bae;
		}
		_iter_end_1beb08bae:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde7c1a9:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _261815_f = *it;
			{
				_1ac9ab711_setCurrentFile(_self_, _261815_f);
				_1acb38a69_checkFuncs(_self_);
				_1acb368ad_checkStructTypes(_self_);
			}
			_iter_next_1bde7c1a9:;
			++it;
			goto _iter_begin_1bde7c1a9;
		}
		_iter_end_1bde7c1a9:;
	};
}



inline void _1acb38e65_setFileSemaFields(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde7dbb1:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _262615_f = *it;
			{
				(*(_262615_f))._field_sema=_self_;
			}
			_iter_next_1bde7dbb1:;
			++it;
			goto _iter_begin_1bde7dbb1;
		}
		_iter_end_1bde7dbb1:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde7e2dd:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _262915_st = *it;
			{
				(*(_262915_st))._field_sema=_self_;
			}
			_iter_next_1bde7e2dd:;
			++it;
			goto _iter_begin_1bde7e2dd;
		}
		_iter_end_1bde7e2dd:;
	};
}



inline void _1acb39163_setSemaFields(jule::Ptr<_1ac9a8c2a_sema> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde804dc:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _263515_file = *it;
			{
				_1ac9ab711_setCurrentFile(_self_.ptr(), _263515_file);
				_1acb38e65_setFileSemaFields(_self_);
			}
			_iter_next_1bde804dc:;
			++it;
			goto _iter_begin_1bde804dc;
		}
		_iter_end_1bde804dc:;
	};
}



inline void _1acb3941b_check(jule::Ptr<_1ac9a8c2a_sema> _self_, jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _264127_files) {
	(*(_self_))._field_files=(*(_264127_files));
	_1acb39163_setSemaFields(_self_);
	_1acb203d0_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1acb20dc5_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1acb207cb_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1acb209c9_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1acb33756_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1acb38c67_checkPackageTypes(_self_);
}







inline _1acb39817_missingRetChecker static__1acb39c13_new(void) {
	return _1acb39817_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1acb3a021_checkConditional(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95b68e_Conditional> _268932_c) {
	{
		auto expr = &((*(_268932_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde85ba7:;
		if (it != expr_end) {
			jule::Ptr<_1ac95ae74_If> _269015_elif = *it;
			{
				if ((_269015_elif == nullptr)) {
					return false;;
				};
				if ((!(_1acb3aa9e_checkScope(_self_, (*(_269015_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bde85ba7:;
			++it;
			goto _iter_begin_1bde85ba7;
		}
		_iter_end_1bde85ba7:;
	};
	return (((*_268932_c.alloc)._field_Default != nullptr) && _1acb3aa9e_checkScope(_self_, (*(*(_268932_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1acb3a362_checkMatch(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac960286_Match> _270126_m) {
	{
		auto expr = &((*(_270126_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde87c75:;
		if (it != expr_end) {
			jule::Ptr<_1ac960cae_Case> _270215_c = *it;
			{
				if ((_270215_c == nullptr)) {
					return false;;
				};
				jule::I32 _27064_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27074_ok = _1acb3aa9e_checkScope(_self_, (*(_270215_c))._field_Scope);;
				{
					
					if ((_27064_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1bde897c1:;
						{
							return false;;
						}
					}
					else if ((!(_27074_ok))) {
						_case_begin_1bde89859:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1bde898c0;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1bde898c0:;
						{
							(*(_self_))._field_falled=false;
							if (((*(_270215_c))._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bde87c75;
						}
					}
					_match_end_1bde8975a:;
				};
			}
			_iter_next_1bde87c75:;
			++it;
			goto _iter_begin_1bde87c75;
		}
		_iter_end_1bde87c75:;
	};
	return (((*_270126_m.alloc)._field_Default != nullptr) && _1acb3aa9e_checkScope(_self_, (*(*(_270126_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1acb3a75d_checkInfIter(_1acb39817_missingRetChecker* _self_, jule::Uintptr _272724_it, jule::Ptr<_1ac95aa56_Scope>* _272742_s) {
	jule::I32 _27283_n = (*(_self_))._field_breaked.len();;
	if (_1acb3aa9e_checkScope(_self_, (*(_272742_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
		return true;;
	};
	if ((_27283_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27283_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bde8d242:;
			if (it != expr_end) {
				jule::Uintptr _273411_addr = *it;
				{
					if ((_272724_it == _273411_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
						return false;;
					};
				}
				_iter_next_1bde8d242:;
				++it;
				goto _iter_begin_1bde8d242;
			}
			_iter_end_1bde8d242:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27283_n);;
	};
	return true;;
}



inline jule::Bool _1acb3aa9e_checkScope(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95aa56_Scope> _274526_s) {
	if ((_274526_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_274526_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde8e7a4:;
		if (it != expr_end) {
			jule::Any _274915_st = *it;
			{
				{
					auto &_match_expr{ _274915_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1bde9051e:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1bde902cc:;
						{
							jule::Uintptr _27555_addr = (*(_274915_st.unsafe_cast_ptr<_1ac95d0ec_BreakSt>()))._field_It;;
							if ((_27555_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27555_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_1bde90596:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1bde9061d:;
						{
							jule::Ptr<_1ac95b98b_InfIter> _27639_ii = _274915_st.unsafe_cast_ptr<_1ac95b98b_InfIter>();;
							if (_1acb3a75d_checkInfIter(_self_, static_cast<jule::Uintptr>(_27639_ii), &((*(_27639_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1bde90695:;
						{
							jule::Ptr<_1ac95be42_WhileIter> _27689_wn = _274915_st.unsafe_cast_ptr<_1ac95be42_WhileIter>();;
							if ((_1ac95c2d8_IsWhileNext(_27689_wn.ptr()) && ((*_27689_wn.alloc)._field_Expr == nullptr))) {
								if (_1acb3a75d_checkInfIter(_self_, static_cast<jule::Uintptr>(_27689_wn), &((*_27689_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1bde9071c:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1bde90794:;
						{
							if (_1acb3aa9e_checkScope(_self_, _274915_st.cast_ptr<_1ac95aa56_Scope>(&__jule_any_type20))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1bde9081b:;
						{
							{
								auto &_match_expr{ (*(_274915_st.cast_ptr<_1acb8cded_Data>(&__jule_any_type22)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
									_case_begin_1bde968aa:;
									{
										return true;;
									}
								}
								_match_end_1bde96811:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1bde90893:;
						{
							if (_1acb3a021_checkConditional(_self_, _274915_st.cast_ptr<_1ac95b68e_Conditional>(&__jule_any_type32))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1bde9091a:;
						{
							if (_1acb3a362_checkMatch(_self_, _274915_st.cast_ptr<_1ac960286_Match>(&__jule_any_type45))) {
								return true;;
							};
						}
					}
					_match_end_1bde903dc:;
				};
			}
			_iter_next_1bde8e7a4:;
			++it;
			goto _iter_begin_1bde8e7a4;
		}
		_iter_end_1bde8e7a4:;
	};
	return false;;
}



inline jule::Bool _1acb3ade0_check(_1acb39817_missingRetChecker* _self_, jule::Ptr<_1ac95aa56_Scope> _280021_s) {
	return _1acb3aa9e_checkScope(_self_, _280021_s);;
}







inline jule::Bool _1acb3d82c_IsInitialized(_1acb3d420_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1acb3dab3_IsTypeInferred(_1acb3d420_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1acb3dd49_untypedConstant(_1acb3d420_Var* _self_) {
	return (_1acb3dab3_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1acb3e8d8_Str(jule::Ptr<_1acaa2351_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1acaa2807_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1acaa1262_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1acaa540e_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1acbc8eb1_Prim> _253_prim = _1acbc354e_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1acbcc47b_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__1acb3ec5c_logical(jule::Ptr<_1acaa2351_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _1acaa2807_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _1acaa1262_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1acaa540e_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_1acbc8eb1_Prim> _503_prim = _1acbc354e_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_1acbcc1e5_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _1acbc4ac2_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__1acb40026_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _5815_f) {
	return static__1acb3ec5c_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1acb402e0_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _6315_f) {
	return static__1acb3ec5c_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1acb405a9_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _6817_f) {
	return static__1acb3ec5c_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1acb40873_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _7315_f) {
	return static__1acb3ec5c_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1acb40b3c_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _7817_f) {
	return static__1acb3ec5c_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1acb40eb1_result(jule::Ptr<_1acaa2351_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _1acaa2807_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _1acaa1262_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1acaa540e_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_1acbc4ac2_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1acb4127a_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _10416_f) {
	return static__1acb40eb1_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1acb41544_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _10916_f) {
	return static__1acb40eb1_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1acb4180d_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _11416_f) {
	return static__1acb40eb1_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1acb41ac7_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _11916_f) {
	return static__1acb40eb1_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1acb41d91_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _12416_f) {
	return static__1acb40eb1_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1acb4215a_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _12916_f) {
	return static__1acb40eb1_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1acb42424_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _13416_f) {
	return static__1acb40eb1_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1acb426dd_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _13919_f) {
	return static__1acb40eb1_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1acb429a7_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _14418_f) {
	return static__1acb40eb1_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1acb42c71_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _14919_f) {
	return static__1acb40eb1_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1acb430e5_unary(jule::Ptr<_1acaa2351_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _1acaa2807_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _1acaa1262_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1acaa540e_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_1acbc4ac2_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1acb433ae_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _17316_f) {
	return static__1acb430e5_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1acb43678_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _17816_f) {
	return static__1acb430e5_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1acb43942_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _18319_f) {
	return static__1acb430e5_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1acb43cb6_assign(jule::Ptr<_1acaa2351_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_1acaa2807_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _1acaa1262_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1acb44080_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _20722_f) {
	return static__1acb43cb6_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1acb44349_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _21222_f) {
	return static__1acb43cb6_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1acb44613_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _21722_f) {
	return static__1acb43cb6_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1acb448cc_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _22222_f) {
	return static__1acb43cb6_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1acb44b96_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _22722_f) {
	return static__1acb43cb6_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1acb44e60_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _23222_f) {
	return static__1acb43cb6_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1acb45229_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _23722_f) {
	return static__1acb43cb6_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1acb454e3_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _24224_f) {
	return static__1acb43cb6_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1acb457ac_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _24725_f) {
	return static__1acb43cb6_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1acb45a76_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn> _25225_f) {
	return static__1acb43cb6_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1acb7923b_typeCompatibilityChecker_eq(_1acb7923b_typeCompatibilityChecker *_self_, _1acb7923b_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1acb79769_pushErr(_1acb7923b_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1acb79a00_checkTrait(_1acb7923b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acbc1ecb_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1acaaca65_Trait> _1157_trt = _1acbc4d58_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1acbc37d5_Sptr((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be568289:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1acbc37d5_Sptr((*(_self_))._field_src)))._field_Elem;
				if ((_1acbc4ac2_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1be568333;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be568333:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _1264_s = _1acbc4ac2_Struct((*(_self_))._field_src);;
				if ((!(_1ac9d079b_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1acb77cc8_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1acb79769_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc4d58_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1be5683aa:;
			{
				jule::Ptr<_1acaaca65_Trait> _1368_base = _1acbc4d58_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1be56d46a:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be56d712:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be56e1a2:;
								if (it != expr_end) {
									jule::Ptr<_1ac9ce129_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1be56d712;
										};
									}
									_iter_next_1be56e1a2:;
									++it;
									goto _iter_begin_1be56e1a2;
								}
								_iter_end_1be56e1a2:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1be56d712:;
						++it;
						goto _iter_begin_1be56d712;
					}
					_iter_end_1be56d712:;
				};
				{
					auto expr = &((*_1157_trt.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be56e56a:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1acaa2351_Fn> _1509_m2 = _1acaad747_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1acaa540e_FnIns> _1545_m1k = _1acb26a02_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1acaa540e_FnIns> _1555_m2k = _1acb26a02_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1acaa63aa_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1be56e56a:;
						++it;
						goto _iter_begin_1be56e56a;
					}
					_iter_end_1be56e56a:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be568201:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be568179:;
	};
}



inline jule::Bool _1acb79c86_checkPtr(_1acb7923b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acbc1ecb_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbd12a4_Ptr> _1707_dest = _1acbc3a6b_Ptr((*(_self_))._field_dest.ptr());;
	if (_1acbd1d21_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1acbc15d5_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1acb7a01c_checkPrim(_1acb7923b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1acbc8eb1_Prim> _1794_prim = _1acbc354e_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1acbcc712_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1acbc15d5_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1acb7a418_typeEnum(_1acb7923b_typeCompatibilityChecker* _self_, jule::Ptr<_1acab1926_TypeEnum>* _18725_e, jule::Ptr<_1acbc0d98_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5759c2:;
		if (it != expr_end) {
			jule::Ptr<_1acab134e_TypeEnumItem> _18815_item = *it;
			{
				if (_1acbc15d5_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1acab1926_TypeEnum> _1928_ke = _1acbc4088_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type);;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1be5759c2;
				};
				if (_1acb7a418_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1be5759c2:;
			++it;
			goto _iter_begin_1be5759c2;
		}
		_iter_end_1be5759c2:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb7a69e_checkTypeEnum(_1acb7923b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1acbc15d5_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1acab1926_TypeEnum> _2077_e = _1acbc4088_TypeEnum((*(_self_))._field_dest);;
	__jule_func_result = _1acb7a418_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1acb7a935_check(_1acb7923b_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1acbc3a6b_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1acb79c86_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1acbc2c9b_NilCompatible((*(_self_))._field_dest)) {
		if (_1acbc1ecb_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1acbc354e_Prim((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be57b2be:;
			{
				__jule_func_result = _1acb7a01c_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc4088_TypeEnum((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be57b357:;
			{
				__jule_func_result = _1acb7a69e_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc4d58_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1be57ac4c:;
			{
				__jule_func_result = _1acb79a00_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be57a884:;
			{
				__jule_func_result = _1acbc15d5_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1be579e05:;
	};
}








inline jule::Bool _1acb7b0b7_assignTypeChecker_eq(_1acb7b0b7_assignTypeChecker *_self_, _1acb7b0b7_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1acb7b57e_pushErr(_1acb7b0b7_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1acb7b815_checkValidity(_1acb7b0b7_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1acbc483b_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be57e0c4:;
			{
				jule::Ptr<_1acaa540e_FnIns> _2524_f = _1acbc483b_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1acaa68c7_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1be580944:;
						{
							_1acb7b57e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1be5809dd:;
						{
							_1acb7b57e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*((*(_2524_f))._field_Decl))._field_Statically)) && _1acaa2a8d_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1be580a54:;
						{
							_1acb7b57e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*((*(_2524_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1be580aba:;
						{
							_1acb7b57e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1ac9abe92_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1be580856:;
				};
			}
		}
		else if ((_1acbc5375_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be57e16d:;
			{
				_1acb7b57e_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1be57e03b:;
	};
	return _2497_valid;;
}



inline jule::Bool _1acb7ba9b_checkConst(_1acb7b0b7_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1acbc354e_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1acbc354e_Prim((*(_self_))._field_dest)))._field_Kind;;
	{
		
		if (_1ac92b83a_IsFloat(_2813_kind)) {
			_case_begin_1be58730d:;
			{
				if ((!(_1acb78191_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1ac92b4e9_IsInt(_2813_kind)) {
			_case_begin_1be587396:;
			{
				if ((!(_1acb78c52_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*(*(_self_))._field_d.alloc)._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1be587297:;
			{
				return false;;
			}
		}
		_match_end_1be587165:;
	};
	return true;;
}



inline jule::Bool _1acb7bd32_checkCompatibility(_1acb7b0b7_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1be58962e:;
			{
				return false;;
			}
		}
		else if ((!(_1acb7b815_checkValidity(_self_)))) {
			_case_begin_1be5896a6:;
			{
				return false;;
			}
		}
		else if (_1acb7ba9b_checkConst(_self_)) {
			_case_begin_1be58971c:;
			{
				return true;;
			}
		}
		else if ((_1acbc3d02_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be589783:;
			{
				jule::Ptr<_1acbc0d98_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1acbc3d02_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1acbc3d02_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1acbc8eb1_Prim> _3144_prim = _1acbc354e_Prim((*(_self_))._field_dest);;
				if (((_3144_prim == nullptr) || _1acbcc712_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1be5879e5;
				};
				jule::Ptr<_1acbc0d98_Type> _3198_dest = (*(*(_1acbc3d02_Enum((*((*(_self_))._field_d))._field_Type.ptr())))._field_TypeSym.alloc)._field_Type;;
				return _1acb2543a_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1be5879e5:;
	};
	return _1acb25d0e_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1acb7c0b8_check(_1acb7b0b7_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1acb7bd32_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1acbddb96_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1be5a9330_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1be5aaa29:;
			{
				jule::Ptr<_1acbc0d98_Type> _3498_elem = static_cast<jule::Ptr<_1acbc0d98_Type>>(nullptr);;
				{
					
{
						_case_begin_1be5ab2ee:;
						{
							_3498_elem=(*(_1acbc431e_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5ab233:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc44868_ArrTypeDecl>()))._field_Elem;
				return _1acb7e1ca_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1be5aa9a2:;
	};
	return false;;
}

inline jule::Bool _1be5a95c7_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1be5b2080:;
			{
				jule::Ptr<_1acbc0d98_Type> _3498_elem = static_cast<jule::Ptr<_1acbc0d98_Type>>(nullptr);;
				{
					
{
						_case_begin_1be5b5429:;
						{
							_3498_elem=(*(_1acbc45a5_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5b2789:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc439cc_SlcTypeDecl>()))._field_Elem;
				return _1acb7e1ca_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1be5b2008:;
	};
	return false;;
}

inline jule::Bool _1be5b1a1e_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1be5b86a2:;
			{
				jule::Ptr<_1acbc0d98_Type> _3498_elem = static_cast<jule::Ptr<_1acbc0d98_Type>>(nullptr);;
				{
					
{
						_case_begin_1be5b8edd:;
						{
							_3498_elem=(*(_1acbc3a6b_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5b8dab:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc440c6_PtrTypeDecl>()))._field_Elem;
				return _1acb7e1ca_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1be5b862a:;
	};
	return false;;
}

inline jule::Bool _1be5bbc5a_annotateConstraintElem(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1be5be873:;
			{
				jule::Ptr<_1acbc0d98_Type> _3498_elem = static_cast<jule::Ptr<_1acbc0d98_Type>>(nullptr);;
				{
					
{
						_case_begin_1be5c0225:;
						{
							_3498_elem=(*(_1acbc37d5_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1be5c007c:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc43647_SptrTypeDecl>()))._field_Elem;
				return _1acb7e1ca_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1be5be7eb:;
	};
	return false;;
}



inline jule::Bool _1acb7d3b6_annotateConstraintMap(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1be591c74:;
			{
				jule::Ptr<_1acbceb54_Map> _3698_m = _1acbc50de_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1abc450b6_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc450b6_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1acb7e1ca_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1acb7e1ca_annotateConstraint(_self_, &((*_3698_m.alloc)._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1be591bec:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb7d707_annotateConstraintTup(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1be597609:;
			{
				jule::Ptr<_1abc43cc9_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1abc43cc9_TupleTypeDecl>();;
				jule::Ptr<_1acbce0a4_Tuple> _3858_tup2 = _1acbc5375_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be59a5a7:;
					if (it != expr_end) {
						jule::Ptr<_1acbc0d98_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be59c389:;
								if (it != expr_end) {
									jule::Ptr<_1abc4259c_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1acb7e1ca_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1be59c389:;
									++it;
									goto _iter_begin_1be59c389;
								}
								_iter_end_1be59c389:;
							};
						}
						_iter_next_1be59a5a7:;
						++it;
						goto _iter_begin_1be59a5a7;
					}
					_iter_end_1be59a5a7:;
				};
			}
		}
		_match_end_1be597582:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb7da48_annotateConstraintFn(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1be59c8c8:;
			{
				jule::Ptr<_1ac9c04a0_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1ac9c04a0_FnDecl>();;
				jule::Ptr<_1acaa540e_FnIns> _4028_f = _1acbc483b_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be59e80e:;
					if (it != expr_end) {
						jule::I32 _4039_i = it - expr->begin();
						jule::Ptr<_1acaa42a9_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1acb7e1ca_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1be59e80e:;
						++it;
						_4039_i++;
						goto _iter_begin_1be59e80e;
					}
					_iter_end_1be59e80e:;
				};
				if (((*_4018_pf.alloc)._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1acb7e1ca_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1be59c862:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb7dd89_annotateConstraintIdent(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _41944_k) {
	jule::Ptr<_1abc42ba7_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1abc42ba7_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1ac9d1e84_StructIns> _4217_s = _1acbc4ac2_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5a32a2:;
		if (it != expr_end) {
			jule::I32 _4227_i = it - expr->begin();
			jule::Ptr<_1ac9ba91d_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1acbbe4b2_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1acb7e53d_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1be5a32a2;
				};
				jule::Ptr<_1abc4259c_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*_4207_ident.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be5a5dcb:;
					if (it != expr_end) {
						jule::Ptr<_1abc4259c_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be5a6a7a:;
								if (it != expr_end) {
									jule::Ptr<_1acbbe4b2_InsGeneric> _43717_sg = *it;
									{
										if (_1acb7e1ca_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1be5a6a7a:;
									++it;
									goto _iter_begin_1be5a6a7a;
								}
								_iter_end_1be5a6a7a:;
							};
						}
						_iter_next_1be5a5dcb:;
						++it;
						goto _iter_begin_1be5a5dcb;
					}
					_iter_end_1be5a5dcb:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1be5a32a2:;
			++it;
			_4227_i++;
			goto _iter_begin_1be5a32a2;
		}
		_iter_end_1be5a32a2:;
	};
	return false;;
}



inline jule::Bool _1acb7e1ca_annotateConstraint(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1be5a6daa:;
			{
				return _1acb7dd89_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1be5a642b:;
	};
	{
		
		if ((_1acbc431e_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a7c68:;
			{
				return _1be5a9330_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1acbc45a5_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a7cce:;
			{
				return _1be5a95c7_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1acbc3a6b_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a7d45:;
			{
				return _1be5b1a1e_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1acbc37d5_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a7dab:;
			{
				return _1be5bbc5a_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1acbc50de_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a7e33:;
			{
				return _1acb7d3b6_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1acbc483b_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a8384:;
			{
				return _1acb7da48_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1acbc5375_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1be5a840b:;
			{
				return _1acb7d707_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1be5a7b69:;
			{
				return false;;
			}
		}
		_match_end_1be5a7b03:;
	};
}



inline void _1acb7e53d_pushGeneric(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _47332_k, jule::I32 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)});
	jule::Ptr<_1ac9ba91d_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5c6649:;
		if (it != expr_end) {
			jule::Ptr<_1acbc0d98_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1acbc1294_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1be5c6649:;
			++it;
			goto _iter_begin_1be5c6649;
		}
		_iter_end_1be5c6649:;
	};
	if ((((*_4757_gd.alloc)._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*_4757_gd.alloc)._field_Constraint))._field_Mask[0LL];
	_1acb7e1ca_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1acb7e87e_annotatePrim(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1acb818a3_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1acb7ebc0_annotateArr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbd07d1_Arr> _4937_parr = _1acbc431e_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbd07d1_Arr> _4977_arr = _1acbc431e_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1acb81be4_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1acb80011_annotateSlc(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbcd4b0_Slc> _5037_pslc = _1acbc45a5_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _5077_slc = _1acbc45a5_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1acb81be4_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1acb8040c_checkMapKey(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _51238_k, jule::Ptr<_1acbc0d98_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbc0d98_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1acb81be4_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1acb8074d_annotateMap(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbceb54_Map> _5217_pmap = _1acbc50de_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbceb54_Map> _5257_m = _1acbc50de_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1acb8040c_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1acb8040c_checkMapKey(_self_, (&((*(_5217_pmap))._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1acb80a8e_annotateFn(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acaa540e_FnIns> _5317_pf = _1acbc483b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acaa540e_FnIns> _5357_f = _1acbc483b_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1be5d3ba6:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1acaa2807_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1acaa2807_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1be5d3c3e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be5d3b0c:;
	};
	__jule_func_result=true;
	jule::Ptr<_1acbc0d98_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5d5adc:;
		if (it != expr_end) {
			jule::I32 _5458_i = it - expr->begin();
			jule::Ptr<_1acaa42a9_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_1acb81be4_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1be5d5adc:;
			++it;
			_5458_i++;
			goto _iter_begin_1be5d5adc;
		}
		_iter_end_1be5d5adc:;
	};
	if ((!(_1acaa2807_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*(_5317_pf))._field_Result));
		__jule_func_result=(_1acb81be4_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1acb80dd0_annotatePtr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbd12a4_Ptr> _5607_pptr = _1acbc3a6b_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbd12a4_Ptr> _5647_ptr = _1acbc3a6b_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1acb81be4_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1acb81221_annotateSptr(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbcc9dc_Sptr> _5707_ssptr = _1acbc37d5_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1acbcc9dc_Sptr> _5747_sptr = _1acbc37d5_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1acb81be4_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1acb81562_annotateStruct(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1ac9d1e84_StructIns> _5807_s = _1acbc4ac2_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _5847_s2 = _1acbc4ac2_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5deaa2:;
		if (it != expr_end) {
			jule::I32 _5888_i = it - expr->begin();
			jule::Ptr<_1acbbe4b2_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1acbbe4b2_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1acbc15d5_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_1be5deaa2;
				};
				(*(_self_))._field_k=(&((*_58815_g.alloc)._field_Type));
				if ((!(_1acb81be4_annotateKind(_self_, &((*_5898_g2.alloc)._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1be5deaa2:;
			++it;
			_5888_i++;
			goto _iter_begin_1be5deaa2;
		}
		_iter_end_1be5deaa2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb818a3_annotateAny(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1acbc1294_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5e317c:;
		if (it != expr_end) {
			jule::I32 _6037_i = it - expr->begin();
			jule::Ptr<_1ac9ba91d_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1be5e317c;
				};
				jule::Ptr<_1acbbe4b2_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_1be5e4a52:;
						{
							_1acb7e53d_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1acbc15d5_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_1be5e4aeb:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1be5e490e:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1be5e317c:;
			++it;
			_6037_i++;
			goto _iter_begin_1be5e317c;
		}
		_iter_end_1be5e317c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb81be4_annotateKind(_1acb7c98c_dynamicTypeAnnotation* _self_, jule::Ptr<_1acbc0d98_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1acb818a3_annotateAny(_self_, _62240_k)) {
			_case_begin_1be5e7109:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc354e_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e7170:;
			{
				__jule_func_result = _1acb7e87e_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc431e_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e71d6:;
			{
				__jule_func_result = _1acb7ebc0_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc45a5_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e725d:;
			{
				__jule_func_result = _1acb80011_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc50de_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e7417:;
			{
				__jule_func_result = _1acb8074d_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc483b_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e747d:;
			{
				__jule_func_result = _1acb80a8e_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc3a6b_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e74e4:;
			{
				__jule_func_result = _1acb80dd0_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc37d5_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e755a:;
			{
				__jule_func_result = _1acb81221_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1be5e75d2:;
			{
				__jule_func_result = _1acb81562_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be5e6ed8:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be5e6a65:;
	};
}



inline jule::Bool _1acb81e7a_annotate(_1acb7c98c_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1acb81be4_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1acb82d8d_pushErrToken(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1abc2ba81_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1ac9abb2e_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1acb83201_pushErr(_1acb827e9_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1acb82d8d_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _1acb83487_getParams(_1acb827e9_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1acaa0ecb_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*(*(_self_))._field_f.alloc)._field_Params;;
}



inline jule::Bool _1acb837c8_checkCounts(_1acb827e9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1acaa0ecb_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I32 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1be604314:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*(*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl.alloc)._field_Variadic)) {
			_case_begin_1be60417c:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1be603d4c:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1be603cd6:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1be603c70:;
	};
	_1a6a5cb3c_Builder _7027_err = static__1a6a5d489_New(32LL);;
	({
		auto except = _1a6a5db1b_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be606cc8:;
		if (it != expr_end) {
			jule::I32 _7057_i = it - expr->begin();
			jule::Ptr<_1acaa42a9_ParamIns> *_70510_p = it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_7027_err, _1acbc1294_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_1be606cc8:;
			++it;
			_7057_i++;
			goto _iter_begin_1be606cc8;
		}
		_iter_end_1be606cc8:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_1acb83201_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a6a5e49b_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb83c7e_checkArg(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _71629_p, jule::Ptr<_1acb8cded_Data>* _71648_arg, jule::Ptr<_1abc2ba81_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1acaa76db_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1acb8b4b2_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1acb7c98c_dynamicTypeAnnotation _7219_dta = _1acb7c98c_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1acb81e7a_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1acb82d8d_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1acb29263_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1acb249cd_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _1acb933cb_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1acb8417a_push(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _74525_p, jule::Ptr<_1ac9b2a47_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acbc0d98_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_74525_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1acb8cded_Data> _7557_d = _1acbadbaa_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7473_oldMut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1acb83c7e_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1acb84576_pushVariadic(_1acb827e9_fnCallArgChecker* _self_, jule::Ptr<_1acaa42a9_ParamIns>* _76933_p, jule::I32 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1aca974de_SliceExprModel> _7737_model = jule::new_ptr<_1aca974de_SliceExprModel>(_1aca974de_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1acbc0d98_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1acbc0d98_Type> _7847_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_1acbc0d98_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1ac9b2a47_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1beb9c1c5:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcd4b0_Slc>(_1acbcd4b0_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1beb9c4c2:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_1beb9c45b:;
			};
			jule::Ptr<_1acb8cded_Data> _8068_d = _1acbad528_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1beb9b658;
			};
			if ((*((*(_8068_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1acb83c7e_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1beba0e32:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1aca974de_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_1beba3c48:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1beba3bd2:;
				};
				(_76951_i)++;
				goto _iter_end_1beb9b658;
			};
			__jule_func_result=(__jule_func_result && _1acb83c7e_checkArg(_self_, _76933_p, &(_8068_d), &((*_7938_arg.alloc)._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1beb9b658:;
	}
	_iter_end_1beb9b658:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1acb82d8d_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1acb848b7_checkArgs(_1acb827e9_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	_1acb8e44e_target _8513_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I32 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1acaa0ecb_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1bebac191:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1acaa42a9_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*(*(_8628_p))._field_Decl.alloc)._field_Variadic) {
					_case_begin_1bebadb43:;
					{
						__jule_func_result=(_1acb84576_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1bebac36c;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1bebadc31:;
					{
						__jule_func_result=false;
						goto _iter_end_1bebac36c;
					}
				}
				else {
					_case_begin_1bebad77a:;
					{
						__jule_func_result=(_1acb8417a_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1bebad703:;
			};
			(_8557_i)++;
		}
	_iter_next_1bebac36c:;
	}
	_iter_end_1bebac36c:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8513_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1acb84b4d_checkDynamicTypeAnnotation(_1acb827e9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebb098b:;
		if (it != expr_end) {
			jule::Ptr<_1acbbe4b2_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1acb83201_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bebb098b:;
			++it;
			goto _iter_begin_1bebb098b;
		}
		_iter_end_1bebb098b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb84dd4_check(_1acb827e9_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _8927_params = _1acb83487_getParams(_self_);;
	__jule_func_result=_1acb837c8_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1acb848b7_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1acb84b4d_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1acb85cb4_pushErr(_1acb85731_structLitChecker* _self_, jule::Ptr<_1abc2ba81_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1acb90395_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1acb86127_pushSuggestion(_1acb85731_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1acb90708_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1acb86545_pushMatch(_1acb85731_structLitChecker* _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _93930_f, jule::Ptr<_1acb8cded_Data>* _93949_d, jule::Ptr<_1abc2ba81_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1acb29263_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Type), _93949_d, _93964_errorToken)) {
		_1acb249cd_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Type), _93949_d, (*(_93964_errorToken)), _1acb933cb_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1aca95a3c_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1aca95a3c_StructArgExprModel>(_1aca95a3c_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1acb868a8_checkPair(_1acb85731_structLitChecker* _self_, jule::Ptr<_1ac9b7266_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _95862_exprs) {
	jule::Ptr<_1ac9d13d4_FieldIns> _9607_f = _1ac9d3370_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1acb85cb4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1acb1cc4b_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1acb85cb4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1acb86127_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1bebbbe81:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebbce82:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bebbd9cc:;
						{
							jule::Ptr<_1ac9b7266_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1ac9b7266_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1bebbe37e:;
									{
										goto _iter_end_1bebbce82;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1bebc120a:;
									{
										_1acb85cb4_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1bebbce82;
									}
								}
								_match_end_1bebbe2e6:;
							};
						}
					}
					_match_end_1bebbd955:;
				};
			}
			_iter_next_1bebbce82:;
			++it;
			goto _iter_begin_1bebbce82;
		}
		_iter_end_1bebbce82:;
	};
	jule::Ptr<_1acbc0d98_Type> _9867_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Type;
	jule::Ptr<_1acb8cded_Data> _9907_d = _1acbadbaa_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1acb86545_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1acb86be9_readyExprs(_1acb85731_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebc6771:;
		if (it != expr_end) {
			jule::I32 _9998_i = it - expr->begin();
			jule::Ptr<_1ac9b2a47_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1bebc74ec:;
						{
							jule::Ptr<_1ac9b8872_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1ac9b8872_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type42) {
									_case_begin_1bebca412:;
									{
										goto _match_end_1bebc9ed3;
									}
								}
								else {
									_case_begin_1bebca049:;
									{
										_1acb85cb4_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1bebc6771;
									}
								}
								_match_end_1bebc9ed3:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1ac9b7266_FieldExprPair>(_1ac9b7266_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1bebc7475:;
				};
			}
			_iter_next_1bebc6771:;
			++it;
			_9998_i++;
			goto _iter_begin_1bebc6771;
		}
		_iter_end_1bebc6771:;
	};
	return _9987_ok;;
}



inline void _1acb86ea2_check(_1acb85731_structLitChecker* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1acb86be9_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebcd6bd:;
		if (it != expr_end) {
			jule::I32 _10298_i = it - expr->begin();
			jule::Ptr<_1ac9b2a47_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bebd45e7:;
						{
							jule::Ptr<_1ac9b7266_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1ac9b7266_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1acb85cb4_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1acb868a8_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1bebce8de:;
						{
							if (_10287_paired) {
								_1acb85cb4_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1acb85cb4_pushErr(_self_, (*_102915_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1bebcd6bd;
							};
							jule::Ptr<_1ac9d13d4_FieldIns> _10479_field = (*(*(_self_))._field_s.alloc)._field_Fields[_10298_i];;
							if ((!(_1acb1cc4b_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1acb85cb4_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1acb86127_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1acbc0d98_Type> _10559_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*_10479_field.alloc)._field_Type;
							jule::Ptr<_1acb8cded_Data> _10599_d = _1acbadbaa_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1bebcd6bd;
							};
							_1acb86545_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*_102915_expr.alloc)._field_Token));
						}
					}
					_match_end_1bebce878:;
				};
			}
			_iter_next_1bebcd6bd:;
			++it;
			_10298_i++;
			goto _iter_begin_1bebcd6bd;
		}
		_iter_end_1bebcd6bd:;
	};
	if ((!(_10287_paired))) {
		jule::I32 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1bebd8178:;
				{
					return;;
				}
			}
			_match_end_1bebd8057:;
		};
		_1a6a5cb3c_Builder _10778_idents = static__1a6a5d489_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1079:5"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1080:5"));
					(except.result);
				});
			}
		_iter_next_1bebd88d7:;
		}
		_iter_end_1bebd88d7:;;
		_1acb85cb4_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1a6a5ee4c_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1acb87513_rangeChecker_eq(_1acb87513_rangeChecker *_self_, _1acb87513_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1acb3d420_Var> _1acb87a30_buildVar(_1acb87513_rangeChecker* _self_, jule::Ptr<_1ac9c165a_VarDecl>* _109725_decl) {
	jule::Ptr<_1acb3d420_Var> _10987_v = _1ac97ec12_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1acb87c2d_setSizeKey(_1acb87513_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1acb8814b_checkRangeExprValidity(_1acb87513_rangeChecker* _self_, jule::Ptr<_1acb8cded_Data>* _111643_d, jule::Ptr<_1acb3d420_Var>* _111654_key, jule::Ptr<_1acbc0d98_Type>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1acbc277e_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1acb29263_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_TypeSym))._field_Type), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1acb88349_checkSlice(_1acb87513_rangeChecker* _self_) {
	_1acb87c2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _11357_slc = _1acbc45a5_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_11357_slc))._field_Elem});
	_1acb8814b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1acb88547_checkArray(_1acb87513_rangeChecker* _self_) {
	_1acb87c2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1acbd07d1_Arr> _11487_arr = _1acbc431e_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_11487_arr))._field_Elem});
	_1acb8814b_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1acb88745_checkMapKeyA(_1acb87513_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1acbceb54_Map> _11607_m = _1acbc50de_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_11607_m))._field_Key});
	jule::Ptr<_1acb8cded_Data> _11647_d = jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Type=(*_11607_m.alloc)._field_Key;
	_1acb8814b_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1acb88943_checkMapKeyB(_1acb87513_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1acbceb54_Map> _11757_m = _1acbc50de_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_11757_m))._field_Val});
	jule::Ptr<_1acb8cded_Data> _11797_d = jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Type=(*_11757_m.alloc)._field_Val;
	_1acb8814b_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1acb88b41_checkMap(_1acb87513_rangeChecker* _self_) {
	_1acb88745_checkMapKeyA(_self_);
	_1acb88943_checkMapKeyB(_self_);
}



inline void _1acb88d3e_checkStr(_1acb87513_rangeChecker* _self_) {
	_1acb87c2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1abc2e468_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _1acb8903c_checkComptime(_1acb87513_rangeChecker* _self_) {
	_1acb87c2d_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s, (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*(*(_self_))._field_rang.alloc)._field_KeyB == nullptr) || _1abc2e468_IsIgnoreIdent((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1acb87a30_buildVar(_self_, &((*(*(_self_))._field_rang.alloc)._field_KeyB));
}



inline jule::Bool _1acb892c3_checkComptimeRange(_1acb87513_rangeChecker* _self_) {
	jule::Ptr<_1ac92d0bc_comptimeRange> _12147_range = _1acbc68e8_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data6)) {
			_case_begin_1bec0a321:;
			{
				_1acb8903c_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bec0a62e:;
			{
				_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bec0a5b8:;
	};
}



inline jule::Bool _1acb89559_check(_1acb87513_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1bec0da83:;
		}
		else if ((_1acbc45a5_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec0c433:;
			{
				_1acb88349_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1acbc431e_Arr((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec0c499:;
			{
				_1acb88547_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1acbc50de_Map((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec0c9e9:;
			{
				_1acb88b41_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1acbc68e8_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec0ca60:;
			{
				return _1acb892c3_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bec0c39a:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _12474_prim = _1acbc354e_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
				if (((_12474_prim != nullptr) && _1acbcc47b_IsStr(_12474_prim))) {
					_1acb88d3e_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bec0c28a:;
	};
	_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1acb8a2b3_prepareTypes(_1acb89d51_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1acaa6641_Types((*(_self_))._field_f);
	};
}



inline void _1acb8a56b_prepareExprs(_1acb89d51_retTypeChecker* _self_, jule::Ptr<_1ac9b2a47_Expr>* _127633_e) {
	if (((*(_127633_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bec15084:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127633_e))))._field_Kind.unsafe_cast_ptr<_1ac9b363b_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1bec14913:;
			{
				{ jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127633_e))); };
			}
		}
		_match_end_1bec1447e:;
	};
}



inline void _1acb8a769_checkExprs(_1acb89d51_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1acb8cded_Data>> _12927_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb8cded_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1acb8edbc_eval> _12937_eval = _1acb243b2_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	(*(_12937_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec17bbe:;
		if (it != expr_end) {
			jule::I32 _12958_i = it - expr->begin();
			jule::Ptr<_1ac9b2a47_Expr> _129515_expr = *it;
			{
				if ((_12958_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1bec17bbe;
				};
				jule::Ptr<_1acbc0d98_Type> _13008_t = (*(_self_))._field_types[_12958_i];;
				(*_12937_eval.alloc)._field_prefix=_13008_t;
				jule::Ptr<_1acb8cded_Data> _13038_d = _1acbadbaa_evalExpr(_12937_eval, _129515_expr);;
				if ((_13038_d == nullptr)) {
					goto _iter_next_1bec17bbe;
				};
				{ jule::Slice<jule::Ptr<_1acb8cded_Data>> &__jule_push_dest = _12927_datas; __jule_push_dest.push(_13038_d); };
				if ((((*(_self_))._field_mutable && (!((*(_13038_d))._field_Mutable))) && _1acbc277e_Mutable((*(_13038_d))._field_Type.ptr()))) {
					_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1acb7b0b7_assignTypeChecker _13158_ac = _1acb7b0b7_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13008_t, ._field_d=_13038_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1ac966831_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1acb7c0b8_check(&_13158_ac);
			}
			_iter_next_1bec17bbe:;
			++it;
			_12958_i++;
			goto _iter_begin_1bec17bbe;
		}
		_iter_end_1bec17bbe:;
	};
	if ((_12927_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1aca9a723_TupleExprModel>(_1aca9a723_TupleExprModel{._field_Datas=_12927_datas}), &__jule_any_type84);
	} else if ((_12927_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12927_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1acb8aa00_tryFuncMultiRetForward(_1acb89d51_retTypeChecker* _self_) {
	jule::Ptr<_1acb8edbc_eval> _13377_eval = _1acb243b2_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
	jule::Ptr<_1acb8cded_Data> _13387_d = _1acbadbaa_evalExpr(_13377_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13387_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1acbce0a4_Tuple> _13447_tup = _1acbc5375_Tup((*(_13387_d))._field_Type.ptr());;
	if ((_13447_tup == nullptr)) {
		return false;;
	};
	if (((*(_13447_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1bec2400a;
	};
	(*(_self_))._field_model=(*(_13387_d))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec220a2:;
		if (it != expr_end) {
			jule::I32 _13527_i = it - expr->begin();
			{
				jule::Ptr<_1acbc0d98_Type> _13538_t1 = (*(_self_))._field_types[_13527_i];;
				jule::Ptr<_1acbc0d98_Type> _13548_t2 = (*(_13447_tup))._field_Types[_13527_i];;
				if ((!(_1acb24e84__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13538_t1), &(_13548_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1bec2400a;
				};
			}
			_iter_next_1bec220a2:;
			++it;
			_13527_i++;
			goto _iter_begin_1bec220a2;
		}
		_iter_end_1bec220a2:;
	};
	return true;;
	_julec_label_1bec2400a:;
	_1a6a5cb3c_Builder _13617_wanted = static__1a6a5d489_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec24615:;
		if (it != expr_end) {
			jule::I32 _13627_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _136210_t = *it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_13617_wanted, _1acbc1294_Str(_136210_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1363:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13627_i) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&_13617_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1365:5"));
						(except.result);
					});
				};
			}
			_iter_next_1bec24615:;
			++it;
			_13627_i++;
			goto _iter_begin_1bec24615;
		}
		_iter_end_1bec24615:;
	};
	_1a6a5cb3c_Builder _13687_given = static__1a6a5d489_New(32LL);;
	{
		auto expr = &((*(_13447_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec2634d:;
		if (it != expr_end) {
			jule::I32 _13697_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _136910_t = *it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_13687_given, _1acbc1294_Str(_136910_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1370:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13697_i) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&_13687_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1372:5"));
						(except.result);
					});
				};
			}
			_iter_next_1bec2634d:;
			++it;
			_13697_i++;
			goto _iter_begin_1bec2634d;
		}
		_iter_end_1bec2634d:;
	};
	_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a6a5e49b_Str(&_13617_wanted), &__jule_any_type5); (*it++) = jule::Any(_1a6a5e49b_Str(&_13687_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1acb8ad41_check(_1acb89d51_retTypeChecker* _self_, jule::Ptr<_1ac9b2a47_Expr>* _137926_e) {
	_1acb8a2b3_prepareTypes(_self_);
	_1acb8a56b_prepareExprs(_self_, _137926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1bec2972a:;
			{
				if ((!(_1acaa35c7_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1acaa2807_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1bec29791:;
			{
				_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1bec29807:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1bec2e279:;
						{
							if (_1acb8aa00_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1bec2e1be:;
				};
				_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1bec2986d:;
			{
				_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1bec298d4:;
			{
				_1ac9abb2e_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bec295b5:;
	};
	_1acb8a769_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1acb8cded_Data_eq(_1acb8cded_Data *_self_, _1acb8cded_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1acb8d31b_IsNil(_1acb8cded_Data* _self_) {
	return _1acbc1ecb_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1acb8d5a2_IsVoid(_1acb8cded_Data* _self_) {
	return _1acbc2262_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1acb8d838_IsConst(_1acb8cded_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1acb8db79_GoodOperand(_1acb8cded_Data* _self_, jule::Ptr<_1acb8cded_Data>* _6228_other) {
	if ((_1acbc4088_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1acbc354e_Prim((*((*(_6228_other))))._field_Type) == nullptr) || (!(_1acbcc712_IsAny(_1acbc354e_Prim((*((*(_6228_other))))._field_Type).ptr())))) && (_1acbc4d58_Trait((*((*(_6228_other))))._field_Type) == nullptr)) && (!(_1acbc1ecb_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1acb8e075_Value_eq(_1acb8e075_Value *_self_, _1acb8e075_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1acb8e44e_target_eq(_1acb8e44e_target *_self_, _1acb8e44e_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1acb8edbc_eval_eq(_1acb8edbc_eval *_self_, _1acb8edbc_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_1acb8e44e_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _1acb90395_pushErr(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _1acb90708_pushSuggestion(_1acb8edbc_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_1ac9abe92_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _1acb90906_allowBuiltin(_1acb8edbc_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1acb90b04_disallowBuiltin(_1acb8edbc_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1acb90d8a_isUnsafe(_1acb8edbc_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1acb91121_isGlobal(_1acb8edbc_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4)) {
			_case_begin_1bec8eedd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bec903ea:;
			{
				return false;;
			}
		}
		_match_end_1bec90384:;
	};
}



inline jule::Bool _1acb91462_applyNumericPrefix(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_1acb8d838_IsConst((*(_12939_d)).ptr())))) || (_1acbc354e_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _1363_prim = _1acbc354e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ac92b83a_IsFloat(_1acbc9335_Str(_1363_prim.ptr()))) {
			_case_begin_1bec92a7e:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>((*((*(_self_))._field_prefix)));
				_1aca8c319_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _1aca8b48e_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		else if (_1ac92ae22_IsSigInt(_1acbc9335_Str(_1363_prim.ptr()))) {
			_case_begin_1bec92ae5:;
			{
				if ((!(_1acb78515_sigAssignable(_1acbc9335_Str(_1363_prim.ptr()), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>((*((*(_self_))._field_prefix)));
				_1aca8b747_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		else if (_1ac92b230_IsUnsigInt(_1acbc9335_Str(_1363_prim.ptr()))) {
			_case_begin_1bec92b5b:;
			{
				if ((!(_1acb788cd_unsigAssignable(_1acbc9335_Str(_1363_prim.ptr()), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>((*((*(_self_))._field_prefix)));
				_1aca8ba00_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*(_1363_prim))._field_Kind;
			}
		}
		_match_end_1bec92991:;
	};
	return true;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb917a3_litStr(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_1abc2ce6c_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_1acb76887_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_1acb76bc8_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_1aca3208e_Const> _1717_constant = static__1aca89569_NewStr(_1657_s);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc447e0_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb91ae4_litRune(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _18120_l) {
	jule::I32 _1823_r = _1acb5b3e9_ToRune((*((*(_18120_l))))._field_Value);;
	jule::Ptr<_1acb8cded_Data> _1837_data = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_1823_r))});;
	if ((_1823_r <= 255LL)) {
		(*(_1837_data))._field_Type=_1acc462c5_primU8;
	} else {
		(*(_1837_data))._field_Type=_1acc45c64_primI32;
	};
	(*(_1837_data))._field_Model=jule::Any(jule::new_ptr<_1aca9dd64_RuneExprModel>(_1aca9dd64_RuneExprModel{._field_Code=_1823_r}), &__jule_any_type86);
	(*_1837_data.alloc)._field_Mutable=true;
	(*_1837_data.alloc)._field_IsRune=true;
	(*_1837_data.alloc)._field_untyped=true;
	return _1837_data;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb91e35_litFloat(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _20021_l) {
	jule::F64 _2013_f = ({
		auto except = _1aa5102de_ParseFloat((*((*(_20021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1aca3208e_Const> _2027_constant = static__1aca89833_NewF64(_2013_f);;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47271_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2027_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2027_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb92276_litInt(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _21223_l) {
	;
	jule::Str _2157_lit = (*((*(_21223_l))))._field_Value;;
	jule::I32 _2167_base = 0LL;;
	{
		
		if (_1a8e45ee0_HasPrefix(_2157_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1beca5124:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=16LLU;
			}
		}
		else if (_1a8e45ee0_HasPrefix(_2157_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1beca5212:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=2LLU;
			}
		}
		else if (_1a8e45ee0_HasPrefix(_2157_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1beca4cc2:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=8LLU;
			}
		}
		else if (((_2157_lit[0LL] == '0') && (_2157_lit.len() > 1LL))) {
			_case_begin_1beca4d38:;
			{
				(_2157_lit).mut_slice(1LL);;
				_2167_base=8LLU;
			}
		}
		else {
			_case_begin_1beca4c5b:;
			{
				_2167_base=10LLU;
			}
		}
		_match_end_1beca4bd4:;
	};
	jule::Ptr<_1acb8cded_Data> _2367_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	jule::Bool _2387_ok = true;;
	jule::I64 _2393_sig = ({
		auto except = _1aa508b34_ParseInt(_2157_lit, _2167_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2387_ok=false;

			0LL;
		});
	});;
	if (_2387_ok) {
		(*_2367_d.alloc)._field_Constant=static__1aca88c61_NewI64(_2393_sig);
		(*_2367_d.alloc)._field_Type=_1acc454c2_primInt;
	} else {
		jule::U64 _2474_unsig = ({
			auto except = _1aa50867d_ParseUint(_2157_lit, _2167_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1acb90395_pushErr(_self_, (*((*(_21223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2367_d.alloc)._field_Constant=static__1aca88ed6_NewU64(_2474_unsig);
		(*_2367_d.alloc)._field_Type=_1acc45109_primUint;
	};
	(*_2367_d.alloc)._field_Model=jule::Any((*_2367_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2367_d.alloc)._field_untyped=true;
	if ((!(_1acb91462_applyNumericPrefix(_self_, &(_2367_d))))) {
		_1acbb7c19_fitBitsize(&(_2367_d));
	};
	return _2367_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb925b7_litNum(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr>* _26723_l) {
	{
		
		if (_1abc2db1b_IsFloat((*((*(_26723_l))))._field_Value)) {
			_case_begin_1becac3c3:;
			{
				return _1acb91e35_litFloat(_self_, _26723_l);;
			}
		}
		else {
			_case_begin_1becac35c:;
			{
				return _1acb92276_litInt(_self_, _26723_l);;
			}
		}
		_match_end_1becac24c:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acb92908_evalLit(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b39d2_LitExpr> _27623_lit) {
	{
		
		if (_1abc2cbd6_IsStr((*(_27623_lit))._field_Value)) {
			_case_begin_1becad5e4:;
			{
				return _1acb917a3_litStr(_self_, &(_27623_lit));;
			}
		}
		else if (_1abc2d236_IsRune((*(_27623_lit))._field_Value)) {
			_case_begin_1becad65a:;
			{
				return _1acb91ae4_litRune(_self_, &(_27623_lit));;
			}
		}
		else if (_1abc2ddd5_IsNum((*(_27623_lit))._field_Value)) {
			_case_begin_1becad6c1:;
			{
				return _1acb925b7_litNum(_self_, &(_27623_lit));;
			}
		}
		else {
			_case_begin_1becaced9:;
			{
				return nullptr;;
			}
		}
		_match_end_1becacdc9:;
	};
}



inline jule::Any _1acb92c49_findBuiltins(_1acb8edbc_eval* _self_, jule::Str* _28929_ident) {
	if (_1ac9a5e25_IsPub((*(_28929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data2)) {
				_case_begin_1becb0959:;
				{
					jule::Any _2939_def = _1acbb79d8_findBuiltinsImport(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1ac98b8cd_ImportInfo>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data2));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4)) {
				_case_begin_1becb06a1:;
				{
					jule::Any _2989_def = _1acbb8742_findBuiltinsSema(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1ac9a8c2a_sema>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
				_case_begin_1becb09c0:;
				{
					jule::Any _3039_def = _1acbb8742_findBuiltinsSema(_28929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)))._field_s);;
					if ((_3039_def != nullptr)) {
						return _3039_def;;
					};
				}
			}
			_match_end_1becb089e:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1acc47aac_findBuiltinDef(_28929_ident);;
}



inline jule::Any _1acb93145_getDef(_1acb8edbc_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded) {
	jule::Ptr<_1acb3d420_Var> _3217_v = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbde966_FindVar((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3217_v != nullptr)) {
		return jule::Any(_3217_v, &__jule_any_type7);;
	};
	jule::Ptr<_1acbc00a6_TypeAlias> _3267_ta = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbded62_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3267_ta != nullptr)) {
		return jule::Any(_3267_ta, &__jule_any_type8);;
	};
	if ((!(_31635_binded))) {
		jule::Ptr<_1acab021b_Enum> _3328_enm = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe0cdb_FindEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3328_enm != nullptr)) {
			return jule::Any(_3328_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1acab1926_TypeEnum> _3378_tenm = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe112c_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3378_tenm != nullptr)) {
			return jule::Any(_3378_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1acaa2351_Fn> _3437_f = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe0659_FindFn((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3437_f != nullptr)) {
		return jule::Any(_3437_f, &__jule_any_type10);;
	};
	jule::Ptr<_1ac9ce129_Struct> _3487_s = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe025d_FindStruct((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3487_s != nullptr)) {
		return jule::Any(_3487_s, &__jule_any_type9);;
	};
	return _1acb92c49_findBuiltins(_self_, _31623_ident);;
}



inline jule::Ptr<_1ac979855_ReferenceStack> _1acb933cb_getOwnerRefers(_1acb8edbc_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1becb9ea2:;
			{
				return _1ac966ab7_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1becb8841:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1becb87ca:;
	};
	return nullptr;;
}



inline void _1becd3075_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _37437_ref) {
	jule::Ptr<_1ac979855_ReferenceStack> _3757_refers = _1acb933cb_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1becd564e_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1ac97a6ad_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type64));
	};
}

inline void _1becee8cc_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _37437_ref) {
	jule::Ptr<_1ac979855_ReferenceStack> _3757_refers = _1acb933cb_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1bed01c20_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1ac97a6ad_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type7));
	};
}

inline void _1be23bce8_pushReference(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _37437_ref) {
	jule::Ptr<_1ac979855_ReferenceStack> _3757_refers = _1acb933cb_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1be21a2c1_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1ac97a6ad_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type65));
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acb939c5__evalEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _38125_enm) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38125_enm, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb93dc1_evalEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _39028_enm, jule::Ptr<_1abc2ba81_Token> _39040_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39028_enm))._field_Public, (*_39028_enm.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _39040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39028_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1acb939c5__evalEnum(_self_, _39028_enm);;
}



inline jule::Ptr<_1acb8cded_Data> _1acb94212__evalTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _39929_enm) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39929_enm, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb9460d_evalTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _40832_enm, jule::Ptr<_1abc2ba81_Token> _40848_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40832_enm))._field_Public, (*_40832_enm.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _40848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40832_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1acb94212__evalTypeEnum(_self_, _40832_enm);;
}



inline jule::Ptr<_1acb8cded_Data> _1acb9494e__evalStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns> _41727_s) {
	jule::Ptr<_1acb8cded_Data> _4187_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41727_s, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41727_s, &__jule_any_type65), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if ((((*(_41727_s))._field_Decl != nullptr) && (*(*(_41727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4187_d))._field_Type))._field_BindIdent=(*(*(_41727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4187_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb94d4a_evalStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9ce129_Struct> _43130_s, jule::Ptr<_1abc2ba81_Token> _43146_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43130_s))._field_Public, (*_43130_s.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _43146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43130_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acb954ee_checkDeprecated(_self_, &((*_43130_s.alloc)._field_Directives), _43146_errorToken);
	jule::Ptr<_1ac9d1e84_StructIns> _4407_ins = _1ac9ce5be_instance(_43130_s);;
	if (((*_43130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1ac9d1e84_StructIns> _4478_exist = _1ac9ce8cc_appendInstance(_43130_s, &(_4407_ins));;
		if ((_4478_exist != nullptr)) {
			_4407_ins=_4478_exist;
		} else {
			if ((!(_1acb3614e_precheckStructIns((*(_self_))._field_s, &(_4407_ins), _43146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	return _1acb9494e__evalStruct(_self_, _4407_ins);;
}



inline jule::Ptr<_1acb8cded_Data> _1acb9518b_evalFnIns(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns> _46025_f) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_46025_f, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_46025_f, &__jule_any_type64), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline void _1acb954ee_checkDeprecated(_1acb8edbc_eval* _self_, jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _46936_directives, jule::Ptr<_1abc2ba81_Token> _46967_tok) {
	if (_1acb90d8a_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1abc419b9_Directive> _4743_d = _1acbb7620_findDirective(_46936_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4743_d != nullptr)) {
		if (((*_4743_d.alloc)._field_Args.len() == 0LL)) {
			_1acb90395_pushErr(_self_, _46967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1acb90395_pushErr(_self_, _46967_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4743_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acb958ea_evalFn(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa2351_Fn> _48526_f, jule::Ptr<_1abc2ba81_Token> _48534_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48526_f))._field_Public, (*_48526_f.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _48534_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48526_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acb954ee_checkDeprecated(_self_, &((*_48526_f.alloc)._field_Directives), _48534_errorToken);
	jule::Ptr<_1acaa540e_FnIns> _4947_ins = _1acaa3ae4_instance(_48526_f);;
	if (((*_48526_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1acaa540e_FnIns> _5018_exist = _1acaa3e02_appendInstance(_48526_f, &(_4947_ins));;
		if ((_5018_exist != nullptr)) {
			_4947_ins=_5018_exist;
		};
	};
	_1becd3075_pushReference(_self_, &(_4947_ins));
	return _1acb9518b_evalFnIns(_self_, _4947_ins);;
}



inline void _1acb95d18_pushIllegalCycleError(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _51038_v1, jule::Ptr<_1acb3d420_Var>* _51049_v2, _1a6a5cb3c_Builder* _51064_message) {
	;
	jule::Str _5123_refersTo = _1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51038_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_51049_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5133_buf = _1a6a5ee4c_Buf(_51064_message);;
	({
		auto except = _1a6a5db1b_WriteStr(_51064_message, _1a8e45b27_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:514:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_51064_message, _5123_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_51064_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
	});
	({
		auto except = _1a6a5d7ca_Write(_51064_message, _5133_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:517:3"));
		(except.result);
	});
}



inline jule::Bool _1acb96214_checkCrossCycle(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _52032_v, _1a6a5cb3c_Builder* _52046_message) {
	{
		auto expr = &((*((*(_52032_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1becd9a2c:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> *_52110_d = it;
			{
				if (((*(_52110_d)) == (*(_self_))._field_owner)) {
					_1acb95d18_pushIllegalCycleError(_self_, _52032_v, _52110_d, _52046_message);
					return false;;
				};
				if ((!(_1acb96214_checkCrossCycle(_self_, _52110_d, _52046_message)))) {
					_1acb95d18_pushIllegalCycleError(_self_, _52032_v, _52110_d, _52046_message);
					return false;;
				};
			}
			_iter_next_1becd9a2c:;
			++it;
			goto _iter_begin_1becd9a2c;
		}
		_iter_end_1becd9a2c:;
	};
	return true;;
}



inline jule::Bool _1acb96610_checkIllegalCycles(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var>* _53739_v, jule::Ptr<_1abc2ba81_Token> _53748_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53739_v)))) {
		_1acb90395_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_owner))._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a6a5cb3c_Builder _5507_message = static__1a6a5d489_New(32LL);;
	if ((!(_1acb96214_checkCrossCycle(_self_, _53739_v, &(_5507_message))))) {
		jule::Str _5538_errMsg = _1a6a5e49b_Str(&_5507_message);;
		_1a6a5e699_Clear(&_5507_message);
		_1acb95d18_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53739_v, &(_5507_message));
		_5538_errMsg+=_1a6a5e49b_Str(&_5507_message);
		_1acb90395_pushErr(_self_, _53748_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5538_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*((*(_self_))._field_owner))._field_Depends; __jule_push_dest.push((*(_53739_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb96a0b_evalVar(_1acb8edbc_eval* _self_, jule::Ptr<_1acb3d420_Var> _56527_v, jule::Ptr<_1abc2ba81_Token> _56536_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56527_v))._field_Public, (*_56527_v.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _56536_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56527_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acb954ee_checkDeprecated(_self_, &((*_56527_v.alloc)._field_Directives), _56536_errorToken);
	if (((*_56527_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1bed06a27;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4)) {
			_case_begin_1bece82dd:;
			{
				jule::Bool _5824_ok = _1acb96610_checkIllegalCycles(_self_, &(_56527_v), _56536_errorToken);;
				if ((!(_5824_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1bece7bb1:;
			{
				jule::Ptr<_1ac9631bd_scopeChecker> _5878_s = (*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1);;
				jule::Ptr<_1ac9631bd_scopeChecker> _5888_root = _1ac96659a_getRoot(_5878_s);;
				if ((((((*_56527_v.alloc)._field_Scope != nullptr) && (!((*_56527_v.alloc)._field_Constant))) && ((*(_5888_root))._field_captured != nullptr)) && _1acbbd44a_isVarCaptured(_5888_root, _5878_s, _56527_v))) {
					_1ac966314_pushCaptured(_5888_root, &(_56527_v));
				};
				if (((!((*_56527_v.alloc)._field_Reference)) || _1acb90d8a_isUnsafe(_self_))) {
					goto _match_end_1bece8101;
				};
				while ((((*_5878_s.alloc)._field_owner == nullptr) && ((*_5878_s.alloc)._field_parent != nullptr))) {
					{
						_5878_s=(*_5878_s.alloc)._field_parent;
					}
				_iter_next_1becebe90:;
				}
				_iter_end_1becebe90:;;
				if (((((*_5878_s.alloc)._field_owner != nullptr) && (*((*_5878_s.alloc)._field_owner))._field_Anon) && ((*_56527_v.alloc)._field_Scope != (*((*_5878_s.alloc)._field_owner))._field_Scope))) {
					_1acb90395_pushErr(_self_, _56536_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56527_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1bece8101:;
	};
	if (((*_56527_v.alloc)._field_Scope == nullptr)) {
		_1becee8cc_pushReference(_self_, &(_56527_v));
	};
	if (((((!((*_56527_v.alloc)._field_Used)) && (!((*_56527_v.alloc)._field_Binded))) && ((*_56527_v.alloc)._field_Scope == nullptr)) && (((*_56527_v.alloc)._field_Value == nullptr) || ((*((*_56527_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1acaa8654_SymTab> _6218_varfile = _1ac988c1b_findVarFileInPackage(&((*(*(_self_))._field_s.alloc)._field_files), &(_56527_v));;
		jule::Ptr<_1acaa8654_SymTab> _6228_file = _1ac9ab458_getCurrentFile((*(_self_))._field_s);;
		_1ac9ab711_setCurrentFile((*(_self_))._field_s, _6218_varfile);
		_1acb34548_checkVar((*(_self_))._field_s, &(_56527_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4));
		_1ac9ab711_setCurrentFile((*(_self_))._field_s, _6228_file);
	};
	(*_56527_v.alloc)._field_Used=true;
	if ((((*_56527_v.alloc)._field_TypeSym == nullptr) || ((*((*_56527_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1bed06a27:;
	jule::Ptr<_1acb8cded_Data> _6417_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*((*_56527_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56527_v.alloc)._field_Mutable, ._field_Reference=(*_56527_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56527_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56527_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if ((((*_56527_v.alloc)._field_Value != nullptr) && ((*((*_56527_v.alloc)._field_Value))._field_Data != nullptr))) {
		if (((!((*_56527_v.alloc)._field_Binded)) && _1acb3d82c_IsInitialized(_56527_v))) {
			(*(_6417_d))._field_IsRune=(*((*((*_56527_v.alloc)._field_Value))._field_Data))._field_IsRune;
		};
		if (((*_56527_v.alloc)._field_Constant && ((*((*((*_56527_v.alloc)._field_Value))._field_Data))._field_Constant != nullptr))) {
			(*_6417_d.alloc)._field_Constant=jule::new_ptr<_1aca3208e_Const>((*(*((*((*(_56527_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6417_d.alloc)._field_Model=jule::Any((*_6417_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1acb3dd49_untypedConstant(_56527_v)) {
				_1acb91462_applyNumericPrefix(_self_, &(_6417_d));
				(*_6417_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6417_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb96e07_evalTypeAlias(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc00a6_TypeAlias> _66533_ta, jule::Ptr<_1abc2ba81_Token> _66549_errorToken) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66533_ta))._field_Public, (*_66533_ta.alloc)._field_Token)))) {
		_1acb90395_pushErr(_self_, _66549_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66533_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_66533_ta.alloc)._field_Used=true;
	jule::Trait _6747_kind = (*((*((*_66533_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1acb8cded_Data> _67511_d = nullptr;;
	{
		auto &_match_expr{ _6747_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)) {
			_case_begin_1bdec73d0:;
			{
				_67511_d=_1acb9494e__evalStruct(_self_, _6747_kind.cast_ptr<_1ac9d1e84_StructIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3)) {
			_case_begin_1bdec7534:;
			{
				_67511_d=_1acb939c5__evalEnum(_self_, _6747_kind.cast_ptr<_1acab021b_Enum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)) {
			_case_begin_1bdec75bc:;
			{
				_67511_d=_1acb94212__evalTypeEnum(_self_, _6747_kind.cast_ptr<_1acab1926_TypeEnum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1bed10b41:;
			{
				_67511_d=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66533_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});
				if ((*_66533_ta.alloc)._field_Binded) {
					(*((*(_67511_d))._field_Type))._field_BindIdent=(*_66533_ta.alloc)._field_Ident;
				} else {
					(*((*(_67511_d))._field_Type))._field_BindIdent=(*(*((*(_66533_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67511_d))._field_Model=jule::Any((*_67511_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		_match_end_1bed109ba:;
	};
	(*((*(_67511_d))._field_Type))._field_Generic=(*_66533_ta.alloc)._field_Generic;
	return _67511_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb97303_evalDef(_1acb8edbc_eval* _self_, jule::Any* _70428_def, jule::Ptr<_1abc2ba81_Token> _70442_ident) {
	{
		auto &_match_expr{ (*(_70428_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdeca59d:;
			{
				return _1acb96a0b_evalVar(_self_, (*(_70428_def)).cast_ptr<_1acb3d420_Var>(&__jule_any_type7), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdeca36c:;
			{
				return _1acb93dc1_evalEnum(_self_, (*(_70428_def)).cast_ptr<_1acab021b_Enum>(&__jule_any_type12), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bdeca614:;
			{
				return _1acb9460d_evalTypeEnum(_self_, (*(_70428_def)).cast_ptr<_1acab1926_TypeEnum>(&__jule_any_type13), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdeca67a:;
			{
				return _1acb94d4a_evalStruct(_self_, (*(_70428_def)).cast_ptr<_1ac9ce129_Struct>(&__jule_any_type9), _70442_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdeca6e1:;
			{
				jule::Ptr<_1acaa2351_Fn> _7158_f = (*(_70428_def)).cast_ptr<_1acaa2351_Fn>(&__jule_any_type10);;
				if ((!(*(_7158_f))._field_Ident.equal("init", 4))) {
					return _1acb958ea_evalFn(_self_, _7158_f, _70442_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bdeca768:;
			{
				return _1acb9518b_evalFnIns(_self_, (*(_70428_def)).cast_ptr<_1acaa540e_FnIns>(&__jule_any_type64));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdeca7e0:;
			{
				return _1acb96e07_evalTypeAlias(_self_, (*(_70428_def)).cast_ptr<_1acbc00a6_TypeAlias>(&__jule_any_type8), _70442_ident);;
			}
		}
		_match_end_1bdeca49e:;
	};
	_1acb90395_pushErr(_self_, _70442_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_70442_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb97644_evalIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b4362_IdentExpr> _72829_ident) {
	jule::Any _7297_def = _1acb93145_getDef(_self_, &((*(_72829_ident))._field_Ident), (*_72829_ident.alloc)._field_Binded);;
	return _1acb97303_evalDef(_self_, &(_7297_def), (*_72829_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1acb8cded_Data> _1acb97985_evalUnary(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b4b04_UnaryExpr> _73330_u) {
	_1acbae13e_unaryEval _7347_unary = static__1acbae5b2_new(_self_);;
	return _1acbb09e2_eval(&_7347_unary, _73330_u);;
}



inline jule::Ptr<_1acb8cded_Data> _1acb97cc6_evalVariadic(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b4ecd_VariadicExpr> _73833_v) {
	if (((*(_73833_v))._field_Expr == nullptr)) {
		_1acb90395_pushErr(_self_.ptr(), (*_73833_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acbc0d98_Type> _7447_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7447_prefix;
	});;
	jule::Ptr<_1acb8cded_Data> _7487_d = _1acbadbaa_evalExpr(_self_, (*_73833_v.alloc)._field_Expr);;
	if ((_7487_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acbc32b8_Variadicable((*(_7487_d))._field_Type.ptr())))) {
		_1acb90395_pushErr(_self_, (*_73833_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_7487_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1acbbd01b_makeVariadic(&(_7487_d), (*(_1acbc45a5_Slc((*(_7487_d))._field_Type)))._field_Elem);
	return _7487_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb98117_evalUnsafe(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b3dab_UnsafeExpr> _76031_u) {
	jule::Bool _7613_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1acb8cded_Data> _7637_d = _1acbadbaa_evalExpr(_self_, (*(_76031_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7613_unsafety;
	return _7637_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acb98458_evalArr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _76828_s) {
	jule::Ptr<_1acbd07d1_Arr> _7707_pt = _1acbc431e_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1acbd07d1_Arr> _7727_arr = jule::new_ptr<_1acbd07d1_Arr>(_1acbd07d1_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7707_pt))._field_Elem});;
	jule::Bool _7787_filled = false;;
	if (((*(_76828_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76828_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1bdedabb8:;
				{
					if (((*((*((*(_76828_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1ac9b4ecd_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1bdedab0d;
					};
					if ((*_7707_pt.alloc)._field_Auto) {
						_1acb90395_pushErr(_self_, (*_76828_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7787_filled=true;
					((*(_76828_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1bdedab0d:;
		};
	};
	(*(_7727_arr))._field_N=(*_76828_s.alloc)._field_Exprs.len();
	if ((!((*_7707_pt.alloc)._field_Auto))) {
		if (((*_7727_arr.alloc)._field_N > (*_7707_pt.alloc)._field_N)) {
			_1acb90395_pushErr(_self_, (*_76828_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7727_arr.alloc)._field_N < (*_7707_pt.alloc)._field_N)) {
			(*_7727_arr.alloc)._field_N=(*_7707_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1aca9a426_ArrayExprModel> _8077_model = jule::new_ptr<_1aca9a426_ArrayExprModel>(_1aca9a426_ArrayExprModel{._field_Kind=_7727_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7787_filled) {
		(*(_8077_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8077_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76828_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1acbc0d98_Type> _8167_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7727_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76828_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdee2c14:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _81815_elem = *it;
			{
				jule::Ptr<_1acb8cded_Data> _8198_d = _1acbadbaa_evalExpr(_self_, _81815_elem);;
				if ((_8198_d == nullptr)) {
					goto _iter_next_1bdee2c14;
				};
				;
				if (_1acb29263_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7727_arr.alloc)._field_Elem), &(_8198_d), &((*(_81815_elem))._field_Token))) {
					_1acb249cd_checkAssignType((*(_self_))._field_s, false, &((*_7727_arr.alloc)._field_Elem), &(_8198_d), (*_81815_elem.alloc)._field_Token, _1acb933cb_getOwnerRefers(_self_));
				};
				(*(_8077_model))._field_Elems=jule::append((*_8077_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8198_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1bdee2c14:;
			++it;
			goto _iter_begin_1bdee2c14;
		}
		_iter_end_1bdee2c14:;
	};
	(*_self_.alloc)._field_prefix=_8167_prefix;
	if (_7787_filled) {
		(*_8077_model.alloc)._field_Elems=jule::append((*_8077_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7727_arr, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8077_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb9890e_evalExpSlc(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _84531_s, jule::Ptr<_1acbc0d98_Type> _84555_t, jule::Any _84569_first) {
	jule::Ptr<_1acbcd4b0_Slc> _8467_slc = jule::new_ptr<_1acbcd4b0_Slc>(_1acbcd4b0_Slc{._field_Elem=_84555_t});;
	jule::I32 _8507_i = 0LL;;
	jule::Ptr<_1aca974de_SliceExprModel> _8517_model = jule::new_ptr<_1aca974de_SliceExprModel>(_1aca974de_SliceExprModel{._field_ElemType=_84555_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84531_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84569_first != nullptr)) {
		(*(_8517_model))._field_Elems=jule::append((*_8517_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84569_first; __jule_collection; }));
		_8507_i=1LL;
	};
	jule::Ptr<_1acbc0d98_Type> _8607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8467_slc))._field_Elem;
	{
		auto expr = (*_84531_s.alloc)._field_Exprs.slice(_8507_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bdeedc0e:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _86215_elem = *it;
			{
				jule::Ptr<_1acb8cded_Data> _8638_d = _1acbadbaa_evalExpr(_self_, _86215_elem);;
				if ((_8638_d != nullptr)) {
					;
					if (_1acb29263_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8467_slc.alloc)._field_Elem), &(_8638_d), &((*(_86215_elem))._field_Token))) {
						_1acb249cd_checkAssignType((*(_self_))._field_s, false, &((*_8467_slc.alloc)._field_Elem), &(_8638_d), (*_86215_elem.alloc)._field_Token, _1acb933cb_getOwnerRefers(_self_));
					};
					(*_8517_model.alloc)._field_Elems=jule::append((*_8517_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8638_d.alloc)._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1bdeedc0e:;
			++it;
			goto _iter_begin_1bdeedc0e;
		}
		_iter_end_1bdeedc0e:;
	};
	(*_self_.alloc)._field_prefix=_8607_prefix;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8467_slc, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8517_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acb98c50_evalSliceExpr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b909d_SliceExpr> _88334_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1acbc431e_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1be00387e:;
				{
					return _1acb98458_evalArr(_self_, _88334_s);;
				}
			}
			else if ((_1acbc45a5_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1be003928:;
				{
					jule::Ptr<_1acbcd4b0_Slc> _8899_pt = _1acbc45a5_Slc((*(_self_))._field_prefix);;
					return _1acb9890e_evalExpSlc(_self_, _88334_s, (*(_8899_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1be0037c4:;
		};
	};
	jule::Ptr<_1acbc0d98_Type> _8947_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88334_s))._field_Exprs.len() == 0LL)) {
		_1acb90395_pushErr(_self_, (*_88334_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _9027_firstExpr = (*_88334_s.alloc)._field_Exprs[0LL];;
	jule::Ptr<_1acb8cded_Data> _9037_firstElem = _1acbadbaa_evalExpr(_self_, _9027_firstExpr);;
	if ((_9037_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1acb29263_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9037_firstElem))._field_Type), &(_9037_firstElem), &((*(_9027_firstExpr))._field_Token));
	jule::Ptr<_1acb8cded_Data> _9137_d = _1acb9890e_evalExpSlc(_self_, _88334_s, (*(_9037_firstElem))._field_Type, (*(_9037_firstElem))._field_Model);;
	(*_self_.alloc)._field_prefix=_8947_prefix;
	return _9137_d;;
}



inline jule::Bool _1acb9914b_checkIntegerIndexingByData(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _91947_d, jule::Ptr<_1abc2ba81_Token> _91961_token) {
	jule::Str _9203_errKey = _1acbba8ed_checkDataForIntegerIndexing(&((*(_self_))._field_s), _91947_d, &(_91961_token), _1acb933cb_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9203_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1be00ba1e:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1be00b700:;
			{
				_1acb90395_pushErr(_self_, _91961_token, _9203_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_91947_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1be00b04b:;
			{
				_1acb90395_pushErr(_self_, _91961_token, _9203_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1be00b689:;
	};
	return false;;
}



inline void _1acb99569_indexingPtr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _93232_d, jule::Ptr<_1acb8cded_Data>* _93247_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _93266_i) {
	_1acb9914b_checkIntegerIndexingByData(_self_, _93247_index, (*((*(_93266_i))))._field_Token);
	(*((*(_93232_d))))._field_Lvalue=true;
	jule::Ptr<_1acbd12a4_Ptr> _9367_ptr = _1acbc3a6b_Ptr((*((*(_93232_d))))._field_Type.ptr());;
	{
		
		if (_1acbd1d21_IsUnsafe(_9367_ptr.ptr())) {
			_case_begin_1be00e8e0:;
			{
				_1acb90395_pushErr(_self_, (*((*(_93266_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1acb90d8a_isUnsafe(_self_)))) {
			_case_begin_1be00e978:;
			{
				_1acb90395_pushErr(_self_, (*((*(_93266_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be00e846:;
	};
	(*((*(_93232_d))))._field_Type=(*(_9367_ptr))._field_Elem;
}



inline void _1acb99987_indexingArr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _94832_d, jule::Ptr<_1acb8cded_Data>* _94847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _94866_i) {
	jule::Ptr<_1acbd07d1_Arr> _9497_arr = _1acbc431e_Arr((*((*(_94832_d))))._field_Type.ptr());;
	(*((*(_94832_d))))._field_Type=(*(_9497_arr))._field_Elem;
	_1acb9914b_checkIntegerIndexingByData(_self_, _94847_index, (*((*(_94866_i))))._field_Token);
	(*((*(_94832_d))))._field_Lvalue=true;
	if ((_1acb8d838_IsConst((*(_94847_index)).ptr()) && (_1aca8b48e_AsF64((*((*(_94847_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9497_arr.alloc)._field_N)))) {
		_1acb90395_pushErr(_self_, (*((*(_94866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1acb99da5_indexingSlc(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _95832_d, jule::Ptr<_1acb8cded_Data>* _95847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _95866_i) {
	jule::Ptr<_1acbcd4b0_Slc> _9597_slc = _1acbc45a5_Slc((*((*(_95832_d))))._field_Type.ptr());;
	(*((*(_95832_d))))._field_Type=(*(_9597_slc))._field_Elem;
	_1acb9914b_checkIntegerIndexingByData(_self_, _95847_index, (*((*(_95866_i))))._field_Token);
	(*((*(_95832_d))))._field_Lvalue=true;
	if ((!(_1acb8d838_IsConst((*(_95847_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95832_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1be017112:;
			{
				jule::Ptr<_1aca974de_SliceExprModel> _9708_m = (*((*(_95832_d))))._field_Model.unsafe_cast_ptr<_1aca974de_SliceExprModel>();;
				jule::F64 _9714_indx = _1aca8b48e_AsF64((*((*(_95847_index))))._field_Constant.ptr());;
				if ((_9714_indx >= static_cast<jule::F64>((*(_9708_m))._field_Elems.len()))) {
					_1acb90395_pushErr(_self_, (*((*(_95866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95832_d))))._field_Model=(*(_9708_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_9714_indx))];
					(*((*(_95832_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1be01709b:;
	};
}



inline void _1acb9a2c3_indexingMap(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _98132_d, jule::Ptr<_1acb8cded_Data>* _98147_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _98166_i) {
	(*((*(_98132_d))))._field_Lvalue=true;
	if (((*(_98147_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1acbceb54_Map> _9867_m = _1acbc50de_Map((*((*(_98132_d))))._field_Type.ptr());;
	_1acb7b0b7_assignTypeChecker _9877_atc = _1acb7b0b7_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9867_m))._field_Key, ._field_d=(*(_98147_index)), ._field_errorToken=(*((*(_98166_i))))._field_Token, ._field_refers=_1acb933cb_getOwnerRefers(_self_)};;
	_1acb7c0b8_check(&_9877_atc);
	(*((*(_98132_d))))._field_Type=(*_9867_m.alloc)._field_Val;
}



inline void _1acb9a6e1_indexingStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _99832_d, jule::Ptr<_1acb8cded_Data>* _99847_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _99866_i) {
	(*((*(_99832_d))))._field_Type=_1acc462c5_primU8;
	(*((*(_99832_d))))._field_Mutable=false;
	(*((*(_99832_d))))._field_Lvalue=true;
	if (((*(_99847_index)) == nullptr)) {
		return;;
	};
	_1acb9914b_checkIntegerIndexingByData(_self_, _99847_index, (*((*(_99866_i))))._field_Token);
	if ((!(_1acb8d838_IsConst((*(_99847_index)).ptr())))) {
		(*((*(_99832_d))))._field_Constant=nullptr;
		(*((*(_99832_d))))._field_untyped=false;
		return;;
	};
	if (_1acb8d838_IsConst((*(_99832_d)).ptr())) {
		jule::I64 _10164_j = _1aca8ae72_AsI64((*((*(_99847_index))))._field_Constant.ptr());;
		jule::Str _10174_s = _1aca8a955_ReadStr((*((*(_99832_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10164_j) >= _10174_s.len())) {
			_1acb90395_pushErr(_self_, (*((*(_99866_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1aca8ba00_SetU64((*((*(_99832_d))))._field_Constant, static_cast<jule::U64>(_10174_s[static_cast<jule::I32>(_10164_j)]));
		};
	};
}



inline void _1acb9ab0e_comptimeRange(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _102634_d, jule::Ptr<_1acb8cded_Data>* _102649_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _102668_i) {
	if (((*(_102649_index)) == nullptr)) {
		(*(_102634_d))=nullptr;
		return;;
	};
	if ((!(_1acb9914b_checkIntegerIndexingByData(_self_, _102649_index, (*((*((*(_102668_i))))._field_Index))._field_Token)))) {
		(*(_102634_d))=nullptr;
		return;;
	};
	if ((!(_1acb8d838_IsConst((*(_102649_index)).ptr())))) {
		(*(_102634_d))=nullptr;
		_1acb90395_pushErr(_self_, (*(*((*(_102668_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10413_j = static_cast<jule::I32>(_1aca8ae72_AsI64((*((*(_102649_index))))._field_Constant.ptr()));;
	jule::Ptr<_1ac92d0bc_comptimeRange> _10427_ci = _1acbc68e8_comptimeRange((*((*(_102634_d))))._field_Type.ptr());;
	if ((_10413_j >= ((_1ac92cd9c_comptimeRangeKindMptrData*)(*(_10427_ci))._field_kind.safe_type())->_1ac92cc48_len((*(_10427_ci))._field_kind.data))) {
		(*(_102634_d))=nullptr;
		_1acb90395_pushErr(_self_, (*(*((*(_102668_i))))._field_Index.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1ac92cd9c_comptimeRangeKindMptrData*)(*_10427_ci.alloc)._field_kind.safe_type())->_1ac92c231_index((*_10427_ci.alloc)._field_kind.data, _102634_d, _10413_j);
}



inline void _1acb9b02c_toIndexing(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _105131_d, jule::Ptr<_1acb8cded_Data>* _105146_index, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _105165_i) {
	{
		
		if ((_1acbc3a6b_Ptr((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028a91:;
			{
				_1acb99569_indexingPtr(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1acbc431e_Arr((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028b3a:;
			{
				_1acb99987_indexingArr(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1acbc45a5_Slc((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028ba1:;
			{
				_1acb99da5_indexingSlc(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1acbc50de_Map((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028c17:;
			{
				_1acb9a2c3_indexingMap(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028c7d:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _10664_prim = _1acbc354e_Prim((*((*(_105131_d))))._field_Type);;
				{
					
					if (_1acbcc47b_IsStr(_10664_prim.ptr())) {
						_case_begin_1be02d1c2:;
						{
							_1acb9a6e1_indexingStr(_self_, _105131_d, _105146_index, _105165_i);
							return;;
						}
					}
					_match_end_1be02d117:;
				};
			}
		}
		else if ((_1acbc68e8_comptimeRange((*((*(_105131_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be028d05:;
			{
				_1acb9ab0e_comptimeRange(_self_, _105131_d, _105146_index, _105165_i);
				return;;
			}
		}
		_match_end_1be02892b:;
	};
	_1acb90395_pushErr(_self_, (*((*(_105165_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_105131_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1acb9b4d3_pushGenericsFromExprSubIdent(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _107950_sexpr, jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _10808_generics, jule::Ptr<_1ac9b2a47_Expr>* _108041_expr) {
	jule::Ptr<_1abc42e71_SubIdentTypeDecl> _10817_t = jule::new_ptr<_1abc42e71_SubIdentTypeDecl>(_1abc42e71_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>>(nullptr)});;
	if ((!(_1acbbb976_pushSubIdentFromExpr(jule::Any((*(_107950_sexpr)), &__jule_any_type89), &(_10817_t))))) {
		_1acb90395_pushErr(_self_.ptr(), (*((*(_108041_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_10808_generics)); __jule_push_dest.push(jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Kind=jule::Any(_10817_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1acb9b8ce_pushGenericsFromData(jule::Ptr<_1acb8edbc_eval> _self_, jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _109042_generics, jule::Ptr<_1ac9b2a47_Expr>* _109075_expr) {
	{
		auto &_match_expr{ (*((*(_109075_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1be0360dc:;
			{
				jule::Ptr<_1ac9b4b04_UnaryExpr> _10938_u = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1ac9b4b04_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10938_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1be03ab19:;
						{
							jule::Ptr<_1abc440c6_PtrTypeDecl> _10969_kind = jule::new_ptr<_1abc440c6_PtrTypeDecl>(_1abc440c6_PtrTypeDecl{._field_Elem=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _10979__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; });;
							_1acb9b8ce_pushGenericsFromData(_self_, &(_10979__generics), &((*(_10938_u))._field_Expr));
							(*_10969_kind.alloc)._field_Elem=_10979__generics[0LL];
							{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*((*(_109075_expr))))._field_Token, ._field_Kind=jule::Any(_10969_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1be03ab80:;
						{
							jule::Ptr<_1abc43647_SptrTypeDecl> _11059_kind = jule::new_ptr<_1abc43647_SptrTypeDecl>(_1abc43647_SptrTypeDecl{._field_Elem=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _11069__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; });;
							_1acb9b8ce_pushGenericsFromData(_self_, &(_11069__generics), &((*(_10938_u))._field_Expr));
							(*_11059_kind.alloc)._field_Elem=_11069__generics[0LL];
							{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*((*(_109075_expr))))._field_Token, ._field_Kind=jule::Any(_11059_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1be036818:;
						{
							_1acb90395_pushErr(_self_.ptr(), (*(_10938_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1be038a7e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be036153:;
			{
				{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push((*((*(_109075_expr))))._field_Kind.cast_ptr<_1abc4259c_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1be03232a:;
			{
				jule::Ptr<_1ac9b5b5a_SubIdentExpr> _11208_sexpr = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1ac9b5b5a_SubIdentExpr>();;
				return _1acb9b4d3_pushGenericsFromExprSubIdent(_self_, &(_11208_sexpr), _109042_generics, _109075_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1be032391:;
			{
				jule::Ptr<_1ac9b4362_IdentExpr> _11238_ident = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1ac9b4362_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*_11238_ident.alloc)._field_Token, ._field_Ident=(*_11238_ident.alloc)._field_Ident, ._field_Binded=(*(_11238_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1be0341ea:;
			{
				{
					auto expr = &((*((*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1ac9b363b_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be044b34:;
					if (it != expr_end) {
						jule::Ptr<_1ac9b2a47_Expr> _113216_texpr = *it;
						{
							if ((!(_1acb9b8ce_pushGenericsFromData(_self_, _109042_generics, &(_113216_texpr))))) {
								return false;;
							};
						}
						_iter_next_1be044b34:;
						++it;
						goto _iter_begin_1be044b34;
					}
					_iter_end_1be044b34:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1be034261:;
			{
				jule::Ptr<_1ac9b5781_NamespaceExpr> _11388_ns = (*((*(_109075_expr))))._field_Kind.unsafe_cast_ptr<_1ac9b5781_NamespaceExpr>();;
				jule::Ptr<_1abc42ba7_IdentTypeDecl> _11398_decl = jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*(_11388_ns))._field_Ident, ._field_Ident=(*((*_11388_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*(_109042_generics)); __jule_push_dest.push(jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*(_11398_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1abc4334a_NamespaceTypeDecl>(_1abc4334a_NamespaceTypeDecl{._field_Namespace=(*_11388_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*_11398_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11398_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1be0322b4:;
			{
				_1acb90395_pushErr(_self_.ptr(), (*((*(_109075_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1be03224d:;
	};
	return true;;
}



inline void _1acb9bc42_evalIdentDeclFromIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acb8cded_Data>* _116047_d, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _116062_i) {
	jule::Ptr<_1ac9d1e84_StructIns> _11617_s = _1acbc4ac2_Struct((*((*(_116047_d))))._field_Type.ptr());;
	if ((_11617_s == nullptr)) {
		_1acb90395_pushErr(_self_.ptr(), (*((*((*(_116062_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_116047_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_116047_d))=nullptr;
		return;;
	};
	jule::Ptr<_1abc42ba7_IdentTypeDecl> _116811_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_116062_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1be052092:;
			{
				jule::Ptr<_1ac9b4362_IdentExpr> _11718_expr = (*((*((*(_116062_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ac9b4362_IdentExpr>();;
				_116811_decl=jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*_11718_expr.alloc)._field_Token, ._field_Ident=(*_11718_expr.alloc)._field_Ident, ._field_Binded=(*(_11718_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1be0534c2:;
			{
				jule::Ptr<_1ac9b5781_NamespaceExpr> _11788_expr = (*((*((*(_116062_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1ac9b5781_NamespaceExpr>();;
				_116811_decl=jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*(_11788_expr))._field_Ident, ._field_Ident=(*((*_11788_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1be052515:;
			{
				_1acb90395_pushErr(_self_, (*((*(_116062_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_116047_d))=nullptr;
				return;;
			}
		}
		_match_end_1be05249e:;
	};
	if ((!(_1acb9b8ce_pushGenericsFromData(_self_, &((*(_116811_decl))._field_Generics), &((*((*(_116062_i))))._field_Index))))) {
		(*(_116047_d))=nullptr;
		return;;
	};
	_11617_s=({ auto _wrap_copy = _1acba373d_typeChecker(_self_); _1acbd762e_fromStruct(&_wrap_copy, &(_116811_decl), &((*(_11617_s))._field_Decl)); });
	if ((_11617_s == nullptr)) {
		(*(_116047_d))=nullptr;
		return;;
	};
	(*(*((*(_116047_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11617_s, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1acb9c1e8_checkGenericFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acaa540e_FnIns>* _120336_f, jule::Ptr<_1abc2ba81_Token>* _120352_et, jule::Any* _120376_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1acaa540e_FnIns> _12047_old = (*(_120336_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb3503d_checkGenericFn((*(_self_))._field_s, _120336_f, _120352_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1acbbb602_updateModelToGenericIns(_120376_model, _120336_f);
		_1be05a2cb_updateRefer(_1acb933cb_getOwnerRefers(_self_), &(_12047_old), _120336_f);
	};
	return __jule_func_result;;
}



inline void _1acb9c55b_evalFnGenericFromIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acb8cded_Data>* _121947_d, jule::Ptr<_1ac9b9a0a_IndexingExpr>* _121962_i) {
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _12207_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1acb9b8ce_pushGenericsFromData(_self_, &(_12207_generics), &((*((*(_121962_i))))._field_Index))))) {
		(*(_121947_d))=nullptr;
		return;;
	};
	jule::Ptr<_1acaa540e_FnIns> _12267_f = _1acbc483b_Fn((*((*(_121947_d))))._field_Type.ptr());;
	jule::I32 _12277_genericsLen = 0LL;;
	if (((*(_12267_f))._field_Decl != nullptr)) {
		_12277_genericsLen=(*(*(_12267_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1acb1da1b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _12277_genericsLen, _12207_generics.len(), (*((*((*(_121962_i))))._field_Expr))._field_Token)))) {
		(*(_121947_d))=nullptr;
		return;;
	};
	(*_12267_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(0LL, (*(*(_12267_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbbe4b2_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12207_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be060e08:;
		if (it != expr_end) {
			jule::Ptr<_1abc4259c_TypeDecl> _123815_g = *it;
			{
				jule::Ptr<_1acb8cded_Data> _12398_k = _1acba3a7e_evalType(_self_, _123815_g);;
				if ((_12398_k == nullptr)) {
					(*(_121947_d))=nullptr;
					return;;
				};
				(*_12267_f.alloc)._field_Generics=jule::append((*_12267_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=(*(_12398_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1be060e08:;
			++it;
			goto _iter_begin_1be060e08;
		}
		_iter_end_1be060e08:;
	};
	if (_1acaa68c7_IsBuiltin(_12267_f)) {
		return;;
	};
	jule::Bool _12513_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb9c1e8_checkGenericFn(_self_, &(_12267_f), &((*(*((*(_121962_i))))._field_Expr.alloc)._field_Token), &((*((*(_121947_d))))._field_Model));
		_12513_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12513_ok) {
		(*(*((*(_121947_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12267_f, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1);
	} else {
		(*(_121947_d))=nullptr;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acb9c89c_evalIndexing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b9a0a_IndexingExpr> _125933_i) {
	jule::Ptr<_1acbc0d98_Type> _12607_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12607_prefix;
	});;
	jule::Ptr<_1acb8cded_Data> _12647_d = _1acbacd96_evalExprKind(_self_, (*((*(_125933_i))._field_Expr))._field_Kind);;
	if ((_12647_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12647_d))._field_Decl) {
		_1acb9bc42_evalIdentDeclFromIndexing(_self_, &(_12647_d), &(_125933_i));
		return _12647_d;;
	};
	if ((_1acbc483b_Fn((*(_12647_d))._field_Type.ptr()) != nullptr)) {
		_1acb9c55b_evalFnGenericFromIndexing(_self_, &(_12647_d), &(_125933_i));
		return _12647_d;;
	};
	_1acb8cded_Data _12807_oldData = (*(_12647_d));;
	jule::Ptr<_1acb8cded_Data> _12827_index = _1acbadbaa_evalExpr(_self_, (*_125933_i.alloc)._field_Index);;
	if ((_12827_index == nullptr)) {
		return nullptr;;
	};
	_1ac975b4d_makeComptimeRange(&(_12647_d));
	(*(_12647_d))._field_Decl=false;
	_1acb9b02c_toIndexing(_self_, &(_12647_d), &(_12827_index), &(_125933_i));
	if ((_12647_d == nullptr)) {
		return nullptr;;
	};
	if (_1acb8d838_IsConst(_12647_d.ptr())) {
		(*(_12647_d))._field_Decl=false;
		(*(_12647_d))._field_Model=jule::Any((*(_12647_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_12647_d))._field_Decl) {
		(*(_12647_d))._field_Decl=false;
	} else {
		(*(_12647_d))._field_Model=jule::Any(jule::new_ptr<_1aca97995_IndexingExprModel>(_1aca97995_IndexingExprModel{._field_Token=(*_125933_i.alloc)._field_Token, ._field_Expr=jule::new_ptr<_1acb8cded_Data>(_12807_oldData), ._field_Index=_12827_index}), &__jule_any_type43);
	};
	return _12647_d;;
}



inline __jule_tuple_x_1acb8cded_Data__jule_tuple_x_1acb8cded_Data _1acb9cbdd_evalSlicingExprs(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9ba16a_SlicingExpr>* _131938_s) {
	__jule_tuple_x_1acb8cded_Data__jule_tuple_x_1acb8cded_Data __jule_func_result;
	jule::Ptr<_1acbc0d98_Type> _13207_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13207_prefix;
	});;
	jule::Ptr<_1acb8cded_Data> _132411_l = nullptr;;
	jule::Ptr<_1acb8cded_Data> _132511_r = nullptr;;
	if (((*((*(_131938_s))))._field_Start != nullptr)) {
		_132411_l=_1acbadbaa_evalExpr(_self_, (*((*(_131938_s))))._field_Start);
		if ((_132411_l != nullptr)) {
			_1acb9914b_checkIntegerIndexingByData(_self_, &(_132411_l), (*((*(_131938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_132411_l=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca88c61_NewI64(0LL)});
		(*((*(_132411_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_132411_l.alloc)._field_Model=jule::Any((*_132411_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_131938_s))))._field_To != nullptr)) {
		_132511_r=_1acbadbaa_evalExpr(_self_, (*((*(_131938_s))))._field_To);
		if ((_132511_r != nullptr)) {
			_1acb9914b_checkIntegerIndexingByData(_self_, &(_132511_r), (*((*(_131938_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _132411_l;
	__jule_func_result.__jule_result_arg1 = _132511_r;
	return __jule_func_result;;
}



inline void _1acb9ce96_slicingArr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _135527_d) {
	jule::Ptr<_1acbc0d98_Type> _13567_elemType = (*(_1acbc431e_Arr((*((*(_135527_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135527_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcd4b0_Slc>(_1acbcd4b0_Slc{._field_Elem=_13567_elemType}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)});
	(*((*(_135527_d))))._field_Lvalue=false;
	(*((*(_135527_d))))._field_Mutable=((*((*(_135527_d))))._field_Mutable || (!(_1acbc277e_Mutable(_13567_elemType.ptr()))));
}



inline void _1acb9d3b4_slicingStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _137027_d, jule::Ptr<_1acb8cded_Data>* _137038_l, jule::Ptr<_1acb8cded_Data>* _137049_r) {
	(*((*(_137027_d))))._field_Lvalue=false;
	(*((*(_137027_d))))._field_Mutable=true;
	if ((!(_1acb8d838_IsConst((*(_137027_d)).ptr())))) {
		return;;
	};
	if ((((*(_137038_l)) == nullptr) || ((*(_137049_r)) == nullptr))) {
		(*((*(_137027_d))))._field_Constant=nullptr;
		(*((*(_137027_d))))._field_untyped=false;
		return;;
	};
	if ((_1acb8d838_IsConst((*(_137038_l)).ptr()) && _1acb8d838_IsConst((*(_137049_r)).ptr()))) {
		jule::I64 _13844_left = _1aca8ae72_AsI64((*((*(_137038_l))))._field_Constant.ptr());;
		if ((_13844_left < 0LL)) {
			return;;
		};
		jule::Str _13894_s = _1aca8a955_ReadStr((*((*(_137027_d))))._field_Constant);;
		jule::I64 _13908_right = static_cast<jule::I64>(0LL);;
		if (((*(_137049_r)) == nullptr)) {
			_13908_right=static_cast<jule::I64>(_13894_s.len());
		} else {
			_13908_right=_1aca8ae72_AsI64((*((*(_137049_r))))._field_Constant);
		};
		if ((_13844_left > _13908_right)) {
			return;;
		};
		_1aca8c061_SetStr((*((*(_137027_d))))._field_Constant, _13894_s.slice(static_cast<jule::I32>(_13844_left), static_cast<jule::I32>(_13908_right)));
		(*((*(_137027_d))))._field_Decl=true;
	} else {
		(*((*(_137027_d))))._field_Constant=nullptr;
		(*((*(_137027_d))))._field_untyped=false;
	};
}



inline void _1acb9d88c_checkSlicing(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _140833_d, jule::Ptr<_1acb8cded_Data>* _140844_l, jule::Ptr<_1acb8cded_Data>* _140855_r, jule::Ptr<_1ac9ba16a_SlicingExpr>* _140866_s) {
	{
		
		if ((_1acbc431e_Arr((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bee54b86:;
			{
				_1acb9ce96_slicingArr(_self_, _140833_d);
				return;;
			}
		}
		else if ((_1acbc45a5_Slc((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bee54c30:;
			{
				return;;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_140833_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bee54c96:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _14164_prim = _1acbc354e_Prim((*((*(_140833_d))))._field_Type);;
				{
					
					if (_1acbcc47b_IsStr(_14164_prim.ptr())) {
						_case_begin_1bee5756d:;
						{
							_1acb9d3b4_slicingStr(_self_, _140833_d, _140844_l, _140855_r);
							return;;
						}
					}
					_match_end_1bee574b3:;
				};
			}
		}
		_match_end_1bee54a54:;
	};
	_1acb90395_pushErr(_self_, (*((*(_140866_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_140833_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1acb8cded_Data> _1acb9dbcd_evalSlicing(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9ba16a_SlicingExpr> _142732_s) {
	jule::Ptr<_1acb8cded_Data> _14287_d = _1acbadbaa_evalExpr(_self_, (*(_142732_s))._field_Expr);;
	if ((_14287_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acb8cded_Data> _14337_l;
	jule::Ptr<_1acb8cded_Data> _143314_r;
	({
		__jule_tuple_x_1acb8cded_Data__jule_tuple_x_1acb8cded_Data __jule_assign_result = _1acb9cbdd_evalSlicingExprs(_self_, &(_142732_s));
		_14337_l = __jule_assign_result.__jule_result_arg0;
		_143314_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14337_l == nullptr)) {
		return _14287_d;;
	};
	(*(_14287_d))._field_Decl=false;
	_1acb9d88c_checkSlicing(_self_, &(_14287_d), &(_14337_l), &(_143314_r), &(_142732_s));
	if (_1acb8d838_IsConst(_14287_d.ptr())) {
		(*(_14287_d))._field_Decl=false;
		(*(_14287_d))._field_Model=jule::Any((*(_14287_d))._field_Constant, &__jule_any_type15);
	} else if ((*(_14287_d))._field_Decl) {
		(*(_14287_d))._field_Decl=false;
	} else {
		jule::Ptr<_1aca98c82_SlicingExprModel> _14518_model = jule::new_ptr<_1aca98c82_SlicingExprModel>(_1aca98c82_SlicingExprModel{._field_Token=(*_142732_s.alloc)._field_Token, ._field_Expr=(*(_14287_d))._field_Model, ._field_Left=(*(_14337_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_143314_r != nullptr)) {
			(*(_14518_model))._field_Right=(*_143314_r.alloc)._field_Model;
		};
		(*(_14287_d))._field_Model=jule::Any(_14518_model, &__jule_any_type95);
	};
	return _14287_d;;
}



inline void _1acb9e0eb_castPtr(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _146427_t, jule::Ptr<_1acb8cded_Data> _146441_d, jule::Ptr<_1abc2ba81_Token> _146451_errorToken) {
	(*(_146441_d))._field_Constant=nullptr;
	(*_146441_d.alloc)._field_untyped=false;
	jule::Ptr<_1acbcc9dc_Sptr> _14673_sptr = _1acbc37d5_Sptr((*_146441_d.alloc)._field_Type.ptr());;
	if ((_14673_sptr != nullptr)) {
		if ((!(_1acbc15d5_Equal((*(_1acbc3a6b_Ptr(_146427_t.ptr())))._field_Elem, (*_14673_sptr.alloc)._field_Elem)))) {
			_1acb90395_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_146441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_146427_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1acb90d8a_isUnsafe(_self_)))) {
		_1acb90395_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _14803_prim = _1acbc354e_Prim((*(_146441_d))._field_Type);;
	if (((_1acbc3a6b_Ptr((*(_146441_d))._field_Type) == nullptr) && ((_14803_prim == nullptr) || (!(_1ac92b4e9_IsInt(_1acbc9335_Str(_14803_prim.ptr()))))))) {
		_1acb90395_pushErr(_self_, _146451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_146441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_146427_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1acb9e519_castStruct(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _148630_t, jule::Ptr<_1acb8cded_Data> _148644_d, jule::Ptr<_1abc2ba81_Token> _148654_errorToken) {
	(*(_148644_d))._field_Constant=nullptr;
	(*_148644_d.alloc)._field_untyped=false;
	jule::Ptr<_1acaaca65_Trait> _14897_tr = _1acbc4d58_Trait((*_148644_d.alloc)._field_Type.ptr());;
	if ((_14897_tr == nullptr)) {
		_1acb90395_pushErr(_self_, _148654_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_148644_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_148630_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _14957_s = _1acbc4ac2_Struct(_148630_t);;
	_1be23bce8_pushReference(_self_, &(_14957_s));
	if ((!(_1ac9d079b_IsImplements((*(_14957_s))._field_Decl.ptr(), _14897_tr)))) {
		_1acb90395_pushErr(_self_, _148654_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_148644_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_148630_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1acb9e937_castRef(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _150327_t, jule::Ptr<_1acb8cded_Data> _150341_d, jule::Ptr<_1abc2ba81_Token> _150351_errorToken) {
	(*(_150341_d))._field_Constant=nullptr;
	(*_150341_d.alloc)._field_untyped=false;
	jule::Ptr<_1acbcc9dc_Sptr> _15067_sptr = _1acbc37d5_Sptr(_150327_t.ptr());;
	jule::Ptr<_1acbd12a4_Ptr> _15087_ptr = _1acbc3a6b_Ptr((*_150341_d.alloc)._field_Type.ptr());;
	if (((_15087_ptr != nullptr) && _1acbc15d5_Equal((*(_15067_sptr))._field_Elem, (*_15087_ptr.alloc)._field_Elem))) {
		if ((!(_1acb90d8a_isUnsafe(_self_)))) {
			_1acb90395_pushErr(_self_, _150351_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1acbc4ac2_Struct((*(_15067_sptr))._field_Elem) != nullptr)) {
		_1acb9e519_castStruct(_self_, (*_15067_sptr.alloc)._field_Elem, _150341_d, _150351_errorToken);
		return;;
	};
	_1acb90395_pushErr(_self_, _150351_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_150341_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_150327_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1acb9ed55_castSlc(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _152627_t, jule::Ptr<_1acb8cded_Data> _152641_d, jule::Ptr<_1abc2ba81_Token> _152651_errorToken) {
	jule::Ptr<_1aca3208e_Const> _15273_c = (*(_152641_d))._field_Constant;;
	(*_152641_d.alloc)._field_Constant=nullptr;
	(*_152641_d.alloc)._field_untyped=false;
	if ((_1acbc3d02_Enum((*_152641_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1acbc354e_Prim((*((*(_1acbc3d02_Enum((*(_152641_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1acbcc47b_IsStr(_1acbc354e_Prim((*((*(_1acbc3d02_Enum((*(_152641_d))._field_Type.ptr())))._field_TypeSym))._field_Type).ptr()))))) {
			_1acb90395_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_152641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_152627_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1acbc354e_Prim((*_152641_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1acbcc47b_IsStr(_1acbc354e_Prim((*(_152641_d))._field_Type).ptr()))))) {
		_1acb90395_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_152641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_152627_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152627_t=(*(_1acbc45a5_Slc(_152627_t.ptr())))._field_Elem;
	jule::Ptr<_1acbc8eb1_Prim> _15423_prim = _1acbc354e_Prim(_152627_t);;
	if (((_15423_prim == nullptr) || ((!(_1acbca8db_IsU8(_15423_prim.ptr()))) && (!(_1acbca3be_IsI32(_15423_prim.ptr())))))) {
		_1acb90395_pushErr(_self_, _152651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*_152641_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_152627_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15273_c != nullptr)) {
		{
			
			if (_1acbca8db_IsU8(_15423_prim.ptr())) {
				_case_begin_1beb1c200:;
				{
					jule::Str _15525_s = _1aca8a955_ReadStr(_15273_c);;
					jule::Ptr<_1aca974de_SliceExprModel> _15539_model = jule::new_ptr<_1aca974de_SliceExprModel>(_1aca974de_SliceExprModel{._field_ElemType=_152627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15525_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15525_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beb1dc18:;
						if (it != expr_end) {
							jule::U8 *_155712_b = it;
							{
								jule::Ptr<_1aca3208e_Const> _155810_bc = static__1aca88ed6_NewU64(static_cast<jule::U64>((*(_155712_b))));;
								(*(_155810_bc))._field_Kind=(*(_15423_prim))._field_Kind;
								(*(_15539_model))._field_Elems=jule::append((*_15539_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155810_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1beb1dc18:;
							++it;
							goto _iter_begin_1beb1dc18;
						}
						_iter_end_1beb1dc18:;
					};
					(*_152641_d.alloc)._field_Model=jule::Any(_15539_model, &__jule_any_type80);
					(*_152641_d.alloc)._field_Decl=true;
				}
			}
			else if (_1acbca3be_IsI32(_15423_prim.ptr())) {
				_case_begin_1beb1c299:;
				{
					jule::Slice<jule::I32> _15655_runes = __jule_strToRunes(_1aca8a955_ReadStr(_15273_c));;
					jule::Ptr<_1aca974de_SliceExprModel> _15669_model = jule::new_ptr<_1aca974de_SliceExprModel>(_1aca974de_SliceExprModel{._field_ElemType=_152627_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15655_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15655_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beb2214a:;
						if (it != expr_end) {
							jule::I32 *_157012_r = it;
							{
								jule::Ptr<_1aca3208e_Const> _157110_rc = static__1aca88c61_NewI64(static_cast<jule::I64>((*(_157012_r))));;
								(*(_157110_rc))._field_Kind=(*(_15423_prim))._field_Kind;
								(*(_15669_model))._field_Elems=jule::append((*_15669_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157110_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1beb2214a:;
							++it;
							goto _iter_begin_1beb2214a;
						}
						_iter_end_1beb2214a:;
					};
					(*_152641_d.alloc)._field_Model=jule::Any(_15669_model, &__jule_any_type80);
					(*_152641_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1beb1c112:;
		};
	};
}



inline void _1acba01b8_castStr(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _158127_d, jule::Ptr<_1abc2ba81_Token> _158137_errorToken) {
	if ((_1acbc3d02_Enum((*(_158127_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1acab021b_Enum> _15838_e = _1acbc3d02_Enum((*(_158127_d))._field_Type);;
		if (((_1acbc354e_Prim((*((*(_15838_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1acbcc47b_IsStr(_1acbc354e_Prim((*((*(_15838_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aca3208e_Const> _15893_c = (*_158127_d.alloc)._field_Constant;;
	(*_158127_d.alloc)._field_Constant=nullptr;
	(*_158127_d.alloc)._field_untyped=false;
	if ((_1acbc354e_Prim((*(_158127_d))._field_Type) != nullptr)) {
		jule::Ptr<_1acbc8eb1_Prim> _15934_prim = _1acbc354e_Prim((*(_158127_d))._field_Type);;
		if (((!(_1acbca8db_IsU8(_15934_prim.ptr()))) && (!(_1acbca3be_IsI32(_15934_prim))))) {
			_1acb90395_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15893_c != nullptr)) {
			{
				
				if (_1acbca8db_IsU8(_15934_prim)) {
					_case_begin_1beb29b58:;
					{
						(*_158127_d.alloc)._field_Constant=static__1aca89569_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1aca8b208_AsU64(_15893_c))));
						(*_158127_d.alloc)._field_Model=jule::Any((*_158127_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158127_d.alloc)._field_Decl=true;
					}
				}
				else if (_1acbca3be_IsI32(_15934_prim)) {
					_case_begin_1beb29c02:;
					{
						(*_158127_d.alloc)._field_Constant=static__1aca89569_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1aca8ae72_AsI64(_15893_c))));
						(*_158127_d.alloc)._field_Model=jule::Any((*_158127_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158127_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1beb29a48:;
			};
		};
		return;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _16147_s = _1acbc45a5_Slc((*(_158127_d))._field_Type);;
	if ((_16147_s == nullptr)) {
		_1acb90395_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1acbc0d98_Type> _16207_t = (*(_16147_s))._field_Elem;;
	jule::Ptr<_1acbc8eb1_Prim> _16213_prim = _1acbc354e_Prim(_16207_t.ptr());;
	if (((_16213_prim == nullptr) || ((!(_1acbca8db_IsU8(_16213_prim.ptr()))) && (!(_1acbca3be_IsI32(_16213_prim.ptr())))))) {
		_1acb90395_pushErr(_self_, _158137_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_158127_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1acba05d6_castInt(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _162827_t, jule::Ptr<_1acb8cded_Data> _162841_d, jule::Ptr<_1abc2ba81_Token> _162851_errorToken) {
	if (_1acb8d838_IsConst(_162841_d.ptr())) {
		jule::Ptr<_1acbc8eb1_Prim> _16304_prim = _1acbc354e_Prim(_162827_t.ptr());;
		{
			
			if (_1ac92ae22_IsSigInt((*(_16304_prim))._field_Kind)) {
				_case_begin_1beb3338c:;
				{
					_1aca8b747_SetI64((*_162841_d.alloc)._field_Constant.ptr(), _1aca8ae72_AsI64((*(_162841_d))._field_Constant));
				}
			}
			else if (_1ac92b230_IsUnsigInt((*(_16304_prim))._field_Kind)) {
				_case_begin_1beb33436:;
				{
					_1aca8ba00_SetU64((*_162841_d.alloc)._field_Constant.ptr(), _1aca8b208_AsU64((*(_162841_d))._field_Constant));
				}
			}
			_match_end_1beb33304:;
		};
	} else {
		(*(_162841_d))._field_Constant=nullptr;
		(*_162841_d.alloc)._field_untyped=false;
	};
	if ((_1acbc3d02_Enum((*(_162841_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1acab021b_Enum> _16434_e = _1acbc3d02_Enum((*(_162841_d))._field_Type);;
		if (_1ac92bac1_IsNum(_1acbc1294_Str((*((*(_16434_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_1acbc37d5_Sptr((*(_162841_d))._field_Type) != nullptr)) {
		jule::Ptr<_1acbc8eb1_Prim> _16504_prim = _1acbc354e_Prim(_162827_t.ptr());;
		if ((!(_1acbcbe5e_IsUintptr(_16504_prim.ptr())))) {
			_1acb90395_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_162841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_162827_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1acbc3a6b_Ptr((*(_162841_d))._field_Type) != nullptr)) {
		jule::Ptr<_1acbc8eb1_Prim> _16574_prim = _1acbc354e_Prim(_162827_t);;
		if (_1acbcbe5e_IsUintptr(_16574_prim.ptr())) {
		} else if ((!(_1acb90d8a_isUnsafe(_self_)))) {
			_1acb90395_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _16663_prim = _1acbc354e_Prim((*(_162841_d))._field_Type);;
	if (((_16663_prim != nullptr) && _1ac92bac1_IsNum(_1acbc9335_Str(_16663_prim)))) {
		return;;
	};
	_1acb90395_pushErr(_self_, _162851_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_162841_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_162827_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1acba0a04_castNum(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _167427_t, jule::Ptr<_1acb8cded_Data> _167441_d, jule::Ptr<_1abc2ba81_Token> _167451_errorToken) {
	if (_1acb8d838_IsConst(_167441_d.ptr())) {
		jule::Ptr<_1acbc8eb1_Prim> _16764_prim = _1acbc354e_Prim(_167427_t.ptr());;
		{
			
			if (_1ac92b83a_IsFloat((*(_16764_prim))._field_Kind)) {
				_case_begin_1beb3e794:;
				{
					_1aca8c319_SetF64((*_167441_d.alloc)._field_Constant.ptr(), _1aca8b48e_AsF64((*(_167441_d))._field_Constant));
				}
			}
			else if (_1ac92ae22_IsSigInt((*(_16764_prim))._field_Kind)) {
				_case_begin_1beb3e83d:;
				{
					_1aca8b747_SetI64((*_167441_d.alloc)._field_Constant.ptr(), _1aca8ae72_AsI64((*(_167441_d))._field_Constant));
				}
			}
			else if (_1ac92b230_IsUnsigInt((*(_16764_prim))._field_Kind)) {
				_case_begin_1beb3e8a4:;
				{
					_1aca8ba00_SetU64((*_167441_d.alloc)._field_Constant.ptr(), _1aca8b208_AsU64((*(_167441_d))._field_Constant));
				}
			}
			_match_end_1beb3e6b7:;
		};
	} else {
		(*(_167441_d))._field_Constant=nullptr;
		(*_167441_d.alloc)._field_untyped=false;
	};
	if ((_1acbc3d02_Enum((*(_167441_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1acab021b_Enum> _16914_e = _1acbc3d02_Enum((*(_167441_d))._field_Type);;
		if (_1ac92bac1_IsNum(_1acbc1294_Str((*((*(_16914_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1acbc8eb1_Prim> _16973_prim = _1acbc354e_Prim((*(_167441_d))._field_Type);;
	if (((_16973_prim != nullptr) && _1ac92bac1_IsNum(_1acbc9335_Str(_16973_prim)))) {
		return;;
	};
	_1acb90395_pushErr(_self_, _167451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_167441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_167427_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1acba0e22_castPrim(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _170528_t, jule::Ptr<_1acb8cded_Data> _170542_d, jule::Ptr<_1abc2ba81_Token> _170552_errorToken) {
	jule::Ptr<_1acbc8eb1_Prim> _17063_prim = _1acbc354e_Prim(_170528_t.ptr());;
	{
		
		if (_1acbcc712_IsAny(_17063_prim.ptr())) {
			_case_begin_1beb47cb9:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1709:4"));;
			}
		}
		else if (_1acbcc47b_IsStr(_17063_prim.ptr())) {
			_case_begin_1beb47967:;
			{
				_1acba01b8_castStr(_self_, _170542_d, _170552_errorToken);
			}
		}
		else if (_1ac92b4e9_IsInt(_1acbc9335_Str(_17063_prim.ptr()))) {
			_case_begin_1beb479cd:;
			{
				_1acba05d6_castInt(_self_, _170528_t, _170542_d, _170552_errorToken);
			}
		}
		else if (_1ac92bac1_IsNum(_1acbc9335_Str(_17063_prim.ptr()))) {
			_case_begin_1beb47a44:;
			{
				_1acba0a04_castNum(_self_, _170528_t, _170542_d, _170552_errorToken);
			}
		}
		else {
			_case_begin_1beb47901:;
			{
				_1acb90395_pushErr(_self_, _170552_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str(_170528_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1beb47879:;
	};
}



inline void _1acba1285_castConstant(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _172133_t, jule::Ptr<_1acb8cded_Data>* _172148_d) {
	if ((((*(_172148_d)) == nullptr) || (!(_1acb8d838_IsConst((*(_172148_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _17253_prim = _1acbc354e_Prim((*(_172133_t)).ptr());;
	_1acbbb426_castConstByType(&((*(_17253_prim))._field_Kind), _172148_d);
	(*((*(_172148_d))))._field_Model=jule::Any((*((*(_172148_d))))._field_Constant, &__jule_any_type15);
}



inline void _1acba16a3_castTypeEnum(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _173033_t, jule::Ptr<_1acb8cded_Data>* _173048_d, jule::Ptr<_1abc2ba81_Token>* _173063_errorToken) {
	jule::I32 _17313_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1acb2543a_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_173048_d))))._field_Type), _173033_t, _173063_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17313_n);;
		_1acb90395_pushErr(_self_, (*(_173063_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_173048_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_173033_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173048_d))))._field_Constant=nullptr;
	(*((*(_173048_d))))._field_untyped=false;
}



inline void _1acba1ac1_castTypeEnumT(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type>* _174034_t, jule::Ptr<_1acb8cded_Data>* _174049_d, jule::Ptr<_1abc2ba81_Token>* _174064_errorToken) {
	jule::I32 _17413_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1acb2543a_checkTypeCompatibility((*(_self_))._field_s, _174034_t, &((*((*(_174049_d))))._field_Type), _174064_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17413_n);;
		_1acb90395_pushErr(_self_, (*(_174064_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_174049_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_174034_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174049_d))))._field_Constant=nullptr;
	(*((*(_174049_d))))._field_untyped=false;
}



inline jule::Ptr<_1acb8cded_Data> _1acba2077_evalCastByTypeNData(_1acb8edbc_eval* _self_, jule::Ptr<_1acbc0d98_Type> _175039_t, jule::Ptr<_1acb8cded_Data> _175053_d, jule::Ptr<_1abc2ba81_Token> _175067_errorToken) {
	if (((_175053_d != nullptr) && (*_175053_d.alloc)._field_Decl)) {
		_1acb90395_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1acb8d31b_IsNil(_175053_d)) {
			_case_begin_1beb557dd:;
			{
				if ((!(_1acbc2c9b_NilCompatible(_175039_t.ptr())))) {
					_1acb90395_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_175039_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1acbc354e_Prim((*_175053_d.alloc)._field_Type.ptr()) != nullptr) && _1acbcc712_IsAny(_1acbc354e_Prim((*(_175053_d))._field_Type).ptr()))) {
			_case_begin_1beb5558a:;
			{
				if ((_1acbc4088_TypeEnum(_175039_t.ptr()) != nullptr)) {
					_1acb90395_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
				};
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1acbc354e_Prim(_175039_t.ptr()) != nullptr) && _1acbcc712_IsAny(_1acbc354e_Prim(_175039_t).ptr()))) {
			_case_begin_1beb55601:;
			{
				(*_175053_d.alloc)._field_Constant=nullptr;
				(*_175053_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1acbc4088_TypeEnum((*_175053_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1beb55667:;
			{
				_1acba16a3_castTypeEnum(_self_, &(_175039_t), &(_175053_d), &(_175067_errorToken));
			}
		}
		else if ((_1acbc4088_TypeEnum(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb556cd:;
			{
				_1acba1ac1_castTypeEnumT(_self_, &(_175039_t), &(_175053_d), &(_175067_errorToken));
			}
		}
		else if ((_1acbc3a6b_Ptr(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb564ae:;
			{
				_1acb9e0eb_castPtr(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1acbc37d5_Sptr(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb56525:;
			{
				_1acb9e937_castRef(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1acbc45a5_Slc(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb5658b:;
			{
				_1acb9ed55_castSlc(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1acbc4ac2_Struct(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb56602:;
			{
				_1acb9e519_castStruct(_self_, _175039_t, _175053_d, _175067_errorToken);
			}
		}
		else if ((_1acbc354e_Prim(_175039_t.ptr()) != nullptr)) {
			_case_begin_1beb56668:;
			{
				_1acba0e22_castPrim(_self_, _175039_t, _175053_d, _175067_errorToken);
				_1acba1285_castConstant(_self_, &(_175039_t), &(_175053_d));
			}
		}
		else {
			_case_begin_1beb55458:;
			{
				_1acb90395_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str(_175039_t.ptr()), &__jule_any_type5); __jule_collection; }));
				_175053_d=nullptr;
			}
		}
		_match_end_1beb553e2:;
	};
	if ((_175053_d == nullptr)) {
		return nullptr;;
	};
	if ((_1acbc1c45_Binded(_175039_t.ptr()) || _1acbc1c45_Binded((*_175053_d.alloc)._field_Type.ptr()))) {
		if ((!(_1acb90d8a_isUnsafe(_self_)))) {
			_1acb90395_pushErr(_self_, _175067_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*_175053_d.alloc)._field_Mutable=((*_175053_d.alloc)._field_Mutable || (!(_1acbc277e_Mutable((*(_175053_d))._field_Type))));
	if (((!((*_175053_d.alloc)._field_Decl)) && ((_1acbc3d02_Enum((*(_175053_d))._field_Type) == nullptr) || (!(_1acbc15d5_Equal((*((*(_1acbc3d02_Enum((*(_175053_d))._field_Type)))._field_TypeSym))._field_Type, _175039_t)))))) {
		_1acbba205_applyCastKind(&((*(_self_))._field_s), &(_175053_d), &(_175039_t), &(_175067_errorToken), _1acb933cb_getOwnerRefers(_self_));
		(*((*_175053_d.alloc)._field_Model.cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96)))._field_Token=_175067_errorToken;
	} else {
		(*_175053_d.alloc)._field_Type=_175039_t;
	};
	(*_175053_d.alloc)._field_Decl=false;
	(*_175053_d.alloc)._field_Lvalue=false;
	(*_175053_d.alloc)._field_untyped=false;
	if (_1acb8d838_IsConst(_175053_d)) {
		(*((*_175053_d.alloc)._field_Constant))._field_Kind=(*(_1acbc354e_Prim(_175039_t)))._field_Kind;
	};
	return _175053_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acba252d_evalCastT(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acbc0d98_Type>* _183531_t, jule::Ptr<_1ac9b2a47_Expr>* _183546_e, jule::Ptr<_1abc2ba81_Token>* _183566_et) {
	jule::Ptr<_1acbc0d98_Type> _18367_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18367_prefix;
	});;
	if ((_1acbc45a5_Slc((*(_183531_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_183546_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1beb68b64:;
				{
					(*_self_.alloc)._field_prefix=(*(_183531_t));
				}
			}
			_match_end_1beb68adc:;
		};
	};
	jule::Ptr<_1acb8cded_Data> _18457_d = _1acbadbaa_evalExpr(_self_, (*(_183546_e)));;
	if (((_18457_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18457_d;;
	};
	return _1acba2077_evalCastByTypeNData(_self_, (*(_183531_t)), _18457_d, (*(_183566_et)));;
}



inline jule::Ptr<_1acb8cded_Data> _1acba286e_evalCast(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b53a7_CastExpr> _185229_c) {
	jule::Ptr<_1acbc85a9_TypeSym> _18537_t = _1ac97b219_buildType((*(_185229_c))._field_Kind);;
	jule::Bool _18543_ok = _1acb225d0_checkTypeSym((*(_self_))._field_s, &(_18537_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18543_ok))) {
		return nullptr;;
	};
	return _1acba252d_evalCastT(_self_, &((*(_18537_t))._field_Type), &((*_185229_c.alloc)._field_Expr), &((*((*_185229_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1acb8cded_Data> _1acba2bb0_evalNamespace(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9b5781_NamespaceExpr> _186133_s) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _18627_imp = _1acbbd7be_findNamespace((*(_self_))._field_lookup, (*((*(_186133_s))._field_Namespace))._field_Kind);;
	if ((_18627_imp == nullptr)) {
		_1acb90395_pushErr(_self_, (*_186133_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186133_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18687_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18627_imp, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data2);
	;
	_1acb90b04_disallowBuiltin(_self_);
	jule::Any _18737_def = _1acb93145_getDef(_self_, &((*((*_186133_s.alloc)._field_Ident))._field_Kind), false);;
	_1acb90906_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18687_lookup;
	jule::Ptr<_1acb8cded_Data> _18767_d = _1acb97303_evalDef(_self_, &(_18737_def), (*_186133_s.alloc)._field_Ident);;
	return _18767_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acba3166_evalStructLitExplicit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9d1e84_StructIns> _188042_s, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _18817_exprs, jule::Ptr<_1abc2ba81_Token> _188132_errorToken) {
	jule::Bool _18823_ok = _1acb1da1b_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_188042_s))._field_Decl))._field_Generics.len(), (*_188042_s.alloc)._field_Generics.len(), _188132_errorToken);;
	if ((!(_18823_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_188042_s.alloc)._field_Decl))) {
		_1acb90395_pushErr(_self_, _188132_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188042_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1be23bce8_pushReference(_self_, &(_188042_s));
	_1acb954ee_checkDeprecated(_self_, &((*(*(_188042_s))._field_Decl.alloc)._field_Directives), _188132_errorToken);
	_1acb85731_structLitChecker _18957_slc = _1acb85731_structLitChecker{._field_e=_self_, ._field_errorToken=_188132_errorToken, ._field_s=_188042_s, ._field_args=jule::Slice<jule::Ptr<_1aca95a3c_StructArgExprModel>>(nullptr)};;
	_1acb86ea2_check(&_18957_slc, &(_18817_exprs));
	jule::Ptr<_1acb8cded_Data> _19027_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_188042_s, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)}), ._field_Mutable=(*_self_.alloc)._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aca95dd3_StructLitExprModel>(_1aca95dd3_StructLitExprModel{._field_Strct=_188042_s, ._field_Args=_18957_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if ((*(*(_188042_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19027_d))._field_Type))._field_BindIdent=(*(*(_188042_s))._field_Decl.alloc)._field_Ident;
	};
	return _19027_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acba34a7_evalStructLit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b7a91_StructLit> _191834_lit) {
	jule::Ptr<_1acbc85a9_TypeSym> _19197_t = _1ac97b219_buildType((*(_191834_lit))._field_Kind);;
	jule::Bool _19203_ok = _1acb225d0_checkTypeSym((*(_self_))._field_s, &(_19197_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19203_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _19257_s = _1acbc4ac2_Struct((*(_19197_t))._field_Type.ptr());;
	if ((_19257_s == nullptr)) {
		if ((_1acbc37d5_Sptr((*(_19197_t))._field_Type) != nullptr)) {
			_19257_s=_1acbc4ac2_Struct((*(_1acbc37d5_Sptr((*(_19197_t))._field_Type)))._field_Elem.ptr());
			if ((_19257_s != nullptr)) {
				goto _julec_label_1beb8175e;
			};
		};
		_1acb90395_pushErr(_self_, (*((*_191834_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1beb8175e:;
	jule::Ptr<_1acb8cded_Data> _19387_d = _1acba3166_evalStructLitExplicit(_self_, _19257_s, (*_191834_lit.alloc)._field_Exprs, (*(*(_191834_lit))._field_Kind.alloc)._field_Token);;
	if ((_1acbc37d5_Sptr((*(_19197_t))._field_Type) != nullptr)) {
		jule::Ptr<_1aca95dd3_StructLitExprModel> _19408_model = (*(_19387_d))._field_Model.cast_ptr<_1aca95dd3_StructLitExprModel>(&__jule_any_type98);;
		_1acbb8049_makeStructLitAlloc(&(_19387_d), &(_19408_model));
	};
	return _19387_d;;
}



inline _1acbd3295_typeChecker _1acba373d_typeChecker(_1acb8edbc_eval* _self_) {
	return _1acb2137b_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1acb8cded_Data> _1acba3a7e_evalType(_1acb8edbc_eval* _self_, jule::Ptr<_1abc4259c_TypeDecl> _195028_t) {
	jule::Ptr<_1acbc85a9_TypeSym> _19517_tk = _1ac97b219_buildType(_195028_t);;
	jule::Bool _19523_ok = _1acb225d0_checkTypeSym((*(_self_))._field_s, &(_19517_tk), (*(_self_))._field_lookup);;
	if ((!(_19523_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*(_19517_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19517_tk.alloc)._field_Type, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline void _1acba3de2_callTypeFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _196332_fc, jule::Ptr<_1acb8cded_Data>* _196359_d) {
	if (((*((*(_196332_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_196332_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr(_self_.ptr(), (*((*((*(_196332_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_196359_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_196332_fc))))._field_IsCo) {
		_1acb90395_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_196359_d))=nullptr;
		return;;
	} else if (((*((*(_196332_fc))))._field_Exception != nullptr)) {
		_1acb90395_pushErr(_self_.ptr(), (*((*(_196332_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_196359_d))=nullptr;
		return;;
	};
	if (((*((*(_196332_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1ac9b2a47_Expr> _19798_arg = (*((*(_196332_fc))))._field_Args[0LL];;
		(*(_196359_d))=_1acba252d_evalCastT(_self_, &((*((*(_196359_d))))._field_Type), &(_19798_arg), &((*(_19798_arg))._field_Token));
		return;;
	};
	if (((*(_196359_d)) != nullptr)) {
		(*((*(_196359_d))))._field_Decl=false;
	};
}



inline void _1acba4255_callBuiltinFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _198935_fc, jule::Ptr<_1acb8cded_Data>* _198962_d) {
	if ((!(_1ac9b6b28_Unhandled((*(_198935_fc)).ptr())))) {
		_1acb90395_pushErr(_self_.ptr(), (*((*(_198935_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_198962_d))=(*(_1acbc483b_Fn((*((*(_198962_d))))._field_Type.ptr())))._field_caller(&(_self_), _198935_fc, _198962_d);
	if (((*(_198962_d)) == nullptr)) {
		return;;
	};
	(*((*(_198962_d))))._field_Mutable=true;
}



inline void _1acba45b8_checkFnOfConcurrentCall(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _200140_f, jule::Ptr<_1abc2ba81_Token> _200151_errorToken) {
	if (_1acb90d8a_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_200140_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00b7711:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> *_200510_p = it;
			{
				if (_1acaa0ecb_IsSelf((*((*(_200510_p))))._field_Decl.ptr())) {
					if ((!(_1acaa1262_IsRef((*((*(_200510_p))))._field_Decl)))) {
						_1acb90395_pushErr(_self_, _200151_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*(*((*(_200510_p))))._field_Decl.alloc)._field_Reference) {
					_1acb90395_pushErr(_self_, _200151_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c00b7711:;
			++it;
			goto _iter_begin_1c00b7711;
		}
		_iter_end_1c00b7711:;
	};
}



inline void _1acba49d6_processExceptionalHandler(_1acb8edbc_eval* _self_, jule::Ptr<_1acaa540e_FnIns>* _202046_f, jule::Ptr<_1ac9b6771_FnCallExpr>* _202062_fc, jule::Ptr<_1acb8cded_Data>* _202089_d) {
	jule::Bool _20213_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_1acaa2807_IsVoid((*((*(_202046_f))))._field_Decl.ptr()))));;
	jule::Ptr<_1ac9631bd_scopeChecker> _202211_csc = nullptr;;
	jule::Ptr<_1ac95aa56_Scope> _202311_ch = nullptr;;
	jule::Ptr<_1aca97115_FnCallExprModel> _20257_model = (*((*(_202089_d))))._field_Model.cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
	jule::Ptr<_1ac9631bd_scopeChecker> _20297_sc = (*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1);;
	_202211_csc=_1ac9755cb_newChildChecker(_20297_sc);
	if (_20213_resultNeeded) {
		(*(_202211_csc))._field_result=jule::new_ptr<_1ac9621cd_result>(_1ac9621cd_result{._field_func=(*(_202046_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_202311_ch=_1ac968877_getChild(_20297_sc);
	(*((*((*(_202062_fc))))._field_Exception))._field_Parent=(*_20297_sc.alloc)._field_tree;
	(*((*_202211_csc.alloc)._field_table))._field_Vars=jule::append((*(*(_202211_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1acbb83bd_buildErrorVar(&(_202311_ch), _202062_fc); __jule_collection; }));
	_1ac968c95_checkChildSsc(_20297_sc, &((*((*(_202062_fc))))._field_Exception), &(_202311_ch), &(_202211_csc));
	(*(_20257_model))._field_Assigned=_20213_resultNeeded;
	(*_20257_model.alloc)._field_Except=_202311_ch;
	if ((_20213_resultNeeded && ((*_202211_csc.alloc)._field_result != nullptr))) {
		_1acb90395_pushErr(_self_, (*((*(_202062_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1acba4d49_callFn(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr>* _204728_fc, jule::Ptr<_1acb8cded_Data>* _204755_d) {
	jule::Ptr<_1acaa540e_FnIns> _20487_f = _1acbc483b_Fn((*((*(_204755_d))))._field_Type.ptr());;
	if (_1acaa68c7_IsBuiltin(_20487_f.ptr())) {
		_1acba4255_callBuiltinFn(_self_, _204728_fc, _204755_d);
		return;;
	};
	if (((!(_1acaa2a8d_IsMethod((*_20487_f.alloc)._field_Decl.ptr()))) && _1acbdc414_hasDirective(&((*(*(_20487_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_204755_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_204755_d))))._field_Mutable)) && _1acaa2a8d_IsMethod((*(_20487_f))._field_Decl)) && (!((*(*(_20487_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20487_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*_self_.alloc)._field_target._field_mutable) {
			_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1aca95dd3_StructLitExprModel> _20685_lit = _1acbbc59d_isLitBased(&((*((*(_204755_d))))._field_Model));;
			if ((_20685_lit == nullptr)) {
				_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1acb85247_checkMutRiskOfStructLit(&((*_self_.alloc)._field_s), &(_20685_lit));
			};
		};
	} else if (((!(_1acb90d8a_isUnsafe(_self_))) && (*(*(_20487_f))._field_Decl.alloc)._field_Unsafety)) {
		_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20807_dynamicAnnotation = ((((*(*(_20487_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_20487_f.alloc)._field_Generics.len() == 0LL)) && ((*_20487_f.alloc)._field_Params.len() > 0LL));;
	if (_20807_dynamicAnnotation) {
		(*_20487_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc((*(*(_20487_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbbe4b2_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20487_f.alloc)._field_Generics.len() != (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len())) {
		_1acb1da1b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), (*(*(_20487_f))._field_Decl.alloc)._field_Generics.len(), (*_20487_f.alloc)._field_Generics.len(), (*((*(_204728_fc))))._field_Token);
		(*(_204755_d))=nullptr;
		return;;
	};
	jule::Ptr<_1ac9a8c2a_sema> _20897_old = (*_self_.alloc)._field_s;;
	if (((*(*(_20487_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20487_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20897_old != (*_self_.alloc)._field_s)) {
			(*(_20897_old))._field_errors=jule::append((*_20897_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20897_old;
	});;
	_1acb827e9_fnCallArgChecker _21027_fcac = _1acb827e9_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_204728_fc))))._field_Args, ._field_errorToken=(*((*(_204728_fc))))._field_Token, ._field_f=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_dynamicAnnotation=_20807_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)};;
	if ((!(_20807_dynamicAnnotation))) {
		if ((!((*_20487_f.alloc)._field_reloaded))) {
			jule::Bool _21115_ok = _1acb28350_reloadFnInsTypes((*(_self_))._field_s, _20487_f);;
			(*_20487_f.alloc)._field_reloaded=true;
			if ((!(_21115_ok))) {
				(*(_204755_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1acaa540e_FnIns> _21188_existInstance = _1acaa3e02_appendInstance((*(_20487_f))._field_Decl, &(_20487_f));;
		if ((_21188_existInstance != nullptr)) {
			_20487_f=_21188_existInstance;
		};
	} else if ((!(_1acb266b1_buildFnNonGenericTypes((*(_self_))._field_s, _20487_f, &(_21027_fcac._field_ignored))))) {
		(*(_204755_d))=nullptr;
		return;;
	};
	_21027_fcac._field_f=_20487_f;
	jule::Bool _21297_ok = false;;
	if (((*(*(_20487_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20897_old, (*_self_.alloc)._field_s);
		_21297_ok=_1acb84dd4_check(&_21027_fcac);
		std::swap(_20897_old, (*_self_.alloc)._field_s);
	} else {
		_21297_ok=_1acb84dd4_check(&_21027_fcac);
	};
	if (_20807_dynamicAnnotation) {
		if ((!(_21297_ok))) {
			(*(_204755_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb9c1e8_checkGenericFn(_self_, &(_20487_f), &((*((*(_204728_fc))))._field_Token), &((*((*(_204755_d))))._field_Model));
			_21297_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21297_ok))) {
			(*(_204755_d))=nullptr;
			return;;
		};
	};
	jule::Any _21507_callModel = (*((*(_204755_d))))._field_Model;;
	if (_1acaa2807_IsVoid((*(_20487_f))._field_Decl)) {
		(*(_204755_d))=_1acbba414_buildVoidData();
	} else {
		(*((*(_204755_d))))._field_Type=(*_20487_f.alloc)._field_Result;
		(*((*(_204755_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1aca97115_FnCallExprModel> _21597_model = jule::new_ptr<_1aca97115_FnCallExprModel>(_1aca97115_FnCallExprModel{._field_Token=(*((*(_204728_fc))))._field_Token, ._field_Func=_20487_f, ._field_IsCo=(*((*(_204728_fc))))._field_IsCo, ._field_Expr=_21507_callModel, ._field_Args=_21027_fcac._field_argModels, ._field_Except=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_204755_d))))._field_Model=jule::Any(_21597_model, &__jule_any_type31);
	(*((*(_204755_d))))._field_Mutable=true;
	if ((*(*(_20487_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_204728_fc))))._field_IsCo) {
			_1ac9abb2e_pushErr((*(_self_))._field_s, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1ac9abe92_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1ac9b6b28_Unhandled((*(_204728_fc)).ptr())) {
				_case_begin_1c00dd65a:;
				{
					_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1ac9b6dae_Ignored((*(_204728_fc)).ptr())) {
				_case_begin_1c00dd33b:;
				{
					goto _match_end_1c00dbc1e;
				}
			}
			else {
				_case_begin_1c00dbcb8:;
				{
					_1acba49d6_processExceptionalHandler(_self_, &(_20487_f), _204728_fc, _204755_d);
				}
			}
			_match_end_1c00dbc1e:;
		};
	} else if ((!(_1ac9b6b28_Unhandled((*(_204728_fc)).ptr())))) {
		_1acb90395_pushErr(_self_, (*((*(_204728_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_204728_fc))))._field_IsCo) {
		(*((*(_21597_model))._field_Func))._field_AsAnon=true;
		(*(*(_21597_model))._field_Func.alloc)._field_CalledCo=true;
		_1acba45b8_checkFnOfConcurrentCall(_self_, &((*_21597_model.alloc)._field_Func), (*((*(_204728_fc))))._field_Token);
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba518a_evalFnCall(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6771_FnCallExpr> _219631_fc) {
	jule::Ptr<_1acbc0d98_Type> _21977_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21977_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_219631_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c00e3ae4:;
			{
				if (((*((*((*(_219631_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1acc48b8a_builtinCallerError(&(_self_), &(_219631_fc));;
				};
			}
		}
		_match_end_1c00e3a6c:;
	};
	jule::Ptr<_1acb8cded_Data> _22107_d = _1acbacd96_evalExprKind(_self_, (*(*(_219631_fc))._field_Expr.alloc)._field_Kind);;
	if ((_22107_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22107_d))._field_Decl) {
		_1acba3de2_callTypeFn(_self_, &(_219631_fc), &(_22107_d));
		return _22107_d;;
	};
	if ((_1acbc483b_Fn((*(_22107_d))._field_Type.ptr()) == nullptr)) {
		_1acb90395_pushErr(_self_, (*_219631_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acba4d49_callFn(_self_, &(_219631_fc), &(_22107_d));
	return _22107_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acba5586_evalEnumStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acab021b_Enum> _222934_enm, jule::Ptr<_1abc2ba81_Token> _222950_ident) {
	jule::Ptr<_1acaae6b0_EnumItem> _22307_item = _1acab0d43_FindItem(_222934_enm.ptr(), (*(_222950_ident))._field_Kind);;
	if ((_22307_item == nullptr)) {
		_1acb90395_pushErr(_self_, _222950_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_222934_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_222950_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1acbbc2d4_evalEnumStatic(&((*(_self_))._field_s), &(_222934_enm), &(_22307_item), &(_222950_ident), _1acb933cb_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1acb8cded_Data> _1acba5982_evalTypeEnumStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acab1926_TypeEnum> _223738_enm, jule::Ptr<_1abc2ba81_Token> _223754_ident) {
	jule::Ptr<_1acab134e_TypeEnumItem> _22387_item = _1acab251a_FindItem(_223738_enm.ptr(), (*(_223754_ident))._field_Kind);;
	if ((_22387_item == nullptr)) {
		_1acb90395_pushErr(_self_, _223754_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223738_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223754_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1acbc3d02_Enum((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c00ec922:;
			{
				return _1acb939c5__evalEnum(_self_, _1acbc3d02_Enum((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1acbc4088_TypeEnum((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c00eaa96:;
			{
				return _1acb94212__evalTypeEnum(_self_, _1acbc4088_TypeEnum((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1acbc4ac2_Struct((*((*(_22387_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c00eab0c:;
			{
				return _1acb9494e__evalStruct(_self_, _1acbc4ac2_Struct((*((*(_22387_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1c00eaa30:;
			{
				jule::Ptr<_1acb8cded_Data> _22518_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*((*(_22387_item))._field_TypeSym))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
				(*(_22518_d))._field_Model=jule::Any((*_22518_d.alloc)._field_Type, &__jule_any_type87);
				return _22518_d;;
			}
		}
		_match_end_1c00eabea:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba5d7d_evalStructStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9d1e84_StructIns> _226036_s, jule::Ptr<_1abc2ba81_Token> _226051_ident) {
	jule::Ptr<_1acb8cded_Data> _22617_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	;
	jule::Ptr<_1acaa2351_Fn> _22657_method = _1ac9d302e_FindMethod(_226036_s.ptr(), (*(_226051_ident))._field_Kind, true);;
	if ((_22657_method != nullptr)) {
		if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22657_method.alloc)._field_Public, (*_22657_method.alloc)._field_Token)))) {
			_1acb90395_pushErr(_self_, _226051_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226051_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1acaa540e_FnIns> _22728_ins = _1acaa3ae4_instance(_22657_method);;
		(*(_22728_ins))._field_Owner=_226036_s;
		_1becd3075_pushReference(_self_, &(_22728_ins));
		(*_22617_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9a04c_StructStaticIdentExprModel>(_1aca9a04c_StructStaticIdentExprModel{._field_Structure=_226036_s, ._field_Expr=(*_22617_d.alloc)._field_Model, ._field_Method=_22728_ins}), &__jule_any_type99);
		(*_22617_d.alloc)._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22728_ins, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)});
		return _22617_d;;
	};
	jule::Ptr<_1acb3d420_Var> _22867_sttc = _1ac9d36b1_FindStatic(_226036_s, (*_226051_ident.alloc)._field_Kind);;
	if ((_22867_sttc != nullptr)) {
		return _1acb96a0b_evalVar(_self_, _22867_sttc, _226051_ident);;
	};
	_1acb90395_pushErr(_self_, _226051_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_226036_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_226051_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1acb8cded_Data> _1acba6334_evalTraitSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _229537_d, jule::Ptr<_1acaaca65_Trait> _229551_trt, jule::Ptr<_1abc2ba81_Token> _229568_ident) {
	jule::Ptr<_1acaa2351_Fn> _22967_f = _1acaad747_FindMethod(_229551_trt.ptr(), (*(_229568_ident))._field_Kind);;
	if ((_22967_f == nullptr)) {
		_1acb90395_pushErr(_self_, _229568_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229551_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_229568_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acaa3ae4_instance(_22967_f), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)}), ._field_Mutable=(*(_229537_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aca99315_TraitSubIdentExprModel>(_1aca99315_TraitSubIdentExprModel{._field_Token=_229568_ident, ._field_Expr=(*_229537_d.alloc)._field_Model, ._field_Method=_22967_f, ._field_Trt=_229551_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acba6895_evalStructSubIdentField(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _231744_d, jule::Ptr<_1ac9d1e84_StructIns>* _231759_s, jule::Ptr<_1abc2ba81_Token>* _231779_tok, jule::Ptr<_1ac9d13d4_FieldIns>* _2317104_f) {
	jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _23187_model = jule::new_ptr<_1aca99ba6_StructSubIdentExprModel>(_1aca99ba6_StructSubIdentExprModel{._field_Token=(*(_231779_tok)), ._field_Expr=jule::new_ptr<_1acb8cded_Data>((*((*(_231744_d))))), ._field_Method=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Field=(*(_2317104_f)), ._field_Owner=(*(_231759_s))});;
	(*((*(_231744_d))))._field_Model=jule::Any(_23187_model, &__jule_any_type101);
	(*((*(_231744_d))))._field_Type=(*((*(_2317104_f))))._field_Type;
	(*((*(_231744_d))))._field_Lvalue=true;
	if (((*((*((*(_2317104_f))))._field_Decl))._field_Mutable && (!((*((*(_231744_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
				_case_begin_1c01122d8:;
				{
					jule::Ptr<_1ac9631bd_scopeChecker> _23335_scope = _1ac966831_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1));;
					(*((*(_231744_d))))._field_Mutable=(((*(_23335_scope))._field_owner != nullptr) && ((*(*(_23335_scope))._field_owner.alloc)._field_Owner == (*(_231759_s))));
				}
			}
			_match_end_1c0112272:;
		};
	};
	return (*(_231744_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acba6eb1_evalStructSubIdentMethod(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _234245_d, jule::Ptr<_1ac9d1e84_StructIns>* _234260_s, jule::Ptr<_1abc2ba81_Token>* _234280_tok, jule::Ptr<_1acaa2351_Fn>* _2342105_m, jule::Bool _2342113_ref) {
	if ((_1acaa1262_IsRef((*((*(_2342105_m))))._field_Params[0LL].ptr()) && (!(_2342113_ref)))) {
		_1acb90395_pushErr(_self_, (*(_234280_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1acb954ee_checkDeprecated(_self_, &((*((*(_2342105_m))))._field_Directives), (*(_234280_tok)));
	jule::Ptr<_1acaa540e_FnIns> _23497_ins = _1acaa3ae4_instance((*(_2342105_m)));;
	(*(_23497_ins))._field_Owner=(*(_234260_s));
	_1becd3075_pushReference(_self_, &(_23497_ins));
	jule::Ptr<_1acb8cded_Data> _23527_model = jule::new_ptr<_1acb8cded_Data>((*((*(_234245_d)))));;
	(*((*(_234245_d))))._field_Model=jule::Any(jule::new_ptr<_1aca99ba6_StructSubIdentExprModel>(_1aca99ba6_StructSubIdentExprModel{._field_Token=(*(_234280_tok)), ._field_Expr=_23527_model, ._field_Method=_23497_ins, ._field_Field=jule::Ptr<_1ac9d13d4_FieldIns>(nullptr), ._field_Owner=(*(_234260_s))}), &__jule_any_type101);
	(*((*(_234245_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23497_ins, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)});
	return (*(_234245_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acba7522_evalStructSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _236338_d, jule::Ptr<_1ac9d1e84_StructIns> _236352_s, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _236371_si, jule::Bool _236395_ref) {
	jule::Ptr<_1ac9d13d4_FieldIns> _23647_f = _1ac9d3370_FindField(_236352_s.ptr(), (*((*(_236371_si))._field_Ident))._field_Kind);;
	if ((_23647_f != nullptr)) {
		if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23647_f.alloc)._field_Decl))._field_Public, (*(*(_23647_f))._field_Decl.alloc)._field_Token)))) {
			_1acb90395_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23647_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1acba6895_evalStructSubIdentField(_self_, &(_236338_d), &(_236352_s), &((*_236371_si.alloc)._field_Ident), &(_23647_f));;
	};
	;
	jule::Ptr<_1acaa2351_Fn> _23747_m = _1ac9d302e_FindMethod(_236352_s, (*(*(_236371_si))._field_Ident.alloc)._field_Kind, false);;
	if ((_23747_m == nullptr)) {
		_1acb90395_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_236352_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_236371_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s, (*(_23747_m))._field_Public, (*(_23747_m))._field_Token)))) {
		_1acb90395_pushErr(_self_, (*_236371_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_23747_m))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1acb90708_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1acba6eb1_evalStructSubIdentMethod(_self_, &(_236338_d), &(_236352_s), &((*_236371_si.alloc)._field_Ident), &(_23747_m), _236395_ref);;
}



inline jule::Ptr<_1acb8cded_Data> _1acba7863_evalIntTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _238733_ident) {
	;
	{
		auto &_match_expr{ (*(_238733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0122815:;
			{
				jule::Ptr<_1aca3208e_Const> _23918_c = static__1aca88c61_NewI64(_1ac92945e_MaxI(jule::Str::lit("int", 3)));;
				(*(_23918_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23918_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23918_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c012342b:;
			{
				jule::Ptr<_1aca3208e_Const> _24008_c = static__1aca88c61_NewI64(static_cast<jule::I64>(_1ac929a69_Min(jule::Str::lit("int", 3))));;
				(*(_24008_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24008_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24008_c});;
			}
		}
		else {
			_case_begin_1c011ec41:;
			{
				_1acb90395_pushErr(_self_, _238733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_238733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c012243b:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba7ba4_evalUintTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _241434_ident) {
	;
	{
		auto &_match_expr{ (*(_241434_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c012697e:;
			{
				jule::Ptr<_1aca3208e_Const> _24188_c = static__1aca88ed6_NewU64(_1ac929728_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24188_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc45109_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24188_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24188_c});;
			}
		}
		else {
			_case_begin_1c01256d6:;
			{
				_1acb90395_pushErr(_self_, _241434_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_241434_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c01265a5:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba7ee5_evalI8TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _243232_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243232_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0129dc2:;
			{
				jule::Ptr<_1aca3208e_Const> _24388_c = static__1aca88c61_NewI64(127LL);;
				(*(_24388_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc45714_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24388_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24388_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c012a9d8:;
			{
				jule::Ptr<_1aca3208e_Const> _24478_c = static__1aca88c61_NewI64(-128LL);;
				(*(_24478_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc45714_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24478_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24478_c});;
			}
		}
		else {
			_case_begin_1c012980b:;
			{
				_1acb90395_pushErr(_self_, _243232_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_243232_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c01299e8:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba8336_evalI16TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _246133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c012e525:;
			{
				jule::Ptr<_1aca3208e_Const> _24678_c = static__1aca88c61_NewI64(32767LL);;
				(*(_24678_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc459ab_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24678_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24678_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c013013b:;
			{
				jule::Ptr<_1aca3208e_Const> _24768_c = static__1aca88c61_NewI64(-32768LL);;
				(*(_24768_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc459ab_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24768_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24768_c});;
			}
		}
		else {
			_case_begin_1c012de5e:;
			{
				_1acb90395_pushErr(_self_, _246133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_246133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c012e14b:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba8677_evalI32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _249033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0133b78:;
			{
				jule::Ptr<_1aca3208e_Const> _24968_c = static__1aca88c61_NewI64(2147483647LL);;
				(*(_24968_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc45c64_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24968_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24968_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c013478e:;
			{
				jule::Ptr<_1aca3208e_Const> _25058_c = static__1aca88c61_NewI64(-2147483648LL);;
				(*(_25058_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc45c64_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25058_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25058_c});;
			}
		}
		else {
			_case_begin_1c01335b2:;
			{
				_1acb90395_pushErr(_self_, _249033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_249033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c013379e:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba89b8_evalI64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _251933_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_251933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c01382cb:;
			{
				jule::Ptr<_1aca3208e_Const> _25258_c = static__1aca88c61_NewI64(jule::MAX_I64);;
				(*(_25258_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc4601c_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25258_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25258_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c0138de2:;
			{
				jule::Ptr<_1aca3208e_Const> _25348_c = static__1aca88c61_NewI64(jule::MIN_I64);;
				(*(_25348_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc4601c_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25348_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25348_c});;
			}
		}
		else {
			_case_begin_1c0137c15:;
			{
				_1acb90395_pushErr(_self_, _251933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_251933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c0137e02:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba8d09_evalU8TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _254832_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254832_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c013c599:;
			{
				jule::Ptr<_1aca3208e_Const> _25538_c = static__1aca88ed6_NewU64(255LLU);;
				(*(_25538_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc462c5_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25538_c});;
			}
		}
		else {
			_case_begin_1c013adb1:;
			{
				_1acb90395_pushErr(_self_, _254832_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_254832_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c013c137:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba914a_evalU16TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _256733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0140558:;
			{
				jule::Ptr<_1aca3208e_Const> _25728_c = static__1aca88ed6_NewU64(65535LLU);;
				(*(_25728_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc4657d_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25728_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25728_c});;
			}
		}
		else {
			_case_begin_1c013edb5:;
			{
				_1acb90395_pushErr(_self_, _256733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_256733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c01400e6:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba948b_evalU32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _258633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0143517:;
			{
				jule::Ptr<_1aca3208e_Const> _25918_c = static__1aca88ed6_NewU64(4294967295LLU);;
				(*(_25918_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc46836_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25918_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25918_c});;
			}
		}
		else {
			_case_begin_1c0141e72:;
			{
				_1acb90395_pushErr(_self_, _258633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c01430a5:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba97cc_evalU64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _260533_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_260533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c01464c6:;
			{
				jule::Ptr<_1aca3208e_Const> _26108_c = static__1aca88ed6_NewU64(jule::MAX_U64);;
				(*(_26108_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc46d20_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26108_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26108_c});;
			}
		}
		else {
			_case_begin_1c0145d33:;
			{
				_1acb90395_pushErr(_self_, _260533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_260533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c0146064:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba9b1d_evalF32TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _262433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0149b39:;
			{
				jule::Ptr<_1aca3208e_Const> _26318_c = static__1aca89833_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26318_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47062_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26318_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26318_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c014a750:;
			{
				jule::Ptr<_1aca3208e_Const> _26408_c = static__1aca89833_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26408_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47062_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26408_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26408_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c014a7b6:;
			{
				jule::Ptr<_1aca3208e_Const> _26498_c = static__1aca89833_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26498_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47062_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26498_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26498_c});;
			}
		}
		else {
			_case_begin_1c01493ca:;
			{
				_1acb90395_pushErr(_self_, _262433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type18); (*it++) = jule::Any((*(_262433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c0149760:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acba9e5e_evalF64TypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1abc2ba81_Token> _266333_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_266333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c0150777:;
			{
				jule::Ptr<_1aca3208e_Const> _26708_c = static__1aca89833_NewF64(jule::MAX_F64);;
				(*(_26708_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47271_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26708_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26708_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c015138d:;
			{
				jule::Ptr<_1aca3208e_Const> _26798_c = static__1aca89833_NewF64(jule::MIN_F64);;
				(*(_26798_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47271_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26798_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26798_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c0151404:;
			{
				jule::Ptr<_1aca3208e_Const> _26888_c = static__1aca89833_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26888_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=true, ._field_Type=_1acc47271_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26888_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26888_c});;
			}
		}
		else {
			_case_begin_1c0150018:;
			{
				_1acb90395_pushErr(_self_, _266333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type18); (*it++) = jule::Any((*(_266333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c015039d:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbaa35a_evalPrimStatic(_1acb8edbc_eval* _self_, jule::Str _270230_kind, jule::Ptr<_1abc2ba81_Token> _270241_ident) {
	{
		auto &_match_expr{ _270230_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1c015523d:;
			{
				return _1acba7863_evalIntTypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1c0155cee:;
			{
				return _1acba7ba4_evalUintTypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1c0155d65:;
			{
				return _1acba7ee5_evalI8TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1c0154dec:;
			{
				return _1acba8336_evalI16TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1c0154e63:;
			{
				return _1acba8677_evalI32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1c0154ec9:;
			{
				return _1acba89b8_evalI64TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1c0155040:;
			{
				return _1acba8d09_evalU8TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1c0155e53:;
			{
				return _1acba914a_evalU16TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1c0155eb9:;
			{
				return _1acba948b_evalU32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1c0156030:;
			{
				return _1acba97cc_evalU64TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1c0156096:;
			{
				return _1acba9b1d_evalF32TypeStatic(_self_, _270241_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1c015610c:;
			{
				return _1acba9e5e_evalF64TypeStatic(_self_, _270241_ident);;
			}
		}
		else {
			_case_begin_1c01515d0:;
			{
				_1acb90395_pushErr(_self_, _270241_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_270230_kind, &__jule_any_type5); (*it++) = jule::Any((*(_270241_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c0151657:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbaa756_evalTypeStatic(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _273434_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _273448_si) {
	{
		
		if ((_1acbc354e_Prim((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c015b079:;
			{
				return _1acbaa35a_evalPrimStatic(_self_, _1acbc9335_Str(_1acbc354e_Prim((*(_273434_d))._field_Type).ptr()), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1acbc3d02_Enum((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c015c014:;
			{
				return _1acba5586_evalEnumStatic(_self_, _1acbc3d02_Enum((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1acbc4088_TypeEnum((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c015c07a:;
			{
				return _1acba5982_evalTypeEnumStatic(_self_, _1acbc4088_TypeEnum((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_273434_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c015ac16:;
			{
				return _1acba5d7d_evalStructStatic(_self_, _1acbc4ac2_Struct((*(_273434_d))._field_Type), (*(_273448_si))._field_Ident);;
			}
		}
		else {
			_case_begin_1c015aba0:;
			{
				_1acb90395_pushErr(_self_, (*(_273448_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_273434_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c015aae5:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1c0163dea_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac93cebc_comptimeTypeInfo>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac943ce7_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c01686d5_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac92db28_comptimeStructField>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac930069_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c016ce59_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac93506e_comptimeEnumField>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac9360a3_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c0172722_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac937d85_comptimeParam>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac9396d3_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c01770d9_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac931d4b_comptimeStatic>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac93328c_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c017b85d_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac9440c2_comptimeValue>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac946a53_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c01810d2_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac94879c_comptimeFile>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac94a0ea_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}

inline jule::Ptr<_1acb8cded_Data> _1c01858de_comptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1ac94c6b3_comptimeDecl>* _275054_ct, jule::Ptr<_1acb8cded_Data>* _275074_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr>* _275085_si) {
	jule::Ptr<_1acb8cded_Data> _27517_cd = _1ac95151e_subIdent((*(_275054_ct)), &((*((*((*(_275085_si))))._field_Ident))._field_Kind));;
	if ((_27517_cd == nullptr)) {
		_1acb90395_pushErr(_self_, (*((*(_275085_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_275074_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275085_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27517_cd;;
}



inline __jule_tuple_x_1acb8cded_Data__jule_tuple_bool _1acbab108_tryComptimeObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data>* _275843_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _275857_si) {
	__jule_tuple_x_1acb8cded_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1acbc6e15_comptimeTypeInfo((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0162305:;
			{
				jule::Ptr<_1ac93cebc_comptimeTypeInfo> _27618_ct = _1acbc6e15_comptimeTypeInfo((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c0163dea_comptimeObjSubIdent(_self_, &(_27618_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc5b28_comptimeStructField((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0161d3d:;
			{
				jule::Ptr<_1ac92db28_comptimeStructField> _27648_ct = _1acbc5b28_comptimeStructField((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c01686d5_comptimeObjSubIdent(_self_, &(_27648_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc6145_comptimeEnumField((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0161db5:;
			{
				jule::Ptr<_1ac93506e_comptimeEnumField> _27678_ct = _1acbc6145_comptimeEnumField((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c016ce59_comptimeObjSubIdent(_self_, &(_27678_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc6662_comptimeParam((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0161e3c:;
			{
				jule::Ptr<_1ac937d85_comptimeParam> _27708_ct = _1acbc6662_comptimeParam((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c0172722_comptimeObjSubIdent(_self_, &(_27708_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc7432_comptimeStatic((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0161eb4:;
			{
				jule::Ptr<_1ac931d4b_comptimeStatic> _27738_ct = _1acbc7432_comptimeStatic((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c01770d9_comptimeObjSubIdent(_self_, &(_27738_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc76b8_comptimeValue((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c016203b:;
			{
				jule::Ptr<_1ac9440c2_comptimeValue> _27768_ct = _1acbc76b8_comptimeValue((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c017b85d_comptimeObjSubIdent(_self_, &(_27768_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc7e6b_comptimeFile((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0162569:;
			{
				jule::Ptr<_1ac94879c_comptimeFile> _27798_ct = _1acbc7e6b_comptimeFile((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c01810d2_comptimeObjSubIdent(_self_, &(_27798_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1acbc794e_comptimeDecl((*((*(_275843_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c01625d0:;
			{
				jule::Ptr<_1ac94c6b3_comptimeDecl> _27828_ct = _1acbc794e_comptimeDecl((*((*(_275843_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c01858de_comptimeObjSubIdent(_self_, &(_27828_ct), _275843_d, &(_275857_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c0161cc7:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c0161c1c:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbab504_evalObjSubIdent(_1acb8edbc_eval* _self_, jule::Ptr<_1acb8cded_Data> _278935_d, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _278949_si) {
	if (_1abc2e468_IsIgnoreIdent((*((*(_278949_si))._field_Ident))._field_Kind)) {
		_1acb90395_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1acb8cded_Data> _27958_compData;
		jule::Bool _279518_ok;
		({
			__jule_tuple_x_1acb8cded_Data__jule_tuple_bool __jule_assign_result = _1acbab108_tryComptimeObjSubIdent(_self_, &(_278935_d), _278949_si);
			_27958_compData = __jule_assign_result.__jule_result_arg0;
			_279518_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_279518_ok) {
			return _27958_compData;;
		};
	};
	jule::Ptr<_1acbc0d98_Type> _28007_kind = (*(_278935_d))._field_Type;;
	{
		
		if ((_1acbc3a6b_Ptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c018a1da:;
			{
				jule::Ptr<_1acbd12a4_Ptr> _28034_ptr = _1acbc3a6b_Ptr((*(_278935_d))._field_Type);;
				if (_1acbd1d21_IsUnsafe(_28034_ptr.ptr())) {
					goto _match_end_1c018a163;
				};
				if ((!(_1acb90d8a_isUnsafe(_self_)))) {
					_1acb90395_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28007_kind=(*(_1acbc3a6b_Ptr((*(_278935_d))._field_Type)))._field_Elem;
				_1acbbc889_makeImplicitDeref(&(_278935_d), (*_278949_si.alloc)._field_Ident);
			}
		}
		else if ((_1acbc37d5_Sptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c018a284:;
			{
				_28007_kind=(*(_1acbc37d5_Sptr((*(_278935_d))._field_Type)))._field_Elem;
				_1acbbc889_makeImplicitDeref(&(_278935_d), (*_278949_si.alloc)._field_Ident);
			}
		}
		_match_end_1c018a163:;
	};
	{
		
		if ((_1acbc4d58_Trait((*_278935_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c018b285:;
			{
				return _1acba6334_evalTraitSubIdent(_self_, _278935_d, _1acbc4d58_Trait((*(_278935_d))._field_Type), (*_278949_si.alloc)._field_Ident);;
			}
		}
		else if ((_1acbc4ac2_Struct(_28007_kind.ptr()) != nullptr)) {
			_case_begin_1c018e5a7:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _28214_s = _1acbc4ac2_Struct(_28007_kind);;
				if (_1acbb8dd5_isInstancedStruct(_28214_s)) {
					jule::Bool _28239_usedReferenceElem = (_1acbc37d5_Sptr((*_278935_d.alloc)._field_Type.ptr()) != nullptr);;
					return _1acba7522_evalStructSubIdent(_self_, _278935_d, _1acbc4ac2_Struct(_28007_kind), _278949_si, _28239_usedReferenceElem);;
				};
			}
		}
		_match_end_1c018e541:;
	};
	_1acb90395_pushErr(_self_, (*_278949_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*_278935_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbab845_evalSubIdent(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b5b5a_SubIdentExpr> _283133_si) {
	jule::Ptr<_1acbc0d98_Type> _28327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28327_prefix;
	});;
	jule::Ptr<_1acb8cded_Data> _28357_d = _1acbacd96_evalExprKind(_self_, (*((*(_283133_si))._field_Expr))._field_Kind);;
	if ((_28357_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28357_d))._field_Decl) {
		return _1acbaa756_evalTypeStatic(_self_, _28357_d, _283133_si);;
	};
	return _1acbab504_evalObjSubIdent(_self_, _28357_d, _283133_si);;
}



inline jule::Ptr<_1acb8cded_Data> _1acbabb86_evalTuple(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b363b_TupleExpr> _284530_tup) {
	jule::Ptr<_1acbce0a4_Tuple> _28467_tupT = jule::new_ptr<_1acbce0a4_Tuple>(_1acbce0a4_Tuple{._field_Types=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)});;
	(*_28467_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(0LL, (*(_284530_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc0d98_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1aca9a723_TupleExprModel> _28497_model = jule::new_ptr<_1aca9a723_TupleExprModel>(_1aca9a723_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(0LL, (*_284530_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb8cded_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28537_ok = true;;
	{
		auto expr = &((*_284530_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0199491:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _285415_expr = *it;
			{
				jule::Ptr<_1acb8cded_Data> _28558_d = _1acbadbaa_evalExpr(_self_, _285415_expr);;
				if ((_28558_d == nullptr)) {
					_28537_ok=false;
					goto _iter_next_1c0199491;
				};
				(*_28467_tupT.alloc)._field_Types=jule::append((*_28467_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28558_d))._field_Type; __jule_collection; }));
				(*(_28497_model))._field_Datas=jule::append((*_28497_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28558_d; __jule_collection; }));
			}
			_iter_next_1c0199491:;
			++it;
			goto _iter_begin_1c0199491;
		}
		_iter_end_1c0199491:;
	};
	if ((!(_28537_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28467_tupT, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28497_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acbac082_evalMap(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1acbceb54_Map> _287428_m, jule::Ptr<_1ac9b8047_BraceLit> _287441_lit) {
	jule::Ptr<_1aca986ee_MapExprModel> _28757_model = jule::new_ptr<_1aca986ee_MapExprModel>(_1aca986ee_MapExprModel{._field_Kind=_287428_m, ._field_Entries=jule::Slice<jule::Ptr<_1aca98325_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_287441_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c019ccd0:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _287915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_287915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1c019d473:;
						{
							goto _match_end_1c019d75e;
						}
					}
					else {
						_case_begin_1c019d7c5:;
						{
							_1acb90395_pushErr(_self_.ptr(), (*(_287441_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c019d75e:;
				};
				jule::Ptr<_1ac9b8872_KeyValPair> _28898_pair = (*(_287915_expr))._field_Kind.cast_ptr<_1ac9b8872_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1acb8cded_Data> _28918_key = _1acbadbaa_evalExpr(_self_, (*(_28898_pair))._field_Key);;
				if ((_28918_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1acb8cded_Data> _28968_val = _1acbadbaa_evalExpr(_self_, (*_28898_pair.alloc)._field_Val);;
				if ((_28968_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1acb29263_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287428_m))._field_Key), &(_28918_key), &((*((*_28898_pair.alloc)._field_Key))._field_Token))) {
					_1acb249cd_checkAssignType((*(_self_))._field_s, false, &((*_287428_m.alloc)._field_Key), &(_28918_key), (*(*(_28898_pair))._field_Key.alloc)._field_Token, _1acb933cb_getOwnerRefers(_self_));
				};
				if (_1acb29263_checkValidityForInitExpr((*(_self_))._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_287428_m.alloc)._field_Val), &(_28968_val), &((*((*_28898_pair.alloc)._field_Val))._field_Token))) {
					_1acb249cd_checkAssignType((*(_self_))._field_s, false, &((*_287428_m.alloc)._field_Val), &(_28968_val), (*(*(_28898_pair))._field_Val.alloc)._field_Token, _1acb933cb_getOwnerRefers(_self_));
				};
				(*(_28757_model))._field_Entries=jule::append((*_28757_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aca98325_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aca98325_KeyValPairExprModel>(_1aca98325_KeyValPairExprModel{._field_Key=(*(_28918_key))._field_Model, ._field_Val=(*(_28968_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1c019ccd0:;
			++it;
			goto _iter_begin_1c019ccd0;
		}
		_iter_end_1c019ccd0:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_287428_m, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28757_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acbac3c3_evalBraceLit(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b8047_BraceLit> _292233_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1c01a6a97:;
			{
				_1acb90395_pushErr(_self_, (*(_292233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acbc50de_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c01a8c20:;
			{
				return _1acbac082_evalMap(_self_, _1acbc50de_Map((*(_self_))._field_prefix), _292233_lit);;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c01a8c86:;
			{
				return _1acba3166_evalStructLitExplicit(_self_, _1acbc4ac2_Struct((*(_self_))._field_prefix), (*(_292233_lit))._field_Exprs, (*_292233_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1c01a6a20:;
			{
				_1acb90395_pushErr(_self_.ptr(), (*(_292233_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c01a88ce:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbac714_evalAnonFunc(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9c04a0_FnDecl> _293733_decl) {
	_1acbd3295_typeChecker _29387_tc = _1acbd3295_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1acaa540e_FnIns> _29437_ins = _1acbda3ac_buildFunc(&_29387_tc, _293733_decl);;
	if ((_29437_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29437_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _29487_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb3d420_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1c01b0ac3:;
			{
				jule::Ptr<_1ac9631bd_scopeChecker> _29518_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1);;
				jule::Ptr<_1ac9631bd_scopeChecker> _29528_scc = _1ac9755cb_newChildChecker(_29518_sc);;
				(*(_29528_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac961d04_scopeLabel>>>(nullptr);
				(*_29528_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>>(nullptr);
				(*_29528_scc.alloc)._field_owner=_29437_ins;
				(*_29528_scc.alloc)._field_childIndex=0LL;
				(*_29528_scc.alloc)._field_it=0LLU;
				(*_29528_scc.alloc)._field_cse=0LLU;
				(*_29528_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1acb3d420_Var>>>)((&(_29487_captured))));
				_1acb37738_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29437_ins), &(_29528_scc));
			}
		}
		else {
			_case_begin_1c01b16c8:;
			{
				_1acb37d54_checkFnIns((*_self_.alloc)._field_s, &(_29437_ins));
			}
		}
		_match_end_1c01b1662:;
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29437_ins, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aca97e4b_AnonFnExprModel>(_1aca97e4b_AnonFnExprModel{._field_Captured=_29487_captured, ._field_Func=_29437_ins, ._field_Global=_1acb91121_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acbaca55_evalBinary(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b6111_BinaryExpr> _297531_op) {
	_1acbb10ca_binaryEval _29767_bs = static__1acbb16b3_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1acbc8eb1_Prim> _29794_prim = _1acbc354e_Prim((*(_self_))._field_prefix);;
		if (((_29794_prim == nullptr) || (!(_1ac92bac1_IsNum(_1acbc9335_Str(_29794_prim.ptr())))))) {
			jule::Ptr<_1acbc0d98_Type> _29819_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29819_prefix;
			});;
			return _1acbb7224_eval(&_29767_bs, &(_297531_op));;
		};
	};
	return _1acbb7224_eval(&_29767_bs, &(_297531_op));;
}



inline jule::Ptr<_1acb8cded_Data> _1acbacd96_evalExprKind(jule::Ptr<_1acb8edbc_eval> _self_, jule::Any _299033_kind) {
	{
		auto &_match_expr{ _299033_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c01bc77d:;
			{
				jule::Ptr<_1ac9b2d11_RangeExpr> _29938_e = _299033_kind.unsafe_cast_ptr<_1ac9b2d11_RangeExpr>();;
				return _1acbacd96_evalExprKind(_self_, (*((*(_29938_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1c01bcaad:;
			{
				return _1acb92908_evalLit(_self_.ptr(), _299033_kind.cast_ptr<_1ac9b39d2_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c01bcb24:;
			{
				return _1acb97644_evalIdent(_self_.ptr(), _299033_kind.cast_ptr<_1ac9b4362_IdentExpr>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c01bcb8a:;
			{
				return _1acb97985_evalUnary(_self_, _299033_kind.cast_ptr<_1ac9b4b04_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c01bcc01:;
			{
				return _1acb97cc6_evalVariadic(_self_, _299033_kind.cast_ptr<_1ac9b4ecd_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1c01bcc67:;
			{
				return _1acb98117_evalUnsafe(_self_, _299033_kind.cast_ptr<_1ac9b3dab_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c01bcccd:;
			{
				return _1acb98c50_evalSliceExpr(_self_, _299033_kind.cast_ptr<_1ac9b909d_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c01bd1c9:;
			{
				return _1acb9c89c_evalIndexing(_self_, _299033_kind.cast_ptr<_1ac9b9a0a_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c01bd240:;
			{
				return _1acb9dbcd_evalSlicing(_self_, _299033_kind.cast_ptr<_1ac9ba16a_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c01bd2a6:;
			{
				return _1acba286e_evalCast(_self_, _299033_kind.cast_ptr<_1ac9b53a7_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c01bd31c:;
			{
				return _1acba2bb0_evalNamespace(_self_.ptr(), _299033_kind.cast_ptr<_1ac9b5781_NamespaceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c01bd394:;
			{
				return _1acba34a7_evalStructLit(_self_, _299033_kind.cast_ptr<_1ac9b7a91_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c01bd41b:;
			{
				return _1acba3a7e_evalType(_self_.ptr(), _299033_kind.cast_ptr<_1abc4259c_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c01bd493:;
			{
				return _1acba518a_evalFnCall(_self_, _299033_kind.cast_ptr<_1ac9b6771_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c01bd51a:;
			{
				return _1acbab845_evalSubIdent(_self_, _299033_kind.cast_ptr<_1ac9b5b5a_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c01bd592:;
			{
				return _1acbabb86_evalTuple(_self_, _299033_kind.cast_ptr<_1ac9b363b_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c01bd619:;
			{
				return _1acbac3c3_evalBraceLit(_self_, _299033_kind.cast_ptr<_1ac9b8047_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c01bd691:;
			{
				return _1acbac714_evalAnonFunc(_self_, _299033_kind.cast_ptr<_1ac9c04a0_FnDecl>(&__jule_any_type68));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c01bd718:;
			{
				return _1acbaca55_evalBinary(_self_, _299033_kind.cast_ptr<_1ac9b6111_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1c01bca47:;
			{
				return nullptr;;
			}
		}
		_match_end_1c01bc9d1:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbad1d7_eval1(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _303826_expr) {
	jule::Ptr<_1acb8cded_Data> _30397_d = _1acbacd96_evalExprKind(_self_, (*(_303826_expr))._field_Kind);;
	if (((_30397_d == nullptr) || ((*(_30397_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1acbc483b_Fn((*(_30397_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa795981:;
			{
				jule::Ptr<_1acaa540e_FnIns> _30478_f = _1acbc483b_Fn((*(_30397_d))._field_Type.ptr());;
				if (_1acaa68c7_IsBuiltin(_30478_f.ptr())) {
					_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1aa795123;
				};
				jule::I32 _30524_required = (*((*_30478_f.alloc)._field_Decl))._field_Generics.len();;
				jule::I32 _30534_given = (*_30478_f.alloc)._field_Generics.len();;
				if ((!(_1acb1da1b_checkGenericQuantity((*(_self_))._field_s, _30524_required, _30534_given, (*_303826_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30478_f))._field_Decl.alloc)._field_Statically)) && _1acaa2a8d_IsMethod((*(_30478_f))._field_Decl))) {
					_1ac9abb2e_pushErr((*(_self_))._field_s, (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1acbb7620_findDirective(&((*(*(_30478_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1ac9abb2e_pushErr((*(_self_))._field_s, (*_303826_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30478_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30478_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30397_d))._field_Decl) {
			_case_begin_1aa7959e7:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _30668_s = _1acbc4ac2_Struct((*(_30397_d))._field_Type.ptr());;
				if ((_30668_s == nullptr)) {
					goto _match_end_1aa795123;
				};
				jule::I32 _30704_required = (*((*(_30668_s))._field_Decl))._field_Generics.len();;
				jule::I32 _30714_given = (*(_30668_s))._field_Generics.len();;
				if ((!(_1acb1da1b_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30704_required, _30714_given, (*_303826_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1aa795123:;
	};
	return _30397_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbad528_eval(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _308325_expr) {
	jule::Ptr<_1acb8cded_Data> _30847_d = _1acbad1d7_eval1(_self_, _308325_expr);;
	if ((_30847_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1acbc560b_comptime((*(_30847_d))._field_Type.ptr()))) {
		_1ac9abb2e_pushErr((*_self_.alloc)._field_s.ptr(), (*(_308325_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30847_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbad869_evalExpr1(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _309830_expr) {
	jule::Ptr<_1acb8cded_Data> _30997_d = _1acbad1d7_eval1(_self_, _309830_expr);;
	{
		
		if ((_30997_d == nullptr)) {
			_case_begin_1aa7a3c36:;
			{
				return nullptr;;
			}
		}
		else if ((*(_30997_d))._field_Decl) {
			_case_begin_1aa7a3cd0:;
			{
				_1acb90395_pushErr(_self_, (*(_309830_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aa7a3bae:;
			{
				return _30997_d;;
			}
		}
		_match_end_1aa7a3b37:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbadbaa_evalExpr(jule::Ptr<_1acb8edbc_eval> _self_, jule::Ptr<_1ac9b2a47_Expr> _311429_expr) {
	jule::Ptr<_1acb8cded_Data> _31157_d = _1acbad528_eval(_self_, _311429_expr);;
	{
		
		if ((_31157_d == nullptr)) {
			_case_begin_1aa7a5c9e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31157_d))._field_Decl) {
			_case_begin_1aa7a5d48:;
			{
				_1acb90395_pushErr(_self_, (*(_311429_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1aa7a5c27:;
			{
				return _31157_d;;
			}
		}
		_match_end_1aa7a5ba0:;
	};
}








inline jule::Bool _1acbae13e_unaryEval_eq(_1acbae13e_unaryEval *_self_, _1acbae13e_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1acbae13e_unaryEval static__1acbae5b2_new(jule::Ptr<_1acb8edbc_eval> _313520_e) {
	return _1acbae13e_unaryEval{._field_e=_313520_e, ._field_d=jule::Ptr<_1acb8cded_Data>(nullptr), ._field_u=jule::Ptr<_1ac9b4b04_UnaryExpr>(nullptr)};;
}



inline void _1acbae7b0_minus(_1acbae13e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa7a7b5d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7a8048:;
			{
				if ((!(_1ac92bac1_IsNum(_1acbc1294_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7a780b:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa7a7795:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa7a76c9:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1acb8d838_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aca8d2d7_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7ac426:;
				{
					_1aca8c319_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1aca8abdb_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aca8c79d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7ac514:;
				{
					_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aca8ca34_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7ac0c4:;
				{
					_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aca8ae72_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa7ac04c:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3173:5"));;
				}
			}
			_match_end_1aa7abe70:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1acbae9ad_plus(_1acbae13e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa7b2aad:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7b2e98:;
			{
				if ((!(_1ac92bac1_IsNum(_1acbc1294_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7b275b:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa7b26e5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa7b25d5:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1acb8d838_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aca8d2d7_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7b7376:;
				{
					_1aca8c319_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1aca8abdb_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aca8c79d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7b7464:;
				{
					_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aca8ca34_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7b7024:;
				{
					_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aca8ae72_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa7b6e9c:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3218:5"));;
				}
			}
			_match_end_1aa7b6dc0:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1acbaebab_caret(_1acbae13e_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1aa7bc9db:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7bcdc6:;
			{
				if ((!(_1ac92b4e9_IsInt(_1acbc1294_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7bc689:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1aa7bc623:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa7bc513:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1acb8d838_IsConst((*(_self_))._field_d)) {
		jule::I32 _32594_sz = _1ac92347a_BitSizeOf((*(_1acbc354e_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1aca8c79d_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7c2e75:;
				{
					{
						auto &_match_expr{ _32594_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1aa7c4053:;
							{
								_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1aa7c3b46:;
							{
								_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1aa7c3bac:;
							{
								_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1aa7c3c23:;
							{
								_1aca8b747_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1aca8a1a2_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1aa7c397b:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3272:6"));;
							}
						}
						_match_end_1aa7c3a03:;
					};
				}
			}
			else if (_1aca8ca34_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7c3052:;
				{
					{
						auto &_match_expr{ _32594_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1aa7c9146:;
							{
								_1aca8ba00_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1aca8a438_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1aa7c8c39:;
							{
								_1aca8ba00_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1aca8a438_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1aa7c8ca0:;
							{
								_1aca8ba00_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1aca8a438_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1aa7c8d16:;
							{
								_1aca8ba00_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1aca8a438_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1aa7c8a5d:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3285:6"));;
							}
						}
						_match_end_1aa7c8ad5:;
					};
				}
			}
			else {
				_case_begin_1aa7c2ae0:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3288:5"));;
				}
			}
			_match_end_1aa7c2a79:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1acbaeda9_excl(_1acbae13e_unaryEval* _self_) {
	jule::Ptr<_1acbc8eb1_Prim> _33023_t = _1acbc354e_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33023_t == nullptr) || (!(_1acbcc1e5_IsBool(_33023_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1acb8d838_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aca8ccba_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1aa7d1ba9:;
				{
					_1aca8bca8_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1aca8a6be_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1aa7d17e1:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3316:5"));;
				}
			}
			_match_end_1aa7d1714:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1acbb00a7_star(_1acbae13e_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1acbc3a6b_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7d5509:;
			{
				if ((!(_1acb90d8a_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1acb90395_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1acbd12a4_Ptr> _33418_t = _1acbc3a6b_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1acbd1d21_IsUnsafe(_33418_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(*(_self_))._field_d.alloc)._field_Type=(*_33418_t.alloc)._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1acbc37d5_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1aa7d5581:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1acbc37d5_Sptr((*((*(_self_))._field_d))._field_Type)))._field_Elem;
			}
		}
		else {
			_case_begin_1aa7d5152:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa7d4140:;
	};
	(*(*(_self_))._field_d.alloc)._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1acbb02a5_amper(_1acbae13e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1aa7ddcc6:;
			{
				jule::Ptr<_1aca95dd3_StructLitExprModel> _33638_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1aca95dd3_StructLitExprModel>();;
				_1acbb8049_makeStructLitAlloc(&((*(_self_))._field_d), &(_33638_lit));
			}
		}
		else {
			_case_begin_1aa7db1e1:;
			{
				{
					
					if (_1acbdc6cd_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1aa7dbad7:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbd12a4_Ptr>(_1acbd12a4_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1aa7dacd4:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1aa7db686:;
				};
			}
		}
		_match_end_1aa7db17a:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1acbb04a3_typeDecl(_1acbae13e_unaryEval* _self_) {
	_1acbd3295_typeChecker _33887_tc = _1acbd3295_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1acbd22a5_referencer>(nullptr), ._field_refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1acbc00a6_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1aa7e2857:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbd8ac5_buildPtrFromType(&_33887_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1aa7e2516:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbd8443_buildSptrFromType(&_33887_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1aa7e1e50:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1aa7e248e:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1acbb06a1_evalData(_1acbae13e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c0375716:;
			{
				jule::Ptr<_1acbc0d98_Type> _34138_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1acbad528_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34138_prefix;
			}
		}
		else {
			_case_begin_1aa7e257c:;
			{
				(*(_self_))._field_d=_1acbad528_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1c03752e8:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb09e2_eval(_1acbae13e_unaryEval* _self_, jule::Ptr<_1ac9b4b04_UnaryExpr> _342224_u) {
	(*(_self_))._field_u=_342224_u;
	_1acbb06a1_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1acbb04a3_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1acbc0d98_Type> _34333_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c0379dd0:;
			{
				_1acbae7b0_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c0379e46:;
			{
				_1acbae9ad_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c0379eac:;
			{
				_1acbaebab_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1c037a023:;
			{
				_1acbaeda9_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c037a089:;
			{
				_1acbb00a7_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c037a100:;
			{
				_1acbb02a5_amper(_self_);
			}
		}
		else {
			_case_begin_1c0379891:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1c0379d58:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c037a60b:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str(_34333_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1acb8d838_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1c0378560:;
			{
				(*((*(_self_))._field_d))._field_Model=jule::Any((*((*(_self_))._field_d))._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1c037c0ad:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1acbb10ca_binaryEval_eq(_1acbb10ca_binaryEval *_self_, _1acbb10ca_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1acbb10ca_binaryEval static__1acbb16b3_newPlain(jule::Ptr<_1acb8edbc_eval> _347025_e) {
	return _1acbb10ca_binaryEval{._field_e=_347025_e, ._field_l=jule::Ptr<_1acb8cded_Data>(nullptr), ._field_r=jule::Ptr<_1acb8cded_Data>(nullptr), ._field_op=jule::Ptr<_1abc2ba81_Token>(nullptr)};;
}



inline _1acbb10ca_binaryEval static__1acbb1a37_new(jule::Ptr<_1acb8edbc_eval> _347620_e, jule::Ptr<_1abc2ba81_Token> _347634_op) {
	return _1acbb10ca_binaryEval{._field_e=_347620_e, ._field_l=jule::Ptr<_1acb8cded_Data>(nullptr), ._field_r=jule::Ptr<_1acb8cded_Data>(nullptr), ._field_op=_347634_op};;
}



inline jule::Bool _1acbb1cbd_checkTypeCompatibility(_1acbb10ca_binaryEval* _self_) {
	return _1acb25d0e_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1acbb2054_checkStructCommonOperatorCompatibility(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acaa540e_FnIns> _349011_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c0382a86:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c0382734:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c038279a:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c0382811:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c0382877:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c03828dd:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c0382954:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c0384192:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1c0384208:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c038426e:;
			{
				_349011_overload=(*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c03822e4:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1c03826ac:;
	};
	if ((_349011_overload == nullptr)) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1acaa42a9_ParamIns> _35227_p = (*(_349011_overload))._field_Params[1LL];;
	return _1acb249cd_checkAssignType((*(*(_self_))._field_e.alloc)._field_s, (*((*(_35227_p))._field_Decl))._field_Reference, &((*_35227_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _1acb933cb_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb22da_evalComptimeTypeInfo(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _35277_r = _1acbc6e15_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35277_r == nullptr)) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac93cebc_comptimeTypeInfo> _35327_l = _1acbc6e15_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c0393514:;
			{
				jule::Ptr<_1aca3208e_Const> _35358_constant = static__1aca892a0_NewBool(_1acbc15d5_Equal((*(_35327_l))._field_base, (*(_35277_r))._field_base));;
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35358_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35358_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03949aa:;
			{
				jule::Ptr<_1aca3208e_Const> _35428_constant = static__1aca892a0_NewBool((!(_1acbc15d5_Equal((*(_35327_l))._field_base, (*(_35277_r))._field_base))));;
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35428_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35428_constant});;
			}
		}
		else {
			_case_begin_1c0391325:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c039313a:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb2571_evalNil(_1acbb10ca_binaryEval* _self_) {
	if ((!(_1acbc2c9b_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03996b3:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c039799c:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03992d9:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb2807_evalEnum(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acab021b_Enum> _35737_enm = _1acbc3d02_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c039bae4:;
			{
				jule::Ptr<_1acbc0d98_Type> _35778_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1acbc3d02_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35778_rkind=(*((*(_1acbc3d02_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_1acb2543a_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type), &(_35778_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		_match_end_1c039ba6c:;
	};
	if (((_1acbc3d02_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35737_enm != _1acbc3d02_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35737_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c03a2743:;
			{
				if ((!(_1ac92bac1_IsNum(_1acbc1294_Str((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type.ptr()))))) {
					_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c03a3887:;
			{
				jule::Ptr<_1acaae6b0_EnumItem> _36074_first = (*_35737_enm.alloc)._field_Items[0LL];;
				{
					
					if (_1aca8c79d_IsI64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c03a73a2:;
						{
							if ((_1aca8a1a2_ReadI64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1c03ab9c2;
							};
							goto _julec_label_1c03aa790;
						}
					}
					else if (_1aca8ca34_IsU64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c03a7490:;
						{
							if ((_1aca8a438_ReadU64((*((*((*(_36074_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1c03ab9c2;
							};
							goto _julec_label_1c03aa790;
						}
					}
					else {
						_case_begin_1c03a6ed9:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3620:5"));;
						}
					}
					_match_end_1c03a6e62:;
				};
				_julec_label_1c03aa790:;
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1acb90708_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1c03ab9c2:;
				goto _case_begin_1c03a38ed;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c03a38ed:;
			{
				if (((_1acbc354e_Prim((*(*(_35737_enm))._field_TypeSym.alloc)._field_Type.ptr()) == nullptr) || (!(_1ac92b4e9_IsInt(_1acbc9335_Str(_1acbc354e_Prim((*((*(_35737_enm))._field_TypeSym))._field_Type).ptr())))))) {
					_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c039bb5a:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35737_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03a238b:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb2a8d_evalTypeEnum(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acab1926_TypeEnum> _36407_enm = _1acbc4088_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03b0a4d:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03aed7c:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acab1c9a_Str(_36407_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03b05db:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb2d24_evalSptr(_1acbb10ca_binaryEval* _self_) {
	if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03b306c:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03b1e8e:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03b2b93:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb30aa_evalPtr(_1acbb10ca_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c03b5448:;
			{
				if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c03b68ab:;
			{
				if ((_1acbc3a6b_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1acbd1d21_IsUnsafe(_1acbc3a6b_Ptr((*((*(_self_))._field_l))._field_Type).ptr())) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1acbb91d2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c03b4a41:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03b4964:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb3341_evalArr(_1acbb10ca_binaryEval* _self_) {
	if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03bd671:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1acaa540e_FnIns> _37179_f = _1acaa385d_instanceForce(_1abd166c6_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37179_f))._field_Generics=jule::append((*_37179_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=(*(_1acbc431e_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37195_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb3503d_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37179_f), &((*(_self_))._field_op));
						_37195_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37195_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3721:6"));;
					};
					_1becd3075_pushReference((*(_self_))._field_e, &(_37179_f));
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03b8308:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03bd297:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb35c7_evalStruct(_1acbb10ca_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c03c0046:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c03c00ce:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1c03c4787:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Lt == nullptr)) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c03c47ed:;
			{
				if (((*(_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_LtEq == nullptr)) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03c4864:;
			{
				if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		_match_end_1c03bee69:;
	};
	if ((!(_1acbb2054_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb385d_evalTrait(_1acbb10ca_binaryEval* _self_) {
	if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03d1002:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03d03a8:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03d0b28:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb3ae4_evalAny(_1acbb10ca_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c03d33cd:;
			{
				_1acbddb96_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1acb933cb_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03d29c6:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03d28e9:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb3d7a_evalBool(_1acbb10ca_binaryEval* _self_) {
	if ((!(_1acbb1cbd_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c03d6568:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c03d470e:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03d618e:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb4111_evalStr(_1acbb10ca_binaryEval* _self_) {
	jule::Str _38337_rk = _1acbc1294_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38337_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_38337_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c03da803:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c03da715:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c03d92c4:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c03da35d:;
	};
}



inline void _1acbb430e_setTypeToGreater(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acbc8eb1_Prim> _38583_lp = _1acbc354e_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1acbc8eb1_Prim> _38593_rp = _1acbc354e_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38593_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38583_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38583_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1acbb45b7_checkModData(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _387533_d) {
	if ((!(_1acb8d838_IsConst((*(_387533_d)).ptr())))) {
		if (((_1acbc354e_Prim((*((*(_387533_d))))._field_Type.ptr()) == nullptr) || (!(_1ac92b4e9_IsInt((*(_1acbc354e_Prim((*((*(_387533_d))))._field_Type)))._field_Kind))))) {
			_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1acb78515_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _387533_d)) {
			_case_begin_1bee5b011:;
			{
				_1aca8b747_SetI64((*((*(_387533_d))))._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_387533_d))))._field_Constant));
			}
		}
		else if (_1acb788cd_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _387533_d)) {
			_case_begin_1bee5abe2:;
			{
				_1aca8ba00_SetU64((*((*(_387533_d))))._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_387533_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1bee5ab7b:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bee5ab15:;
	};
}



inline void _1acbb47b5_mod(_1acbb10ca_binaryEval* _self_) {
	_1acbb45b7_checkModData(_self_, &((*(_self_))._field_l));
	_1acbb45b7_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1acbb4bb1_numbersAreCompatibile(_1acbb10ca_binaryEval* _self_, jule::Str* _389734_lk, jule::Str* _389744_rk) {
	if ((!(_1ac92bac1_IsNum((*(_389744_rk)))))) {
		return false;;
	};
	if ((_1acb8d838_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_389734_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1acb8d838_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1acb78191_floatAssignable(_389734_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389744_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_389734_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1acb8d838_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1acb78191_floatAssignable(_389734_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389744_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1acb8d838_IsConst((*(_self_))._field_r) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1acb78c52_intAssignable((*(_389734_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_389734_lk)) == (*(_389744_rk)));;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb4e47_shift(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acbc8eb1_Prim> _39253_lk = _1acbc354e_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39253_lk == nullptr)) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _39303_rk = _1acbc354e_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39303_rk == nullptr)) {
		_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1ac92bac1_IsNum((*(_39253_lk))._field_Kind))) || (!(_1ac92bac1_IsNum((*(_39303_rk))._field_Kind))))) {
		_1acb25858_pushCompatiblityError((*(*(_self_))._field_e.alloc)._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1ac92b4e9_IsInt((*(_39253_lk))._field_Kind)))) {
		if (((!(_1acb8d838_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39253_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39303_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1aca8b747_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1acc4601c_primI64;
		} else if (_1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1aca8ba00_SetU64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1acc46d20_primU64;
		};
	};
	if ((!(_1ac92b4e9_IsInt((*(_39303_rk))._field_Kind)))) {
		if (((!(_1acb8d838_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39253_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39303_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1aca8b747_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1acc4601c_primI64;
		} else if (_1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1aca8ba00_SetU64((*((*(_self_))._field_r))._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1acc46d20_primU64;
		};
	};
	if ((!(_1acbb8a0b_isOkForShifting(&((*(_self_))._field_r))))) {
		_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb51cd_evalFloat(_1acbb10ca_binaryEval* _self_) {
	jule::Str _39803_lk = (*(_1acbc354e_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39813_rk = (*(_1acbc354e_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1acbb4bb1_numbersAreCompatibile(_self_, &(_39803_lk), &(_39813_rk))))) {
		_1acb25858_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bee63ca5:;
			{
				_1acbb430e_setTypeToGreater(_self_);
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		_match_end_1bee63c2d:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bed2d1d0:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4005:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bed2e08d:;
			{
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bed2e104:;
			{
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bed2cd6c:;
			{
				if ((!(_1ac92b4e9_IsInt(_39813_rk)))) {
					_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39803_lk, &__jule_any_type5); (*it++) = jule::Any(_39813_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1acbb47b5_mod(_self_);
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1bed2cd06:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bed2cc7e:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb5464_evalInt(_1acbb10ca_binaryEval* _self_) {
	jule::Str _40293_lk = (*(_1acbc354e_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40303_rk = (*(_1acbc354e_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1acbb4bb1_numbersAreCompatibile(_self_, &(_40293_lk), &(_40303_rk))))) {
		_1acb25858_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bed35061:;
			{
				return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc44a98_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
			}
		}
		_match_end_1bed34ed9:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bed3686a:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4054:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bed37717:;
			{
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bed3777d:;
			{
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bed35e63:;
			{
				_1acbb47b5_mod(_self_);
				_1acbb430e_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1bed3514e:;
			{
				_1acb90395_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bed3643b:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbb56ea_evalPrim(_1acbb10ca_binaryEval* _self_) {
	jule::Ptr<_1acbc8eb1_Prim> _40773_prim = _1acbc354e_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1acbcc1e5_IsBool(_40773_prim.ptr())) {
			_case_begin_1bed3aa39:;
			{
				return _1acbb3d7a_evalBool(_self_);;
			}
		}
		else if (_1acbcc47b_IsStr(_40773_prim.ptr())) {
			_case_begin_1bed3aad3:;
			{
				return _1acbb4111_evalStr(_self_);;
			}
		}
		_match_end_1bed3a9a1:;
	};
	if ((_1acbc354e_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc9335_Str(_40773_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1ac92b83a_IsFloat((*_40773_prim.alloc)._field_Kind)) {
			_case_begin_1bed3d971:;
			{
				return _1acbb51cd_evalFloat(_self_);;
			}
		}
		else if (_1ac92b4e9_IsInt((*_40773_prim.alloc)._field_Kind)) {
			_case_begin_1bed3da09:;
			{
				return _1acbb5464_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1bed3d90a:;
			{
				return nullptr;;
			}
		}
		_match_end_1bed3bc27:;
	};
}



inline jule::Bool _1acbb5981_checkSpecialCases(_1acbb10ca_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41023_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41023_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1acbc24e8_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1acbc1ecb_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1acbc24e8_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1acbc1ecb_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb5c17_evalOp(_1acbb10ca_binaryEval* _self_) {
	jule::Bool _41173_ok = _1acbb5981_checkSpecialCases(_self_);;
	if ((!(_41173_ok))) {
		return nullptr;;
	};
	if ((_1acbc4ac2_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _1acbb35c7_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1acbb4e47_shift(_self_);;
	};
	{
		
		if (_1acbc2262_Void((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1bed47b12:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1acbc6e15_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed47cbb:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed47b78;
			}
		}
		else if ((_1acbc6e15_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed47b78:;
			{
				return _1acbb22da_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1acbc354e_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1acbcc712_IsAny(_1acbc354e_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1bed47bde:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed49262;
			}
		}
		else if (_1acbc1ecb_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1bed49262:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed492c8;
			}
		}
		else if (_1acbc1ecb_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1bed492c8:;
			{
				return _1acbb2571_evalNil(_self_);;
			}
		}
		else if (((_1acbc354e_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1acbcc712_IsAny(_1acbc354e_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1bed493c7:;
			{
				return _1acbb3ae4_evalAny(_self_);;
			}
		}
		else if ((_1acbc4088_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed4943d:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed494a4;
			}
		}
		else if ((_1acbc4088_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed494a4:;
			{
				return _1acbb2a8d_evalTypeEnum(_self_);;
			}
		}
		else if ((_1acbc3d02_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed4951a:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed49581;
			}
		}
		else if ((_1acbc3d02_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed49581:;
			{
				return _1acbb2807_evalEnum(_self_);;
			}
		}
		else if ((_1acbc37d5_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed495e7:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed4965d;
			}
		}
		else if ((_1acbc37d5_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed4965d:;
			{
				return _1acbb2d24_evalSptr(_self_);;
			}
		}
		else if ((_1acbc3a6b_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed496c4:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed4973a;
			}
		}
		else if ((_1acbc3a6b_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed4973a:;
			{
				return _1acbb30aa_evalPtr(_self_);;
			}
		}
		else if ((_1acbc431e_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed497a1:;
			{
				return _1acbb3341_evalArr(_self_);;
			}
		}
		else if ((_1acbc4d58_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1bed4986c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1bed498d3;
			}
		}
		else if ((_1acbc4d58_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed498d3:;
			{
				return _1acbb385d_evalTrait(_self_);;
			}
		}
		else if ((_1acbc354e_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1bed49949:;
			{
				return _1acbb56ea_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1bed47936:;
			{
				_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bed46ec9:;
	};
}



inline void _1acbb5ec0_evalConst(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _418730_d) {
	{
		
		if (((*(_418730_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1bed59041:;
			{
				return;;
			}
		}
		else if ((!(_1acb8d838_IsConst((*(_self_))._field_l.ptr()))) || (!(_1acb8d838_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1bed595e6:;
			{
				(*((*(_418730_d))))._field_Constant=nullptr;
				(*((*(_418730_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1bed58e31:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1bed596c3:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8e382_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1bed5bb26:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool((!(_1aca8e382_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1bed5bb8c:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8e041_Or((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1bed5bc03:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8dc00_And((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1bed5bc69:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8ed55_Gt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1bed5bce1:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8e6c3_Lt((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bed5bd68:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca90196_GtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1bed5bde0:;
			{
				(*((*(_418730_d))))._field_Constant=static__1aca892a0_NewBool(_1aca8ea14_LtEq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1bed5be67:;
			{
				_1aca904d7_Add((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1bed5bede:;
			{
				_1aca90828_Sub((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bed5c066:;
			{
				_1aca90b69_Mul((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1bed5c0dd:;
			{
				jule::Bool _42274_ok = _1aca90eaa_Div((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42274_ok)) && (_1aca8b48e_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1acbc8eb1_Prim> _42328_prim = _1acbc354e_Prim((*((*(_418730_d))))._field_Type.ptr());;
				{
					
					if (_1ac92ae22_IsSigInt((*(_42328_prim))._field_Kind)) {
						_case_begin_1bed6c197:;
						{
							_1aca8b747_SetI64((*((*(_418730_d))))._field_Constant, _1aca8ae72_AsI64((*((*(_418730_d))))._field_Constant));
						}
					}
					else if (_1ac92b230_IsUnsigInt((*(_42328_prim))._field_Kind)) {
						_case_begin_1bed6c241:;
						{
							_1aca8ba00_SetU64((*((*(_418730_d))))._field_Constant, _1aca8b208_AsU64((*((*(_418730_d))))._field_Constant));
						}
					}
					_match_end_1bed6c120:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bed5c165:;
			{
				jule::Bool _42404_ok = _1aca912eb_Mod((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42404_ok)) && (_1aca8b48e_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1bed5c1dc:;
			{
				_1aca9197d_BitwiseOr((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bed5c264:;
			{
				_1aca9163c_BitwiseAnd((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bed5c2db:;
			{
				_1aca91cbe_Xor((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bed5c363:;
			{
				_1aca92110_Lshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bed5c3da:;
			{
				_1aca92451_Rshift((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418730_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1bed5ae11:;
	};
	(*((*(_418730_d))))._field_Model=jule::Any((*((*(_418730_d))))._field_Constant, &__jule_any_type15);
	_1acbbae09_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _418730_d, _1acbc3d02_Enum((*((*(_418730_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1acb933cb_getOwnerRefers((*(_self_))._field_e));
}



inline void _1acbb6278_checkData(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _426530_d) {
	jule::Ptr<_1acaa540e_FnIns> _42663_f = _1acbc483b_Fn((*((*(_426530_d))))._field_Type.ptr());;
	if ((((_42663_f != nullptr) && ((*_42663_f.alloc)._field_Decl != nullptr)) && _1acaa2a8d_IsMethod((*(_42663_f))._field_Decl))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1acbb6476_checkDatas(_1acbb10ca_binaryEval* _self_) {
	_1acbb6278_checkData(_self_, &((*(_self_))._field_l));
	_1acbb6278_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1acbb672e_setModel(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _427729_d) {
	if (_1acb8d838_IsConst((*(_427729_d)).ptr())) {
		if (((_1acb8d838_IsConst((*(_self_))._field_l.ptr()) && _1acb8d838_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1acb8cded_Data> _42887_l;
	jule::Ptr<_1acb8cded_Data> _428814_r;
	({
		jule::Ptr<_1acb8cded_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1acb8cded_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42887_l = ___jule_assign_arg;
		_428814_r = _1___jule_assign_arg;
	});
	if ((!(_1acb8db79_GoodOperand(_42887_l, &(_428814_r))))) {
		std::swap(_42887_l, _428814_r);
	};
	(*((*(_427729_d))))._field_Model=jule::Any(jule::new_ptr<_1aca95135_BinaryExprModel>(_1aca95135_BinaryExprModel{._field_Left=jule::new_ptr<_1aca94b3a_OperandExprModel>(_1aca94b3a_OperandExprModel{._field_Type=(*_42887_l.alloc)._field_Type, ._field_Model=(*_42887_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aca94b3a_OperandExprModel>(_1aca94b3a_OperandExprModel{._field_Type=(*_428814_r.alloc)._field_Type, ._field_Model=(*_428814_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1acbb69d7_postEval(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _430629_d) {
	(*((*(_430629_d))))._field_Lvalue=false;
	_1acbb672e_setModel(_self_, _430629_d);
}



inline jule::Ptr<_1acb8cded_Data> _1acbb6dd3_solveExplicit(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1acb8cded_Data>* _431134_l, jule::Ptr<_1acb8cded_Data>* _431149_r) {
	({
		jule::Ptr<_1acb8cded_Data> ___jule_assign_arg = (*(_431134_l));
		jule::Ptr<_1acb8cded_Data> _1___jule_assign_arg = (*(_431149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1acbb6476_checkDatas(_self_);
	jule::Ptr<_1acb8cded_Data> _43167_d = _1acbb5c17_evalOp(_self_);;
	({
		jule::Ptr<_1acb8cded_Data> ___jule_assign_arg = (*(_431134_l));
		jule::Ptr<_1acb8cded_Data> _1___jule_assign_arg = (*(_431149_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1acbb5ec0_evalConst(_self_, &(_43167_d));
	if ((_43167_d != nullptr)) {
		(*_43167_d.alloc)._field_Mutable=true;
		_1acbb69d7_postEval(_self_, &(_43167_d));
	};
	return _43167_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acbb7224_eval(_1acbb10ca_binaryEval* _self_, jule::Ptr<_1ac9b6111_BinaryExpr>* _433125_op) {
	if (((*((*((*(_433125_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1acb90395_pushErr((*(_self_))._field_e.ptr(), (*((*(_433125_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1acb90708_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb8cded_Data> _43387_l = _1acbad869_evalExpr1((*(_self_))._field_e, (*((*(_433125_op))))._field_Left);;
	if (((_43387_l == nullptr) || ((*(_43387_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1acbc0d98_Type> _43437_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43387_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43437_prefix;
	});;
	jule::Ptr<_1acb8cded_Data> _43467_r = _1acbad869_evalExpr1((*(_self_))._field_e, (*((*(_433125_op))))._field_Right);;
	if (((_43467_r == nullptr) || ((*(_43467_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_433125_op))))._field_Op;
	jule::Ptr<_1acb8cded_Data> _43537_d = _1acbb6dd3_solveExplicit(_self_, &(_43387_l), &(_43467_r));;
	if ((((_43537_d != nullptr) && (*(_43387_l))._field_IsRune) && (*(_43467_r))._field_IsRune)) {
		(*_43537_d.alloc)._field_IsRune=true;
	};
	return _43537_d;;
}
















inline jule::Bool _1acbc0d98_Type_eq(_1acbc0d98_Type *_self_, _1acbc0d98_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1acbc1294_Str(_1acbc0d98_Type* _self_) {
	if (_1acbc1ecb_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1a6a5cb3c_Builder _567_kind = static__1a6a5d489_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1a6a5db1b_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_1acbc1c45_Binded(_self_)) {
		({
			auto except = _1a6a5db1b_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _1a6a5db1b_WriteStr(&_567_kind, ((_1acbc08e2_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1acbc044c_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _1a6a5e49b_Str(&_567_kind);;
}



inline jule::Bool _1acbc15d5_Equal(jule::Ptr<_1acbc0d98_Type> _self_, jule::Ptr<_1acbc0d98_Type> _7218_other) {
	if (_1acbc1ecb_IsNil(_self_.ptr())) {
		return _1acbc1ecb_IsNil(_7218_other.ptr());;
	};
	if ((_1acbc1c45_Binded(_self_) || _1acbc1c45_Binded(_7218_other))) {
		return ((_1acbc1c45_Binded(_self_) == _1acbc1c45_Binded(_7218_other)) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1acbc08e2_KindMptrData*)(*_self_.alloc)._field_Kind.safe_type())->_1acbc078d_Equal((*_self_.alloc)._field_Kind.data, _7218_other);;
}



inline jule::Bool _1acbc1c45_Binded(_1acbc0d98_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1acbc1ecb_IsNil(_1acbc0d98_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1acbc2262_Void(_1acbc0d98_Type* _self_) {
	jule::Ptr<_1acbc8eb1_Prim> _923_prim = _1acbc354e_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1acbc24e8_Comparable(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _998__self = _self_;;
		if ((_1acbc4ac2_Struct(_998__self) != nullptr)) {
			return (*(_1acbc4ac2_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1acbc431e_Arr(_998__self) != nullptr)) {
			return _1acbc24e8_Comparable((*(_1acbc431e_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1acbc50de_Map(_998__self) == nullptr) && (_1acbc45a5_Slc(_998__self) == nullptr)) && (_1acbc483b_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1acbc277e_Mutable(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _1138__self = _self_;;
		if ((_1acbc4ac2_Struct(_1138__self) != nullptr)) {
			return (*(_1acbc4ac2_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1acbc4d58_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1acbc354e_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1acbc8eb1_Prim> _1215_p = _1acbc354e_Prim(_1138__self);;
			return _1acbcc712_IsAny(_1215_p.ptr());;
		};
		if ((_1acbc431e_Arr(_1138__self) != nullptr)) {
			return _1acbc277e_Mutable((*(_1acbc431e_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1acbc45a5_Slc(_1138__self) != nullptr) || (_1acbc3a6b_Ptr(_1138__self) != nullptr)) || (_1acbc37d5_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1acbc2a15_Ordered(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _1368__self = _self_;;
		jule::Ptr<_1acbc8eb1_Prim> _1374_prim = _1acbc354e_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1ac92bac1_IsNum((*_1374_prim.alloc)._field_Kind) || _1acbcc47b_IsStr(_1374_prim));;
		};
		if ((_1acbc3a6b_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1ac9d1e84_StructIns> _1444_s = _1acbc4ac2_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1acab021b_Enum> _1514_enm = _1acbc3d02_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1ac92bac1_IsNum(_1acbc1294_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1acbc2c9b_NilCompatible(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _1628__self = _self_;;
		jule::Ptr<_1acbc8eb1_Prim> _1644_prim = _1acbc354e_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1acbcc712_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1acbc1ecb_IsNil(_1628__self) || (_1acbc483b_Fn(_1628__self) != nullptr)) || (_1acbc37d5_Sptr(_1628__self) != nullptr)) || (_1acbc3a6b_Ptr(_1628__self) != nullptr)) || (_1acbc4d58_Trait(_1628__self) != nullptr)) || (_1acbc45a5_Slc(_1628__self) != nullptr)) || (_1acbc50de_Map(_1628__self) != nullptr)) || (_1acbc4088_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1acbc3032_GC(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _1838__self = _self_;;
		jule::Ptr<_1acbc8eb1_Prim> _1844_prim = _1acbc354e_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1acbcc712_IsAny(_1844_prim) || _1acbcc47b_IsStr(_1844_prim));;
		};
		return ((((_1acbc37d5_Sptr(_1838__self) != nullptr) || (_1acbc45a5_Slc(_1838__self) != nullptr)) || (_1acbc4d58_Trait(_1838__self) != nullptr)) || (_1acbc4088_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1acbc32b8_Variadicable(_1acbc0d98_Type* _self_) {
	{
		_1acbc0d98_Type* _1968__self = _self_;;
		return (_1acbc45a5_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1acbc8eb1_Prim> _1acbc354e_Prim(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)) {
			_case_begin_1be92cb9d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbc8eb1_Prim>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1be93e341:;
			{
				return nullptr;;
			}
		}
		_match_end_1be93e2ca:;
	};
}



inline jule::Ptr<_1acbcc9dc_Sptr> _1acbc37d5_Sptr(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)) {
			_case_begin_1be9401ee:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbcc9dc_Sptr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1be940045:;
			{
				return nullptr;;
			}
		}
		_match_end_1be93eece:;
	};
}



inline jule::Ptr<_1acbd12a4_Ptr> _1acbc3a6b_Ptr(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28)) {
			_case_begin_1be940e7a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbd12a4_Ptr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1be940cc1:;
			{
				return nullptr;;
			}
		}
		_match_end_1be940c5a:;
	};
}



inline jule::Ptr<_1acab021b_Enum> _1acbc3d02_Enum(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3)) {
			_case_begin_1be941c06:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acab021b_Enum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1be941a4c:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9419d6:;
	};
}



inline jule::Ptr<_1acab1926_TypeEnum> _1acbc4088_TypeEnum(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)) {
			_case_begin_1be942982:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acab1926_TypeEnum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1be9427c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1be942762:;
	};
}



inline jule::Ptr<_1acbd07d1_Arr> _1acbc431e_Arr(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27)) {
			_case_begin_1be94370d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbd07d1_Arr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1be943554:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9434dd:;
	};
}



inline jule::Ptr<_1acbcd4b0_Slc> _1acbc45a5_Slc(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)) {
			_case_begin_1be944489:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbcd4b0_Slc>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1be9442d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1be944269:;
	};
}



inline jule::Ptr<_1acaa540e_FnIns> _1acbc483b_Fn(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)) {
			_case_begin_1be945215:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acaa540e_FnIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1be94505b:;
			{
				return nullptr;;
			}
		}
		_match_end_1be944ee5:;
	};
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1acbc4ac2_Struct(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)) {
			_case_begin_1be945e91:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac9d1e84_StructIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1be945cd7:;
			{
				return nullptr;;
			}
		}
		_match_end_1be945c71:;
	};
}



inline jule::Ptr<_1acaaca65_Trait> _1acbc4d58_Trait(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data2)) {
			_case_begin_1be946c1c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acaaca65_Trait>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1be946a63:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9469ec:;
	};
}



inline jule::Ptr<_1acbceb54_Map> _1acbc50de_Map(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26)) {
			_case_begin_1be947998:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbceb54_Map>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1be9477de:;
			{
				return nullptr;;
			}
		}
		_match_end_1be947778:;
	};
}



inline jule::Ptr<_1acbce0a4_Tuple> _1acbc5375_Tup(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25)) {
			_case_begin_1be948724:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1acbce0a4_Tuple>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1be94856a:;
			{
				return nullptr;;
			}
		}
		_match_end_1be948504:;
	};
}



inline jule::Bool _1acbc560b_comptime(_1acbc0d98_Type* _self_) {
	return (((((((((((((((_1acbc6b7e_comptimeTypeInfos(_self_) != nullptr) || (_1acbc6e15_comptimeTypeInfo(_self_) != nullptr)) || (_1acbc5892_comptimeStructFields(_self_) != nullptr)) || (_1acbc5b28_comptimeStructField(_self_) != nullptr)) || (_1acbc5dae_comptimeEnumFields(_self_) != nullptr)) || (_1acbc6145_comptimeEnumField(_self_) != nullptr)) || (_1acbc719b_comptimeStatics(_self_) != nullptr)) || (_1acbc7432_comptimeStatic(_self_) != nullptr)) || (_1acbc63cb_comptimeParams(_self_) != nullptr)) || (_1acbc6662_comptimeParam(_self_) != nullptr)) || (_1acbc76b8_comptimeValue(_self_) != nullptr)) || (_1acbc8202_comptimeFiles(_self_) != nullptr)) || (_1acbc7e6b_comptimeFile(_self_) != nullptr)) || (_1acbc794e_comptimeDecl(_self_) != nullptr)) || (_1acbc7bd5_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1ac9303bb_comptimeStructFields> _1acbc5892_comptimeStructFields(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data7)) {
			_case_begin_1be949280:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac9303bb_comptimeStructFields>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1be94d691:;
			{
				return nullptr;;
			}
		}
		_match_end_1be94d62a:;
	};
}



inline jule::Ptr<_1ac92db28_comptimeStructField> _1acbc5b28_comptimeStructField(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data6)) {
			_case_begin_1be94e010:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac92db28_comptimeStructField>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1be94dd56:;
			{
				return nullptr;;
			}
		}
		_match_end_1be94dce0:;
	};
}



inline jule::Ptr<_1ac93637d_comptimeEnumFields> _1acbc5dae_comptimeEnumFields(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data11)) {
			_case_begin_1be94ec8b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac93637d_comptimeEnumFields>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1be94ead2:;
			{
				return nullptr;;
			}
		}
		_match_end_1be94ea6b:;
	};
}



inline jule::Ptr<_1ac93506e_comptimeEnumField> _1acbc6145_comptimeEnumField(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data10)) {
			_case_begin_1be950a17:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac93506e_comptimeEnumField>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1be95085d:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9507e7:;
	};
}



inline jule::Ptr<_1ac939bde_comptimeParams> _1acbc63cb_comptimeParams(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data13)) {
			_case_begin_1be951793:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac939bde_comptimeParams>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1be9515d9:;
			{
				return nullptr;;
			}
		}
		_match_end_1be951573:;
	};
}



inline jule::Ptr<_1ac937d85_comptimeParam> _1acbc6662_comptimeParam(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data12)) {
			_case_begin_1be95251e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac937d85_comptimeParam>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1be952365:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9522ee:;
	};
}



inline jule::Ptr<_1ac92d0bc_comptimeRange> _1acbc68e8_comptimeRange(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)) {
			_case_begin_1be95307a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac92d0bc_comptimeRange>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1be9532cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1be953267:;
	};
}



inline jule::Ptr<_1ac93b54d_comptimeTypeInfos> _1acbc6b7e_comptimeTypeInfos(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data14)) {
			_case_begin_1be954004:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac93b54d_comptimeTypeInfos>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1be953d4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1be953cd4:;
	};
}



inline jule::Ptr<_1ac93cebc_comptimeTypeInfo> _1acbc6e15_comptimeTypeInfo(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15)) {
			_case_begin_1be954c80:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac93cebc_comptimeTypeInfo>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1be954ac6:;
			{
				return nullptr;;
			}
		}
		_match_end_1be954a60:;
	};
}



inline jule::Ptr<_1ac933600_comptimeStatics> _1acbc719b_comptimeStatics(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data9)) {
			_case_begin_1be9557db:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac933600_comptimeStatics>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1be955a3e:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9559c8:;
	};
}



inline jule::Ptr<_1ac931d4b_comptimeStatic> _1acbc7432_comptimeStatic(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data8)) {
			_case_begin_1be956765:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac931d4b_comptimeStatic>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1be9565ab:;
			{
				return nullptr;;
			}
		}
		_match_end_1be956545:;
	};
}



inline jule::Ptr<_1ac9440c2_comptimeValue> _1acbc76b8_comptimeValue(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data16)) {
			_case_begin_1be9574e1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac9440c2_comptimeValue>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1be957337:;
			{
				return nullptr;;
			}
		}
		_match_end_1be9572c1:;
	};
}



inline jule::Ptr<_1ac94c6b3_comptimeDecl> _1acbc794e_comptimeDecl(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20)) {
			_case_begin_1be95826c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac94c6b3_comptimeDecl>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1be9580b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1be95804c:;
	};
}



inline jule::Ptr<_1ac94a3c5_comptimeDecls> _1acbc7bd5_comptimeDecls(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19)) {
			_case_begin_1be958ee8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac94a3c5_comptimeDecls>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1be958d3e:;
			{
				return nullptr;;
			}
		}
		_match_end_1be958cc8:;
	};
}



inline jule::Ptr<_1ac94879c_comptimeFile> _1acbc7e6b_comptimeFile(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18)) {
			_case_begin_1be959c74:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac94879c_comptimeFile>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1be959aba:;
			{
				return nullptr;;
			}
		}
		_match_end_1be959a54:;
	};
}



inline jule::Ptr<_1ac946d2d_comptimeFiles> _1acbc8202_comptimeFiles(_1acbc0d98_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data17)) {
			_case_begin_1be95a7d0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1ac946d2d_comptimeFiles>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1be95aa33:;
			{
				return nullptr;;
			}
		}
		_match_end_1be95a9bc:;
	};
}








inline jule::Bool _1acbc85a9_TypeSym_eq(_1acbc85a9_TypeSym *_self_, _1acbc85a9_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1acbc8961_checked(_1acbc85a9_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1acbc8eb1_Prim_eq(_1acbc8eb1_Prim *_self_, _1acbc8eb1_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1acbc9335_Str(_1acbc8eb1_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1acbc9676_Equal(jule::Ptr<_1acbc8eb1_Prim> _self_, jule::Ptr<_1acbc0d98_Type> _51418_other) {
	jule::Ptr<_1acbc8eb1_Prim> _5153_prim = _1acbc354e_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1acbc9b1b_IsConstraint(_1acbc8eb1_Prim* _self_) {
	return ((((!(_1acbcc47b_IsStr(_self_))) && (!(_1acbcc712_IsAny(_self_)))) && (!(_1acbcc1e5_IsBool(_self_)))) && (!(_1ac92bac1_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1acbc9da2_IsI8(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1acbca138_IsI16(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1acbca3be_IsI32(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1acbca655_IsI64(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1acbca8db_IsU8(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1acbcab72_IsU16(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1acbcae08_IsU32(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1acbcb18e_IsU64(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1acbcb425_IsF32(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1acbcb6ab_IsF64(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1acbcb942_IsInt(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1acbcbbc8_IsUint(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1acbcbe5e_IsUintptr(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1acbcc1e5_IsBool(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1acbcc47b_IsStr(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1acbcc712_IsAny(_1acbc8eb1_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1acbcc9dc_Sptr_eq(_1acbcc9dc_Sptr *_self_, _1acbcc9dc_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1acbccd94_Str(_1acbcc9dc_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1acbc1294_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1acbcd1d5_Equal(jule::Ptr<_1acbcc9dc_Sptr> _self_, jule::Ptr<_1acbc0d98_Type> _59118_other) {
	jule::Ptr<_1acbcc9dc_Sptr> _5923_sptr = _1acbc37d5_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1acbc15d5_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1acbcd4b0_Slc_eq(_1acbcd4b0_Slc *_self_, _1acbcd4b0_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1acbcd977_Str(_1acbcd4b0_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1acbc1294_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1acbcdcb8_Equal(jule::Ptr<_1acbcd4b0_Slc> _self_, jule::Ptr<_1acbc0d98_Type> _61018_other) {
	jule::Ptr<_1acbcd4b0_Slc> _6113_slc = _1acbc45a5_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1acbc15d5_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1acbce45b_Str(_1acbce0a4_Tuple* _self_) {
	_1a6a5cb3c_Builder _6277_s = static__1a6a5d489_New(16LL);;
	({
		auto except = _1a6a5ddc4_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_6277_s, _1acbc1294_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be96be51:;
		if (it != expr_end) {
			jule::Ptr<_1acbc0d98_Type> *_63010_t = it;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_6277_s, _1acbc1294_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_1be96be51:;
			++it;
			goto _iter_begin_1be96be51;
		}
		_iter_end_1be96be51:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _1a6a5e49b_Str(&_6277_s);;
}



inline jule::Bool _1acbce79c_Equal(jule::Ptr<_1acbce0a4_Tuple> _self_, jule::Ptr<_1acbc0d98_Type> _63918_other) {
	jule::Ptr<_1acbce0a4_Tuple> _6403_tup = _1acbc5375_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _6477_i = 0LL;;
	for (; (_6477_i < (*_self_.alloc)._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1acbc15d5_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1be96eccd:;
	}
	_iter_end_1be96eccd:;;
	return true;;
}








inline jule::Bool _1acbceb54_Map_eq(_1acbceb54_Map *_self_, _1acbceb54_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1acbd000b_Str(_1acbceb54_Map* _self_) {
	_1a6a5cb3c_Builder _6677_s = static__1a6a5d489_New(16LL);;
	({
		auto except = _1a6a5db1b_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_6677_s, _1acbc1294_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_6677_s, _1acbc1294_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _1a6a5e49b_Str(&_6677_s);;
}



inline jule::Bool _1acbd034c_Equal(jule::Ptr<_1acbceb54_Map> _self_, jule::Ptr<_1acbc0d98_Type> _67618_other) {
	jule::Ptr<_1acbceb54_Map> _6773_m = _1acbc50de_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1acbc15d5_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1acbc15d5_Equal((*_self_.alloc)._field_Val, (*(_6773_m))._field_Val));;
}








inline jule::Bool _1acbd07d1_Arr_eq(_1acbd07d1_Arr *_self_, _1acbd07d1_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1acbd0b88_Str(_1acbd07d1_Arr* _self_) {
	_1a6a5cb3c_Builder _6957_s = static__1a6a5d489_New(16LL);;
	({
		auto except = _1a6a5ddc4_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_6957_s, _1aa51a22d_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_6957_s, _1acbc1294_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _1a6a5e49b_Str(&_6957_s);;
}



inline jule::Bool _1acbd0ec9_Equal(jule::Ptr<_1acbd07d1_Arr> _self_, jule::Ptr<_1acbc0d98_Type> _70418_other) {
	jule::Ptr<_1acbd07d1_Arr> _7053_arr = _1acbc431e_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1acbc15d5_Equal((*_self_.alloc)._field_Elem, (*(_7053_arr))._field_Elem));;
}








inline jule::Bool _1acbd12a4_Ptr_eq(_1acbd12a4_Ptr *_self_, _1acbd12a4_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1acbd165b_Str(_1acbd12a4_Ptr* _self_) {
	if (_1acbd1d21_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1acbc1294_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1acbd199c_Equal(jule::Ptr<_1acbd12a4_Ptr> _self_, jule::Ptr<_1acbc0d98_Type> _72818_other) {
	jule::Ptr<_1acbd12a4_Ptr> _7293_ptr = _1acbc3a6b_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1be97adc7:;
			{
				return false;;
			}
		}
		else if (_1acbd1d21_IsUnsafe(_self_.ptr())) {
			_case_begin_1be97a778:;
			{
				return _1acbd1d21_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1acbd1d21_IsUnsafe(_7293_ptr.ptr())) {
			_case_begin_1be97a7de:;
			{
				return _1acbd1d21_IsUnsafe(_self_.ptr());;
			}
		}
		else {
			_case_begin_1be97a305:;
			{
				return _1acbc15d5_Equal((*(_self_))._field_Elem, (*(_7293_ptr))._field_Elem);;
			}
		}
		_match_end_1be97a27d:;
	};
}



inline jule::Bool _1acbd1d21_IsUnsafe(_1acbd12a4_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1acbd22a5_referencer_eq(_1acbd22a5_referencer *_self_, _1acbd22a5_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1acbd3a26_pushErr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc2ba81_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1ac9abb2e_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1acbd3c24_allowBuiltin(_1acbd3295_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1acbd3e22_disallowBuiltin(_1acbd3295_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1be9807d3_pushReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1be21a2c1_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ac97a6ad_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type65));
}

inline void _1be9832a8_pushReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acaaca65_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1be984ead_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1ac97a6ad_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1acbd4483_pushReferenceByKind(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _84240_k) {
	{
		
		if ((_1acbc4ac2_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1be97e3e7:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _8458_t = _1acbc4ac2_Struct((*(_84240_k)).ptr());;
				_1be9807d3_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1acbc4d58_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1be97e491:;
			{
				jule::Ptr<_1acaaca65_Trait> _8488_t = _1acbc4d58_Trait((*(_84240_k)).ptr());;
				_1be9832a8_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1be97e2c6:;
	};
}



inline void _1acbd48a1_pushCycleError(_1acbd3295_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a6a5cb3c_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1be987378, nullptr, nullptr);;
	jule::Str _8653_m = _1a6a5e49b_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1a6a5db1b_WriteStr(_85353_message, _1a8e45b27_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _1acbd4c9c_checkCrossCycle(_1acbd3295_typeChecker* _self_, jule::Any _87527_decl, _1a6a5cb3c_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be98b965:;
			{
				jule::Ptr<_1acbc00a6_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1acbc00a6_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be98c933:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1be98d2c4:;
									{
										_1acbd48a1_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1acbd4c9c_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1be98d35c:;
									{
										_1acbd48a1_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1be98d1b4:;
							};
						}
						_iter_next_1be98c933:;
						++it;
						goto _iter_begin_1be98c933;
					}
					_iter_end_1be98c933:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be98b7bc:;
			{
				jule::Ptr<_1ac9ce129_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1ac9ce129_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be98eccb:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1be99066c:;
									{
										_1acbd48a1_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1acbd4c9c_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1be990705:;
									{
										_1acbd48a1_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1be99055c:;
							};
						}
						_iter_next_1be98eccb:;
						++it;
						goto _iter_begin_1be98eccb;
					}
					_iter_end_1be98eccb:;
				};
			}
		}
		_match_end_1be98b8ee:;
	};
	return true;;
}



inline jule::Bool _1acbd5198_checkIllegalCycles(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be992ad1:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1ac9ce129_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be99295a:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1acbc00a6_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1be99031a:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1acbd3a26_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_referencer))._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a6a5cb3c_Builder _9327_message = static__1a6a5d489_New(32LL);;
	if ((!(_1acbd4c9c_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1a6a5e49b_Str(&_9327_message);;
		_1a6a5e699_Clear(&_9327_message);
		_1acbd48a1_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1a6a5e49b_Str(&_9327_message);
		_1acbd3a26_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be9979b5:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*((*(_self_))._field_referencer))._field_refs; __jule_push_dest->push(_90967_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be996002:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1be998279:;
						{
							jule::Ptr<_1ac9ce129_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ac9ce129_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ce129_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1ac9ce129_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1be9980d1:;
				};
			}
		}
		_match_end_1be99792c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1acbd5594_fromTypeAlias(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _95930_decl, jule::Ptr<_1acbc00a6_TypeAlias>* _95962_ta) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1acbd3a26_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1acbd3a26_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be99d911:;
			if (it != expr_end) {
				jule::Ptr<_1acbc00a6_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _1acbc15d5_Equal((*((*((*(_95962_ta))))._field_TypeSym))._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1be99d911;
					};
				}
				_iter_next_1be99d911:;
				++it;
				goto _iter_begin_1be99d911;
			}
			_iter_end_1be99d911:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be9a0c10:;
			if (it != expr_end) {
				jule::Ptr<_1acbc00a6_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1acbd3a26_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be9a16a0:;
						if (it != expr_end) {
							jule::Ptr<_1acbc00a6_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1acbd3a26_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1be9a16a0:;
							++it;
							goto _iter_begin_1be9a16a0;
						}
						_iter_end_1be9a16a0:;
					};
				}
				_iter_next_1be9a0c10:;
				++it;
				goto _iter_begin_1be9a0c10;
			}
			_iter_end_1be9a0c10:;
		};
	};
	if (((*(*((*(_95962_ta))))._field_TypeSym.alloc)._field_Type == nullptr)) {
		jule::Bool _10034_ok = _1acb2965e_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)) {
			_case_begin_1be9a4d46:;
			{
				jule::Bool _10114_ok = _1acbd5198_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind.cast_ptr<_1ac9d1e84_StructIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1be9a4cbe:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1acbc0d98_Type> _10237_tk = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_Kind});;
	_1acbd4483_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data21);;
}



inline jule::Ptr<_1acab021b_Enum> _1acbd5990_fromEnum(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _103625_decl, jule::Ptr<_1acab021b_Enum>* _103657_e) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1acbd3a26_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1acbd3a26_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1acbd5d8b_fromTypeEnum(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _104829_decl, jule::Ptr<_1acab1926_TypeEnum>* _104861_e) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1acbd3a26_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1acbd3a26_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1acaaca65_Trait> _1acbd6287_fromTrait(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _106026_decl, jule::Ptr<_1acaaca65_Trait>* _106058_t) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1acbd3a26_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1acbd3a26_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1be9832a8_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1acbd6683_checkStructIns(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _107335_ins, jule::Ptr<_1abc2ba81_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1acb3614e_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1acb36b66_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1acb36407_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1acbd693b_appendUsedStructReference(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9ce129_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be9b78c5:;
			{
				jule::Ptr<_1ac9ce129_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1ac9ce129_Struct>();;
				if ((!(_1ac9d0adc_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ce129_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1be9b785e:;
	};
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd6d37_buildStructInstance(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _110740_decl, jule::Ptr<_1ac9ce129_Struct>* _110772_s) {
	jule::Ptr<_1acbd22a5_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
				_case_begin_1be9ba90b:;
				{
					jule::Ptr<_1ac9631bd_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1);;
					jule::Ptr<_1ac9631bd_scopeChecker> _11199_hard = _1ac966831_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1be9ba895;
					};
					jule::I32 _11235_n = ((*(*(_11199_hard))._field_owner.alloc)._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1be9ba895:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1ac9d1e84_StructIns> _11377_ins = _1ac9ce5be_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbbe4b2_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9c0c30:;
		if (it != expr_end) {
			jule::Ptr<_1abc4259c_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1acbc0d98_Type> _11408_kind = _1acbdaa3e_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1be9c0c30:;
			++it;
			goto _iter_begin_1be9c0c30;
		}
		_iter_end_1be9c0c30:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd7233_fromStructIns(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115534_ins, jule::Ptr<_1abc2ba81_Token> _115555_token) {
	jule::Ptr<_1ac9d1e84_StructIns> _11567_existInstance = _1ac9ce8cc_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1acb2745e_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1be9807d3_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1acbd6683_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1be9807d3_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1acbd762e_fromStruct(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _117331_decl, jule::Ptr<_1ac9ce129_Struct>* _117363_s) {
	if ((!(_1acb1cc4b_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1acbd3a26_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1acbd3a26_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1ac9d1e84_StructIns>(_1ac9d1e84_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1ac9d13d4_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1acaa2351_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Operators=_1ac9cd216_Operators{._field_Eq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Add=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Div=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1acaa540e_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1acbd5198_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1acbd693b_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1ac9d1e84_StructIns> _11977_ins = _1acbd6d37_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1acb1da1b_checkGenericQuantity((*(_self_))._field_s, (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*(_11977_ins))._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1acbd7233_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1acbd7970_getDef(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9cb312:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ba91d_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1acbdd338_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22);;
				};
			}
			_iter_next_1be9cb312:;
			++it;
			goto _iter_begin_1be9cb312;
		}
		_iter_end_1be9cb312:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9cb6a8:;
		if (it != expr_end) {
			jule::Ptr<_1acbc00a6_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1acbd3a26_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1ac9d1e84_StructIns> _12309_st = _1acbc4ac2_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1acbd5198_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1be9cb6a8:;
			++it;
			goto _iter_begin_1be9cb6a8;
		}
		_iter_end_1be9cb6a8:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1acab021b_Enum> _12428_e = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe0cdb_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1acbd5990_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3);;
		};
		jule::Ptr<_1acab1926_TypeEnum> _12478_te = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe112c_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1acbd5d8b_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4);;
		};
		jule::Ptr<_1acaaca65_Trait> _12528_t = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe099a_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1acbd6287_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1acbd3a26_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9ce129_Struct> _12617_s = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbe025d_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1acbd762e_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0);;
	};
	jule::Ptr<_1acbc00a6_TypeAlias> _12667_ta = ((_1acbe1281_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1acbded62_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1acc47826_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1acbd5594_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1acbd3a26_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1acbd7cb1_buildIdent(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42ba7_IdentTypeDecl> _127830_decl) {
	return _1acbd7970_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1acbd8102_buildSubIdent(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc42e71_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1acbd7cb1_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)) {
			_case_begin_1be9d972c:;
			{
				goto _match_end_1be9d9c8d;
			}
		}
		else {
			_case_begin_1be9d9809:;
			{
				_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be9d9c8d:;
	};
	jule::Ptr<_1acab1926_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1acab1926_TypeEnum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9db4a9:;
		if (it != expr_end) {
			jule::I32 _12967_i = it - expr->begin();
			jule::Ptr<_1abc42ba7_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1acab134e_TypeEnumItem> _12978_item = _1acab251a_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1acbd3a26_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1acbd4483_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data21);;
				};
				_12947_t=_1acbc4088_TypeEnum((*(*(_12978_item))._field_TypeSym.alloc)._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1be9db4a9:;
			++it;
			_12967_i++;
			goto _iter_begin_1be9db4a9;
		}
		_iter_end_1be9db4a9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acbcc9dc_Sptr> _1acbd8443_buildSptrFromType(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1be9dbca1:;
			{
				return nullptr;;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_131638_elem)).ptr()) != nullptr)) {
			_case_begin_1be9e103b:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _13224_s = _1acbc4ac2_Struct((*(_131638_elem)).ptr());;
				if ((((*(_13224_s))._field_Decl != nullptr) && (*(*(_13224_s))._field_Decl.alloc)._field_Binded)) {
					_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1acbc431e_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1acbc431e_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1be9e10a2:;
			{
				_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be9e0601:;
	};
	return jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1acbcc9dc_Sptr> _1acbd8784_buildSptr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc43647_SptrTypeDecl> _133629_decl) {
	jule::Bool _13373_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13373_cycleRisk;
	});;
	jule::Ptr<_1acbc0d98_Type> _13417_elem = _1acbdad80_checkDecl(_self_, &((*(_133629_decl))._field_Elem));;
	return _1acbd8443_buildSptrFromType(_self_, &(_13417_elem));;
}



inline jule::Ptr<_1acbd12a4_Ptr> _1acbd8ac5_buildPtrFromType(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acbc0d98_Type>* _134537_elem) {
	{
		
		if (((*(_134537_elem)) == nullptr)) {
			_case_begin_1be9e634e:;
			{
				return nullptr;;
			}
		}
		else if (((_1acbc431e_Arr((*(_134537_elem)).ptr()) != nullptr) && (*(_1acbc431e_Arr((*(_134537_elem)).ptr())))._field_Auto)) {
			_case_begin_1be9e63e8:;
			{
				_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1acbd12a4_Ptr>(_1acbd12a4_Ptr{._field_Elem=jule::Ptr<_1acbc0d98_Type>(nullptr)});;
			}
		}
		_match_end_1be9e622d:;
	};
	return jule::new_ptr<_1acbd12a4_Ptr>(_1acbd12a4_Ptr{._field_Elem=(*(_134537_elem))});;
}



inline jule::Ptr<_1acbd12a4_Ptr> _1acbd8e16_buildPtr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc440c6_PtrTypeDecl> _136028_decl) {
	jule::Bool _13613_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13613_cycleRisk;
	});;
	jule::Ptr<_1acbc0d98_Type> _13657_elem = static_cast<jule::Ptr<_1acbc0d98_Type>>(nullptr);;
	if ((!(_1abc4446c_IsUnsafe(_136028_decl.ptr())))) {
		_13657_elem=_1acbdad80_checkDecl(_self_, &((*_136028_decl.alloc)._field_Elem));
		return _1acbd8ac5_buildPtrFromType(_self_, &(_13657_elem));;
	};
	return jule::new_ptr<_1acbd12a4_Ptr>(_1acbd12a4_Ptr{._field_Elem=_13657_elem});;
}



inline jule::Ptr<_1acbcd4b0_Slc> _1acbd9257_buildSlc(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc439cc_SlcTypeDecl> _137728_decl) {
	jule::Bool _13783_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13783_cycleRisk;
	});;
	jule::Ptr<_1acbc0d98_Type> _13827_elem = _1acbdad80_checkDecl(_self_, &((*(_137728_decl))._field_Elem));;
	{
		
		if ((_13827_elem == nullptr)) {
			_case_begin_1be9eb6ea:;
			{
				return nullptr;;
			}
		}
		else if (((_1acbc431e_Arr(_13827_elem.ptr()) != nullptr) && (*(_1acbc431e_Arr(_13827_elem)))._field_Auto)) {
			_case_begin_1be9eb761:;
			{
				_1acbd3a26_pushErr(_self_, (*((*_137728_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be9eb684:;
	};
	return jule::new_ptr<_1acbcd4b0_Slc>(_1acbcd4b0_Slc{._field_Elem=_13827_elem});;
}



inline jule::Ptr<_1acbd07d1_Arr> _1acbd9598_buildArr(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc44868_ArrTypeDecl> _139828_decl) {
	jule::I32 _13997_n = 0LL;;
	if ((!(_1abc44c0e_AutoSized(_139828_decl.ptr())))) {
		jule::Ptr<_1acb8cded_Data> _14028_size = _1acbadbaa_evalExpr(_1acb243b2_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139828_decl.alloc)._field_Size);;
		if ((_14028_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1acb8d838_IsConst(_14028_size.ptr())))) {
			_1acbd3a26_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1acbc354e_Prim((*(_14028_size))._field_Type.ptr()) == nullptr) || (!(_1ac92b4e9_IsInt((*(_1acbc354e_Prim((*(_14028_size))._field_Type)))._field_Kind))))) {
			_1acbd3a26_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13997_n=static_cast<jule::I32>(_1aca8ae72_AsI64((*(_14028_size))._field_Constant.ptr()));
		if ((_13997_n < 0LL)) {
			_1acbd3a26_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14205_max = _1ac92945e_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1ac92249b_BitSize != 64LL) && (static_cast<jule::I64>(_13997_n) > _14205_max))) {
				_1acbd3a26_pushErr(_self_, (*((*_139828_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbbbc40_constoa(&((*(_14028_size))._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1aa519e64_FmtInt(_14205_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1acbc0d98_Type> _14297_elem = _1acbdad80_checkDecl(_self_, &((*_139828_decl.alloc)._field_Elem));;
	{
		
		if ((_14297_elem == nullptr)) {
			_case_begin_1bea06aac:;
			{
				return nullptr;;
			}
		}
		else if (((_1acbc431e_Arr(_14297_elem.ptr()) != nullptr) && (*(_1acbc431e_Arr(_14297_elem)))._field_Auto)) {
			_case_begin_1bea06b56:;
			{
				_1acbd3a26_pushErr(_self_, (*((*_139828_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bea06a35:;
	};
	return jule::new_ptr<_1acbd07d1_Arr>(_1acbd07d1_Arr{._field_Auto=_1abc44c0e_AutoSized(_139828_decl), ._field_N=_13997_n, ._field_Elem=_14297_elem});;
}



inline jule::Ptr<_1acbceb54_Map> _1acbd98d9_buildMap(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc450b6_MapTypeDecl> _144728_decl) {
	jule::Bool _14483_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14483_cycleRisk;
	});;
	jule::Ptr<_1acbc0d98_Type> _14527_key = _1acbdad80_checkDecl(_self_, &((*(_144728_decl))._field_Key));;
	if ((_14527_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acbc0d98_Type> _14577_val = _1acbdad80_checkDecl(_self_, &((*_144728_decl.alloc)._field_Val));;
	if ((_14577_val == nullptr)) {
		return nullptr;;
	};
	if ((_1acbc3d02_Enum(_14577_val.ptr()) != nullptr)) {
		_1acbd3a26_pushErr(_self_, (*((*_144728_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1ac9ce129_Struct> _14668_s = _1abd16c26_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1acbd693b_appendUsedStructReference(_self_, &(_14668_s));
		jule::Ptr<_1ac9d1e84_StructIns> _14688_ins = _1ac9ce5be_instance(_14668_s);;
		(*(_14688_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=_14527_key, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=_14577_val, ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; });
		_1acbd7233_fromStructIns(_self_, &(_14688_ins), (*((*_144728_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1acbceb54_Map>(_1acbceb54_Map{._field_Key=_14527_key, ._field_Val=_14577_val});;
}



inline jule::Ptr<_1acbce0a4_Tuple> _1acbd9c2a_buildTuple(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc43cc9_TupleTypeDecl> _147930_decl) {
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _14807_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(0LL, (*(_147930_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc0d98_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147930_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea10d6e:;
		if (it != expr_end) {
			jule::Ptr<_1abc4259c_TypeDecl> _148115_t = *it;
			{
				jule::Ptr<_1acbc0d98_Type> _14828_kind = _1acbdad80_checkDecl(_self_, &(_148115_t));;
				if ((_14828_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1acbc0d98_Type>> &__jule_push_dest = _14807_types; __jule_push_dest.push(_14828_kind); };
			}
			_iter_next_1bea10d6e:;
			++it;
			goto _iter_begin_1bea10d6e;
		}
		_iter_end_1bea10d6e:;
	};
	return jule::new_ptr<_1acbce0a4_Tuple>(_1acbce0a4_Tuple{._field_Types=_14807_types});;
}



inline jule::Bool _1acbda06b_checkFuncTypes(_1acbd3295_typeChecker* _self_, jule::Ptr<_1acaa540e_FnIns>* _149235_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_149235_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea128a9:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _149315_p = *it;
			{
				(*(_149315_p))._field_Type=_1acbdaa3e_build(_self_, &((*((*((*((*_149315_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_149315_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1acb2800e_checkFnParamKind((*(_self_))._field_s, &(_149315_p));
			}
			_iter_next_1bea128a9:;
			++it;
			goto _iter_begin_1bea128a9;
		}
		_iter_end_1bea128a9:;
	};
	if ((!(_1acaa2807_IsVoid((*((*(_149235_f))))._field_Decl.ptr())))) {
		(*((*(_149235_f))))._field_Result=_1acbdaa3e_build(_self_, &((*(*((*((*((*((*(_149235_f))))._field_Decl))._field_Result))._field_TypeSym))._field_Decl.alloc)._field_Kind));
		__jule_func_result = ((*((*(_149235_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acbda3ac_buildFunc(_1acbd3295_typeChecker* _self_, jule::Ptr<_1ac9c04a0_FnDecl> _151029_decl) {
	jule::Bool _15113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15113_cycleRisk;
	});;
	if (((*(_151029_decl))._field_Generics.len() > 0LL)) {
		_1acbd3a26_pushErr(_self_, (*_151029_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acaa2351_Fn> _15207_f = _1ac97cd31_buildFunc(_151029_decl);;
	jule::I32 _15223_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1acb32304_checkAnonFuncDecl((*(_self_))._field_s, &(_15207_f));
	if ((_15223_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1acaa540e_FnIns> _15287_ins = _1acaa385d_instanceForce(_15207_f);;
	(*(_15287_ins))._field_Anon=true;
	(*_15287_ins.alloc)._field_AsAnon=true;
	jule::Bool _15323_ok = _1acbda06b_checkFuncTypes(_self_, &(_15287_ins));;
	if ((!(_15323_ok))) {
		return nullptr;;
	};
	return _15287_ins;;
}



inline jule::Trait _1acbda6ed_buildNamespace(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc4334a_NamespaceTypeDecl> _154034_ns) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _15417_imp = _1acbbd7be_findNamespace((*(_self_))._field_lookup, (*((*(_154034_ns))._field_Namespace))._field_Kind);;
	if (((_15417_imp == nullptr) || (!(_1ac98dd75_isLookupable(_15417_imp.ptr()))))) {
		_1acbd3a26_pushErr(_self_, (*_154034_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_154034_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1acbd3e22_disallowBuiltin(_self_);
	jule::Trait _15487_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15417_imp, (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data2);
	jule::Ptr<_1acbc0d98_Type> _15507_kind = _1acbdad80_checkDecl(_self_, &((*_154034_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15487_lookup;
	_1acbd3c24_allowBuiltin(_self_);
	return jule::Trait(_15507_kind, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data21);;
}



inline jule::Ptr<_1acbc0d98_Type> _1acbdaa3e_build(_1acbd3295_typeChecker* _self_, jule::Any* _155626_declKind) {
	jule::Trait _155711_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155626_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bea20c2a:;
			{
				jule::Trait _15608_t = _1acbd7cb1_buildIdent(_self_, (*(_155626_declKind)).cast_ptr<_1abc42ba7_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15608_t != nullptr)) {
					_155711_kind=_15608_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bea2018b:;
			{
				jule::Trait _15658_t = _1acbd8102_buildSubIdent(_self_, (*(_155626_declKind)).cast_ptr<_1abc42e71_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15658_t != nullptr)) {
					_155711_kind=_15658_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bea20202:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbcc9dc_Sptr> _15718_t = _1acbd8784_buildSptr(_self_, (*(_155626_declKind)).cast_ptr<_1abc43647_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15718_t != nullptr)) {
					_155711_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bea20268:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbd12a4_Ptr> _15778_t = _1acbd8e16_buildPtr(_self_, (*(_155626_declKind)).cast_ptr<_1abc440c6_PtrTypeDecl>(&__jule_any_type74));;
				if ((_15778_t != nullptr)) {
					_155711_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bea202ce:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbcd4b0_Slc> _15838_t = _1acbd9257_buildSlc(_self_, (*(_155626_declKind)).cast_ptr<_1abc439cc_SlcTypeDecl>(&__jule_any_type73));;
				if ((_15838_t != nullptr)) {
					_155711_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bea20345:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbd07d1_Arr> _15898_t = _1acbd9598_buildArr(_self_, (*(_155626_declKind)).cast_ptr<_1abc44868_ArrTypeDecl>(&__jule_any_type72));;
				if ((_15898_t != nullptr)) {
					_155711_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bea203ab:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbceb54_Map> _15958_t = _1acbd98d9_buildMap(_self_, (*(_155626_declKind)).cast_ptr<_1abc450b6_MapTypeDecl>(&__jule_any_type76));;
				if ((_15958_t != nullptr)) {
					_155711_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1bea20d3a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acbce0a4_Tuple> _16018_t = _1acbd9c2a_buildTuple(_self_, (*(_155626_declKind)).cast_ptr<_1abc43cc9_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16018_t != nullptr)) {
					_155711_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bea20da1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1acaa540e_FnIns> _16078_t = _1acbda3ac_buildFunc(_self_, (*(_155626_declKind)).cast_ptr<_1ac9c04a0_FnDecl>(&__jule_any_type68));;
				if ((_16078_t != nullptr)) {
					_155711_kind=jule::Trait(_16078_t, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bea20e17:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16138_t = _1acbda6ed_buildNamespace(_self_, (*(_155626_declKind)).cast_ptr<_1abc4334a_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16138_t != nullptr)) {
					_155711_kind=_16138_t;
				};
			}
		}
		else {
			_case_begin_1bea20125:;
			{
				_1acbd3a26_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bea200ae:;
	};
	if ((_155711_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155711_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data21)) {
			_case_begin_1c063eae0:;
			{
				return _155711_kind.cast_ptr<_1acbc0d98_Type>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1c063c071:;
			{
				jule::Ptr<_1acbc0d98_Type> _16288_tk = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155711_kind});;
				{
					auto &_match_expr{ _155711_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)) {
						_case_begin_1c063ce95:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1acbc0d98_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16288_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)) {
						_case_begin_1c063cd1e:;
						{
							jule::Ptr<_1ac9d1e84_StructIns> _16355_s = _155711_kind.cast_ptr<_1ac9d1e84_StructIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0);;
							if ((((*(_16355_s))._field_Decl != nullptr) && (*(*(_16355_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16288_tk))._field_BindIdent=(*(*(_16355_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1c063ce2e:;
				};
				return _16288_tk;;
			}
		}
		_match_end_1c063b526:;
	};
}



inline jule::Ptr<_1acbc0d98_Type> _1acbdad80_checkDecl(_1acbd3295_typeChecker* _self_, jule::Ptr<_1abc4259c_TypeDecl>* _164430_decl) {
	jule::Ptr<_1abc2ba81_Token> _16467_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_164430_decl))))._field_Token;
	jule::Ptr<_1acbc0d98_Type> _16497_kind = _1acbdaa3e_build(_self_, &((*((*(_164430_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16467_errorToken;
	return _16497_kind;;
}








inline jule::Bool _1acbdb358_identTypeLookup_eq(_1acbdb358_identTypeLookup *_self_, _1acbdb358_identTypeLookup _other_) { return true; }

inline jule::Bool static__1acbdb7cb_prim(jule::Str* _167118_ident, jule::Ptr<_1acbc8eb1_Prim> _167130_t) {
	return ((*(_167130_t))._field_Kind == (*(_167118_ident)));;
}



inline jule::Bool static__1acbdbb50_exist(jule::Str* _167519_ident, jule::Ptr<_1acbc0d98_Type>* _167536_k) {
	{
		
		if ((_1acbc354e_Prim((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c064493b:;
			{
				return static__1acbdb7cb_prim(_167519_ident, _1acbc354e_Prim((*(_167536_k)).ptr()));;
			}
		}
		else if ((_1acbc37d5_Sptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c06449b3:;
			{
				jule::Ptr<_1acbcc9dc_Sptr> _16808_sptr = _1acbc37d5_Sptr((*(_167536_k)).ptr());;
				return static__1acbdbb50_exist(_167519_ident, &((*(_16808_sptr))._field_Elem));;
			}
		}
		else if ((_1acbc3a6b_Ptr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644a3a:;
			{
				jule::Ptr<_1acbd12a4_Ptr> _16838_ptr = _1acbc3a6b_Ptr((*(_167536_k)).ptr());;
				return static__1acbdbb50_exist(_167519_ident, &((*(_16838_ptr))._field_Elem));;
			}
		}
		else if ((_1acbc45a5_Slc((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644ab2:;
			{
				jule::Ptr<_1acbcd4b0_Slc> _16868_slc = _1acbc45a5_Slc((*(_167536_k)).ptr());;
				return static__1acbdbb50_exist(_167519_ident, &((*(_16868_slc))._field_Elem));;
			}
		}
		else if ((_1acbc431e_Arr((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644c8d:;
			{
				jule::Ptr<_1acbd07d1_Arr> _16898_arr = _1acbc431e_Arr((*(_167536_k)).ptr());;
				return static__1acbdbb50_exist(_167519_ident, &((*(_16898_arr))._field_Elem));;
			}
		}
		else if ((_1acbc50de_Map((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644d04:;
			{
				jule::Ptr<_1acbceb54_Map> _16928_m = _1acbc50de_Map((*(_167536_k)).ptr());;
				return (static__1acbdbb50_exist(_167519_ident, &((*(_16928_m))._field_Key)) || static__1acbdbb50_exist(_167519_ident, &((*_16928_m.alloc)._field_Val)));;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644d6a:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _16968_s = _1acbc4ac2_Struct((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_16968_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c064bec6:;
					if (it != expr_end) {
						jule::Ptr<_1acbbe4b2_InsGeneric> _169716_g = *it;
						{
							if (static__1acbdbb50_exist(_167519_ident, &((*(_169716_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1c064bec6:;
						++it;
						goto _iter_begin_1c064bec6;
					}
					_iter_end_1c064bec6:;
				};
				return false;;
			}
		}
		else if ((_1acbc483b_Fn((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644dd1:;
			{
				jule::Ptr<_1acaa540e_FnIns> _17048_f = _1acbc483b_Fn((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17048_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c064db32:;
					if (it != expr_end) {
						jule::Ptr<_1acaa42a9_ParamIns> _170516_p = *it;
						{
							if (_1acaa0ecb_IsSelf((*(_170516_p))._field_Decl.ptr())) {
								goto _iter_next_1c064db32;
							};
							if (static__1acbdbb50_exist(_167519_ident, &((*_170516_p.alloc)._field_Type))) {
								return true;;
							};
						}
						_iter_next_1c064db32:;
						++it;
						goto _iter_begin_1c064db32;
					}
					_iter_end_1c064db32:;
				};
				if (((*_17048_f.alloc)._field_Result != nullptr)) {
					return static__1acbdbb50_exist(_167519_ident, &((*_17048_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1acbc5375_Tup((*(_167536_k)).ptr()) != nullptr)) {
			_case_begin_1c0644e58:;
			{
				jule::Ptr<_1acbce0a4_Tuple> _17188_tup = _1acbc5375_Tup((*(_167536_k)).ptr());;
				{
					auto expr = &((*(_17188_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c06514a3:;
					if (it != expr_end) {
						jule::Ptr<_1acbc0d98_Type> _171916_t = *it;
						{
							if (static__1acbdbb50_exist(_167519_ident, &(_171916_t))) {
								return true;;
							};
						}
						_iter_next_1c06514a3:;
						++it;
						goto _iter_begin_1c06514a3;
					}
					_iter_end_1c06514a3:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c064481a:;
			{
				return false;;
			}
		}
		_match_end_1c064470a:;
	};
}















inline void _1ad5d2842_stop(_1ad5d218d_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ad5d2ac8_stopped(_1ad5d218d_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ad5d2d5e_finished(_1ad5d218d_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ad5d30e5_isLastSt(_1ad5d218d_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ad5d3458_pushErr(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1abc2ba81_Token> _15423_token, jule::Str _15445_fmt) {
	_1ad600d7c_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1ad5d37bb_pushSuggestion(_1ad5d218d_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1ad6011e0_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1ad5d3a74_insertAsNext(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ad5d17ec_stmt>(_1ad5d17ec_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1ad5d17ec_stmt> _1ad5d3d0a_next(_1ad5d218d_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5d4206_buildScope(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _17331_tokens, jule::Ptr<_1abc2ba81_Token> _17360_end) {
	jule::Ptr<_1ac9bd811_ScopeTree> _1747_s = _1ad5d0576_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1ad5d218d_scopeParser _1777_ssp = _1ad5d218d_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ad5d17ec_stmt>>(nullptr), ._field_pos=0};;
	_1ad5de079_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1ac9c165a_VarDecl> _1ad5d4547_buildVarSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _18431_tokens) {
	jule::Ptr<_1ac9c165a_VarDecl> _1857_v = _1ad603b4e_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1ac9c1a34_RetSt> _1ad5d4888_buildRetSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _19230_tokens) {
	jule::Ptr<_1ac9c1a34_RetSt> _1937_st = jule::new_ptr<_1ac9c1a34_RetSt>(_1ac9c1a34_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d4bc9_buildWhileNextIter(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _20339_s) {
	jule::Ptr<_1ac9c22a4_Iter> _2047_it = jule::new_ptr<_1ac9c22a4_Iter>(_1ac9c22a4_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1ac9c2ace_WhileKind> _2087_kind = jule::new_ptr<_1ac9c2ace_WhileKind>(_1ac9c2ace_WhileKind{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1ad5d30e5_isLastSt(_self_)) {
		_1ad5d3458_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1ad5d3d0a_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2207_stTokens = _1ad5ea7c2_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1ad5d17ec_stmt> _2228_stmt = jule::new_ptr<_1ad5d17ec_stmt>(_1ad5d17ec_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1ad5ddc16_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2317_blockTokens = _1ad5eda4a_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1ad5d2842_stop(_self_);
		_1ad5d3458_pushErr(_self_, (*_2047_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1ad5d3458_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_2047_it.alloc)._field_Scope=_1ad5d4206_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type34);
	return _2047_it;;
}



inline jule::Ptr<_1ac9c2ace_WhileKind> _1ad5d501a_buildWhileIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _24839_tokens) {
	return jule::new_ptr<_1ac9c2ace_WhileKind>(_1ac9c2ace_WhileKind{._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5d535b_getRangeKindKeysTokens(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _2557_vars;
	jule::Slice<_1a6a6bde3_Log> _25513_errs;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1ac9c165a_VarDecl> _1ad5d569c_buildRangeKindKey(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac9c165a_VarDecl> _2647_key = jule::new_ptr<_1ac9c165a_VarDecl>(_1ac9c165a_VarDecl{._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1ad5d3458_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1ad5d3458_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad5d3458_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_2647_key.alloc)._field_Ident=(*(*(_2647_key))._field_Token.alloc)._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _1ad5d59dd_buildRangeKindKeys(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c070e907:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1ad5d569c_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1c070e907:;
			++it;
			goto _iter_begin_1c070e907;
		}
		_iter_end_1c070e907:;
	};
	return _28711_keys;;
}



inline void _1ad5d5d51_setupRangeKindKeysPlain(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _2957_keyTokens = _1ad5d535b_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1ad5d3458_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _3027_keys = _1ad5d59dd_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1ad5d61b4_setupRangeKindKeysExplicit(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3117_rang = _1ad5eda4a_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1ad5d3458_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1ad5d5d51_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1ad5d6527_setupRangeKindKeys(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ac9c34d6_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1ad5d61b4_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1ad5d5d51_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1ac9c34d6_RangeKind> _1ad5d69cd_buildRangeIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3278_exprTokens, jule::Ptr<_1abc2ba81_Token>* _32742_inToken) {
	jule::Ptr<_1ac9c34d6_RangeKind> _3287_rng = jule::new_ptr<_1ac9c34d6_RangeKind>(_1ac9c34d6_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1ac9c165a_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1ac9c165a_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1ad5d3458_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*_3287_rng.alloc)._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1ad5d6527_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1ad5d6dc9_buildCommonIterKind(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _34240_tokens, jule::Ptr<_1abc2ba81_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0719aaa:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c071a517:;
						{
							(_3437_braceN)++;
							goto _iter_next_1c0719aaa;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c071a902:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1c071a803:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1c0719aaa;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1c071b9be:;
						{
							jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1ad5d69cd_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type36);;
						}
					}
					_match_end_1c071c11d:;
				};
			}
			_iter_next_1c0719aaa:;
			++it;
			_3448_i++;
			goto _iter_begin_1c0719aaa;
		}
		_iter_end_1c0719aaa:;
	};
	return jule::Any(_1ad5d501a_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type34);;
}



inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d721a_buildCommonIter(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _36935_tokens) {
	jule::Ptr<_1ac9c22a4_Iter> _3707_it = jule::new_ptr<_1ac9c22a4_Iter>(_1ac9c22a4_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1ad5d2842_stop(_self_);
		_1ad5d3458_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3807_exprTokens = _1ad5ea7c2_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*_3707_it.alloc)._field_Kind=_1ad5d6dc9_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3857_scopeTokens = _1ad5eda4a_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1ad5d2842_stop(_self_);
		_1ad5d3458_pushErr(_self_, (*_3707_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1ad5d3458_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3707_it.alloc)._field_Scope=_1ad5d4206_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1ac9c22a4_Iter> _1ad5d755b_buildIterSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1ad5d4bc9_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1ad5d721a_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1ac9c38b0_BreakSt> _1ad5d789c_buildBreakSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _40633_tokens) {
	jule::Ptr<_1ac9c38b0_BreakSt> _4077_brk = jule::new_ptr<_1ac9c38b0_BreakSt>(_1ac9c38b0_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ad5d3458_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1ad5d3458_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1ac9c3c89_ContSt> _1ad5d7bdd_buildContSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _42432_tokens) {
	jule::Ptr<_1ac9c3c89_ContSt> _4257_cont = jule::new_ptr<_1ac9c3c89_ContSt>(_1ac9c3c89_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ad5d3458_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1ad5d3458_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1ac9c4240_If> _1ad5d802e_buildIf(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _44228_tokens) {
	jule::Ptr<_1ac9c4240_If> _4437_model = jule::new_ptr<_1ac9c4240_If>(_1ac9c4240_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _4477_exprTokens = _1ad5ea7c2_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1ad5d3458_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _4547_scopeTokens = _1ad5eda4a_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1ad5d2842_stop(_self_);
		_1ad5d3458_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1ad5d3458_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*_4437_model.alloc)._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1ad5d4206_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1ac9c4619_Else> _1ad5d8370_buildElse(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _47530_tokens) {
	jule::Ptr<_1ac9c4619_Else> _4767_els = jule::new_ptr<_1ac9c4619_Else>(_1ac9c4619_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _4817_scopeTokens = _1ad5eda4a_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1ad5d3458_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1ad5d2842_stop(_self_);
			_1ad5d3458_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1ad5d3458_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1ad5d4206_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1ac9c4ac0_Conditional> _1ad5d86b1_buildIfElseChain(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _49936_tokens) {
	jule::Ptr<_1ac9c4ac0_Conditional> _5007_chain = jule::new_ptr<_1ac9c4ac0_Conditional>(_1ac9c4ac0_Conditional{._field_Head=_1ad5d802e_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1ac9c4240_If>>(nullptr), ._field_Default=jule::Ptr<_1ac9c4619_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1c07387cc;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac9c4240_If> _5129_elif = _1ad5d802e_buildIf(_self_, &(_49936_tokens));;
				(*_5007_chain.alloc)._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9c4240_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1c07387cc;
			};
			(*_5007_chain.alloc)._field_Default=_1ad5d8370_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1c07387cc;
		}
	_iter_next_1c07387cc:;
	}
	_iter_end_1c07387cc:;;
	return _5007_chain;;
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad5d8a02_buildCoCallSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _52233_tokens) {
	jule::Ptr<_1abc2ba81_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac9b2a47_Expr> _5257_e = _1ad601531_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c073c8be:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1ac9b6771_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1c073ce96:;
			{
				_1ad5d3458_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1c073ce30:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1ac9bb1c1_GotoSt> _1ad5d8d43_buildGotoSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _53832_tokens) {
	jule::Ptr<_1ac9bb1c1_GotoSt> _5397_gt = jule::new_ptr<_1ac9bb1c1_GotoSt>(_1ac9bb1c1_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1ad5d3458_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1ad5d3458_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1abc2ba81_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad5d3458_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1ac9bb4bd_FallSt> _1ad5d9184_buildFallSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _55832_tokens) {
	jule::Ptr<_1ac9bb4bd_FallSt> _5597_fll = jule::new_ptr<_1ac9bb4bd_FallSt>(_1ac9bb4bd_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1ad5d3458_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad5d94c5_buildTypeAliasSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _56837_tokens) {
	jule::Ptr<_1ac9c530c_TypeAliasDecl> _5697_tad = _1ad602cc4_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1ad5d999d_pushCaseExpr(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _57432_tokens, jule::Ptr<_1abc2ba81_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_1abc4259c_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1ac9b2a47_Expr>(_1ac9b2a47_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type92)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1ad5d3458_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1ad601531_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1ac9b2a47_Expr__jule_tuple_bool _1ad5d9e54_buildCaseExprs(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _59735_tokens, jule::Ptr<_1abc2ba81_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1ac9b2a47_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9b2a47_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0749876:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c074b16e:;
						{
							(_5997_braceN)++;
							goto _iter_next_1c0749876;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c074b559:;
						{
							(_5997_braceN)--;
							goto _iter_next_1c0749876;
						}
					}
					_match_end_1c074b45a:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1c0749876;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1c074cc20:;
						{
							jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1ad5d3458_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1ad5d999d_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1c074cc86:;
						{
							(*(_59765_colon))=_60115_tok;
							_1ad5d999d_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1c074c725:;
				};
			}
			_iter_next_1c0749876:;
			++it;
			_6018_i++;
			goto _iter_begin_1c0749876;
		}
		_iter_end_1c0749876:;
	};
	_1ad5d3458_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5da295_buildCaseScope(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6438_next;
			({
				__jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool __jule_assign_result = _1ad5d14bc_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1c075197c;
			};
			jule::Ptr<_1abc2ba81_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1c075197c;
			};
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1ac9bd811_ScopeTree> _6538_scope = _1ad5d4206_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1c075197c:;
	}
	_iter_end_1c075197c:;;
	jule::Ptr<_1abc2ba81_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1ac9bd811_ScopeTree> _6617_scope = _1ad5d4206_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1ac9c57b3_Case__jule_tuple_bool _1ad5da691_buildCase(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1ac9c57b3_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ac9c57b3_Case> _6677_c = jule::new_ptr<_1ac9c57b3_Case>(_1ac9c57b3_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1abc2ba81_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1ad5d3458_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1ac9b2a47_Expr__jule_tuple_bool __jule_assign_result = _1ad5d9e54_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*_6677_c.alloc)._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*_6677_c.alloc)._field_Scope=_1ad5da295_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1ac9c57b3_Case__jule_tuple_x_1ac9c4619_Else _1ad5daa8c_buildCases(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1ac9c57b3_Case__jule_tuple_x_1ac9c4619_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1ac9c57b3_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1ac9c4619_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1abc2ba81_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1ad5d3458_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1c075adb5;
			};
			jule::Ptr<_1ac9c57b3_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1ac9c57b3_Case__jule_tuple_bool __jule_assign_result = _1ad5da691_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1ac9c4619_Else>(_1ac9c4619_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1ad5d3458_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1ac9c57b3_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1c075adb5:;
	}
	_iter_end_1c075adb5:;;
	if (_6887_defNotLast) {
		_1ad5d3458_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9c60cc_MatchCase> _1ad5dadcd_buildMatchCase(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _71934_tokens) {
	jule::Ptr<_1ac9c60cc_MatchCase> _7207_m = jule::new_ptr<_1ac9c60cc_MatchCase>(_1ac9c60cc_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1ac9c57b3_Case>>(nullptr), ._field_Default=jule::Ptr<_1ac9c4619_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7307_exprTokens = _1ad5ea7c2_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*_7207_m.alloc)._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*_7207_m.alloc)._field_TypeMatch) {
		_1ad5d3458_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7387_blockToks = _1ad5eda4a_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1ad5d2842_stop(_self_);
		_1ad5d3458_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ad5d37bb_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1ad5d3458_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_7207_m.alloc)._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1ac9c57b3_Case__jule_tuple_x_1ac9c4619_Else __jule_assign_result = _1ad5daa8c_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5db21e_buildScopeSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1abc2ba81_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ad5d3458_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*_7557_token.alloc)._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1ad5d3458_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ad5d3458_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7827_scopeTokens = _1ad5eda4a_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1ad5d3458_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1ad5d3458_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1ac9bd811_ScopeTree> _7897_scope = _1ad5d4206_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1ac9bace7_LabelSt> _1ad5db560_buildLabelSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _79533_tokens) {
	jule::Ptr<_1ac9bace7_LabelSt> _7967_lbl = jule::new_ptr<_1ac9bace7_LabelSt>(_1ac9bace7_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1ad5d3a74_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5db8a1_buildIdSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _81030_tokens) {
	__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1abc2ba81_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1c0772959:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ad5db560_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c07731b8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ad5ec1a8_assignInfo> _1ad5dbbe2_buildAssignInfo(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _82436_tokens) {
	jule::Ptr<_1ad5ec1a8_assignInfo> _8257_info = jule::new_ptr<_1ad5ec1a8_assignInfo>(_1ad5ec1a8_assignInfo{._field_l=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr), ._field_setter=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07748a1:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c0775451:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c07757e7:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1c07756e8:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1c07758c4:;
						{
							goto _iter_next_1c07748a1;
						}
					}
					else if (((!(_1abc31b96_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1c077695d:;
						{
							goto _iter_next_1c07748a1;
						}
					}
					_match_end_1c07768e7:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1abc318cc_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1c07748a1;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1abc318cc_IsPostfixOp((*(*(_8257_info))._field_setter.alloc)._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1ad5d3458_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1c07748a1;
			}
			_iter_next_1c07748a1:;
			++it;
			_8298_i++;
			goto _iter_begin_1c07748a1;
		}
		_iter_end_1c07748a1:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1ac9bbb2d_AssignLeft> _1ad5dc033_buildAssignL(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _86933_tokens) {
	jule::Ptr<_1ac9bbb2d_AssignLeft> _8707_l = jule::new_ptr<_1ac9bbb2d_AssignLeft>(_1ac9bbb2d_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*_8707_l.alloc)._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> _1ad5dc374_buildAssignLs(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c077e26d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _88215_part = *it;
			{
				jule::Ptr<_1ac9bbb2d_AssignLeft> _8838_l = _1ad5dc033_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1c077e26d:;
			++it;
			goto _iter_begin_1c077e26d;
		}
		_iter_end_1c077e26d:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5dc6b5_buildPlainAssign(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _88937_tokens) {
	__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ad5ec1a8_assignInfo> _8907_info = _1ad5dbbe2_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac9bc1b1_AssignSt> _8957_assign = jule::new_ptr<_1ac9bc1b1_AssignSt>(_1ac9bc1b1_AssignSt{._field_Declarative=false, ._field_Setter=(*_8907_info.alloc)._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1ad601531_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1ad5dcab1_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*_8957_assign.alloc)._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1ac9bbb2d_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1c0785098:;
				{
					jule::Ptr<_1ac9c165a_VarDecl> _9159_decl = jule::new_ptr<_1ac9c165a_VarDecl>(_1ac9c165a_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1c0785032:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _9297_parts;
	jule::Slice<_1a6a6bde3_Log> _92914_errs;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*(*(_self_))._field_p.alloc)._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*_8957_assign.alloc)._field_Left=_1ad5dc374_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1ad601531_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ad5dcab1_buildDeclAssign1(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _94337_lefts, jule::Ptr<_1ac9bc1b1_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _9457_parts;
	jule::Slice<_1a6a6bde3_Log> _94514_errs;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c078ba3e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1abc2ba81_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ad5d3458_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ad5d3458_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1ad5d3458_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1ac9bbb2d_AssignLeft> _9798_l = _1ad5dc033_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*_9798_l.alloc)._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1c078ba3e:;
			++it;
			goto _iter_begin_1c078ba3e;
		}
		_iter_end_1c078ba3e:;
	};
	return true;;
}



inline __jule_tuple_x_1ac9bc1b1_AssignSt__jule_tuple_bool _1ad5dce02_buildDeclAssign(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _99135_tokens) {
	__jule_tuple_x_1ac9bc1b1_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1abc2ba81_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac9bc1b1_AssignSt> _10027_assign = jule::new_ptr<_1ac9bc1b1_AssignSt>(_1ac9bc1b1_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1ac9bbb2d_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10077_rang = _1ad5eda4a_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1ad5d3458_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ad5d3458_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1ad601531_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1ad5dcab1_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool _1ad5dd243_buildAssignSt(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _102534_tokens) {
	__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ad5ec560_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c090c1a9:;
			{
				({
					__jule_tuple_x_1ac9bc1b1_AssignSt__jule_tuple_bool __jule_assign_result = _1ad5dce02_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c090b84b:;
			{
				({
					__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_assign_result = _1ad5dc6b5_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c090bcad:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9b341b_UseExpr> _1ad5dd584_buildUseExpr(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1ad5d3458_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1ac9b341b_UseExpr> _10437_ue = jule::new_ptr<_1ac9b341b_UseExpr>(_1ac9b341b_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1ad601531_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1ad5dd8c5_buildConstSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1ad5d3458_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1c0911ce6:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac9c22a4_Iter> _10598_iter = _1ad5d755b_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1c0911ad7:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1ac9c60cc_MatchCase> _10668_mt = _1ad5dadcd_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1c0910e16:;
			{
				return jule::Any(_1ad5d4547_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_1c0911631:;
	};
}



inline jule::Any _1ad5ddc16_buildSt(_1ad5d218d_scopeParser* _self_, jule::Ptr<_1ad5d17ec_stmt>* _107628_st) {
	jule::Ptr<_1abc2ba81_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_assign_result = _1ad5db8a1_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1ac9bcd71_StmtData__jule_tuple_bool __jule_assign_result = _1ad5dd243_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1c0917c31:;
			{
				return jule::Any(_1ad5dd584_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1c0917b32:;
			{
				return _1ad5dd8c5_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1c0917e84:;
			{
				return jule::Any(_1ad5d4547_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1c0917eea:;
			{
				return jule::Any(_1ad5d4888_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1c0918061:;
			{
				return jule::Any(_1ad5d755b_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1c09180c7:;
			{
				return jule::Any(_1ad5d789c_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1c091813d:;
			{
				return jule::Any(_1ad5d7bdd_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1c09181b5:;
			{
				return jule::Any(_1ad5d86b1_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1c091823c:;
			{
				return jule::Any(_1ad5d8a02_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1c09182b4:;
			{
				return jule::Any(_1ad5d8d43_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1c091833b:;
			{
				return jule::Any(_1ad5d9184_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c09183b3:;
			{
				return jule::Any(_1ad5d94c5_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1c091843a:;
			{
				return jule::Any(_1ad5dadcd_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c09184b2:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1c0917967;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1ad5db21e_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1c0918539:;
			{
				return jule::Any(_1ad5db21e_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c09185b1:;
			{
				return jule::Any(_1ad5db21e_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_1c0917967:;
	};
	jule::Ptr<_1ac9b2a47_Expr> _11327_expr = _1ad601531_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_1ad5d3458_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1ad5de079_build(_1ad5d218d_scopeParser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _114026_tokens, jule::Ptr<_1ac9bd811_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ad5d1ba4_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1ad5d30e5_isLastSt(_self_))) && (!(_1ad5d2d5e_finished(_self_))))) {
		{
			jule::Ptr<_1ad5d17ec_stmt> _11488_st = _1ad5d3d0a_next(_self_);;
			jule::Any _11498_data = _1ad5ddc16_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1ac9bd1a1_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac9bd1a1_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1ad5d2ac8_stopped(_self_)) {
				goto _iter_end_1c0925810;
			};
		}
	_iter_next_1c0925810:;
	}
	_iter_end_1c0925810:;;
}








inline jule::Bool _1ad5deab3_exprBuilder_eq(_1ad5deab3_exprBuilder *_self_, _1ad5deab3_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1ad5e02bc_pushErr(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1ad600d7c_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1ad5e0630_pushSuggestion(_1ad5deab3_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1ad6011e0_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1ac9b363b_TupleExpr> _1ad5e0971_buildTuple(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _2331_parts) {
	jule::Ptr<_1ac9b363b_TupleExpr> _247_tuple = jule::new_ptr<_1ac9b363b_TupleExpr>(_1ac9b363b_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9b2a47_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c094abcb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad5e9d65_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1c094abcb:;
			++it;
			goto _iter_begin_1c094abcb;
		}
		_iter_end_1c094abcb:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1ac9b39d2_LitExpr> _1ad5e0cb2_buildLit(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _3324_token) {
	return jule::new_ptr<_1ac9b39d2_LitExpr>(_1ac9b39d2_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1ad5e1444_buildSingle(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1c094ce53:;
			{
				return jule::Any(_1ad5e0cb2_buildLit(_self_, _4431_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1c094ceca:;
			{
				return jule::Any(jule::new_ptr<_1ac9b4ecd_VariadicExpr>(_1ac9b4ecd_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1c094d041:;
			{
				return jule::Any(_1ad5eb21d_buildIdentExpr(&(_4431_token)), &__jule_any_type42);;
			}
		}
		_match_end_1c094cd87:;
	};
	_1ad5e02bc_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac9b4362_IdentExpr> _1ad5e1785_buildBindIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1ad5e02bc_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad5e02bc_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9b4362_IdentExpr> _757_expr = _1ad5eb21d_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1ac9b4b04_UnaryExpr> _1ad5e1ac6_buildUnary(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8030_tokens) {
	jule::Ptr<_1abc2ba81_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1ad5e02bc_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1abc2c2bd_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1ad5e02bc_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1ac9b4b04_UnaryExpr>(_1ac9b4b04_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1ac9b5b5a_SubIdentExpr> _1ad5e1e17_buildObjSubIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1abc2ba81_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac9b5b5a_SubIdentExpr>(_1ac9b5b5a_SubIdentExpr{._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1ac9b5781_NamespaceExpr> _1ad5e2258_buildNamespace(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _11635_tokens) {
	jule::Ptr<_1ac9b5781_NamespaceExpr> _1177_ns = jule::new_ptr<_1ac9b5781_NamespaceExpr>(_1ac9b5781_NamespaceExpr{._field_Namespace=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1ad5e02bc_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1ad5e02bc_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1ad5e02bc_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1ad5e02bc_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1ad5e02bc_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad5e02bc_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad5e2599_buildType(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_1abc4259c_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1ad5e02bc_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1ad5e02bc_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1ad5e28da_buildSubIdent(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1abc2ba81_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1c0965630:;
			{
				return jule::Any(_1ad5e1e17_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1c0965c5c:;
			{
				return jule::Any(_1ad5e2258_buildNamespace(_self_, _16434_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c0965cc3:;
			{
				return jule::Any(_1ad5e2599_buildType(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1c0965b3b:;
	};
	if (_1ad5eb8b1_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1ad5e2599_buildType(_self_, _16434_tokens), &__jule_any_type92);;
	};
	_1ad5e02bc_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1ac9b4ecd_VariadicExpr> _1ad5e2c2b_buildVariadic(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _18633_tokens) {
	jule::Ptr<_1abc2ba81_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac9b4ecd_VariadicExpr>(_1ac9b4ecd_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1ac9b2d11_RangeExpr> _1ad5e306c_buildBetweenParentheses(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1ad5e02bc_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1ac9b2d11_RangeExpr>(_1ac9b2d11_RangeExpr{._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1ac9b53a7_CastExpr> _1ad5e33ad_tryBuildCast(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c096b713:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c096c2a2:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1c096b713;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c096c68c:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1c096c58d:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1c096b713;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1abc2ba81_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1ac9b53a7_CastExpr> _2418_cast = jule::new_ptr<_1ac9b53a7_CastExpr>(_1ac9b53a7_CastExpr{._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1ad5e02bc_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1ad5e02bc_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_1abc4259c_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1ad5e02bc_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						_1ad5eda4a_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1c096b713:;
			++it;
			_2097_i++;
			goto _iter_begin_1c096b713;
		}
		_iter_end_1c096b713:;
	};
	return nullptr;;
}



inline void _1ad5e37cb_pushArg(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _28152_tokens, jule::Ptr<_1abc2ba81_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1ad5e9d65_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _1ad5e3b1c_buildArgs(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _29611_args = nullptr;;
	jule::I32 _2977_last = 0LL;;
	jule::I32 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c097a2b0:;
		if (it != expr_end) {
			jule::I32 _3007_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c097b02a:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c097b415:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1c097b316:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1c097a2b0;
				};
				_1ad5e37cb_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1c097a2b0:;
			++it;
			_3007_i++;
			goto _iter_begin_1c097a2b0;
		}
		_iter_end_1c097a2b0:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1ad5e37cb_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1ad5e37cb_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1ac9b6771_FnCallExpr> _1ad5e4414_buildFnCall(_1ad5deab3_exprBuilder* _self_, jule::Ptr<_1abc2ba81_Token>* _35632_token, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _35687_args) {
	return jule::new_ptr<_1ac9b6771_FnCallExpr>(_1ac9b6771_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1ad5e9d65_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1ad5e3b1c_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1ad5e4755_buildParenthesesRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _36442_tokens) {
	jule::Ptr<_1abc2ba81_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1ac9b53a7_CastExpr> _3678_expr = _1ad5e33ad_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token __jule_assign_result = _1ad5edd14_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad5e306c_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type104);;
	};
	if (_1ad5eb8b1_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1ad5e2599_buildType(_self_, _36442_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1ad5e4414_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1ac9b3dab_UnsafeExpr> _1ad5e4a96_buildUnsafeExpr(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _38635_tokens) {
	jule::Ptr<_1abc2ba81_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I32 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3907_rangeTokens = _1ad5eda4a_range(&(_3897_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac9b3dab_UnsafeExpr>(_1ac9b3dab_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad5e4dd7_buildAnonFn(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _40132_tokens) {
	jule::Ptr<_1ac9c04a0_FnDecl> _4027_f = _1ad60701a_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1ac9c0846_IsAnon(_4027_f.ptr())))) {
		_1ad5e02bc_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1ad5e5228_buildUnsafe(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c0984b38:;
			{
				return jule::Any(_1ad5e4dd7_buildAnonFn(_self_, _41032_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_1c0983ebc:;
			{
				return jule::Any(_1ad5e4a96_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1c098441d:;
	};
}



inline void _1ad5e5646_pushRangeLitPart(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _42036_part, jule::Ptr<_1abc2ba81_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5e5987_getBraceRangeLitExprParts(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _43711_parts = nullptr;;
	jule::I32 _4397_last = 0LL;;
	jule::I32 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c09883bc:;
		if (it != expr_end) {
			jule::I32 _4427_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c0989137:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c0989522:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1c0989423:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1c09883bc;
				};
				_1ad5e5646_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1c09883bc:;
			++it;
			_4427_i++;
			goto _iter_begin_1c09883bc;
		}
		_iter_end_1c09883bc:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1ad5e5646_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1ad5e5646_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1ac9b7266_FieldExprPair> _1ad5e5cc8_buildFieldExprPair(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9b7266_FieldExprPair> _4787_pair = jule::new_ptr<_1ac9b7266_FieldExprPair>(_1ac9b7266_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1ad5e9d65_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e6119_buildStructLitExpr(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _48639_tokens) {
	jule::Ptr<_1abc2ba81_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*_4877_token.alloc)._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1ac9b2a47_Expr>(_1ac9b2a47_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ad5e5cc8_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type81)});;
		};
	};
	return _1ad5e9d65_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _1ad5e645a_buildStructLitExprs(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _5027_parts = _1ad5e5987_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9b2a47_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0992cbc:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac9b2a47_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1ad5e6119_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1c0992cbc:;
			++it;
			goto _iter_begin_1c0992cbc;
		}
		_iter_end_1c0992cbc:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1ac9b7a91_StructLit> _1ad5e679b_buildTypedStructLiteral(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _51443_tokens) {
	jule::I32 _5157_i = 0LL;;
	jule::Ptr<_1abc4259c_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1ad5e02bc_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1abc2ba81_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1ad5e02bc_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1ac9b7a91_StructLit>(_1ac9b7a91_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1ad5e645a_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e6adc_buildBraceLitPart(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _53914_r;
	({
		__jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token __jule_assign_result = _1ad5eab8a_splitDelim(_53838_tokens, static_cast<jule::U32>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1ac9b2a47_Expr>(_1ac9b2a47_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1ac9b8872_KeyValPair>(_1ac9b8872_KeyValPair{._field_Key=_1ad5e9d65_buildFromTokens(_self_, _5397_l), ._field_Val=_1ad5e9d65_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type82)});;
	};
	return _1ad5e9d65_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1ac9b8047_BraceLit> _1ad5e6e2d_buildBraceLit(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _55534_tokens) {
	jule::Ptr<_1ac9b8047_BraceLit> _5567_lit = jule::new_ptr<_1ac9b8047_BraceLit>(_1ac9b8047_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _5617_parts = _1ad5e5987_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9b2a47_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c099ca30:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad5e6adc_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1c099ca30:;
			++it;
			goto _iter_begin_1c099ca30;
		}
		_iter_end_1c099ca30:;
	};
	return _5567_lit;;
}



inline jule::Any _1ad5e726e_buildBraceRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _5757_exprTokens;
	jule::I32 _57519_rangeN;
	({
		__jule_tuple_sx_1abc2ba81_Token__jule_tuple_int __jule_assign_result = _1ad5eb4d7_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1c099ce92:;
			{
				return jule::Any(_1ad5e6e2d_buildBraceLit(_self_, _57436_tokens), &__jule_any_type111);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1c099e515:;
			{
				_1ad5e02bc_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c099e45a:;
	};
	jule::Ptr<_1abc2ba81_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1ad5e96d3_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1c09a2e53:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I32 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1abc2ba81_Token>> _5979_rangeTokens = _1ad5eda4a_range(&(_5969_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57436_tokens);;
					jule::Ptr<_1ac9b6771_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1ac9b6771_FnCallExpr>();;
					if (_1ac9b6dae_Ignored(_5989_model.ptr())) {
						_1ad5e02bc_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*_5989_model.alloc)._field_Exception=_1ad602026_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1c09a1eb8:;
				{
					_1ad5e02bc_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c09a2408:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c09a75b7:;
			{
				return _1ad5e5228_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c09a762d:;
			{
				return jule::Any(_1ad5e4dd7_buildAnonFn(_self_, _57436_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c09a7694:;
			{
				return jule::Any(_1ad5e679b_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1c09a25b2:;
			{
				_1ad5e02bc_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c09a6907:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad5e75b0_getEnumerableParts(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _6287_parts;
	jule::Slice<_1a6a6bde3_Log> _62814_errors;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(&(_62638_tokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1ac9b909d_SliceExpr> _1ad5e7901_buildSlice(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _63330_tokens) {
	jule::Ptr<_1ac9b909d_SliceExpr> _6347_slc = jule::new_ptr<_1ac9b909d_SliceExpr>(_1ac9b909d_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _6397_parts = _1ad5e75b0_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9b2a47_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c09ac4ce:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1c09ac4ce;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9b2a47_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad5e9d65_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1c09ac4ce:;
			++it;
			goto _iter_begin_1c09ac4ce;
		}
		_iter_end_1c09ac4ce:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1ac9b9a0a_IndexingExpr> _1ad5e7da7_buildIndexing(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6567_tokens, jule::Ptr<_1abc2ba81_Token> _65636_errorToken) {
	jule::Ptr<_1abc2ba81_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _6637_expr = _1ad5e9d65_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _6677_index = _1ad5e9d65_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac9b9a0a_IndexingExpr>(_1ac9b9a0a_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1ac9ba16a_SlicingExpr> _1ad5e84c3_buildSlicing(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _67967_start, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6808_to, jule::Ptr<_1abc2ba81_Token>* _68034_errorToken, jule::Ptr<_1abc2ba81_Token> _68065_end) {
	jule::Ptr<_1ac9ba16a_SlicingExpr> _6817_slc = jule::new_ptr<_1ac9ba16a_SlicingExpr>(_1ac9ba16a_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1ad5e9d65_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_To=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1ad5e9d65_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*_6817_slc.alloc)._field_To=_1ad5e9d65_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1ad5e8814_buildBracketRange(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _69537_tokens) {
	jule::Ptr<_1abc2ba81_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6977_exprTokens;
	jule::I32 _69719_rangeN;
	({
		__jule_tuple_sx_1abc2ba81_Token__jule_tuple_int __jule_assign_result = _1ad5eb4d7_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1ad5e7901_buildSlice(_self_, _69537_tokens), &__jule_any_type97);;
	} else if ((_69719_rangeN > 0LL)) {
		_1ad5e02bc_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _71318_to;
	({
		__jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token __jule_assign_result = _1ad5eab8a_splitDelim(&(_7127_splitTokens), static_cast<jule::U32>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1ad5e84c3_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1ad5e7da7_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type107);;
}



inline jule::Any _1ad5e8b55_buildExclRight(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _72035_tokens) {
	jule::Ptr<_1abc2ba81_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1ad5e96d3_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c09ba102:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1ac9b6771_FnCallExpr>()))._field_Exception=jule::new_ptr<_1ac9bd811_ScopeTree>(_1ac9bd811_ScopeTree{._field_Parent=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1ac9bd1a1_Stmt>(nullptr), ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1c09ba4dc:;
	};
	_1ad5e02bc_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad5e8e96_buildData(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c09bbc08:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c09bbc6e:;
			{
				return _1ad5e1444_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c09bbcd5:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1ad5e1785_buildBindIdent(_self_, _73830_tokens), &__jule_any_type42);;
				};
			}
		}
		_match_end_1c09bbac6:;
	};
	jule::Ptr<_1abc2ba81_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1ad5e2c2b_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type79);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1abc2c2bd_IsUnaryOp((*_7507_token.alloc)._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*_7507_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1ad5e2599_buildType(_self_, _73830_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1ad5e1ac6_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type91);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1c09c1a76:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1abc2ba81_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1c09c19ee;
						};
					};
					jule::Ptr<_1abc2ba81_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1c09c19ee;
					};
					return jule::Any(_1ad5e2599_buildType(_self_, _73830_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1c09c19ee:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1c09c4bab:;
			{
				return _1ad5e28da_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1c09c4c22:;
			{
				return _1ad5e8b55_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1c09c4c88:;
			{
				return _1ad5e4755_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1c09c4cee:;
			{
				return _1ad5e726e_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c09c4d65:;
			{
				return _1ad5e8814_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1c09c4b45:;
	};
	_1ad5e02bc_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ad5e9392_buildBinary(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _80732_tokens, jule::I32 _80757_i) {
	jule::Ptr<_1abc2ba81_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1ad5ea1ea_isTypeOp(&((*(_8087_op))._field_Id)) && _1ad5ea508_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1ad5e2599_buildType(_self_, _80732_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1ad5e02bc_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad5e0630_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1ac9b6111_BinaryExpr>(_1ac9b6111_BinaryExpr{._field_Left=_1ad5e9d65_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1ad5e9d65_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type112);;
}



inline jule::Any _1ad5e96d3_build(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1ad5e2599_buildType(_self_, _83226_tokens), &__jule_any_type92);;
	};
	jule::I32 _8363_i = _1ad5eae54_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1ad5e8e96_buildData(_self_, _83226_tokens);;
	};
	return _1ad5e9392_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1ad5e9a24_buildKind(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _8447_parts;
	jule::Slice<_1a6a6bde3_Log> _84414_errors;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(_84330_tokens, static_cast<jule::U32>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1ad5e0971_buildTuple(_self_, &(_8447_parts)), &__jule_any_type83);;
	};
	return _1ad5e96d3_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad5e9d65_buildFromTokens(_1ad5deab3_exprBuilder* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1ad5e9a24_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1ac9b2a47_Expr>(_1ac9b2a47_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1ad6006c8_stop(_1ad600398_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ad60095e_stopped(_1ad600398_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ad600d7c_pushErr(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ad5ee980_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1ad6011e0_pushSuggestion(_1ad600398_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1ad5eed26_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad601531_buildExpr(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _17831_tokens) {
	return _1ad5e9d65_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1abc419b9_Directive> _1ad601872_buildDirective(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1ad600d7c_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1ad600d7c_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1abc419b9_Directive>(_1abc419b9_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1ad601b2a_pushDirective(_1ad600398_parser* _self_, jule::Ptr<_1abc419b9_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a02348:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c0a02348:;
			++it;
			goto _iter_begin_1c0a02348;
		}
		_iter_end_1c0a02348:;
	};
	{ jule::Slice<jule::Ptr<_1abc419b9_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad602026_buildScope(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _21032_tokens, jule::Ptr<_1abc2ba81_Token> _21061_end) {
	jule::Ptr<_1ac9bd811_ScopeTree> _2117_s = _1ad5d0576_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1ad5d218d_scopeParser _2137_sp = _1ad5d218d_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ad5d17ec_stmt>>(nullptr), ._field_pos=0};;
	_1ad5de079_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad6024cc__buildType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ad611552_typeBuilder _2227_tb = _1ad611552_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1ad614566_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad602983_buildType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abc2ba81_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1abc4259c_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad6024cc__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1ad600d7c_pushErr(_self_, _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad602cc4_buildTypeAliasDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ad600d7c_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9c530c_TypeAliasDecl> _2487_tad = jule::new_ptr<_1ac9c530c_TypeAliasDecl>(_1ac9c530c_TypeAliasDecl{._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
	jule::Ptr<_1abc2ba81_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_, _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*_2527_token.alloc)._field_Id != static_cast<jule::U32>(8LLU))) {
		_1ad600d7c_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1abc4259c_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1ad600d7c_pushErr(_self_, (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1ac9a5e25_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1ad603137_buildVarTypeAndExpr(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c165a_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _28264_tokens) {
	jule::I32 _2837_i = 0LL;;
	jule::Ptr<_1abc2ba81_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1ad600d7c_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1abc4259c_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*_2847_tok.alloc)._field_Id != static_cast<jule::U32>(71LLU))) {
		_1ad600d7c_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1ad600d7c_pushErr(_self_, _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1ad601531_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1ad60349a_buildVarCommon(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c165a_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*(*((*(_31536_v))))._field_Token.alloc)._field_Kind;
	(*((*(_31536_v))))._field_Public=_1ac9a5e25_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1ad603137_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1ad60380d_buildVarBegin(_1ad600398_parser* _self_, jule::Ptr<_1ac9c165a_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _33157_tokens) {
	jule::Ptr<_1abc2ba81_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1c0a1dc49:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1c0a1d908;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c0a1d908:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1ad600d7c_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1c0a1d96e:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1c0a1d5ea:;
			{
				(*(_33157_tokens))=nullptr;
				_1ad600d7c_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c0a1d892:;
	};
}



inline jule::Ptr<_1ac9c165a_VarDecl> _1ad603b4e_buildVar(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _35929_tokens) {
	jule::Ptr<_1ac9c165a_VarDecl> _3607_v = jule::new_ptr<_1ac9c165a_VarDecl>(_1ac9c165a_VarDecl{._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	_1ad60380d_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1ad60349a_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1ac9ba91d_GenericDecl> _1ad603e90_buildGeneric(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _37834_tokens) {
	jule::Ptr<_1ac9ba91d_GenericDecl> _3797_g = jule::new_ptr<_1ac9ba91d_GenericDecl>(_1ac9ba91d_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1ac9ba467_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_3797_g.alloc)._field_Ident=(*(*(_3797_g))._field_Token.alloc)._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1ad600d7c_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1ad600d7c_pushErr(_self_, (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _3978_parts;
		jule::Slice<_1a6a6bde3_Log> _39715_errors;
		({
			__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(&(_3968_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1ac9ba467_Constraint>(_1ac9ba467_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0a2bb8b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _40316_part = *it;
				{
					jule::I32 _4049_i = 0LL;;
					jule::Ptr<_1abc4259c_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1ad600d7c_pushErr(_self_, _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c0a2bb8b:;
				++it;
				goto _iter_begin_1c0a2bb8b;
			}
			_iter_end_1c0a2bb8b:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _1ad60438b_buildGenerics(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _41535_tokens, jule::Ptr<_1abc2ba81_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _4217_parts;
	jule::Slice<_1a6a6bde3_Log> _42114_errors;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(_41535_tokens, static_cast<jule::U32>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9ba91d_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a31872:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1ad603e90_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1c0a31872:;
			++it;
			goto _iter_begin_1c0a31872;
		}
		_iter_end_1c0a31872:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1ac9be04d_ParamDecl> _1ad6046cc_buildSelfParam(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1ac9be04d_ParamDecl> _4407_param = jule::new_ptr<_1ac9be04d_ParamDecl>(_1ac9be04d_ParamDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1ad600d7c_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1a6a5cb3c_Builder _4527_ident = static__1a6a5d489_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1a6a5db1b_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_1ad600d7c_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1a6a5db1b_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1ad600d7c_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1a6a5e49b_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1ad604aea_paramTypeBegin(_1ad600398_parser* _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1abc2ba81_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1ad600d7c_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1c0a39cdc;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1c0a39cdc:;
	}
	_iter_end_1c0a39cdc:;;
}



inline void _1ad604e5d_buildParamType(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _49065_tokens) {
	jule::I32 _4917_i = 0LL;;
	_1ad604aea_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ad6052c1_buildParamBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9be04d_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _50364_tokens) {
	jule::Ptr<_1abc2ba81_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ad604e5d_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1ad604e5d_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1ac9be04d_ParamDecl> _1ad605612_buildParam(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _52331_tokens) {
	jule::Ptr<_1ac9be04d_ParamDecl> _5247_param = jule::new_ptr<_1ac9be04d_ParamDecl>(_1ac9be04d_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1ad600d7c_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*(*(_5247_param))._field_Token.alloc)._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1ad600d7c_pushErr(_self_, _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*(*(_5247_param))._field_Token.alloc)._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ad604e5d_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1ad6052c1_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1ad6058ba_checkParams(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a4a69e:;
		if (it != expr_end) {
			jule::Ptr<_1ac9be04d_ParamDecl> _56715_param = *it;
			{
				if ((_1ac9be405_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1c0a4a69e;
				};
				if (((*_56715_param.alloc)._field_Token == nullptr)) {
					_1ad600d7c_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*_56715_param.alloc)._field_Kind=jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1c0a4a69e:;
			++it;
			goto _iter_begin_1c0a4a69e;
		}
		_iter_end_1c0a4a69e:;
	};
}



inline jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> _1ad605cb6_buildParams(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _5877_parts;
	jule::Slice<_1a6a6bde3_Log> _58714_errs;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(_58633_tokens, static_cast<jule::U32>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1ac9be04d_ParamDecl> _5958_param = _1ad6046cc_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1ac9be405_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a52277:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1c0a52277;
				};
				jule::Ptr<_1ac9be04d_ParamDecl> _6068_param = _1ad605612_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1c0a52277:;
			++it;
			goto _iter_begin_1c0a52277;
		}
		_iter_end_1c0a52277:;
	};
	_1ad6058ba_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool _1ad6061b2_buildMultiRetType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _61639_tokens, jule::I32* _61669_i) {
	__jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1abc45490_RetTypeDecl>(_1abc45490_RetTypeDecl{._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _6267_rangeTokens = _1ad5eda4a_range(_61669_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _6287_parts;
	jule::Slice<_1a6a6bde3_Log> _62814_errs;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(&(_6267_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc2ba81_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc2ba81_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a5d1b7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1c0a5d1b7;
				};
				jule::Ptr<_1abc2ba81_Token> _6408_token = _63615_part[0LL];;
				jule::I32 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1ad600d7c_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1c0a5d1b7;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1abc2ba81_Token> _6579_newToken = jule::new_ptr<_1abc2ba81_Token>((*_6408_token.alloc));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc2ba81_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc2ba81_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1abc4259c_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1ad600d7c_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1c0a5d1b7:;
			++it;
			goto _iter_begin_1c0a5d1b7;
		}
		_iter_end_1c0a5d1b7:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1abc43cc9_TupleTypeDecl>(_1abc43cc9_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool _1ad6065ad_buildRetType(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _68734_tokens, jule::I32* _68764_i) {
	__jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1abc45490_RetTypeDecl>(_1abc45490_RetTypeDecl{._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1abc2ba81_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c0a67259:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1c0a672d1:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1c0a67347:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1ad600d7c_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c0a68d3d:;
						{
							({
								__jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad6061b2_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c0a6936b:;
						{
							_1ad600d7c_pushErr(_self_, _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1c0a692c2:;
				};
				({
					__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c0a671e3:;
	};
	((*(_68764_i)))++;
	_1ad600d7c_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad606a64_buildFnPrototype(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1ac9c04a0_FnDecl> _7277_f = jule::new_ptr<_1ac9c04a0_FnDecl>(_1ac9c04a0_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1abc45490_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ad600d7c_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*(*(_7277_f))._field_Token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*_7277_f.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1abc2ba81_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7737_genericsTokens = _1ad5eda4a_range(_72668_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*_7277_f.alloc)._field_Generics=_1ad60438b_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1ad600d7c_pushErr(_self_, (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7837_paramsToks = _1ad5eda4a_range(_72668_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*_7277_f.alloc)._field_Params=_1ad605cb6_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1abc2ba81_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*_7277_f.alloc)._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*_7277_f.alloc)._field_Public=_1ac9a5e25_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1abc45490_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ad6065ad_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60701a_buildFn(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I32 _8047_i = 0LL;;
	jule::Ptr<_1ac9c04a0_FnDecl> _8057_f = _1ad606a64_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8217_blockTokens = _1ad5eda4a_range(&(_8047_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*_8057_f.alloc)._field_Scope=_1ad602026_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*_8057_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1ad60737d_buildBindUseDecl(_1ad600398_parser* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1ad600d7c_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1abc2ba81_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1abc2cbd6_IsStr((*_8417_token.alloc)._field_Kind)))) || _1abc2ce6c_IsRawStr((*_8417_token.alloc)._field_Kind))) {
		_1ad600d7c_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1ad6076e1_parseUseDecl(_1ad600398_parser* _self_, jule::Ptr<_1ac9c6660_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1ad60737d_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1abc2ba81_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_1abc2cbd6_IsStr((*_8567_token.alloc)._field_Kind)))) || _1abc2ce6c_IsRawStr((*_8567_token.alloc)._field_Kind))) {
		_1ad600d7c_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*_8567_token.alloc)._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1ad600d7c_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1abc2cbd6_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1ad600d7c_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1ac9c6660_UseDecl> _1ad607adc_buildUseDecl(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_1ac9c6660_UseDecl> _8817_decl = jule::new_ptr<_1ac9c6660_UseDecl>(_1ac9c6660_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Alias=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_1ad600d7c_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_1ad6076e1_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad607ed8_buildTypeEnumItemKind(jule::Ptr<_1ad600398_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _89456_tokens) {
	jule::I32 _8957_braceN = 0LL;;
	jule::I32 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_1abc2ba81_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c0a8e160:;
					{
						(_8957_braceN)++;
						goto _iter_next_1c0a8d5e3;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c0a8e490:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_1c0a8e1d7:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_1c0a8d5e3;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _91413_kindTokens = nullptr;;
				if (((*_8984_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I32 _9209_j = 0LL;;
				jule::Ptr<_1abc4259c_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_1ad600d7c_pushErr(_self_, _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_1c0a8d5e3:;
	}
	_iter_end_1c0a8d5e3:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>> _1ad608329_buildTypeEnumItems(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9c8002_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_1abc2ba81_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_1ac9c8002_TypeEnumItemDecl> _9368_item = jule::new_ptr<_1ac9c8002_TypeEnumItemDecl>(_1ac9c8002_TypeEnumItemDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1ad600d7c_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1c0a94462;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_1ad607ed8_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_1c0a94462:;
	}
	_iter_end_1c0a94462:;;
	return _9327_items;;
}



inline jule::Ptr<_1ac9c8662_TypeEnumDecl> _1ad60866a_buildTypeEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _95539_tokens) {
	jule::I32 _9567_i = 1LL;;
	jule::Ptr<_1ac9c8662_TypeEnumDecl> _9577_e = jule::new_ptr<_1ac9c8662_TypeEnumDecl>(_1ac9c8662_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Ident=(*(*(_9577_e))._field_Token.alloc)._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9677_itemTokens = _1ad5eda4a_range(&(_9567_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_1ac9a5e25_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_1ad608329_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_1ac9b2a47_Expr> _1ad608a66_buildEnumItemExpr(jule::Ptr<_1ad600398_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _98252_tokens) {
	jule::I32 _9837_braceN = 0LL;;
	jule::I32 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_1abc2ba81_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c0aa2816:;
					{
						(_9837_braceN)++;
						goto _iter_next_1c0aa1c99;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c0aa2b46:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_1c0aa288d:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_1c0aa1c99;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _100213_exprTokens = nullptr;;
				if (((*_9864_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _1ad601531_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_1c0aa1c99:;
	}
	_iter_end_1c0aa1c99:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> _1ad608da7_buildEnumItems(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9c6b16_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_1abc2ba81_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_1ac9c6b16_EnumItemDecl> _10198_item = jule::new_ptr<_1ac9c6b16_EnumItemDecl>(_1ac9c6b16_EnumItemDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1ad600d7c_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*(*(_10198_item))._field_Token.alloc)._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_1c0aa66e9;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1ad600d7c_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1c0aa66e9;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1ad600d7c_pushErr(_self_, _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1c0aa66e9;
			};
			(*_10198_item.alloc)._field_Expr=_1ad608a66_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_1c0aa66e9:;
	}
	_iter_end_1c0aa66e9:;;
	return _10157_items;;
}



inline jule::Ptr<_1ac9c76c7_EnumDecl> _1ad6091e8_buildEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9c76c7_EnumDecl> _10567_e = jule::new_ptr<_1ac9c76c7_EnumDecl>(_1ac9c76c7_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Ident=(*(*(_10567_e))._field_Token.alloc)._field_Kind;
	jule::I32 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1ad6006c8_stop(_self_);
			_1ad600d7c_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10817_itemTokens = _1ad5eda4a_range(&(_10647_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_1ac9a5e25_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_1ad608da7_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _1ad609539_buildNodeEnumDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1ad60866a_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_1ad6091e8_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_1ac9c892b_FieldDecl> _1ad60987a_buildField(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _110531_tokens) {
	jule::Ptr<_1ac9c892b_FieldDecl> _11067_f = jule::new_ptr<_1ac9c892b_FieldDecl>(_1ac9c892b_FieldDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_1ad600d7c_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_, (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*(*(_11067_f))._field_Token.alloc)._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_1ad600d7c_pushErr(_self_, _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1ad600d7c_pushErr(_self_, _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I32 _11347_i = 0LL;;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_1abc2ba81_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ad600d7c_pushErr(_self_, _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_1ad600d7c_pushErr(_self_, _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_1ad601531_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_1ac9a5e25_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>> _1ad609bbb_buildStructDeclFields(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _11567_stmts = _1ad5d1ba4_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ac8551:;
		if (it != expr_end) {
			jule::Ptr<_1ad5d17ec_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_1ac9c892b_FieldDecl> _11598_f = _1ad60987a_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_1c0ac8551:;
			++it;
			goto _iter_begin_1c0ac8551;
		}
		_iter_end_1c0ac8551:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_1ac9c9322_StructDecl> _1ad60a00c_buildStructDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11717_i = 1LL;;
	jule::Ptr<_1ac9c9322_StructDecl> _11727_s = jule::new_ptr<_1ac9c9322_StructDecl>(_1ac9c9322_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*_11727_s.alloc)._field_Ident=(*(*(_11727_s))._field_Token.alloc)._field_Kind;
	jule::Ptr<_1abc2ba81_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _11877_genericsTokens = _1ad5eda4a_range(&(_11717_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_1ad60438b_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _11977_bodyTokens = _1ad5eda4a_range(&(_11717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_1ac9a5e25_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_1ad609bbb_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _1ad60a2b5_checkMethodReceiver(_1ad600398_parser* _self_, jule::Ptr<_1ac9c04a0_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _1ac9be405_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_1ad600d7c_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_1ad600d7c_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1ac9be04d_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_1ac9be405_IsSelf(_12253_param.ptr())))) {
		_1ad600d7c_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ad60a628_buildTraitBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c9a5e_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _12337_stmts = _1ad5d1ba4_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ad9e36:;
		if (it != expr_end) {
			jule::Ptr<_1ad5d17ec_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_1c0ad9e36;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1c0addb3d:;
						{
							jule::Ptr<_1ac9c04a0_FnDecl> _12419_f = _1ad60701a_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_1c0adb289;
							};
							_1ad60a2b5_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_1ad600d7c_pushErr(_self_, (*(_12419_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_1c0adaa80:;
						{
							jule::I32 _12519_i = 0LL;;
							jule::Ptr<_1abc4259c_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_1c0adb289;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_1ad600d7c_pushErr(_self_, _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_1c0adb289:;
				};
			}
			_iter_next_1c0ad9e36:;
			++it;
			goto _iter_begin_1c0ad9e36;
		}
		_iter_end_1c0ad9e36:;
	};
}



inline jule::Ptr<_1ac9c9a5e_TraitDecl> _1ad60a969_buildTraitDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9c9a5e_TraitDecl> _12697_t = jule::new_ptr<_1ac9c9a5e_TraitDecl>(_1ac9c9a5e_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad600d7c_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Ident=(*(*(_12697_t))._field_Token.alloc)._field_Kind;
	jule::I32 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _12787_bodyTokens = _1ad5eda4a_range(&(_12777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_1ad600d7c_pushErr(_self_, (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_1ac9a5e25_IsPub((*_12697_t.alloc)._field_Ident);
	_1ad60a628_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60acaa_buildBindFn(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac9c04a0_FnDecl> _12967_f = _1ad60701a_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_1ac9c165a_VarDecl> _1ad60b0eb_buildBindVar(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac9c165a_VarDecl> _13067_v = _1ad603b4e_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_1ad600d7c_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_1ac9c9322_StructDecl> _1ad60b43c_buildBindStruct(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac9c9322_StructDecl> _13197_s = _1ad60a00c_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0aed620:;
			if (it != expr_end) {
				jule::Ptr<_1ac9c892b_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_1c0aed620:;
				++it;
				goto _iter_begin_1c0aed620;
			}
			_iter_end_1c0aed620:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_1ac9c530c_TypeAliasDecl> _1ad60b77d_buildBindTypeAlias(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_1ac9c530c_TypeAliasDecl> _13337_t = _1ad602cc4_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_1ac9c6660_UseDecl> _1ad60babe_buildBindUse(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _1ad607adc_buildUseDecl(_self_, _134133_tokens, true);;
}



inline jule::Any _1ad60be10_buildBind(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _135231_tokens) {
	jule::Ptr<_1abc2ba81_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c0b046d1:;
			{
				return jule::Any(_1ad60acaa_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c0b0433a:;
			{
				return jule::Any(_1ad60b0eb_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1c0b043a1:;
			{
				return jule::Any(_1ad60b43c_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c0b04417:;
			{
				return jule::Any(_1ad60b77d_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_1c0b03cda:;
			{
				_1ad600d7c_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c0b042c4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac9c04a0_FnDecl> _1ad60c251_getMethod(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _137631_tokens) {
	jule::I32 _13777_i = 0LL;;
	jule::Ptr<_1abc2ba81_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1ad600d7c_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1ad600d7c_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*_13787_token.alloc)._field_Id != static_cast<jule::U32>(29LLU))) {
		_1ad600d7c_pushErr(_self_, _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ad60701a_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _1ad60c5b4_parseImplBody(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9ca1be_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _14067_stmts = _1ad5d1ba4_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b0c640:;
		if (it != expr_end) {
			jule::Ptr<_1ad5d17ec_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_1abc2ba81_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1c0b0d6c9:;
						{
							_1ad601b2a_pushDirective(_self_.ptr(), _1ad601872_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_1c0b0c640;
						}
					}
					_match_end_1c0b0d91b:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1c0b10027:;
						{
							jule::Ptr<_1ac9c165a_VarDecl> _14189_v = _1ad603b4e_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1c0b0eb5e:;
						{
							jule::Ptr<_1ac9c04a0_FnDecl> _14259_f = _1ad60c251_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_1ad60a2b5_checkMethodReceiver(_self_, &(_14259_f));
								_1ad60ceee_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_1c0b0da70:;
						{
							_1ad600d7c_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1c0b0c640;
						}
					}
					_match_end_1c0b0e037:;
				};
			}
			_iter_next_1c0b0c640:;
			++it;
			goto _iter_begin_1c0b0c640;
		}
		_iter_end_1c0b0c640:;
	};
}



inline jule::Ptr<_1ac9ca1be_Impl> _1ad60c905_buildImpl(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _143830_tokens) {
	jule::Ptr<_1abc2ba81_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_1ad600d7c_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14457_i = 1LL;;
	jule::Ptr<_1abc4259c_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1ad600d7c_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1ac9ca1be_Impl> _14567_ipl = jule::new_ptr<_1ac9ca1be_Impl>(_1ac9ca1be_Impl{._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_1c0b1b85d;
		};
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*_14567_ipl.alloc)._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c0b1b85d:;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _14947_bodyTokens = _1ad5eda4a_range(&(_14457_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_1ad6006c8_stop(_self_);
		_1ad600d7c_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_1ad600d7c_pushErr(_self_, _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_14567_ipl.alloc)._field_End=_143830_tokens[(_14457_i - 1LL)];
	_1ad60c5b4_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _1ad60cc46_buildNodeData(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _150935_tokens) {
	jule::Ptr<_1abc2ba81_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c0b21a0b:;
			{
				jule::Ptr<_1ac9c04a0_FnDecl> _15148_f = _1ad60701a_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1c0b22215:;
			{
				return jule::Any(_1ad603b4e_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c0b2227b:;
			{
				return jule::Any(_1ad602cc4_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1c0b21621:;
			{
				return _1ad609539_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1c0b21687:;
			{
				return jule::Any(_1ad60a00c_buildStructDecl(_self_, _150935_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1c0b216ed:;
			{
				return jule::Any(_1ad60a969_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1c0b21764:;
			{
				return jule::Any(_1ad60c905_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c0b217ca:;
			{
				return _1ad60be10_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_1c0b21324:;
			{
				_1ad600d7c_pushErr(_self_.ptr(), _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c0b215aa:;
	};
}



inline void _1ad60ceee_applyFnMeta(_1ad600398_parser* _self_, jule::Ptr<_1ac9c04a0_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ad60d2a7_applyMeta(_1ad600398_parser* _self_, _1abc4159b_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c0b283c5:;
			{
				jule::Ptr<_1ac9c165a_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1ac9c165a_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c0b2812d:;
			{
				jule::Ptr<_1ac9c04a0_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1ac9c04a0_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_1ad60ceee_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c0b2846e:;
			{
				jule::Ptr<_1ac9c9322_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1ac9c9322_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c0b2833c:;
	};
}



inline void _1ad60d560_pushUseDecl(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1ac9c6660_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9c6660_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1ad600d7c_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1ad6011e0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ad60d8a1_pushMetaNodes(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1c0b2ea19:;
			{
				;
				jule::Ptr<_1ac9c6660_UseDecl> _15848_decl = _1ad607adc_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_1ad60d560_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c0b2ea91:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1ac9c6660_UseDecl> _15899_decl = _1ad60babe_buildBindUse(_self_, (*(_158035_tokens)));;
					_1ad60d560_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1c0b2eb07:;
			{
				_1ad601b2a_pushDirective(_self_.ptr(), _1ad601872_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_1c0b2e909:;
	};
	return false;;
}



inline _1abc4159b_Node _1ad60dbe2_parseNode(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _160031_st) {
	_1abc4159b_Node _16017_node = _1abc4159b_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1ad60d8a1_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _1ad60cc46_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_1ad60d2a7_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ad600d7c_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _1ad60de9a_appendNode(jule::Ptr<_1ad600398_parser> _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_1abc4159b_Node _16287_node = _1ad60dbe2_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_1ad60095e_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1abc4159b_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _1ad60e473_removeRange(_1ad600398_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges) {
	jule::U32 _16353_close = _1ad5ee551_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_1abc2ba81_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_1c0b39c99;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_1c0b39c99;
		}
	_iter_next_1c0b39c99:;
	}
	_iter_end_1c0b39c99:;;
}



inline void _1ad60e891_pushWrongOrderCloseErr(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token>* _164639_t, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1c0b3c1a8:;
			{
				_1ad600d7c_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c0b3c230:;
			{
				_1ad600d7c_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1c0b3c296:;
			{
				_1ad600d7c_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c0b3c098:;
	};
}



inline void _1ad60ed69_pushRangeClose(_1ad600398_parser* _self_, jule::Ptr<_1abc2ba81_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges) {
	jule::I32 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1c0b402aa:;
				{
					_1ad600d7c_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1c0b40332:;
				{
					_1ad600d7c_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1c0b40398:;
				{
					_1ad600d7c_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c0b401de:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_1ad60e891_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_1ad60e473_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _1ad610122_checkRanges(_1ad600398_parser* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _167528_tokens) {
	jule::Slice<jule::I32> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b43676:;
		if (it != expr_end) {
			jule::I32 _16787_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c0b445ab:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c0b44644:;
						{
							_1ad60ed69_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1c0b446aa:;
						{
							_1ad60ed69_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c0b44721:;
						{
							_1ad60ed69_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_1c0b444e0:;
				};
			}
			_iter_next_1c0b43676:;
			++it;
			_16787_i++;
			goto _iter_begin_1c0b43676;
		}
		_iter_end_1c0b43676:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b46855:;
		if (it != expr_end) {
			jule::I32 _169310_i = *it;
			{
				jule::Ptr<_1abc2ba81_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c0b475d1:;
						{
							_1ad600d7c_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c0b47647:;
						{
							_1ad600d7c_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c0b476ad:;
						{
							_1ad600d7c_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c0b4734a:;
				};
			}
			_iter_next_1c0b46855:;
			++it;
			goto _iter_begin_1c0b46855;
		}
		_iter_end_1c0b46855:;
	};
}



inline void _1ad6103ca_parse(jule::Ptr<_1ad600398_parser> _self_, jule::Ptr<_1abc32636_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1abc40644_AST>(_1abc40644_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1ac9c6660_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1abc4159b_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1ad5deab3_exprBuilder>(_1ad5deab3_exprBuilder{._field_p=_self_});
	_1ad610122_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _17197_stmts = _1ad5d1ba4_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I32 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_1ad5d17ec_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*_17248_stmt.alloc)._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1c0b4b43c;
			};
			if ((!(_1a6a6dbe7_IsTopDirective((*((*_17248_stmt.alloc)._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1c0b4b43c;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc419b9_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad601872_buildDirective(_self_, (*_17248_stmt.alloc)._field_tokens); __jule_collection; }));
		}
	_iter_next_1c0b4b43c:;
	}
	_iter_end_1c0b4b43c:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_1ad60095e_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_1ad5d17ec_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_1ad60de9a_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_1c0b4e440:;
	}
	_iter_end_1c0b4e440:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ad600d7c_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1ad611b29_pushErr(_1ad611552_typeBuilder* _self_, jule::Ptr<_1abc2ba81_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1ad600d7c_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ad611e8c_pushSuggestion(_1ad611552_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1ad6011e0_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612223_buildNamespace(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc4259c_TypeDecl> _457_t = jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1abc4334a_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1abc4334a_NamespaceTypeDecl>(_1abc4334a_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Kind=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1ad611b29_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad611e8c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ad611b29_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad611e8c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad611e8c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ad611e8c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1ad6129c6_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type94);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _1ad6124a9_buildGenerics(_1ad611552_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _857_parts = _1ad612740_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1ad611b29_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc4259c_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b5e593:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_1abc4259c_TypeDecl> _948_t;
				({
					__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1ad611b29_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1c0b5e593:;
			++it;
			goto _iter_begin_1c0b5e593;
		}
		_iter_end_1c0b5e593:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ad612740_identGenerics(_1ad611552_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1abc2ba81_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1c0b63b2a:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1c0b63e5a:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1c0b63ba2:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c0b62cc2;
			};
		}
	_iter_next_1c0b62cc2:;
	}
	_iter_end_1c0b62cc2:;;
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1207_parts;
	jule::Slice<_1a6a6bde3_Log> _12014_errors;
	({
		__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5ee2ba_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad6129c6_buildIdent(_1ad611552_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1ad612223_buildNamespace(_self_);;
	};
	jule::Ptr<_1abc2ba81_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1abc42ba7_IdentTypeDecl> _1337_it = jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abc4259c_TypeDecl> _1397_itd = jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1ad6124a9_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ad611b29_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1abc42e71_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1abc42e71_SubIdentTypeDecl>(_1abc42e71_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1abc4259c_TypeDecl> _1587_ident = _1ad6129c6_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c0b6ead1:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1abc42ba7_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c0b68ed7:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1abc42e71_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1c0b6ea59:;
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612c5c_buildCppLink(_1ad611552_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1abc4259c_TypeDecl> _1777_t = _1ad6129c6_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1abc42ba7_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad612ee3_buildFn(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1ac9c04a0_FnDecl> _1847_f = _1ad606a64_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1ac9c0846_IsAnon(_1847_f.ptr())))) {
		_1ad611b29_pushErr(_self_, (*(_1847_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613279_buildPtr(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1abc440c6_PtrTypeDecl>(_1abc440c6_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1abc4259c_TypeDecl> _2157_elem = _1ad6142d0_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1abc440c6_PtrTypeDecl>(_1abc440c6_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613510_buildSptr(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abc4259c_TypeDecl> _2367_elem = _1ad6142d0_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1abc43647_SptrTypeDecl>(_1abc43647_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613796_buildSlc(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1abc4259c_TypeDecl> _2527_elem = _1ad6142d0_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1abc439cc_SlcTypeDecl>(_1abc439cc_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613a2c_buildArr(_1ad611552_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _2657_exprTokens = _1ad5eda4a_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1abc4259c_TypeDecl> _2717_elem = _1ad6142d0_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abc44868_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1abc44868_ArrTypeDecl>(_1abc44868_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1ac9b2a47_Expr>(nullptr)});;
	jule::Ptr<_1abc2ba81_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1ad601531_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad613cb3_buildMap(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _3027_keyTokens = _1ad5eda4a_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1ad611b29_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1abc450b6_MapTypeDecl> _3117_mapt = jule::new_ptr<_1abc450b6_MapTypeDecl>(_1abc450b6_MapTypeDecl{._field_Key=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1abc4259c_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_1abc4259c_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1ad611b29_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1abc4259c_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_assign_result = _1ad602983_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad614049_buildEnumerable(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ad611b29_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1ad613796_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ad613a2c_buildArr(_self_);;
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad6142d0_step(_1ad611552_typeBuilder* _self_) {
	jule::Ptr<_1abc2ba81_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1c07cc6b7:;
			{
				return _1ad6129c6_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c07ccaa2:;
			{
				return _1ad612c5c_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c07ccb18:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1abc4259c_TypeDecl> _3589_f = _1ad612ee3_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1ac9c04a0_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c07ccb7e:;
			{
				return _1ad612ee3_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c07ccbe5:;
			{
				return _1ad613279_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c07ccc6c:;
			{
				return _1ad613510_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c07ccce4:;
			{
				return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1abc43647_SptrTypeDecl>(_1abc43647_SptrTypeDecl{._field_Elem=_1ad613510_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1c07ccd6b:;
			{
				return _1ad614049_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1c07ccde3:;
			{
				return _1ad613cb3_buildMap(_self_);;
			}
		}
		_match_end_1c07cc73e:;
	};
	((*((*(_self_))._field_i)))++;
	_1ad611b29_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool _1ad614566_build(_1ad611552_typeBuilder* _self_) {
	__jule_tuple_x_1abc4259c_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1abc4259c_TypeDecl> _3897_root = _1ad6142d0_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ad610c8d_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1ace18244_CompileInfo_eq(_1ace18244_CompileInfo *_self_, _1ace18244_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1ace1a015_pushErr(_1ace19982_directiveEval* _self_, jule::Ptr<_1abc2ba81_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1a6a6c355_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1ace1a411_splitOperans(_1ace19982_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1abc2ba81_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c0801a3d:;
					{
						(_367_rangeN)++;
						goto _iter_next_1c08010ae;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c0801d6d:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1c0801ab5:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1c08010ae;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1c08010ae:;
	}
	_iter_end_1c08010ae:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1ace1a015_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1ace1a752_evalDirectiveIdent(_1ace19982_directiveEval* _self_, jule::Str _6430_ident) {
	return (_1ace18e8c_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _1ace1aa93_evalDirectivePart(_1ace19982_directiveEval* _self_, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_1ace1a015_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _1ace1a752_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _1ace1ad29_eval(_1ace19982_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1ace1a015_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _967_logicalOrParts = _1ace1a411_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(*(_self_))._field_d.alloc)._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0809a35:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> _1038_logicalAndParts = _1ace1a411_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c080b5e7:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1abc2ba81_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_1abc2ba81_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1abc2ba81_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1ace1a015_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _1ace1aa93_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_1c080b5e7:;
						++it;
						goto _iter_begin_1c080b5e7;
					}
					_iter_end_1c080b5e7:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_1c0809a35:;
			++it;
			goto _iter_begin_1c0809a35;
		}
		_iter_end_1c0809a35:;
	};
	return _947_result;;
}







inline jule::Bool _1ace172a9_isPassFileAnnotation(_1ad615798_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_1a8e52b12_Base(_5136_p);
	jule::I32 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _1a8e5257e_Ext(_5136_p).len()));;
	if (_1a8e46364_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_1ace18e8c_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I32 _747_i = _1a8e48be6_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdebd1b_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdec0e6_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_1a8e48be6_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdebd1b_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdec0e6_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdec0e6_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdebd1b_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acdebd1b_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_1ad615798_Importer> static__1ad615bc7_New(_1ace18244_CompileInfo _4516_info) {
	jule::Ptr<_1ad615798_Importer> _467_imp = jule::new_ptr<_1ad615798_Importer>(_1ad615798_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a8e59d8e_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1ace18ac4_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _1ad615e5d_AllPackages(_1ad615798_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ad61639d_SetModPath(_1ad615798_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1ad616634_GetModPath(_1ad615798_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ad616975_ModById(_1ad615798_Importer* _self_, jule::I32 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ad616cb6_GetImport(_1ad615798_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c081a44c:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _7515_p = *it;
			{
				if (_1a8e5034b_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1c081a44c:;
			++it;
			goto _iter_begin_1c081a44c;
		}
		_iter_end_1c081a44c:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log _1ad6171b2_ImportPackage(_1ad615798_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	jule::Slice<_1a6b89818_Dir> _857_dirents = ({
		auto except = static__1a8e5374a_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1a6a6bde3_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ad6152ae_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1a6b89818_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1ac9a53b9_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1a6a6bde3_Log> _939_errs = _1ac9a5683_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1abc40644_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1abc40644_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1abc40644_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c081c6b3:;
		if (it != expr_end) {
			_1a6b89818_Dir _10110_dirent = *it;
			{
				if ((_1a6b333c7_IsDir(&_10110_dirent._field_Stat) || (!(_1a8e46364_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1c081c6b3;
				};
				jule::Str _1074__path = _1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1abc32636_Fileset> _1088_file = static__1abc329bb_New(_1074__path);;
				{
					_1abc3302c_FillMut(_1088_file.ptr(), _1ad6150b1_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_1a6a6bde3_Log> _1108_errors = _1abc4016b_Lex(_1088_file, static_cast<jule::I32>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ac6ac588_FileInfo> _1158_finfo = _1ad5ce61e_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1ace172a9_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_1c081c6b3;
				};
				jule::Bool _1254_r;
				jule::Slice<_1a6a6bde3_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad617899_isPassBuildDirectives(_self_, &((*_1158_finfo.alloc)._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1c081c6b3;
				};
				{ jule::Slice<jule::Ptr<_1abc40644_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*_1158_finfo.alloc)._field_Ast); };
			}
			_iter_next_1c081c6b3:;
			++it;
			goto _iter_begin_1c081c6b3;
		}
		_iter_end_1c081c6b3:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad61746a_Imported(_1ad615798_Importer* _self_, jule::Ptr<_1ac98b8cd_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c081e792:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _1a8e5034b_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1c081e792:;
			++it;
			goto _iter_begin_1c081e792;
		}
		_iter_end_1c081e792:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0826249:;
			if (it != expr_end) {
				jule::I32 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*_14128_imp.alloc)._field_ModId=_1518_i;
						goto _julec_label_1c082837d;
					};
				}
				_iter_next_1c0826249:;
				++it;
				_1518_i++;
				goto _iter_begin_1c0826249;
			}
			_iter_end_1c0826249:;
		};
		(*_14128_imp.alloc)._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1c082837d:;
	};
	{ jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a6a6bde3_Log _1ad617899_isPassBuildDirectives(_1ad615798_Importer* _self_, jule::Ptr<_1abc40644_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c082889a:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1c082889a;
				};
				_1ace19982_directiveEval _1738_de = _1ace19982_directiveEval{._field_logs=jule::Slice<_1a6a6bde3_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1ace1ad29_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c082889a:;
			++it;
			goto _iter_begin_1c082889a;
		}
		_iter_end_1c082889a:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline jule::Ptr<_1ad61bace_ExprInspector> static__1ad61be0e_New(void) {
	return jule::new_ptr<_1ad61bace_ExprInspector>(_1ad61bace_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1ad61c1b7_args(_1ad61bace_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0872262:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1ad61c470_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1c0872262:;
			++it;
			goto _iter_begin_1c0872262;
		}
		_iter_end_1c0872262:;
	};
}



inline void _1ad61c470_inspect(_1ad61bace_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c08735d7:;
			{
				jule::Ptr<_1aca95135_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114);;
				_1ad61c470_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1ad61c470_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c087375d:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113);;
				_1ad61c470_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c087364d:;
			{
				jule::Ptr<_1aca95dd3_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1aca95dd3_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0877ad6:;
					if (it != expr_end) {
						jule::Ptr<_1aca95a3c_StructArgExprModel> _4416_arg = *it;
						{
							_1ad61c470_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1c0877ad6:;
						++it;
						goto _iter_begin_1c0877ad6;
					}
					_iter_end_1c0877ad6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c0873a27:;
			{
				jule::Ptr<_1aca95dd3_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1aca961d0_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c08792be:;
					if (it != expr_end) {
						jule::Ptr<_1aca95a3c_StructArgExprModel> _4916_arg = *it;
						{
							_1ad61c470_inspect(_self_, &((*((*(_4916_arg))._field_Expr))._field_Model));
						}
						_iter_next_1c08792be:;
						++it;
						goto _iter_begin_1c08792be;
					}
					_iter_end_1c08792be:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c0873a8d:;
			{
				jule::Ptr<_1aca96763_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96);;
				_1ad61c470_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c0873b04:;
			{
				jule::Ptr<_1aca97115_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
				_1ad61c470_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1ad61c1b7_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c0873b6a:;
			{
				jule::Ptr<_1aca974de_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1aca974de_SliceExprModel>(&__jule_any_type80);;
				_1ad61c1b7_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c0873bd1:;
			{
				jule::Ptr<_1aca9a426_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1aca9a426_ArrayExprModel>(&__jule_any_type88);;
				_1ad61c1b7_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c0873c58:;
			{
				jule::Ptr<_1aca97995_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43);;
				_1ad61c470_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1ad61c470_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c0873cd0:;
			{
				jule::Ptr<_1aca986ee_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1aca986ee_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c08807d1:;
					if (it != expr_end) {
						jule::Ptr<_1aca98325_KeyValPairExprModel> _7116_entry = *it;
						{
							_1ad61c470_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1ad61c470_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1c08807d1:;
						++it;
						goto _iter_begin_1c08807d1;
					}
					_iter_end_1c08807d1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c0873d57:;
			{
				jule::Ptr<_1aca98c82_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1aca98c82_SlicingExprModel>(&__jule_any_type95);;
				_1ad61c470_inspect(_self_, &((*(_768_s))._field_Expr));
				_1ad61c470_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1ad61c470_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c0873dce:;
			{
				jule::Ptr<_1aca99315_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1aca99315_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1ad61c470_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0873e56:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				_1ad61c470_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c0873ecd:;
			{
				jule::Ptr<_1aca9a723_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1aca9a723_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0885363:;
					if (it != expr_end) {
						jule::Ptr<_1acb8cded_Data> _9016_d = *it;
						{
							_1ad61c470_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1c0885363:;
						++it;
						goto _iter_begin_1c0885363;
					}
					_iter_end_1c0885363:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c0874055:;
			{
				jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1aca9b1e6_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1ad61c470_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c08740cc:;
			{
				jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1aca9aa20_BuiltinPrintCallExprModel>(&__jule_any_type25);;
				_1ad61c470_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c0874154:;
			{
				jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel>(&__jule_any_type26);;
				_1ad61c470_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c08741cb:;
			{
				jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1aca9b5c0_BuiltinPanicCallExprModel>(&__jule_any_type27);;
				_1ad61c470_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c0874253:;
			{
				jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1aca9d1c6_BuiltinErrorCallExprModel>(&__jule_any_type21);;
				_1ad61c470_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c08742ca:;
			{
				jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1aca9ba76_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1ad61c470_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*_1118_b.alloc)._field_Cap != nullptr)) {
					_1ad61c470_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c0874352:;
			{
				jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1aca9be50_BuiltinAppendCallExprModel>(&__jule_any_type24);;
				_1ad61c470_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1ad61c470_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c08743c9:;
			{
				jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1aca9c24c_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1ad61c470_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c0874451:;
			{
				jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1aca9c549_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1ad61c470_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c08744c8:;
			{
				jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1aca9c923_BuiltinDeleteCallExprModel>(&__jule_any_type29);;
				_1ad61c470_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1ad61c470_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c0874550:;
			{
				jule::Ptr<_1aca9d4c3_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1aca9d4c3_SizeofExprModel>(&__jule_any_type120);;
				_1ad61c470_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c08745c7:;
			{
				jule::Ptr<_1aca9db77_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1aca9db77_AlignofExprModel>(&__jule_any_type121);;
				_1ad61c470_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c087464e:;
			{
				jule::Ptr<_1aca9e4d5_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1aca9e4d5_FreeExprModel>(&__jule_any_type30);;
				_1ad61c470_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c08746c6:;
			{
				jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1aca9e1d8_BackendEmitExprModel>(&__jule_any_type23);;
				_1ad61c1b7_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1c0873571:;
	};
}



inline void _1ad61c7d3_Inspect(_1ad61bace_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1ad61c470_inspect(_self_, _15228_m);
}








inline jule::Bool _1ad623eb0_MetaStrBuilder_eq(_1ad623eb0_MetaStrBuilder *_self_, _1ad623eb0_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1ad624b81_MetaRuntime_eq(_1ad624b81_MetaRuntime *_self_, _1ad624b81_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _1ad625654_MetaMathCmplx_eq(_1ad625654_MetaMathCmplx *_self_, _1ad625654_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _1ad625c5e_Meta_eq(_1ad625c5e_Meta *_self_, _1ad625c5e_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1ad625c5e_Meta> static__1ad626138_Collect(jule::Ptr<_1ad618328_IR> _7124_ir) {
	jule::Ptr<_1ad625c5e_Meta> _727_meta = jule::new_ptr<_1ad625c5e_Meta>(_1ad625c5e_Meta{._field_Runtime=jule::Ptr<_1ad624b81_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_1ad623eb0_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_1ad625654_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_1acaa2351_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__1ad626402_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__1ad6266bb_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__1ad626985_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_1ad624b81_MetaRuntime> static__1ad626402_CollectRuntime(jule::Ptr<_1ad618328_IR>* _8032_ir) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _817_p = _1ad62291a_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad624b81_MetaRuntime> _857_meta = jule::new_ptr<_1ad624b81_MetaRuntime>(_1ad624b81_MetaRuntime{._field_ToStr=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Map=jule::Ptr<_1ac9ce129_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_1ac9ce129_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_1acc51cb4_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_1acc5217c_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_1acc5217c_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_1ad623eb0_MetaStrBuilder> static__1ad6266bb_CollectStrBuilder(jule::Ptr<_1ad618328_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_1ac98b8cd_ImportInfo> _1097_p = _1ad62291a_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _1137_b = _1acbc4ac2_Struct((*((*(_1ac98c6e2_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1ad623eb0_MetaStrBuilder> _1147_meta = jule::new_ptr<_1ad623eb0_MetaStrBuilder>(_1ad623eb0_MetaStrBuilder{._field_Write=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1acaa540e_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_1ac9d302e_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_1ac9d302e_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_1ac9d302e_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_1ac9d302e_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_1ad625654_MetaMathCmplx> static__1ad626985_CollectMathCmplx(jule::Ptr<_1ad618328_IR>* _12334_ir) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _1247_p = _1ad62291a_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ad625654_MetaMathCmplx> _1287_meta = jule::new_ptr<_1ad625654_MetaMathCmplx>(_1ad625654_MetaMathCmplx{._field_Cmplx=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_1acaa540e_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_1acc5217c_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_1ac9d302e_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_1ac9d302e_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}















inline jule::Ptr<_1bb239700_ObjectDeadCode> static__1bb239bd9_new(jule::Ptr<_1ad618328_IR>* _2621_ir) {
	return jule::new_ptr<_1bb239700_ObjectDeadCode>(_1bb239700_ObjectDeadCode{._field_live=_1bb2393e2_liveTable{._field_vars=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1acaa540e_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1acaaca65_Trait>>(nullptr)}, ._field_ir=(*(_2621_ir))});;
}



inline jule::Bool _1c0bbd38d_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c0bc0082:;
			{
				_3311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1c0bbee50:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bbeeb6:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c0bbeeb6:;
			++it;
			_447_i++;
			goto _iter_begin_1c0bbeeb6;
		}
		_iter_end_1c0bbeeb6:;
	};
	return false;;
}

inline jule::Bool _1c0bc50dc_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa540e_FnIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1acaa540e_FnIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c0bc6c26:;
			{
				_3311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1c0bc6b5a:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bc6bc1:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c0bc6bc1:;
			++it;
			_447_i++;
			goto _iter_begin_1c0bc6bc1;
		}
		_iter_end_1c0bc6bc1:;
	};
	return false;;
}

inline jule::Bool _1c0be9cc1_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaaca65_Trait>* _3227_t) {
	jule::Slice<jule::Ptr<_1acaaca65_Trait>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c0beba2b:;
			{
				_3311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1c0beb883:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0becae8:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c0becae8:;
			++it;
			_447_i++;
			goto _iter_begin_1c0becae8;
		}
		_iter_end_1c0becae8:;
	};
	return false;;
}

inline jule::Bool _1c0c04eeb_isLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acb3d420_Var>* _3227_t) {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c0c06915:;
			{
				_3311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1c0c06a69:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c075a3:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c0c075a3:;
			++it;
			_447_i++;
			goto _iter_begin_1c0c075a3;
		}
		_iter_end_1c0c075a3:;
	};
	return false;;
}



inline void _1c0bbdd1c_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns> _5232_t) {
	{
		
{
			_case_begin_1c0bc242a:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c0bc18be:;
	};
}

inline void _1c0bc62ca_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa540e_FnIns> _5232_t) {
	{
		
{
			_case_begin_1c0bc9740:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa540e_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c0bc8b4b:;
	};
}

inline void _1c0bea750_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaaca65_Trait> _5232_t) {
	{
		
{
			_case_begin_1c0bedbb5:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaaca65_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c0bed0d2:;
	};
}

inline void _1c0c084e9_pushLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acb3d420_Var> _5232_t) {
	{
		
{
			_case_begin_1c0c09198:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c0c07b8b:;
	};
}



inline void _1bb23a58b_pushStructAsLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _6538_s) {
	if (_1c0bbd38d_isLive(_self_, _6538_s)) {
		return;;
	};
	_1c0bbdd1c_pushLive(_self_, (*(_6538_s)));
	_1bb23a844_setReferencesAsLive(_self_, &((*((*(_6538_s))))._field_Refers));
	jule::Bool _713_allLive = _1bb23cbdc_isAllMethodsLive((*((*(_6538_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bbcda4:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _7215_m = *it;
			{
				{
					auto expr = &((*(_7215_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0bc4042:;
					if (it != expr_end) {
						jule::Ptr<_1acaa540e_FnIns> _7316_ins = *it;
						{
							if (_1c0bc50dc_isLive(_self_, &(_7316_ins))) {
								goto _iter_next_1c0bc4042;
							};
							if (_713_allLive) {
								_1c0bc62ca_pushLive(_self_, _7316_ins);
								_1bb23a844_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								goto _iter_next_1c0bc4042;
							};
							if (_1ad61e450_IsTraitMethod(_6538_s, &(_7316_ins))) {
								_1c0bc62ca_pushLive(_self_, _7316_ins);
								_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
							};
							;
							;
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Eq)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Gt)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_GtEq)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Lt)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_LtEq)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shl)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shr)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Add)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Sub)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Div)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mul)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mod)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAnd)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOr)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXor)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Neg)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Pos)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitNot)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_AddAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_SubAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_DivAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_MulAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ModAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShlAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShrAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOrAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAndAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXorAssign)) {
									_1c0bc62ca_pushLive(_self_, _7316_ins);
									_1bb23a844_setReferencesAsLive(_self_, &((*_7316_ins.alloc)._field_Refers));
								};
							};
							;
							jule::Ptr<_1acaa2351_Fn> _1119__str = _1ac9d302e_FindMethod((*(_6538_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1119__str != nullptr) && static__1acb3e8d8_Str(_1119__str))) {
								jule::Ptr<_1acaa540e_FnIns> _11310_fins = (*_1119__str.alloc)._field_Instances[0LL];;
								_1c0bc62ca_pushLive(_self_, _11310_fins);
								_1bb23a844_setReferencesAsLive(_self_, &((*(_11310_fins))._field_Refers));
							};
						}
						_iter_next_1c0bc4042:;
						++it;
						goto _iter_begin_1c0bc4042;
					}
					_iter_end_1c0bc4042:;
				};
			}
			_iter_next_1c0bbcda4:;
			++it;
			goto _iter_begin_1c0bbcda4;
		}
		_iter_end_1c0bbcda4:;
	};
}



inline void _1bb23a844_setReferencesAsLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac979855_ReferenceStack>* _12141_rs) {
	if (((*(_12141_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1257_i = 0LL;;
	for (; (_1257_i < _1ac97a0b4_Len((*(_12141_rs)).ptr())); (_1257_i)++) {
		{
			jule::Any _1278_ref = _1ac97a405_At((*(_12141_rs)).ptr(), _1257_i);;
			{
				auto &_match_expr{ _1278_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1c0be89b2:;
					{
						jule::Ptr<_1acaaca65_Trait> _1309_t = _1278_ref.unsafe_cast_ptr<_1acaaca65_Trait>();;
						if (_1c0be9cc1_isLive(_self_, &(_1309_t))) {
							goto _iter_next_1c0be7a38;
						};
						_1c0bea750_pushLive(_self_, _1309_t);
						{
							auto expr = &((*(_1309_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c0be96d8:;
							if (it != expr_end) {
								jule::Ptr<_1acaa2351_Fn> _13517_ins = *it;
								{
									{
										auto expr = &((*(_13517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c0bee149:;
										if (it != expr_end) {
											jule::Ptr<_1acaa540e_FnIns> _13618_mins = *it;
											{
												if (_1c0bc50dc_isLive(_self_, &(_13618_mins))) {
													goto _iter_next_1c0bee149;
												};
												_1c0bc62ca_pushLive(_self_, _13618_mins);
												_1bb23a844_setReferencesAsLive(_self_, &((*(_13618_mins))._field_Refers));
											}
											_iter_next_1c0bee149:;
											++it;
											goto _iter_begin_1c0bee149;
										}
										_iter_end_1c0bee149:;
									};
								}
								_iter_next_1c0be96d8:;
								++it;
								goto _iter_begin_1c0be96d8;
							}
							_iter_end_1c0be96d8:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1c0be87e7:;
					{
						jule::Ptr<_1acaa540e_FnIns> _1459_f = _1278_ref.unsafe_cast_ptr<_1acaa540e_FnIns>();;
						if (_1c0bc50dc_isLive(_self_, &(_1459_f))) {
							goto _match_end_1c0be886e;
						};
						if ((((*(_1459_f))._field_Owner != nullptr) && (!((*((*_1459_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1c0bbd38d_isLive(_self_, &((*_1459_f.alloc)._field_Owner))))) {
								_1c0bbdd1c_pushLive(_self_, (*_1459_f.alloc)._field_Owner);
								_1bb23a844_setReferencesAsLive(_self_, &((*(*(_1459_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1c0bc62ca_pushLive(_self_, _1459_f);
						_1bb23a844_setReferencesAsLive(_self_, &((*_1459_f.alloc)._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c0be8a28:;
					{
						jule::Ptr<_1acb3d420_Var> _1589_v = _1278_ref.unsafe_cast_ptr<_1acb3d420_Var>();;
						if (_1c0c04eeb_isLive(_self_, &(_1589_v))) {
							goto _match_end_1c0be886e;
						};
						_1c0c084e9_pushLive(_self_, _1589_v);
						_1bb23a844_setReferencesAsLive(_self_, &((*(_1589_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_1c0be8a8e:;
					{
						jule::Ptr<_1ac9d1e84_StructIns> _1659_s = _1278_ref.unsafe_cast_ptr<_1ac9d1e84_StructIns>();;
						_1bb23a58b_pushStructAsLive(_self_, &(_1659_s));
					}
				}
				_match_end_1c0be886e:;
			};
		}
	_iter_next_1c0be7a38:;
	}
	_iter_end_1c0be7a38:;;
}



inline void _1bb23aaec_inits(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _17127_pkg) {
	{
		auto expr = &((*((*(_17127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be80aa:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _17215_file = *it;
			{
				{
					auto expr = &((*(_17215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c0b5eb:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _17316_f = *it;
						{
							if ((*(_17316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1acaa540e_FnIns> _17510_ins = (*(_17316_f))._field_Instances[0LL];;
								if ((!(_1c0bc50dc_isLive(_self_, &(_17510_ins))))) {
									_1c0bc62ca_pushLive(_self_, _17510_ins);
								};
								_1bb23a844_setReferencesAsLive(_self_, &((*(_17510_ins))._field_Refers));
							};
						}
						_iter_next_1c0c0b5eb:;
						++it;
						goto _iter_begin_1c0c0b5eb;
					}
					_iter_end_1c0c0b5eb:;
				};
			}
			_iter_next_1c0be80aa:;
			++it;
			goto _iter_begin_1c0be80aa;
		}
		_iter_end_1c0be80aa:;
	};
}



inline void _1bb23ada5_collectLivePackage(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _18540_pkg) {
	_1bb23aaec_inits(_self_, _18540_pkg);
	_1ad61b02e_IterFiles(_18540_pkg, jule::__new_closure<void,jule::Ptr<_1acaa8654_SymTab>*>((void*)__jule_anon_1c0c0e346, jule::Ptr<__jule_anon_1c0c0e346_ctx>::make(__jule_anon_1c0c0e346_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c0e346_ctx_handler));
	if (_1a8e6157c_Test) {
		if ((((*((*(_18540_pkg))))._field_Files.len() > 0LL) && _1ad61e7c4_IsStdPackage((*((*((*((*(_18540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1ac9ce129_Struct> _2159_s = _1ac99031b_FindStruct((*(_18540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1ac9d1e84_StructIns> _2169_ins = (*(_2159_s))._field_Instances[0LL];;
			_1bb23a58b_pushStructAsLive(_self_, &(_2169_ins));
			{
				auto expr = &((*(_2169_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c0c15a12:;
				if (it != expr_end) {
					jule::Ptr<_1acaa2351_Fn> _21817_m = *it;
					{
						{
							auto expr = &((*(_21817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c0c16491:;
							if (it != expr_end) {
								jule::Ptr<_1acaa540e_FnIns> _21918_mins = *it;
								{
									if (_1c0bc50dc_isLive(_self_, &(_21918_mins))) {
										goto _iter_next_1c0c16491;
									};
									_1c0bc62ca_pushLive(_self_, _21918_mins);
									_1bb23a844_setReferencesAsLive(_self_, &((*(_21918_mins))._field_Refers));
								}
								_iter_next_1c0c16491:;
								++it;
								goto _iter_begin_1c0c16491;
							}
							_iter_end_1c0c16491:;
						};
					}
					_iter_next_1c0c15a12:;
					++it;
					goto _iter_begin_1c0c15a12;
				}
				_iter_end_1c0c15a12:;
			};
		};
		{
			auto expr = &((*((*(_18540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0c130a3:;
			if (it != expr_end) {
				jule::Ptr<_1acaa8654_SymTab> _22816_file = *it;
				{
					{
						auto expr = &((*(_22816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0c18b58:;
						if (it != expr_end) {
							jule::Ptr<_1acaa2351_Fn> _22917_f = *it;
							{
								if (_1ad620a28_HasDirective(&((*(_22917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1acaa540e_FnIns> _23111_ins = (*_22917_f.alloc)._field_Instances[0LL];;
									if ((!(_1c0bc50dc_isLive(_self_, &(_23111_ins))))) {
										_1c0bc62ca_pushLive(_self_, _23111_ins);
									};
									_1bb23a844_setReferencesAsLive(_self_, &((*(_23111_ins))._field_Refers));
								};
							}
							_iter_next_1c0c18b58:;
							++it;
							goto _iter_begin_1c0c18b58;
						}
						_iter_end_1c0c18b58:;
					};
				}
				_iter_next_1c0c130a3:;
				++it;
				goto _iter_begin_1c0c130a3;
			}
			_iter_end_1c0c130a3:;
		};
	};
}



inline void _1bb23b0a3_collectLive(jule::Ptr<_1bb239700_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c1a6e8:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _24315_used = *it;
			{
				if ((!((*(_24315_used))._field_Binded))) {
					_1bb23ada5_collectLivePackage(_self_, &((*_24315_used.alloc)._field_Package));
				};
			}
			_iter_next_1c0c1a6e8:;
			++it;
			goto _iter_begin_1c0c1a6e8;
		}
		_iter_end_1c0c1a6e8:;
	};
	_1bb23ada5_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1acaa2351_Fn> _2517_main = _1ac990717_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2517_main != nullptr)) {
		jule::Ptr<_1acaa540e_FnIns> _2538_ins = (*_2517_main.alloc)._field_Instances[0LL];;
		if ((!(_1c0bc50dc_isLive(_self_, &(_2538_ins))))) {
			_1c0bc62ca_pushLive(_self_, _2538_ins);
		};
		_1bb23a844_setReferencesAsLive(_self_, &((*(_2538_ins))._field_Refers));
	};
}



inline void _1bb23b35b_removeDeadGlobals(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acb3d420_Var>>* _26139_vars) {
	jule::I32 _2627_i = 0LL;;
	while ((_2627_i < (*(_26139_vars)).len())) {
		{
			jule::Ptr<_1acb3d420_Var> _2644_v = (*(_26139_vars))[_2627_i];;
			if (_1c0c04eeb_isLive(_self_, &(_2644_v))) {
				(_2627_i)++;
				goto _iter_next_1c0c20500;
			};
			(*(_26139_vars))=jule::append((*(_26139_vars)).slice(0LL, _2627_i),(*(_26139_vars)).slice((_2627_i + 1LL)));
		}
	_iter_next_1c0c20500:;
	}
	_iter_end_1c0c20500:;;
}



inline void _1bb23b614_removeDeadFns(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _27335_funcs) {
	jule::I32 _2747_i = 0LL;;
	while ((_2747_i < (*(_27335_funcs)).len())) {
		{
			jule::Ptr<_1acaa2351_Fn> _2768_f = (*(_27335_funcs))[_2747_i];;
			jule::I32 _2778_j = 0LL;;
			while ((_2778_j < (*(_2768_f))._field_Instances.len())) {
				{
					jule::Ptr<_1acaa540e_FnIns> _2795_ins = (*(_2768_f))._field_Instances[_2778_j];;
					if (_1c0bc50dc_isLive(_self_, &(_2795_ins))) {
						(_2778_j)++;
						goto _iter_next_1c0c22da4;
					};
					(*_2768_f.alloc)._field_Instances=jule::append((*_2768_f.alloc)._field_Instances.slice(0LL, _2778_j),(*_2768_f.alloc)._field_Instances.slice((_2778_j + 1LL)));
				}
			_iter_next_1c0c22da4:;
			}
			_iter_end_1c0c22da4:;;
			if (((*_2768_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_27335_funcs))=jule::append((*(_27335_funcs)).slice(0LL, _2747_i),(*(_27335_funcs)).slice((_2747_i + 1LL)));
				goto _iter_next_1c0c2205c;
			};
			(_2747_i)++;
		}
	_iter_next_1c0c2205c:;
	}
	_iter_end_1c0c2205c:;;
}



inline void _1bb23b8bc_removeDeadStructs(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _29439_structs) {
	jule::I32 _2957_i = 0LL;;
	while ((_2957_i < (*(_29439_structs)).len())) {
		{
			jule::Ptr<_1ac9ce129_Struct> _2978_s = (*(_29439_structs))[_2957_i];;
			jule::I32 _2988_j = 0LL;;
			while ((_2988_j < (*(_2978_s))._field_Instances.len())) {
				{
					jule::Ptr<_1ac9d1e84_StructIns> _3009_ins = (*(_2978_s))._field_Instances[_2988_j];;
					_1bb23b614_removeDeadFns(_self_, &((*(_3009_ins))._field_Methods));
					if ((((*_3009_ins.alloc)._field_Methods.len() != 0LL) || _1c0bbd38d_isLive(_self_, &(_3009_ins)))) {
						(_2988_j)++;
						goto _iter_next_1c0c26a56;
					};
					(*_2978_s.alloc)._field_Instances=jule::append((*_2978_s.alloc)._field_Instances.slice(0LL, _2988_j),(*_2978_s.alloc)._field_Instances.slice((_2988_j + 1LL)));
				}
			_iter_next_1c0c26a56:;
			}
			_iter_end_1c0c26a56:;;
			if (((*_2978_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_29439_structs))=jule::append((*(_29439_structs)).slice(0LL, _2957_i),(*(_29439_structs)).slice((_2957_i + 1LL)));
				goto _iter_next_1c0c25c0e;
			};
			(_2957_i)++;
		}
	_iter_next_1c0c25c0e:;
	}
	_iter_end_1c0c25c0e:;;
}



inline void _1bb23bb75_removeDeadTraits(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1acaaca65_Trait>>* _31638_traits) {
	jule::I32 _3177_i = 0LL;;
	while ((_3177_i < (*(_31638_traits)).len())) {
		{
			jule::Ptr<_1acaaca65_Trait> _3198_t = (*(_31638_traits))[_3177_i];;
			if ((!(_1c0be9cc1_isLive(_self_, &(_3198_t))))) {
				(*(_31638_traits))=jule::append((*(_31638_traits)).slice(0LL, _3177_i),(*(_31638_traits)).slice((_3177_i + 1LL)));
				goto _iter_next_1c0c2a41c;
			};
			jule::I32 _3248_j = 0LL;;
			while ((_3248_j < (*(_3198_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1ac9ce129_Struct> _3265_s = (*(_3198_t))._field_Implemented[_3248_j];;
					if (((*(_3265_s))._field_Instances.len() > 0LL)) {
						(_3248_j)++;
						goto _iter_next_1c0c2ad68;
					};
					(*_3198_t.alloc)._field_Implemented=jule::append((*_3198_t.alloc)._field_Implemented.slice(0LL, _3248_j),(*_3198_t.alloc)._field_Implemented.slice((_3248_j + 1LL)));
				}
			_iter_next_1c0c2ad68:;
			}
			_iter_end_1c0c2ad68:;;
			(_3177_i)++;
		}
	_iter_next_1c0c2a41c:;
	}
	_iter_end_1c0c2a41c:;;
}



inline void _1bb23be2d_removeDeadsFile(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1acaa8654_SymTab>* _33737_file) {
	_1bb23b614_removeDeadFns(_self_, &((*((*(_33737_file))))._field_Funcs));
	_1bb23b8bc_removeDeadStructs(_self_, &((*((*(_33737_file))))._field_Structs));
	_1bb23bb75_removeDeadTraits(_self_, &((*((*(_33737_file))))._field_Traits));
	_1bb23b35b_removeDeadGlobals(_self_, &((*((*(_33737_file))))._field_Vars));
}



inline void _1bb23c1d6_removeDeadsPackage(jule::Ptr<_1bb239700_ObjectDeadCode> _self_, jule::Ptr<_1ac98e150_Package>* _34440_pkg) {
	{
		auto expr = &((*((*(_34440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c3092d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _34515_file = *it;
			{
				_1bb23be2d_removeDeadsFile(_self_, &(_34515_file));
			}
			_iter_next_1c0c3092d:;
			++it;
			goto _iter_begin_1c0c3092d;
		}
		_iter_end_1c0c3092d:;
	};
}



inline void _1bb23c3d4_removeDeads(jule::Ptr<_1bb239700_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c317a8:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _35115_used = *it;
			{
				if ((!((*(_35115_used))._field_Binded))) {
					_1bb23c1d6_removeDeadsPackage(_self_, &((*_35115_used.alloc)._field_Package));
				};
			}
			_iter_next_1c0c317a8:;
			++it;
			goto _iter_begin_1c0c317a8;
		}
		_iter_end_1c0c317a8:;
	};
	_1bb23c1d6_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1bb23c5d2_elimanate(jule::Ptr<_1bb239700_ObjectDeadCode> _self_) {
	_1bb23b0a3_collectLive(_self_);
	_1bb23c3d4_removeDeads(_self_);
}








inline jule::Bool _1bb23d825_scopeDeadCode_eq(_1bb23d825_scopeDeadCode *_self_, _1bb23d825_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1bb23dd42_optimizeChild(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _1935_s) {
	jule::Ptr<_1bb23d825_scopeDeadCode> _207_sdc = jule::new_ptr<_1bb23d825_scopeDeadCode>(_1bb23d825_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bb24175c_optimizeStmts(_207_sdc);
	};
}



inline void _1bb23e0ea_optimizeBodyChildExceptional(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _2950_s) {
	jule::Ptr<_1bb23d825_scopeDeadCode> _307_sdc = jule::new_ptr<_1bb23d825_scopeDeadCode>(_1bb23d825_scopeDeadCode{._field_parent=jule::Ptr<_1bb23d825_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1bb24175c_optimizeStmts(_307_sdc);
	};
}



inline void _1bb23e3a3_optimizeBodyChild(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95aa56_Scope>* _3939_s) {
	jule::Ptr<_1bb23d825_scopeDeadCode> _407_sdc = jule::new_ptr<_1bb23d825_scopeDeadCode>(_1bb23d825_scopeDeadCode{._field_parent=jule::Ptr<_1bb23d825_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bb24175c_optimizeStmts(_407_sdc);
	};
}



inline void _1bb23e65b_optimizeExprModel(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1bb242dac_exprDeadCode _493_edc = static__1bb2432ca_new(&(_self_));;
	_1bb243583_optimize(&_493_edc, _4839_model);
}



inline void _1bb23e859_eliminateFollowed(_1bb23d825_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1bb23d825_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*_607_parent.alloc)._field_parent;
		}
	_iter_next_1c0c418a6:;
	}
	_iter_end_1c0c418a6:;;
}



inline void _1bb23eb12_pushGoto(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95dc13_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c0c44bd9:;
	}
	_iter_end_1c0c44bd9:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1bb23edba_pushLabel(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95d5a3_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1c0c46dd9;
			};
			(_807_i)++;
		}
	_iter_next_1c0c46dd9:;
	}
	_iter_end_1c0c46dd9:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95d5a3_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1bb240173_optimizeRangeIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95c88d_RangeIter> _9238_it) {
	_1bb23e65b_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1bb23e3a3_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1bb24042b_optimizeWhileIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95be42_WhileIter> _9738_it) {
	_1bb23e65b_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1bb24155e_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1bb23e3a3_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1bb2406d4_optimizeInfIter(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95b98b_InfIter> _10536_it) {
	_1bb23e3a3_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1bb24098c_optimizeConditional(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95b68e_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c4db9e:;
		if (it != expr_end) {
			jule::Ptr<_1ac95ae74_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1bb23e65b_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1bb23e3a3_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1c0c4db9e:;
			++it;
			goto _iter_begin_1c0c4db9e;
		}
		_iter_end_1c0c4db9e:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1bb23dd42_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1bb23e3a3_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bb240c45_optimizeMatch(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac960286_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c52235:;
		if (it != expr_end) {
			jule::Ptr<_1ac960cae_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c52c4c:;
					if (it != expr_end) {
						jule::Ptr<_1acb8cded_Data> _12916_expr = *it;
						{
							_1bb23e65b_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1c0c52c4c:;
						++it;
						goto _iter_begin_1c0c52c4c;
					}
					_iter_end_1c0c52c4c:;
				};
				_1bb23e3a3_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1c0c52235:;
			++it;
			goto _iter_begin_1c0c52235;
		}
		_iter_end_1c0c52235:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1bb23dd42_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1bb23e3a3_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bb240eed_optimizeAssign(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95e593_Assign> _14535_assign) {
	_1bb23e65b_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1bb23e65b_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1bb2412a6_optimizeMultiAssign(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c57081:;
		if (it != expr_end) {
			jule::Ptr<_1acb8cded_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1bb23e65b_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1c0c57081:;
			++it;
			goto _iter_begin_1c0c57081;
		}
		_iter_end_1c0c57081:;
	};
	_1bb23e65b_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1bb24155e_optimizeStmt(jule::Ptr<_1bb23d825_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c0c58c31:;
			{
				jule::Ptr<_1ac95aa56_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1ac95aa56_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1bb241a59_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1bb23dd42_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c0c5899a:;
			{
				_1bb240173_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1ac95c88d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c0c58ca8:;
			{
				_1bb24042b_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1ac95be42_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c0c58d30:;
			{
				_1bb2406d4_optimizeInfIter(_self_, _15933_st.cast_ptr<_1ac95b98b_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c0c58da7:;
			{
				_1bb24098c_optimizeConditional(_self_, _15933_st.cast_ptr<_1ac95b68e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c0c58e2e:;
			{
				_1bb240c45_optimizeMatch(_self_, _15933_st.cast_ptr<_1ac960286_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c0c58ea6:;
			{
				_1bb240eed_optimizeAssign(_self_, _15933_st.cast_ptr<_1ac95e593_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c0c5902d:;
			{
				_1bb2412a6_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1ac95ea49_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c0c590a5:;
			{
				jule::Ptr<_1acb8cded_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1acb8cded_Data>();;
				if ((*(_self_))._field_except) {
					goto _match_end_1c0c58acc;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type27) {
						_case_begin_1c0c5e819:;
						{
							_1bb23e859_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1c0c5ee8a:;
						{
							_1bb23e65b_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1c0c5ee24:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c0c5912c:;
			{
				_1bb23e859_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c0c591a4:;
			{
				_1bb23eb12_pushGoto(_self_, _15933_st.cast_ptr<_1ac95dc13_GotoSt>(&__jule_any_type39));
				_1bb23e859_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c0c5922b:;
			{
				_1bb23edba_pushLabel(_self_, _15933_st.cast_ptr<_1ac95d5a3_Label>(&__jule_any_type19));
			}
		}
		_match_end_1c0c58acc:;
	};
}



inline void _1bb24175c_optimizeStmts(jule::Ptr<_1bb23d825_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bb24155e_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c0c62b2a:;
	}
	_iter_end_1c0c62b2a:;;
}








inline jule::Bool _1bb242dac_exprDeadCode_eq(_1bb242dac_exprDeadCode *_self_, _1bb242dac_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1bb242dac_exprDeadCode static__1bb2432ca_new(jule::Ptr<_1bb23d825_scopeDeadCode>* _1421_s) {
	return _1bb242dac_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1bb243583_optimize(_1bb242dac_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1ad61bace_ExprInspector> _217_inspector = static__1ad61be0e_New();;
	_1ad61c7d3_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c0c65776, jule::Ptr<__jule_anon_1c0c65776_ctx>::make(__jule_anon_1c0c65776_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c65776_ctx_handler));
}








inline jule::Bool _1bb107931_anyData_eq(_1bb107931_anyData *_self_, _1bb107931_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}






inline jule::Bool _1bb109d73_ExceptionalForwardingExprModel_eq(_1bb109d73_ExceptionalForwardingExprModel *_self_, _1bb109d73_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bb10a060_FnCallIgnoreExceptionalExprModel_eq(_1bb10a060_FnCallIgnoreExceptionalExprModel *_self_, _1bb10a060_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bb10a406_SwapExprModel_eq(_1bb10a406_SwapExprModel *_self_, _1bb10a406_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bb10a824_EmptyCompareExprModel_eq(_1bb10a824_EmptyCompareExprModel *_self_, _1bb10a824_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1bb10ab21_RefExprModel_eq(_1bb10ab21_RefExprModel *_self_, _1bb10ab21_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1bb10b0c7_StrCompExprModel_eq(_1bb10b0c7_StrCompExprModel *_self_, _1bb10b0c7_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1bb10b65a_MutSlicingExprModel_eq(_1bb10b65a_MutSlicingExprModel *_self_, _1bb10b65a_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bb10b9e0_UnsafeBinaryExprModel_eq(_1bb10b9e0_UnsafeBinaryExprModel *_self_, _1bb10b9e0_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bb10bcdc_UnsafeIndexingExprModel_eq(_1bb10bcdc_UnsafeIndexingExprModel *_self_, _1bb10bcdc_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bb10c1b6_PushToSliceExprModel_eq(_1bb10c1b6_PushToSliceExprModel *_self_, _1bb10c1b6_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1bb10c590_AppendToSliceExprModel_eq(_1bb10c590_AppendToSliceExprModel *_self_, _1bb10c590_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1bb10c969_StrRuneIter_eq(_1bb10c969_StrRuneIter *_self_, _1bb10c969_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1bb10cc66_UnsafeDerefExprModel_eq(_1bb10cc66_UnsafeDerefExprModel *_self_, _1bb10cc66_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bb10d063_UnsafeCastingExprModel_eq(_1bb10d063_UnsafeCastingExprModel *_self_, _1bb10d063_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bb10db8a_nilVar_eq(_1bb10db8a_nilVar *_self_, _1bb10db8a_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1bb10e471_pushVar(_1bb10decb_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1bb127a3e_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cbb799:;
		if (it != expr_end) {
			_1bb10db8a_nilVar _2815_v = *it;
			{
				if ((_2815_v._field_var == _2323_var)) {
					_2815_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c0cbb799:;
			++it;
			goto _iter_begin_1c0cbb799;
		}
		_iter_end_1c0cbb799:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cbc04c:;
		if (it != expr_end) {
			_1bb10db8a_nilVar _3515_v = *it;
			{
				if ((_3515_v._field_var == 0LLU)) {
					_3515_v._field_var=_2323_var;
					_3515_v._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c0cbc04c:;
			++it;
			goto _iter_begin_1c0cbc04c;
		}
		_iter_end_1c0cbc04c:;
	};
	{ jule::Slice<_1bb10db8a_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bb10db8a_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1bb10e7b2_removeVar(_1bb10decb_nils* _self_, jule::Uintptr _4625_var) {
	if ((_4625_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0cbded8:;
			if (it != expr_end) {
				_1bb10db8a_nilVar _4816_v = *it;
				{
					if ((_4816_v._field_var == _4625_var)) {
						_4816_v._field_var=0LLU;
						_4816_v._field_safe=false;
						return true;;
					};
				}
				_iter_next_1c0cbded8:;
				++it;
				goto _iter_begin_1c0cbded8;
			}
			_iter_end_1c0cbded8:;
		};
	};
	return false;;
}



inline jule::Bool _1bb10eb03_isSafe(_1bb10decb_nils* _self_, jule::Uintptr _6022_var) {
	if ((_6022_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0cc067c:;
			if (it != expr_end) {
				_1bb10db8a_nilVar _6211_v = *it;
				{
					if ((_6211_v._field_var == _6022_var)) {
						return _6211_v._field_safe;;
					};
				}
				_iter_next_1c0cc067c:;
				++it;
				goto _iter_begin_1c0cc067c;
			}
			_iter_end_1c0cc067c:;
		};
	};
	return false;;
}








inline jule::Bool _1bb111b49_scopeOptimizer_eq(_1bb111b49_scopeOptimizer *_self_, _1bb111b49_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1bb111b49_scopeOptimizer> static__1bb1121bb_new(jule::Ptr<_1ac95aa56_Scope> _2320_scope) {
	jule::Ptr<_1bb111b49_scopeOptimizer> _247_sc = jule::new_ptr<_1bb111b49_scopeOptimizer>(_1bb111b49_scopeOptimizer{._field_parent=jule::Ptr<_1bb111b49_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1bb1228e6_data>(_1bb1228e6_data{._field_boundary=jule::new_ptr<_1bb1241cd_boundary>(_1bb1241cd_boundary{._field_vars=jule::Slice<_1bb123d8c_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1bb10decb_nils>(_1bb10decb_nils{._field_vars=jule::Slice<_1bb10db8a_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1bb11ea14_dynamic>(_1bb11ea14_dynamic{._field_vars=jule::Slice<_1bb11e6c3_dynamicVar>(nullptr)}), ._field_flags=0LL})});;
	return _247_sc;;
}



inline void _1bb112474_setCurrentStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1bb112672_removeCurrent(jule::Ptr<_1bb111b49_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1bb112908_isLastStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_) {
	jule::Ptr<_1bb111b49_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*_457_r.alloc)._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1c0ccc843:;
	}
	_iter_end_1c0ccc843:;;
	return true;;
}



inline jule::Bool _1bb112b8e_isIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_) {
	jule::Ptr<_1bb111b49_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*_557_r.alloc)._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type33) {
					_case_begin_1c0cd0192:;
					{
						return true;;
					}
				}
				_match_end_1c0cd00e8:;
			};
		}
	_iter_next_1c0ccdc73:;
	}
	_iter_end_1c0ccdc73:;;
	return false;;
}



inline void _1bb112e47_optimizeData(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1acb8cded_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c0cd135d:;
			{
				jule::Ptr<_1aca97115_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1aca97115_FnCallExprModel>();;
				if (_1a8e61e40_Production) {
					if (((!(_1acaa68c7_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1ad61e7c4_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1bb112474_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1bb11904c_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data));
				if (((((((_1bb128eb3_Exceptional && (*(*((*(_708_m))._field_Func))._field_Decl.alloc)._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ad61d55e_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1bb112908_isLastStmt(_self_)) && (!(_1bb112b8e_isIter(_self_))))) {
					_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb109d73_ExceptionalForwardingExprModel>(_1bb109d73_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_1c0cd12d6:;
	};
	jule::I32 _943_dataFlags = (*((*_self_.alloc)._field_data))._field_flags;;
	(*(*(_self_))._field_data.alloc)._field_flags|=static_cast<jule::I32>(1LL);
	static__1bb11904c_optimizeData(&((*_6733_d.alloc)._field_Model), &((*_self_.alloc)._field_data));
	(*(*(_self_))._field_data.alloc)._field_flags=_943_dataFlags;
}



inline void _1bb113200_optimizeVar(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1acb3d420_Var> _10032_v) {
	if (((*(_10032_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bb11063c_isNilValidType((*((*_10032_v.alloc)._field_TypeSym))._field_Type)) && _1bb110373_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1bb10e471_pushVar((*((*(_self_))._field_data))._field_nils, _1bb11097d_getNilVar(jule::Any(_10032_v, &__jule_any_type7)), true);
		};
		if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
			jule::Ptr<_1acbc0d98_Type> _1099_kind = _1bb1212da_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_10032_v))._field_TypeSym.alloc)._field_Type, (*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model);;
			if ((_1099_kind != nullptr)) {
				if (_1bb120dab_isDynamicValidType((*(*(_10032_v))._field_TypeSym.alloc)._field_Type)) {
					_1bb11eea9_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bb12162b_getDynamicVar(jule::Any(_10032_v, &__jule_any_type7)), _1099_kind);
				};
			};
		};
		static__1bb11904c_optimizeData(&((*(*((*(_10032_v))._field_Value))._field_Data.alloc)._field_Model), &((*_self_.alloc)._field_data));
	};
}



inline void _1bb1134a8_optimizeConditional(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95b68e_Conditional> _12140_c) {
	_1bb12231e_dataCheckpoint _1227_checkpoint = _1bb122c9d_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce3826:;
		if (it != expr_end) {
			jule::Ptr<_1ac95ae74_If> _12315_elif = *it;
			{
				static__1bb11904c_optimizeData(&((*(_12315_elif))._field_Expr), &((*_self_.alloc)._field_data));
				_1bb116478_optimizeChild(_self_, (*_12315_elif.alloc)._field_Scope);
				if ((((*(_12140_c))._field_Elifs.len() > 1LL) || ((*_12140_c.alloc)._field_Default != nullptr))) {
					_1bb123056_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
				};
			}
			_iter_next_1c0ce3826:;
			++it;
			goto _iter_begin_1c0ce3826;
		}
		_iter_end_1c0ce3826:;
	};
	if (((*_12140_c.alloc)._field_Default != nullptr)) {
		_1bb116478_optimizeChild(_self_, (*(*(_12140_c))._field_Default.alloc)._field_Scope);
		_1bb123056_loadCheckpoint((*(_self_))._field_data, &(_1227_checkpoint));
	};
	if ((!(_1bb128468_Cond))) {
		return;;
	};
	jule::Bool _1397_constCase = false;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce74a6:;
		if (it != expr_end) {
			jule::I32 _1428_i = it - expr->begin();
			jule::Ptr<_1ac95ae74_If> _14215_elif = *it;
			{
				if ((!(_1bb116a0b_isConstantValidConditionalCase(&(_14215_elif))))) {
					goto _iter_next_1c0ce74a6;
				};
				_1397_constCase=true;
				((*(_12140_c))._field_Elifs).mut_slice(0LL, _1428_i);;
				(*_12140_c.alloc)._field_Default=jule::new_ptr<_1ac95b271_Else>(_1ac95b271_Else{._field_Scope=(*(_14215_elif))._field_Scope});
				goto _iter_end_1c0ce74a6;
			}
			_iter_next_1c0ce74a6:;
			++it;
			_1428_i++;
			goto _iter_begin_1c0ce74a6;
		}
		_iter_end_1c0ce74a6:;
	};
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac95ae74_If>* _1597_i = (&((*(_12140_c))._field_Elifs[0LL]));;
	jule::Ptr<_1ac95ae74_If>* _1603_end = (&((*_12140_c.alloc)._field_Elifs[((*_12140_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1597_i <= _1603_end); (_1597_i)++) {
		{
			{
				if (_1bb117424_isUnreachableConditionalCase(&((*(_1597_i))))) {
					(*(_1597_i))=nullptr;
				};
			};
		}
	_iter_next_1c0ceaa70:;
	}
	_iter_end_1c0ceaa70:;;
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1397_constCase))) {
		return;;
	};
	jule::I32 _1787_only = -1LL;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cec489:;
		if (it != expr_end) {
			jule::I32 _1797_j = it - expr->begin();
			jule::Ptr<_1ac95ae74_If> _17910_elif = *it;
			{
				if ((_17910_elif != nullptr)) {
					if ((_1787_only != -1LL)) {
						return;;
					};
					_1787_only=_1797_j;
				};
			}
			_iter_next_1c0cec489:;
			++it;
			_1797_j++;
			goto _iter_begin_1c0cec489;
		}
		_iter_end_1c0cec489:;
	};
	if ((_1787_only != -1LL)) {
		_1bb112474_setCurrentStmt(_self_, jule::Any((*((*_12140_c.alloc)._field_Elifs[_1787_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1bb1138c6_buildDefaultConstantTrueCase(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac960cae_Case> _19549_case, jule::I32* _19573_i, jule::Ptr<_1ac960286_Match>* _19586_m) {
	(*(_19549_case))._field_Exprs=nullptr;
	jule::I32 _1973_start = (*(_19573_i));;
	_julec_label_1c0d0037c:;
	for (;;) {
		{
			if (((*((*_19549_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c0d00327;
			};
			jule::Any *_2039_stmt = &((*(*(_19549_case))._field_Scope.alloc)._field_Stmts[((*(*(_19549_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2039_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1c0d02291:;
					{
						((*(_19573_i)))++;
						if (((*(_19573_i)) >= (*((*(_19586_m))))._field_Cases.len())) {
							(*(_2039_stmt))=jule::Any((*((*((*(_19586_m))))._field_Default))._field_Scope, &__jule_any_type20);
							goto _iter_end_1c0d00327;
						};
						_19549_case=(*((*(_19586_m))))._field_Cases[(*(_19573_i))];
						(*(_2039_stmt))=jule::Any((*_19549_case.alloc)._field_Scope, &__jule_any_type20);
					}
				}
				else {
					_case_begin_1c0d0236d:;
					{
						goto _iter_end_1c0d00327;
					}
				}
				_match_end_1c0d0222a:;
			};
		}
	_iter_next_1c0d00327:;
	}
	_iter_end_1c0d00327:;;
	(*((*(_19586_m))))._field_Default=(*((*(_19586_m))))._field_Cases[_1973_start];
	((*((*(_19586_m))))._field_Cases).mut_slice(0LL, _1973_start);;
}



inline void _1bb113b7e_optimizeMatch(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac960286_Match> _22134_m) {
	jule::Uintptr _2227_var = 0LLU;;
	if ((_1bb129524_Dynamic && (*(_22134_m))._field_TypeMatch)) {
		_2227_var=_1bb12162b_getDynamicVar((*((*_22134_m.alloc)._field_Expr))._field_Model);
	};
	_1bb12231e_dataCheckpoint _2267_checkpoint = _1bb122c9d_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d0620c:;
		if (it != expr_end) {
			jule::Ptr<_1ac960cae_Case> _22715_case = *it;
			{
				{
					auto expr = &((*(_22715_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0d06b9c:;
					if (it != expr_end) {
						jule::Ptr<_1acb8cded_Data> _22816_expr = *it;
						{
							static__1bb11904c_optimizeData(&((*(_22816_expr))._field_Model), &((*_self_.alloc)._field_data));
						}
						_iter_next_1c0d06b9c:;
						++it;
						goto _iter_begin_1c0d06b9c;
					}
					_iter_end_1c0d06b9c:;
				};
				if ((((*_22715_case.alloc)._field_Exprs.len() == 1LL) && ((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr))) {
					jule::Ptr<_1acbc0d98_Type> _2339_kind = _1bb1212da_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_22715_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2339_kind != nullptr)) {
						_1bb11eea9_pushVar((*((*(_self_))._field_data))._field_dynamic, _2227_var, _2339_kind);
					} else {
						_1bb1202ea_removeVar((*((*(_self_))._field_data))._field_dynamic, _2227_var);
					};
				};
				_1bb116478_optimizeChild(_self_, (*_22715_case.alloc)._field_Scope);
				if ((((*_22134_m.alloc)._field_Cases.len() > 1LL) || ((*_22134_m.alloc)._field_Default != nullptr))) {
					_1bb123056_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
				};
			}
			_iter_next_1c0d0620c:;
			++it;
			goto _iter_begin_1c0d0620c;
		}
		_iter_end_1c0d0620c:;
	};
	if (((*_22134_m.alloc)._field_Default != nullptr)) {
		_1bb116478_optimizeChild(_self_, (*(*(_22134_m))._field_Default.alloc)._field_Scope);
		_1bb123056_loadCheckpoint((*(_self_))._field_data, &(_2267_checkpoint));
	};
	if ((!(_1bb128468_Cond))) {
		return;;
	};
	jule::Bool _2547_constCase = false;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d0d5cc:;
		if (it != expr_end) {
			jule::I32 _25712_i = it - expr->begin();
			jule::Ptr<_1ac960cae_Case> _25719_case = *it;
			{
				if ((!(_1bb1170d3_isConstantValidMatchCase(&(_25719_case))))) {
					goto _iter_next_1c0d0d5cc;
				};
				_2547_constCase=true;
				_1bb1138c6_buildDefaultConstantTrueCase(_self_, _25719_case, &(_25712_i), &(_22134_m));
				goto _iter_end_1c0d0d5cc;
			}
			_iter_next_1c0d0d5cc:;
			++it;
			_25712_i++;
			goto _iter_begin_1c0d0d5cc;
		}
		_iter_end_1c0d0d5cc:;
	};
	if (((*_22134_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1ac960cae_Case>* _2717_i = (&((*(_22134_m))._field_Cases[0LL]));;
	jule::Ptr<_1ac960cae_Case>* _2723_end = (&((*_22134_m.alloc)._field_Cases[((*_22134_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2717_i <= _2723_end); (_2717_i)++) {
		{
			{
				if (_1bb1176aa_isUnreachableMatchCase(&((*(_2717_i))))) {
					(*(_2717_i))=nullptr;
				};
			};
		}
	_iter_next_1c0d1117e:;
	}
	_iter_end_1c0d1117e:;;
	if ((!(_2547_constCase))) {
		return;;
	};
	jule::I32 _2867_only = -1LL;;
	{
		auto expr = &((*_22134_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d1246b:;
		if (it != expr_end) {
			jule::I32 _2877_j = it - expr->begin();
			jule::Ptr<_1ac960cae_Case> _28710_case = *it;
			{
				if ((_28710_case != nullptr)) {
					if ((_2867_only != -1LL)) {
						return;;
					};
					_2867_only=_2877_j;
				};
			}
			_iter_next_1c0d1246b:;
			++it;
			_2877_j++;
			goto _iter_begin_1c0d1246b;
		}
		_iter_end_1c0d1246b:;
	};
	if ((_2867_only != -1LL)) {
		_1bb112474_setCurrentStmt(_self_, jule::Any((*((*_22134_m.alloc)._field_Cases[_2867_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1bb113e37_optimizeRangeIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95c88d_RangeIter> _30338_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30338_it))._field_KeyA != nullptr))) {
		_1bb124673_pushVar((*((*(_self_))._field_data))._field_boundary, _1bb12660e_getBoundaryVar((*((*_30338_it.alloc)._field_Expr))._field_Model), jule::Any((*_30338_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1bb116478_optimizeChild(_self_, (*_30338_it.alloc)._field_Scope);
	if (_1bb12926b_Iter) {
		{
			auto &_match_expr{ (*((*(_30338_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1c0d17185:;
				{
					jule::Ptr<_1aca96763_CastingExprModel> _3159_cem = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aca96763_CastingExprModel>();;
					jule::Ptr<_1acbc8eb1_Prim> _3165_eprim = _1acbc354e_Prim((*(_3159_cem))._field_ExprType.ptr());;
					if (((_3165_eprim == nullptr) || (!(_1acbcc47b_IsStr(_3165_eprim.ptr()))))) {
						goto _match_end_1c0d170ec;
					};
					jule::Ptr<_1acbcd4b0_Slc> _3209_s = _1acbc45a5_Slc((*_3159_cem.alloc)._field_Type.ptr());;
					if ((_3209_s == nullptr)) {
						goto _match_end_1c0d170ec;
					};
					jule::Ptr<_1acbc8eb1_Prim> _3245_prim = _1acbc354e_Prim((*(_3209_s))._field_Elem.ptr());;
					if ((_3245_prim == nullptr)) {
						goto _match_end_1c0d170ec;
					};
					{
						
						if (_1acbca8db_IsU8(_3245_prim.ptr())) {
							_case_begin_1c0d1aae5:;
							{
								(*_30338_it.alloc)._field_Expr=(*_3159_cem.alloc)._field_Expr;
							}
						}
						else if (_1acbca3be_IsI32(_3245_prim.ptr())) {
							_case_begin_1c0d1acc1:;
							{
								static__1bb11904c_optimizeData(&((*((*_3159_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data));
								_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb10c969_StrRuneIter>(_1bb10c969_StrRuneIter{._field_Expr=(*_3159_cem.alloc)._field_Expr, ._field_Base=_30338_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_1c0d1a908:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_1c0d16bbd:;
				{
					jule::Ptr<_1aca974de_SliceExprModel> _3459_slc = (*((*(_30338_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aca974de_SliceExprModel>();;
					jule::Ptr<_1acbd07d1_Arr> _3469_arr = jule::new_ptr<_1acbd07d1_Arr>(_1acbd07d1_Arr{._field_Auto=false, ._field_N=(*(_3459_slc))._field_Elems.len(), ._field_Elem=(*_3459_slc.alloc)._field_ElemType});;
					(*((*(*(_30338_it))._field_Expr.alloc)._field_Type))._field_Kind=jule::Trait(_3469_arr, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27);
					(*(*(_30338_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_1aca9a426_ArrayExprModel>(_1aca9a426_ArrayExprModel{._field_Kind=_3469_arr, ._field_Elems=(*_3459_slc.alloc)._field_Elems}), &__jule_any_type88);
				}
			}
			_match_end_1c0d170ec:;
		};
	};
	static__1bb11904c_optimizeData(&((*(*(_30338_it))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data));
}



inline void _1bb1141e0_optimizeWhileIter(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95be42_WhileIter> _36038_it) {
	static__1bb11904c_optimizeData(&((*(_36038_it))._field_Expr), &((*(_self_))._field_data));
	_1bb1161c0_optimizeStmt(_self_, (*_36038_it.alloc)._field_Next);
	_1bb116478_optimizeChild(_self_, (*_36038_it.alloc)._field_Scope);
}



inline jule::Bool _1bb114531_substr(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _36627_a) {
	if (((*((*(_36627_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_36627_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c0d2aeac:;
			{
				jule::Ptr<_1aca98c82_SlicingExprModel> _3728_sem = (*((*(_36627_a))._field_Right))._field_Model.unsafe_cast_ptr<_1aca98c82_SlicingExprModel>();;
				if (_1bb109306_equalModels((*((*_36627_a.alloc)._field_Left))._field_Model, (*(_3728_sem))._field_Expr)) {
					_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb10b65a_MutSlicingExprModel>(_1bb10b65a_MutSlicingExprModel{._field_Token=(*_3728_sem.alloc)._field_Token, ._field_Expr=(*_3728_sem.alloc)._field_Expr, ._field_Left=(*_3728_sem.alloc)._field_Left, ._field_Right=(*_3728_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1c0d2ae35:;
	};
	return false;;
}



inline jule::Bool _1bb114872_strAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _38630_a) {
	if ((!(_1bb1286aa_Str))) {
		return false;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _3903_lp = _1acbc354e_Prim((*((*(_38630_a))._field_Left))._field_Type.ptr());;
	if (((_3903_lp == nullptr) || (!(_1acbcc47b_IsStr(_3903_lp.ptr()))))) {
		return false;;
	};
	return _1bb114531_substr(_self_, _38630_a);;
}



inline jule::Bool _1bb114bb3_sliceAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _39732_a) {
	if (((!(_1bb128952_Slice)) || (_1acbc45a5_Slc((*((*(_39732_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1bb114531_substr(_self_, _39732_a);;
}



inline void _1bb114e6b_optimizePostfix(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e0dc_Postfix> _40536_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1bb125cb2_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_40536_postfix))._field_Expr);
	};
	static__1bb11904c_optimizeData(&((*_40536_postfix.alloc)._field_Expr), &((*_self_.alloc)._field_data));
}



inline jule::Bool _1bb1152ac_cmplxAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign>* _41233_assign) {
	if ((((!(_1bb12a217_StdMathCmplx)) || ((*((*((*(_41233_assign))))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) || ((*(_1ad623a2b_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _4167_s = _1acbc4ac2_Struct((*((*((*(_41233_assign))))._field_Left))._field_Type.ptr());;
	if (((_4167_s == nullptr) || (_4167_s != (*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41233_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c0d3812e:;
			{
				goto _match_end_1c0d38dcc;
			}
		}
		else {
			_case_begin_1c0d38e43:;
			{
				return false;;
			}
		}
		_match_end_1c0d38dcc:;
	};
	jule::Ptr<_1aca97115_FnCallExprModel> _4267_fc = (*((*((*(_41233_assign))))._field_Right))._field_Model.cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
	{
		auto &_match_expr{ (*(_4267_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0d396c4:;
			{
				goto _match_end_1c0d3a0cb;
			}
		}
		else {
			_case_begin_1c0d3a142:;
			{
				return false;;
			}
		}
		_match_end_1c0d3a0cb:;
	};
	jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _4337_siem = (*(_4267_fc))._field_Expr.cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
	if ((!(_1bb109306_equalModels((*(*((*(_41233_assign))))._field_Left.alloc)._field_Model, (*((*(_4337_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4267_fc))._field_Func };
		
		if (_match_expr == (*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_1c0d3be35:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxSub) {
			_case_begin_1c0d3be9b:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxMul) {
			_case_begin_1c0d3c023:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxDiv) {
			_case_begin_1c0d3c09a:;
			{
				(*_4267_fc.alloc)._field_Func=(*((*_1ad623a2b_ProgramMeta.alloc)._field_MathCmplx))._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_1c0d3b0aa:;
			{
				return false;;
			}
		}
		_match_end_1c0d3bd58:;
	};
	(*_4337_siem.alloc)._field_Method=(*_4267_fc.alloc)._field_Func;
	_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4267_fc, &__jule_any_type31), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)}), &__jule_any_type22));
	return true;;
}



inline void _1bb115565_optimizeAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95e593_Assign> _45435_assign) {
	if ((((*((*(_45435_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1bb109306_equalModels((*((*_45435_assign.alloc)._field_Left))._field_Model, (*((*_45435_assign.alloc)._field_Right))._field_Model))) {
		_1bb112672_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
		if (_1bb12607b_isBoundaryRiskyType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
			_1bb125cb2_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
		if (_1bb110373_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45435_assign))._field_Right.alloc)._field_Model)) {
			if (_1bb11063c_isNilValidType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
				;
				_1bb10e471_pushVar((*((*(_self_))._field_data))._field_nils, _1bb11097d_getNilVar((*(*(_45435_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1bb10eeaa_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
		jule::Ptr<_1acbc0d98_Type> _4788_kind = _1bb1212da_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45435_assign))._field_Right.alloc)._field_Type, (*(*(_45435_assign))._field_Right.alloc)._field_Model);;
		if ((_4788_kind != nullptr)) {
			if (_1bb120dab_isDynamicValidType((*(*(_45435_assign))._field_Left.alloc)._field_Type)) {
				_1bb11eea9_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bb12162b_getDynamicVar((*(*(_45435_assign))._field_Left.alloc)._field_Model), _4788_kind);
			};
		} else {
			_1bb120a9d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_45435_assign))._field_Left.alloc)._field_Model);
		};
	};
	{
		
		if (_1bb114872_strAssign(_self_, _45435_assign) || _1bb114bb3_sliceAssign(_self_, _45435_assign) || _1bb1152ac_cmplxAssign(_self_, &(_45435_assign))) {
			_case_begin_1c0d483c5:;
			{
				return;;
			}
		}
		_match_end_1c0d4a075:;
	};
	static__1bb11904c_optimizeData(&((*(*(_45435_assign))._field_Left.alloc)._field_Model), &((*_self_.alloc)._field_data));
	static__1bb11904c_optimizeData(&((*(*(_45435_assign))._field_Right.alloc)._field_Model), &((*_self_.alloc)._field_data));
	{
		auto &_match_expr{ (*((*(_45435_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU) || _match_expr == static_cast<jule::U32>(40LLU) || _match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c0d4e002:;
			{
				if (((!(_1bb127786_Math)) || (_1acbc4ac2_Struct((*(*(_45435_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1c0d4de7a;
				};
				jule::U32 _5064_oldId;
				jule::Str _50611_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*(*(_45435_assign))._field_Op.alloc)._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_45435_assign))._field_Op.alloc)._field_Kind;
					_5064_oldId = ___jule_assign_arg;
					_50611_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_45435_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(40LLU)) {
						_case_begin_1c0d528da:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(60LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(41LLU)) {
						_case_begin_1c0d52533:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(61LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1c0d52599:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1c0d52610:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1c0d52676:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1c0d526dc:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_1c0d52764:;
						{
							(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1c0d504a9:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:530:5"));;
						}
					}
					_match_end_1c0d523e0:;
				};
				jule::Ptr<_1aca95135_BinaryExprModel> _5328_b = jule::new_ptr<_1aca95135_BinaryExprModel>(_1aca95135_BinaryExprModel{._field_Left=(*_45435_assign.alloc)._field_Left, ._field_Right=(*_45435_assign.alloc)._field_Right, ._field_Op=(*_45435_assign.alloc)._field_Op});;
				jule::Any _5378_model = jule::Any(_5328_b, &__jule_any_type114);;
				static__1bb11904c_optimizeData(&(_5378_model), &((*_self_.alloc)._field_data));
				if (((!__jule_any_type114_compare(_5378_model, _5328_b)) || ((*(_5328_b))._field_Op != (*_45435_assign.alloc)._field_Op))) {
					if (((*(*(_45435_assign))._field_Op.alloc)._field_Id == static_cast<jule::U32>(67LLU))) {
						_1bb112672_removeCurrent(_self_);
						return;;
					};
					(*_45435_assign.alloc)._field_Right=jule::new_ptr<_1aca94b3a_OperandExprModel>((*(*(_45435_assign))._field_Right.alloc));
					(*_5328_b.alloc)._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(*(_5328_b))._field_Op.alloc));
					(*(*(_45435_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_45435_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_45435_assign))._field_Right.alloc)._field_Model=_5378_model;
					return;;
				};
				(*(*(_45435_assign))._field_Op.alloc)._field_Id=_5064_oldId;
				(*(*(_45435_assign))._field_Op.alloc)._field_Kind=_50611_oldKind;
				return;;
			}
		}
		_match_end_1c0d4de7a:;
	};
	if (_1bb127489_Append) {
		{
			auto &_match_expr{ (*((*(_45435_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type24) {
				_case_begin_1c0b937b4:;
				{
					jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _5639_m = (*(*(_45435_assign))._field_Right.alloc)._field_Model.cast_ptr<_1aca9be50_BuiltinAppendCallExprModel>(&__jule_any_type24);;
					if ((!(_1bb11d9e1_areSameLvalueExprModel(&((*(*(_45435_assign))._field_Left.alloc)._field_Model), &((*(_5639_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5639_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1c0b96586:;
							{
								_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb10c1b6_PushToSliceExprModel>(_1bb10c1b6_PushToSliceExprModel{._field_Dest=(*_5639_m.alloc)._field_Dest, ._field_Elems=(*(_5639_m))._field_Elements.unsafe_cast_ptr<_1aca974de_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1c0b955c9:;
							{
								_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb10c590_AppendToSliceExprModel>(_1bb10c590_AppendToSliceExprModel{._field_Dest=(*(*(_45435_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*_5639_m.alloc)._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1c0b95563:;
					};
				}
			}
			_match_end_1c0b9373c:;
		};
	};
}



inline jule::Bool _1bb1158a6_tryOptimizeSwap(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _58537_assign) {
	if (((((!(_1bb128c0a_Assign)) || ((*((*(_58537_assign))))._field_Left.len() != 2LL)) || ((*((*(_58537_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_58537_assign))))._field_Left[1LL] == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aca9a723_TupleExprModel> _59011_tup;;
	{
		auto &_match_expr{ (*((*(_58537_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c0b9e979:;
			{
				_59011_tup=(*((*(_58537_assign))))._field_Right.unsafe_cast_ptr<_1aca9a723_TupleExprModel>();
			}
		}
		_match_end_1c0b9e902:;
	};
	if (((_59011_tup == nullptr) || ((*(_59011_tup))._field_Datas.len() != 2LL))) {
		return false;;
	};
	if ((_1bb109306_equalModels((*((*((*(_58537_assign))))._field_Left[0LL]))._field_Model, (*((*(_59011_tup))._field_Datas[0LL]))._field_Model) && _1bb109306_equalModels((*((*((*(_58537_assign))))._field_Left[1LL]))._field_Model, (*((*(_59011_tup))._field_Datas[1LL]))._field_Model))) {
		_1bb112672_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return true;;
	};
	if (((!(_1bb109306_equalModels((*((*((*(_58537_assign))))._field_Left[0LL]))._field_Model, (*((*(_59011_tup))._field_Datas[1LL]))._field_Model))) || (!(_1bb109306_equalModels((*((*((*(_58537_assign))))._field_Left[1LL]))._field_Model, (*((*(_59011_tup))._field_Datas[0LL]))._field_Model))))) {
		return false;;
	};
	jule::Ptr<_1bb10a406_SwapExprModel> _6127_model = jule::new_ptr<_1bb10a406_SwapExprModel>(_1bb10a406_SwapExprModel{._field_Left=(*((*(_58537_assign))))._field_Left[0LL], ._field_Right=(*((*(_58537_assign))))._field_Left[1LL]});;
	static__1bb11904c_optimizeData(&((*((*(_6127_model))._field_Left))._field_Model), &((*_self_.alloc)._field_data));
	static__1bb11904c_optimizeData(&((*((*_6127_model.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data));
	_1bb112474_setCurrentStmt(_self_, jule::Any(_6127_model, &__jule_any_type127));
	return true;;
}



inline void _1bb115b5e_optimizeMultiAssign(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _62240_assign) {
	if (_1bb1158a6_tryOptimizeSwap(_self_, &(_62240_assign))) {
		return;;
	};
	jule::Ptr<_1aca9a723_TupleExprModel> _6297_tup = static_cast<jule::Ptr<_1aca9a723_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_62240_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c0ba9b4e:;
			{
				_6297_tup=(*(_62240_assign))._field_Right.unsafe_cast_ptr<_1aca9a723_TupleExprModel>();
			}
		}
		_match_end_1c0ba9ac7:;
	};
	{
		auto expr = &((*(_62240_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bab4e1:;
		if (it != expr_end) {
			jule::I32 _6348_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _63415_l = *it;
			{
				if ((_63415_l != nullptr)) {
					if (((*((*_self_.alloc)._field_data))._field_boundary != nullptr)) {
						if (_1bb12607b_isBoundaryRiskyType((*_63415_l.alloc)._field_Type)) {
							_1bb125cb2_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*_63415_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_6297_tup != nullptr) && _1bb110373_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_6297_tup.alloc)._field_Datas[_6348_i]))._field_Model))) {
							if (_1bb11063c_isNilValidType((*_63415_l.alloc)._field_Type)) {
								;
								_1bb10e471_pushVar((*((*(_self_))._field_data))._field_nils, _1bb11097d_getNilVar((*_63415_l.alloc)._field_Model), true);
							};
						} else {
							_1bb10eeaa_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*_63415_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_6297_tup != nullptr))) {
						jule::Ptr<_1acbc0d98_Type> _65210_kind = _1bb1212da_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_6297_tup.alloc)._field_Datas[_6348_i]))._field_Type, (*((*(_6297_tup))._field_Datas[_6348_i]))._field_Model);;
						if ((_65210_kind != nullptr)) {
							if (_1bb120dab_isDynamicValidType((*_63415_l.alloc)._field_Type)) {
								_1bb11eea9_pushVar((*((*(_self_))._field_data))._field_dynamic, _1bb12162b_getDynamicVar((*_63415_l.alloc)._field_Model), _65210_kind);
							};
						} else {
							_1bb120a9d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*_63415_l.alloc)._field_Model);
						};
					};
					static__1bb11904c_optimizeData(&((*_63415_l.alloc)._field_Model), &((*_self_.alloc)._field_data));
				};
			}
			_iter_next_1c0bab4e1:;
			++it;
			_6348_i++;
			goto _iter_begin_1c0bab4e1;
		}
		_iter_end_1c0bab4e1:;
	};
	static__1bb11904c_optimizeData(&((*_62240_assign.alloc)._field_Right), &((*_self_.alloc)._field_data));
}



inline void _1bb115e17_optimizeRet(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac96184d_RetSt> _66832_r) {
	static__1bb11904c_optimizeData(&((*(_66832_r))._field_Expr), &((*(_self_))._field_data));
	if ((!(_1bb128eb3_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_66832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c0e834ee:;
			{
				goto _match_end_1c0e835a9;
			}
		}
		else {
			_case_begin_1c0e83620:;
			{
				return;;
			}
		}
		_match_end_1c0e835a9:;
	};
	jule::Ptr<_1aca97115_FnCallExprModel> _6827_fc = (*_66832_r.alloc)._field_Expr.cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
	if (((((!((*((*((*(_6827_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_6827_fc.alloc)._field_Except == nullptr)) || ((*((*_6827_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ad61d55e_IsForwarded(&((*_6827_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1bb112474_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bb109d73_ExceptionalForwardingExprModel>(_1bb109d73_ExceptionalForwardingExprModel{._field_Expr=_6827_fc}), &__jule_any_type122));
}



inline void _1bb1161c0_optimizeStmt(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Any _69233_stmt) {
	{
		auto &_match_expr{ _69233_stmt };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c0e86a85:;
			{
				_1bb116478_optimizeChild(_self_, _69233_stmt.cast_ptr<_1ac95aa56_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c0e86810:;
			{
				_1bb112e47_optimizeData(_self_, _69233_stmt.cast_ptr<_1acb8cded_Data>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0e86b1d:;
			{
				_1bb113200_optimizeVar(_self_, _69233_stmt.cast_ptr<_1acb3d420_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c0e86bb7:;
			{
				_1bb1134a8_optimizeConditional(_self_, _69233_stmt.cast_ptr<_1ac95b68e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c0e86c2d:;
			{
				_1bb113e37_optimizeRangeIter(_self_, _69233_stmt.cast_ptr<_1ac95c88d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c0e86c94:;
			{
				_1bb1141e0_optimizeWhileIter(_self_, _69233_stmt.cast_ptr<_1ac95be42_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c0e86d1b:;
			{
				_1bb116478_optimizeChild(_self_, (*(_69233_stmt.unsafe_cast_ptr<_1ac95b98b_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c0e86d93:;
			{
				_1bb115565_optimizeAssign(_self_, _69233_stmt.cast_ptr<_1ac95e593_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c0e86e1a:;
			{
				_1bb115b5e_optimizeMultiAssign(_self_, _69233_stmt.cast_ptr<_1ac95ea49_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c0e86e92:;
			{
				_1bb113b7e_optimizeMatch(_self_, _69233_stmt.cast_ptr<_1ac960286_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c0e87019:;
			{
				_1bb115e17_optimizeRet(_self_, _69233_stmt.cast_ptr<_1ac96184d_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c0e87091:;
			{
				_1bb114e6b_optimizePostfix(_self_, _69233_stmt.cast_ptr<_1ac95e0dc_Postfix>(&__jule_any_type40));
			}
		}
		_match_end_1c0e86931:;
	};
}



inline void _1bb116478_optimizeChild(jule::Ptr<_1bb111b49_scopeOptimizer> _self_, jule::Ptr<_1ac95aa56_Scope> _72134_child) {
	jule::Ptr<_1bb111b49_scopeOptimizer> _7227_so = static__1bb1121bb_new(_72134_child);;
	(*(_7227_so))._field_parent=_self_;
	(*_7227_so.alloc)._field_data=(*(_self_))._field_data;
	_1bb116676_optimize(_7227_so);
}



inline void _1bb116676_optimize(jule::Ptr<_1bb111b49_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bb1161c0_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c0e903a7:;
	}
	_iter_end_1c0e903a7:;;
}








inline jule::Bool _1bb118854_exprOptimizer_eq(_1bb118854_exprOptimizer *_self_, _1bb118854_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector);
}

inline void static__1bb118c61_optimize(jule::Any* _2226_model) {
	static__1bb11904c_optimizeData(_2226_model, &(_1bb121e34_emptyData));
}



inline void static__1bb11904c_optimizeData(jule::Any* _2630_model, jule::Ptr<_1bb1228e6_data>* _2659_d) {
	if (_1bb243b38_exprEnabled) {
		jule::Ptr<_1bb118854_exprOptimizer> _298_exop = jule::new_ptr<_1bb118854_exprOptimizer>(_1bb118854_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2630_model)), ._field_data=(*(_2659_d)), ._field_inspector=static__1ad61be0e_New()});;
		_1bb11d1d8_do(_298_exop.ptr());
	};
}



inline jule::Bool _1bb11938d_selfCmpCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _3828_m) {
	if (((_1acbc354e_Prim((*((*((*(_3828_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1ac92b83a_IsFloat((*(_1acbc354e_Prim((*((*((*(_3828_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1bb109306_equalModels((*(*((*(_3828_m))))._field_Left.alloc)._field_Model, (*((*((*(_3828_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_3828_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c0ea150b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aca892a0_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c0ea1594:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aca892a0_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1c0ea03ea:;
			{
				return false;;
			}
		}
		_match_end_1c0ea13b8:;
	};
}



inline jule::Bool _1bb1196ce_boolCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _6725_m) {
	jule::Ptr<_1acbc8eb1_Prim> _683_lp = _1acbc354e_Prim((*((*((*(_6725_m))))._field_Left))._field_Type.ptr());;
	if (((_683_lp == nullptr) || (!(_1acbcc1e5_IsBool(_683_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0ea5ce6:;
			{
				std::swap((*((*(_6725_m))))._field_Left, (*((*(_6725_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c0ea4ec1:;
			{
				{
					auto &_match_expr{ (*((*((*(_6725_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c0ea42ab:;
						{
							goto _match_end_1c0ea57eb;
						}
					}
					else {
						_case_begin_1c0ea5862:;
						{
							return false;;
						}
					}
					_match_end_1c0ea57eb:;
				};
			}
		}
		_match_end_1c0ea4e5a:;
	};
	jule::Ptr<_1aca3208e_Const> _857_c = (*((*((*(_6725_m))))._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6725_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c0ea7941:;
			{
				if (_1aca8a6be_ReadBool(_857_c.ptr())) {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				} else {
					_1aca8bca8_SetBool(_857_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c0ea79da:;
			{
				if (_1aca8a6be_ReadBool(_857_c.ptr())) {
					_1aca8bca8_SetBool(_857_c, true);
					(*((*(_self_))._field_model))=jule::Any(_857_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*(*((*(_6725_m))))._field_Left.alloc)._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1c0ea5ab5:;
		}
		_match_end_1c0ea78a8:;
	};
	return false;;
}



inline jule::Bool _1bb119a20_arrayCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _12025_m) {
	jule::Ptr<_1acbd07d1_Arr> _1217_arr = _1acbc431e_Arr((*((*(_12025_m))._field_Left))._field_Type.ptr());;
	if (((_1217_arr == nullptr) || ((*(_1217_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__1aca892a0_NewBool(true), &__jule_any_type15);
	return true;;
}



inline jule::Bool _1bb119d61_strCond(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _13223_m) {
	jule::Ptr<_1acbc8eb1_Prim> _1333_lp = _1acbc354e_Prim((*((*(_13223_m))._field_Left))._field_Type.ptr());;
	if (((_1333_lp == nullptr) || (!(_1acbcc47b_IsStr(_1333_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*_13223_m.alloc)._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*(_13223_m))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_13223_m))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0eb1461:;
			{
				std::swap((*_13223_m.alloc)._field_Left, (*_13223_m.alloc)._field_Right);
			}
		}
		else {
			_case_begin_1c0eb063b:;
			{
				{
					auto &_match_expr{ (*((*(_13223_m))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c0eae1b7:;
						{
							goto _match_end_1c0eb0e66;
						}
					}
					else {
						_case_begin_1c0eb0ecc:;
						{
							return false;;
						}
					}
					_match_end_1c0eb0e66:;
				};
			}
		}
		_match_end_1c0eb05c5:;
	};
	jule::Ptr<_1aca3208e_Const> _1537_c = (*((*_13223_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*(_13223_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c0eb1241:;
			{
				if ((_1aca8a955_ReadStr(_1537_c.ptr())).empty()) {
					jule::Any _1579_model = jule::Any(jule::new_ptr<_1bb10a824_EmptyCompareExprModel>(_1bb10a824_EmptyCompareExprModel{._field_Expr=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1579_model))))));
					goto _match_end_1c0eb2eac;
				};
				jule::Any _1648_model = jule::Any(jule::new_ptr<_1bb10b0c7_StrCompExprModel>(_1bb10b0c7_StrCompExprModel{._field_Left=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Right=_1537_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1648_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c0eb3067:;
			{
				if ((_1aca8a955_ReadStr(_1537_c.ptr())).empty()) {
					jule::Any _1729_model = jule::Any(jule::new_ptr<_1bb10a824_EmptyCompareExprModel>(_1bb10a824_EmptyCompareExprModel{._field_Expr=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1729_model))))));
					goto _match_end_1c0eb2eac;
				};
				jule::Any _1798_model = jule::Any(jule::new_ptr<_1bb10b0c7_StrCompExprModel>(_1bb10b0c7_StrCompExprModel{._field_Left=(*(*(_13223_m))._field_Left.alloc)._field_Model, ._field_Right=_1537_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_1798_model))))));
			}
		}
		_match_end_1c0eb2eac:;
	};
	return true;;
}



inline jule::Bool _1bb11a317_tryNeutralElement1(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _18935_m, jule::Ptr<_1aca3208e_Const> _18966_c, jule::Ptr<_1aca94b3a_OperandExprModel>* _18992_nc) {
	if (_1aca8d051_IsStr(_18966_c.ptr())) {
		if ((!(_1bb1286aa_Str))) {
			return false;;
		};
		if (((_1aca8a955_ReadStr(_18966_c.ptr())).empty() && ((*((*((*(_18935_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_18992_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1bb127786_Math)) || (_1aca8b48e_AsF64(_18966_c) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_18935_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c0ec231d:;
			{
				if (((*(_18992_nc)) == (*((*(_18935_m))))._field_Left)) {
					(*(*(_self_))._field_model.alloc)=(*((*(_18992_nc))))._field_Model;
					return true;;
				};
				(*(*(_self_))._field_model.alloc)=jule::Any(_18966_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c0ec2e56:;
			{
				if (_1ac92b83a_IsFloat((*(_1acbc354e_Prim((*((*(_18992_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1c0ec2d13;
				};
				_1aca8b747_SetI64(_18966_c, 0LL);
				(*(*(_self_))._field_model.alloc)=jule::Any(_18966_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c0ec2ebc:;
			{
				(*(*(_self_))._field_model.alloc)=(*((*(_18992_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1c0ec2d13:;
	};
	return false;;
}



inline jule::Bool _1bb11a658_tryNeutralElement(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _23934_m) {
	{
		auto &_match_expr{ (*((*((*(_23934_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0ec7147:;
			{
				jule::Ptr<_1aca3208e_Const> _2438_c = (*((*((*(_23934_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aca3208e_Const>();;
				return _1bb11a317_tryNeutralElement1(_self_, _23934_m, _2438_c, &((*((*(_23934_m))))._field_Right));;
			}
		}
		_match_end_1c0ec70c0:;
	};
	{
		auto &_match_expr{ (*((*((*(_23934_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0ec7664:;
			{
				jule::Ptr<_1aca3208e_Const> _2488_c = (*((*((*(_23934_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aca3208e_Const>();;
				return _1bb11a317_tryNeutralElement1(_self_, _23934_m, _2488_c, &((*((*(_23934_m))))._field_Left));;
			}
		}
		_match_end_1c0ec75ed:;
	};
	return false;;
}



inline void _1bb11a911_checkBinaryForBoundary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _25439_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_25439_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c0ecaab8:;
			{
				jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _2608_blc = (*((*((*(_25439_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aca9c24c_BuiltinLenCallExprModel>();;
				if ((!(_1bb126345_isBoundaryValidType((*((*(_2608_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_25439_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_25439_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_25439_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c0ecddb8:;
							{
								jule::Ptr<_1aca3208e_Const> _27210_c = jule::new_ptr<_1aca3208e_Const>((*((*((*((*(_25439_m))))._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15))));;
								_1aca90828_Sub(_27210_c, (*(static__1aca88c61_NewI64(1LL))));
								_1bb124673_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bb12660e_getBoundaryVar((*(*(_2608_blc))._field_Expr.alloc)._field_Model), jule::Any(_27210_c, &__jule_any_type15));
							}
						}
						_match_end_1c0ecdd41:;
					};
					return;;
				};
				_1bb124673_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bb12660e_getBoundaryVar((*(*(_2608_blc))._field_Expr.alloc)._field_Model), (*(*((*(_25439_m))))._field_Right.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c0ecaa41:;
	};
	{
		auto &_match_expr{ (*((*((*(_25439_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c0ecb25b:;
			{
				jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _2838_blc = (*((*((*(_25439_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aca9c24c_BuiltinLenCallExprModel>();;
				if ((!(_1bb126345_isBoundaryValidType((*(*(_2838_blc))._field_Expr.alloc)._field_Type)))) {
					return;;
				};
				if ((((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_25439_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*(*((*(_25439_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_25439_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c0ed5b39:;
							{
								jule::Ptr<_1aca3208e_Const> _29510_c = jule::new_ptr<_1aca3208e_Const>((*((*((*((*(_25439_m))))._field_Left))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15))));;
								_1aca90828_Sub(_29510_c, (*(static__1aca88c61_NewI64(1LL))));
								_1bb124673_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bb12660e_getBoundaryVar((*(*(_2838_blc))._field_Expr.alloc)._field_Model), jule::Any(_29510_c, &__jule_any_type15));
							}
						}
						_match_end_1c0ed5ab2:;
					};
					return;;
				};
				_1bb124673_pushVar((*(*(_self_))._field_data.alloc)._field_boundary.ptr(), _1bb12660e_getBoundaryVar((*(*(_2838_blc))._field_Expr.alloc)._field_Model), (*(*((*(_25439_m))))._field_Left.alloc)._field_Model);
				return;;
			}
		}
		_match_end_1c0ecb1d4:;
	};
}



inline void _1bb11abb9_checkBinaryForNil(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel>* _30634_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3107_var = _1bb11097d_getNilVar((*((*((*(_30634_m))))._field_Left))._field_Model);;
	if ((_3107_var != 0LLU)) {
		if ((!(_1bb11063c_isNilValidType((*(*((*(_30634_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_30634_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c0edb4e1:;
				{
					_1bb10e471_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3107_var, ((*((*((*(_30634_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1c0edb469:;
		};
		return;;
	};
	_3107_var=_1bb11097d_getNilVar((*((*((*(_30634_m))))._field_Right))._field_Model);
	if ((_3107_var != 0LLU)) {
		if ((!(_1bb11063c_isNilValidType((*(*((*(_30634_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_30634_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c0eddbca:;
				{
					_1bb10e471_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _3107_var, ((*(*((*(_30634_m))))._field_Op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1c0eddb53:;
		};
		return;;
	};
}



inline void _1bb11ae72_shift(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _34021_m) {
	jule::I32 _3423_z = _1ac92347a_BitSizeOf((*(_1acbc354e_Prim((*((*(_34021_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _3433_s = _1aca8b208_AsU64((*((*_34021_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15).ptr());;
	if ((_3433_s >= static_cast<jule::U64>(_3423_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__1aca88ed6_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _3537_model = jule::Any(jule::new_ptr<_1bb10b9e0_UnsafeBinaryExprModel>(_1bb10b9e0_UnsafeBinaryExprModel{._field_Node=_34021_m}), &__jule_any_type130);;
	(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_3537_model))))));
}



inline void _1bb11b22a_binary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95135_BinaryExprModel> _35722_m) {
	if ((((*((*(_self_))._field_data))._field_flags & static_cast<jule::I32>(1LL)) != static_cast<jule::I32>(1LL))) {
		_1bb11a911_checkBinaryForBoundary(_self_, &(_35722_m));
		_1bb11abb9_checkBinaryForNil(_self_, &(_35722_m));
	};
	if (_1bb1286aa_Str) {
		if (_1bb119d61_strCond(_self_, _35722_m)) {
			return;;
		};
	};
	if (_1bb1297cc_Array) {
		if (_1bb119a20_arrayCond(_self_, _35722_m)) {
			return;;
		};
	};
	if (_1bb128468_Cond) {
		{
			
			if (_1bb1196ce_boolCond(_self_, &(_35722_m)) || _1bb11938d_selfCmpCond(_self_, &(_35722_m))) {
				_case_begin_1c0ee81ac:;
				{
					return;;
				}
			}
			_match_end_1c0ee80ad:;
		};
	};
	if (_1bb11a658_tryNeutralElement(_self_, &(_35722_m))) {
		return;;
	};
	if ((!(_1bb127786_Math))) {
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _3943_lp = _1acbc354e_Prim((*((*(_35722_m))._field_Left))._field_Type.ptr());;
	if ((_3943_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _3983_rp = _1acbc354e_Prim((*((*(_35722_m))._field_Right))._field_Type);;
	if ((_3983_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c0eeaca3:;
			{
				if (((!(_1ac92b4e9_IsInt((*(_3943_lp))._field_Kind))) || (!(_1bb109306_equalModels((*(*(_35722_m))._field_Left.alloc)._field_Model, (*((*_35722_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1c0eeb0b1;
				};
				(*_35722_m.alloc)._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(*(_35722_m))._field_Op.alloc));
				(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
				(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*(*(_35722_m))._field_Right.alloc)._field_Model=jule::Any(static__1aca88ed6_NewU64(1LLU), &__jule_any_type15);
				jule::Any _4178_model = jule::Any(jule::new_ptr<_1bb10b9e0_UnsafeBinaryExprModel>(_1bb10b9e0_UnsafeBinaryExprModel{._field_Node=_35722_m}), &__jule_any_type130);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4178_model))))));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c0eeb16b:;
			{
				if (((!(_1ac92b4e9_IsInt((*(_3943_lp))._field_Kind))) || (!(_1bb109306_equalModels((*(*(_35722_m))._field_Left.alloc)._field_Model, (*((*_35722_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1c0eeb0b1;
				};
				jule::Ptr<_1aca3208e_Const> _4268_c = static__1aca88ed6_NewU64(0LLU);;
				(*(_4268_c))._field_Kind=(*(_3943_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_4268_c, &__jule_any_type15);
				return;;
			}
		}
		_match_end_1c0eeb0b1:;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0eeb204:;
			{
				goto _match_end_1c100287b;
			}
		}
		else {
			_case_begin_1c10028e2:;
			{
				return;;
			}
		}
		_match_end_1c100287b:;
	};
	{
		auto &_match_expr{ (*((*(_35722_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c1003382:;
			{
				jule::Bool _4434_ok;
				jule::U64 _4438_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bb11d628_checkForBitShiftOpt(&((*_35722_m.alloc)._field_Left), &((*_35722_m.alloc)._field_Right));
					_4434_ok = __jule_assign_result.__jule_result_arg0;
					_4438_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_4434_ok) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1aca3208e_Const> _4489_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
					_1aca8ba00_SetU64(_4489_c.ptr(), _4438_x);
					_1bb11ae72_shift(_self_, _35722_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c10035c4:;
			{
				jule::Bool _4544_ok;
				jule::U64 _4548_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bb11d628_checkForBitShiftOpt(&((*_35722_m.alloc)._field_Left), &((*_35722_m.alloc)._field_Right));
					_4544_ok = __jule_assign_result.__jule_result_arg0;
					_4548_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_4544_ok) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1aca3208e_Const> _4599_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
					_1aca8ba00_SetU64(_4599_c.ptr(), _4548_x);
					_1bb11ae72_shift(_self_, _35722_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c100363a:;
			{
				jule::Ptr<_1aca3208e_Const> _4658_c = (*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
				if ((_1aca8b48e_AsF64(_4658_c.ptr()) == 2LL)) {
					(*_35722_m.alloc)._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(*(_35722_m))._field_Op.alloc));
					(*(*(_35722_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*(_35722_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1aca8b747_SetI64(_4658_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c10033e8:;
			{
				jule::F64 _4774_s = _1aca8b48e_AsF64((*((*_35722_m.alloc)._field_Right))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15).ptr());;
				if ((_4774_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*(_35722_m))._field_Left.alloc)._field_Model;
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c100345e:;
			{
				_1bb11ae72_shift(_self_, _35722_m);
				return;;
			}
		}
		else {
			_case_begin_1c1002d98:;
			{
				return;;
			}
		}
		_match_end_1c100331b:;
	};
	jule::Any _4917_model = jule::Any(jule::new_ptr<_1bb10b9e0_UnsafeBinaryExprModel>(_1bb10b9e0_UnsafeBinaryExprModel{._field_Node=_35722_m}), &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4917_model))))));
}



inline void _1bb11b4d3_unary(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca9550e_UnaryExprModel> _49521_m) {
	if ((!(_1bb1280a0_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_49521_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c101178b:;
			{
				{
					auto &_match_expr{ (*((*(_49521_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1c10127ae:;
						{
							jule::Ptr<_1aca9550e_UnaryExprModel> _5039_um = (*((*(_49521_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>();;
							if (((*((*(_5039_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_5039_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1c1012737:;
				};
				if ((!(_1bb127a3e_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bb11063c_isNilValidType((*(*(_49521_m))._field_Expr.alloc)._field_Type))) {
					jule::Uintptr _5175_var = _1bb11097d_getNilVar((*(*(_49521_m))._field_Expr.alloc)._field_Model);;
					if (_1bb10eb03_isSafe((*((*(_self_))._field_data))._field_nils, _5175_var)) {
						jule::Any _51910_model = jule::Any(jule::new_ptr<_1bb10cc66_UnsafeDerefExprModel>(_1bb10cc66_UnsafeDerefExprModel{._field_Base=_49521_m}), &__jule_any_type131);;
						(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_51910_model))))));
						return;;
					};
					_1bb10e471_pushVar((*((*(_self_))._field_data))._field_nils, _5175_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c1011abb:;
			{
				{
					auto &_match_expr{ (*((*(_49521_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1c101ac6d:;
						{
							jule::Ptr<_1acb3d420_Var> _5299_v = (*((*(_49521_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
							if ((*(_5299_v))._field_Reference) {
								jule::Any _53110_model = jule::Any(jule::new_ptr<_1bb10ab21_RefExprModel>(_1bb10ab21_RefExprModel{._field_Var=_5299_v}), &__jule_any_type132);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_53110_model))))));
							};
						}
					}
					_match_end_1c101abe6:;
				};
			}
		}
		_match_end_1c1011a11:;
	};
}



inline void _1bb11b78b_structureLit(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca95dd3_StructLitExprModel> _53828_m) {
	{
		auto expr = &((*(_53828_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c101d19e:;
		if (it != expr_end) {
			jule::Ptr<_1aca95a3c_StructArgExprModel> _53915_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1bb12607b_isBoundaryRiskyType((*((*(_53915_arg))._field_Expr))._field_Type)) {
						_1bb125cb2_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_53915_arg, &__jule_any_type133));
					};
				};
				if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
					_1bb10eeaa_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*(*(_53915_arg))._field_Expr.alloc)._field_Model);
				};
				if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
					_1bb120a9d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*(*(_53915_arg))._field_Expr.alloc)._field_Model);
				};
			}
			_iter_next_1c101d19e:;
			++it;
			goto _iter_begin_1c101d19e;
		}
		_iter_end_1c101d19e:;
	};
}



inline void _1bb11ba44_casting(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca96763_CastingExprModel> _55423_m) {
	jule::Bool _5553_valid = _1bb120dab_isDynamicValidType((*(_55423_m))._field_ExprType);;
	jule::Uintptr _5563_var = _1bb12162b_getDynamicVar((*((*_55423_m.alloc)._field_Expr))._field_Model);;
	if (((_5553_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1bb1206e6_isFits((*((*(_self_))._field_data))._field_dynamic, _5563_var, (*_55423_m.alloc)._field_Type))) {
		jule::Any _5588_model = jule::Any(jule::new_ptr<_1bb10d063_UnsafeCastingExprModel>(_1bb10d063_UnsafeCastingExprModel{._field_Base=_55423_m}), &__jule_any_type134);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5588_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && _5553_valid)) {
		_1bb11eea9_pushVar((*((*(_self_))._field_data))._field_dynamic, _5563_var, (*_55423_m.alloc)._field_Type);
	};
}



inline void _1bb11bda7_args(_1bb118854_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>> _56820_params, jule::Slice<jule::Any>* _56852_args) {
	{
		auto expr = _56852_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c102e26a:;
		if (it != expr_end) {
			jule::I32 _5698_i = it - expr->begin();
			jule::Any _56915_arg = *it;
			{
				if ((_5698_i >= _56820_params.len())) {
					goto _iter_next_1c102e26a;
				};
				jule::Ptr<_1acaa42a9_ParamIns> _5738_p = _56820_params[_5698_i];;
				if (((*((*(_5738_p))._field_Decl))._field_Mutable && (*(*(_5738_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1bb12607b_isBoundaryRiskyType((*_5738_p.alloc)._field_Type)) {
							_1bb125cb2_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _56915_arg);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						_1bb10eeaa_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _56915_arg);
					};
					if (((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr)) {
						_1bb120a9d_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _56915_arg);
					};
				};
			}
			_iter_next_1c102e26a:;
			++it;
			_5698_i++;
			goto _iter_begin_1c102e26a;
		}
		_iter_end_1c102e26a:;
	};
}



inline void _1bb11c160_scope(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1ac95aa56_Scope>* _59022_s) {
	jule::Ptr<_1bb111b49_scopeOptimizer> _5917_scopt = static__1bb1121bb_new((*(_59022_s)));;
	(*(_5917_scopt))._field_data=(*(_self_))._field_data;
	_1bb116676_optimize(_5917_scopt);
}



inline void _1bb11c418_optimizeStrBuilderCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _59639_m) {
	;
	{
		if (((*((*(_1ad623a2b_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel>(_1bb10a060_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ad623a2b_ProgramMeta))._field_StrBuilder.alloc)._field_WriteByte == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel>(_1bb10a060_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ad623a2b_ProgramMeta))._field_StrBuilder.alloc)._field_WriteRune == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel>(_1bb10a060_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
	{
		if (((*(*(_1ad623a2b_ProgramMeta))._field_StrBuilder.alloc)._field_WriteStr == (*((*(_59639_m))))._field_Func)) {
			jule::Any _6039_model = jule::Any(jule::new_ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel>(_1bb10a060_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_59639_m))}), &__jule_any_type135);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6039_model))))));
			return;;
		};
	};
}



inline void _1bb11c6c1_lenCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _61223_m) {
	if ((!(_1bb129cb6_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_61223_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c10351a5:;
			{
				goto _match_end_1c1035804;
			}
		}
		else {
			_case_begin_1c103d9c7:;
			{
				return;;
			}
		}
		_match_end_1c1035804:;
	};
	jule::Ptr<_1aca96763_CastingExprModel> _6237_c = (*((*(_61223_m))._field_Expr))._field_Model.cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96);;
	jule::Ptr<_1acbc8eb1_Prim> _6247_prim = _1acbc354e_Prim((*((*(_6237_c))._field_Expr))._field_Type.ptr());;
	if (((_6247_prim == nullptr) || (!(_1acbcc47b_IsStr(_6247_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _6297_slc = _1acbc45a5_Slc((*_6237_c.alloc)._field_Type.ptr());;
	if ((_6297_slc == nullptr)) {
		return;;
	};
	_6247_prim=_1acbc354e_Prim((*(_6297_slc))._field_Elem.ptr());
	if ((_6247_prim == nullptr)) {
		return;;
	};
	{
		
		if (_1acbca8db_IsU8(_6247_prim.ptr())) {
			_case_begin_1c1042190:;
			{
				(*_61223_m.alloc)._field_Expr=(*_6237_c.alloc)._field_Expr;
			}
		}
		else if (_1acbca3be_IsI32(_6247_prim.ptr())) {
			_case_begin_1c1042349:;
			{
				jule::Ptr<_1acaa540e_FnIns> _6468_func = (*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aca97115_FnCallExprModel>(_1aca97115_FnCallExprModel{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Func=_6468_func, ._field_IsCo=false, ._field_Expr=jule::Any(_6468_func, &__jule_any_type64), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_6237_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type31);
			}
		}
		_match_end_1c1041eb4:;
	};
}



inline void _1bb11c979_funcCall(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97115_FnCallExprModel> _65524_m) {
	_1bb11bda7_args(_self_, (*((*(_65524_m))._field_Func))._field_Params, &((*_65524_m.alloc)._field_Args));
	if (((*_65524_m.alloc)._field_Except != nullptr)) {
		_1bb11c160_scope(_self_, &((*_65524_m.alloc)._field_Except));
	};
	{
		
		if ((_1bb12a008_StdStrings && ((*(_1ad623a2b_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1c10462a4:;
			{
				_1bb11c418_optimizeStrBuilderCall(_self_, &(_65524_m));
			}
		}
		_match_end_1c1045a67:;
	};
}



inline void _1bb11cc32_indexing(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97995_IndexingExprModel> _66624_m) {
	if ((!(_1bb127a3e_Access))) {
		return;;
	};
	jule::Bool _6713_array = (_1acbc431e_Arr((*((*(_66624_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_6713_array && _1acb8d838_IsConst((*_66624_m.alloc)._field_Index.ptr()))) {
		jule::Any _6748_model = jule::Any(jule::new_ptr<_1bb10bcdc_UnsafeIndexingExprModel>(_1bb10bcdc_UnsafeIndexingExprModel{._field_Node=_66624_m}), &__jule_any_type136);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6748_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1bb126345_isBoundaryValidType((*(*(_66624_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _6804_var = _1bb12660e_getBoundaryVar((*(*(_66624_m))._field_Expr.alloc)._field_Model);;
		if (_1bb124db0_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _6804_var, (*(*(_66624_m))._field_Index.alloc)._field_Model)) {
			jule::Any _6829_model = jule::Any(jule::new_ptr<_1bb10bcdc_UnsafeIndexingExprModel>(_1bb10bcdc_UnsafeIndexingExprModel{._field_Node=_66624_m}), &__jule_any_type136);;
			(*(*(_self_))._field_model.alloc)=(*(((jule::Any*)((&(_6829_model))))));
			return;;
		};
		_1bb124673_pushVar((*((*(_self_))._field_data))._field_boundary, _6804_var, (*(*(_66624_m))._field_Index.alloc)._field_Model);
	};
}



inline void _1bb11ceda_anonFunc(_1bb118854_exprOptimizer* _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _69024_m) {
	_1bb11c160_scope(_self_, &((*((*(_69024_m))._field_Func))._field_Scope));
}



inline void _1bb11d1d8_do(_1bb118854_exprOptimizer* _self_) {
	_1ad61c7d3_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c1052414, jule::Ptr<__jule_anon_1c1052414_ctx>::make(__jule_anon_1c1052414_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c1052414_ctx_handler));
}








inline jule::Bool _1bb11e6c3_dynamicVar_eq(_1bb11e6c3_dynamicVar *_self_, _1bb11e6c3_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1bb11eea9_pushVar(jule::Ptr<_1bb11ea14_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1acbc0d98_Type> _2442_kind) {
	if (((!(_1bb129524_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1bb1212da_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c10622c0:;
		if (it != expr_end) {
			_1bb11e6c3_dynamicVar _3015_v = *it;
			{
				if ((_3015_v._field_var == _2424_var)) {
					_3015_v._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1c10622c0:;
			++it;
			goto _iter_begin_1c10622c0;
		}
		_iter_end_1c10622c0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1062b50:;
		if (it != expr_end) {
			_1bb11e6c3_dynamicVar _3715_v = *it;
			{
				if ((_3715_v._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1acbc0d98_Type> _1___jule_assign_arg = _2442_kind;
						_3715_v._field_var = ___jule_assign_arg;
						_3715_v._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1c1062b50:;
			++it;
			goto _iter_begin_1c1062b50;
		}
		_iter_end_1c1062b50:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1bb11e6c3_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb11e6c3_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1bb1202ea_removeVar(_1bb11ea14_dynamic* _self_, jule::Uintptr _4725_var) {
	if ((_4725_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1064ec6:;
			if (it != expr_end) {
				_1bb11e6c3_dynamicVar _4916_v = *it;
				{
					if ((_4916_v._field_var == _4725_var)) {
						_4916_v._field_var=0LLU;
						_4916_v._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1c1064ec6:;
				++it;
				goto _iter_begin_1c1064ec6;
			}
			_iter_end_1c1064ec6:;
		};
	};
	return false;;
}



inline jule::Bool _1bb1206e6_isFits(_1bb11ea14_dynamic* _self_, jule::Uintptr _6122_var, jule::Ptr<_1acbc0d98_Type> _6136_kind) {
	if ((_6122_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c106688a:;
			if (it != expr_end) {
				_1bb11e6c3_dynamicVar _6311_v = *it;
				{
					if ((_6311_v._field_var == _6122_var)) {
						return ((_6311_v._field_kind != nullptr) && _1acbc15d5_Equal(_6311_v._field_kind, _6136_kind));;
					};
				}
				_iter_next_1c106688a:;
				++it;
				goto _iter_begin_1c106688a;
			}
			_iter_end_1c106688a:;
		};
	};
	return false;;
}








inline jule::Bool _1bb1228e6_data_eq(_1bb1228e6_data *_self_, _1bb1228e6_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic) &&
		(_self_->_field_flags == _self_->_field_flags);
}

inline _1bb12231e_dataCheckpoint _1bb122c9d_getCheckpoint(_1bb1228e6_data* _self_) {
	_1bb12231e_dataCheckpoint _357_c = _1bb12231e_dataCheckpoint{._field_boundary=_1bb1241cd_boundary{._field_vars=jule::Slice<_1bb123d8c_boundaryVar>(nullptr)}, ._field_nils=_1bb10decb_nils{._field_vars=jule::Slice<_1bb10db8a_nilVar>(nullptr)}, ._field_dynamic=_1bb11ea14_dynamic{._field_vars=jule::Slice<_1bb11e6c3_dynamicVar>(nullptr)}};;
	_357_c._field_boundary._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bb123d8c_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bb123d8c_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_boundary))._field_vars);
	{
		auto expr = &(_357_c._field_boundary._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c106887b:;
		if (it != expr_end) {
			jule::I32 _377_i = it - expr->begin();
			{
				_357_c._field_boundary._field_vars[_377_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),_357_c._field_boundary._field_vars[_377_i]._field_maxSize);
			}
			_iter_next_1c106887b:;
			++it;
			_377_i++;
			goto _iter_begin_1c106887b;
		}
		_iter_end_1c106887b:;
	};
	_357_c._field_nils._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bb10db8a_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bb10db8a_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*((*(_self_))._field_nils))._field_vars);
	_357_c._field_dynamic._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bb11e6c3_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bb11e6c3_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1acbc0d98_Type>(nullptr)}; __jule_collection; }),(*((*(_self_))._field_dynamic))._field_vars);
	return _357_c;;
}



inline void _1bb123056_loadCheckpoint(_1bb1228e6_data* _self_, _1bb12231e_dataCheckpoint* _4535_c) {
	(*((*(_self_))._field_boundary))=(*(_4535_c))._field_boundary;
	(*((*(_self_))._field_nils))=(*(_4535_c))._field_nils;
	(*((*(_self_))._field_dynamic))=(*(_4535_c))._field_dynamic;
}











inline void _1bb124673_pushVar(_1bb1241cd_boundary* _self_, jule::Uintptr _2423_var, jule::Any _2441_maxSize) {
	if (((!(_1bb127a3e_Access)) || (_2423_var == 0LLU))) {
		return;;
	};
	if ((!(_1bb125245_isValidBoundaryInfo(_2441_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c107cb8c:;
		if (it != expr_end) {
			_1bb123d8c_boundaryVar _3215_v = *it;
			{
				if ((_3215_v._field_var == _2423_var)) {
					{
						auto expr = &(_3215_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c107da17:;
						if (it != expr_end) {
							jule::I32 _349_i = it - expr->begin();
							jule::Any _3412_max = *it;
							{
								if (_1bb125982_fitsSize(_2441_maxSize, _3412_max)) {
									_3215_v._field_maxSize[_349_i]=_2441_maxSize;
									return;;
								};
							}
							_iter_next_1c107da17:;
							++it;
							_349_i++;
							goto _iter_begin_1c107da17;
						}
						_iter_end_1c107da17:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3215_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1c107cb8c:;
			++it;
			goto _iter_begin_1c107cb8c;
		}
		_iter_end_1c107cb8c:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c107d0aa:;
		if (it != expr_end) {
			_1bb123d8c_boundaryVar _4615_v = *it;
			{
				if ((_4615_v._field_var == 0LLU)) {
					_4615_v._field_var=_2423_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4615_v._field_maxSize; __jule_push_dest.push(_2441_maxSize); };
					return;;
				};
			}
			_iter_next_1c107d0aa:;
			++it;
			goto _iter_begin_1c107d0aa;
		}
		_iter_end_1c107d0aa:;
	};
	{ jule::Slice<_1bb123d8c_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bb123d8c_boundaryVar{._field_var=_2423_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2441_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1bb124db0_fitsMaxSize(_1bb1241cd_boundary* _self_, jule::Uintptr _7127_var, jule::Any _7141_expr) {
	if ((_7127_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c108339b:;
			if (it != expr_end) {
				_1bb123d8c_boundaryVar _7311_v = *it;
				{
					if ((_7311_v._field_var == _7127_var)) {
						return (_1bb12560d_fitsMaxSize(_7311_v._field_maxSize, _7141_expr) != -1LL);;
					};
				}
				_iter_next_1c108339b:;
				++it;
				goto _iter_begin_1c108339b;
			}
			_iter_end_1c108339b:;
		};
	};
	return false;;
}








inline jule::Bool _1bb243ece_Optimizer_eq(_1bb243ece_Optimizer *_self_, _1bb243ece_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1bb243ece_Optimizer> static__1bb244496_New(jule::Ptr<_1ad618328_IR>* _2121_ir) {
	return jule::new_ptr<_1bb243ece_Optimizer>(_1bb243ece_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1bb24474e_optimizeExpr(_1bb243ece_Optimizer* _self_, jule::Any* _2733_model) {
	static__1bb118c61_optimize(_2733_model);
}



inline void _1bb244a07_optimizeGlobal(_1bb243ece_Optimizer* _self_, jule::Ptr<_1acb3d420_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1bb24474e_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1bb244cb0_optimizeFunction(_1bb243ece_Optimizer* _self_, jule::Ptr<_1acaa2351_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1089cba:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1bb111b49_scopeOptimizer> _428_so = static__1bb1121bb_new((*(_4115_ins))._field_Scope);;
				_1bb116676_optimize(_428_so);
			}
			_iter_next_1c1089cba:;
			++it;
			goto _iter_begin_1c1089cba;
		}
		_iter_end_1c1089cba:;
	};
}



inline void _1bb245068_optimizeStruct(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac9ce129_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c108b492:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c108be32:;
					if (it != expr_end) {
						jule::Ptr<_1ac9d13d4_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1bb24474e_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1c108be32:;
						++it;
						goto _iter_begin_1c108be32;
					}
					_iter_end_1c108be32:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c108c3a5:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _5716_m = *it;
						{
							_1bb244cb0_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1c108c3a5:;
						++it;
						goto _iter_begin_1c108c3a5;
					}
					_iter_end_1c108c3a5:;
				};
			}
			_iter_next_1c108b492:;
			++it;
			goto _iter_begin_1c108b492;
		}
		_iter_end_1c108b492:;
	};
}



inline void _1bb245321_optimizeGlobals(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c108b959:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c108e561:;
					if (it != expr_end) {
						jule::Ptr<_1acb3d420_Var> _6516_v = *it;
						{
							_1bb244a07_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1c108e561:;
						++it;
						goto _iter_begin_1c108e561;
					}
					_iter_end_1c108e561:;
				};
			}
			_iter_next_1c108b959:;
			++it;
			goto _iter_begin_1c108b959;
		}
		_iter_end_1c108b959:;
	};
}



inline void _1bb2455c9_optimizeFunctions(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c108ea7d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1090980:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _7316_func = *it;
						{
							_1bb244cb0_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1c1090980:;
						++it;
						goto _iter_begin_1c1090980;
					}
					_iter_end_1c1090980:;
				};
			}
			_iter_next_1c108ea7d:;
			++it;
			goto _iter_begin_1c108ea7d;
		}
		_iter_end_1c108ea7d:;
	};
}



inline void _1bb245882_optimizeStructs(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1090e9c:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1091d9e:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _8116_s = *it;
						{
							_1bb245068_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_1c1091d9e:;
						++it;
						goto _iter_begin_1c1091d9e;
					}
					_iter_end_1c1091d9e:;
				};
			}
			_iter_next_1c1090e9c:;
			++it;
			goto _iter_begin_1c1090e9c;
		}
		_iter_end_1c1090e9c:;
	};
}



inline void _1bb245b3a_optimizePackage(_1bb243ece_Optimizer* _self_, jule::Ptr<_1ac98e150_Package>* _8736_p) {
	_1bb245321_optimizeGlobals(_self_, _8736_p);
	_1bb2455c9_optimizeFunctions(_self_, _8736_p);
	_1bb245882_optimizeStructs(_self_, _8736_p);
}



inline void _1bb245d38_Optimize(_1bb243ece_Optimizer* _self_) {
	_1bb24609c_detectEnabled();
	if (_1bb1271d1_Deadcode) {
		_1bb23c8ce_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1bb243d47_scopeEnabled || _1bb243b38_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1093d6d:;
			if (it != expr_end) {
				jule::Ptr<_1ac98b8cd_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_1bb245b3a_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_1c1093d6d:;
				++it;
				goto _iter_begin_1c1093d6d;
			}
			_iter_end_1c1093d6d:;
		};
		_1bb245b3a_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1bb1271d1_Deadcode) {
		_1bb2426e7_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1aae3b5bb_AbsTime_eq(_1aae3b5bb_AbsTime *_self_, _1aae3b5bb_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1aae3bc92_Time_eq(_1aae3bc92_Time *_self_, _1aae3bc92_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1aae3bc92_Time static__1aae3c17c_Unix(jule::U64 _9117_sec) {
	return _1aae3bc92_Time{._field_sec=_9117_sec};;
}



inline _1aae3bc92_Time static__1aae3c38b_Now(void) {
	return static__1aae3c17c_Unix(_1aae3dd82_unix());;
}



inline _1aae3b5bb_AbsTime _1aae3da74_Abs(_1aae3bc92_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1aae3aa2c_mdays[static_cast<jule::I32>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1aae3aa2c_mdays[static_cast<jule::I32>(_1697_months)];
		}
	_iter_next_1c10c37e8:;
	}
	_iter_end_1c10c37e8:;;
	_1aae3b5bb_AbsTime _1747_t = _1aae3b5bb_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1bb248104_scopeCoder_eq(_1bb248104_scopeCoder *_self_, _1bb248104_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1bb248104_scopeCoder> static__1bb2487ec_new(jule::Ptr<_1aae49299_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1bb248104_scopeCoder>(_1bb248104_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1c10e4ad3_iterHead(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bb126dd4_Copy && _1bb25152a_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c10ea04a:;
				{
					jule::Ptr<_1acb3d420_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1bb262dbb_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1c10e8477;
					};
					goto _case_begin_1c10e84dd;
				}
			}
			else {
				_case_begin_1c10e84dd:;
				{
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bb262dbb_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c10e8477:;
		};
	} else {
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, _4452_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
}



inline void _1bb248ec3_rangeIndexIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _9336_it) {
	_1a6a5cb3c_Builder _947_sb = static__1a6a5d489_New(64LL);;
	static__1bb26c249_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1a6a5e49b_Str(&_947_sb);;
	_1a6a5e699_Clear(&_947_sb);
	static__1bb26c821_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1a6a5e49b_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1c10e4ad3_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1aae51647_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c11054d9, jule::Ptr<__jule_anon_1c11054d9_ctx>::make(__jule_anon_1c11054d9_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1c11054d9_ctx_handler));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1bb126dd4_Copy && _1bb2518e3_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1aae51647_varInitExpr((*(_self_))._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c1109125, jule::Ptr<__jule_anon_1c1109125_ctx>::make(__jule_anon_1c1109125_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1c1109125_ctx_handler));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1bb2507c1_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, _993_next);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aae499b4_write((*(_self_))._field_oc, _963_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c535_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb24927b_rangeHashmapIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter>* _16038_it) {
	_1a6a5cb3c_Builder _1617_sb = static__1a6a5d489_New(64LL);;
	static__1bb26c249_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1a6a5e49b_Str(&_1617_sb);;
	_1a6a5e699_Clear(&_1617_sb);
	static__1bb26c821_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1a6a5e49b_Str(&_1617_sb);;
	jule::Ptr<_1acbceb54_Map> _1687__map = _1acbc50de_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1ac9d1e84_StructIns> _1697_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1acaa540e_FnIns> _1717_f = (*(_1ac9d302e_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1ac9d1e84_StructIns> _1737_iterator = _1ad62261d_FindStructGenericInstance(&((*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1acaa540e_FnIns> _1747_nextCall = (*(_1ac9d302e_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae5c752_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, _1633_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae5d962_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1aae51647_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c1128b17, jule::Ptr<__jule_anon_1c1128b17_ctx>::make(__jule_anon_1c1128b17_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c1128b17_ctx_handler));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1aae51647_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c112b103, jule::Ptr<__jule_anon_1c112b103_ctx>::make(__jule_anon_1c112b103_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c112b103_ctx_handler));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1bb2507c1_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, _1663_next);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aae499b4_write((*(_self_))._field_oc, _1633_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c535_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb249534_strRuneIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10c969_StrRuneIter> _24132_it) {
	_1a6a5cb3c_Builder _2427_sb = static__1a6a5d489_New(64LL);;
	static__1bb26c249_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _1a6a5e49b_Str(&_2427_sb);;
	_1a6a5e699_Clear(&_2427_sb);
	static__1bb26c821_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _1a6a5e49b_Str(&_2427_sb);;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bb126dd4_Copy && _1bb25152a_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c113a266:;
				{
					jule::Ptr<_1acb3d420_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_1bb262dbb_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1c1138693;
					};
					goto _case_begin_1c1138709;
				}
			}
			else {
				_case_begin_1c1138709:;
				{
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bb262dbb_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c1138693:;
		};
	} else {
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1aae51647_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c11451e9, jule::Ptr<__jule_anon_1c11451e9_ctx>::make(__jule_anon_1c11451e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c11451e9_ctx_handler));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1aae51647_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1aae499b4_write((*(_self_))._field_oc, _2443_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyB != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1bb2507c1_scope(_self_, (*(*(_24132_it))._field_Base.alloc)._field_Scope);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, _2473_next);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1aae499b4_write((*(_self_))._field_oc, _2443_begin);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb2497dc_ifCase(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ae74_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1bb2507c1_scope(_self_, (*_35327_i.alloc)._field_Scope);
}



inline void _1bb249a95_conditional(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95b68e_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c115a75e:;
		if (it != expr_end) {
			jule::Ptr<_1ac95ae74_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1c115a75e;
				};
				if (_3637_writed) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_1bb2497dc_ifCase(_self_, _36415_elif);
			}
			_iter_next_1c115a75e:;
			++it;
			goto _iter_begin_1c115a75e;
		}
		_iter_end_1c115a75e:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1bb2507c1_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1bb249d4d_infIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95b98b_InfIter> _38228_it) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1bb2507c1_scope(_self_, (*(_38228_it))._field_Scope);
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c821_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c535_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bb24a106_whileIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95be42_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*_39930_it.alloc)._field_Next != nullptr)) {
			_1bb250260_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1bb2507c1_scope(_self_, (*_39930_it.alloc)._field_Scope);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c821_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26c535_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bb24a3ae_rangeIter(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95c88d_RangeIter> _43830_it) {
	{
		
		if ((_1acbc45a5_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c1171159:;
			{
				_1bb248ec3_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1acbc431e_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c1170d07:;
			{
				_1bb248ec3_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1acbc50de_Map((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c1170d6d:;
			{
				_1bb24927b_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1c1170c91:;
			{
				_1bb248ec3_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1c1170b81:;
	};
}



inline void _1bb24a667_cont(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95cc23_ContSt> _45121_c) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bb26c821_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _1bb24a920_label(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95d5a3_Label> _45622_l) {
	static__1bb26cb0c_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1bb24abc8_gotoSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95dc13_GotoSt> _46123_gt) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bb26cb0c_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _1bb24ae81_postfix(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e0dc_Postfix> _46628_p) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1aae499b4_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _1bb24b239_assignLeft(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c117a174:;
			{
				jule::Ptr<_1aca97995_IndexingExprModel> _4768_iem = (*(_47332_model)).cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43);;
				jule::Ptr<_1acbceb54_Map> _4774__map = _1acbc50de_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1c117a10d;
				};
				jule::Ptr<_1ac9d1e84_StructIns> _4838_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*(_4774__map))._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1acaa540e_FnIns> _4858_f = (*(_1ac9d302e_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1a8e61e40_Production))) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aae4c148_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1c117a10d:;
	};
	_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _1bb24b4e2_shl(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _50424_a) {
	_1bb24b239_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bb25750e_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _1bb24b79a_shr(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _51024_a) {
	_1bb24b239_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bb257872_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _1bb24ba53_divByZeroAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _51636_a) {
	_1bb24b239_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bb2566ea_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _1bb24c02b_operatorOverloadingAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _52247_s, jule::Ptr<_1aca94b3a_OperandExprModel>* _52273_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _5238_r, jule::U32 _52336_op) {
	;
	jule::Ptr<_1acaa540e_FnIns> _5257_f = _1ad621d15_FindOperator(_52247_s, _52336_op, false);;
	if ((_5257_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:527:4"));;
	};
	static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5257_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bb24b239_assignLeft(_self_, &((*((*(_52273_l))))._field_Model));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5238_r))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb24c2d4_assign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95e593_Assign> _53727_a) {
	{
		auto &_match_expr{ (*((*(_53727_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c11904a8:;
			{
				if ((_1a8e61bed_Safety && (_1acbc4ac2_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1bb24ba53_divByZeroAssign(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c1190530:;
			{
				if ((_1acbc4ac2_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bb24b4e2_shl(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c1190596:;
			{
				if ((_1acbc4ac2_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bb24b79a_shr(_self_, _53727_a);
					return;;
				};
			}
		}
		_match_end_1c11903dc:;
	};
	if ((((*((*(_53727_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1acbc4ac2_Struct((*((*_53727_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_1ac9d1e84_StructIns> _5608_s = _1acbc4ac2_Struct((*((*(_53727_a))._field_Left))._field_Type);;
		_1bb24c02b_operatorOverloadingAssign(_self_, &(_5608_s), &((*_53727_a.alloc)._field_Left), &((*_53727_a.alloc)._field_Right), (*(*(_53727_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1bb24b239_assignLeft(_self_, &((*(*(_53727_a))._field_Left.alloc)._field_Model));
	_1aae499b4_write((*_self_.alloc)._field_oc, (*(*(_53727_a))._field_Op.alloc)._field_Kind);
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_53727_a.alloc)._field_Right))._field_Model);
}



inline void _1bb24c58c_mapLookupAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _57037_a) {
	jule::Ptr<_1aca97995_IndexingExprModel> _5727_iem = (*((*(_57037_a))))._field_Right.cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43);;
	jule::Ptr<_1acbceb54_Map> _5737__map = _1acbc50de_Map((*((*(_5727_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1ac9d1e84_StructIns> _5757_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5737__map))._field_Key; (*it++) = (*_5737__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1acaa540e_FnIns> _5777_f = (*(_1ac9d302e_FindMethod(_5757_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5777_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb24b239_assignLeft(_self_, &((*(*(_5727_iem))._field_Expr.alloc)._field_Model));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5727_iem.alloc)._field_Index))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57037_a))))._field_Left[0LL] != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[0LL]))._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57037_a))))._field_Left[1LL] != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[1LL]))._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb24c845_multiAssignTup(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _60236_a) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1aca9a723_TupleExprModel> _6127_tup = (*((*(_60236_a))))._field_Right.cast_ptr<_1aca9a723_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6127_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11a5545:;
		if (it != expr_end) {
			jule::I32 _6148_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _61415_r = *it;
			{
				_1aae4a366_indent((*(_self_))._field_oc);
				jule::Ptr<_1acb8cded_Data> _6168_l = (*((*(_60236_a))))._field_Left[_6148_i];;
				if ((_6168_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6168_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c11a867a:;
							{
								jule::Ptr<_1acb3d420_Var> _62010_v = (*(_6168_l))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
								if ((!((*(_62010_v))._field_Reference))) {
									goto _match_end_1c11a8614;
								};
								{
									auto expr = &((*((*(_60236_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c11a9659:;
									if (it != expr_end) {
										jule::Ptr<_1acb3d420_Var> _62713_dv = *it;
										{
											if ((_62010_v == _62713_dv)) {
												goto _julec_label_1c11a959e;
											};
										}
										_iter_next_1c11a9659:;
										++it;
										goto _iter_begin_1c11a9659;
									}
									_iter_end_1c11a9659:;
								};
								goto _match_end_1c11a8614;
								_julec_label_1c11a959e:;
								static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62010_v);
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60236_a))))._field_Left[_6148_i]=nullptr;
								goto _iter_next_1c11a5545;
							}
						}
						_match_end_1c11a8614:;
					};
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6168_l.alloc)._field_Type);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1bb26a1ae_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bb247895_assignArgName, static_cast<jule::Uintptr>(_6148_i));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_61415_r.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c11a5545:;
			++it;
			_6148_i++;
			goto _iter_begin_1c11a5545;
		}
		_iter_end_1c11a5545:;
	};
	{
		auto expr = &((*((*(_60236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11b0709:;
		if (it != expr_end) {
			jule::I32 _6568_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _65615_l = *it;
			{
				if ((_65615_l == nullptr)) {
					goto _iter_next_1c11b0709;
				};
				_1aae4a366_indent((*(_self_))._field_oc);
				_1bb24b239_assignLeft(_self_, &((*(_65615_l))._field_Model));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1bb26a1ae_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bb247895_assignArgName, static_cast<jule::Uintptr>(_6568_i));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c11b0709:;
			++it;
			_6568_i++;
			goto _iter_begin_1c11b0709;
		}
		_iter_end_1c11b0709:;
	};
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bb24caed_multiAssignFn(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign>* _67235_a) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	jule::Ptr<_1aca97115_FnCallExprModel> _6777_f = (*((*(_67235_a))))._field_Right.cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
	_1aae6444b_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6777_f))._field_Func))._field_Result));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67235_a))))._field_Right);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1acbce0a4_Tuple> _6837_tup = _1acbc5375_Tup((*(*(_6777_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67235_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11b925c:;
		if (it != expr_end) {
			jule::I32 _6848_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _68415_l = *it;
			{
				if ((_68415_l == nullptr)) {
					goto _iter_next_1c11b925c;
				};
				;
				_1aae4a366_indent((*(_self_))._field_oc);
				_1bb24b239_assignLeft(_self_, &((*(_68415_l))._field_Model));
				{
					
					if (_1acbc15d5_Equal((*(_6837_tup))._field_Types[_6848_i], (*(_68415_l))._field_Type)) {
						_case_begin_1c11c460d:;
						{
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_6848_i));
						}
					}
					else if (_1ad61da04_IsAny(&((*(_68415_l))._field_Type))) {
						_case_begin_1c11c151c:;
						{
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_6848_i));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1aae4b4bb_pushAnyType((*(_self_))._field_oc, (*(_6837_tup))._field_Types[_6848_i])));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1c11ba5d2:;
						{
							if ((_1acbc4d58_Trait((*(_6837_tup))._field_Types[_6848_i].ptr()) != nullptr)) {
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1acaaca65_Trait> _70510_t1 = _1acbc4d58_Trait((*(_68415_l))._field_Type.ptr());;
								jule::Ptr<_1acaaca65_Trait> _70610_t2 = _1acbc4d58_Trait((*(_6837_tup))._field_Types[_6848_i].ptr());;
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_6848_i));
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1aae4bd90_pushAndWriteMaskMapper((*(_self_))._field_oc, _70510_t1, _70610_t2);
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c11bb616;
							};
							jule::Ptr<_1acaaca65_Trait> _7145_t = _1acbc4d58_Trait((*(_68415_l))._field_Type);;
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_6848_i));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1bb26aec3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7145_t);
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ad6218d6_FindTraitTypeOffset(_7145_t, (*(_6837_tup))._field_Types[_6848_i])));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1c11bb616:;
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c11b925c:;
			++it;
			_6848_i++;
			goto _iter_begin_1c11b925c;
		}
		_iter_end_1c11b925c:;
	};
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bb24cda6_multiAssign(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95ea49_MultiAssign> _73132_a) {
	{
		auto expr = &((*(_73132_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11c9ed7:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _73415_d = *it;
			{
				_1aae51647_varInitExpr((*(_self_))._field_oc, &(_73415_d), nullptr);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1aae4a366_indent((*(_self_))._field_oc);
			}
			_iter_next_1c11c9ed7:;
			++it;
			goto _iter_begin_1c11c9ed7;
		}
		_iter_end_1c11c9ed7:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c11ca713:;
			{
				_1bb24c58c_mapLookupAssign(_self_, &(_73132_a));
				return;;
			}
		}
		_match_end_1c11ca69c:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c11ca79b:;
			{
				_1bb24c845_multiAssignTup(_self_, &(_73132_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c11cc24d:;
			{
				_1bb24caed_multiAssignFn(_self_, &(_73132_a));
			}
		}
		else {
			_case_begin_1c11cc1d7:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:753:4"));;
			}
		}
		_match_end_1c11cc171:;
	};
}



inline jule::Fn<void> _1bb24d1e7_matchExpr(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _75730_m) {
	if ((!(_1acb8d838_IsConst((*(_75730_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c11ce8d2, jule::Ptr<__jule_anon_1c11ce8d2_ctx>::make(__jule_anon_1c11ce8d2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c11ce8d2_ctx_handler);;
	};
	if (((!(_1aca8ccba_IsBool((*(*(_75730_m))._field_Expr.alloc)._field_Constant.ptr()))) || (!(_1aca8a6be_ReadBool((*((*(_75730_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c11d0c13, jule::Ptr<__jule_anon_1c11d0c13_ctx>::make(__jule_anon_1c11d0c13_ctx{._self_=_self_,._75730_m=_75730_m}).as<jule::Uintptr>(), __jule_anon_1c11d0c13_ctx_handler);;
	};
	return nullptr;;
}



inline void _1bb24d55a_case(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _76725_m, jule::Ptr<_1ac960cae_Case> _76746_c) {
	if ((((*(_76746_c))._field_Exprs.len() != 0LL) && (!((*(_76725_m))._field_Comptime)))) {
		if ((((*_76725_m.alloc)._field_Cases.len() > 0LL) && ((*(_76725_m))._field_Cases[0LL] == _76746_c))) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_76746_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c11d4e9d:;
			if (it != expr_end) {
				jule::I32 _7749_i = it - expr->begin();
				jule::Ptr<_1acb8cded_Data> _77416_expr = *it;
				{
					{
						
						if ((!((*_76725_m.alloc)._field_TypeMatch))) {
							_case_begin_1c11dcbba:;
							{
								jule::Fn<void> _7776_caseExpr = _1bb24d1e7_matchExpr(_self_, _76725_m);;
								if (_1acb8db79_GoodOperand((*_76725_m.alloc)._field_Expr.ptr(), &(_77416_expr))) {
									if ((_7776_caseExpr != nullptr)) {
										_7776_caseExpr();
										_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_77416_expr))._field_Model);
								} else {
									_1bb258c5d_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
									if ((_7776_caseExpr != nullptr)) {
										_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7776_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c11d5b08:;
							{
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1acbc0d98_Type> _79310_tk = (*(_77416_expr))._field_Model.cast_ptr<_1acbc0d98_Type>(&__jule_any_type87);;
								if ((_1acbc4d58_Trait((*((*_76725_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1bb255056_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1acbc37d5_Sptr((*(_77416_expr))._field_Type) != nullptr));
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1bb26aec3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1acbc4d58_Trait((*((*(_76725_m))._field_Expr))._field_Type));
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ad6218d6_FindTraitTypeOffset(_1acbc4d58_Trait((*((*(_76725_m))._field_Expr))._field_Type), (*_77416_expr.alloc)._field_Type)));
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _8037_j = _1aae4b4bb_pushAnyType((*(_self_))._field_oc, _79310_tk);;
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_8037_j));
								};
							}
						}
						_match_end_1c11d59e8:;
					};
					if ((((*_76746_c.alloc)._field_Exprs.len() - _7749_i) > 1LL)) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1c11d4e9d:;
				++it;
				_7749_i++;
				goto _iter_begin_1c11d4e9d;
			}
			_iter_end_1c11d4e9d:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_76725_m))._field_Default == _76746_c) && ((*_76725_m.alloc)._field_Cases.len() != 0LL))) {
		_1aae4a366_indent((*(_self_))._field_oc);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26d1d4_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_76746_c));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_76746_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1aae4a366_indent((*(_self_))._field_oc);
		_1bb2507c1_scope(_self_, (*_76746_c.alloc)._field_Scope);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb24d813_matchSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac960286_Match> _83728_m) {
	if ((((*(_83728_m))._field_Cases.len() == 0LL) && ((*_83728_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*_83728_m.alloc)._field_Comptime && (((*_83728_m.alloc)._field_Default == nullptr) || ((*((*((*_83728_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((!((*_83728_m.alloc)._field_Comptime)) && (!(_1acb8d838_IsConst((*_83728_m.alloc)._field_Expr.ptr()))))) {
		if ((_1bb126dd4_Copy && _1bb25152a_isCopyOptimizable(&((*_83728_m.alloc)._field_Expr)))) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_83728_m))._field_Expr.alloc)._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	if (((*_83728_m.alloc)._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_83728_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1201470:;
			if (it != expr_end) {
				jule::Ptr<_1ac960cae_Case> _86516_c = *it;
				{
					if ((_86516_c == nullptr)) {
						goto _iter_next_1c1201470;
					};
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1aae4a366_indent((*(_self_))._field_oc);
					_1bb24d55a_case(_self_, _83728_m, _86516_c);
				}
				_iter_next_1c1201470:;
				++it;
				goto _iter_begin_1c1201470;
			}
			_iter_end_1c1201470:;
		};
	};
	if (((*_83728_m.alloc)._field_Default != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bb24d55a_case(_self_, _83728_m, (*_83728_m.alloc)._field_Default);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26cde8_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_83728_m));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb24dabb_fallSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac9614a7_FallSt> _89223_f) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bb26d1d4_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89223_f))._field_DestCase);
}



inline void _1bb24dd74_breakSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95d0ec_BreakSt> _89724_b) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_89724_b))._field_It != 0LLU)) {
		static__1bb26c535_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_89724_b.alloc)._field_It);
	} else {
		static__1bb26cde8_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89724_b))._field_Mtch);
	};
}



inline void _1bb24e12c_setResult(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac96184d_RetSt> _90630_r) {
	if (((*((*((*((*(_90630_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_90630_r.alloc)._field_Expr);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1aae4a366_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_90630_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c120b436:;
			{
				jule::Slice<jule::Ptr<_1acb8cded_Data>> _9168_datas = (*((*(_90630_r))._field_Expr.unsafe_cast_ptr<_1aca9a723_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9168_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c121011b:;
					if (it != expr_end) {
						jule::I32 _9178_i = it - expr->begin();
						jule::Ptr<_1acb8cded_Data> _91711_data = *it;
						{
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_9178_i));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_91711_data))._field_Model);
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1aae4a366_indent((*(_self_))._field_oc);
						}
						_iter_next_1c121011b:;
						++it;
						_9178_i++;
						goto _iter_begin_1c121011b;
					}
					_iter_end_1c121011b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c120e0b5:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1bb262dbb_model((*((*(_self_))._field_oc))._field_ec, (*_90630_r.alloc)._field_Expr);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1c120dbca:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:930:4"));;
			}
		}
		_match_end_1c120db64:;
	};
}



inline void _1bb24e3d5_retSt(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac96184d_RetSt> _93426_r) {
	if (_1acaa2807_IsVoid((*((*(_93426_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93426_r))._field_Func.alloc)._field_Result);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93426_r))._field_Expr != nullptr)) {
		_1bb24e12c_setResult(_self_, _93426_r);
	};
	if ((*((*((*_93426_r.alloc)._field_Func))._field_Decl))._field_Exceptional) {
		_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1aae6444b_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93426_r))._field_Func.alloc)._field_Result));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1bb24e68d_var(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acb3d420_Var> _97024_v) {
	if ((!((*(_97024_v))._field_Constant))) {
		_1aae51900_var((*(_self_))._field_oc, _97024_v);
	};
}



inline void _1bb24e946_mutSlicing(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10b65a_MutSlicingExprModel> _97631_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_97631_m))._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1a8e61e40_Production))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aae4c148_locInfo((*(_self_))._field_oc, &((*_97631_m.alloc)._field_Token));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Left);
	if (((*_97631_m.alloc)._field_Right != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Right);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bb24ebee_swap(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb10a406_SwapExprModel> _99325_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1bb258c5d_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99325_m))._field_Left))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bb258c5d_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99325_m.alloc)._field_Right))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb24eea7_exceptionalForwarding(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1bb109d73_ExceptionalForwardingExprModel> _100142_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1bb25a688_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100142_m))._field_Expr));
}



inline void _1bb250260_st(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Any _100723_st) {
	if ((_100723_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _100723_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c122c435:;
			{
				_1bb2507c1_scope(_self_, _100723_st.cast_ptr<_1ac95aa56_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c122c6aa:;
			{
				_1bb24e68d_var(_self_, _100723_st.cast_ptr<_1acb3d420_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c122c721:;
			{
				_1bb262dbb_model((*((*(_self_))._field_oc))._field_ec, (*(_100723_st.unsafe_cast_ptr<_1acb8cded_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c122ce91:;
			{
				_1bb249a95_conditional(_self_, _100723_st.cast_ptr<_1ac95b68e_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c122d007:;
			{
				_1bb249d4d_infIter(_self_, _100723_st.cast_ptr<_1ac95b98b_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c122d06d:;
			{
				_1bb24a106_whileIter(_self_, _100723_st.cast_ptr<_1ac95be42_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c122d0d4:;
			{
				_1bb24a3ae_rangeIter(_self_, _100723_st.cast_ptr<_1ac95c88d_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c122d14a:;
			{
				_1bb24a667_cont(_self_, _100723_st.cast_ptr<_1ac95cc23_ContSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c122d1b1:;
			{
				_1bb24a920_label(_self_, _100723_st.cast_ptr<_1ac95d5a3_Label>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c122d227:;
			{
				_1bb24abc8_gotoSt(_self_, _100723_st.cast_ptr<_1ac95dc13_GotoSt>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c122d28d:;
			{
				_1bb24ae81_postfix(_self_, _100723_st.cast_ptr<_1ac95e0dc_Postfix>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c122d304:;
			{
				_1bb24c2d4_assign(_self_, _100723_st.cast_ptr<_1ac95e593_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c122d36a:;
			{
				_1bb24cda6_multiAssign(_self_, _100723_st.cast_ptr<_1ac95ea49_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c122d3d1:;
			{
				_1bb24d813_matchSt(_self_, _100723_st.cast_ptr<_1ac960286_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c122d447:;
			{
				_1bb24dabb_fallSt(_self_, _100723_st.cast_ptr<_1ac9614a7_FallSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c122d4be:;
			{
				_1bb24dd74_breakSt(_self_, _100723_st.cast_ptr<_1ac95d0ec_BreakSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c122d546:;
			{
				_1bb24e3d5_retSt(_self_, _100723_st.cast_ptr<_1ac96184d_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c122d5bd:;
			{
				_1bb26089c_pushToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1bb10c1b6_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c122d645:;
			{
				_1bb260b55_appendToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1bb10c590_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c122d6bc:;
			{
				_1bb24e946_mutSlicing(_self_, _100723_st.cast_ptr<_1bb10b65a_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c122d744:;
			{
				_1bb24ebee_swap(_self_, _100723_st.cast_ptr<_1bb10a406_SwapExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c122d7bb:;
			{
				_1bb24eea7_exceptionalForwarding(_self_, _100723_st.cast_ptr<_1bb109d73_ExceptionalForwardingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c122d843:;
			{
				_1bb249534_strRuneIter(_self_, _100723_st.cast_ptr<_1bb10c969_StrRuneIter>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1c122c29d:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c122c237:;
	};
}



inline void _1bb250518_scopeStmts(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95aa56_Scope>* _106332_s) {
	{
		auto expr = &((*((*(_106332_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c123b90b:;
		if (it != expr_end) {
			jule::Any _106415_st = *it;
			{
				_1aae4a366_indent((*(_self_))._field_oc);
				_1bb250260_st(_self_, _106415_st);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c123b90b:;
			++it;
			goto _iter_begin_1c123b90b;
		}
		_iter_end_1c123b90b:;
	};
}



inline void _1bb2507c1_scope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1ac95aa56_Scope> _107226_s) {
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	if ((*(_107226_s))._field_Deferred) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bb250518_scopeStmts(_self_, &(_107226_s));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*_107226_s.alloc)._field_Deferred) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1bb250a79_commonFuncScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _108737_f) {
	if ((!(_1acaa2807_IsVoid((*((*(_108737_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1acbce0a4_Tuple> _10898_tup = _1acbc5375_Tup((*((*(_108737_f))))._field_Result.ptr());;
		if ((_10898_tup != nullptr)) {
			_1aae4a366_indent((*(_self_))._field_oc);
			_1aae63c75_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10898_tup);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*_10898_tup.alloc)._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c12484b7:;
				if (it != expr_end) {
					jule::I32 _109410_i = it - expr->begin();
					jule::Ptr<_1acbc0d98_Type> _109417_t = *it;
					{
						if (_1aae66629_shouldInitialized(&(_109417_t))) {
							_1aae4a366_indent((*(_self_))._field_oc);
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_109410_i));
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bb264087_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109417_t);
							_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1c12484b7:;
					++it;
					_109410_i++;
					goto _iter_begin_1c12484b7;
				}
				_iter_end_1c12484b7:;
			};
		} else if (((*((*(*((*(_108737_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1aae4a366_indent((*(_self_))._field_oc);
			_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_108737_f))))._field_Result);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1aae66629_shouldInitialized(&((*((*(_108737_f))))._field_Result))) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bb264087_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_108737_f))))._field_Result);
			};
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1bb250518_scopeStmts(_self_, &((*((*(_108737_f))))._field_Scope));
	if (((*(*((*(_108737_f))))._field_Decl.alloc)._field_Exceptional && _1acaa2807_IsVoid((*((*(_108737_f))))._field_Decl))) {
		_1aae4a366_indent((*_self_.alloc)._field_oc);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1bb250ddc_anonFuncScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _112734_m, jule::Str _112761_ident) {
	if (((*((*(_112734_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11313_closure = _1ad61dd45_IsClosure(&(_112734_m));;
	if (_11313_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1acb3d420_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1acb3d420_Var>>((void*)__jule_anon_1c1256d88, jule::Ptr<__jule_anon_1c1256d88_ctx>::make(__jule_anon_1c1256d88_ctx{._self_=_self_,._112734_m=_112734_m}).as<jule::Uintptr>(), __jule_anon_1c1256d88_ctx_handler); __jule_collection; }));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	if (_11313_closure) {
		_1aae4a366_indent((*(_self_))._field_oc);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1aae499b4_write((*(_self_))._field_oc, _112761_ident);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1aae499b4_write((*(_self_))._field_oc, _112761_ident);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1bb250a79_commonFuncScope(_self_, &((*_112734_m.alloc)._field_Func));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11313_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1bb251195_funcScope(jule::Ptr<_1bb248104_scopeCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _115930_f) {
	if (((*(_115930_f))._field_Scope == nullptr)) {
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1bb250a79_commonFuncScope(_self_, &(_115930_f));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1bb2545e9_exprCoder> static__1bb2549e5_new(jule::Ptr<_1aae49299_ObjectCoder>* _4821_oc) {
	return jule::new_ptr<_1bb2545e9_exprCoder>(_1bb2545e9_exprCoder{._field_oc=(*(_4821_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1acb3d420_Var>>>(nullptr)});;
}



inline void _1bb254c9d_string(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _5424_c) {
	jule::Str _553_content = _1aca8a955_ReadStr((*(_5424_c)).ptr());;
	if ((_553_content.len() == 0LL)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _603_len = _1aa519e64_FmtInt(static_cast<jule::I64>(_553_content.len()), 10LL);;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1bb264d46_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _553_content);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aae499b4_write((*(_self_))._field_oc, _603_len);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb255056_boolean(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Bool _6924_b) {
	if (_6924_b) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1bb255254_nilLit(jule::Ptr<_1bb2545e9_exprCoder> _self_) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1bb255595_ftoaSpecialCases(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::F64* _8134_x) {
	{
		
		if (_1aa4bede7_IsNaN((*(_8134_x)))) {
			_case_begin_1c13a4975:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1aa4c0579_IsInf((*(_8134_x)), 1LL)) {
			_case_begin_1c13a4a1e:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1aa4c0579_IsInf((*(_8134_x)), -1LL)) {
			_case_begin_1c13a4a96:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c13a48dc:;
			{
				return false;;
			}
		}
		_match_end_1c13a47cc:;
	};
	return true;;
}



inline void _1bb25584d_float32(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _9525_c) {
	jule::F64 _963_x = _1aca8b48e_AsF64((*(_9525_c)).ptr());;
	if (_1bb255595_ftoaSpecialCases(_self_, &(_963_x))) {
		return;;
	};
	{
		
		if ((_963_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c13a8c32:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_963_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c13a810a:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c13a7c75:;
			{
				_1bb2651dc_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _963_x, 32LL);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1c13a7a11:;
	};
}



inline void _1bb255b06_float64(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const>* _11425_c) {
	jule::F64 _1153_x = _1aca8b48e_AsF64((*(_11425_c)).ptr());;
	if (_1bb255595_ftoaSpecialCases(_self_, &(_1153_x))) {
		return;;
	};
	{
		
		if ((_1153_x == jule::MAX_F64)) {
			_case_begin_1c13ab570:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1153_x == jule::MIN_F64)) {
			_case_begin_1c13ab251:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c13ab1da:;
			{
				_1bb2651dc_ftoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1153_x, 64LL);
			}
		}
		_match_end_1c13aae76:;
	};
}



inline void _1bb255dae_constant(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca3208e_Const> _13229_c) {
	{
		
		if (_1aca8d051_IsStr(_13229_c.ptr())) {
			_case_begin_1c13ad3eb:;
			{
				_1bb254c9d_string(_self_, &(_13229_c));
			}
		}
		else if (_1aca8ccba_IsBool(_13229_c.ptr())) {
			_case_begin_1c13ad462:;
			{
				_1bb255056_boolean(_self_, _1aca8a6be_ReadBool(_13229_c));
			}
		}
		else if (_1aca8d2d7_IsF64(_13229_c.ptr())) {
			_case_begin_1c13ad4c8:;
			{
				{
					
					if (((*_13229_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1c13b0e15:;
						{
							_1bb25584d_float32(_self_, &(_13229_c));
						}
					}
					else {
						_case_begin_1c13b0a6e:;
						{
							_1bb255b06_float64(_self_, &(_13229_c));
						}
					}
					_match_end_1c13b095e:;
				};
			}
		}
		else if (_1aca8c79d_IsI64(_13229_c.ptr())) {
			_case_begin_1c13ad53e:;
			{
				_1bb2654c8_itoa(&((*((*(_self_))._field_oc))._field_Buf), _1aca8a1a2_ReadI64(_13229_c));
			}
		}
		else if (_1aca8ca34_IsU64(_13229_c.ptr())) {
			_case_begin_1c13ad5a5:;
			{
				_1bb2657b4_utoa(&((*((*(_self_))._field_oc))._field_Buf), _1aca8a438_ReadU64(_13229_c));
			}
		}
		else if (_1aca8d56d_IsNil(_13229_c.ptr())) {
			_case_begin_1c13ad61b:;
			{
				_1bb255254_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c13ad385:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c13ad286:;
	};
}



inline void _1bb2562cc_operatorOverloadingUnary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _15646_s, jule::U32 _15667_op, jule::Any _15686_e) {
	;
	jule::Ptr<_1acaa540e_FnIns> _1587_f = _1ad621d15_FindOperator(_15646_s, _15667_op, true);;
	if ((_1587_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:160:4"));;
	};
	static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1587_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bb258c5d_possibleRefExpr(_self_, _15686_e);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb2566ea_divByZeroBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1abc2ba81_Token>* _16833_op, jule::Ptr<_1aca94b3a_OperandExprModel>* _16857_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _16890_r) {
	;
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_16857_l))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16890_r))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_16890_r))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1a8e61e40_Production))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1aae4c148_locInfo((*(_self_))._field_oc, _16833_op);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16857_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c13be7e7:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c13c3026:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1c13c2e7c:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bb256de3__unsafeBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, _1a6a5cb3c_Builder* _20735_buf, jule::Str* _20759_l, jule::Str* _20768_r, jule::Ptr<_1acbc0d98_Type>* _2088_lk, jule::Ptr<_1acbc0d98_Type>* _20830_rk, jule::U32 _20847_op, jule::Str _20862_kind) {
	if ((_1acbc4ac2_Struct((*(_2088_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1ac9d1e84_StructIns> _2118_s = _1acbc4ac2_Struct((*(_2088_lk)).ptr());;
		_1bb265e13_operatorOverloadingBinary(_20735_buf, &(_2118_s), _20759_l, _20768_r, _20847_op, _20862_kind);
		return;;
	};
	if (((_20847_op == static_cast<jule::U32>(50LLU)) || (_20847_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1ad61da04_IsAny(_2088_lk)) {
				_case_begin_1c13c7a75:;
				{
					if (((!(_1acbc1ecb_IsNil((*(_20830_rk)).ptr()))) && (!(_1ad61da04_IsAny(_20830_rk))))) {
						({
							auto except = _1a6a5ddc4_WriteByte(_20735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
						});
						if ((_20847_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1a6a5ddc4_WriteByte(_20735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:225:7"));
							});
						};
						jule::I32 _2276_i = _1aae4b4bb_pushAnyType((*(_self_))._field_oc, (*(_20830_rk)));;
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:228:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, _1aa51a22d_Itoa(_2276_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1acbc431e_Arr((*(_2088_lk)).ptr()) != nullptr)) {
				_case_begin_1c13c7b1e:;
				{
					jule::Ptr<_1acbd07d1_Arr> _2405_arr = _1acbc431e_Arr((*(_2088_lk)).ptr());;
					jule::Ptr<_1acaa540e_FnIns> _2419_ins = _1ad622189_FindFnGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2405_arr))._field_Elem; __jule_collection; }));;
					if ((_20847_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1a6a5ddc4_WriteByte(_20735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:243:6"));
						});
					};
					static__1bb26abd7_funcIns(_20735_buf, &(_2419_ins));
					({
						auto except = _1a6a5ddc4_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:246:5"));
					});
					({
						auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
						(except.result);
					});
					({
						auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _1a6a5db1b_WriteStr(_20735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _1a6a5db1b_WriteStr(_20735_buf, _1aa51a22d_Itoa((*_2405_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _1a6a5ddc4_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
					});
					return;;
				}
			}
			_match_end_1c13c7987:;
		};
	};
	{
		auto &_match_expr{ _20847_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c13cb837:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _2604_lp = _1acbc354e_Prim((*(_2088_lk)).ptr());;
				if (((_2604_lp != nullptr) && _1ac92b230_IsUnsigInt((*_2604_lp.alloc)._field_Kind))) {
					({
						auto except = _1a6a5ddc4_WriteByte(_20735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:262:5"));
					});
					_1aae59ebe_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20735_buf, _2604_lp);
					({
						auto except = _1a6a5ddc4_WriteByte(_20735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:264:5"));
					});
				};
			}
		}
		_match_end_1c13cb7c1:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_20735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:268:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_20735_buf, _20862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_20735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_20735_buf, (*(_20768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_20735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
	});
}



inline void _1bb25719b_unsafeBinary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95135_BinaryExprModel> _27733_m) {
	jule::I32 _2783_i = _1a6a5e930_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2797_oldbuf = _1a6a5ee4c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_27733_m))._field_Left))._field_Model);
	jule::Str _2813_l = __jule_bytesToStr(_1a6a5ee4c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2783_i));;
	{
		_1a6a60205_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2797_oldbuf);
	};
	_1bb258c5d_possibleRefExpr(_self_, (*((*_27733_m.alloc)._field_Right))._field_Model);
	jule::Str _2843_r = __jule_bytesToStr(_1a6a5ee4c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2783_i));;
	{
		_1a6a60205_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2797_oldbuf);
	};
	_1bb256de3__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2813_l), &(_2843_r), &((*(*(_27733_m))._field_Left.alloc)._field_Type), &((*(*(_27733_m))._field_Right.alloc)._field_Type), (*((*_27733_m.alloc)._field_Op))._field_Id, (*(*(_27733_m))._field_Op.alloc)._field_Kind);
}



inline void _1bb25750e_shl(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca94b3a_OperandExprModel>* _28925_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _28958_r) {
	;
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28925_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_28925_l))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28958_r))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_28958_r))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_28925_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ac92347a_BitSizeOf((*(_1acbc354e_Prim((*((*(_28925_l))))._field_Type.ptr())))._field_Kind)));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bb257872_shr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca94b3a_OperandExprModel>* _31725_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _31758_r) {
	;
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31725_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_31725_l))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31758_r))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_31758_r))))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31725_l))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ac92347a_BitSizeOf((*(_1acbc354e_Prim((*((*(_31725_l))))._field_Type.ptr())))._field_Kind)));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bb257b2a_binary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95135_BinaryExprModel> _34527_m) {
	{
		auto &_match_expr{ (*((*(_34527_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c1404222:;
			{
				if ((_1a8e61bed_Safety && (_1acbc4ac2_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1bb2566ea_divByZeroBinary(_self_, &((*_34527_m.alloc)._field_Op), &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c1404299:;
			{
				if ((_1acbc4ac2_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bb25750e_shl(_self_, &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c1404310:;
			{
				if ((_1acbc4ac2_Struct((*((*(_34527_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bb257872_shr(_self_, &((*_34527_m.alloc)._field_Left), &((*_34527_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1c1404156:;
	};
	_1bb25719b_unsafeBinary(_self_, _34527_m);
}



inline void _1bb257dd3_var(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acb3d420_Var> _36924_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1409128:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1acb3d420_Var>> _37010_prefix = *it;
			{
				if (_37010_prefix(_36924_m)) {
					return;;
				};
			}
			_iter_next_1c1409128:;
			++it;
			goto _iter_begin_1c1409128;
		}
		_iter_end_1c1409128:;
	};
	if ((*(_36924_m))._field_Binded) {
		jule::Ptr<_1abc419b9_Directive> _3764_d = _1ad620660_FindDirective(&((*_36924_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3764_d != nullptr)) {
			_1aae49c6c_writeBytes((*_self_.alloc)._field_oc, _1aae56ce0_concatAllParts((*_3764_d.alloc)._field_Args));
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _36924_m);
}



inline void _1bb25818b_structureIns(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns> _38533_m) {
	_1aae5c752_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38533_m);
}



inline void _1bb258444_unary(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9550e_UnaryExprModel> _38926_m) {
	if ((_1acbc4ac2_Struct((*((*(_38926_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1ac9d1e84_StructIns> _3928_s = _1acbc4ac2_Struct((*((*(_38926_m))._field_Expr))._field_Type);;
		_1bb2562cc_operatorOverloadingUnary(_self_, &(_3928_s), (*((*_38926_m.alloc)._field_Op))._field_Id, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_38926_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c141043c:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("(~(", 3));
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c1410c9a:;
			{
				if ((_1a8e61e40_Production || (_1acbc37d5_Sptr((*((*(_38926_m))._field_Expr))._field_Type) == nullptr))) {
					goto _match_end_1c1410c01;
				};
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1aae4c148_locInfo((*(_self_))._field_oc, &((*_38926_m.alloc)._field_Op));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1c1410c01:;
	};
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("(", 1));
	_1aae499b4_write((*(_self_))._field_oc, (*(*(_38926_m))._field_Op.alloc)._field_Kind);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*(*(_38926_m))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bb2586ec_structureLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca95dd3_StructLitExprModel> _42033_m) {
	if ((*((*((*(_42033_m))._field_Strct))._field_Decl))._field_Binded) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1aae5c752_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_42033_m.alloc)._field_Strct);
	if ((*(*((*(_42033_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4317_inited = false;;
	_julec_label_1c141805a:;
	{
		auto expr = &((*(*(_42033_m))._field_Strct.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c141b217:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _43315_f = *it;
			{
				{
					auto expr = &((*_42033_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c141bea4:;
					if (it != expr_end) {
						jule::Ptr<_1aca95a3c_StructArgExprModel> _43416_arg = *it;
						{
							if (((*(_43416_arg))._field_Field == _43315_f)) {
								if (_4317_inited) {
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1bb26bb72_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43315_f))._field_Decl));
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1bb258c5d_possibleRefExpr(_self_, (*((*_43416_arg.alloc)._field_Expr))._field_Model);
								_4317_inited=true;
								goto _iter_next_1c141b217;
							};
						}
						_iter_next_1c141bea4:;
						++it;
						goto _iter_begin_1c141bea4;
					}
					_iter_end_1c141bea4:;
				};
				if ((*(*((*(_42033_m))._field_Strct))._field_Decl.alloc)._field_Binded) {
					_4317_inited=false;
					goto _iter_next_1c141b217;
				};
				if (_4317_inited) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4317_inited=_1bb26320c_handleFieldByDefault(_self_, &(_43315_f));
			}
			_iter_next_1c141b217:;
			++it;
			goto _iter_begin_1c141b217;
		}
		_iter_end_1c141b217:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb2589a5_allocStructure(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca961d0_AllocStructLitExprModel> _46335_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	static__1bb26b886_structureIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_46335_m))._field_Lit))._field_Strct));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bb2586ec_structureLit(_self_, (*_46335_m.alloc)._field_Lit);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb258c5d_possibleRefExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _47132_expr) {
	{
		auto &_match_expr{ _47132_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c14246d7:;
			{
				jule::Ptr<_1acb3d420_Var> _4744_v = _47132_expr.unsafe_cast_ptr<_1acb3d420_Var>();;
				if ((*(_4744_v))._field_Reference) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1bb262dbb_model(_self_, _47132_expr);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1c1424671:;
	};
	_1bb262dbb_model(_self_, _47132_expr);
}



inline void _1bb25917b_castTraitFromTrait(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca96763_CastingExprModel>* _48540_m, jule::Ptr<_1acaaca65_Trait> _48572_t1, jule::Ptr<_1acaaca65_Trait> _48594_t2) {
	_1bb258c5d_possibleRefExpr(_self_, (*((*((*(_48540_m))))._field_Expr))._field_Model);
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1aae4bd90_pushAndWriteMaskMapper((*(_self_))._field_oc, _48572_t1, _48594_t2);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb259434_casting(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca96763_CastingExprModel> _49828_m) {
	{
		
		if (_1ad61da04_IsAny(&((*(_49828_m))._field_Type))) {
			_case_begin_1c1429302:;
			{
				if (_1acbc1ecb_IsNil((*_49828_m.alloc)._field_ExprType.ptr())) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1acbc4088_TypeEnum((*(_49828_m))._field_ExprType) != nullptr)) {
					_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _5094_i = _1aae4b4bb_pushAnyType((*(_self_))._field_oc, (*_49828_m.alloc)._field_ExprType);;
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49828_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c142aed5:;
						{
							jule::Ptr<_1acbc8eb1_Prim> _5135_prim = _1acbc354e_Prim((*(_49828_m))._field_ExprType);;
							if (((_5135_prim != nullptr) && _1ac92b4e9_IsInt((*_5135_prim.alloc)._field_Kind))) {
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1aae59ebe_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5135_prim);
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1bb258c5d_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c142d218;
							};
							goto _case_begin_1c142d27e;
						}
					}
					else {
						_case_begin_1c142d27e:;
						{
							_1bb258c5d_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1c142d218:;
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_5094_i));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ad61da04_IsAny(&((*(_49828_m))._field_ExprType))) {
			_case_begin_1c142939b:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1acbc37d5_Sptr((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1acbc37d5_Sptr((*(_49828_m))._field_Type)))._field_Elem);
				} else {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1a8e61e40_Production))) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aae4c148_locInfo((*(_self_))._field_oc, &((*_49828_m.alloc)._field_Token));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1aae4b4bb_pushAnyType((*(_self_))._field_oc, (*_49828_m.alloc)._field_Type)));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1acbc3a6b_Ptr((*(_49828_m))._field_ExprType.ptr()) != nullptr) || (_1acbc3a6b_Ptr((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c1429412:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1acbc4d58_Trait((*(_49828_m))._field_ExprType.ptr()) != nullptr)) {
			_case_begin_1c1429478:;
			{
				if ((_1acbc4d58_Trait((*_49828_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1bb25917b_castTraitFromTrait(_self_, &(_49828_m), _1acbc4d58_Trait((*(_49828_m))._field_Type), _1acbc4d58_Trait((*(_49828_m))._field_ExprType));
					return;;
				};
				_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1acbc37d5_Sptr((*(_49828_m))._field_Type) != nullptr)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1acbc37d5_Sptr((*(_49828_m))._field_Type)))._field_Elem);
				} else {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1a8e61e40_Production))) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aae4c148_locInfo((*(_self_))._field_oc, &((*_49828_m.alloc)._field_Token));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1bb26aec3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1acbc4d58_Trait((*(_49828_m))._field_ExprType));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ad6218d6_FindTraitTypeOffset(_1acbc4d58_Trait((*(_49828_m))._field_ExprType), (*_49828_m.alloc)._field_Type)));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1acbc4d58_Trait((*(_49828_m))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c14294de:;
			{
				_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1bb26aec3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1acbc4d58_Trait((*(_49828_m))._field_Type));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_1ad6218d6_FindTraitTypeOffset(_1acbc4d58_Trait((*(_49828_m))._field_Type), (*_49828_m.alloc)._field_ExprType)));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c142916a:;
	};
	jule::Ptr<_1acbc8eb1_Prim> _5957_prim = _1acbc354e_Prim((*(_49828_m))._field_Type.ptr());;
	if (((_5957_prim != nullptr) && _1acbcc47b_IsStr(_5957_prim))) {
		jule::Ptr<_1acbc8eb1_Prim> _5978_eprim = _1acbc354e_Prim((*_49828_m.alloc)._field_ExprType.ptr());;
		if (((_5978_eprim != nullptr) && (_5957_prim != nullptr))) {
			if (_1acbca8db_IsU8(_5978_eprim)) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1bb258c5d_possibleRefExpr(_self_, (*((*_49828_m.alloc)._field_Expr))._field_Model);
			_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1acbcd4b0_Slc> _6088_slc = _1acbc45a5_Slc((*(_49828_m))._field_ExprType);;
		if ((_6088_slc != nullptr)) {
			_5978_eprim=_1acbc354e_Prim((*_6088_slc.alloc)._field_Elem.ptr());
			if (_1acbca3be_IsI32(_5978_eprim)) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1bb258c5d_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5957_prim=_1acbc354e_Prim((*(_49828_m))._field_ExprType);
	if (((_5957_prim != nullptr) && _1acbcc47b_IsStr(_5957_prim))) {
		jule::Ptr<_1acbcd4b0_Slc> _6248_slc = _1acbc45a5_Slc((*(_49828_m))._field_Type);;
		if ((_6248_slc != nullptr)) {
			_5957_prim=_1acbc354e_Prim((*(_6248_slc))._field_Elem);
			if (_1acbca3be_IsI32(_5957_prim)) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1bb258c5d_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49828_m.alloc)._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bb258c5d_possibleRefExpr(_self_, (*(*(_49828_m))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb2596dc_args(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _64526_m) {
	jule::I32 _6467_j = 0LL;;
	if (((((*((*((*(_64526_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64526_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64526_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1acaa0ecb_IsSelf((*((*((*((*(_64526_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6467_j)++;
	};
	{
		auto expr = &((*((*(_64526_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1460b1e:;
		if (it != expr_end) {
			jule::I32 _6517_i = it - expr->begin();
			jule::Any _65110_arg = *it;
			{
				jule::Ptr<_1acaa42a9_ParamIns> _6524_p = (*(*((*(_64526_m))))._field_Func.alloc)._field_Params[_6467_j];;
				if ((((*(_6524_p))._field_Decl != nullptr) && (*(*(_6524_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65110_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c14639ce:;
							{
								jule::Ptr<_1acb3d420_Var> _6566_v = _65110_arg.unsafe_cast_ptr<_1acb3d420_Var>();;
								if ((*(_6566_v))._field_Reference) {
									_1bb262dbb_model(_self_, _65110_arg);
									goto _julec_label_1c146652b;
								};
							}
						}
						_match_end_1c1463968:;
					};
					_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("&(", 2));
					_1bb262dbb_model(_self_, _65110_arg);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1c146652b;
				};
				_1bb258c5d_possibleRefExpr(_self_, _65110_arg);
				_julec_label_1c146652b:;
				if ((((*((*(_64526_m))))._field_Args.len() - _6517_i) > 1LL)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				(_6467_j)++;
			}
			_iter_next_1c1460b1e:;
			++it;
			_6517_i++;
			goto _iter_begin_1c1460b1e;
		}
		_iter_end_1c1460b1e:;
	};
}



inline void _1bb259995_modelForCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _67633_expr) {
	{
		auto &_match_expr{ _67633_expr };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c146754e:;
			{
				_1bb25d0c5_funcIns(_self_, _67633_expr.cast_ptr<_1acaa540e_FnIns>(&__jule_any_type64));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c1466a15:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _6828_ssie = _67633_expr.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>();;
				if (((*(_6828_ssie))._field_Method != nullptr)) {
					_1bb25d0c5_funcIns(_self_, (*_6828_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1c1462967:;
	};
	_1bb258c5d_possibleRefExpr(_self_, _67633_expr);
}



inline void _1bb259c4d_pushCallInf(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _69129_m) {
	if ((_1a8e61e40_Production || (!((*((*((*(_69129_m))))._field_Func))._field_Anon)))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*(*((*(_69129_m))))._field_Func.alloc)._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69129_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c146b0be:;
				{
					if ((*((*((*((*((*((*(_69129_m))))._field_Expr.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1c146b058:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1aae4c148_locInfo((*(_self_))._field_oc, &((*((*(_69129_m))))._field_Token));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69129_m))))._field_Args.len() != 0LL)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1bb25a08e_isWrapped(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _71431_m) {
	if ((((!(_1acaa68c7_IsBuiltin((*((*(_71431_m))))._field_Func.ptr()))) && ((*((*(*((*(_71431_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1acaa0ecb_IsSelf((*((*((*((*(_71431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71431_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c1470d82:;
				{
					jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _7189_ssie = (*((*(_71431_m))))._field_Expr.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>();;
					{
						
						if (_1acaa1262_IsRef((*((*((*((*(_71431_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1acbc37d5_Sptr((*((*(_7189_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1c1472b31:;
							{
								goto _match_end_1c1471cd9;
							}
						}
						else {
							_case_begin_1c1471d61:;
							{
								if ((_1acbc4ac2_Struct((*((*(_7189_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7189_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1bb262dbb_model(_self_, (*(*(_7189_ssie))._field_Expr.alloc)._field_Model);
										_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c1471cd9:;
					};
				}
			}
			_match_end_1c1470d1b:;
		};
	};
	return false;;
}



inline jule::Bool _1bb25a3d0_writeReceiver(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _73834_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73834_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c147765d:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*((*(_73834_m.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c147786c:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*((*((*(_73834_m.unsafe_cast_ptr<_1bb10cc66_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c1477806:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:747:4"));;
			}
		}
		_match_end_1c1477790:;
	};
}



inline void _1bb25a688_pureFuncCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _75134_m) {
	jule::Bool _7523_wrapped = _1bb25a08e_isWrapped(_self_, _75134_m);;
	_1bb259995_modelForCall(_self_, (*((*(_75134_m))))._field_Expr);
	if ((!(_1acaa68c7_IsBuiltin((*((*(_75134_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75134_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1ad620a28_HasDirective(&((*(*((*((*(_75134_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c147bbb2:;
					if (it != expr_end) {
						jule::I32 _75811_i = it - expr->begin();
						jule::Ptr<_1acbbe4b2_InsGeneric> _75818_g = *it;
						{
							_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75818_g))._field_Type);
							if ((((*(*((*(_75134_m))))._field_Func.alloc)._field_Generics.len() - _75811_i) > 1LL)) {
								_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1c147bbb2:;
						++it;
						_75811_i++;
						goto _iter_begin_1c147bbb2;
					}
					_iter_end_1c147bbb2:;
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1bb259c4d_pushCallInf(_self_, _75134_m);
	if (((*(*((*(_75134_m))))._field_Func.alloc)._field_AsAnon && (!((*(*((*(_75134_m))))._field_Func.alloc)._field_Anon)))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1acaa68c7_IsBuiltin((*((*(_75134_m))))._field_Func))) && ((*(*((*((*(_75134_m))))._field_Func))._field_Decl.alloc)._field_Params.len() > 0LL)) && _1acaa0ecb_IsSelf((*((*((*((*(_75134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75134_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c14838bc:;
				{
					jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _7829_ssie = (*((*(_75134_m))))._field_Expr.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>();;
					{
						
						if (_1acaa1262_IsRef((*((*((*((*(_75134_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1c1487b57:;
							{
								_1bb25a3d0_writeReceiver(_self_, (*((*(_7829_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1acbc37d5_Sptr((*((*(_7829_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1c14891ec:;
							{
								jule::Bool _7896_safe = _1bb25a3d0_writeReceiver(_self_, (*(*(_7829_ssie))._field_Expr.alloc)._field_Model);;
								if (_7896_safe) {
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1a8e61e40_Production))) {
										_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1aae4c148_locInfo((*(_self_))._field_oc, &((*((*(_75134_m))))._field_Token));
										_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1c1484923:;
							{
								if ((_1acbc4ac2_Struct((*((*(_7829_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7829_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1c1485270:;
											{
												jule::Ptr<_1acb3d420_Var> _8038_v = (*((*(_7829_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
												if ((*(_8038_v))._field_Reference) {
													goto _match_end_1c1485748;
												};
												goto _case_begin_1c14857ae;
											}
										}
										else {
											_case_begin_1c14857ae:;
											{
												_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1c1485748:;
									};
								};
								if (_7523_wrapped) {
									_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1acbc3a6b_Ptr((*((*(_7829_ssie))._field_Expr))._field_Type) == nullptr)) {
									_1bb262dbb_model(_self_, (*(*(_7829_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1bb258c5d_possibleRefExpr(_self_, (*((*((*(*(_7829_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1c148489b:;
					};
					if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1c1483559:;
				{
					_1bb258c5d_possibleRefExpr(_self_, (*((*((*(_75134_m))))._field_Expr.unsafe_cast_ptr<_1aca99315_TraitSubIdentExprModel>()))._field_Expr);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75134_m))))._field_Args.len() > 0LL)) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1c1483845:;
		};
	};
	_1bb2596dc_args(_self_, _75134_m);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if (_7523_wrapped) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1bb25a941_coFuncCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel>* _84132_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8487_i = jule::Str();;
	if ((((*((*((*(_84132_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84132_m))))._field_Func.alloc)._field_AsAnon)) {
		_8487_i=_1aa51a22d_Itoa(_1aae4a9e8_pushCoSpawn((*(_self_))._field_oc, (*((*(_84132_m))))._field_Func));
		jule::Str _8514_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8487_i);;
		_1aae499b4_write((*(_self_))._field_oc, _8514_t);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1aae499b4_write((*(_self_))._field_oc, _8514_t);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1aae4a366_indent((*(_self_))._field_oc);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1bb259995_modelForCall(_self_, (*((*(_84132_m))))._field_Expr);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84132_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c149ed6c:;
			if (it != expr_end) {
				jule::I32 _8738_j = it - expr->begin();
				{
					_1aae4a366_indent((*(_self_))._field_oc);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_8738_j));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1bb258c5d_possibleRefExpr(_self_, (*((*(_84132_m))))._field_Args[_8738_j]);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c149ed6c:;
				++it;
				_8738_j++;
				goto _iter_begin_1c149ed6c;
			}
			_iter_end_1c149ed6c:;
		};
		_1aae4a366_indent((*(_self_))._field_oc);
	};
	if (!(_8487_i).empty()) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8487_i).empty()) {
		static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84132_m))))._field_Func));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8487_i));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8487_i).empty()) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8487_i).empty()) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb25aca4_writeUseExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _91934_f, jule::Ptr<_1acb8cded_Data> _91955_d) {
	if ((_1acbc5375_Tup((*(_91955_d))._field_Type.ptr()) == nullptr)) {
		_1bb258c5d_possibleRefExpr(_self_, (*_91955_d.alloc)._field_Model);
		_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1aca9a723_TupleExprModel> _9257_tup = (*_91955_d.alloc)._field_Model.cast_ptr<_1aca9a723_TupleExprModel>(&__jule_any_type84);;
	_1aae63c75_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1acbc5375_Tup((*((*(_91934_f))))._field_Result.ptr()));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*_9257_tup.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14b1b1a:;
		if (it != expr_end) {
			jule::I32 _9287_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _92810_data = *it;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_9287_i));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1bb258c5d_possibleRefExpr(_self_, (*(_92810_data))._field_Model);
				if ((((*(_9257_tup))._field_Datas.len() - _9287_i) > 1LL)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c14b1b1a:;
			++it;
			_9287_i++;
			goto _iter_begin_1c14b1b1a;
		}
		_iter_end_1c14b1b1a:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1bb25b117_funcCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97115_FnCallExprModel> _94029_m, jule::Bool _94056_ignoreExceptional) {
	if ((*(_94029_m))._field_IsCo) {
		_1bb25a941_coFuncCall(_self_, &(_94029_m));
		return;;
	};
	if (((_1acaa68c7_IsBuiltin((*_94029_m.alloc)._field_Func.ptr()) || (!((*((*(*(_94029_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_94029_m.alloc)._field_Except != nullptr) && ((*(*(_94029_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1bb25a688_pureFuncCall(_self_, &(_94029_m));
		return;;
	};
	if (_94056_ignoreExceptional) {
		_1bb25a688_pureFuncCall(_self_, &(_94029_m));
		if (((*(*(_94029_m))._field_Func.alloc)._field_Result != nullptr)) {
			_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1bb25a688_pureFuncCall(_self_, &(_94029_m));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	if (((*_94029_m.alloc)._field_Except != nullptr)) {
		if ((((*(*(_94029_m))._field_Func.alloc)._field_Result == nullptr) || (!((*_94029_m.alloc)._field_Assigned)))) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1bb2507c1_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94029_m.alloc)._field_Except);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9785_forwarded = _1ad61d55e_IsForwarded(&((*_94029_m.alloc)._field_Except));;
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9785_forwarded) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9839_stmt = (*(*(_94029_m))._field_Except.alloc)._field_Stmts[((*(*(_94029_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9839_stmt };
				
				if (_match_expr.type == &__jule_any_type22) {
					_case_begin_1c14c0563:;
					{
						((*((*(_94029_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94029_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1aae49e6a_addIndent((*(_self_))._field_oc);
						_1bb250518_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94029_m.alloc)._field_Except));
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1aae4a366_indent((*(_self_))._field_oc);
						_1bb25aca4_writeUseExpr(_self_, &((*_94029_m.alloc)._field_Func), _9839_stmt.cast_ptr<_1acb8cded_Data>(&__jule_any_type22));
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1aae4a168_doneIndent((*(_self_))._field_oc);
						_1aae4a366_indent((*(_self_))._field_oc);
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1c14c19c6:;
					{
						_1bb2507c1_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94029_m.alloc)._field_Except);
					}
				}
				_match_end_1c14c1960:;
			};
			if (_9785_forwarded) {
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1bb264087_initExpr(_self_, (*(*(_94029_m))._field_Func.alloc)._field_Result);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1aae4a168_doneIndent((*(_self_))._field_oc);
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1aae4c148_locInfo((*(_self_))._field_oc, &((*_94029_m.alloc)._field_Token));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1acaa2807_IsVoid((*((*(_94029_m))._field_Func))._field_Decl)))) {
			_1aae4a366_indent((*(_self_))._field_oc);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1aae4a168_doneIndent((*(_self_))._field_oc);
	};
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bb25b3c0_slice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca974de_SliceExprModel> _102326_m) {
	if (((*(_102326_m))._field_Elems.len() == 0LL)) {
		_1aae5b8a5_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102326_m.alloc)._field_ElemType);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aae5b8a5_asSlice((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102326_m.alloc)._field_ElemType);
	jule::Str _10313_size = _1aa51a22d_Itoa((*_102326_m.alloc)._field_Elems.len());;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1aae499b4_write((*(_self_))._field_oc, _10313_size);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aae499b4_write((*(_self_))._field_oc, _10313_size);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102326_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14d5941:;
		if (it != expr_end) {
			jule::I32 _10417_i = it - expr->begin();
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bb258c5d_possibleRefExpr(_self_, (*(_102326_m))._field_Elems[_10417_i]);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c14d5941:;
			++it;
			_10417_i++;
			goto _iter_begin_1c14d5941;
		}
		_iter_end_1c14d5941:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bb25b678_indexing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97995_IndexingExprModel> _105229_m) {
	{
		auto &_match_expr{ (*((*(_105229_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c14d97be:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1a8e61e40_Production))) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1aae4c148_locInfo((*(_self_))._field_oc, &((*(_105229_m))._field_Token));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10634_s = _1aca8a955_ReadStr((*((*(_105229_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aca3208e_Const>().ptr());;
				_1bb264d46_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10634_s);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_10634_s.len()));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bb258c5d_possibleRefExpr(_self_, (*((*_105229_m.alloc)._field_Index))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c14d9758:;
	};
	{
		
		if ((_1acbc50de_Map((*((*_105229_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c14e3531:;
			{
				jule::Ptr<_1acbceb54_Map> _10768__map = _1acbc50de_Map((*((*(_105229_m))._field_Expr))._field_Type);;
				jule::Ptr<_1ac9d1e84_StructIns> _10778_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10768__map))._field_Key; (*it++) = (*_10768__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1acaa540e_FnIns> _10798_f = (*(_1ac9d302e_FindMethod(_10778_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_10798_f));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_105229_m))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1a8e61e40_Production || (_1acbc3a6b_Ptr((*((*_105229_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr) || _1ad61d73a_IsExprComesFromBind(&((*_105229_m.alloc)._field_Expr))) {
			_case_begin_1c14e0b6b:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_105229_m))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("[", 1));
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c14e0a5b:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*((*_105229_m.alloc)._field_Expr))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1aae4c148_locInfo((*(_self_))._field_oc, &((*_105229_m.alloc)._field_Token));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1bb258c5d_possibleRefExpr(_self_, (*(*(_105229_m))._field_Index.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c14dd086:;
	};
}



inline void _1bb25b931_unsafeIndexing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10bcdc_UnsafeIndexingExprModel> _110335_m) {
	_1bb258c5d_possibleRefExpr(_self_, (*((*((*(_110335_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1a8e61e40_Production || (_1acbc3a6b_Ptr((*(*((*(_110335_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1acbc50de_Map((*((*((*(_110335_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1c14ee32d:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1bb258c5d_possibleRefExpr(_self_, (*((*(*(_110335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c14ebd86:;
			{
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1bb258c5d_possibleRefExpr(_self_, (*((*(*(_110335_m))._field_Node.alloc)._field_Index))._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c14ec936:;
	};
}



inline void _1bb25bbd9_anonFunc(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel> _112029_m) {
	jule::Bool _11213_closure = _1ad61dd45_IsClosure(&(_112029_m));;
	jule::Str _11223_ident = _1aae4b17a_pushAnonFn((*(_self_))._field_oc, &(_112029_m));;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1aae5dcc5_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112029_m))._field_Func);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1aae499b4_write((*(_self_))._field_oc, _11223_ident);
	if (_11213_closure) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1aae499b4_write((*(_self_))._field_oc, _11223_ident);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1aae499b4_write((*(_self_))._field_oc, _11223_ident);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112029_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1503a2a:;
			if (it != expr_end) {
				jule::I32 _11349_i = it - expr->begin();
				jule::Ptr<_1acb3d420_Var> _113416_v = *it;
				{
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1bb26be5d_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113416_v);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bb257dd3_var(_self_, _113416_v);
					if ((((*_112029_m.alloc)._field_Captured.len() - _11349_i) > 1LL)) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1c1503a2a:;
				++it;
				_11349_i++;
				goto _iter_begin_1c1503a2a;
			}
			_iter_end_1c1503a2a:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1aae499b4_write((*(_self_))._field_oc, _11223_ident);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1bb25be92_mapExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca986ee_MapExprModel> _115128_m) {
	jule::Ptr<_1ac9d1e84_StructIns> _11527_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115128_m))._field_Kind))._field_Key; (*it++) = (*(*(_115128_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1acaa540e_FnIns> _11547_maker = (*(_1ac9d302e_FindMethod(_11527_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115128_m.alloc)._field_Entries.len() == 0LL)) {
		static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11547_maker));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1acaa540e_FnIns> _11617_f = (*(_1ac9d302e_FindMethod(_11527_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1aae5c07b_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115128_m.alloc)._field_Kind);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11547_maker));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115128_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1519de8:;
		if (it != expr_end) {
			jule::Ptr<_1aca98325_KeyValPairExprModel> _117115_pair = *it;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11617_f));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bb258c5d_possibleRefExpr(_self_, (*(_117115_pair))._field_Key);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1bb258c5d_possibleRefExpr(_self_, (*_117115_pair.alloc)._field_Val);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c1519de8:;
			++it;
			goto _iter_begin_1c1519de8;
		}
		_iter_end_1c1519de8:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bb25c24a_slicing(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca98c82_SlicingExprModel> _118628_m) {
	_1bb258c5d_possibleRefExpr(_self_, (*(_118628_m))._field_Expr);
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1a8e61e40_Production))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aae4c148_locInfo((*(_self_))._field_oc, &((*_118628_m.alloc)._field_Token));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bb258c5d_possibleRefExpr(_self_, (*_118628_m.alloc)._field_Left);
	if (((*_118628_m.alloc)._field_Right != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bb258c5d_possibleRefExpr(_self_, (*_118628_m.alloc)._field_Right);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb25c503_traitSub(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca99315_TraitSubIdentExprModel> _120229_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1bb26aec3_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120229_m))._field_Trt);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1bb258c5d_possibleRefExpr(_self_, (*_120229_m.alloc)._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1a8e61e40_Production))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1aae4c148_locInfo((*(_self_))._field_oc, &((*_120229_m.alloc)._field_Token));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1bb26a8eb_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120229_m.alloc)._field_Method));
}



inline void _1bb25c7ab_structureSub(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _121833_m) {
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_121833_m))._field_Expr))._field_Model);
	if (((*_121833_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1bb26bb72_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_121833_m.alloc)._field_Field))._field_Decl));
}



inline void _1bb25ca64_array(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a426_ArrayExprModel> _122726_m) {
	if ((((*((*(_122726_m))._field_Kind))._field_N == 0LL) || (((*_122726_m.alloc)._field_Elems.len() == 0LL) && (!(_1aae6634e_ableToInit(&((*(*(_122726_m))._field_Kind.alloc)._field_Elem))))))) {
		_1aae5cab5_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*_122726_m.alloc)._field_Elems.len() == 2LL) && ((*(_122726_m))._field_Elems[1LL] == nullptr))) {
		_1aae5cab5_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bb258c5d_possibleRefExpr(_self_, (*(_122726_m))._field_Elems[0LL]);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aae5cab5_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122726_m.alloc)._field_Kind);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_122726_m.alloc)._field_Elems.len() != (*(*(_122726_m))._field_Kind.alloc)._field_N)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_122726_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1535b5b:;
		if (it != expr_end) {
			jule::I32 _12607_i = it - expr->begin();
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bb258c5d_possibleRefExpr(_self_, (*_122726_m.alloc)._field_Elems[_12607_i]);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c1535b5b:;
			++it;
			_12607_i++;
			goto _iter_begin_1c1535b5b;
		}
		_iter_end_1c1535b5b:;
	};
	if ((((*_122726_m.alloc)._field_Elems.len() != (*(*(_122726_m))._field_Kind.alloc)._field_N) && _1aae6634e_ableToInit(&((*(*(_122726_m))._field_Kind.alloc)._field_Elem)))) {
		_1bb26376d_fillCollectionByDefault(_self_, &((*(*(_122726_m))._field_Kind.alloc)._field_Elem));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1bb25cd1c_funcInsCommon(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _127734_m) {
	_1aae5e138_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _127734_m);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb25d0c5_funcIns(_self_, _127734_m);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb25d0c5_funcIns(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _128428_m) {
	if ((((*(_128428_m))._field_Decl != nullptr) && (*(*(_128428_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1abc419b9_Directive> _12864_d = _1ad620660_FindDirective(&((*(*(_128428_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12864_d != nullptr)) {
			_1aae49c6c_writeBytes((*(_self_))._field_oc, _1aae56ce0_concatAllParts((*_12864_d.alloc)._field_Args));
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_128428_m));
}



inline void _1bb25d37d_tuple(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a723_TupleExprModel> _129526_m) {
	{
		auto expr = &((*_129526_m.alloc)._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1543394:;
		if (it != expr_end) {
			jule::I32 _12968_i = it - expr->begin();
			jule::Ptr<_1acb8cded_Data> _129615_d = *it;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*(_129615_d))._field_Model);
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129526_m))._field_Datas.len() - _12968_i) > 1LL)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1aae4a366_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1c1543394:;
			++it;
			_12968_i++;
			goto _iter_begin_1c1543394;
		}
		_iter_end_1c1543394:;
	};
}



inline void _1bb25d636_newCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> _130628_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130628_m))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130628_m.alloc)._field_Init != nullptr)) {
		_1bb258c5d_possibleRefExpr(_self_, (*_130628_m.alloc)._field_Init);
	} else if (_1aae6634e_ableToInit(&((*_130628_m.alloc)._field_Type))) {
		_1bb264087_initExpr(_self_, (*_130628_m.alloc)._field_Type);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb25d8de_printCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> _131830_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1acaa540e_FnIns> _13207_f = _1ad622189_FindFnGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131830_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13207_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*(*(_131830_m))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bb25db97_printlnCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> _132732_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1acaa540e_FnIns> _13297_f = _1ad622189_FindFnGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132732_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13297_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*(*(_132732_m))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bb25de50_panicCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _133630_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1bb258c5d_possibleRefExpr(_self_, (*(_133630_m))._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1aae4c148_locInfo((*(_self_))._field_oc, &((*_133630_m.alloc)._field_Token));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1bb25e208_errorCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _134430_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1acaa2807_IsVoid((*((*(_134430_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134430_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c12842a0:;
				{
					jule::Ptr<_1acb3d420_Var> _13495_v = (*((*(_134430_m))._field_Err))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
					if (((*(_13495_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c1284239:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1aae6444b_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134430_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134430_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c1288815:;
				{
					jule::Ptr<_1acb3d420_Var> _13615_v = (*((*(_134430_m))._field_Err))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>();;
					if (((*(_13615_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c128879e:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_134430_m))._field_Err))._field_Model);
	jule::I32 _13703_i = _1aae4b4bb_pushAnyType((*(_self_))._field_oc, (*(*(_134430_m))._field_Err.alloc)._field_Type);;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_13703_i));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1bb25e4b1_copyCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ccec_BuiltinCopyCallExprModel> _137629_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_137629_m))._field_Dest))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bb258c5d_possibleRefExpr(_self_, (*((*_137629_m.alloc)._field_Src))._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb25e769_lenCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _138428_m) {
	jule::Ptr<_1acbceb54_Map> _13857__map = _1acbc50de_Map((*((*(_138428_m))._field_Expr))._field_Type.ptr());;
	if ((_13857__map != nullptr)) {
		jule::Ptr<_1ac9d1e84_StructIns> _13878_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13857__map.alloc)._field_Key; (*it++) = (*_13857__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1acaa540e_FnIns> _13898_f = (*(_1ac9d302e_FindMethod(_13878_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13898_f));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bb258c5d_possibleRefExpr(_self_, (*(*(_138428_m))._field_Expr.alloc)._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bb258c5d_possibleRefExpr(_self_, (*(*(_138428_m))._field_Expr.alloc)._field_Model);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1bb25ea22_capCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> _140028_m) {
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_140028_m))._field_Expr))._field_Model);
	_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1bb25ecca_deleteCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _140531_m) {
	jule::Ptr<_1acbceb54_Map> _14067__map = _1acbc50de_Map((*((*(_140531_m))._field_Dest))._field_Type.ptr());;
	if ((_14067__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1408:4"));;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _14107_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14067__map))._field_Key; (*it++) = (*(_14067__map))._field_Val; __jule_collection; }));;
	;
	if (((*_140531_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1acaa540e_FnIns> _14138_f = (*(_1ac9d302e_FindMethod(_14107_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14138_f));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bb258c5d_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bb258c5d_possibleRefExpr(_self_, (*(*(_140531_m))._field_Key.alloc)._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1acaa540e_FnIns> _14218_f = (*(_1ac9d302e_FindMethod(_14107_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14218_f));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bb258c5d_possibleRefExpr(_self_, (*(*(_140531_m))._field_Dest.alloc)._field_Model);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bb260083_makeCallSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel>* _142935_m) {
	jule::Ptr<_1acbcd4b0_Slc> _14307_slice = _1acbc45a5_Slc((*((*(_142935_m))))._field_Type.ptr());;
	jule::Bool _14313_init = _1aae6634e_ableToInit(&((*(_14307_slice))._field_Elem));;
	if (_14313_init) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_142935_m))))._field_Type);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Len);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_142935_m))))._field_Cap != nullptr)) {
		_1bb258c5d_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Cap);
	} else {
		_1bb258c5d_possibleRefExpr(_self_, (*((*(_142935_m))))._field_Len);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14313_init))) {
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bb263a26_initCollection(_self_, &((*_14307_slice.alloc)._field_Elem));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bb26033b_makeCallStr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel>* _145333_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bb258c5d_possibleRefExpr(_self_, (*((*(_145333_m))))._field_Len);
	if (((*((*(_145333_m))))._field_Cap != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bb258c5d_possibleRefExpr(_self_, (*((*(_145333_m))))._field_Cap);
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb2605e4_makeCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _146429_m) {
	if ((_1acbc45a5_Slc((*(_146429_m))._field_Type.ptr()) != nullptr)) {
		_1bb260083_makeCallSlice(_self_, &(_146429_m));
		return;;
	};
	_1bb26033b_makeCallStr(_self_, &(_146429_m));
}



inline void _1bb26089c_pushToSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10c1b6_PushToSliceExprModel> _147232_m) {
	;
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1aae5b8a5_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147232_m))._field_Elems))._field_ElemType);
	jule::Bool _14807_ptr = false;;
	{
		auto &_match_expr{ (*(_147232_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c12b07e8:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _14848_u = (*(_147232_m))._field_Dest.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>();;
				if ((_1acbc3a6b_Ptr((*((*(_14848_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1bb258c5d_possibleRefExpr(_self_, (*(*(_14848_u))._field_Expr.alloc)._field_Model);
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14807_ptr=true;
					goto _match_end_1c12ae2db;
				};
				goto _case_begin_1c12ae352;
			}
		}
		else {
			_case_begin_1c12ae352:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1bb258c5d_possibleRefExpr(_self_, (*_147232_m.alloc)._field_Dest);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c12ae2db:;
	};
	if (((*(*(_147232_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14807_ptr) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1bb258c5d_possibleRefExpr(_self_, (*((*(_147232_m))._field_Elems))._field_Elems[0LL]);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14807_ptr) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa((*(*(_147232_m))._field_Elems.alloc)._field_Elems.len()));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147232_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c12b7c95:;
		if (it != expr_end) {
			jule::Any _151815_e = *it;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14807_ptr) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1bb258c5d_possibleRefExpr(_self_, _151815_e);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c12b7c95:;
			++it;
			goto _iter_begin_1c12b7c95;
		}
		_iter_end_1c12b7c95:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb260b55_appendToSlice(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10c590_AppendToSliceExprModel> _153234_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*(_153234_m))._field_Dest);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1bb258c5d_possibleRefExpr(_self_, (*_153234_m.alloc)._field_Slice);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bb260e0d_appendCall(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _154031_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1bb258c5d_possibleRefExpr(_self_, (*(_154031_m))._field_Dest);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*_154031_m.alloc)._field_Elements);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb2611b6_sizeof(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9d4c3_SizeofExprModel> _154827_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1bb258c5d_possibleRefExpr(_self_, (*(_154827_m))._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb26146e_alignof(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9db77_AlignofExprModel> _155428_m) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1bb258c5d_possibleRefExpr(_self_, (*(_155428_m))._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bb261727_runeLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9dd64_RuneExprModel> _156024_m) {
	if (((*(_156024_m))._field_Code <= 127LL)) {
		({
			auto except = _1a6a5ddc4_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1562:4"));
		});
		jule::Str _15638_b = _1bb26472a_sbtoa(static_cast<jule::U8>((*_156024_m.alloc)._field_Code));;
		if (_15638_b.equal("'", 1)) {
			({
				auto except = _1a6a5ddc4_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1565:5"));
			});
		};
		({
			auto except = _1a6a5db1b_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15638_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1567:4"));
			(except.result);
		});
		({
			auto except = _1a6a5ddc4_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1568:4"));
		});
		return;;
	};
	_1bb2654c8_itoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::I64>((*_156024_m.alloc)._field_Code));
}



inline void _1bb2619d0_structureStatic(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9a04c_StructStaticIdentExprModel> _157436_m) {
	static__1bb26abd7_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157436_m))._field_Method));
}



inline void _1bb261c88_backendEmit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _157832_m) {
	if (((*(_157832_m))._field_Exprs.len() == 0LL)) {
		_1aae499b4_write((*(_self_))._field_oc, (*_157832_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15833_n = _1a6a5e930_Len(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	jule::Slice<jule::Any> _15847_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*_157832_m.alloc)._field_Exprs.len(), (*_157832_m.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157832_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c12c7ec5:;
		if (it != expr_end) {
			jule::I32 _15858_i = it - expr->begin();
			jule::Any _158515_expr = *it;
			{
				_1bb258c5d_possibleRefExpr(_self_, _158515_expr);
				jule::Slice<jule::U8> _15878_buf = _1a6a5ee4c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15847_args[_15858_i]=jule::Any(__jule_bytesToStr(_15878_buf.slice(_15833_n)), &__jule_any_type5);
				{
					_1a6a60205_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15878_buf.slice(0LL, _15833_n));
				};
			}
			_iter_next_1c12c7ec5:;
			++it;
			_15858_i++;
			goto _iter_begin_1c12c7ec5;
		}
		_iter_end_1c12c7ec5:;
	};
	_1aae499b4_write((*(_self_))._field_oc, _1acc42dd7_Format((*_157832_m.alloc)._field_Code, _15847_args));
}



inline void _1bb262041_free(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1aca9e4d5_FreeExprModel> _159425_m) {
	_1bb258c5d_possibleRefExpr(_self_, (*(_159425_m))._field_Expr);
	if (_1a8e61835_RC) {
		_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1bb2622e9_strComp(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10b0c7_StrCompExprModel> _160328_m) {
	if ((*(_160328_m))._field_NotEq) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16073_s = _1aca8a955_ReadStr((*_160328_m.alloc)._field_Right.ptr());;
	_1bb258c5d_possibleRefExpr(_self_, (*_160328_m.alloc)._field_Left);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".equal(", 7));
	_1bb264d46_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16073_s);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_16073_s.len()));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160328_m.alloc)._field_NotEq) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bb2625a2_emptyCompare(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10a824_EmptyCompareExprModel> _161933_m) {
	if ((*(_161933_m))._field_Neg) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bb258c5d_possibleRefExpr(_self_, (*_161933_m.alloc)._field_Expr);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1bb26285a_unsafeDeref(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10cc66_UnsafeDerefExprModel> _162832_m) {
	{
		
		if ((_1acbc37d5_Sptr((*((*((*(_162832_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c12d6a3e:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bb258c5d_possibleRefExpr(_self_, (*(*((*(_162832_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1c12d6676:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1635:4"));;
			}
		}
		_match_end_1c12d6566:;
	};
}



inline void _1bb262b13_unsafeCasting(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1bb10d063_UnsafeCastingExprModel> _163934_m) {
	{
		
		if (_1ad61da04_IsAny(&((*((*(_163934_m))._field_Base))._field_ExprType))) {
			_case_begin_1c12d9723:;
			{
				_1bb258c5d_possibleRefExpr(_self_, (*((*(*(_163934_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1acbc37d5_Sptr((*(*(_163934_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1acbc37d5_Sptr((*((*(_163934_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1aae5e49b_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_163934_m))._field_Base.alloc)._field_Type);
				};
				_1aae499b4_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1c12d935a:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1652:4"));;
			}
		}
		_match_end_1c12d926c:;
	};
}



inline void _1bb262dbb_model(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Any _165626_m) {
	{
		auto &_match_expr{ _165626_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c12da092:;
			{
				_1aae499b4_write((*(_self_))._field_oc, _165626_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c12e00ca:;
			{
				_1aae499b4_write((*(_self_))._field_oc, (*(_165626_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c12e0141:;
			{
				_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _165626_m.cast_ptr<_1acbc0d98_Type>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c12e01a7:;
			{
				_1bb255dae_constant(_self_, _165626_m.cast_ptr<_1aca3208e_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c12e021d:;
			{
				_1bb257dd3_var(_self_, _165626_m.cast_ptr<_1acb3d420_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c12e0284:;
			{
				_1bb25818b_structureIns(_self_, _165626_m.cast_ptr<_1ac9d1e84_StructIns>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c12e02ea:;
			{
				_1bb25cd1c_funcInsCommon(_self_, _165626_m.cast_ptr<_1acaa540e_FnIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c12e0e66:;
			{
				_1bb25719b_unsafeBinary(_self_, (*(_165626_m.unsafe_cast_ptr<_1bb10b9e0_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c12e0ecc:;
			{
				_1bb257b2a_binary(_self_, _165626_m.cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c12e1043:;
			{
				_1bb258444_unary(_self_, _165626_m.cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c12e10a9:;
			{
				_1bb2586ec_structureLit(_self_, _165626_m.cast_ptr<_1aca95dd3_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c12e1120:;
			{
				_1bb2589a5_allocStructure(_self_, _165626_m.cast_ptr<_1aca961d0_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c12e1186:;
			{
				_1bb259434_casting(_self_, _165626_m.cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c12e11ec:;
			{
				_1bb25b117_funcCall(_self_, _165626_m.cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c12e1263:;
			{
				_1bb25b3c0_slice(_self_, _165626_m.cast_ptr<_1aca974de_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c12e12da:;
			{
				_1bb25ca64_array(_self_, _165626_m.cast_ptr<_1aca9a426_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c12e1362:;
			{
				_1bb25b931_unsafeIndexing(_self_, _165626_m.cast_ptr<_1bb10bcdc_UnsafeIndexingExprModel>(&__jule_any_type136));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c12e13d9:;
			{
				_1bb25b678_indexing(_self_, _165626_m.cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c12e1461:;
			{
				_1bb25bbd9_anonFunc(_self_, _165626_m.cast_ptr<_1aca97e4b_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c12e14d8:;
			{
				_1bb25be92_mapExpr(_self_, _165626_m.cast_ptr<_1aca986ee_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c12e1560:;
			{
				_1bb25c24a_slicing(_self_, _165626_m.cast_ptr<_1aca98c82_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c12e15d7:;
			{
				_1bb25c503_traitSub(_self_, _165626_m.cast_ptr<_1aca99315_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c12e165e:;
			{
				_1bb25c7ab_structureSub(_self_, _165626_m.cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c12e16d6:;
			{
				_1bb25d37d_tuple(_self_, _165626_m.cast_ptr<_1aca9a723_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c12e175d:;
			{
				_1bb25d8de_printCall(_self_, _165626_m.cast_ptr<_1aca9aa20_BuiltinPrintCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c12e17d5:;
			{
				_1bb25db97_printlnCall(_self_, _165626_m.cast_ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c12e185c:;
			{
				_1bb25d636_newCall(_self_, _165626_m.cast_ptr<_1aca9b1e6_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c12e18d4:;
			{
				_1bb25de50_panicCall(_self_, _165626_m.cast_ptr<_1aca9b5c0_BuiltinPanicCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c12e195b:;
			{
				_1bb25e208_errorCall(_self_, _165626_m.cast_ptr<_1aca9d1c6_BuiltinErrorCallExprModel>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c12e19d3:;
			{
				_1bb2605e4_makeCall(_self_, _165626_m.cast_ptr<_1aca9ba76_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c12e1a5a:;
			{
				_1bb260e0d_appendCall(_self_, _165626_m.cast_ptr<_1aca9be50_BuiltinAppendCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c12e1ad2:;
			{
				_1bb25e4b1_copyCall(_self_, _165626_m.cast_ptr<_1aca9ccec_BuiltinCopyCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c12e1b59:;
			{
				_1bb25e769_lenCall(_self_, _165626_m.cast_ptr<_1aca9c24c_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c12e1bd1:;
			{
				_1bb25ea22_capCall(_self_, _165626_m.cast_ptr<_1aca9c549_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c12e1c58:;
			{
				_1bb25ecca_deleteCall(_self_, _165626_m.cast_ptr<_1aca9c923_BuiltinDeleteCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c12e1cd0:;
			{
				_1bb2611b6_sizeof(_self_, _165626_m.cast_ptr<_1aca9d4c3_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c12e1d57:;
			{
				_1bb26146e_alignof(_self_, _165626_m.cast_ptr<_1aca9db77_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c12e1dce:;
			{
				_1bb261727_runeLit(_self_, _165626_m.cast_ptr<_1aca9dd64_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c12e1e56:;
			{
				_1bb2619d0_structureStatic(_self_, _165626_m.cast_ptr<_1aca9a04c_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c12e1ecd:;
			{
				_1bb261c88_backendEmit(_self_, _165626_m.cast_ptr<_1aca9e1d8_BackendEmitExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c12e2055:;
			{
				_1bb262041_free(_self_, _165626_m.cast_ptr<_1aca9e4d5_FreeExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c12e20cc:;
			{
				_1bb2622e9_strComp(_self_, _165626_m.cast_ptr<_1bb10b0c7_StrCompExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c12e2154:;
			{
				_1bb257dd3_var(_self_, (*(_165626_m.unsafe_cast_ptr<_1bb10ab21_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c12e21cb:;
			{
				_1bb2625a2_emptyCompare(_self_, _165626_m.cast_ptr<_1bb10a824_EmptyCompareExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c12e2253:;
			{
				_1bb26285a_unsafeDeref(_self_, _165626_m.cast_ptr<_1bb10cc66_UnsafeDerefExprModel>(&__jule_any_type131));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1c12e22ca:;
			{
				_1bb262b13_unsafeCasting(_self_, _165626_m.cast_ptr<_1bb10d063_UnsafeCastingExprModel>(&__jule_any_type134));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c12e2352:;
			{
				_1bb25b117_funcCall(_self_, (*(_165626_m.unsafe_cast_ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else {
			_case_begin_1c12e0064:;
			{
				_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c12dee76:;
	};
}



inline jule::Bool _1bb26320c_handleFieldByDefault(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _175842_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_175842_f))))._field_Default != nullptr)) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1bb26bb72_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175842_f))))._field_Decl));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1bb258c5d_possibleRefExpr(_self_, (*(*((*(_175842_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aae6634e_ableToInit(&((*((*(_175842_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1bb26bb72_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_175842_f))))._field_Decl));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1bb264087_initExpr(_self_, (*((*(_175842_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bb2634b5_initStructLit(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _177935_s) {
	if ((*((*((*(_177935_s))))._field_Decl))._field_Binded) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1aae5c752_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177935_s)));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1aae5c752_structureIns((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_177935_s)));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	jule::Bool _17887_inited = false;;
	{
		auto expr = &((*((*(_177935_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1315474:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _178915_f = *it;
			{
				if (_17887_inited) {
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_17887_inited=_1bb26320c_handleFieldByDefault(_self_, &(_178915_f));
			}
			_iter_next_1c1315474:;
			++it;
			goto _iter_begin_1c1315474;
		}
		_iter_end_1c1315474:;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bb26376d_fillCollectionByDefault(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _180145_elem) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bb264087_initExpr(_self_, (*(_180145_elem)));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1bb263a26_initCollection(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _181636_elem) {
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1bb26376d_fillCollectionByDefault(_self_, _181636_elem);
}



inline void _1bb263cce_initArray(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbd07d1_Arr>* _183031_arr) {
	if (((*((*(_183031_arr))))._field_N == 0LL)) {
		_1aae5cab5_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183031_arr)));
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1aae5cab5_array((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_183031_arr)));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1bb263a26_initCollection(_self_, &((*((*(_183031_arr))))._field_Elem));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bb264087_initExpr(jule::Ptr<_1bb2545e9_exprCoder> _self_, jule::Ptr<_1acbc0d98_Type> _184429_t) {
	if (_1acbc2c9b_NilCompatible(_184429_t.ptr())) {
		if ((_1acbc50de_Map(_184429_t) != nullptr)) {
			_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1acbc3a6b_Ptr(_184429_t) != nullptr)) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1acbce0a4_Tuple> _18597_tup = _1acbc5375_Tup(_184429_t);;
	if ((_18597_tup != nullptr)) {
		_1aae63c75_tup((*(*((*(_self_))._field_oc))._field_tc.alloc)._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18597_tup);
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*_18597_tup.alloc)._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c132db41:;
			if (it != expr_end) {
				jule::I32 _18639_i = it - expr->begin();
				jule::Ptr<_1acbc0d98_Type> _186316_tt = *it;
				{
					if ((!(_1aae66629_shouldInitialized(&(_186316_tt))))) {
						goto _iter_next_1c132db41;
					};
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1aae499b4_write((*(_self_))._field_oc, _1aa51a22d_Itoa(_18639_i));
					_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bb264087_initExpr(_self_, _186316_tt);
					if ((((*_18597_tup.alloc)._field_Types.len() - _18639_i) > 1LL)) {
						_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c132db41:;
				++it;
				_18639_i++;
				goto _iter_begin_1c132db41;
			}
			_iter_end_1c132db41:;
		};
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1acab021b_Enum> _18787_enm = _1acbc3d02_Enum(_184429_t);;
	if ((_18787_enm != nullptr)) {
		_1bb262dbb_model(_self_, (*((*((*((*_18787_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _18833_prim = _1acbc354e_Prim(_184429_t);;
	if ((_18833_prim != nullptr)) {
		if (_1ac92bac1_IsNum((*_18833_prim.alloc)._field_Kind)) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1acbcc1e5_IsBool(_18833_prim)) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1acbcc47b_IsStr(_18833_prim)) {
			_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1acbc431e_Arr(_184429_t) != nullptr)) {
		jule::Ptr<_1acbd07d1_Arr> _18958_arr = _1acbc431e_Arr(_184429_t);;
		_1bb263cce_initArray(_self_, &(_18958_arr));
		return;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _18997_s = _1acbc4ac2_Struct(_184429_t);;
	if ((_18997_s != nullptr)) {
		_1bb2634b5_initStructLit(_self_, &(_18997_s));
		return;;
	};
	_1aae5e49b_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _184429_t);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1bb266b7d_TestCoder_eq(_1bb266b7d_TestCoder *_self_, _1bb266b7d_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1bb266b7d_TestCoder> static__1bb267134_New(jule::Ptr<_1aae49299_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1bb266b7d_TestCoder>(_1bb266b7d_TestCoder{._field_t=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1bb2673ba_findTestingPackage(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c133971d:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1c133971d:;
			++it;
			goto _iter_begin_1c133971d;
		}
		_iter_end_1c133971d:;
	};
	return nullptr;;
}



inline void _1bb267673_appendTest(jule::Ptr<_1bb266b7d_TestCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _3531_f) {
	_1aae4a366_indent((*(_self_))._field_oc);
	_1bb267db0_callTmReset(_self_);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1bb264d46_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1aae4a366_indent((*(_self_))._field_oc);
	static__1bb26abd7_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1bb26792b_appendPackageTests(jule::Ptr<_1bb266b7d_TestCoder> _self_, jule::Ptr<_1ac98e150_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c134101b:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1341a33:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _5216_f = *it;
						{
							if (_1ad620a28_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1bb267673_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1c1341a33:;
						++it;
						goto _iter_begin_1c1341a33;
					}
					_iter_end_1c1341a33:;
				};
			}
			_iter_next_1c134101b:;
			++it;
			goto _iter_begin_1c134101b;
		}
		_iter_end_1c134101b:;
	};
}



inline jule::Bool _1bb267bb2_readyTestingPackage(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	jule::Ptr<_1ac98b8cd_ImportInfo> _617_p = _1bb2673ba_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1ac98cadd_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1ac9d302e_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1ac9d302e_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1ac9d302e_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1bb267db0_callTmReset(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	static__1bb26a8eb_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bb2680ad_callTmFailed(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	static__1bb26a8eb_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bb2682ab_callTmSkipped(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	static__1bb26a8eb_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bb2684a9_Serialize(jule::Ptr<_1bb266b7d_TestCoder> _self_) {
	_1aae5675c_serializeHead((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	if ((!(_1bb267bb2_readyTestingPackage(_self_)))) {
		_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1aae4a168_doneIndent((*(_self_))._field_oc);
		_1aae55a47_end((*(_self_))._field_oc);
		return;;
	};
	_1a6a5cb3c_Builder _1097_tb = static__1a6a5d489_New(40LL);;
	_1aae5c752_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1aae5a695_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a6a5ee4c_Buf(&_1097_tb));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1aae49c6c_writeBytes((*(_self_))._field_oc, _1a6a5ee4c_Buf(&_1097_tb));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1aae49e6a_addIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bb2680ad_callTmFailed(_self_);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1bb2682ab_callTmSkipped(_self_);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1bb26792b_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1aae4a168_doneIndent((*(_self_))._field_oc);
	_1aae4a366_indent((*(_self_))._field_oc);
	_1aae499b4_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1aae55a47_end((*(_self_))._field_oc);
}








inline jule::Bool _1bb2697c9_identCoder_eq(_1bb2697c9_identCoder *_self_, _1bb2697c9_identCoder _other_) { return true; }

inline void static__1bb269d18_writeIdentTo(_1a6a5cb3c_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1549477:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1c154980c;
				};
			}
			_iter_next_1c1549477:;
			++it;
			goto _iter_begin_1c1549477;
		}
		_iter_end_1c1549477:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1c154980c:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1c154a49a:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1a6a5ddc4_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1c154a49a;
				};
				({
					auto except = _1a6a5db1b_WriteStr(_2630_buf, _1aa519e64_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1c154a49a:;
			it += len;
			goto _iter_begin_1c154a49a;
		}
	};
}



inline void static__1bb26a1ae_toOut(_1a6a5cb3c_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1a6a5ddc4_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1a6a5db1b_WriteStr(_5423_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1a6a5ddc4_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1bb269d18_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1bb26a610_toLocal(_1a6a5cb3c_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1a6a5ddc4_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_6925_buf, _1aa51a22d_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_6925_buf, _1aa51a22d_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1bb269d18_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1bb26a8eb_func(_1a6a5cb3c_Builder* _7722_buf, jule::Ptr<_1acaa2351_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1c154e724:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1acaa2a8d_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1c154e7bd:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1a6a5db1b_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1c154e603:;
	};
	jule::Ptr<_1abc419b9_Directive> _873_export = _1ad620660_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1a6a5db1b_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1bb26a1ae_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1bb26abd7_funcIns(_1a6a5cb3c_Builder* _9525_buf, jule::Ptr<_1acaa540e_FnIns>* _9553_f) {
	if (_1acaa68c7_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1a6a5db1b_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*(*((*(_9553_f))))._field_Decl.alloc)._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1bb26a8eb_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1bb26a1ae_toOut(_9525_buf, (*(*((*(_9553_f))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1bb26aec3_traitDecl(_1a6a5cb3c_Builder* _11027_buf, jule::Ptr<_1acaaca65_Trait> _11050_t) {
	static__1bb26a1ae_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1bb26b2ae_param(_1a6a5cb3c_Builder* _11423_buf, jule::Ptr<_1acaa087c_Param>* _11447_p) {
	if ((_1abc2e732_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1abc2e468_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1acaa0ecb_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1a6a5db1b_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1bb26a610_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1bb26a610_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*((*((*(_11447_p))))._field_Token))._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1bb26b59a_structure(_1a6a5cb3c_Builder* _12927_buf, jule::Ptr<_1ac9ce129_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1ad620a28_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1a6a5db1b_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1a6a5db1b_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1bb26a1ae_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1bb26b886_structureIns(_1a6a5cb3c_Builder* _14030_buf, jule::Ptr<_1ac9d1e84_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1bb26b59a_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1bb26a1ae_toOut(_14030_buf, (*(*((*(_14054_s))))._field_Decl.alloc)._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1bb26bb72_field(_1a6a5cb3c_Builder* _14823_buf, jule::Ptr<_1ac9cb203_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1a6a5db1b_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a6a5db1b_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1bb269d18_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1bb26be5d_var(_1a6a5cb3c_Builder* _15821_buf, jule::Ptr<_1acb3d420_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1c1560a43:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1c155ec84:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1c155dce9:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder == -1LL)) {
			_case_begin_1c155dd60:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_RetOrder >= 0LL)) {
			_case_begin_1c155ddc6:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(_15821_buf, _1aa51a22d_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Scope != nullptr)) {
			_case_begin_1c155de3c:;
			{
				static__1bb26a610_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1c155dc83:;
			{
				jule::Ptr<_1abc419b9_Directive> _1764_export = _1ad620660_FindDirective(&((*(_15848_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1a6a5db1b_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1bb26a1ae_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1c155db73:;
	};
}



inline void static__1bb26c249_iterBegin(_1a6a5cb3c_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1a6a5db1b_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_18527_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1bb26c535_iterEnd(_1a6a5cb3c_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1a6a5db1b_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_19025_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1bb26c821_iterNext(_1a6a5cb3c_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1a6a5db1b_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_19526_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1bb26cb0c_label(_1a6a5cb3c_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1a6a5db1b_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_20023_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1bb26cde8_matchEnd(_1a6a5cb3c_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1a6a5db1b_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_20526_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1bb26d1d4_caseBegin(_1a6a5cb3c_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1a6a5db1b_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_21027_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1aae469e4_SerializationInfo_eq(_1aae469e4_SerializationInfo *_self_, _1aae469e4_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1aae46e12_traitCast_eq(_1aae46e12_traitCast *_self_, _1aae46e12_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1aae472db_anonHash_eq(_1aae472db_anonHash *_self_, _1aae472db_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1aae47a06_metadata_eq(_1aae47a06_metadata *_self_, _1aae47a06_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1aae49299_ObjectCoder> static__1aae4970b_New(jule::Ptr<_1ad618328_IR>* _12021_ir, _1aae469e4_SerializationInfo _12035_info) {
	jule::Ptr<_1aae49299_ObjectCoder> _1217_oc = jule::new_ptr<_1aae49299_ObjectCoder>(_1aae49299_ObjectCoder{._field_Buf=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1a6a5cb3c_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_1aae472db_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1c0d56cda_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1aae46e12_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1acaa540e_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1aae47709_traitHash>>(nullptr), ._field_traitMetMap=static__1c0da3276_make(), ._field_ec=jule::Ptr<_1bb2545e9_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1bb248104_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1aae59298_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1aae47a06_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__1bb2549e5_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_sc=static__1bb2487ec_new(&(_1217_oc));
	(*_1217_oc.alloc)._field_tc=static__1aae597e8_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _1aae499b4_write(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _1a6a5db1b_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _1aae49c6c_writeBytes(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _1a6a5d7ca_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _1aae49e6a_addIndent(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1aae4a168_doneIndent(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1aae4a366_indent(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	({
		auto except = _1a6a5d7ca_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I32 _1aae4a6a7_findAnyType(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1574062:;
		if (it != expr_end) {
			jule::I32 _1578_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _15715_at = *it;
			{
				if (_1acbc15d5_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1c1574062:;
			++it;
			_1578_i++;
			goto _iter_begin_1c1574062;
		}
		_iter_end_1c1574062:;
	};
	return -1LL;;
}



inline jule::I32 _1aae4a9e8_pushCoSpawn(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1574b9a:;
		if (it != expr_end) {
			jule::I32 _1667_i = it - expr->begin();
			jule::Ptr<_1acaa540e_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c15766d5:;
						if (it != expr_end) {
							jule::I32 _1689_j = it - expr->begin();
							jule::Ptr<_1acaa42a9_ParamIns> *_16812_sp = it;
							{
								if ((!(_1acbc15d5_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1c15766d5;
								};
							}
							_iter_next_1c15766d5:;
							++it;
							_1689_j++;
							goto _iter_begin_1c15766d5;
						}
						_iter_end_1c15766d5:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1c1574b9a:;
			++it;
			_1667_i++;
			goto _iter_begin_1c1574b9a;
		}
		_iter_end_1c1574b9a:;
	};
	jule::I32 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _1aa51a22d_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa540e_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_1aae5e138_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c157b94e:;
		if (it != expr_end) {
			jule::I32 _1938_j = it - expr->begin();
			jule::Ptr<_1acaa42a9_ParamIns> _19315_p = *it;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_1aae5e49b_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1aa51a22d_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1c157b94e:;
			++it;
			_1938_j++;
			goto _iter_begin_1c157b94e;
		}
		_iter_end_1c157b94e:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_1a8e5a92d_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c1581a75:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_1a6a71348_IsUnix(_1a8e5a92d_OS)) {
			_case_begin_1c1581b52:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c15788d5:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1c15814ae:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c158953e:;
		if (it != expr_end) {
			jule::I32 _2387_j = it - expr->begin();
			{
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1aa51a22d_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c158953e:;
			++it;
			_2387_j++;
			goto _iter_begin_1c158953e;
		}
		_iter_end_1c158953e:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_1a8e5a92d_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c158db09:;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_1a6a71348_IsUnix(_1a8e5a92d_OS)) {
			_case_begin_1c158dbd6:;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c1583a11:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1c158d741:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I32 _1aae4ad39_pushDealloc(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c159116c:;
		if (it != expr_end) {
			jule::I32 _2697_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _26910_dt = *it;
			{
				if (_1acbc15d5_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1c159116c:;
			++it;
			_2697_i++;
			goto _iter_begin_1c159116c;
		}
		_iter_end_1c159116c:;
	};
	jule::I32 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_deallocObj, _1aa51a22d_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_1aae5e49b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _1aae4b17a_pushAnonFn(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _1ad61dd45_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I32 _2914_l = _1a6a5e930_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1a6a5ee4c_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c1598e77:;
			if (it != expr_end) {
				jule::Ptr<_1acb3d420_Var> _29616_v = *it;
				{
					({
						auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_1aae5e49b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__1bb26be5d_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1c1598e77:;
				++it;
				goto _iter_begin_1c1598e77;
			}
			_iter_end_1c1598e77:;
		};
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aae472db_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aae472db_anonHash>(_1aae472db_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1aae51c63_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _1aae4b4bb_pushAnyType(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acbc0d98_Type> _32632_t) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=_1aae4a6a7_findAnyType(_self_, &(_32632_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3333_si = _1aa51a22d_Itoa(__jule_func_result);;
	if ((_1acbc37d5_Sptr(_32632_t.ptr()) != nullptr)) {
		_1a6a5cb3c_Builder _3358_elemKind = static__1a6a5d489_New(40LL);;
		_1aae5e49b_kind((*_self_.alloc)._field_tc.ptr(), &(_3358_elemKind), (*(_1acbc37d5_Sptr(_32632_t)))._field_Elem);
		jule::I32 _3394_di = _1aae4ad39_pushDealloc(_self_, (*(_1acbc37d5_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa51a22d_Itoa(_3394_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:352:4"));
			(except.result);
		});
		_1aae5a695_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1a6a5ee4c_Buf(&_3358_elemKind));
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
	} else {
		_1a6a5cb3c_Builder _3588_kindB = static__1a6a5d489_New(40LL);;
		_1aae5e49b_kind((*_self_.alloc)._field_tc.ptr(), &(_3588_kindB), _32632_t);
		jule::Str _3604_kind = _1a6a5e49b_Str(&_3588_kindB);;
		jule::I32 _3634_di = _1aae4ad39_pushDealloc(_self_, _32632_t);;
		jule::Str _3688_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3688_lmodel+=_3604_kind;
		_3688_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3718_rmodel = _3688_lmodel;;
		_3718_rmodel+=jule::Str::lit("other)", 6);
		_3688_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:377:4"));
			(except.result);
		});
		if (_1acbc24e8_Comparable(_32632_t.ptr())) {
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:5"));
				(except.result);
			});
			_1bb256de3__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3688_lmodel), &(_3718_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
			jule::I32 _3869_n = _1a6a5e930_Len(&(*_self_.alloc)._field_anyObj);;
			_1bb264a16_cstrBytes(&((*_self_.alloc)._field_anyObj), _1acbc1294_Str(_32632_t.ptr()));
			_3869_n=(_1a6a5e930_Len(&(*_self_.alloc)._field_anyObj) - _3869_n);
			_3869_n+=37LL;
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa51a22d_Itoa(_3869_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:392:5"));
				(except.result);
			});
		};
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:398:4"));
			(except.result);
		});
		jule::Ptr<_1acaa540e_FnIns> _3998_f = _1ad622189_FindFnGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));;
		static__1bb26abd7_funcIns(&((*_self_.alloc)._field_anyObj), &(_3998_f));
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		if ((_1acbc3a6b_Ptr(_32632_t.ptr()) == nullptr)) {
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:404:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:407:5"));
				(except.result);
			});
		};
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa51a22d_Itoa(_3634_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aae4b774_pushResultIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _42635_f) {
	jule::Str _4273_s = __jule_bytesToStr(_1aae64759_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42635_f))))._field_Result)));;
	jule::Bool _4286_ok;
	_1c0d574a0_lookup((*_self_.alloc)._field_resultMap, _4273_s, nullptr, &(_4286_ok));
	if (_4286_ok) {
		return;;
	};
	(*_1c0d57758_set(((*_self_.alloc)._field_resultMap).ptr(), _4273_s))=false;
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, _4273_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:435:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1acbc5375_Tup((*((*(_42635_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15bd144:;
		if (it != expr_end) {
			jule::I32 _4368_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _43615_t = *it;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:437:4"));
				});
				_1aae5e49b_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43615_t);
				({
					auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, _1aa51a22d_Itoa(_4368_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
					(except.result);
				});
			}
			_iter_next_1c15bd144:;
			++it;
			_4368_i++;
			goto _iter_begin_1c15bd144;
		}
		_iter_end_1c15bd144:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:3"));
		(except.result);
	});
}



inline void _1aae4ba2c_pushResult(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _44732_f) {
	if ((_1acaa2807_IsVoid((*(_44732_f)).ptr()) || ((*((*((*(_44732_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4517_n = (*((*(_44732_f))))._field_Instances.len();;
	if (((*((*(_44732_f))))._field_Generics.len() == 0LL)) {
		_4517_n=1LL;
	};
	{
		auto expr = (*((*(_44732_f))))._field_Instances.slice(0LL, _4517_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c15c327b:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _45515_ins = *it;
			{
				_1aae4b774_pushResultIns(_self_, &(_45515_ins));
			}
			_iter_next_1c15c327b:;
			++it;
			goto _iter_begin_1c15c327b;
		}
		_iter_end_1c15c327b:;
	};
}



inline void _1aae4bd90_pushAndWriteMaskMapper(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait> _46043_t1, jule::Ptr<_1acaaca65_Trait> _46065_t2) {
	_1a6a5cb3c_Builder _4617_ident = static__1a6a5d489_New(32LL);;
	({
		auto except = _1a6a5db1b_WriteStr(&_4617_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_4617_ident, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46065_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_4617_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_4617_ident, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46043_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	({
		auto except = _1a6a5d7ca_Write(&(*(_self_))._field_Buf, _1a6a5ee4c_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:466:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15c6092:;
		if (it != expr_end) {
			_1aae46e12_traitCast _46910_m = *it;
			{
				if (((_46910_m._field_t1 == _46043_t1) && (_46910_m._field_t2 == _46065_t2))) {
					return;;
				};
			}
			_iter_next_1c15c6092:;
			++it;
			goto _iter_begin_1c15c6092;
		}
		_iter_end_1c15c6092:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1aae46e12_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aae46e12_traitCast{._field_t1=_46043_t1, ._field_t2=_46065_t2}; __jule_collection; }));
	;
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _1a6a5d7ca_Write(&(*_self_.alloc)._field_anyObj, _1a6a5ee4c_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:481:3"));
		(except.result);
	});
	_1a6a5cb3c_Builder _4837_t1Ident = static__1a6a5d489_New(16LL);;
	_1a6a5cb3c_Builder _4847_t2Ident = static__1a6a5d489_New(16LL);;
	static__1bb26aec3_traitDecl(&(_4837_t1Ident), _46043_t1);
	static__1bb26aec3_traitDecl(&(_4847_t2Ident), _46065_t2);
	{
		auto expr = &((*(_46043_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15c6713:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _48815_s1 = *it;
			{
				{
					auto expr = &((*(_46065_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c15ca739:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _48911_s2 = *it;
						{
							if ((_48815_s1 == _48911_s2)) {
								{
									auto expr = &((*(_48815_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c15cb6b3:;
									if (it != expr_end) {
										jule::Ptr<_1ac9d1e84_StructIns> _49118_s1i = *it;
										{
											jule::I32 _4927_i1 = _1ad621562_FindTraitTypeOffsetS(_46043_t1, _49118_s1i);;
											jule::I32 _4937_i2 = _1ad621562_FindTraitTypeOffsetS(_46065_t2, _49118_s1i);;
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _1a6a5d7ca_Write(&(*_self_.alloc)._field_anyObj, _1a6a5ee4c_Buf(&_4847_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa51a22d_Itoa(_4937_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _1a6a5d7ca_Write(&(*_self_.alloc)._field_anyObj, _1a6a5ee4c_Buf(&_4837_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, _1aa51a22d_Itoa(_4927_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
										}
										_iter_next_1c15cb6b3:;
										++it;
										goto _iter_begin_1c15cb6b3;
									}
									_iter_end_1c15cb6b3:;
								};
							};
						}
						_iter_next_1c15ca739:;
						++it;
						goto _iter_begin_1c15ca739;
					}
					_iter_end_1c15ca739:;
				};
			}
			_iter_next_1c15c6713:;
			++it;
			goto _iter_begin_1c15c6713;
		}
		_iter_end_1c15c6713:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:3"));
		(except.result);
	});
}



inline void _1aae4c148_locInfo(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1abc2ba81_Token>* _51125_t) {
	jule::Str *_5124_loc = &((*((*((*(_51125_t))))._field_File))._field_Path);;
	if (_1a8e61e40_Production) {
		{
			
			if (_1a8e45ee0_HasPrefix((*(_5124_loc)), _1a8e59d8e_PathStdlib)) {
				_case_begin_1c15d1a81:;
				{
					_1bb264a16_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)).slice((_1a8e52edb_Dir(_1a8e59d8e_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1a8e45ee0_HasPrefix((*(_5124_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c15d1b5d:;
				{
					_1bb264a16_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)).slice((_1a8e52edb_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c15d16b8:;
				{
					_1bb264a16_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
				}
			}
			_match_end_1c15d15db:;
		};
	} else {
		_1bb264a16_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
	};
	_1aae499b4_write(_self_, jule::Str::lit(":", 1));
	_1aae499b4_write(_self_, _1aa51a22d_Itoa((*((*(_51125_t))))._field_Row));
	_1aae499b4_write(_self_, jule::Str::lit(":", 1));
	_1aae499b4_write(_self_, _1aa51a22d_Itoa((*((*(_51125_t))))._field_Column));
}



inline void _1aae4c346_head(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae3bc92_Time _5383_time = static__1aae3c38b_Now();;
	_1aae3b5bb_AbsTime _5393_abs = _1aae3da74_Abs(&_5383_time);;
	_1aae499b4_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1aae499b4_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1aae499b4_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
	_1aae499b4_write(_self_, jule::Str::lit("// Date: ", 9));
	_1aae499b4_write(_self_, _1aa519a9b_FmtUint(_5393_abs._field_Day, 10LL));
	_1aae499b4_write(_self_, jule::Str::lit("/", 1));
	_1aae499b4_write(_self_, _1aa519a9b_FmtUint(_5393_abs._field_Month, 10LL));
	_1aae499b4_write(_self_, jule::Str::lit("/", 1));
	_1aae499b4_write(_self_, _1aa519a9b_FmtUint(_5393_abs._field_Year, 10LL));
	_1aae499b4_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1aae499b4_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
	_1aae499b4_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1a8e61e40_Production) {
		_1aae499b4_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1a8e61835_RC))) {
		_1aae499b4_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1a8e61bed_Safety))) {
		_1aae499b4_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1aae4c5ee_links(_self_, true);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1aae499b4_write(_self_, _1a8e5a675_PathApi);
	_1aae499b4_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1aae4c5ee_links(_self_, false);
}



inline void _1aae4c5ee_links(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Bool _57822_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15dd780:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _57910_used = *it;
			{
				{
					
					if ((!((*(_57910_used))._field_Binded))) {
						_case_begin_1c15de64e:;
						{
							goto _iter_next_1c15dd780;
						}
					}
					else if (_1a6a21e53_IsStdHeaderPath((*(_57910_used))._field_Path)) {
						_case_begin_1c15de6d7:;
						{
							if ((!(_57822_std))) {
								goto _iter_next_1c15dd780;
							};
							_1aae499b4_write(_self_, jule::Str::lit("#include ", 9));
							_1aae499b4_write(_self_, (*_57910_used.alloc)._field_Path);
							_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1a6a2222d_IsValidHeaderExt(_1a8e5257e_Ext((*(_57910_used))._field_Path))) {
						_case_begin_1c15de74d:;
						{
							if (_57822_std) {
								goto _iter_next_1c15dd780;
							};
							_1aae499b4_write(_self_, jule::Str::lit("#include \"", 10));
							_1aae499b4_write(_self_, (*_57910_used.alloc)._field_Path);
							_1aae499b4_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c15de4ea:;
				};
			}
			_iter_next_1c15dd780:;
			++it;
			goto _iter_begin_1c15dd780;
		}
		_iter_end_1c15dd780:;
	};
}



inline void _1aae4c8a7_prepareStructure(_1aae49299_ObjectCoder* _self_, jule::Ptr<_1ac9ce129_Struct>* _60137_s) {
	{
		auto expr = &((*((*(_60137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15dd6e7:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _60215_ins = *it;
			{
				{
					auto expr = &((*(_60215_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c15e33de:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _60316_m = *it;
						{
							if ((*(_60316_m))._field_Statically) {
								goto _iter_next_1c15e33de;
							};
							{
								auto expr = &((*_60316_m.alloc)._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c15e4038:;
								if (it != expr_end) {
									jule::Ptr<_1acaa540e_FnIns> _60717_mins = *it;
									{
										jule::Ptr<_1acaa42a9_ParamIns> _60810_p = (*(_60717_mins))._field_Params[0LL];;
										_1a6a5cb3c_Builder _60910_kind = static__1a6a5d489_New(40LL);;
										_1aae5e49b_kind((*(_self_))._field_tc.ptr(), &(_60910_kind), (*(_60810_p))._field_Type);
										if ((!(_1acaa1262_IsRef((*_60810_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1a6a5db1b_WriteStr(&_60910_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:612:7"));
												(except.result);
											});
										};
										(*_60810_p.alloc)._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aae58660_customType>(_1aae58660_customType{._field_kind=_1a6a5e49b_Str(&_60910_kind)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data29)});
									}
									_iter_next_1c15e4038:;
									++it;
									goto _iter_begin_1c15e4038;
								}
								_iter_end_1c15e4038:;
							};
						}
						_iter_next_1c15e33de:;
						++it;
						goto _iter_begin_1c15e33de;
					}
					_iter_end_1c15e33de:;
				};
			}
			_iter_next_1c15dd6e7:;
			++it;
			goto _iter_begin_1c15dd6e7;
		}
		_iter_end_1c15dd6e7:;
	};
}



inline void _1aae4caa5_prepareStructures(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15dbbac:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _62515_s = *it;
			{
				if (((*(_62515_s))._field_Token != nullptr)) {
					_1aae4c8a7_prepareStructure(_self_.ptr(), &(_62515_s));
				};
			}
			_iter_next_1c15dbbac:;
			++it;
			goto _iter_begin_1c15dbbac;
		}
		_iter_end_1c15dbbac:;
	};
}



inline void _1aae4cd5d_structurePlainDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _63240_s) {
	{
		auto expr = &((*((*(_63240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15e7998:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _63315_ins = *it;
			{
				_1aae499b4_write(_self_, jule::Str::lit("struct ", 7));
				static__1bb26b886_structureIns(&((*_self_.alloc)._field_Buf), &(_63315_ins));
				_1aae499b4_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c15e7998:;
			++it;
			goto _iter_begin_1c15e7998;
		}
		_iter_end_1c15e7998:;
	};
}



inline void _1aae4d05b_structurePlainDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c15e9bcb:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _64115_s = *it;
			{
				if (((*(_64115_s))._field_Token != nullptr)) {
					_1aae4cd5d_structurePlainDecl(_self_, &(_64115_s));
				};
			}
			_iter_next_1c15e9bcb:;
			++it;
			goto _iter_begin_1c15e9bcb;
		}
		_iter_end_1c15e9bcb:;
	};
}



inline void _1aae4d314_fieldDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d13d4_FieldIns>* _64831_f) {
	_1aae5e49b_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64831_f))))._field_Type);
	_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
	static__1bb26bb72_field(&((*_self_.alloc)._field_Buf), &((*((*(_64831_f))))._field_Decl));
	_1aae499b4_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aae4d732_structureOperatorEq(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1ac9d1e84_StructIns>* _65553_s, jule::Bool _65574_decl) {
	if ((!(_1aae573b7_defaultEq(_65553_s)))) {
		return;;
	};
	_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
	if (_1bb127ce7_Inline) {
		_1aae499b4_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1aae499b4_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1aae499b4_write(_self_, _65536_ident);
	_1aae499b4_write(_self_, jule::Str::lit("_eq", 3));
	_1aae499b4_write(_self_, jule::Str::lit("(", 1));
	_1aae499b4_write(_self_, _65536_ident);
	_1aae499b4_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1aae499b4_write(_self_, _65536_ident);
	_1aae499b4_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65574_decl) {
		_1aae499b4_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1aae499b4_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65553_s))))._field_Fields.len() == 0LL)) {
		_1aae499b4_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1aae49e6a_addIndent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
	_1aae4a366_indent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("return ", 7));
	_1aae49e6a_addIndent(_self_);
	jule::Bool _6867_writed = false;;
	jule::Str _6897_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6907_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65553_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1604a1b:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _69215_f = *it;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _6944_strct = _1acbc4ac2_Struct((*(_69215_f))._field_Type.ptr());;
				if ((((_6944_strct != nullptr) && ((*_6944_strct.alloc)._field_Decl != nullptr)) && (*(*(_6944_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1c1604a1b;
				};
				if (_6867_writed) {
					_1aae499b4_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6867_writed=true;
				_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
				_1aae4a366_indent(_self_);
				_1a6a5cb3c_Builder _7058_fIdent = static__1a6a5d489_New((*((*_69215_f.alloc)._field_Decl))._field_Ident.len());;
				static__1bb26bb72_field(&(_7058_fIdent), &((*_69215_f.alloc)._field_Decl));
				_6897_lmodel+=_1bb764aa4_BytesStr(_1a6a5ee4c_Buf(&_7058_fIdent));
				_6907_rmodel+=_1bb764aa4_BytesStr(_1a6a5ee4c_Buf(&_7058_fIdent));
				_1bb256de3__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6897_lmodel), &(_6907_rmodel), &((*_69215_f.alloc)._field_Type), &((*_69215_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6897_lmodel).mut_slice(0LL, (_6897_lmodel.len() - _1a6a5e930_Len(&_7058_fIdent)));;
				_6907_rmodel=_6897_lmodel.slice(0LL, (_6907_rmodel.len() - _1a6a5e930_Len(&_7058_fIdent)));
			}
			_iter_next_1c1604a1b:;
			++it;
			goto _iter_begin_1c1604a1b;
		}
		_iter_end_1c1604a1b:;
	};
	_1aae4a168_doneIndent(_self_);
	if ((!(_6867_writed))) {
		_1aae499b4_write(_self_, jule::Str::lit("true", 4));
	};
	_1aae499b4_write(_self_, jule::Str::lit(";\n", 2));
	_1aae4a168_doneIndent(_self_);
	_1aae4a366_indent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1aae4da95_structureOperators(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _72340_s, jule::Bool _72361_decl) {
	_1a6a5cb3c_Builder _7247_sb = static__1a6a5d489_New(40LL);;
	static__1bb26b886_structureIns(&(_7247_sb), _72340_s);
	jule::Str _7263_ident = _1a6a5e49b_Str(&_7247_sb);;
	_1aae4d732_structureOperatorEq(_self_, _7263_ident, _72340_s, _72361_decl);
}



inline void _1aae4dd4d_structureInsDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _73238_s) {
	{
		auto expr = &((*((*(_73238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c160dc34:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _73315_m = *it;
			{
				if (_1aae570ed_isHeadDecl(&(_73315_m))) {
					_1aae501a1_funcDecl(_self_, &(_73315_m), false);
				};
			}
			_iter_next_1c160dc34:;
			++it;
			goto _iter_begin_1c160dc34;
		}
		_iter_end_1c160dc34:;
	};
	_1aae499b4_write(_self_, jule::Str::lit("struct ", 7));
	static__1bb26b886_structureIns(&((*_self_.alloc)._field_Buf), _73238_s);
	_1aae499b4_write(_self_, jule::Str::lit(" {\n", 3));
	_1aae49e6a_addIndent(_self_);
	{
		auto expr = &((*((*(_73238_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c161063c:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d13d4_FieldIns> _74415_f = *it;
			{
				_1aae4a366_indent(_self_);
				_1aae4d314_fieldDecl(_self_, &(_74415_f));
				_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c161063c:;
			++it;
			goto _iter_begin_1c161063c;
		}
		_iter_end_1c161063c:;
	};
	_1aae4a168_doneIndent(_self_);
	_1aae4a366_indent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("};", 2));
	;
	_1aae4da95_structureOperators(_self_, _73238_s, true);
}



inline void _1aae4e106_structureDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _75835_s) {
	{
		auto expr = &((*((*(_75835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16134ec:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _75915_ins = *it;
			{
				_1aae4dd4d_structureInsDecl(_self_, &(_75915_ins));
			}
			_iter_next_1c16134ec:;
			++it;
			goto _iter_begin_1c16134ec;
		}
		_iter_end_1c16134ec:;
	};
}



inline void _1aae4e304_structureDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1614377:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _76515_s = *it;
			{
				if (((*(_76515_s))._field_Token != nullptr)) {
					_1aae4e106_structureDecl(_self_, &(_76515_s));
					_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c1614377:;
			++it;
			goto _iter_begin_1c1614377;
		}
		_iter_end_1c1614377:;
	};
}



inline void _1aae4e502_structureMethodDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1614cc3:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _77415_s = *it;
			{
				if (((*(_77415_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77415_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c1616e6d:;
						if (it != expr_end) {
							jule::Ptr<_1ac9d1e84_StructIns> _77617_ins = *it;
							{
								{
									auto expr = &((*(_77617_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c1617952:;
									if (it != expr_end) {
										jule::Ptr<_1acaa2351_Fn> _77718_m = *it;
										{
											if ((!(_1aae570ed_isHeadDecl(&(_77718_m))))) {
												_1aae4ba2c_pushResult(_self_, &(_77718_m));
												_1aae501a1_funcDecl(_self_, &(_77718_m), false);
											};
										}
										_iter_next_1c1617952:;
										++it;
										goto _iter_begin_1c1617952;
									}
									_iter_end_1c1617952:;
								};
							}
							_iter_next_1c1616e6d:;
							++it;
							goto _iter_begin_1c1616e6d;
						}
						_iter_end_1c1616e6d:;
					};
				};
			}
			_iter_next_1c1614cc3:;
			++it;
			goto _iter_begin_1c1614cc3;
		}
		_iter_end_1c1614cc3:;
	};
}



inline void _1aae4e9ca_funcHead(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _79230_buf, jule::Ptr<_1acaa540e_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident) {
	if ((((!(_79275_ptr)) && _1bb127ce7_Inline) && (!(_1acaa2d24_IsEntryPoint((*((*(_79258_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1a6a5db1b_WriteStr(_79230_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
			(except.result);
		});
	};
	_1aae5d962_funcInsResult((*(_self_))._field_tc.ptr(), _79230_buf, _79258_f);
	if (_79275_ptr) {
		({
			auto except = _1a6a5db1b_WriteStr(_79230_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:798:4"));
			(except.result);
		});
		static__1bb26abd7_funcIns(_79230_buf, _79258_f);
		({
			auto except = _1a6a5ddc4_WriteByte(_79230_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:4"));
		});
	} else {
		({
			auto except = _1a6a5ddc4_WriteByte(_79230_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:802:4"));
		});
		if ((_79286_ident).empty()) {
			static__1bb26abd7_funcIns(_79230_buf, _79258_f);
		} else {
			({
				auto except = _1a6a5db1b_WriteStr(_79230_buf, _79286_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:806:5"));
				(except.result);
			});
		};
	};
}



inline void _1aae4ed3d_funcDeclIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns>* _81133_f, jule::Bool _81150_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81133_f))))._field_CalledCo);
	_1aae4a366_indent(_self_);
	_1aae4e9ca_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81133_f, _81150_ptr, jule::Str());
	_1aae512d4_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81133_f);
	_1aae499b4_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1aae501a1_funcDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _81930_f, jule::Bool _81944_ptr) {
	{
		auto expr = &((*((*(_81930_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c161e492:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _82015_c = *it;
			{
				_1aae4ed3d_funcDeclIns(_self_, &(_82015_c), _81944_ptr);
			}
			_iter_next_1c161e492:;
			++it;
			goto _iter_begin_1c161e492;
		}
		_iter_end_1c161e492:;
	};
}



inline void _1aae50459_funcDeclTrait(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _82535_f) {
	{
		auto expr = &((*((*(_82535_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16203d8:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _82615_c = *it;
			{
				jule::Ptr<_1acbc0d98_Type> _8278_k = (*((*(_82615_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_1aae46719_generalGCPtr;
				_1aae4ed3d_funcDeclIns(_self_, &(_82615_c), true);
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_8278_k;
			}
			_iter_next_1c16203d8:;
			++it;
			goto _iter_begin_1c16203d8;
		}
		_iter_end_1c16203d8:;
	};
}



inline void _1aae50657_funcDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1ad61aca9_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac98e150_Package>*>((void*)__jule_anon_1c1623100, jule::Ptr<__jule_anon_1c1623100_ctx>::make(__jule_anon_1c1623100_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c1623100_ctx_handler));
}



inline void _1aae50910_traitDataTypeMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _84742_hash) {
	{
		auto expr = &((*((*(_84742_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c162494d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _84815_m = *it;
			{
				jule::Ptr<_1acaa540e_FnIns> _8498_ins = (*(_84815_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8498_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c162749a:;
					if (it != expr_end) {
						jule::I32 _8509_i = it - expr.begin();
						jule::Ptr<_1acaa42a9_ParamIns> _85016_ip = *it;
						{
							if (_1abc2e732_IsAnonIdent((*((*(_85016_ip))._field_Decl))._field_Ident)) {
								(*(*(_85016_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1aa51a22d_Itoa(_8509_i));
							};
						}
						_iter_next_1c162749a:;
						++it;
						_8509_i++;
						goto _iter_begin_1c162749a;
					}
					_iter_end_1c162749a:;
				};
				_1aae4ba2c_pushResult(_self_, &(_84815_m));
				_1aae50459_funcDeclTrait(_self_, &(_84815_m));
			}
			_iter_next_1c162494d:;
			++it;
			goto _iter_begin_1c162494d;
		}
		_iter_end_1c162494d:;
	};
}



inline void _1aae50b0d_traitDataTypes(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16266a8:;
		if (it != expr_end) {
			jule::Ptr<_1aae47709_traitHash> _86115_hash = *it;
			{
				_1aae499b4_write(_self_, jule::Str::lit("struct ", 7));
				static__1bb26aec3_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86115_hash))._field_traitDecl);
				_1aae499b4_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1aae49e6a_addIndent(_self_);
				_1aae4a366_indent(_self_);
				_1aae499b4_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1aae50910_traitDataTypeMethods(_self_, &(_86115_hash));
				_1aae4a168_doneIndent(_self_);
				_1aae4a366_indent(_self_);
				_1aae499b4_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c16266a8:;
			++it;
			goto _iter_begin_1c16266a8;
		}
		_iter_end_1c16266a8:;
	};
}



inline void _1aae50e71_paramIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _87530_buf, jule::Ptr<_1acaa42a9_ParamIns>* _87558_p) {
	_1aae5d28b_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87558_p);
	({
		auto except = _1a6a5ddc4_WriteByte(_87530_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:3"));
	});
	static__1bb26b2ae_param(_87530_buf, &((*((*(_87558_p))))._field_Decl));
}



inline void _1aae512d4_paramsIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _88131_buf, jule::Ptr<_1acaa540e_FnIns>* _88159_f) {
	if (((!((*((*(_88159_f))))._field_AsAnon)) && ((*((*(_88159_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1a6a5db1b_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:883:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_88131_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:886:3"));
	});
	if ((*((*(_88159_f))))._field_AsAnon) {
		({
			auto except = _1a6a5db1b_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		if (((*((*(_88159_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1a6a5db1b_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88159_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1630a25:;
		if (it != expr_end) {
			jule::I32 _8938_i = it - expr->begin();
			jule::Ptr<_1acaa42a9_ParamIns> _89315_p = *it;
			{
				_1aae50e71_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88159_f))))._field_Params.len() - _8938_i) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:896:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c1630a25:;
			++it;
			_8938_i++;
			goto _iter_begin_1c1630a25;
		}
		_iter_end_1c1630a25:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_88131_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:899:3"));
	});
}



inline void _1aae51647_varInitExpr(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acb3d420_Var>* _90233_v, jule::Fn<void> _90248_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_1aae499b4_write(_self_, jule::Str::lit("static ", 7));
	};
	_1aae5e49b_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_TypeSym))._field_Type);
	_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_1aae499b4_write(_self_, jule::Str::lit("*", 1));
	};
	static__1bb26be5d_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90248_init != nullptr)) {
		_1aae499b4_write(_self_, jule::Str::lit(" = ", 3));
		_90248_init();
	};
	_1aae499b4_write(_self_, jule::Str::lit(";", 1));
}



inline void _1aae51900_var(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acb3d420_Var> _92024_v) {
	if (_1abc2e468_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*_92024_v.alloc)._field_Value != nullptr) && ((*(*(_92024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_1aae51647_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c1637dd4, jule::Ptr<__jule_anon_1c1637dd4_ctx>::make(__jule_anon_1c1637dd4_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c1637dd4_ctx_handler));
			} else {
				_1aae51647_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c1639ec4, jule::Ptr<__jule_anon_1c1639ec4_ctx>::make(__jule_anon_1c1639ec4_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c1639ec4_ctx_handler));
			};
			return;;
		};
		_1aae51647_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*_92024_v.alloc)._field_Reference) {
		_1aae51647_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c163c6d0, jule::Ptr<__jule_anon_1c163c6d0_ctx>::make(__jule_anon_1c163c6d0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c163c6d0_ctx_handler));
		return;;
	};
	if (_1aae66629_shouldInitialized(&((*((*_92024_v.alloc)._field_TypeSym))._field_Type))) {
		_1aae51647_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c163d879, jule::Ptr<__jule_anon_1c163d879_ctx>::make(__jule_anon_1c163d879_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c163d879_ctx_handler));
		return;;
	};
	_1aae51647_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _1aae51c63_anonFuncInsDecl(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _95137_m, jule::Str _95164_ident) {
	_1aae4e9ca_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95164_ident);
	_1aae512d4_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	({
		auto except = _1a6a5ddc4_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:954:3"));
	});
}



inline void _1aae520c6_anonFuncIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _95733_m, jule::Str _95760_ident) {
	_1aae4e9ca_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95760_ident);
	_1aae512d4_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
	_1bb250ddc_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95760_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aae52439_funcIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa540e_FnIns> _96728_f, jule::Str _96745_ident) {
	_1aae4e9ca_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f), false, _96745_ident);
	_1aae512d4_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f));
	_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
	_1bb251195_funcScope((*_self_.alloc)._field_sc, _96728_f);
	if (((*(_96728_f))._field_Scope != nullptr)) {
		_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1aae526e2_func(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16471ac:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _97815_ins = *it;
			{
				_1aae52439_funcIns(_self_, _97815_ins, jule::Str());
			}
			_iter_next_1c16471ac:;
			++it;
			goto _iter_begin_1c16471ac;
		}
		_iter_end_1c16471ac:;
	};
}



inline void _1aae52a55_funcTrait(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _98327_s, jule::Ptr<_1acaa540e_FnIns>* _98353_f) {
	(*((*(_98353_f))))._field_Scope=nullptr;
	_1a6a5cb3c_Builder _9867_nident = static__1a6a5d489_New(30LL);;
	({
		auto except = _1a6a5db1b_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:987:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_9867_nident, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98353_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:988:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:989:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(&_9867_nident, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:990:3"));
		(except.result);
	});
	jule::Ptr<_1acbc0d98_Type> _9927_k = (*((*((*(_98353_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_1aae46719_generalGCPtr;
	_1aae52439_funcIns(_self_, (*(_98353_f)), _1a6a5e49b_Str(&_9867_nident));
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_9927_k;
}



inline __jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool _1aae52d96_findTraitMetMap(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaa2351_Fn>* _99837_m) {
	__jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1acaa540e_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		_1c0dac33a_mapIterator it = _1c0da43a9_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1c164c987:;
		__jule_tuple_px_1acaa540e_FnIns__jule_tuple_psuintptr __iterator_result = _1c0daca22_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1acaa540e_FnIns> _100012_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*(_100012_f))._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _1acaa6069_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c164c987:;
			goto _iter_begin_1c164c987;
		}
		_iter_end_1c164c987:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1aae53209_traitWrapper(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait>* _101034_t, jule::Ptr<_1acaa2351_Fn>* _101056_m) {
	_julec_label_1c16501b5:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c165036e:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _101215_imp = *it;
			{
				jule::Ptr<_1acaa540e_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool __jule_assign_result = _1aae52d96_findTraitMetMap(_self_, _101056_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = _1c0da3a90_get((*_self_.alloc)._field_traitMetMap, _10138_mepf);;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c16523d7:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1c165036e;
								};
							}
							_iter_next_1c16523d7:;
							++it;
							goto _iter_begin_1c16523d7;
						}
						_iter_end_1c16523d7:;
					};
					(*_1c0da3be4_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(_10169_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				} else {
					(*_1c0da3be4_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1652bbd:;
					if (it != expr_end) {
						jule::Ptr<_1ac9d1e84_StructIns> _102716_ins = *it;
						{
							_1aae52a55_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							;
							jule::Ptr<_1acaa2351_Fn> _10319_sm = _1ac9d302e_FindMethod(_102716_ins.ptr(), (*((*(_101056_m))))._field_Ident, false);;
							if (((_10319_sm == nullptr) || ((*(_10319_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1aae49e6a_addIndent(_self_);
							_1aae499b4_write(_self_, jule::Str::lit("{\n", 2));
							_1aae4a366_indent(_self_);
							if (((*((*(_101056_m))))._field_Exceptional || (!(_1acaa2807_IsVoid((*(_101056_m)).ptr()))))) {
								_1aae499b4_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1bb26a8eb_func(&((*_self_.alloc)._field_Buf), &(_10319_sm));
							_1aae499b4_write(_self_, jule::Str::lit("(", 1));
							_1aae499b4_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1aae5c752_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_1aae499b4_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10485_ptr = (!(_1acaa1262_IsRef((*((*(_101056_m))))._field_Params[0LL].ptr())));;
							if (_10485_ptr) {
								_1aae499b4_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101056_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1c165a08d:;
								if (it != expr_end) {
									jule::Ptr<_1acaa087c_Param> _105212_mp = *it;
									{
										_1aae499b4_write(_self_, jule::Str::lit(", ", 2));
										static__1bb26b2ae_param(&((*_self_.alloc)._field_Buf), &(_105212_mp));
									}
									_iter_next_1c165a08d:;
									++it;
									goto _iter_begin_1c165a08d;
								}
								_iter_end_1c165a08d:;
							};
							_1aae499b4_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1aae4a168_doneIndent(_self_);
						}
						_iter_next_1c1652bbd:;
						++it;
						goto _iter_begin_1c1652bbd;
					}
					_iter_end_1c1652bbd:;
				};
			}
			_iter_next_1c165036e:;
			++it;
			goto _iter_begin_1c165036e;
		}
		_iter_end_1c165036e:;
	};
}



inline void _1aae53407_traitWrappers(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1656991:;
		if (it != expr_end) {
			jule::Ptr<_1aae47709_traitHash> _106315_hash = *it;
			{
				if (((*((*(_106315_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1c1656991;
				};
				{
					auto expr = &((*_106315_hash.alloc)._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c165c634:;
					if (it != expr_end) {
						jule::Ptr<_1acaa2351_Fn> _106716_m = *it;
						{
							_1aae53209_traitWrapper(_self_, &((*_106315_hash.alloc)._field_traitDecl), &(_106716_m));
						}
						_iter_next_1c165c634:;
						++it;
						goto _iter_begin_1c165c634;
					}
					_iter_end_1c165c634:;
				};
			}
			_iter_next_1c1656991:;
			++it;
			goto _iter_begin_1c1656991;
		}
		_iter_end_1c1656991:;
	};
}



inline void _1aae5376a_traitDataMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _107438_hash, jule::Ptr<_1ac9d1e84_StructIns> _107456_s) {
	{
		auto expr = &((*((*(_107438_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c165cdc6:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _107515_m = *it;
			{
				_1aae4a366_indent(_self_);
				_1aae499b4_write(_self_, jule::Str::lit(".", 1));
				static__1bb26a8eb_func(&((*_self_.alloc)._field_Buf), &(_107515_m));
				_1aae499b4_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1acaa540e_FnIns> _10804_mepf;
				jule::Bool _108010_exist;
				({
					__jule_tuple_x_1acaa540e_FnIns__jule_tuple_bool __jule_assign_result = _1aae52d96_findTraitMetMap(_self_, &(_107515_m));
					_10804_mepf = __jule_assign_result.__jule_result_arg0;
					_108010_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108010_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1082:5"));;
				};
				_1aae499b4_write(_self_, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10804_mepf)), 15LL));
				_1aae499b4_write(_self_, jule::Str::lit("_", 1));
				_1aae499b4_write(_self_, _1aa519a9b_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107456_s)), 15LL));
				_1aae499b4_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1c165cdc6:;
			++it;
			goto _iter_begin_1c165cdc6;
		}
		_iter_end_1c165cdc6:;
	};
}



inline void _1aae53b88_traitData(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1aae47709_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_1ac9d1e84_StructIns>* _109262_s) {
	_1a6a5cb3c_Builder _10937_ident = static__1a6a5d489_New((*((*((*(_109231_hash))))._field_traitDecl))._field_Ident.len());;
	static__1bb26aec3_traitDecl(&(_10937_ident), (*((*(_109231_hash))))._field_traitDecl);
	_1aae499b4_write(_self_, jule::Str::lit("static ", 7));
	_1aae49c6c_writeBytes(_self_, _1a6a5ee4c_Buf(&_10937_ident));
	_1aae499b4_write(_self_, jule::Str::lit("MptrData ", 9));
	_1aae49c6c_writeBytes(_self_, _1a6a5ee4c_Buf(&_10937_ident));
	_1aae499b4_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1aae499b4_write(_self_, _1aa51a22d_Itoa(_109249_i));
	_1aae499b4_write(_self_, jule::Str::lit(" {\n", 3));
	_1aae49e6a_addIndent(_self_);
	_1aae4a366_indent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1aae499b4_write(_self_, _1aa51a22d_Itoa(_1aae4ad39_pushDealloc(_self_, jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109262_s)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)}))));
	_1aae499b4_write(_self_, jule::Str::lit(",\n", 2));
	_1aae5376a_traitDataMethods(_self_, _109231_hash, (*(_109262_s)));
	_1aae4a168_doneIndent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1aae53d86_traitDatas(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*_self_.alloc)._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c166d337:;
		if (it != expr_end) {
			jule::Ptr<_1aae47709_traitHash> _111415_hash = *it;
			{
				jule::I32 _11158_i = 0LL;;
				{
					auto expr = &((*((*(_111415_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c166e2d3:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _111616_s = *it;
						{
							{
								auto expr = &((*(_111616_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c166ee0a:;
								if (it != expr_end) {
									jule::Ptr<_1ac9d1e84_StructIns> _111717_ins = *it;
									{
										_1aae53b88_traitData(_self_, &(_111415_hash), _11158_i, &(_111717_ins));
										(_11158_i)++;
									}
									_iter_next_1c166ee0a:;
									++it;
									goto _iter_begin_1c166ee0a;
								}
								_iter_end_1c166ee0a:;
							};
						}
						_iter_next_1c166e2d3:;
						++it;
						goto _iter_begin_1c166e2d3;
					}
					_iter_end_1c166e2d3:;
				};
			}
			_iter_next_1c166d337:;
			++it;
			goto _iter_begin_1c166d337;
		}
		_iter_end_1c166d337:;
	};
}



inline void _1aae54084_globalDecls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c166ce5d:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _112615_v = *it;
			{
				_1aae5e49b_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112615_v))._field_TypeSym))._field_Type);
				_1aae499b4_write(_self_, jule::Str::lit(" ", 1));
				static__1bb26be5d_var(&((*_self_.alloc)._field_Buf), _112615_v);
				_1aae499b4_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c166ce5d:;
			++it;
			goto _iter_begin_1c166ce5d;
		}
		_iter_end_1c166ce5d:;
	};
}



inline void _1aae54282_decls(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae4d05b_structurePlainDecls(_self_);
	_1aae4e304_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1a6a5e930_Len(&(*_self_.alloc)._field_Buf);
	_1aae4e502_structureMethodDecls(_self_);
	_1aae50657_funcDecls(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	_1aae50b0d_traitDataTypes(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1a6a5e930_Len(&(*_self_.alloc)._field_Buf);
	_1aae53407_traitWrappers(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	_1aae53d86_traitDatas(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1a6a5e930_Len(&(*_self_.alloc)._field_Buf);
	_1aae54084_globalDecls(_self_);
}



inline void _1aae5453a_structureMethods(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115238_s) {
	{
		auto expr = &((*((*(_115238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16771cb:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _115315_f = *it;
			{
				_1aae526e2_func(_self_, &(_115315_f));
				_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c16771cb:;
			++it;
			goto _iter_begin_1c16771cb;
		}
		_iter_end_1c16771cb:;
	};
}



inline void _1aae547e3_structureIns(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9d1e84_StructIns>* _115934_s) {
	;
	_1aae4da95_structureOperators(_self_, _115934_s, false);
	_1aae5453a_structureMethods(_self_, _115934_s);
}



inline void _1aae54a9b_structure(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac9ce129_Struct>* _116531_s) {
	{
		auto expr = &((*((*(_116531_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16796a6:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _116615_ins = *it;
			{
				_1aae547e3_structureIns(_self_, &(_116615_ins));
				_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c16796a6:;
			++it;
			goto _iter_begin_1c16796a6;
		}
		_iter_end_1c16796a6:;
	};
}



inline void _1aae54c99_structures(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1679e04:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _117315_s = *it;
			{
				if (((*(_117315_s))._field_Token != nullptr)) {
					_1aae54a9b_structure(_self_, &(_117315_s));
					_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c1679e04:;
			++it;
			goto _iter_begin_1c1679e04;
		}
		_iter_end_1c1679e04:;
	};
}



inline void _1aae54e97_funcs(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1ad61aca9_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac98e150_Package>*>((void*)__jule_anon_1c167ca1c, jule::Ptr<__jule_anon_1c167ca1c_ctx>::make(__jule_anon_1c167ca1c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c167ca1c_ctx_handler));
}



inline void _1aae55250_pushInit(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1ac98e150_Package>* _120430_pkg) {
	_1ad61b02e_IterFiles(_120430_pkg, jule::__new_closure<void,jule::Ptr<_1acaa8654_SymTab>*>((void*)__jule_anon_1c167de4c, jule::Ptr<__jule_anon_1c167de4c_ctx>::make(__jule_anon_1c167de4c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c167de4c_ctx_handler));
}



inline void _1aae5544d_anonHashes(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_julec_label_1c16837d1:;
	jule::Slice<jule::Ptr<_1aae472db_anonHash>> _12217_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12217_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1683825:;
		if (it != expr_end) {
			jule::Ptr<_1aae472db_anonHash> _122315_h = *it;
			{
				_1aae520c6_anonFuncIns(_self_, &((*(_122315_h))._field_expr), (*_122315_h.alloc)._field_ident);
			}
			_iter_next_1c1683825:;
			++it;
			goto _iter_begin_1c1683825;
		}
		_iter_end_1c1683825:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1c16837d1;
	};
}



inline void _1aae5564b_initGlobals(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	{
		auto expr = &((*((*_self_.alloc)._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16868d3:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _123215_v = *it;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1233:4"));
				});
				static__1bb26be5d_var(&((*_self_.alloc)._field_Buf), _123215_v);
				_1aae499b4_write(_self_, jule::Str::lit(" = ", 3));
				_1bb262dbb_model((*_self_.alloc)._field_ec, (*((*((*(_123215_v))._field_Value))._field_Data))._field_Model);
				_1aae499b4_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c16868d3:;
			++it;
			goto _iter_begin_1c16868d3;
		}
		_iter_end_1c16868d3:;
	};
}



inline void _1aae55849_initCaller(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae499b4_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1aae49e6a_addIndent(_self_);
	_1ad61aca9_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1ac98e150_Package>*>((void*)__jule_anon_1c168a387, jule::Ptr<__jule_anon_1c168a387_ctx>::make(__jule_anon_1c168a387_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c168a387_ctx_handler));
	_1aae4a168_doneIndent(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1aae55a47_end(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae499b4_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	_1aae5564b_initGlobals(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1a8e6157c_Test) {
		_1aae499b4_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1bb26a8eb_func(&((*_self_.alloc)._field_Buf), &((*(_1ad623a2b_ProgramMeta))._field_EntryPoint));
		_1aae499b4_write(_self_, jule::Str::lit("();", 3));
	};
	_1aae499b4_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1aae55d00_buildTraitHash(jule::Ptr<_1aae49299_ObjectCoder> _self_, jule::Ptr<_1acaaca65_Trait>* _127636_t) {
	jule::Ptr<_1aae47709_traitHash> _12777_hash = jule::new_ptr<_1aae47709_traitHash>(_1aae47709_traitHash{._field_traitDecl=(*(_127636_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(0LL, (*((*(_127636_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa2351_Fn>(nullptr); __jule_collection; })});;
	_1ad61b31a_IterTraitMethods(_127636_t, jule::__new_closure<void,jule::Ptr<_1acaa2351_Fn>*>((void*)__jule_anon_1c1690568, jule::Ptr<__jule_anon_1c1690568_ctx>::make(__jule_anon_1c1690568_ctx{._12777_hash=_12777_hash}).as<jule::Uintptr>(), __jule_anon_1c1690568_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aae47709_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12777_hash; __jule_collection; }));
}



inline void _1aae55eed_buildTraitHashes(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1ad61aca9_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1ac98e150_Package>*>((void*)__jule_anon_1c1692b42, jule::Ptr<__jule_anon_1c1692b42_ctx>::make(__jule_anon_1c1692b42_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c1692b42_ctx_handler));
}



inline void _1aae56361_insertBuf(jule::Ptr<_1aae49299_ObjectCoder> _self_, _1a6a5cb3c_Builder* _130631_buf, jule::I32 _130654_pos) {
	if ((_1a6a5e930_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_ibuf = _1a6a5ee4c_Buf(&(*(_self_))._field_Buf);;
		_13088_ibuf=_1c1696371_Insert(_13088_ibuf, _130654_pos, _1a6a5ee4c_Buf(_130631_buf));
		{
			_1a6a60205_SetBuf(&(*_self_.alloc)._field_Buf, _13088_ibuf);
		};
	};
}



inline void _1aae5655e_implementRC(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1aae52439_funcIns(_self_, (*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_1aae52439_funcIns(_self_, (*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_1aae52439_funcIns(_self_, (*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1aae52439_funcIns(_self_, (*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_1aae52439_funcIns(_self_, (*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_1aae52439_funcIns(_self_, (*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _1aae5675c_serializeHead(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae55eed_buildTraitHashes(_self_);
	_1aae4caa5_prepareStructures(_self_);
	_1aae4c346_head(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
	_1aae54282_decls(_self_);
	_1aae56361_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_resultDecls);
	_1aae499b4_write(_self_, jule::Str::lit("\n", 1));
	_1aae54c99_structures(_self_);
	_1aae54e97_funcs(_self_);
	_1aae55849_initCaller(_self_);
	_1aae499b4_write(_self_, jule::Str::lit("\n\n", 2));
	_1aae5544d_anonHashes(_self_);
	_1aae5655e_implementRC(_self_);
	_1aae56361_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_deallocObj);
	_1aae56361_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_anyObj);
	_1aae56361_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_anonObj);
	_1aae56361_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a6a5e930_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1aae5695a_Serialize(jule::Ptr<_1aae49299_ObjectCoder> _self_) {
	_1aae5675c_serializeHead(_self_);
	_1aae55a47_end(_self_);
}








inline jule::Bool _1aae58660_customType_eq(_1aae58660_customType *_self_, _1aae58660_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1aae58a5b_Str(_1aae58660_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1aae58d9c_Equal(jule::Ptr<_1aae58660_customType> _self_, jule::Ptr<_1acbc0d98_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1aae59298_typeCoder_eq(_1aae59298_typeCoder *_self_, _1aae59298_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1aae59298_typeCoder> static__1aae597e8_new(jule::Ptr<_1aae49299_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1aae59298_typeCoder> _517_tc = jule::new_ptr<_1aae59298_typeCoder>(_1aae59298_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1aae61d83_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1aae6238e_new(&(_517_tc));
	return _517_tc;;
}



inline void _1aae59b5b_toType(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1ac9231b1_RealKindOf(_5754_id);
	};
	({
		auto except = _1a6a5db1b_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1a6a5ddc4_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1a6a5ddc4_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1a6a5db1b_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1aae59ebe_prim(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _7125_buf, jule::Ptr<_1acbc8eb1_Prim> _7148_p) {
	_1aae59b5b_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1aae5a332_tuple(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _7626_buf, jule::Ptr<_1acbce0a4_Tuple> _7653_t) {
	({
		auto except = _1a6a5db1b_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*_7653_t.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16bb808:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> _7815_tk = *it;
			{
				_1aae5e49b_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1a6a5ddc4_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1c16bb808:;
			++it;
			_788_i++;
			goto _iter_begin_1c16bb808;
		}
		_iter_end_1c16bb808:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1aae5a695_asSptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1a6a5db1b_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1a6a5d7ca_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1aae5aa08_sptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _9525_buf, jule::Ptr<_1acbcc9dc_Sptr> _9552_sptr) {
	({
		auto except = _1a6a5db1b_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1aae5e49b_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1a6a5ddc4_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1aae5ad6b_ptr(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _10224_buf, jule::Ptr<_1acbd12a4_Ptr> _10251_p) {
	;
	if (_1acbd1d21_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1a6a5db1b_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1aae5e49b_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1a6a5db1b_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1aae5b1ce_enumDecl(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _11329_buf, jule::Ptr<_1acab021b_Enum> _11356_e) {
	_1aae5e49b_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1aae5b542_typeEnumDecl(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _11833_buf, jule::Ptr<_1acab1926_TypeEnum> _11860_e) {
	({
		auto except = _1a6a5db1b_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1aae5b8a5_asSlice(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _12228_buf, jule::Ptr<_1acbc0d98_Type> _12255_elem) {
	({
		auto except = _1a6a5db1b_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1aae5e49b_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1a6a5ddc4_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1aae5bc18_slice(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _12926_buf, jule::Ptr<_1acbcd4b0_Slc> _12953_s) {
	_1aae5b8a5_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1aae5c07b_mapType(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _13428_buf, jule::Ptr<_1acbceb54_Map> _13455_m) {
	jule::Ptr<_1ac9d1e84_StructIns> _1357_ins = _1ad62261d_FindStructGenericInstance(&((*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1a6a5db1b_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__1bb26b886_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _1a6a5db1b_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _1aae5c752_structureIns(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _14733_buf, jule::Ptr<_1ac9d1e84_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		static__1bb26b886_structureIns(_14733_buf, &(_14760_s));
		return;;
	};
	jule::Ptr<_1abc419b9_Directive> _1523_d = _1ad620660_FindDirective(&((*(*(_14760_s))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1523_d != nullptr)) {
		({
			auto except = _1a6a5d7ca_Write(_14733_buf, _1aae56ce0_concatAllParts((*_1523_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:154:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
	};
	static__1bb26b886_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1a6a5ddc4_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c16c94c5:;
			if (it != expr_end) {
				jule::I32 _1609_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> _16016_g = *it;
				{
					_1aae5e49b_kind(_self_, _14733_buf, (*(_16016_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1609_i) > 1LL)) {
						({
							auto except = _1a6a5ddc4_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:6"));
						});
					};
				}
				_iter_next_1c16c94c5:;
				++it;
				_1609_i++;
				goto _iter_begin_1c16c94c5;
			}
			_iter_end_1c16c94c5:;
		};
		({
			auto except = _1a6a5ddc4_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:166:4"));
		});
	};
}



inline void _1aae5cab5_array(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _17126_buf, jule::Ptr<_1acbd07d1_Arr> _17153_a) {
	({
		auto except = _1a6a5db1b_WriteStr(_17126_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:172:3"));
		(except.result);
	});
	_1aae5e49b_kind(_self_, _17126_buf, (*(_17153_a))._field_Elem);
	({
		auto except = _1a6a5ddc4_WriteByte(_17126_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:174:3"));
	});
	({
		auto except = _1a6a5db1b_WriteStr(_17126_buf, _1aa51a22d_Itoa((*_17153_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_17126_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
	});
}



inline void _1aae5d28b_paramIns(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _19429_buf, jule::Ptr<_1acaa42a9_ParamIns>* _19457_p) {
	if ((*((*((*(_19457_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1a6a5db1b_WriteStr(_19429_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:196:4"));
			(except.result);
		});
		_1aae5e49b_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
		({
			auto except = _1a6a5ddc4_WriteByte(_19429_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:198:4"));
		});
	} else {
		_1aae5e49b_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
	};
	if ((*((*((*(_19457_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1a6a5ddc4_WriteByte(_19429_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:203:4"));
		});
	};
}



inline void _1aae5d962_funcInsResult(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _22634_s, jule::Ptr<_1acaa540e_FnIns>* _22660_f) {
	if (_1acaa2807_IsVoid((*((*(_22660_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1a6a5db1b_WriteStr(_22634_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:229:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a6a5db1b_WriteStr(_22634_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:231:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
		({
			auto except = _1a6a5db1b_WriteStr(_22634_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:236:4"));
			(except.result);
		});
		_1aae6444b_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
		({
			auto except = _1a6a5ddc4_WriteByte(_22634_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:238:4"));
		});
		return;;
	};
	_1aae6444b_codeMut1((*(_self_))._field_rc, _22634_s, &((*((*(_22660_f))))._field_Result));
}



inline void _1aae5dcc5_anonFunc(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _24429_buf, jule::Ptr<_1acaa540e_FnIns> _24456_f) {
	if ((((*(_24456_f))._field_Result != nullptr) && (_1acbc5375_Tup((*(_24456_f))._field_Result) != nullptr))) {
		_1aae4b774_pushResultIns((*(_self_))._field_oc, &(_24456_f));
	};
	_1aae5d962_funcInsResult(_self_, _24429_buf, &(_24456_f));
	if (((*_24456_f.alloc)._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_24429_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:252:3"));
	});
	{
		auto expr = &((*_24456_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16daea9:;
		if (it != expr_end) {
			jule::I32 _2538_i = it - expr->begin();
			jule::Ptr<_1acaa42a9_ParamIns> _25315_param = *it;
			{
				if (_1acaa0ecb_IsSelf((*(_25315_param))._field_Decl.ptr())) {
					goto _iter_next_1c16daea9;
				};
				_1aae5d28b_paramIns(_self_, _24429_buf, &(_25315_param));
				if ((((*_24456_f.alloc)._field_Params.len() - _2538_i) > 1LL)) {
					({
						auto except = _1a6a5ddc4_WriteByte(_24429_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:259:5"));
					});
				};
			}
			_iter_next_1c16daea9:;
			++it;
			_2538_i++;
			goto _iter_begin_1c16daea9;
		}
		_iter_end_1c16daea9:;
	};
}



inline void _1aae5e138_func(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _26525_buf, jule::Ptr<_1acaa540e_FnIns> _26552_f) {
	({
		auto except = _1a6a5db1b_WriteStr(_26525_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:266:3"));
		(except.result);
	});
	_1aae5dcc5_anonFunc(_self_, _26525_buf, _26552_f);
	({
		auto except = _1a6a5ddc4_WriteByte(_26525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:268:3"));
	});
}



inline void _1aae5e49b_kind(_1aae59298_typeCoder* _self_, _1a6a5cb3c_Builder* _27225_buf, jule::Ptr<_1acbc0d98_Type> _27252_k) {
	{
		
		if ((_1acbc4ac2_Struct(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de4eb:;
			{
				_1aae5c752_structureIns(_self_, _27225_buf, _1acbc4ac2_Struct(_27252_k));
				return;;
			}
		}
		else if (_1acbc1c45_Binded(_27252_k.ptr())) {
			_case_begin_1c16de595:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_27225_buf, (*_27252_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:281:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1acbc354e_Prim(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de60b:;
			{
				_1aae59ebe_prim(_self_, _27225_buf, _1acbc354e_Prim(_27252_k));
				return;;
			}
		}
		else if ((_1acbc5375_Tup(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de672:;
			{
				_1aae5a332_tuple(_self_, _27225_buf, _1acbc5375_Tup(_27252_k));
				return;;
			}
		}
		else if ((_1acbc37d5_Sptr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de6d8:;
			{
				_1aae5aa08_sptr(_self_, _27225_buf, _1acbc37d5_Sptr(_27252_k));
				return;;
			}
		}
		else if ((_1acbc3a6b_Ptr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de760:;
			{
				_1aae5ad6b_ptr(_self_, _27225_buf, _1acbc3a6b_Ptr(_27252_k));
				return;;
			}
		}
		else if ((_1acbc3d02_Enum(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de7d7:;
			{
				_1aae5b1ce_enumDecl(_self_, _27225_buf, _1acbc3d02_Enum(_27252_k));
				return;;
			}
		}
		else if ((_1acbc4088_TypeEnum(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de85e:;
			{
				_1aae5b542_typeEnumDecl(_self_, _27225_buf, _1acbc4088_TypeEnum(_27252_k));
				return;;
			}
		}
		else if ((_1acbc45a5_Slc(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de8d6:;
			{
				_1aae5bc18_slice(_self_, _27225_buf, _1acbc45a5_Slc(_27252_k));
				return;;
			}
		}
		else if ((_1acbc50de_Map(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de95d:;
			{
				_1aae5c07b_mapType(_self_, _27225_buf, _1acbc50de_Map(_27252_k));
				return;;
			}
		}
		else if ((_1acbc4d58_Trait(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16de9d5:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_27225_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:308:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1acbc431e_Arr(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16dea5c:;
			{
				_1aae5cab5_array(_self_, _27225_buf, _1acbc431e_Arr(_27252_k));
				return;;
			}
		}
		else if ((_1acbc483b_Fn(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c16dead4:;
			{
				_1aae5e138_func(_self_, _27225_buf, _1acbc483b_Fn(_27252_k));
				return;;
			}
		}
		_match_end_1c16de30e:;
	};
	{
		auto &_match_expr{ (*(_27252_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data29)) {
			_case_begin_1c16deb6c:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_27225_buf, (*((*(_27252_k))._field_Kind.cast_ptr<_1aae58660_customType>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:319:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c16e822a:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_27225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:321:4"));
					(except.result);
				});
			}
		}
		_match_end_1c16e81b4:;
	};
}








inline jule::Bool _1aae61d83_resultCoder_eq(_1aae61d83_resultCoder *_self_, _1aae61d83_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1aae61d83_resultCoder> static__1aae6238e_new(jule::Ptr<_1aae59298_typeCoder>* _34021_tc) {
	return jule::new_ptr<_1aae61d83_resultCoder>(_1aae61d83_resultCoder{._field_tc=(*(_34021_tc))});;
}



inline void _1aae62702_ptr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _34424_s, jule::Ptr<_1acbd12a4_Ptr> _34449_p) {
	({
		auto except = _1a6a5db1b_WriteStr(_34424_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:345:3"));
		(except.result);
	});
	_1aae640d8_codeMut(_self_, _34424_s, &((*(_34449_p))._field_Elem));
}



inline void _1aae62a65_sptr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _34925_s, jule::Ptr<_1acbcc9dc_Sptr> _34950_p) {
	({
		auto except = _1a6a5db1b_WriteStr(_34925_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:350:3"));
		(except.result);
	});
	_1aae640d8_codeMut(_self_, _34925_s, &((*(_34950_p))._field_Elem));
}



inline void _1aae62dc8_mapType(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _35428_s, jule::Ptr<_1acbceb54_Map> _35453_p) {
	({
		auto except = _1a6a5db1b_WriteStr(_35428_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:355:3"));
		(except.result);
	});
	_1aae640d8_codeMut(_self_, _35428_s, &((*(_35453_p))._field_Key));
	_1aae640d8_codeMut(_self_, _35428_s, &((*_35453_p.alloc)._field_Val));
}



inline void _1aae6323b_slice(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _36026_s, jule::Ptr<_1acbcd4b0_Slc> _36051_slc) {
	({
		auto except = _1a6a5db1b_WriteStr(_36026_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:361:3"));
		(except.result);
	});
	_1aae640d8_codeMut(_self_, _36026_s, &((*(_36051_slc))._field_Elem));
}



inline void _1aae6359e_arr(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _36524_s, jule::Ptr<_1acbd07d1_Arr> _36549_arr) {
	({
		auto except = _1a6a5db1b_WriteStr(_36524_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:366:3"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_36524_s, _1aa519e64_FmtInt(static_cast<jule::I64>((*(_36549_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	_1aae640d8_codeMut(_self_, _36524_s, &((*_36549_arr.alloc)._field_Elem));
}



inline void _1aae63912_func(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _37125_s, jule::Ptr<_1acaa540e_FnIns> _37150_f) {
	({
		auto except = _1a6a5db1b_WriteStr(_37125_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:372:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37150_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c17008c5:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _37315_p = *it;
			{
				if ((*((*(_37315_p))._field_Decl))._field_Reference) {
					({
						auto except = _1a6a5db1b_WriteStr(_37125_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:375:5"));
						(except.result);
					});
				};
				_1aae640d8_codeMut(_self_, _37125_s, &((*_37315_p.alloc)._field_Type));
			}
			_iter_next_1c17008c5:;
			++it;
			goto _iter_begin_1c17008c5;
		}
		_iter_end_1c17008c5:;
	};
	if (((*_37150_f.alloc)._field_Result != nullptr)) {
		_1aae640d8_codeMut(_self_, _37125_s, &((*_37150_f.alloc)._field_Result));
	};
}



inline void _1aae63c75_tup(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _38424_s, jule::Ptr<_1acbce0a4_Tuple> _38449_tup) {
	{
		auto expr = &((*(_38449_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1702d4a:;
		if (it != expr_end) {
			jule::Ptr<_1acbc0d98_Type> _38515_t = *it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_38424_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:386:4"));
					(except.result);
				});
				_1aae640d8_codeMut(_self_, _38424_s, &(_38515_t));
			}
			_iter_next_1c1702d4a:;
			++it;
			goto _iter_begin_1c1702d4a;
		}
		_iter_end_1c1702d4a:;
	};
}



inline void _1aae640d8_codeMut(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _39128_s, jule::Ptr<_1acbc0d98_Type>* _39154_t) {
	if (_1acbc1c45_Binded((*(_39154_t)).ptr())) {
		({
			auto except = _1a6a5db1b_WriteStr(_39128_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:393:4"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_39128_s, (*((*(_39154_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:394:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39154_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28)) {
			_case_begin_1c17044de:;
			{
				_1aae62702_ptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbd12a4_Ptr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)) {
			_case_begin_1c17054bd:;
			{
				_1aae62a65_sptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbcc9dc_Sptr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26)) {
			_case_begin_1c1705149:;
			{
				_1aae62dc8_mapType(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbceb54_Map>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)) {
			_case_begin_1c17051b0:;
			{
				_1aae6323b_slice(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbcd4b0_Slc>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27)) {
			_case_begin_1c1705226:;
			{
				_1aae6359e_arr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbd07d1_Arr>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)) {
			_case_begin_1c170528c:;
			{
				_1aae63912_func(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acaa540e_FnIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3)) {
			_case_begin_1c1705710:;
			{
				jule::Ptr<_1acab021b_Enum> _4114_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1acab021b_Enum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3);;
				static__1bb26a1ae_toOut(_39128_s, (*(_4114_te))._field_Ident, static_cast<jule::Uintptr>(_4114_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4)) {
			_case_begin_1c1705776:;
			{
				jule::Ptr<_1acab1926_TypeEnum> _4144_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1acab1926_TypeEnum>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data4);;
				static__1bb26a1ae_toOut(_39128_s, (*(_4144_te))._field_Ident, static_cast<jule::Uintptr>(_4144_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)) {
			_case_begin_1c17057dc:;
			{
				jule::Ptr<_1ac9d1e84_StructIns> _4178_si = (*((*(_39154_t))))._field_Kind.cast_ptr<_1ac9d1e84_StructIns>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0);;
				static__1bb26b886_structureIns(_39128_s, &(_4178_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data2)) {
			_case_begin_1c1705853:;
			{
				jule::Ptr<_1acaaca65_Trait> _4208_trt = (*((*(_39154_t))))._field_Kind.cast_ptr<_1acaaca65_Trait>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data2);;
				static__1bb26aec3_traitDecl(_39128_s, _4208_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)) {
			_case_begin_1c17058ca:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_39128_s, (*((*((*(_39154_t))))._field_Kind.cast_ptr<_1acbc8eb1_Prim>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:423:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25)) {
			_case_begin_1c1705952:;
			{
				_1aae63c75_tup(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1acbce0a4_Tuple>((jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1c17050d3:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:427:4"));;
			}
		}
		_match_end_1c170506c:;
	};
}



inline void _1aae6444b_codeMut1(_1aae61d83_resultCoder* _self_, _1a6a5cb3c_Builder* _43129_s, jule::Ptr<_1acbc0d98_Type>* _43155_t) {
	jule::Ptr<_1acbce0a4_Tuple> _4327_tup = _1acbc5375_Tup((*(_43155_t)).ptr());;
	if ((_4327_tup != nullptr)) {
		_1aae63c75_tup(_self_, _43129_s, _4327_tup);
	} else {
		_1aae5e49b_kind((*(_self_))._field_tc.ptr(), _43129_s, (*(_43155_t)));
	};
}



inline jule::Slice<jule::U8> _1aae64759_code(_1aae61d83_resultCoder* _self_, jule::Ptr<_1acbc0d98_Type>* _44025_t) {
	_1a6a5cb3c_Builder _4417_s = static__1a6a5d489_New(20LL);;
	_1aae640d8_codeMut(_self_, &(_4417_s), _44025_t);
	return _1a6a5ee4c_Buf(&_4417_s);;
}








inline jule::Bool _1c17117a4_Flag_eq(_1c17117a4_Flag *_self_, _1c17117a4_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c1711a90_Name(_1c17117a4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c1711bd3_What(_1c17117a4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c1711d26_Reset(_1c17117a4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c1711e69_Short(_1c17117a4_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c1715137_Flag_eq(_1c1715137_Flag *_self_, _1c1715137_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c1714cb3_Name(_1c1715137_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c1715423_What(_1c1715137_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c1715566_Reset(_1c1715137_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c17156a9_Short(_1c1715137_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c1718844_Flag_eq(_1c1718844_Flag *_self_, _1c1718844_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c17184c0_Name(_1c1718844_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c1718b30_What(_1c1718844_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c1718c73_Reset(_1c1718844_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c1718db6_Short(_1c1718844_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c171c095_Flag_eq(_1c171c095_Flag *_self_, _1c171c095_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c171bc21_Name(_1c171c095_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c171c381_What(_1c171c095_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c171c4c4_Reset(_1c171c095_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c171c617_Short(_1c171c095_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c17207a2_Flag_eq(_1c17207a2_Flag *_self_, _1c17207a2_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c172042d_Name(_1c17207a2_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c1720a8d_What(_1c17207a2_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c1720bd1_Reset(_1c17207a2_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c1720d24_Short(_1c17207a2_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1aaec703b_FlagSet> static__1aaec735a_New(void) {
	return jule::new_ptr<_1aaec703b_FlagSet>(_1aaec703b_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1aaec7811_FindFlag(_1aaec703b_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c172a7ac:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1aaec5468_CommonFlagMptrData*)_7215_flag.safe_type())->_1aae93832_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1c172a7ac:;
			++it;
			goto _iter_begin_1c172a7ac;
		}
		_iter_end_1c172a7ac:;
	};
	return nullptr;;
}



inline jule::Trait _1aaec7b52_FindFlagShort(_1aaec703b_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c172ad51:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1aaec5468_CommonFlagMptrData*)_8215_flag.safe_type())->_1aae93975_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1c172ad51:;
			++it;
			goto _iter_begin_1c172ad51;
		}
		_iter_end_1c172ad51:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1aaec8229_Parse(_1aaec703b_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1aaec9a00_argParser _1167_ap = _1aaec9a00_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1aaecb02e_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1c17207a2_Flag> _1c0411d9b_addFlagCommon(_1aaec703b_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1aaec7811_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1aaec7b52_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c17207a2_Flag> _1407_flag = jule::new_ptr<_1c17207a2_Flag>(_1c17207a2_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1c171c095_Flag> _1c041ae71_addFlagCommon(_1aaec703b_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1aaec7811_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1aaec7b52_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c171c095_Flag> _1407_flag = jule::new_ptr<_1c171c095_Flag>(_1c171c095_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1c040e66d_AddVar(_1aaec703b_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c17207a2_Flag> _1717_flag = _1c0411d9b_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1c0418787_AddVar(_1aaec703b_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c171c095_Flag> _1717_flag = _1c041ae71_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1c135cbe7_parseInteger(_1aaec9a00_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c13606ab:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c1360997:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c1360359:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c13603c0:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c1360436:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c13602e3:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c13601d3:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c13657c1_parseInteger(_1aaec9a00_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c1368450:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c136873b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c13680ed:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1a8e45ee0_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c1368164:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c13681ca:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c1368087:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c1367e77:;
	};
	return __jule_func_result;;
}



inline jule::Str _1aaeca34c_getData(_1aaec9a00_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1aaeca5c2_processFlag(_1aaec9a00_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data3)) {
			_case_begin_1c1359dd1:;
			{
				jule::Ptr<_1c171c095_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1c171c095_Flag>((jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c1359d6a:;
	};
	jule::Str _2203_data = _1aaeca34c_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aaec5468_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aae93832_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression missing", 20)), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data0)) {
			_case_begin_1c135bca1:;
			{
				jule::Ptr<_1c17117a4_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1c17117a4_Flag>((jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c135cbe7_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c1361734, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aaec5468_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aae93832_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid signed integer", 41)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data1)) {
			_case_begin_1c135b70c:;
			{
				jule::Ptr<_1c1715137_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1c1715137_Flag>((jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c13657c1_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c13694c8, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aaec5468_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aae93832_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid unsigned integer", 43)), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data2)) {
			_case_begin_1c135bd17:;
			{
				jule::Ptr<_1c1718844_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1c1718844_Flag>((jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1aa5102de_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(((jule::Str::lit("--", 2) + ((_1aaec5468_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1aae93832_Name((*(_21232_flag)).data)) + jule::Str::lit(": expression must be valid floating-point", 41)), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data4)) {
			_case_begin_1c135bd7d:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1c17207a2_Flag>((jule::Trait::Type*)&_1aaec5468_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1c135b542:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aaeca87a_singleDash(_1aaec9a00_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1c137004a:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1aaec7b52_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any((((*(_25227_arg)) + jule::Str::lit(": flag is not exist: ", 21)) + __jule_strFromRune(_25710_r)), &__jule_any_type5)};
				};
				({
					auto except = _1aaeca5c2_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c137004a:;
			it += len;
			goto _iter_begin_1c137004a;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aaecab33_doubleDash(_1aaec9a00_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1aaec7811_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1aaeca5c2_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aaecad31_tryArg(_1aaec9a00_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1aaecab33_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1aaeca87a_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1aaecb02e_parse(_1aaec9a00_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1aaecad31_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c1374a77:;
	}
	_iter_end_1c1374a77:;;
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1a6b8a3eb_Cmd> static__1a6b8a84c_New(jule::Str _3516_path) {
	return jule::new_ptr<_1a6b8a3eb_Cmd>(_1a6b8a3eb_Cmd{._field_attrs=_1a6b2a91e_cmdAttrs{}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1a6b8aa4a_Spawn(_1a6b8a3eb_Cmd* _self_) {
	return _1a6b2acc6_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a6b8aece_Wait(_1a6b8a3eb_Cmd* _self_) {
	return _1a6b2b25a_wait(_self_);
}



inline jule::VoidExceptional _1a6b2acc6_spawn(_1a6b8a3eb_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess != nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_windows.jule:43:4"));;
	};
	STARTUPINFOW _457_startupInfo = (STARTUPINFOW){};;
	PROCESS_INFORMATION _467_processInfo = (PROCESS_INFORMATION){};;
	{
		ZeroMemory((&(_457_startupInfo)), sizeof(_457_startupInfo));
		ZeroMemory((&(_467_processInfo)), sizeof(_467_processInfo));
	};
	_457_startupInfo.cb=sizeof(_457_startupInfo);
	jule::Slice<jule::Str> _527_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	_527_args[0LL]=(*(_self_))._field_path;
	(_527_args).append((*(_self_))._field_Args);;
	jule::Slice<jule::U16> _553_argv = _1bb6eeec3_UTF16FromStr(_1a6b2b898_makeCmdLine(_527_args));;
	jule::Slice<jule::U16> _563_env = ({
		auto except = _1a6b2bc72_createEnvBlock((*(_self_))._field_Env);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Slice<jule::U16>(nullptr);});
	});;
	jule::U16* _577_envp = (&(_563_env[0LL]));;
	if (((*(_self_))._field_Env.len() == 0LL)) {
		_577_envp=nullptr;
	};
	;
	{
		if ((CreateProcessW(nullptr, ((wchar_t*)((&(_553_argv[0LL])))), nullptr, nullptr, 0LL, 1024LLU, _577_envp, nullptr, (&(_457_startupInfo)), (&(_467_processInfo))) == 0LL)) {
			return jule::VoidExceptional{.error=jule::Any(_1a6b2c1c3_getLastCmdError(), &__jule_any_type138)};
		};
	};
	(*(_self_))._field_attrs._field_hProcess=_467_processInfo.hProcess;
	(*(_self_))._field_attrs._field_hThread=_467_processInfo.hThread;
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a6b2b25a_wait(_1a6b8a3eb_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_hProcess == nullptr)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_windows.jule:86:4"));;
	};
	{
		WaitForSingleObject((*(_self_))._field_attrs._field_hProcess, INFINITE);
	};
	__jule_unsigned_long _897_exitCode = static_cast<__jule_unsigned_long>(4294967295LLU);;
	{
		GetExitCodeProcess((*(_self_))._field_attrs._field_hProcess, (&(_897_exitCode)));
		_1bb728040_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hProcess)));
		_1bb728040_CloseHandle(((jule::Uintptr)((*(_self_))._field_attrs._field_hThread)));
	};
	(*(_self_))._field_attrs._field_hProcess=nullptr;
	(*(_self_))._field_attrs._field_hThread=nullptr;
	return jule::Exceptional<jule::I32>{.result=static_cast<jule::I32>(_897_exitCode)};;
}












inline jule::Bool _1a6b89818_Dir_eq(_1a6b89818_Dir *_self_, _1a6b89818_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1a6b32eba_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1a6b89818_Dir>> static__1a8e5374a_Read(jule::Str _1117_path) {
	jule::Slice<_1a6b89818_Dir> __jule_func_result;
	jule::Slice<jule::U16> _123_utf16Path = _1bb6eeec3_UTF16FromStr(_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = jule::Str::lit("*", 1); __jule_collection; })));;
	WIN32_FIND_DATAW _137_data = (WIN32_FIND_DATAW){};;
	jule::Uintptr _143_handle = _1bb72b9c2_FindFirstFile((&(_123_utf16Path[0LL])), (&(_137_data)));;
	if ((_143_handle == 4294967295LLU)) {
		return jule::Exceptional<jule::Slice<_1a6b89818_Dir>>{.result=__jule_func_result};;
	};
	for (;;) {
		{
			_1a6b89818_Dir _198_entry = _1a6b89818_Dir{._field_Name=_1bb70059a_U16PtrToStr(((jule::U16*)(_137_data.cFileName))), ._field_Stat=_1a6b32eba_Stat{._field_mode=0LL, ._field_size=0}};;
			_198_entry._field_Stat=({
				auto except = static__1a8e596eb_Of(_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _198_entry._field_Name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1a6b89818_Dir>>{.error=except.error};
				} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
			});
			{ jule::Slice<_1a6b89818_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_198_entry); };
			if ((_1bb72bd46_FindNextFile(_143_handle, (&(_137_data))) == 0LL)) {
				goto _iter_end_1bd56c02a;
			};
		}
	_iter_next_1bd56c02a:;
	}
	_iter_end_1bd56c02a:;;
	_1bb72c110_FindClose(_143_handle);
	return jule::Exceptional<jule::Slice<_1a6b89818_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1a8e53948_Create(jule::Str _3319_path) {
	jule::Slice<jule::U16> _383_utf16Path = _1bb6eeec3_UTF16FromStr(_3319_path);;
	if ((!(_1bb7296c3_CreateDirectory((&(_383_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1a6b2c734_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1a8e53b79_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U16> _463_utf16Path = _1bb6eeec3_UTF16FromStr(_4519_path);;
	if ((!(_1bb72998c_RemoveDirectory((&(_463_utf16Path[0LL])))))) {
		return jule::VoidExceptional{.error=jule::Any(_1a6b2c734_getLastFsErrorWindows(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline __jule_tuple_x_1ad618328_IR__jule_tuple_s_1a6a6bde3_Log static__1ad618801_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_1ad618328_IR__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	jule::Ptr<_1ad615798_Importer> _317_importer = static__1ad615bc7_New(_1ad61a2a3_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1abc40644_AST>> _337_files;
	jule::Slice<_1a6a6bde3_Log> _3318_logs;
	({
		__jule_tuple_sx_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad6171b2_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1abc40644_AST> _457_firstFile = _337_files[0LL];;
	_1ad61a55b_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1ac98e150_Package> _487_pkg;
	({
		__jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1acbe2b78_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1ac9888ca_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ad618328_IR> _537_ir = jule::new_ptr<_1ad618328_IR>(_1ad618328_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1ac98b8cd_ImportInfo>(nullptr), ._field_Used=_1ad615e5d_AllPackages(_317_importer), ._field_Ordered=_1ad627304_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1ad61a094_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ad618cda_appendStructs(_1ad618328_IR* _self_, jule::Ptr<_1ac98e150_Package>* _6830_p, jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0859744:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c085a239:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1ac9ce129_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1c085a239:;
						++it;
						goto _iter_begin_1c085a239;
					}
					_iter_end_1c085a239:;
				};
			}
			_iter_next_1c0859744:;
			++it;
			goto _iter_begin_1c0859744;
		}
		_iter_end_1c0859744:;
	};
}



inline jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _1ad619071_GetAllStructures(_1ad618328_IR* _self_) {
	jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _8111_buffer = nullptr;;
	_1ad618cda_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c085b38e:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1ad618cda_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1c085b38e:;
			++it;
			goto _iter_begin_1c085b38e;
		}
		_iter_end_1c085b38e:;
	};
	return _8111_buffer;;
}



inline void _1ad6193d4_appendGlobals(_1ad618328_IR* _self_, jule::Ptr<_1ac98e150_Package>* _9130_p, jule::Slice<jule::Ptr<_1acb3d420_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c085c9de:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c085d4d4:;
					if (it != expr_end) {
						jule::Ptr<_1acb3d420_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1c085d4d4:;
						++it;
						goto _iter_begin_1c085d4d4;
					}
					_iter_end_1c085d4d4:;
				};
			}
			_iter_next_1c085c9de:;
			++it;
			goto _iter_begin_1c085c9de;
		}
		_iter_end_1c085c9de:;
	};
}



inline jule::Slice<jule::Ptr<_1acb3d420_Var>> _1ad61966a_GetAllGlobals(_1ad618328_IR* _self_) {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _10411_buffer = nullptr;;
	_1ad6193d4_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c085ed65:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1ad6193d4_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1c085ed65:;
			++it;
			goto _iter_begin_1c085ed65;
		}
		_iter_end_1c085ed65:;
	};
	return _10411_buffer;;
}



inline void _1ad619868_Order(_1ad618328_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1ad61966a_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1ad619071_GetAllStructures(_self_);
	_1c086196b_order((*(_self_))._field_Ordered._field_Globals);
	_1c086254e_order((*(_self_))._field_Ordered._field_Structs);
}







inline jule::I32 _1bb6ee027_DecodeRune(jule::I32 _6815_r1, jule::I32 _6825_r2) {
	if (((((55296LL <= _6815_r1) && (_6815_r1 < 56320LL)) && (56320LL <= _6825_r2)) && (_6825_r2 < 57344LL))) {
		return ((((_6815_r1 - 55296LL) << 10LL) | (_6825_r2 - 56320LL)) + 65536LL);;
	};
	return 65533LL;;
}



inline __jule_tuple_i32__jule_tuple_i32 _1bb6ee2e1_EncodeRune(jule::I32 _7819_r) {
	__jule_tuple_i32__jule_tuple_i32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((_7819_r < 65536LL) || (_7819_r > 1114111LL))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 65533LL;
		return __jule_func_result;;
	};
	_7819_r-=65536LL;
	__jule_func_result.__jule_result_arg0 = (55296LL + ((_7819_r >> 10LL) & 1023LL));
	__jule_func_result.__jule_result_arg1 = (56320LL + (_7819_r & 1023LL));
	return __jule_func_result;;
}



inline jule::Slice<jule::U16> _1bb6ee632_Encode(jule::Slice<jule::I32> _8711_s) {
	jule::I32 _886_n = _8711_s.len();;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb09c3a:;
		if (it != expr_end) {
			jule::I32 *_899_v = it;
			{
				if (((*(_899_v)) >= 65536LL)) {
					(_886_n)++;
				};
			}
			_iter_next_1bbb09c3a:;
			++it;
			goto _iter_begin_1bbb09c3a;
		}
		_iter_end_1bbb09c3a:;
	};
	jule::Slice<jule::U16> _956_a = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_886_n, _886_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_886_n=0LL;
	{
		auto expr = &(_8711_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb08d27:;
		if (it != expr_end) {
			jule::I32 *_979_v = it;
			{
				{
					
					if (((0LL <= (*(_979_v))) && ((*(_979_v)) < 55296LL)) || ((57344LL <= (*(_979_v))) && ((*(_979_v)) < 65536LL))) {
						_case_begin_1bbb0c6ee:;
						{
							_956_a[_886_n]=static_cast<jule::U16>((*(_979_v)));
							(_886_n)++;
						}
					}
					else if (((65536LL <= (*(_979_v))) && ((*(_979_v)) <= 1114111LL))) {
						_case_begin_1bbb0c3be:;
						{
							jule::I32 _1054_r1;
							jule::I32 _1058_r2;
							({
								__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1bb6ee2e1_EncodeRune((*(_979_v)));
								_1054_r1 = __jule_assign_result.__jule_result_arg0;
								_1058_r2 = __jule_assign_result.__jule_result_arg1;
							});
							_956_a[_886_n]=static_cast<jule::U16>(_1054_r1);
							_956_a[(_886_n + 1LL)]=static_cast<jule::U16>(_1058_r2);
							_886_n+=2LL;
						}
					}
					else {
						_case_begin_1bbb0c358:;
						{
							_956_a[_886_n]=static_cast<jule::U16>(65533LLU);
							(_886_n)++;
						}
					}
					_match_end_1bbb0c248:;
				};
			}
			_iter_next_1bbb08d27:;
			++it;
			goto _iter_begin_1bbb08d27;
		}
		_iter_end_1bbb08d27:;
	};
	return _956_a.slice(0LL, _886_n);;
}



inline jule::Slice<jule::I32> _1bb6ee8b8_Decode(jule::Slice<jule::U16> _11911_s) {
	jule::Slice<jule::I32> _1206_a = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(_11911_s.len(), _11911_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1216_n = 0LL;;
	jule::I32 _1226_i = 0LL;;
	for (; (_1226_i < _11911_s.len()); (_1226_i)++) {
		{
			jule::U16 _1243_r = _11911_s[_1226_i];;
			{
				
				if ((_1243_r < 55296LLU) || (57344LL <= _1243_r)) {
					_case_begin_1bbb11e51:;
					{
						_1206_a[_1216_n]=static_cast<jule::I32>(_1243_r);
					}
				}
				else if (((((_1243_r < 56320LLU) && ((_1226_i + 1LL) < _11911_s.len())) && (56320LL <= _11911_s[(_1226_i + 1LL)])) && (_11911_s[(_1226_i + 1LL)] < 57344LLU))) {
					_case_begin_1bbb11c20:;
					{
						_1206_a[_1216_n]=_1bb6ee027_DecodeRune(static_cast<jule::I32>(_1243_r), static_cast<jule::I32>(_11911_s[(_1226_i + 1LL)]));
						(_1226_i)++;
					}
				}
				else {
					_case_begin_1bbb11857:;
					{
						_1206_a[_1216_n]=65533LL;
					}
				}
				_match_end_1bbb117e1:;
			};
			(_1216_n)++;
		}
	_iter_next_1bbb0e14b:;
	}
	_iter_end_1bbb0e14b:;;
	return _1206_a.slice(0LL, _1216_n);;
}



inline jule::Slice<jule::U16> _1bb6eec3c_AppendRune(jule::Slice<jule::U16> _14919_a, jule::I32 _14929_r) {
	{
		
		if (((0LL <= _14929_r) && (_14929_r < 55296LL)) || ((57344LL <= _14929_r) && (_14929_r < 65536LL))) {
			_case_begin_1bbb1478e:;
			{
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_14929_r); __jule_collection; }));;
			}
		}
		else if (((65536LL <= _14929_r) && (_14929_r <= 1114111LL))) {
			_case_begin_1bbb14838:;
			{
				jule::I32 _1563_r1;
				jule::I32 _1567_r2;
				({
					__jule_tuple_i32__jule_tuple_i32 __jule_assign_result = _1bb6ee2e1_EncodeRune(_14929_r);
					_1563_r1 = __jule_assign_result.__jule_result_arg0;
					_1567_r2 = __jule_assign_result.__jule_result_arg1;
				});
				return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U16>(_1563_r1); (*it++) = static_cast<jule::U16>(_1567_r2); __jule_collection; }));;
			}
		}
		_match_end_1bbb14690:;
	};
	return jule::append(_14919_a,({ auto __jule_collection = jule::Slice<jule::U16>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 65533LLU; __jule_collection; }));;
}



inline jule::Slice<jule::U16> _1bb6eeec3_UTF16FromStr(jule::Str _1017_s) {
	;
	jule::Slice<jule::I32> _162_runes = __jule_strToRunes(_1017_s);;
	jule::Slice<jule::U16> _176_buff = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _162_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_162_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb1e832:;
		if (it != expr_end) {
			jule::I32 *_189_r = it;
			{
				if (((*(_189_r)) == 0LL)) {
					goto _iter_end_1bbb1e832;
				};
				_176_buff=_1bb6eec3c_AppendRune(_176_buff, (*(_189_r)));
			}
			_iter_next_1bbb1e832:;
			++it;
			goto _iter_begin_1bbb1e832;
		}
		_iter_end_1bbb1e832:;
	};
	return _1bb6eec3c_AppendRune(_176_buff, 0LL);;
}



inline jule::Str _1bb7002d1_UTF16ToStr(jule::Slice<jule::U16> _3015_s) {
	if ((_3015_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _346_codePage = _3015_s;;
	{
		auto expr = &(_3015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbb2201b:;
		if (it != expr_end) {
			jule::I32 _356_i = it - expr->begin();
			jule::U16 *_359_v = it;
			{
				if (((*(_359_v)) == 0LLU)) {
					(_346_codePage).mut_slice(0LL, _356_i);;
					goto _iter_end_1bbb2201b;
				};
			}
			_iter_next_1bbb2201b:;
			++it;
			_356_i++;
			goto _iter_begin_1bbb2201b;
		}
		_iter_end_1bbb2201b:;
	};
	return __jule_runesToStr(_1bb6ee8b8_Decode(_346_codePage));;
}



inline jule::Str _1bb70059a_U16PtrToStr(jule::U16* _4623_s) {
	if ((_4623_s == nullptr)) {
		return jule::Str();;
	};
	jule::Slice<jule::U16> _5110_codePage;;
	jule::I32 _526_i = 0LL;;
	for (; ; (_526_i)++) {
		{
			jule::U16 _543_r = _4623_s[_526_i];;
			if ((_543_r == 0LLU)) {
				return __jule_runesToStr(_1bb6ee8b8_Decode(_5110_codePage));;
			};
			{ jule::Slice<jule::U16> &__jule_push_dest = _5110_codePage; __jule_push_dest.push(_543_r); };
		}
	_iter_next_1bbb23182:;
	}
	_iter_end_1bbb23182:;;
	return jule::Str();;
}



inline jule::I32 _1bb3e9a14_GetLastErrno(void) {
	return errno;;
}



inline jule::Uintptr _1bb727c76_GetStdHandle(jule::Uintptr _6517_stdh) {
	return ((jule::Uintptr)(GetStdHandle(_6517_stdh)));;
}



inline jule::Bool _1bb728040_CloseHandle(jule::Uintptr _6623_stdh) {
	return CloseHandle(((void*)(_6623_stdh)));;
}



inline jule::I32 _1bb7283b4_Wstat(jule::U16* _6917_path, struct _stat* _6933_stat) {
	return _wstat(((wchar_t*)(_6917_path)), _6933_stat);;
}



inline jule::I32 _1bb7287e3_Wopen(jule::U16* _7417_path, jule::I32 _7429_flag, jule::I32 _7440_mode) {
	return _wopen(((wchar_t*)((&(_7417_path[0LL])))), _7429_flag, _7440_mode);;
}



inline jule::U32 _1bb728a02_GetLastError(void) {
	return GetLastError();;
}



inline jule::U32 _1bb728d76_GetCurrentDirectory(jule::U32 _8331_bufflen, jule::U16* _8349_buff) {
	return GetCurrentDirectoryW(_8331_bufflen, ((wchar_t*)(_8349_buff)));;
}



inline jule::Bool _1bb729409_DeleteFile(jule::U16* _9422_path) {
	return DeleteFileW(((wchar_t*)(_9422_path)));;
}



inline jule::Bool _1bb7296c3_CreateDirectory(jule::U16* _9927_path) {
	return CreateDirectoryW(((wchar_t*)(_9927_path)), nullptr);;
}



inline jule::Bool _1bb72998c_RemoveDirectory(jule::U16* _10427_path) {
	return RemoveDirectoryW(((wchar_t*)(_10427_path)));;
}



inline jule::U32 _1bb729e76_GetFullPathName(jule::U16* _10927_path, jule::U32 _10939_bufflen, jule::U16* _1102_buff, jule::U16** _11014_fname) {
	return GetFullPathNameW(((wchar_t*)(_10927_path)), _10939_bufflen, ((wchar_t*)(_1102_buff)), ((wchar_t**)(_11014_fname)));;
}



inline jule::Bool _1bb72a2ea_GetConsoleMode(jule::Uintptr _11519_handle, jule::I32* _11540_mode) {
	return GetConsoleMode(((HANDLE)(_11519_handle)), ((DWORD*)(_11540_mode)));;
}



inline jule::Bool _1bb72a905_SetConsoleMode(jule::Uintptr _12019_handle, jule::I32 _12035_mode) {
	return SetConsoleMode(((HANDLE)(_12019_handle)), static_cast<DWORD>(_12035_mode));;
}



inline jule::Bool _1bb72ae55_WriteConsole(jule::Uintptr _12524_handle, jule::U16* _12540_buffer, jule::U32 _12554_toWrite, jule::U32* _1267_written, void* _12621_reserved) {
	return WriteConsoleW(((HANDLE)(_12524_handle)), ((void*)(_12540_buffer)), static_cast<DWORD>(_12554_toWrite), ((DWORD*)((*(_1267_written)))), _12621_reserved);;
}



inline jule::Bool _1bb72b43e_ReadConsole(jule::Uintptr _13323_handle, jule::U16* _13343_buffer, jule::U32 _13357_toRead, jule::U32* _1347_readed) {
	return ReadConsoleW(((HANDLE)(_13323_handle)), ((void*)(_13343_buffer)), static_cast<DWORD>(_13357_toRead), ((DWORD*)(_1347_readed)), nullptr);;
}



inline jule::Uintptr _1bb72b9c2_FindFirstFile(jule::U16* _14525_path, WIN32_FIND_DATAW* _14541_data) {
	return ((jule::Uintptr)(FindFirstFileW(((wchar_t*)(_14525_path)), _14541_data)));;
}



inline jule::I32 _1bb72bd46_FindNextFile(jule::Uintptr _15024_h, WIN32_FIND_DATAW* _15039_data) {
	return FindNextFileW(((HANDLE)(_15024_h)), _15039_data);;
}



inline jule::I32 _1bb72c110_FindClose(jule::Uintptr _15514_h) {
	return FindClose(((HANDLE)(_15514_h)));;
}



inline jule::I32 _1bb73c2c9_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1bb73c6a3_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1bb73ca5a_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1bb73cc8b_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Str _1bb74d64d_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1bbb8e033_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1bb76481d_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1bbb8e033_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1bb764aa4_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1bb74d64d_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1bb764d6d_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1bb48bac8_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1bb48a841_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1bb48ade6_acceptRange _1962_accept = _1bb48b28c_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1bb48be19_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1bb48a841_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1bb48ade6_acceptRange _2432_accept = _1bb48b28c_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1bb48c469_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1bb48db85_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1bbbcb944;
			};
		}
	_iter_next_1bbbcb944:;
	}
	_iter_end_1bbbcb944:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::I32 _1bb48c733_RuneLen(jule::I32 _35212_r) {
	{
		
		if ((_35212_r < 0LL)) {
			_case_begin_1bbbceb45:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 127LL)) {
			_case_begin_1bbbd0041:;
			{
				return 1LL;;
			}
		}
		else if ((_35212_r <= 2047LL)) {
			_case_begin_1bbbd00a7:;
			{
				return 2LL;;
			}
		}
		else if (((55296LL <= _35212_r) && (_35212_r <= 57343LL))) {
			_case_begin_1bbbd012e:;
			{
				return -1LL;;
			}
		}
		else if ((_35212_r <= 65535LL)) {
			_case_begin_1bbbd01a6:;
			{
				return 3LL;;
			}
		}
		else if ((_35212_r <= 1114111LL)) {
			_case_begin_1bbbcebab:;
			{
				return 4LL;;
			}
		}
		else {
			_case_begin_1bbbceace:;
			{
				return -1LL;;
			}
		}
		_match_end_1bbbce9e1:;
	};
}



inline jule::I32 _1bb48cbb7_EncodeRune(jule::Slice<jule::U8> _37419_p, jule::I32 _37434_r) {
	jule::U32 _3762_i = static_cast<jule::U32>(_37434_r);;
	{
		
		if ((_3762_i <= 127LLU)) {
			_case_begin_1bbbd481a:;
			{
				_37419_p[0LL]=static_cast<jule::U8>(_37434_r);
				return 1LL;;
			}
		}
		else if ((_3762_i <= 2047LLU)) {
			_case_begin_1bbbd4ed0:;
			{
				_37419_p[0LL]=(192LLU | static_cast<jule::U8>((_37434_r >> 6LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 2LL;;
			}
		}
		else if ((_3762_i > 1114111LLU) || ((55296LL <= _3762_i) && (_3762_i <= 57343LLU))) {
			_case_begin_1bbbd2b6a:;
			{
				_37434_r=65533LL;
				goto _case_begin_1bbbd4d9d;
			}
		}
		else if ((_3762_i <= 65535LLU)) {
			_case_begin_1bbbd4d9d:;
			{
				_37419_p[0LL]=(224LLU | static_cast<jule::U8>((_37434_r >> 12LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 3LL;;
			}
		}
		else {
			_case_begin_1bbbd27a2:;
			{
				_37419_p[0LL]=(240LLU | static_cast<jule::U8>((_37434_r >> 18LL)));
				_37419_p[1LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 12LL)) & 63LLU));
				_37419_p[2LL]=(128LLU | (static_cast<jule::U8>((_37434_r >> 6LL)) & 63LLU));
				_37419_p[3LL]=(128LLU | (static_cast<jule::U8>(_37434_r) & 63LLU));
				return 4LL;;
			}
		}
		_match_end_1bbbd272a:;
	};
}



inline jule::Slice<jule::U8> _1bb48ceb4_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1bb48d338_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1bb48d338_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1bbbdc0d6:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1bbbdac94:;
			{
				_41242_r=128LL;
				goto _case_begin_1bbbdad0a;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1bbbdad0a:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1bbbda535:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1bbbda4ad:;
	};
}



inline jule::I32 _1bb48d8bb_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1bbbe53ec;
			};
			jule::U8 _4823_x = _1bb48a841_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1bbbe53ec;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1bbbe53ec;
			};
			_1bb48ade6_acceptRange _4923_accept = _1bb48b28c_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1bbbe53ec:;
	}
	_iter_end_1bbbe53ec:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bb48db85_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1a690a941_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1a69132c8_Len64(_5919_x));;
}



inline jule::I32 _1a690b887_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1a690c26c_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1a690c26c_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1a690b03a__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1a690c536_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1a690b623__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1a691300e_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1a69132c8_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a6914065_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a691586e_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1bb4a7000__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1d663696c_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1d6846088_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1bbe2630e_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bbe28069:;
	}
	_iter_end_1bbe28069:;;
	return true;;
}

inline jule::Bool _1bbe748bd_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bbe760b7:;
	}
	_iter_end_1bbe760b7:;;
	return true;;
}

inline jule::Bool _1bd626777_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bd627e2c:;
	}
	_iter_end_1bd627e2c:;;
	return true;;
}

inline jule::Bool _1c0d59260_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c0d5ae76:;
	}
	_iter_end_1c0d5ae76:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1bb76481d_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1bbb8e033_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1bb76481d_StrBytes(jule::Str::lit("\n", 1)));
	_1bb73cc8b_Exit(2LL);
}



inline void _1bb48e8cd__handleRW(jule::Slice<jule::U8>* _1115_b) {
}



inline jule::I32 _1bb48ec96_writeConsole(jule::Uintptr _1524_handle, jule::Slice<jule::U8> _1545_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_1545_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _192_utf16Buf = _1bb6eeec3_UTF16FromStr(_1bb764aa4_BytesStr(_1545_buf));;
	jule::U32 _206_written = static_cast<jule::U32>(0LLU);;
	jule::Bool _212_ok = _1bb72ae55_WriteConsole(_1524_handle, (&(_192_utf16Buf[0LL])), static_cast<jule::U32>(_192_utf16Buf.len()), &(_206_written), nullptr);;
	if ((!(_212_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	__jule_func_result = _1545_buf.len();
	return __jule_func_result;;
}



inline jule::I32 _1bb49011a_readConsole(jule::Uintptr _3023_handle, jule::Slice<jule::U8> _3048_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3048_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::U16> _346_codepage = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(_3048_buf.len(), _3048_buf.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _356_readed = static_cast<jule::U32>(0LLU);;
	jule::Bool _362_ok = _1bb72b43e_ReadConsole(_3023_handle, (&(_346_codepage[0LL])), static_cast<jule::U32>(_346_codepage.len()), &(_356_readed));;
	if ((!(_362_ok))) {
		__jule_func_result = -1LL;
		return __jule_func_result;;
	};
	jule::Slice<jule::I32> _412_runes = _1bb6ee8b8_Decode(_346_codepage.slice(0LL, static_cast<jule::I32>(_356_readed)));;
	__jule_func_result=0LL;
	{
		auto expr = &(_412_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcc7116:;
		if (it != expr_end) {
			jule::I32 *_439_r = it;
			{
				jule::I32 _443_size = _1bb48c733_RuneLen((*(_439_r)));;
				if (((__jule_func_result + _443_size) > _3048_buf.len())) {
					goto _iter_end_1bbcc7116;
				};
				_1bb48cbb7_EncodeRune(_3048_buf.slice(__jule_func_result), (*(_439_r)));
				__jule_func_result+=_443_size;
			}
			_iter_next_1bbcc7116:;
			++it;
			goto _iter_begin_1bbcc7116;
		}
		_iter_end_1bbcc7116:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _5816_buf) {
	_1bb4a6054_handleRW(&(_5816_buf));
	return _1bb48ec96_writeConsole(_1bb727715_STDOUT, _5816_buf);;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _6616_buf) {
	_1bb4a6054_handleRW(&(_6616_buf));
	return _1bb48ec96_writeConsole(_1bb727a12_STDERR, _6616_buf);;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _7418_buf) {
	_1bb4a6054_handleRW(&(_7418_buf));
	return _1bb49011a_readConsole(_1bb72746d_STDIN, _7418_buf);;
}



inline jule::U32 _1bbcd6367_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _1bbcd6532_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Slice<jule::Str> _1bb49686e_args(void) {
	wchar_t* _166_cmdl = GetCommandLineW();;
	wchar_t** _176_argvw = CommandLineToArgvW(_166_cmdl, ((signed*)((&(__jule_argc)))));;
	jule::Slice<jule::Str> _186_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_186_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbcca735:;
		if (it != expr_end) {
			jule::I32 _196_i = it - expr->begin();
			{
				_186_args[_196_i]=_1bb70059a_U16PtrToStr(((jule::U16*)(_176_argvw[_196_i])));
			}
			_iter_next_1bbcca735:;
			++it;
			_196_i++;
			goto _iter_begin_1bbcca735;
		}
		_iter_end_1bbcca735:;
	};
	{
		LocalFree(_176_argvw);
	};
	return _186_args;;
}



inline jule::Str _1bb496d25_executable(void) {
	;
	jule::Slice<jule::U16> _486_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(260LL, 260LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _492_n = GetModuleFileNameW(nullptr, ((wchar_t*)((&(_486_buf[0LL])))), 260LL);;
	if ((_492_n > 0LL)) {
		_486_buf[_492_n]=0LLU;
		return _1bb70059a_U16PtrToStr((&(_486_buf[0LL])));;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_windows.jule:54:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _1bbcd6367_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_1bbcd6532_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_1bbcd6532_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1bbcdca77:;
	}
	_iter_end_1bbcdca77:;;
	jule::I32 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1bbcdd2b4:;
	}
	_iter_end_1bbcdd2b4:;;
	return _1bb764d6d_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _522_n = _1bb4a24a1_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1bb764d6d_StrFromBytes(_516_buf);;
}



inline jule::I32 _1bb4a24a1_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1bbce3297:;
	}
	_iter_end_1bbce3297:;;
	jule::I32 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1bb4a364a_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1d663696c_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I32 _852_exp = (static_cast<jule::I32>((_832_bits >> 52LLU)) & static_cast<jule::I32>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1bbce8c81:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1bbce8a50:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1bbce6597:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1bbce8555:;
		};
	};
	;
	jule::I32 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1bb4a24a1_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I32 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I32 _1203_digit = static_cast<jule::I32>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1baea5a21:;
	}
	_iter_end_1baea5a21:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1baea6cb9;
			};
		}
	_iter_next_1baea6cb9:;
	}
	_iter_end_1baea6cb9:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1bb764d6d_StrFromBytes(_1046_buf);;
}



inline jule::Str _1c1396ba9_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1398370:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1bbde5069_toStr((*(_1459_z))));;
			}
			_iter_next_1c1398370:;
			++it;
			_1456_i++;
			goto _iter_begin_1c1398370;
		}
		_iter_end_1c1398370:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1bb764d6d_StrFromBytes(_1436_buf);;
}



inline jule::Str _1c138b9b2_structToStr(_1a6a5cb3c_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1c138ea81:;
				{
					;
					{
						
{
							_case_begin_1c1390c19:;
							{
								;
								;
							}
						}
						_match_end_1c13908ea:;
					};
				}
			}
			_match_end_1c138e124:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1c1392aea:;
				{
					(_1966_buf).append(_1c13933d1_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1c1392a51:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1bb764d6d_StrFromBytes(_1966_buf);;
}



inline jule::Str _1bbdce262_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1bbdd0494:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbdd03a6:;
	};
	{
		
{
			_case_begin_1bbdd09b1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1bbdd084b:;
	};
}

inline jule::Str _1bbdd1440_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdd26d8:;
			{
				return _21613_x;;
			}
		}
		_match_end_1bbdd2672:;
	};
}

inline jule::Str _1bbdd1b8d_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdd5213:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1bbdd5125:;
	};
}

inline jule::Str _1bbdd6940_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdd7b94:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1bbdd7aa6:;
	};
}

inline jule::Str _1bbdd4674_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdda625:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1bbdda537:;
	};
}

inline jule::Str _1bbddbd52_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbddd13e:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1bbddd051:;
	};
}

inline jule::Str _1bbdde838_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbde0b58:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1bbde0a6a:;
	};
}

inline jule::Str _1bbde2385_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbde3661:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbde34eb:;
	};
}

inline jule::Str _1bbdded99_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbde5aa3:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbde593d:;
	};
}

inline jule::Str _1bbde5069_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbde7ee5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbde7d80:;
	};
}

inline jule::Str _1bbde74ab_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdea437:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbdea2c2:;
	};
}

inline jule::Str _1bbde98ed_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdec879:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbdec714:;
	};
}

inline jule::Str _1bbdebd40_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbdeee0e:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1bbdeec99:;
	};
}

inline jule::Str _1bbe0021c_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbe0241c:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1bbe02230:;
	};
}

inline jule::Str _1bbe00591_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbe04496:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1bbe042dc:;
	};
}

inline jule::Str _1bbddc22b_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1bbe06344:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1bbe060be:;
	};
}

inline jule::Str _1bd570281_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd571caa:;
			{
				return _1bbdd1b8d_toStr(_21613_x);;
			}
		}
		_match_end_1bd5716b1:;
	};
}

inline jule::Str _1bd57b3be_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd57cde8:;
			{
				return _1bbdd1b8d_toStr(_21613_x);;
			}
		}
		_match_end_1bd57c7ee:;
	};
}

inline jule::Str _1bd5b36d1_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd5b520a:;
			{
				return _1bbdd1b8d_toStr(_21613_x);;
			}
		}
		_match_end_1bd5b4b11:;
	};
}

inline jule::Str _1bd6b5be0_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bd6b76d6:;
			{
				return _1bbdd1b8d_toStr(_21613_x);;
			}
		}
		_match_end_1bd6b70dc:;
	};
}

inline jule::Str _1be30394d_toStr(jule::Ptr<_1acb3d420_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1be304b3b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be304a4d:;
	};
	;
	{
		
{
			_case_begin_1be3055dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3052ac:;
	};
}

inline jule::Str _1be305ee4_toStr(jule::Ptr<_1acbc00a6_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1be3084ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3083c0:;
	};
	;
	{
		
{
			_case_begin_1be308e5e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be308b2e:;
	};
}

inline jule::Str _1be309987_toStr(jule::Ptr<_1ac9ce129_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1be30bd96:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be30bca8:;
	};
	;
	{
		
{
			_case_begin_1be30c847:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be30c517:;
	};
}

inline jule::Str _1be30d24e_toStr(jule::Ptr<_1acaa2351_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1be310718:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be31062a:;
	};
	;
	{
		
{
			_case_begin_1be3111b9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be310d89:;
	};
}

inline jule::Str _1be311d13_toStr(jule::Ptr<_1acaaca65_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1be3142cc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3141de:;
	};
	;
	{
		
{
			_case_begin_1be314c7d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be31494d:;
	};
}

inline jule::Str _1be3153cc_toStr(jule::Ptr<_1acab021b_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1be317885:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be317797:;
	};
	;
	{
		
{
			_case_begin_1be318336:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be318006:;
	};
}

inline jule::Str _1be318985_toStr(jule::Ptr<_1acab1926_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1be31ad61:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be31ac84:;
	};
	;
	{
		
{
			_case_begin_1be31b812:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be31b4e3:;
	};
}

inline jule::Str _1be336eae_toStr(jule::Ptr<_1ac9cb203_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1be33819c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3380ae:;
	};
	;
	{
		
{
			_case_begin_1be338b4d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be33881d:;
	};
}

inline jule::Str _1be34de0a_toStr(jule::Ptr<_1aca3208e_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1be3500e8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be35000a:;
	};
	;
	{
		
{
			_case_begin_1be350a99:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be350769:;
	};
}

inline jule::Str _1be368111_toStr(jule::Ptr<_1acaae6b0_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1be3692dd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be369200:;
	};
	;
	{
		
{
			_case_begin_1be369c8e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be36995e:;
	};
}

inline jule::Str _1be37970a_toStr(jule::Ptr<_1acaa087c_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1be37b311:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be37b223:;
	};
	;
	{
		
{
			_case_begin_1be37bcb2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be37b982:;
	};
}

inline jule::Str _1bdb1568e_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1bdb171b8:;
			{
				return _1bbdd1440_toStr(_21613_x);;
			}
		}
		_match_end_1bdb16abe:;
	};
}

inline jule::Str _1be4ab166_toStr(jule::Ptr<_1abc42ba7_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be4ac321:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4ac233:;
	};
	;
	{
		
{
			_case_begin_1be4accc2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4ac992:;
	};
}

inline jule::Str _1be4c3447_toStr(jule::Ptr<_1aca9a723_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be4c43c1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4c42d3:;
	};
	;
	{
		
{
			_case_begin_1be4c4d72:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4c4a42:;
	};
}

inline jule::Str _1be4c5856_toStr(jule::Ptr<_1ac9b363b_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be4c823d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4c8150:;
	};
	;
	{
		
{
			_case_begin_1be4c8bde:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4c88ae:;
	};
}

inline jule::Str _1be4d5745_toStr(jule::Ptr<_1ac9bc1b1_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be4d6845:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4d6757:;
	};
	;
	{
		
{
			_case_begin_1be4d72e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4d6eb6:;
	};
}

inline jule::Str _1be4d87e2_toStr(jule::Ptr<_1ac9b2a47_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1be4d99ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4d83c4:;
	};
	;
	{
		
{
			_case_begin_1be4da926:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4da12e:;
	};
}

inline jule::Str _1be4d7db8_toStr(jule::Ptr<_1ac95e0dc_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1be4dcd9b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4dccbe:;
	};
	;
	{
		
{
			_case_begin_1be4dd84c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4dd52d:;
	};
}

inline jule::Str _1be4dd709_toStr(jule::Ptr<_1ac95e593_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1be4de694:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4de5a6:;
	};
	;
	{
		
{
			_case_begin_1be4e1421:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4e10d0:;
	};
}

inline jule::Str _1be4daccd_toStr(jule::Ptr<_1ac95ea49_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1be4e2268:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4e217a:;
	};
	;
	{
		
{
			_case_begin_1be4e3ee5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4e3ba4:;
	};
}

inline jule::Str _1be4e3de6_toStr(jule::Ptr<_1acb8cded_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1be4e4eb3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4e4dc5:;
	};
	;
	{
		
{
			_case_begin_1be4e6ca6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4e6910:;
	};
}

inline jule::Str _1be4e7548_toStr(jule::Ptr<_1aca97115_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be4e99bd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be4e98d0:;
	};
	;
	{
		
{
			_case_begin_1be4ea46e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be4ea13e:;
	};
}

inline jule::Str _1be52916d_toStr(jule::Ptr<_1ac95d5a3_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1be52a328:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be52a23a:;
	};
	;
	{
		
{
			_case_begin_1be52acc9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be52a999:;
	};
}

inline jule::Str _1be547a0a_toStr(jule::Ptr<_1ac95aa56_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1be548be8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be548b0a:;
	};
	;
	{
		
{
			_case_begin_1be549699:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be549369:;
	};
}

inline jule::Str _1be552075_toStr(jule::Ptr<_1aca9d1c6_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be55320d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be553120:;
	};
	;
	{
		
{
			_case_begin_1be553bae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be55387e:;
	};
}

inline jule::Str _1be5566d9_toStr(jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be557762:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be557674:;
	};
	;
	{
		
{
			_case_begin_1be558213:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be557dd3:;
	};
}

inline jule::Str _1be556de3_toStr(jule::Ptr<_1aca9be50_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be5592d0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5591e2:;
	};
	;
	{
		
{
			_case_begin_1bdb44aec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb430b2:;
	};
}

inline jule::Str _1bdb45a21_toStr(jule::Ptr<_1aca9aa20_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb46b65:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb4513b:;
	};
	;
	{
		
{
			_case_begin_1bdb47acd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb472d6:;
	};
}

inline jule::Str _1bdb45669_toStr(jule::Ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb4801d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb47e30:;
	};
	;
	{
		
{
			_case_begin_1bdb4a6a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb4810b:;
	};
}

inline jule::Str _1bdb48b67_toStr(jule::Ptr<_1aca9b5c0_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb4b032:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb4ae44:;
	};
	;
	{
		
{
			_case_begin_1bdb4d276:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb4b120:;
	};
}

inline jule::Str _1bdb4b483_toStr(jule::Ptr<_1aca9ccec_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb4db06:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb4da18:;
	};
	;
	{
		
{
			_case_begin_1bdb50d4a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb4dbe4:;
	};
}

inline jule::Str _1bdb4cb6b_toStr(jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb516ca:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb515dc:;
	};
	;
	{
		
{
			_case_begin_1bdb5391e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb517b8:;
	};
}

inline jule::Str _1bdb50740_toStr(jule::Ptr<_1aca9e4d5_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdb542b0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb541c2:;
	};
	;
	{
		
{
			_case_begin_1bdb560a3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdb55c0c:;
	};
}

inline jule::Str _1be614016_toStr(jule::Ptr<_1ac95b68e_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1be615204:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be615116:;
	};
	;
	{
		
{
			_case_begin_1be615ba5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be615875:;
	};
}

inline jule::Str _1be61e8e5_toStr(jule::Ptr<_1ac95b98b_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1be620ad3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6209e5:;
	};
	;
	{
		
{
			_case_begin_1be621584:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be621254:;
	};
}

inline jule::Str _1be625753_toStr(jule::Ptr<_1ac95be42_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1be626941:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be626853:;
	};
	;
	{
		
{
			_case_begin_1be6273e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be6270b2:;
	};
}

inline jule::Str _1be64cabb_toStr(jule::Ptr<_1ac95c88d_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1be64dca9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be64dbbb:;
	};
	;
	{
		
{
			_case_begin_1be64e75a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be64e42a:;
	};
}

inline jule::Str _1be65c6d0_toStr(jule::Ptr<_1ac9c2ace_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1be65d879:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be65d78b:;
	};
	;
	{
		
{
			_case_begin_1be65e32a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be65deea:;
	};
}

inline jule::Str _1be66034d_toStr(jule::Ptr<_1ac9c34d6_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1be6626d5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6625e7:;
	};
	;
	{
		
{
			_case_begin_1be663186:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be662d56:;
	};
}

inline jule::Str _1be67bbb6_toStr(jule::Ptr<_1ac95cc23_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be67cda4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be67ccb6:;
	};
	;
	{
		
{
			_case_begin_1be67d855:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be67d525:;
	};
}

inline jule::Str _1be685a8d_toStr(jule::Ptr<_1ac95dc13_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be686c7b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be686b8d:;
	};
	;
	{
		
{
			_case_begin_1be68772c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be6873ec:;
	};
}

inline jule::Str _1be6bd06a_toStr(jule::Ptr<_1ac9b4362_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be6be214:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6be126:;
	};
	;
	{
		
{
			_case_begin_1be6bebb5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be6be885:;
	};
}

inline jule::Str _1be6d30d5_toStr(jule::Ptr<_1aca97995_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be6d42b2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be6d41c4:;
	};
	;
	{
		
{
			_case_begin_1be6d4c63:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be6d4933:;
	};
}

inline jule::Str _1be383bed_toStr(jule::Ptr<_1ac960286_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1be384ddb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be384ced:;
	};
	;
	{
		
{
			_case_begin_1be38588c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be38555c:;
	};
}

inline jule::Str _1be397cab_toStr(jule::Ptr<_1ac9614a7_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3997a2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3996b4:;
	};
	;
	{
		
{
			_case_begin_1be39a253:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be399e23:;
	};
}

inline jule::Str _1be3b3d93_toStr(jule::Ptr<_1ac95d0ec_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3b5081:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3b4e93:;
	};
	;
	{
		
{
			_case_begin_1be3b5a32:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3b5702:;
	};
}

inline jule::Str _1be3ba51a_toStr(jule::Ptr<_1ac96184d_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3bb708:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3bb61a:;
	};
	;
	{
		
{
			_case_begin_1be3bc1a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3bbd79:;
	};
}

inline jule::Str _1be3c505d_toStr(jule::Ptr<_1ac9bd811_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1be3c6218:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3c612a:;
	};
	;
	{
		
{
			_case_begin_1be3c6bb9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3c6889:;
	};
}

inline jule::Str _1be3c5316_toStr(jule::Ptr<_1ac9c165a_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be3c93d6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3c92e8:;
	};
	;
	{
		
{
			_case_begin_1be3c9d87:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3c9a57:;
	};
}

inline jule::Str _1be3c7318_toStr(jule::Ptr<_1ac9c530c_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be3cc5a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3cc4b6:;
	};
	;
	{
		
{
			_case_begin_1be3cd055:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3ccc25:;
	};
}

inline jule::Str _1be3cdc9d_toStr(jule::Ptr<_1ac9c4ac0_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1be3d1168:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3d107a:;
	};
	;
	{
		
{
			_case_begin_1be3d1b19:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3d17d9:;
	};
}

inline jule::Str _1be3cde8a_toStr(jule::Ptr<_1ac9c22a4_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1be3d4336:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3d4248:;
	};
	;
	{
		
{
			_case_begin_1be3d4cd7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3d49a7:;
	};
}

inline jule::Str _1be3d2268_toStr(jule::Ptr<_1ac9c3c89_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3d7504:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3d7416:;
	};
	;
	{
		
{
			_case_begin_1be3d7ea5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3d7b75:;
	};
}

inline jule::Str _1be3d60b3_toStr(jule::Ptr<_1ac9bace7_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3d9182:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3d9094:;
	};
	;
	{
		
{
			_case_begin_1be3dae0e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3daace:;
	};
}

inline jule::Str _1be3d8604_toStr(jule::Ptr<_1ac9bb1c1_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3dd62b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3dd53d:;
	};
	;
	{
		
{
			_case_begin_1be3de0cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3ddc9c:;
	};
}

inline jule::Str _1be3debe3_toStr(jule::Ptr<_1ac9c60cc_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1be3e209c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3e1eae:;
	};
	;
	{
		
{
			_case_begin_1be3e2a4d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3e271d:;
	};
}

inline jule::Str _1be3e319c_toStr(jule::Ptr<_1ac9bb4bd_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3e526a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3e517c:;
	};
	;
	{
		
{
			_case_begin_1be3e5c1b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3e58db:;
	};
}

inline jule::Str _1be3e6eb4_toStr(jule::Ptr<_1ac9c38b0_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3e8438:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3e834a:;
	};
	;
	{
		
{
			_case_begin_1be3e8dd9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3e8aa9:;
	};
}

inline jule::Str _1be3ea182_toStr(jule::Ptr<_1ac9c1a34_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be3eb606:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3eb518:;
	};
	;
	{
		
{
			_case_begin_1be3ec0a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3ebc77:;
	};
}

inline jule::Str _1be3ed350_toStr(jule::Ptr<_1ac9b341b_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be3ee7c4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be3ee6d6:;
	};
	;
	{
		
{
			_case_begin_1be400275:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be3eee45:;
	};
}

inline jule::Str _1be73b490_toStr(jule::Ptr<_1ac9ca1be_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1be73c64a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be73c55c:;
	};
	;
	{
		
{
			_case_begin_1be73d0eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be73ccbb:;
	};
}

inline jule::Str _1be741077_toStr(jule::Ptr<_1ac9c9322_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be7420de:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be742001:;
	};
	;
	{
		
{
			_case_begin_1be742a90:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be742760:;
	};
}

inline jule::Str _1be74408b_toStr(jule::Ptr<_1ac9c04a0_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be745e7d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be745d90:;
	};
	;
	{
		
{
			_case_begin_1be74692e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be7465ee:;
	};
}

inline jule::Str _1be747754_toStr(jule::Ptr<_1ac9c9a5e_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be749a97:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be7499a9:;
	};
	;
	{
		
{
			_case_begin_1be74a548:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be74a218:;
	};
}

inline jule::Str _1be74d826_toStr(jule::Ptr<_1ac9c76c7_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be74e88d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be74e7a0:;
	};
	;
	{
		
{
			_case_begin_1be75033e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be75000e:;
	};
}

inline jule::Str _1be750e00_toStr(jule::Ptr<_1ac9c8662_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be753243:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be753155:;
	};
	;
	{
		
{
			_case_begin_1be753be4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be7538b4:;
	};
}

inline jule::Str _1be8d9907_toStr(jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be8dac5a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8dab6c:;
	};
	;
	{
		
{
			_case_begin_1be8db70b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be8db3cb:;
	};
}

inline jule::Str _1be8da188_toStr(jule::Ptr<_1aca9550e_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be8de863:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8de775:;
	};
	;
	{
		
{
			_case_begin_1be8e0314:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be8deed4:;
	};
}

inline jule::Str _1be91d188_toStr(jule::Ptr<_1acaa540e_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1be91e376:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be91e288:;
	};
	;
	{
		
{
			_case_begin_1be91ed27:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be91e9e7:;
	};
}

inline jule::Str _1be5921e7_toStr(jule::Ptr<_1abc450b6_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be5933a2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5932b4:;
	};
	;
	{
		
{
			_case_begin_1be593d53:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be593a23:;
	};
}

inline jule::Str _1be597a7c_toStr(jule::Ptr<_1abc43cc9_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be598c37:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be598b49:;
	};
	;
	{
		
{
			_case_begin_1be5996d8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be5993a8:;
	};
}

inline jule::Str _1be5aae69_toStr(jule::Ptr<_1abc44868_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be5ac135:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5ac047:;
	};
	;
	{
		
{
			_case_begin_1be5acad6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be5ac7a6:;
	};
}

inline jule::Str _1be5b24c0_toStr(jule::Ptr<_1abc439cc_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be5b368b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5b359d:;
	};
	;
	{
		
{
			_case_begin_1be5b413c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be5b3d0c:;
	};
}

inline jule::Str _1be5b8ae2_toStr(jule::Ptr<_1abc440c6_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be5b9cad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5b9bc0:;
	};
	;
	{
		
{
			_case_begin_1be5ba75e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be5ba42e:;
	};
}

inline jule::Str _1be5becb3_toStr(jule::Ptr<_1abc43647_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be5c0e7e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be5c0d91:;
	};
	;
	{
		
{
			_case_begin_1be5c1930:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be5c1600:;
	};
}

inline jule::Str _1beb9d1a4_toStr(jule::Ptr<_1ac9b4ecd_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1beb9e2d7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1beb9e1e9:;
	};
	;
	{
		
{
			_case_begin_1beb9ec88:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1beb9e958:;
	};
}

inline jule::Str _1beba3e35_toStr(jule::Ptr<_1aca974de_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1beba5b4b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1beba5a5d:;
	};
	;
	{
		
{
			_case_begin_1beba65ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1beba62bc:;
	};
}

inline jule::Str _1bebbde50_toStr(jule::Ptr<_1ac9b7266_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1bebc010a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bebc001c:;
	};
	;
	{
		
{
			_case_begin_1bebc0aab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bebc077b:;
	};
}

inline jule::Str _1bebc7970_toStr(jule::Ptr<_1ac9b8872_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1bebc8b2a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bebc8a3c:;
	};
	;
	{
		
{
			_case_begin_1bebc95cb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bebc929b:;
	};
}

inline jule::Str _1bec2e6ca_toStr(jule::Ptr<_1ac9b6771_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1bec30885:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec30797:;
	};
	;
	{
		
{
			_case_begin_1bec31336:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec31006:;
	};
}

inline jule::Str _1bec423e1_toStr(jule::Ptr<_1aca961d0_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bec435ce:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec434e1:;
	};
	;
	{
		
{
			_case_begin_1bec44080:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec43c50:;
	};
}

inline jule::Str _1bec5546a_toStr(jule::Ptr<_1aca96763_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bec56658:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec5656a:;
	};
	;
	{
		
{
			_case_begin_1bec57109:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec56cc9:;
	};
}

inline jule::Str _1bec6cd34_toStr(jule::Ptr<_1aca9a04c_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bec6de45:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec6dd57:;
	};
	;
	{
		
{
			_case_begin_1bec6e8e6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec6e5b6:;
	};
}

inline jule::Str _1bec704eb_toStr(jule::Ptr<_1ac9b5b5a_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1bec73d07:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec73c19:;
	};
	;
	{
		
{
			_case_begin_1bec747a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec74478:;
	};
}

inline jule::Str _1bec7c23e_toStr(jule::Ptr<_1aca95dd3_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bec7d3e9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bec7d30b:;
	};
	;
	{
		
{
			_case_begin_1bec7dd9a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bec7da6a:;
	};
}

inline jule::Str _1bec9e0b8_toStr(jule::Ptr<_1aca9dd64_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1beca02a6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1beca01b8:;
	};
	;
	{
		
{
			_case_begin_1beca0c57:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1beca0927:;
	};
}

inline jule::Str _1becc1ea9_toStr(jule::Ptr<_1ac9d1e84_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1becc3197:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1becc30a9:;
	};
	;
	{
		
{
			_case_begin_1becc3b48:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1becc3818:;
	};
}

inline jule::Str _1bed13cdc_toStr(jule::Ptr<_1acbc0d98_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1bed14e75:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bed14d87:;
	};
	;
	{
		
{
			_case_begin_1bed15926:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bed155e6:;
	};
}

inline jule::Str _1bdee7b92_toStr(jule::Ptr<_1aca9a426_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bdee8d80:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdee8c92:;
	};
	;
	{
		
{
			_case_begin_1bdee9831:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bdee9501:;
	};
}

inline jule::Str _1be031e0c_toStr(jule::Ptr<_1abc42e71_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be0330ea:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be03300c:;
	};
	;
	{
		
{
			_case_begin_1be033a9b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be03376b:;
	};
}

inline jule::Str _1be03651b_toStr(jule::Ptr<_1ac9b4b04_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be0376c6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0375d8:;
	};
	;
	{
		
{
			_case_begin_1be038177:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be037d47:;
	};
}

inline jule::Str _1be0406bd_toStr(jule::Ptr<_1abc4259c_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be040c62:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be040b74:;
	};
	;
	{
		
{
			_case_begin_1be041713:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be0413d3:;
	};
}

inline jule::Str _1be045030_toStr(jule::Ptr<_1ac9b5781_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be047c69:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be047b7b:;
	};
	;
	{
		
{
			_case_begin_1be04871a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be0483da:;
	};
}

inline jule::Str _1be04bd17_toStr(jule::Ptr<_1abc4334a_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be04d005:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be04ce17:;
	};
	;
	{
		
{
			_case_begin_1be04d9a6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be04d676:;
	};
}

inline jule::Str _1aa764ad7_toStr(jule::Ptr<_1aca98c82_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1aa765c70:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa765b82:;
	};
	;
	{
		
{
			_case_begin_1aa766721:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa7663e1:;
	};
}

inline jule::Str _1beb690b5_toStr(jule::Ptr<_1ac9b909d_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1beb6a270:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1beb6a182:;
	};
	;
	{
		
{
			_case_begin_1beb6ac21:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1beb6a8e1:;
	};
}

inline jule::Str _1c010c1a1_toStr(jule::Ptr<_1aca99315_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c010d38e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c010d2a1:;
	};
	;
	{
		
{
			_case_begin_1c010dd40:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c010da10:;
	};
}

inline jule::Str _1c01a6734_toStr(jule::Ptr<_1aca986ee_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c01a83b2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c01a82c4:;
	};
	;
	{
		
{
			_case_begin_1c01a8d63:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c01a8a33:;
	};
}

inline jule::Str _1c01b6b2e_toStr(jule::Ptr<_1aca97e4b_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c01b7d1c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c01b7c2e:;
	};
	;
	{
		
{
			_case_begin_1c01b87bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c01b848d:;
	};
}

inline jule::Str _1c01bdbbe_toStr(jule::Ptr<_1ac9b2d11_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa77185d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa771770:;
	};
	;
	{
		
{
			_case_begin_1aa772375:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa772683:;
	};
}

inline jule::Str _1aa77380a_toStr(jule::Ptr<_1ac9b39d2_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa775312:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa775224:;
	};
	;
	{
		
{
			_case_begin_1aa775cb3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa775983:;
	};
}

inline jule::Str _1aa776d08_toStr(jule::Ptr<_1ac9b3dab_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa779ee8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa779e0a:;
	};
	;
	{
		
{
			_case_begin_1aa77a999:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa77a669:;
	};
}

inline jule::Str _1aa776412_toStr(jule::Ptr<_1ac9b9a0a_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa77d6d3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa77d5e5:;
	};
	;
	{
		
{
			_case_begin_1aa77e184:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa77dd54:;
	};
}

inline jule::Str _1aa77b857_toStr(jule::Ptr<_1ac9ba16a_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa7818a1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa7817b3:;
	};
	;
	{
		
{
			_case_begin_1aa782352:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa782022:;
	};
}

inline jule::Str _1aa77ea8b_toStr(jule::Ptr<_1ac9b53a7_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa784a6e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa784981:;
	};
	;
	{
		
{
			_case_begin_1aa785520:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa7851e0:;
	};
}

inline jule::Str _1aa785c90_toStr(jule::Ptr<_1ac9b7a91_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1aa7884bd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa7883d0:;
	};
	;
	{
		
{
			_case_begin_1aa788e6e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa788b3e:;
	};
}

inline jule::Str _1aa78b944_toStr(jule::Ptr<_1ac9b8047_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1aa78d6d2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa78d5e4:;
	};
	;
	{
		
{
			_case_begin_1aa78e183:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa78dd53:;
	};
}

inline jule::Str _1aa78e903_toStr(jule::Ptr<_1ac9b6111_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1aa792131:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1aa792043:;
	};
	;
	{
		
{
			_case_begin_1aa792ad2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1aa7927a2:;
	};
}

inline jule::Str _1c04ce793_toStr(jule::Ptr<_1aca95135_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1be25dbd8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be25c6ed:;
	};
	;
	{
		
{
			_case_begin_1bee66868:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bee66714:;
	};
}

inline jule::Str _1c01d19d4_toStr(jule::Ptr<_1aca9b1e6_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c01d2bc2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c01d2ad4:;
	};
	;
	{
		
{
			_case_begin_1c01d3673:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c01d3343:;
	};
}

inline jule::Str _1c01e73ce_toStr(jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c01e85bc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c01e84ce:;
	};
	;
	{
		
{
			_case_begin_1c01e906d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c01e8c3d:;
	};
}

inline jule::Str _1c07ae941_toStr(jule::Ptr<_1aca9c24c_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c07b0b2e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c07b0a41:;
	};
	;
	{
		
{
			_case_begin_1c07b15d0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c07b12a0:;
	};
}

inline jule::Str _1bd9255d1_toStr(jule::Ptr<_1aca9c549_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd9267be:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd9266d1:;
	};
	;
	{
		
{
			_case_begin_1bd927270:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd926e40:;
	};
}

inline jule::Str _1bd96c33c_toStr(jule::Ptr<_1aca9d4c3_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd96d45e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd96d371:;
	};
	;
	{
		
{
			_case_begin_1bd96de10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd96dad0:;
	};
}

inline jule::Str _1bd976346_toStr(jule::Ptr<_1aca9db77_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd977468:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd97737a:;
	};
	;
	{
		
{
			_case_begin_1bd977e19:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd977ad9:;
	};
}

inline jule::Str _1c0cd4edd_toStr(jule::Ptr<_1bb109d73_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0cd61cb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0cd60dd:;
	};
	;
	{
		
{
			_case_begin_1c0cd6b7c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cd684c:;
	};
}

inline jule::Str _1c0d1d444_toStr(jule::Ptr<_1bb10c969_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1c0d2448e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0d243a1:;
	};
	;
	{
		
{
			_case_begin_1c0d24e40:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0d24b10:;
	};
}

inline jule::Str _1c0d2d7c8_toStr(jule::Ptr<_1bb10b65a_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0d2e9b6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0d2e8c8:;
	};
	;
	{
		
{
			_case_begin_1c0d30467:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0d30137:;
	};
}

inline jule::Str _1c0b9693d_toStr(jule::Ptr<_1bb10c590_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0b97b2b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0b97a3d:;
	};
	;
	{
		
{
			_case_begin_1c0b985cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0b9829c:;
	};
}

inline jule::Str _1c0b9928c_toStr(jule::Ptr<_1bb10c1b6_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0b9b756:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0b9b668:;
	};
	;
	{
		
{
			_case_begin_1c0b9c207:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0b9bdc7:;
	};
}

inline jule::Str _1c0ba7256_toStr(jule::Ptr<_1bb10a406_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0ba8444:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0ba8356:;
	};
	;
	{
		
{
			_case_begin_1c0ba8de5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0ba8ab5:;
	};
}

inline jule::Str _1c0eb4a5d_toStr(jule::Ptr<_1bb10a824_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0eb5c4b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0eb5b5d:;
	};
	;
	{
		
{
			_case_begin_1c0eb66ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0eb63bc:;
	};
}

inline jule::Str _1c0eb77db_toStr(jule::Ptr<_1bb10b0c7_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0eb9ca5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0eb9bb7:;
	};
	;
	{
		
{
			_case_begin_1c0eba756:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0eba426:;
	};
}

inline jule::Str _1c0ee2cde_toStr(jule::Ptr<_1bb10b9e0_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0ee3ebb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0ee3dcd:;
	};
	;
	{
		
{
			_case_begin_1c0ee496c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0ee463c:;
	};
}

inline jule::Str _1c10163a6_toStr(jule::Ptr<_1bb10cc66_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c1017594:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c10174a6:;
	};
	;
	{
		
{
			_case_begin_1c1018045:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c1017c15:;
	};
}

inline jule::Str _1c101cd4c_toStr(jule::Ptr<_1bb10ab21_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c101e03a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c101de4c:;
	};
	;
	{
		
{
			_case_begin_1c101e9db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c101e6ab:;
	};
}

inline jule::Str _1c102247d_toStr(jule::Ptr<_1aca95a3c_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c102366b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c102357d:;
	};
	;
	{
		
{
			_case_begin_1c102411c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c1023cdc:;
	};
}

inline jule::Str _1c1028bb0_toStr(jule::Ptr<_1bb10d063_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c1029d9d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c1029cb0:;
	};
	;
	{
		
{
			_case_begin_1c102a84e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c102a51e:;
	};
}

inline jule::Str _1c1036827_toStr(jule::Ptr<_1bb10a060_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c1037a15:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c1037927:;
	};
	;
	{
		
{
			_case_begin_1c10384b6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c1038186:;
	};
}

inline jule::Str _1c1048c35_toStr(jule::Ptr<_1bb10bcdc_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c1049e23:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c1049d35:;
	};
	;
	{
		
{
			_case_begin_1c104a8c4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c104a594:;
	};
}

inline jule::Str _1c12e31bb_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1c12e4310:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c12e4222:;
	};
	;
	{
		
{
			_case_begin_1c12e4cb1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c12e4981:;
	};
}

inline jule::Str _1c13869e0_toStr(_1a6a5cb3c_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c1389e00:;
			{
				return _1c138b9b2_structToStr(_21613_x);;
			}
		}
		_match_end_1c138997c:;
	};
}

inline jule::Str _1c13933d1_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1c1394778:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c1394569:;
	};
	;
	{
		
{
			_case_begin_1c13950d6:;
			{
				return _1c1396ba9_arrToStr(_21613_x);;
			}
		}
		_match_end_1c1394e0a:;
	};
}

inline jule::Str _1c1395c0d_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c138ac36:;
			{
				return _1bbdd1440_toStr(_21613_x);;
			}
		}
		_match_end_1c1399629:;
	};
}

inline jule::Str _1c139ac46_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c17c3844:;
			{
				return _1bbdd1440_toStr(_21613_x);;
			}
		}
		_match_end_1c139237a:;
	};
}



inline void _1bb4a364a_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I32 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1baea8617:;
	}
	_iter_end_1baea8617:;;
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1baeaa0db:;
	}
	_iter_end_1baeaa0db:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1bb764d6d_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1baeadde2:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1bb48ceb4_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1baeadde2:;
			++it;
			goto _iter_begin_1baeadde2;
		}
		_iter_end_1baeadde2:;
	};
	return _1bb764d6d_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1bb48d8bb_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1baeb00e1:;
	}
	_iter_end_1baeb00e1:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1bb764d6d_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1bb48ceb4_AppendRune(_846_buf, _8316_r);
	return _1bb764d6d_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1bbb8e033_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I32 __jule_runeCount(jule::Str _10514_s) {
	return _1bb48d8bb_RuneCountStr(_10514_s);;
}



inline void _1bb4a6054_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1bb48e8cd__handleRW(_814_b);
}



inline jule::Bool _1bb4a7000__coSpawn(void* _1020_func, void* _1035_args) {
	void* _112_handle = CreateThread(nullptr, 0LL, (unsigned long(*)(void*))(_1020_func), _1035_args, 0LL, nullptr);;
	if ((_112_handle == nullptr)) {
		return false;;
	};
	_1bb728040_CloseHandle(((jule::Uintptr)(_112_handle)));
	return true;;
}



inline jule::U64 _1bb508b56_hash128to64(_1bb50879e_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1bb508e64_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1bb50516e_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1bb50922d_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1bb504745_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1bb50956e_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1bb5098b0_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1bb508b56_hash128to64(_1bb50879e_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1bb509c34_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1bb50a163_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1bb50a5e7_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1bb508e64_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1bb508e64_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1bb509c34_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1bb509c34_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1bb50a163_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1bb50922d_fetch32(_7517_bytes));;
		return _1bb50a163_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1bb50922d_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1bb50956e_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1bb50879e_u128 _1bb50a99e_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1bb50879e_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1bb50956e_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1bb50a5e7_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1bb50956e_shiftMix((jule::U64)(_1046_a + _1bb508e64_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1bb50956e_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1bb5098b0_hashLen16((jule::U64)(_1bb508e64_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1bb5098b0_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1bb508e64_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1bb50956e_shiftMix((jule::U64)(_1bb508e64_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1bb50956e_shiftMix((jule::U64)(_1bb508e64_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1baec9c65;
				};
			}
		_iter_next_1baec9c65:;
		}
		_iter_end_1baec9c65:;;
	};
	_1046_a=_1bb5098b0_hashLen16(_1046_a, _1066_c);
	_1056_b=_1bb5098b0_hashLen16(_1076_d, _1056_b);
	return _1bb50879e_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1bb5098b0_hashLen16(_1056_b, _1046_a)};;
}



inline _1bb50879e_u128 _1bb50b0ed_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1bb509c34_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1bb509c34_rotate64(_14563_a, 44LLU);
	return _1bb50879e_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1bb50879e_u128 _1bb50b52c_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1bb50b0ed_weakHashLen32WithSeeds(_1bb508e64_fetch64(_15529_bytes), _1bb508e64_fetch64(_15529_bytes.slice(8LL)), _1bb508e64_fetch64(_15529_bytes.slice(16LL)), _1bb508e64_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1bb50879e_u128 _1bb50b95b_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1bb50879e_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1bb50a99e_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1bb50879e_u128 _16910_v = _1bb50879e_u128{._field_hi=0, ._field_lo=0};;
	_1bb50879e_u128 _17010_w = _1bb50879e_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1bb509c34_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1bb508e64_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1bb509c34_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1bb508e64_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1bb509c34_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1bb509c34_rotate64((jule::U64)(_1716_x + _1bb508e64_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1bb509c34_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1bb508e64_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1bb509c34_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1bb508e64_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1bb508e64_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1bb509c34_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1bb50b52c_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1bb50b52c_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1bb508e64_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1bb509c34_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1bb508e64_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1bb509c34_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1bb508e64_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1bb508e64_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1bb509c34_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1bb50b52c_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1bb50b52c_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1bb508e64_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1baed3422;
			};
		}
	_iter_next_1baed3422:;
	}
	_iter_end_1baed3422:;;
	_1716_x+=(jule::U64)(_1bb509c34_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1bb509c34_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1bb509c34_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1bb509c34_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1bb508e64_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1bb508e64_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1bb50b52c_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1baede10e:;
	}
	_iter_end_1baede10e:;;
	_1716_x=_1bb5098b0_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1bb5098b0_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1bb50879e_u128{._field_hi=(jule::U64)(_1bb5098b0_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1bb5098b0_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1bb50bc25_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1bb50879e_u128 _2356_sum = _1bb50879e_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1bb50b95b_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1bb50879e_u128{._field_hi=_1bb508e64_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1bb508e64_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1bb50b95b_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1bb50879e_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1bb508b56_hash128to64(_2356_sum);;
}



inline jule::U64 _1a6919ee4_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1a691a90c_hasZeroByte((_1a691ab93_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1a691a302_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1a691a90c_hasZeroByte((_1a691ab93_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1a691a5bb_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1a690c536_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1a691a90c_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1a691ab93_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1a691ae5c_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1a691b16b_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbdc0770:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1bbdc0770:;
			++it;
			_886_i++;
			goto _iter_begin_1bbdc0770;
		}
		_iter_end_1bbdc0770:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1a691b545_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1a691b842_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1a691bbb6_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1a691bbb6_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline jule::I32 _1a6b26d16_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I32)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1bbe19c09:;
	}
	_iter_end_1bbe19c09:;;
	return -1LL;;
}



inline jule::I32 _1a6b27553_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbe1a0c2:;
		if (it != expr_end) {
			jule::I32 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1bbe1a0c2:;
			++it;
			_706_i++;
			goto _iter_begin_1bbe1a0c2;
		}
		_iter_end_1bbe1a0c2:;
	};
	return -1LL;;
}



inline jule::I32 _1a6b278c7_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1a6b26d16_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1a6b403d4_Getwd(void) {
	jule::Array<jule::U16,261> _910_buf = ({ auto __jule_collection = jule::Array<jule::U16,261>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::U32 _102_n = _1bb728d76_GetCurrentDirectory(static_cast<jule::U32>(261LLU), (&(_910_buf[0LL])));;
	if ((_102_n == 0LLU)) {
		return jule::Str();;
	};
	return _1bb70059a_U16PtrToStr((&(_910_buf[0LL])));;
}



inline jule::Bool _1a8dccd89_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1a8e3ab0b__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1a8e4462b_isExcludingLatin(_1a8dd6d60_Letter, _7613_r);;
}



inline jule::Bool _1a8e4399e_is16(jule::Slice<_1a8e41c11_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd3c91d9:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1a8e41c11_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bd3c91d9:;
				++it;
				_1937_i++;
				goto _iter_begin_1bd3c91d9;
			}
			_iter_end_1bd3c91d9:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1a8e41c11_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1bd3c7e74:;
	}
	_iter_end_1bd3c7e74:;;
	return false;;
}



inline jule::Bool _1a8e43d23_is32(jule::Slice<_1a8e4223e_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bb908dad:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1a8e4223e_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bb908dad:;
				++it;
				_2307_i++;
				goto _iter_begin_1bb908dad;
			}
			_iter_end_1bb908dad:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1a8e4223e_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1bb8eda51:;
	}
	_iter_end_1bb8eda51:;;
	return false;;
}



inline jule::Bool _1a8e4462b_isExcludingLatin(jule::Ptr<_1a8e426b2_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1a8e41c11_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1a8e4399e_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1a8e4223e_Range32> *_2873_R32 = &((*_27821_rangeTab.alloc)._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1a8e43d23_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1a8e4486d_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1a8e3ab0b__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1a8e4462b_isExcludingLatin(_1a8ddd130_Upper, _29512_r);;
}



inline jule::I32 _1a8e45066_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1a8e4175a_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1a8e4175a_CaseRange> _1a8e453da_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1a8e4175a_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1a8e4175a_CaseRange> _3397_cr = ((jule::Ptr<_1a8e4175a_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*_3397_cr.alloc)._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1bb91b167:;
	}
	_iter_end_1bb91b167:;;
	return nullptr;;
}



inline jule::I32 _1a8e456a4_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1a8e3c8dd_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _1a8e3cbc9_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1a8e3cbc9_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1bb9204e0:;
	}
	_iter_end_1bb9204e0:;;
	if (((_3806_lo < _1a8e3cbc9_caseOrbit.len()) && (static_cast<jule::I32>(_1a8e3cbc9_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1a8e3cbc9_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1a8e4175a_CaseRange> _3972_cr = _1a8e453da_lookupCaseRange(_37015_r, _1a8e3a534_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1a8e45066_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1a8e45066_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1a8e45b27_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1a6a5cb3c_Builder _186_ss = static__1a6a5d489_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1a6a5db1b_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1bb9345ae:;
	}
	_iter_end_1bb9345ae:;;
	return _1a6a5e49b_Str(&_186_ss);;
}



inline jule::Bool _1a8e45ee0_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1a8e46364_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1a8e4681a_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1a8e45ee0_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1bb938272:;
	}
	_iter_end_1bb938272:;;
	return -1LL;;
}



inline jule::I32 _1a8e46b5b_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1a8e4681a_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1a8e4708a_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1bb93a4c7:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1bb939ce0;
					};
				}
			_iter_next_1bb93bc48:;
			}
			_iter_end_1bb93bc48:;;
			return _636_j;;
		}
	_iter_next_1bb939ce0:;
	}
	_iter_end_1bb939ce0:;;
	return -1LL;;
}



inline jule::I32 _1a8e4740e_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1a8e4708a_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1a8e48be6_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1a6b278c7_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1a8e4906a_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1bb943da4:;
	}
	_iter_end_1bb943da4:;;
	return -1LL;;
}



inline jule::I32 _1a8e49994_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a8e4906a_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1bb9471b5:;
	}
	_iter_end_1bb9471b5:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1a8e4a137_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1a8e4681a_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1bb94c3c9;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1bb94c3c9:;
	}
	_iter_end_1bb94c3c9:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1a8e4a4ab_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1a8e4a137_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1a8e4a830_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1a8e4681a_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1a8e4b39c_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1a8e49994_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _1a8e4b721_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _1a8e4681a_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1bb952588;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1bb952588:;
	}
	_iter_end_1bb952588:;;
	return _2746_n;;
}



inline jule::Str _1a8e4bc0a_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _1a8e4b721_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1a6a5cb3c_Builder _3036_ss = static__1a6a5d489_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _1a8e4681a_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1bb95616e;
			};
			({
				auto except = _1a6a5db1b_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1a6a5db1b_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1bb95616e:;
	}
	_iter_end_1bb95616e:;;
	({
		auto except = _1a6a5db1b_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1a6a5e49b_Str(&_3036_ss);;
}



inline jule::Str _1a8e4c139_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1a8e4bc0a_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1a8e4cdb5_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a8e4906a_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1bb95b905:;
	}
	_iter_end_1bb95b905:;;
	return jule::Str();;
}



inline jule::Str _1a8e4d239_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48c469_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1a8e4906a_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1bb95d51c:;
	}
	_iter_end_1bb95d51c:;;
	return jule::Str();;
}



inline jule::Str _1a8e4d844_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1a8e4cdb5_TrimLeft(_1a8e4d239_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Bool _1a8e5034b_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1bb963544;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1bb9654e1;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1bb9654e1;
			};
			return false;;
		}
	_iter_next_1bb9654e1:;
	}
	_iter_end_1bb9654e1:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1bb963544:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1bb968769:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1bb968769;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1bb968769;
					};
					return false;;
				};
				jule::I32 _1237_r = _1a8e456a4_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1a8e456a4_SimpleFold(_1237_r);
					}
				_iter_next_1bb968eea:;
				}
				_iter_end_1bb968eea:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1bb968769;
				};
				return false;;
			}
			_iter_next_1bb968769:;
			it += len;
			goto _iter_begin_1bb968769;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Bool _1a721205a_IsPathSep(jule::U8 _4914_c) {
	return ((_4914_c == 92LLU) || (_4914_c == '/'));;
}



inline jule::Bool _1a7212368_isSlash(jule::U8 _5312_c) {
	return ((_5312_c == '\\') || (_5312_c == '/'));;
}



inline jule::U8 _1a7212632_toUpper(jule::U8 _5512_c) {
	if ((('a' <= _5512_c) && (_5512_c <= 'z'))) {
		return (jule::U8)(_5512_c - 32LL);;
	};
	return _5512_c;;
}



inline jule::I32 _1a7212c09_volumeNameLen(jule::Str _8318_path) {
	if ((_8318_path.len() < 2LL)) {
		return 0LL;;
	};
	jule::U8 _882_c = _8318_path[0LL];;
	if (((_8318_path[1LL] == ':') && ((('a' <= _882_c) && (_882_c <= 'z')) || (('A' <= _882_c) && (_882_c <= 'Z'))))) {
		return 2LL;;
	};
	if (((!(_1a7212368_isSlash(_8318_path[0LL]))) || (!(_1a7212368_isSlash(_8318_path[1LL]))))) {
		return 0LL;;
	};
	jule::Str _962_p1;
	jule::Str _9610_rest;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7212ec3_cutPath(_8318_path.slice(2LL));
		_962_p1 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
	});
	jule::Str _976_p2 = jule::Str();;
	jule::Bool _986_ok = false;;
	({
		__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7212ec3_cutPath(_9610_rest);
		_976_p2 = __jule_assign_result.__jule_result_arg0;
		_9610_rest = __jule_assign_result.__jule_result_arg1;
		_986_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_986_ok))) {
		return _8318_path.len();;
	};
	if (((!_962_p1.equal(".", 1)) && (!_962_p1.equal("?", 1)))) {
		return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
	};
	if (((((_976_p2.len() == 3LL) && (_1a7212632_toUpper(_976_p2[0LL]) == 'U')) && (_1a7212632_toUpper(_976_p2[1LL]) == 'N')) && (_1a7212632_toUpper(_976_p2[2LL]) == 'C'))) {
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7212ec3_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
		});
		({
			__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a7212ec3_cutPath(_9610_rest);
			_9610_rest = __jule_assign_result.__jule_result_arg1;
			_986_ok = __jule_assign_result.__jule_result_arg2;
		});
		if ((!(_986_ok))) {
			return _8318_path.len();;
		};
	};
	return ((_8318_path.len() - _9610_rest.len()) - 1LL);;
}



inline __jule_tuple_str__jule_tuple_str__jule_tuple_bool _1a7212ec3_cutPath(jule::Str _12012_path) {
	__jule_tuple_str__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	{
		auto expr = &(_12012_path);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb981056:;
		if (it != expr_end) {
			jule::I32 _1216_i = it - expr->begin();
			{
				if (_1a7212368_isSlash(_12012_path[_1216_i])) {
					__jule_func_result.__jule_result_arg0 = _12012_path.slice(0LL, _1216_i);
					__jule_func_result.__jule_result_arg1 = _12012_path.slice((_1216_i + 1LL));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bb981056:;
			++it;
			_1216_i++;
			goto _iter_begin_1bb981056;
		}
		_iter_end_1bb981056:;
	};
	__jule_func_result.__jule_result_arg0 = _12012_path;
	__jule_func_result.__jule_result_arg1 = jule::Str();
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1a721328c_fullPath(jule::Str _12913_name) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::U16> _1302_utf16Name = _1bb6eeec3_UTF16FromStr(_12913_name);;
	jule::U16* _1312_p = (&(_1302_utf16Name[0LL]));;
	jule::U32 _1326_n = static_cast<jule::U32>(100LLU);;
	for (;;) {
		{
			jule::Slice<jule::U16> _1347_buf = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(static_cast<jule::I32>(_1326_n), static_cast<jule::I32>(_1326_n)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
			_1326_n=_1bb729e76_GetFullPathName(_1312_p, static_cast<jule::U32>(_1347_buf.len()), (&(_1347_buf[0LL])), nullptr);
			if ((_1326_n == 0LLU)) {
				__jule_func_result.__jule_result_arg0 = jule::Str();
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			};
			if ((_1326_n <= static_cast<jule::U32>(_1347_buf.len()))) {
				__jule_func_result.__jule_result_arg0 = _1bb7002d1_UTF16ToStr(_1347_buf.slice(0LL, static_cast<jule::I32>(_1326_n)));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			};
		}
	_iter_next_1bb983124:;
	}
	_iter_end_1bb983124:;;
	__jule_func_result.__jule_result_arg0 = jule::Str();
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_str__jule_tuple_bool _1a7213666_abs(jule::Str _14612_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_14612_path).empty()) {
		_14612_path=jule::Str::lit(".", 1);
	};
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a721328c_fullPath(_14612_path);
		_14612_path = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(__jule_func_result.__jule_result_arg1))) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a8e518d0_Clean(_14612_path);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1a72138a8_join(jule::Slice<jule::Str> _1609_elem) {
	_1a6a5cb3c_Builder _1616_s = static__1a6a5d489_New(16LL);;
	jule::U8 _1626_lastChar = static_cast<jule::U8>(0LLU);;
	{
		auto expr = &(_1609_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bb987458:;
		if (it != expr_end) {
			jule::Str _16314_e = *it;
			{
				{
					
					if ((_1a6a5e930_Len(&_1616_s) == 0LL)) {
						_case_begin_1bb9882c2:;
					}
					else if (_1a7212368_isSlash(_1626_lastChar)) {
						_case_begin_1bb987e92:;
						{
							while (((_16314_e.len() > 0LL) && _1a7212368_isSlash(_16314_e[0LL]))) {
								{
									(_16314_e).mut_slice(1LL);;
								}
							_iter_next_1bb988c95:;
							}
							_iter_end_1bb988c95:;;
						}
					}
					else if ((_1626_lastChar == ':')) {
						_case_begin_1bb988008:;
					}
					else {
						_case_begin_1bb987e2b:;
						{
							({
								auto except = _1a6a5ddc4_WriteByte(&_1616_s, '\\');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:187:4"));
							});
							_1626_lastChar='\\';
						}
					}
					_match_end_1bb987d1b:;
				};
				if ((_16314_e.len() > 0LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&_1616_s, _16314_e);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/filepath/path_windows.jule:191:4"));
						(except.result);
					});
					_1626_lastChar=_16314_e[(_16314_e.len() - 1LL)];
				};
			}
			_iter_next_1bb987458:;
			++it;
			goto _iter_begin_1bb987458;
		}
		_iter_end_1bb987458:;
	};
	if ((_1a6a5e930_Len(&_1616_s) == 0LL)) {
		return jule::Str();;
	};
	return _1a8e518d0_Clean(_1a6a5e49b_Str(&_1616_s));;
}



inline jule::Str _1a8e518d0_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I32 _1112_volLen = _1a7212c09_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1a721205a_IsPathSep(_1102_originalPath[0LL])) && _1a721205a_IsPathSep(_1102_originalPath[1LL]))) {
			return _1a8e51ea7_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1a721205a_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1272_n = _10914_path.len();;
	_1a8e50a44_lazyBuff _1286_out = _1a8e50a44_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I32 _1336_r;
	jule::I32 _13313_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1a8e512b4_append(&_1286_out, 92LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1a721205a_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1bd5d03e0:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1a721205a_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1bb9901a8:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1a721205a_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1bb99021e:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1bd5d449e:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1a721205a_IsPathSep(_1a8e5100b_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1bd5d4d51:;
									}
									_iter_end_1bd5d4d51:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1bd5d4548:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1a8e512b4_append(&_1286_out, 92LLU);
									};
									_1a8e512b4_append(&_1286_out, '.');
									_1a8e512b4_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1bd5d413b:;
						};
					}
				}
				else {
					_case_begin_1bb990142:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1a8e512b4_append(&_1286_out, 92LLU);
						};
						if ((((_1286_out._field_w == 0LL) && (_1286_out._field_volLen == 0LL)) && (_1336_r != 0LL))) {
							jule::I32 _1769_i = _1336_r;;
							for (; ((_1769_i < _1272_n) && (!(_1a721205a_IsPathSep(_10914_path[_1769_i])))); (_1769_i)++) {
								{
									if ((_10914_path[_1769_i] == ':')) {
										_1a8e512b4_append(&_1286_out, '.');
										_1a8e512b4_append(&_1286_out, 92LLU);
										goto _iter_end_1bb991b49;
									};
								}
							_iter_next_1bb991b49:;
							}
							_iter_end_1bb991b49:;;
						};
						for (; ((_1336_r < _1272_n) && (!(_1a721205a_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1a8e512b4_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1bd5d10e4:;
						}
						_iter_end_1bd5d10e4:;;
					}
				}
				_match_end_1bb990087:;
			};
		}
	_iter_next_1bb990032:;
	}
	_iter_end_1bb990032:;;
	if ((_1286_out._field_w == 0LL)) {
		_1a8e512b4_append(&_1286_out, '.');
	};
	return _1a8e51ea7_FromSlash(_1a8e5154a_string(&_1286_out));;
}



inline jule::Str _1a8e51ea7_FromSlash(jule::Str _21214_path) {
	;
	return _1a8e4c139_ReplaceAll(_21214_path, jule::Str::lit("/", 1), jule::Str::lit("\\", 1));;
}



inline jule::Str _1a8e522e8_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1a72138a8_join(_2269_elem);;
}



inline jule::Str _1a8e5257e_Ext(jule::Str _2318_path) {
	jule::I32 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1a721205a_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1bd54461d:;
	}
	_iter_end_1bd54461d:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1a8e52848_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1a7213666_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1a8e52b12_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1a721205a_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1bd5459b5:;
	}
	_iter_end_1bd5459b5:;;
	(_25213_path).mut_slice(_1a8e5322d_VolumeName(_25213_path).len());;
	jule::I32 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1a721205a_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1bd546279:;
	}
	_iter_end_1bd546279:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("\\", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1a8e52edb_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1a8e5322d_VolumeName(_2838_path);;
	jule::I32 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1a721205a_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1bd54936a:;
	}
	_iter_end_1bd54936a:;;
	jule::Str _2892_dir = _1a8e518d0_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1a8e5322d_VolumeName(jule::Str _30115_path) {
	return _1a8e51ea7_FromSlash(_30115_path.slice(0LL, _1a7212c09_volumeNameLen(_30115_path)));;
}



inline void _1a6b2b5ce_appendEscapeArg(_1a6a5cb3c_Builder* _10225_s, jule::Str _10246_arg) {
	if ((_10246_arg.len() == 0LL)) {
		({
			auto except = _1a6a5db1b_WriteStr(_10225_s, jule::Str::lit("\"\"", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:104:3"));
			(except.result);
		});
		return;;
	};
	jule::Bool _1086_needsBackslash = false;;
	jule::Bool _1096_hasSpace = false;;
	jule::I32 _1106_i = 0LL;;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			{
				auto &_match_expr{ _10246_arg[_1106_i] };
				
				if (_match_expr == '\"' || _match_expr == '\\') {
					_case_begin_1bd586b38:;
					{
						_1086_needsBackslash=true;
					}
				}
				else if (_match_expr == ' ' || _match_expr == '\t') {
					_case_begin_1bd586e35:;
					{
						_1096_hasSpace=true;
					}
				}
				_match_end_1bd586d14:;
			};
		}
	_iter_next_1bd586792:;
	}
	_iter_end_1bd586792:;;
	if (((!(_1086_needsBackslash)) && (!(_1096_hasSpace)))) {
		({
			auto except = _1a6a5db1b_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:122:3"));
			(except.result);
		});
		return;;
	};
	if ((!(_1086_needsBackslash))) {
		({
			auto except = _1a6a5ddc4_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:127:3"));
		});
		({
			auto except = _1a6a5db1b_WriteStr(_10225_s, _10246_arg);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:128:3"));
			(except.result);
		});
		({
			auto except = _1a6a5ddc4_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:129:3"));
		});
		return;;
	};
	if (_1096_hasSpace) {
		({
			auto except = _1a6a5ddc4_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:134:3"));
		});
	};
	jule::I32 _1366_slashes = 0LL;;
	_1106_i=0LL;
	for (; (_1106_i < _10246_arg.len()); (_1106_i)++) {
		{
			jule::U8 _1393_c = _10246_arg[_1106_i];;
			{
				auto &_match_expr{ _1393_c };
				
				if (_match_expr == '\\') {
					_case_begin_1bd58a323:;
					{
						(_1366_slashes)++;
					}
				}
				else if (_match_expr == '\"') {
					_case_begin_1bd58a3cd:;
					{
						for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
							{
								({
									auto except = _1a6a5ddc4_WriteByte(_10225_s, '\\');
									if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:145:5"));
								});
							}
						_iter_next_1bd58ab09:;
						}
						_iter_end_1bd58ab09:;;
						({
							auto except = _1a6a5ddc4_WriteByte(_10225_s, '\\');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:147:4"));
						});
					}
				}
				else {
					_case_begin_1bd589d7d:;
					{
						_1366_slashes=0LL;
					}
				}
				_match_end_1bd589e8d:;
			};
			({
				auto except = _1a6a5ddc4_WriteByte(_10225_s, _1393_c);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:151:3"));
			});
		}
	_iter_next_1bd589542:;
	}
	_iter_end_1bd589542:;;
	if (_1096_hasSpace) {
		for (; (_1366_slashes > 0LL); (_1366_slashes)--) {
			{
				({
					auto except = _1a6a5ddc4_WriteByte(_10225_s, '\\');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:155:4"));
				});
			}
		_iter_next_1bd58b687:;
		}
		_iter_end_1bd58b687:;;
		({
			auto except = _1a6a5ddc4_WriteByte(_10225_s, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:157:3"));
		});
	};
}



inline jule::Str _1a6b2b898_makeCmdLine(jule::Slice<jule::Str> _16316_args) {
	_1a6a5cb3c_Builder _1646_s = static__1a6a5d489_New(16LL);;
	{
		auto expr = &(_16316_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd58c3d0:;
		if (it != expr_end) {
			jule::Str *_1659_arg = it;
			{
				if ((_1a6a5e930_Len(&_1646_s) > 0LL)) {
					({
						auto except = _1a6a5ddc4_WriteByte(&_1646_s, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/os/cmd_windows.jule:167:4"));
					});
				};
				_1a6b2b5ce_appendEscapeArg(&(_1646_s), (*(_1659_arg)));
			}
			_iter_next_1bd58c3d0:;
			++it;
			goto _iter_begin_1bd58c3d0;
		}
		_iter_end_1bd58c3d0:;
	};
	return _1a6a5e49b_Str(&_1646_s);;
}



inline jule::Exceptional<jule::Slice<jule::U16>> _1a6b2bc72_createEnvBlock(jule::Slice<jule::Str> _17919_env) {
	if ((_17919_env.len() == 0LL)) {
		return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1bb6ee632_Encode(({ auto __jule_collection = jule::Slice<jule::I32>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 0LL; __jule_collection; }))};;
	};
	jule::I32 _1836_n = 0LL;;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd58e415:;
		if (it != expr_end) {
			jule::Str *_1849_s = it;
			{
				if ((_1a6b27553_FindByteStr((*(_1849_s)), 0LLU) != -1LL)) {
					return jule::Exceptional<jule::Slice<jule::U16>>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type138)};
				};
				_1836_n+=((*(_1849_s)).len() + 1LL);
			}
			_iter_next_1bd58e415:;
			++it;
			goto _iter_begin_1bd58e415;
		}
		_iter_end_1bd58e415:;
	};
	(_1836_n)++;
	jule::Slice<jule::U16> _1916_b = ({ auto __jule_collection = jule::Slice<jule::U16>::alloc(0LL, _1836_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_17919_env);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd58e9cb:;
		if (it != expr_end) {
			jule::Str *_1929_s = it;
			{
				{
					auto expr = _1929_s;
					jule::U8 *it = expr->begin();
					const jule::U8 *end = it + expr->len();
					jule::Int len;
					jule::I32 _19310_c;
					_iter_begin_1bd59147d:;
					__jule_runeStep(it, end - it, &_19310_c, &len);
					if (it < end) {
						{
							_1916_b=_1bb6eec3c_AppendRune(_1916_b, _19310_c);
						}
						_iter_next_1bd59147d:;
						it += len;
						goto _iter_begin_1bd59147d;
					}
				};
				_1916_b=_1bb6eec3c_AppendRune(_1916_b, 0LL);
			}
			_iter_next_1bd58e9cb:;
			++it;
			goto _iter_begin_1bd58e9cb;
		}
		_iter_end_1bd58e9cb:;
	};
	_1916_b=_1bb6eec3c_AppendRune(_1916_b, 0LL);
	return jule::Exceptional<jule::Slice<jule::U16>>{.result=_1916_b};;
}



inline jule::I32 _1a6b2beb4_cmdErrorFromCode(jule::I32 _20221_code) {
	{
		auto &_match_expr{ _20221_code };
		
		if (_match_expr == 5LL) {
			_case_begin_1bd592715:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL || _match_expr == 3LL) {
			_case_begin_1bd592050:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1bd58e0e6:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1bd58e745:;
	};
}



inline jule::I32 _1a6b2c1c3_getLastCmdError(void) {
	return _1a6b2beb4_cmdErrorFromCode(static_cast<jule::I32>(_1bb728a02_GetLastError()));;
}



inline jule::I32 _1a6b2c734_getLastFsErrorWindows(void) {
	jule::U32 _102_err = _1bb728a02_GetLastError();;
	{
		auto &_match_expr{ _102_err };
		
		if (_match_expr == 2LL || _match_expr == 3LL || _match_expr == 123LL) {
			_case_begin_1bd593d54:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 5LL || _match_expr == 16LL || _match_expr == 33LL || _match_expr == 50LL) {
			_case_begin_1bd5936e4:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 19LL) {
			_case_begin_1bd59376b:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1bd5937e3:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 145LL) {
			_case_begin_1bd59386a:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else if (_match_expr == 183LL) {
			_case_begin_1bd593a46:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 206LL) {
			_case_begin_1bd593aac:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 87LL) {
			_case_begin_1bd593b23:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else {
			_case_begin_1bd59353a:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1bd59312d:;
	};
}



inline jule::I32 _1a6b2ccb7_getLastOsError(void) {
	jule::U32 _92_err = _1bb728a02_GetLastError();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 5LL) {
			_case_begin_1bd5969b1:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1bd596a27:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bd596a8d:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 123LL) {
			_case_begin_1bd596b15:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else {
			_case_begin_1bd596395:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		_match_end_1bd593bde:;
	};
}



inline jule::Bool _1a6b35561_isConsoleHandle(jule::Uintptr _9020_handle) {
	return (((_9020_handle == _1bb72746d_STDIN) || (_9020_handle == _1bb727715_STDOUT)) || (_9020_handle == _1bb727a12_STDERR));;
}



inline void _1a6b4363a_Exit(jule::I32 _119_code) {
	_1bb73cc8b_Exit(_119_code);
}



inline jule::Str _1a6b4389e_Executable(void) {
	return _1bb496d25_executable();;
}



inline jule::Slice<jule::Str> _1a6b43a69_Args(void) {
	return _1bb49686e_args();;
}



inline jule::Exceptional<jule::Str> _1a6b43ecb_Getwd(void) {
	jule::Str _332_wd = _1a6b403d4_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1a6b2ccb7_getLastOsError(), &__jule_any_type139)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I32 _1a8e58e37_getLastFsError(void) {
	jule::I32 _412_err = _1bb3e9a14_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bd5c7371:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bd5c7272:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 114LL) {
			_case_begin_1bd5c6b9a:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 38LL) {
			_case_begin_1bd5c6c11:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bd5c6c77:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bd5c6cee:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 132LL) {
			_case_begin_1bd5c6d76:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bd5c6ded:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bd5c7519:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bd5c7591:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bd5c7618:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bd5c7690:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bd5c7717:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bd5c778e:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bd5c7816:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 124LL) {
			_case_begin_1bd5c788d:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bd5c7915:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bd5c798c:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bd5c7a14:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bd5c7a8b:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 139LL || _match_expr == 16LL) {
			_case_begin_1bd5c7b13:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bd5c7b8a:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bd5c7c12:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bd5c7c89:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bd5c7d11:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 119LL) {
			_case_begin_1bd5c7d88:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 104LL) {
			_case_begin_1bd5c7e10:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 41LL) {
			_case_begin_1bd5c7e87:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1bd5c6a24:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1bd5c6b34:;
	};
}



inline jule::Bool _1a6a21e53_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a6a2222d_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a6a21738_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7600ec:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1bd7600ec:;
			++it;
			goto _iter_begin_1bd7600ec;
		}
		_iter_end_1bd7600ec:;
	};
	return false;;
}



inline jule::Bool _1a6a224e7_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a6a21947_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd761a05:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1bd761a05:;
			++it;
			goto _iter_begin_1bd761a05;
		}
		_iter_end_1bd761a05:;
	};
	{
		auto expr = &(_1a6a21b67_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7624b7:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1bd7624b7:;
			++it;
			goto _iter_begin_1bd7624b7;
		}
		_iter_end_1bd7624b7:;
	};
	return false;;
}



inline jule::Str _1a6a6c355_Logf(jule::Str _3249_fmt, jule::Slice<jule::Any> _32422_args) {
	return _1a6a6cce5_applyFmt(_3249_fmt, _32422_args);;
}



inline jule::Str _1a6a6c663_argToStr(jule::Any _32813_arg) {
	{
		auto &_match_expr{ _32813_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bd761e9a:;
			{
				return _32813_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1bd763452:;
			{
				return __jule_strFromByte(_32813_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bd7634b8:;
			{
				return __jule_strFromRune(_32813_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1bd7633db:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1bd763375:;
	};
}



inline jule::I32 _1a6a6c92c_findNextFmt(jule::Str _34116_fmt) {
	{
		auto expr = &(_34116_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7643cb:;
		if (it != expr_end) {
			jule::I32 _3426_i = it - expr->begin();
			jule::U8 *_3429_b = it;
			{
				if (((*(_3429_b)) == '@')) {
					return _3426_i;;
				};
			}
			_iter_next_1bd7643cb:;
			++it;
			_3426_i++;
			goto _iter_begin_1bd7643cb;
		}
		_iter_end_1bd7643cb:;
	};
	return -1LL;;
}



inline jule::Str _1a6a6cce5_applyFmt(jule::Str _35017_fmt, jule::Slice<jule::Any> _35027_args) {
	_1a6a5cb3c_Builder _3516_s = static__1a6a5d489_New(32LL);;
	{
		auto expr = &(_35027_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd765c18:;
		if (it != expr_end) {
			jule::Any *_3529_arg = it;
			{
				jule::I32 _3533_i = _1a6a6c92c_findNextFmt(_35017_fmt);;
				if ((_3533_i == -1LL)) {
					goto _iter_end_1bd765c18;
				};
				({
					auto except = _1a6a5db1b_WriteStr(&_3516_s, _35017_fmt.slice(0LL, _3533_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:357:3"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_3516_s, _1a6a6c663_argToStr((*(_3529_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				(_35017_fmt).mut_slice((_3533_i + 1LL));;
			}
			_iter_next_1bd765c18:;
			++it;
			goto _iter_begin_1bd765c18;
		}
		_iter_end_1bd765c18:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(&_3516_s, _35017_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:361:2"));
		(except.result);
	});
	return _1a6a5e49b_Str(&_3516_s);;
}



inline jule::Bool _1a6a6dbe7_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1a6a70116_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1a6a70424_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1a6a706dd_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1a6a70a2e_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1a6a70cb5_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1a6a7107e_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1a6a71348_IsUnix(jule::Str _5511_os) {
	return (_1a6a70424_IsDarwin(_5511_os) || _1a6a706dd_IsLinux(_5511_os));;
}



inline jule::Bool _1a6a71722_Is32Bit(jule::Str _5812_arch) {
	return _1a6a70a2e_IsI386(_5812_arch);;
}



inline jule::Bool _1a6a71964_Is64Bit(jule::Str _6112_arch) {
	return (_1a6a70cb5_IsAmd64(_6112_arch) || _1a6a7107e_IsArm64(_6112_arch));;
}



inline void _1a8e5ad29_init(void) {
	jule::Str _256_path = _1a6b4389e_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1a8e5a378_PathWd=({
			auto except = _1a6b43ecb_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1a8e5a0e2_PathExec=_1a8e52edb_Dir(_256_path);
		_1a8e59d8e_PathStdlib=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1a8e5a0e2_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1a8e5a675_PathApi=_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1a8e5a0e2_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1aa4b66e6_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1aa4b6a04_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1aa4b6cbd_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1aa4b710e_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1aa4b9672_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1ad94d372:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1aa4c0579_IsInf(_4714_f, 0LL) || _1aa4bede7_IsNaN(_4714_f)) {
			_case_begin_1ad94d41b:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1ad94d284:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1aa4c0843_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1aa4b6cbd_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1aa4b710e_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1aa4bead9_NaN(void) {
	return _1aa4b710e_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1aa4bede7_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1aa4c01b1_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1aa4b710e_F64FromBits(9218868437227405312LLU);;
	};
	return _1aa4b710e_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1aa4c0579_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1aa4c0843_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1aa4c2bec_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1aa4c2317_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1aa4bede7_IsNaN(_1118_x) || _1aa4c0579_IsInf(_1118_x, 1LL)) {
			_case_begin_1ad989644:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1ad9896dd:;
			{
				return _1aa4bead9_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1ad989754:;
			{
				return _1aa4c01b1_Inf(-1LL);;
			}
		}
		_match_end_1ad989578:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1aa4b9672_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1aa4c2bec_Abs(jule::F64 _438_x) {
	return _1aa4b710e_F64FromBits((_1aa4b6cbd_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1aa4c9770_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1aa4c2bec_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1bd8a8d5b:;
		}
		_iter_end_1bd8a8d5b:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1aa4ca078_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1aa4b9672_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1aa4c2317_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1aa503788_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1bb764d6d_StrFromBytes(_1aa503d71_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1aa50722b_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1aa503d71_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1aa502622_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bd6bb575:;
			{
				_886_bits=static_cast<jule::U64>(_1aa4b66e6_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1aa502622_floatInfo>)((&(_1aa502974_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bd6bb2ab:;
			{
				_886_bits=_1aa4b6cbd_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1aa502622_floatInfo>)((&(_1aa502c71_f64info))));
			}
		}
		else {
			_case_begin_1bd6ba068:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1bd6bae37:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1bd6c03c0:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1bd6c1b0d:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1bd6c1beb:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1bd6c148c:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1bd6c137c:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bd6c04ad:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1bd6be578:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1bd6be721:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1aa5063a1_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1aa506a33_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1aa503205_decimalSlice _1376_digs = _1aa503205_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1aa511dc3_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd6c488b:;
				{
					_8758_prec=_1aa50722b_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd6c589d:;
				{
					_8758_prec=_1aa50722b_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd6c5914:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1bd6c4aab:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd6c78a0:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd6c796b:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1bd6c740a:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1bd6c751a:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1aa510b19_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1aa5110ae_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1aa50457a_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1aa504c51_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1aa50457a_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1aa502622_floatInfo* _18824_flt) {
	_1aa515ba7_decimal _1896_d = _1aa515ba7_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa516092_assign(&_1896_d, _1882_mant);
	_1aa51634a_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1aa503205_decimalSlice _1926_digs = _1aa503205_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1aa50516e_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1aa503205_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd6cd82e:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd6ce632:;
				{
					_18733_prec=_1aa50722b_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd6ce698:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1bd6ce49a:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bd6cd554:;
				{
					_1aa516b64_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bd6cd5ba:;
				{
					_1aa516b64_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bd6cd631:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1aa516b64_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1bd6d0b83:;
		};
		_1926_digs=_1aa503205_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1aa504c51_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1aa504c51_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1aa503205_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bd6d3d1d:;
			{
				return _1aa505713_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bd6d3d84:;
			{
				return _1aa505bec_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bd6d3dea:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1aa505713_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1aa505bec_fmtF(_22418_dst, _22447_neg, _2252_digs, _1aa50722b_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1bd6d3c63:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1aa50516e_roundShortest(_1aa515ba7_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1aa502622_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1aa515ba7_decimal _2926_upper = _1aa515ba7_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa516092_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_1aa51634a_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1aa515ba7_decimal _3116_lower = _1aa515ba7_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1aa516092_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_1aa51634a_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1bd6e0027;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1bd6e4cc9:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1bd6e4d73:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1bd6e4dd9:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1bd6e4bec:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1bd6e778d:;
					{
						_1aa516b64_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1bd6e7837:;
					{
						_1aa516603_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1bd6e789d:;
					{
						_1aa5168ab_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1bd6e4e50:;
			};
		}
	_iter_next_1bd6e0027:;
	}
	_iter_end_1bd6e0027:;;
}



inline jule::Slice<jule::U8> _1aa505713_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1aa503205_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1aa506da7_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bd6eb781:;
		}
		_iter_end_1bd6eb781:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1bd6ede6a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1bd6ee124:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bd6ed8d7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bd6ed783:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1aa505bec_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1aa503205_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1aa506da7_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bd702c3d:;
		}
		_iter_end_1bd702c3d:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1bd70404c:;
		}
		_iter_end_1bd70404c:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1aa5063a1_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1aa502622_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa51ad99_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa51ad99_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1aa506a33_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1aa502622_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1bd708d43:;
	}
	_iter_end_1bd708d43:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bd70e266:;
		}
		_iter_end_1bd70e266:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bd710cd4:;
		}
		_iter_end_1bd710cd4:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1aa507ccb_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1bd70d166:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1bd713787:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bd712dc4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bd712c3c:;
	};
	return _51113_dst;;
}



inline jule::I32 _1aa506da7_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1aa50722b_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1aa507ccb_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a940b54e_ConvError _1aa50824e_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a940b54e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bd71901d:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bd718e52:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1aa507ccb_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bd71a9c0:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1aa507ccb_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bd71aaad:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1aa507ccb_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bd71a66d:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bd71a607:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bd71a52a:;
					};
				};
			}
		}
		else {
			_case_begin_1bd71836e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bd718902:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bd71e9d5:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bd71e6b6:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bd719c22:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1bd71e650:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bd71e72c:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bd71a1d9:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bd720b29:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd721ac5:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1bd722e28:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1aa507ccb_lower(_1099_c)) && (_1aa507ccb_lower(_1099_c) <= 'z'))) {
						_case_begin_1bd722d5c:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1aa507ccb_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1bd722950:;
						{
							goto _iter_next_1bd721ac5;
						}
					}
					else {
						_case_begin_1bd7228d9:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bd722862:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1bd721ac5:;
			++it;
			goto _iter_begin_1bd721ac5;
		}
		_iter_end_1bd721ac5:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1aa50867d_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50824e_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type141)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1aa508b34_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type141)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50824e_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type141)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type141)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type141)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1aa5097c2_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1aa4b710e_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1a690a941_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_4122_man, _1aa50a5a3_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_4122_man, _1aa50a5a3_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1aa4b710e_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1aa509bac_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1aa4b6a04_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1a690a941_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_11022_man, _1aa50a5a3_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_11022_man, _1aa50a5a3_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1aa4b6a04_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1aa50b8d4_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1bd88d615:;
	}
	_iter_end_1bd88d615:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1aa50bbe2_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bda028ab:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1bda02933;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bda02933:;
			{
				jule::I32 _887_caseN = _1aa50b8d4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1aa4c01b1_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bda02999:;
			{
				if ((_1aa50b8d4_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1aa4bead9_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bda02812:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1aa50beab_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bda07bad:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bda080a9:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bda07b47:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1aa507ccb_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1bda0d059:;
					{
						goto _iter_next_1bda0c4dc;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1bda0d103:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1bda11656;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1bda0c4dc;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1bda0d169:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1bda0c4dc;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bda0c4dc;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1aa507ccb_lower(_1383_c))) && (_1aa507ccb_lower(_1383_c) <= 'f'))) {
					_case_begin_1bda0d1d0:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1aa507ccb_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bda0c4dc;
					}
				}
				_match_end_1bda0ce6b:;
			};
			goto _iter_end_1bda0c4dc;
		}
	_iter_next_1bda0c4dc:;
	}
	_iter_end_1bda0c4dc:;;
	_julec_label_1bda11656:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1aa507ccb_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bda153c4;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1bda153c4:;
		}
		_iter_end_1bda153c4:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1aa50da07_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _1aa502c71_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bda1d3ee:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bda1d465:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1aa50cdbe_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1aa50cdbe_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bda1d4cb:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1aa50cdbe_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bda1d311:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1aa50de36_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _1aa502974_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bda22667:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bda226cd:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1aa50d1ee_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1aa50d1ee_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bda22744:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1aa50d1ee_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bda22579:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a940b54e_ConvError _1aa50e4ca_atofHex(_1aa502622_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a940b54e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((static_cast<jule::I32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1bda2601c:;
	}
	_iter_end_1bda2601c:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bda282e9:;
	}
	_iter_end_1bda282e9:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bda286c3:;
	}
	_iter_end_1bda286c3:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1aa502622_floatInfo_eq(&(*(_55613_flt)), _1aa502974_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1aa4b6a04_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1aa4b710e_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50e8a4_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a940b54e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa50bbe2_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa50beab_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50e4ca_atofHex(&(_1aa502974_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1aa50de36_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1aa509bac_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1aa509bac_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aa515ba7_decimal _6676_d = _1aa515ba7_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1aa50c671_set(&_6676_d, _1bb76481d_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aa50c9b2_floatBits(&_6676_d, &(_1aa502974_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1aa4b6a04_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50eae6_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa50bbe2_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa50beab_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50e4ca_atofHex(&(_1aa502c71_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1aa50da07_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1aa5097c2_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1aa5097c2_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1aa515ba7_decimal _7246_d = _1aa515ba7_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1aa50c671_set(&_7246_d, _1bb76481d_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1aa50c9b2_floatBits(&_7246_d, &(_1aa502c71_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1aa4b710e_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError _1aa50ee6a_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50e8a4_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1aa50eae6_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1aa5102de_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a940b54e_ConvError __jule_assign_result = _1aa50ee6a_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type141)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type141)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1aa510b19_ryuFtoaFixed32(_1aa503205_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1a691300e_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I32>(_632_b) - 25LL);
	};
	jule::I32 _742_q = (((-(_1aa512159_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513a51_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1aa514304_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1aa5118ea_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1aa5110ae_ryuFtoaFixed64(_1aa503205_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1a69132c8_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I32>(_1322_b) - 55LL);
	};
	jule::I32 _1462_q = (((-(_1aa512159_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513e80_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1aa514304_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1aa5118ea_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1aa5118ea_formatDecimal(_1aa503205_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1aa511400_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bdb77beb:;
	}
	_iter_end_1bdb77beb:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1bdb7ada8:;
	}
	_iter_end_1bdb7ada8:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1bdb81870:;
	}
	_iter_end_1bdb81870:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1aa511dc3_ryuFtoaShortest(_1aa503205_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1aa502622_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a690c536_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1aa512ea1_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1aa512852_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1aa512ea1_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1aa512159_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1aa502622_floatInfo_eq(&(*(_26168_flt)), _1aa502974_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513a51_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513a51_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513a51_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513e80_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513e80_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa513e80_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1aa514304_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1aa514304_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1aa514304_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1aa512ea1_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1aa512159_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1aa512423_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1aa512852_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1aa502622_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1aa512ea1_ryuDigits(_1aa503205_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa5145bd_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa5145bd_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1aa5145bd_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1aa513622_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1aa513622_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1bdb9e6b2:;
		}
		_iter_end_1bdb9e6b2:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1aa513622_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bdba02ea:;
	}
	_iter_end_1bdba02ea:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1bdba2099:;
	}
	_iter_end_1bdba2099:;;
}



inline void _1aa513622_ryuDigits32(_1aa503205_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1bdba493c;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1bdba493c:;
	}
	_iter_end_1bdba493c:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1bdbaa9ed:;
	}
	_iter_end_1bdbaa9ed:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1aa513a51_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1aa50a5a3_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1aa512423_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1aa513e80_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1aa50a5a3_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1aa512423_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a6914065_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1aa514304_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1bdbb8a72:;
	}
	_iter_end_1bdbb8a72:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1aa5145bd_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a691586e_Mul64(({ jule::U64 __jule_x = _60214_x; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _1aa517505_trim(_1aa515ba7_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bdbbc35b:;
	}
	_iter_end_1bdbbc35b:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1aa5177e1_rightShift(_1aa515ba7_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1bdbc01d8:;
				}
				_iter_end_1bdbc01d8:;;
				goto _iter_end_1bdbbdaee;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1bdbbdaee:;
	}
	_iter_end_1bdbbdaee:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1bdbc15d5:;
	}
	_iter_end_1bdbc15d5:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1bdbc397d:;
	}
	_iter_end_1bdbc397d:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1aa517505_trim(_28420_a);
}



inline jule::Bool _1aa517c97_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1bdbc66b7:;
	}
	_iter_end_1bdbc66b7:;;
	return false;;
}



inline void _1aa518050_leftShift(_1aa515ba7_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1aa5155be_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1aa517c97_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1aa5155be_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1bdbc9bd7:;
	}
	_iter_end_1bdbc9bd7:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1bdbcc118:;
	}
	_iter_end_1bdbcc118:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1aa517505_trim(_35219_a);
}



inline jule::Bool _1aa5183c4_shouldRoundUp(_1aa515ba7_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1aa519a9b_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1aa51a56e_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa51ad99_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1aa519e64_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1aa51a56e_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1aa51ad99_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1aa51a22d_Itoa(jule::I32 _819_i) {
	return _1aa519e64_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1aa51a56e_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1bb764d6d_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1aa51a805_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1aa51ad99_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1bdc13209:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = (jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_1bdc15d33:;
							}
							_iter_end_1bdc15d33:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(_1339_us << 1LLU) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_1bdc153e8:;
					}
					_iter_end_1bdc153e8:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = (jule::U32)(({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1bdc151d9:;
				}
				_iter_end_1bdc151d9:;;
				jule::U32 _1643_is = (jule::U32)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1aa51a805_isPowerOfTwo(_10541_base)) {
			_case_begin_1bdc13627:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1a690b887_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1bdc1cc91:;
				}
				_iter_end_1bdc1cc91:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1bdc1268c:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1bdc13407:;
				}
				_iter_end_1bdc13407:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1bdc12978:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1bb764d6d_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1aa51c890_Throw(jule::Str _910_msg) {
	jule::println(_1bbdd1440_toStr(_910_msg));
	_1a6b4363a_Exit(1LL);
}



inline jule::Bool _1abc2c2bd_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_1abc2565c_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc7b96a:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1bdc7b96a:;
			++it;
			goto _iter_begin_1bdc7b96a;
		}
		_iter_end_1bdc7b96a:;
	};
	return false;;
}



inline jule::Bool _1abc2c5cb_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_1abc2598c_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc7c729:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1bdc7c729:;
			++it;
			goto _iter_begin_1bdc7c729;
		}
		_iter_end_1bdc7c729:;
	};
	return false;;
}



inline jule::Bool _1abc2cbd6_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1abc2ce6c_IsRawStr(_36310_k)));;
}



inline jule::Bool _1abc2ce6c_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1abc2d236_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1abc2db1b_IsFloat(jule::Str _37912_k) {
	if (_1a8e45ee0_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1a8e4b39c_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1a8e4b39c_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1abc2ddd5_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1abc2e468_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1abc2e732_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1abc2ecb5_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1abc25393_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc84d19:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1bdc84d19:;
			++it;
			goto _iter_begin_1bdc84d19;
		}
		_iter_end_1bdc84d19:;
	};
	return false;;
}



inline jule::Bool _1abc302b0_IsLetter(jule::I32 _42813_r) {
	return _1a8dccd89_IsLetter(_42813_r);;
}



inline jule::Bool _1abc30733_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1abc34d42_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc85b3e:;
		if (it != expr_end) {
			_1abc34957_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1bdc85b3e:;
			++it;
			goto _iter_begin_1bdc85b3e;
		}
		_iter_end_1bdc85b3e:;
	};
	return false;;
}



inline jule::Bool _1abc309ec_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1abc30cb6_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1abc31080_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1abc31349_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1bdc88ceb:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1bdc88d95:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1bdc88e1c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdc877de:;
			{
				return false;;
			}
		}
		_match_end_1bdc88625:;
	};
}



inline jule::Bool _1abc31613_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1abc318cc_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_1abc26064_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc8c151:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1bdc8c151:;
			++it;
			goto _iter_begin_1bdc8c151;
		}
		_iter_end_1bdc8c151:;
	};
	return false;;
}



inline jule::Bool _1abc31b96_IsAssignOp(jule::U32 _50415_id) {
	if (_1abc318cc_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1abc26350_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc8d152:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1bdc8d152:;
			++it;
			goto _iter_begin_1bdc8d152;
		}
		_iter_end_1bdc8d152:;
	};
	return false;;
}



inline _1a6a6bde3_Log _1abc356b1_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1abc32636_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1a6a6c355_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1abc35a79_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc98789:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1bdc98789:;
			++it;
			_1156_i++;
			goto _iter_begin_1bdc98789;
		}
		_iter_end_1bdc98789:;
	};
	return true;;
}



inline jule::Str _1abc35ded_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1abc309ec_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1bdc9ba9a;
			};
		}
	_iter_next_1bdc9ba9a:;
	}
	_iter_end_1bdc9ba9a:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1abc362b6_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _1abc35ded_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1abc3663a_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1bdc9dc12:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1abc309ec_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1bdc9e707:;
					{
						goto _iter_next_1bdc9d23e;
					}
				}
				else if (_1abc37ebb_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1bdc9e7a1:;
					{
						return _1abc362b6_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1bdc9e680:;
					{
						goto _iter_end_1bdc9d23e;
					}
				}
				_match_end_1bdc9e619:;
			};
		}
	_iter_next_1bdc9d23e:;
	}
	_iter_end_1bdc9d23e:;;
	return jule::Str();;
}



inline jule::Str _1abc369ae_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _1abc35ded_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1abc36d33_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _1abc35ded_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1abc372b7_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1bb764d6d_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1bb764d6d_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1abc35ded_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1abc309ec_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1bdca2452;
			};
		}
	_iter_next_1bdca2452:;
	}
	_iter_end_1bdca2452:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1abc37509_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_1bdca46c9:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1bdca5444:;
					{
						__jule_func_result = _1abc372b7_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1bdca54dd:;
					{
						goto _iter_next_1bdca481c;
					}
				}
				else if (_1abc37b47_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1bdca5554:;
					{
						__jule_func_result = _1abc35ded_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1abc309ec_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1bdca55ba:;
					{
						goto _iter_end_1bdca481c;
					}
				}
				_match_end_1bdca5367:;
			};
		}
	_iter_next_1bdca481c:;
	}
	_iter_end_1bdca481c:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1abc377c3_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1abc35a79_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1abc30cb6_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1bdca7de7;
			};
		}
	_iter_next_1bdca7de7:;
	}
	_iter_end_1bdca7de7:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1abc37b47_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1abc37ebb_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1abc38340_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1bdcaaa32:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1abc309ec_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1bdcaba99:;
					{
						goto _iter_next_1bdcaa8cd;
					}
				}
				else if (_1abc37ebb_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1bdcabb43:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bdcaba22:;
					{
						goto _iter_end_1bdcaa8cd;
					}
				}
				_match_end_1bdcab9ab:;
			};
		}
	_iter_next_1bdcaa8cd:;
	}
	_iter_end_1bdcaa8cd:;;
	return false;;
}



inline jule::Bool _1abc386b4_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1bdcacbcc:;
			{
				goto _case_begin_1bdcab2e6;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1bdcab2e6:;
			{
				goto _case_begin_1bdcacc65;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1bdcacc65:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bdcab24c:;
			{
				return true;;
			}
		}
		_match_end_1bdcab170:;
	};
}



inline jule::Bool _1abc38a38_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1bdcae805:;
			{
				goto _case_begin_1bdcae86b;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1bdcae86b:;
			{
				goto _case_begin_1bdcae8d2;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1bdcae8d2:;
			{
				goto _case_begin_1bdcae959;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1bdcae959:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bdcae739:;
			{
				return true;;
			}
		}
		_match_end_1bdcae2d8:;
	};
}



inline jule::Str _1abc39033_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1abc372b7_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1abc37b47_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1abc35ded_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1abc31080_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1bdcb8c1b;
			};
		}
	_iter_next_1bdcb8c1b:;
	}
	_iter_end_1bdcb8c1b:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1abc3920e_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_1bdcbc8ce:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1abc386b4_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1bdcbd54a:;
					{
						__jule_func_result = _1abc36d33_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1abc38a38_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1bdcbd5e4:;
					{
						__jule_func_result = _1abc369ae_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1abc37ebb_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1bdcbd65a:;
					{
						__jule_func_result = _1abc362b6_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1abc38340_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1bdcbd6c1:;
					{
						__jule_func_result = _1abc3663a_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1abc31349_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1bdcbd737:;
					{
						goto _iter_end_1bdcbc978;
					}
				}
				_match_end_1bdcbd45c:;
			};
		}
	_iter_next_1bdcbc978:;
	}
	_iter_end_1bdcbc978:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1abc39561_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1abc31349_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bdcc00c9:;
	}
	_iter_end_1bdcc00c9:;;
	__jule_func_result=_1bb764d6d_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1abc3982a_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1abc39561_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1abc39ae4_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1abc39561_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1abc39dad_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1abc39561_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1abc3a177_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1abc31080_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1abc31080_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1abc31080_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1bb764d6d_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a6a6bde3_Log> _1abc4016b_Lex(jule::Ptr<_1abc32636_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1abc3a8e7_lex _8126_lex = _1abc3a8e7_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1abc2ba81_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1a6a6bde3_Log>(nullptr)};;
	_1abc3d741_newLine(&_8126_lex);
	_1abc3b51e_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1aca927b4_lshiftUnsig(_1aca3208e_Const* _58821_c, _1aca3208e_Const* _58832_x) {
	jule::U64 _5892_l = _1aca8b208_AsU64(_58821_c);;
	jule::U64 _5902_r = _1aca8b208_AsU64(_58832_x);;
	_1aca8ba00_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1aca92ae4_rshiftUnsig(_1aca3208e_Const* _59421_c, _1aca3208e_Const* _59432_x) {
	jule::U64 _5952_l = _1aca8b208_AsU64(_59421_c);;
	jule::U64 _5962_r = _1aca8b208_AsU64(_59432_x);;
	_1aca8ba00_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1ac9231b1_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1bddb6ce7:;
			{
				return _1ac9226dd_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bddba724:;
			{
				return _1ac922985_SysUint;;
			}
		}
		else {
			_case_begin_1bddb77ed:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bddba955:;
	};
}



inline jule::I32 _1ac92347a_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bddbb6e2:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bddbbb54:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bddbbbba:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bddbb758:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bddbb7be:;
			{
				return _1ac92249b_BitSize;;
			}
		}
		else {
			_case_begin_1bddbba66:;
			{
				return -1LL;;
			}
		}
		_match_end_1bddbb637:;
	};
}



inline jule::Str _1ac9237bb_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bddbeb46:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bddbe948:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bddbe9ae:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bddbebac:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1bddbe85a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bddbe43c:;
	};
}



inline jule::Str _1ac923a52_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bddc140b:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bddc1472:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bddc14d8:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bddc154e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1bddbec34:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bddc1021:;
	};
}



inline jule::Str _1ac923d1b_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bddc2e24:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bddc2be3:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1bddc0031:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bddc27d6:;
	};
}



inline jule::Bool _1ac924921_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1aa5102de_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1ac924bda_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bd04c137:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bd04b90b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bd04b7eb:;
	};
}



inline jule::I32 _1ac924ea4_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1bde24a14:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1bde24b02:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1bde24b68:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bde24085:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bde245d5:;
	};
}



inline jule::I32 _1ac92526d_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1bde265e8:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1bde257d4:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1bde2584a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bde2576d:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bde25bbe:;
	};
}



inline void _1ac925416_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1a8e5abd6_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1bde27022:;
				{
					_1ac92249b_BitSize=64LLU;
					_1ac9226dd_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1ac922985_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1bde2764e:;
				{
					_1ac92249b_BitSize=32LLU;
					_1ac9226dd_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1ac922985_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1bde27561:;
		};
	};
}



inline void _1ac92558c_init(void) {
	_1ac925416_UpdateTarget();
}



inline jule::I64 _1ac929151_MinI(jule::Str _6113_k) {
	_6113_k=_1ac9231b1_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bde29ac4:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bde29dd2:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bde29e48:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bde29eae:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1bde2697d:;
			{
				return 0LL;;
			}
		}
		_match_end_1bde26a49:;
	};
}



inline jule::I64 _1ac92945e_MaxI(jule::Str _7913_k) {
	_7913_k=_1ac9231b1_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bde2b4ee:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bde2b862:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bde2b8d9:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bde2b961:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1bde2ae5a:;
			{
				return 0LL;;
			}
		}
		_match_end_1bde2ade4:;
	};
}



inline jule::U64 _1ac929728_MaxU(jule::Str _9713_k) {
	_9713_k=_1ac9231b1_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bde2ce7e:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bde2d2e2:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1bde2d369:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1bde2d3e1:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1bde2c8da:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bde2c874:;
	};
}



inline jule::F64 _1ac929a69_Min(jule::Str _11512_k) {
	_11512_k=_1ac9231b1_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1ac929151_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bde309ba:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bde2ee1a:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bde3017e:;
			{
				return 0LL;;
			}
		}
		_match_end_1bde2eda4:;
	};
}



inline jule::F64 _1ac929d00_Max(jule::Str _13312_k) {
	_13312_k=_1ac9231b1_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1ac92945e_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1ac929728_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bde32ec8:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bde323a1:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bde3268c:;
			{
				return 0LL;;
			}
		}
		_match_end_1bde3233a:;
	};
}



inline jule::Bool _1ac92ae22_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1ac92b230_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1ac92b4e9_IsInt(jule::Str _4610_k) {
	return (_1ac92ae22_IsSigInt(_4610_k) || _1ac92b230_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ac92b83a_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1ac92bac1_IsNum(jule::Str _5610_k) {
	return (_1ac92b4e9_IsInt(_5610_k) || _1ac92b83a_IsFloat(_5610_k));;
}



inline jule::Bool _1ac92bd8a_IsSigNum(jule::Str _6113_k) {
	return (_1ac92ae22_IsSigInt(_6113_k) || _1ac92b83a_IsFloat(_6113_k));;
}



inline jule::Bool _1ac9a50de_FindModuleFile(jule::Slice<_1a6b89818_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde38dbe:;
		if (it != expr_end) {
			_1a6b89818_Dir *_159_d = it;
			{
				if (((!(_1a6b333c7_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1bde38dbe:;
			++it;
			goto _iter_begin_1bde38dbe;
		}
		_iter_end_1bde38dbe:;
	};
	return false;;
}



inline jule::Str _1ac9a53b9_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_1a6b89818_Dir> _287_dirents = ({
				auto except = static__1a8e5374a_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bde38d8b;
				} jule::Slice<_1a6b89818_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _1ac9a50de_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I32 _373_n = _2627_path.len();;
			_2627_path=_1a8e52edb_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_1bde38d8b;
			};
		}
	_iter_next_1bde38d8b:;
	}
	_iter_end_1bde38d8b:;;
	return jule::Str();;
}



inline jule::Slice<_1a6a6bde3_Log> _1ac9a5683_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__1a6b318e2_Read(_1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1a6a6bde3_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _1a8e4d844_Trim(_1bb764aa4_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1a6a6bde3_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1ac9a5e25_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1a8e4486d_IsUpper(_142_r);;
}



inline jule::Bool _1acb74962_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1acb5b3e9_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1acb772d3_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1acb76887_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1acb76bc8_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde463a4:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1bde463a4;
				};
			}
			_iter_next_1bde463a4:;
			++it;
			goto _iter_begin_1bde463a4;
		}
		_iter_end_1bde463a4:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1acb77679_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1bb48ceb4_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1bde4751a:;
	}
	_iter_end_1bde4751a:;;
	return _1bb764d6d_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1acb76e5e_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bde4a892:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bde4b09b:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bde4b112:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bde4b178:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bde4b1de:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bde4b266:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bde4b2dd:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bde4b365:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bde4b3dc:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bde4b464:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bde4ae14:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1acb772d3_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1acb76e5e_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bde510a1:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1aa50867d_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bde513ae:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1aa50867d_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bde51436:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1aa50867d_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1bde4eac7:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1aa50867d_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1bde4e742:;
	};
}



inline void _1acb77679_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1acb772d3_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1bb48ceb4_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1acc381eb_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1bde58a15:;
	}
	_iter_end_1bde58a15:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1acc3ec91_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48bac8_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1bde5ab05:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bde5b71b:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1bde5b573:;
			};
		}
	_iter_next_1bde5a71a:;
	}
	_iter_end_1bde5a71a:;;
	return nullptr;;
}



inline void _1acc4007c_FmtByDefault(_1a6a5cb3c_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1a6a5db1b_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type142) {
			_case_begin_1bde5a9d4:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa503788_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type142)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bde5d597:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa503788_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1bde5d60d:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519e64_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type143)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_1bde5d674:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519e64_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bde5d6da:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519e64_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bde5cd16:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519e64_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type140) {
			_case_begin_1bde5cd8d:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type140)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_1bde5ce15:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_1bde5d94e:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519a9b_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bde5d9b5:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1aa519a9b_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bde5da2b:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bde5da92:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1a6a5db1b_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1a6a5db1b_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1bde5c772:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_4822_buf, _1bbdce262_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1bde5c70b:;
	};
}



inline void _1acc4049a_applyFmtByDefault(_1a6a5cb3c_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1acc4007c_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1acc408b8_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a6a5cb3c_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1acc4049a_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1a6a5db1b_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a6a5d7ca_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1acc40c3c_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1bb76481d_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _1acc381eb_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1a6a5cb3c_Builder _1276_buf = static__1a6a5d489_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1acc381eb_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1a6a5d7ca_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1acc3ec91_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1bde6aa8d;
			};
			_1acc408b8_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1a6a5d7ca_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1bde6aa8d;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1bde6aa8d:;
	}
	_iter_end_1bde6aa8d:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1a6a5d7ca_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1a6a5ee4c_Buf(&_1276_buf);;
}



inline jule::Str _1acc42dd7_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1bb764d6d_StrFromBytes(_1acc40c3c_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1acaa2351_Fn> _1abd166c6_runtimeFindFn(jule::Ptr<_1ac98b8cd_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1acaa2351_Fn> _126_f = _1ac98ced9_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1ac9ce129_Struct> _1abd16c26_runtimeFindStruct(jule::Ptr<_1ac98b8cd_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1ac9ce129_Struct> _256_f = _1ac98cadd_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1acaa76db_parameterUsesGenerics(jule::Ptr<_1acaa42a9_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _39546_generics) {
	if (_1acaa0ecb_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1acbdc04b_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_1acb8cded_Data> _1ac951ba1_buildAsComptimeMethodData(jule::Ptr<_1acaa540e_FnIns>* _203035_f) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ac951db0_findComptimePackage(jule::Ptr<_1ac9a8c2a_sema>* _203829_s) {
	return _1ac9a9203_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>>((void*)__jule_anon1be332174, nullptr, nullptr));;
}



inline jule::Ptr<_1acb8cded_Data> _1ac952234_buildComptimeTypeInfoData(jule::Ptr<_1ac9a8c2a_sema>* _204435_s, jule::Ptr<_1acbc0d98_Type>* _204450_t) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1ac9a8598_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1ac952575_buildComptimeValue(jule::Ptr<_1acb8cded_Data>* _205228_d) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac9440c2_comptimeValue>(_1ac9440c2_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Str _1ac955446_toStrConstraints(jule::Ptr<_1acbbe4b2_InsGeneric> _14321_g) {
	_1a6a5cb3c_Builder _1446_sb = static__1a6a5d489_New(128LL);;
	{
		auto expr = &((*_14321_g.alloc)._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd467de3:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1acbc0d98_Type> *_1459_c = it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_1446_sb, _1acbc1294_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1a6a5db1b_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1bd467de3:;
			++it;
			_1456_i++;
			goto _iter_begin_1bd467de3;
		}
		_iter_end_1bd467de3:;
	};
	return _1a6a5e49b_Str(&_1446_sb);;
}



inline jule::Bool _1ac95580e_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1acbc0d98_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1bd469c6e:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _1573_prim = _1acbc354e_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1ac92bd8a_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1bd469cd5:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _1633_prim = _1acbc354e_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1ac92b230_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1bd469d5c:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _1693_prim = _1acbc354e_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1ac92b83a_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1bd469dd4:;
			{
				jule::Ptr<_1acbc8eb1_Prim> _1753_prim = _1acbc354e_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1ac92bac1_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1bd46a0c1:;
			{
				return _1acbc277e_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1bd46a137:;
			{
				return (!(_1acbc277e_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1bd46a19d:;
			{
				return _1acbc24e8_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1bd46a214:;
			{
				return _1acbc2a15_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bd468553:;
			{
				return false;;
			}
		}
		_match_end_1bd4686b8:;
	};
}



inline jule::Bool _1ac955ac8_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1ac95380c_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4a3449:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1be4a3449:;
			++it;
			goto _iter_begin_1be4a3449;
		}
		_iter_end_1be4a3449:;
	};
	return false;;
}



inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac9584b0_newScopeCheckerBase(jule::Ptr<_1ac9a8c2a_sema>* _3229_s, jule::Ptr<_1acaa540e_FnIns> _3243_owner) {
	return jule::new_ptr<_1ac9631bd_scopeChecker>(_1ac9631bd_scopeChecker{._field_calledFrom=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1ac9631bd_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1acaa8654_SymTab>(_1acaa8654_SymTab{._field_File=jule::Ptr<_1abc32636_Fileset>(nullptr), ._field_Passes=jule::Slice<_1ac97ada6_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1acaa2351_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1acaaca65_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1acab021b_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1acab1926_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1ac956447_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_tree=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1ac9621cd_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1acb3d420_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1ac961d04_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1ac9631bd_scopeChecker> _1ac958878_newScopeChecker(jule::Ptr<_1ac9a8c2a_sema>* _4025_s, jule::Ptr<_1acaa540e_FnIns> _4039_owner) {
	jule::Ptr<_1ac9631bd_scopeChecker> _416_base = _1ac9584b0_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1ac961d04_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1ac961d04_scopeLabel> _1ac958bec_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1ac9631bd_scopeChecker> _5037_scope) {
	jule::Ptr<_1ac961d04_scopeLabel> _516_label = _1ac96758a_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*_5037_scope.alloc)._field_parent;
			_516_label=_1ac96758a_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1be4be09c:;
	}
	_iter_end_1be4be09c:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1acb8cded_Data>> _1ac95903d_getDatasFromTupleData(jule::Ptr<_1acb8cded_Data>* _6231_d) {
	if ((_1acbc5375_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1be4c1d4c:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1aca9a723_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1be4c0de5:;
				{
					jule::Ptr<_1acbce0a4_Tuple> _688_t = _1acbc5375_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_1acb8cded_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb8cded_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be4c26ee:;
						if (it != expr_end) {
							jule::Ptr<_1acbc0d98_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1acb8cded_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})); };
							}
							_iter_next_1be4c26ee:;
							++it;
							goto _iter_begin_1be4c26ee;
						}
						_iter_end_1be4c26ee:;
					};
					return _698_r;;
				}
			}
			_match_end_1be4c0d7e:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb8cded_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1ac9597ad_checkMut(jule::Ptr<_1ac9a8c2a_sema>* _9718_s, jule::Ptr<_1acb8cded_Data>* _9729_left, jule::Ptr<_1acb8cded_Data> _9746_right, jule::Ptr<_1abc2ba81_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1be4cbd9b:;
			{
				_1ac9abb2e_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1acbc277e_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_1be4cc2a8:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1acbc4ac2_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1ac9abb2e_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be4cbd24:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be4cbc47:;
	};
}



inline jule::Bool _1ac959c97_checkAssign(jule::Ptr<_1ac9a8c2a_sema>* _11621_s, jule::Ptr<_1acb8cded_Data>* _11636_left, jule::Ptr<_1acb8cded_Data> _11653_right, jule::Ptr<_1abc2ba81_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1acaa540e_FnIns> _1172_f = _1acbc483b_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1ac9abb2e_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1acb8d838_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1be4d2a3e:;
			{
				_1ac9abb2e_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1ac9abe92_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1be4d2ad8:;
			{
				_1ac9abb2e_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1ac9597ad_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1be4d2b60:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be4d29c8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be4d2874:;
	};
}



inline jule::Bool _1ac95a171_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1be4ca2ea:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1ac9bc1b1_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1be4d51c3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1be4d5091:;
			{
				return false;;
			}
		}
		_match_end_1be4d502a:;
	};
}



inline jule::Bool _1ac95a3b3_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41 || _match_expr.type == &__jule_any_type44) {
			_case_begin_1be4d5239:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1be4db707:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1acb8cded_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1be4e6e71:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1be4e6bb8:;
						{
							return false;;
						}
					}
					_match_end_1be4e6b52:;
				};
			}
		}
		else {
			_case_begin_1be4dba15:;
			{
				return false;;
			}
		}
		_match_end_1be4da690:;
	};
}



inline jule::U32 _1ac97591c_removeEqFromOp(jule::U32 _216519_op) {
	{
		auto &_match_expr{ _216519_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1be4e823b:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1be4ea32b:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1be4ea392:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1be4e82a2:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1be4e8329:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1be4e83a1:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1be4eb97b:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1be4eba03:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1be4eba7a:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1be4eb717:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1be4ea02e:;
			{
				return _216519_op;;
			}
		}
		_match_end_1be4ea705:;
	};
}



inline void _1ac975b4d_makeComptimeRange(jule::Ptr<_1acb8cded_Data>* _219427_d) {
	{
		
		if ((_1acbc5892_comptimeStructFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be5004eb:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc5892_comptimeStructFields((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc5dae_comptimeEnumFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be50040d:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc5dae_comptimeEnumFields((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc6b7e_comptimeTypeInfos((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be500474:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc6b7e_comptimeTypeInfos((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc63cb_comptimeParams((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be4e7c1e:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc63cb_comptimeParams((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc719b_comptimeStatics((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be4e7c85:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc719b_comptimeStatics((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc8202_comptimeFiles((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be4e7ceb:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc8202_comptimeFiles((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else if ((_1acbc7bd5_comptimeDecls((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be5009b3:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac92d0bc_comptimeRange>(_1ac92d0bc_comptimeRange{._field_kind=jule::Trait(_1acbc7bd5_comptimeDecls((*((*(_219427_d))))._field_Type), (jule::Trait::Type*)&_1ac92cd9c_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1be4e7b20:;
			{
				(*((*(_219427_d))))._field_Decl=true;
			}
		}
		_match_end_1be5000bc:;
	};
}



inline jule::Bool _1ac975e17_canComptimeMatch(jule::Ptr<_1acb8cded_Data>* _221726_d) {
	if ((!(_1acb8b4b2_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1acb8d838_IsConst((*(_221726_d)).ptr()) || (_1acbc6e15_comptimeTypeInfo((*((*(_221726_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1ac9761d1_stmtIsDef(jule::Any* _222515_stmt) {
	{
		auto &_match_expr{ (*(_222515_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be509879:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1be50be64:;
			{
				jule::Ptr<_1ac95ea49_MultiAssign> _22303_ma = (*(_222515_stmt)).cast_ptr<_1ac95ea49_MultiAssign>(&__jule_any_type44);;
				return ((*(_22303_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1be50ba24:;
			{
				return false;;
			}
		}
		_match_end_1be50b98b:;
	};
}



inline jule::I32 _1ac976555_countMatchType(jule::Ptr<_1ac960286_Match>* _223720_m, jule::Ptr<_1acbc0d98_Type>* _223732_t) {
	jule::I32 _22386_n = 0LL;;
	_julec_label_1be50d5c5:;
	{
		auto expr = &((*((*(_223720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be50da04:;
		if (it != expr_end) {
			jule::Ptr<_1ac960cae_Case> *_22409_c = it;
			{
				if (((*(_22409_c)) == nullptr)) {
					goto _iter_next_1be50da04;
				};
				{
					auto expr = &((*((*(_22409_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be50e87e:;
					if (it != expr_end) {
						jule::Ptr<_1acb8cded_Data> *_224410_expr = it;
						{
							if (((*(_224410_expr)) == nullptr)) {
								goto _iter_end_1be50da04;
							};
							if (_1acbc15d5_Equal((*(_223732_t)), (*((*(_224410_expr))))._field_Model.cast_ptr<_1acbc0d98_Type>(&__jule_any_type87))) {
								(_22386_n)++;
							};
						}
						_iter_next_1be50e87e:;
						++it;
						goto _iter_begin_1be50e87e;
					}
					_iter_end_1be50e87e:;
				};
			}
			_iter_next_1be50da04:;
			++it;
			goto _iter_begin_1be50da04;
		}
		_iter_end_1be50da04:;
	};
	return _22386_n;;
}



inline jule::Ptr<_1acbc85a9_TypeSym> _1ac97b219_buildType(jule::Ptr<_1abc4259c_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr)});;
}



inline jule::Ptr<_1acb8e075_Value> _1ac97b527_buildExpr(jule::Ptr<_1ac9b2a47_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_1acb8cded_Data>(nullptr)});;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac97b7e1_buildTypeAlias(jule::Ptr<_1ac9c530c_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_1ac97b219_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1ac9cb203_Field> _1ac97bb32_buildField(jule::Ptr<_1ac9c892b_FieldDecl> _9819_decl) {
	return jule::new_ptr<_1ac9cb203_Field>(_1ac9cb203_Field{._field_Owner=jule::Ptr<_1ac9ce129_Struct>(nullptr), ._field_Token=(*(_9819_decl))._field_Token, ._field_Public=(*_9819_decl.alloc)._field_Public, ._field_Mutable=(*_9819_decl.alloc)._field_Mutable, ._field_Ident=(*_9819_decl.alloc)._field_Ident, ._field_TypeSym=_1ac97b219_buildType((*_9819_decl.alloc)._field_Kind), ._field_Default=(*_9819_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1ac9cb203_Field>> _1ac97bdb8_buildFields(jule::Slice<jule::Ptr<_1ac9c892b_FieldDecl>>* _10921_decls) {
	jule::Slice<jule::Ptr<_1ac9cb203_Field>> _1106_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9cb203_Field>>::alloc(0LL, (*(_10921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9cb203_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be468a91:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c892b_FieldDecl> _11114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1ac9cb203_Field>> &__jule_push_dest = _1106_fields; __jule_push_dest.push(_1ac97bb32_buildField(_11114_decl)); };
			}
			_iter_next_1be468a91:;
			++it;
			goto _iter_begin_1be468a91;
		}
		_iter_end_1be468a91:;
	};
	return _1106_fields;;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac97c182_buildStruct(jule::Ptr<_1ac9c9322_StructDecl> _11720_decl) {
	return jule::new_ptr<_1ac9ce129_Struct>(_1ac9ce129_Struct{._field_sema=jule::Ptr<_1ac9a8c2a_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr), ._field_Token=(*(_11720_decl))._field_Token, ._field_Ident=(*_11720_decl.alloc)._field_Ident, ._field_Fields=_1ac97bdb8_buildFields(&((*_11720_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1acaa2351_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr), ._field_Public=(*_11720_decl.alloc)._field_Public, ._field_Binded=(*_11720_decl.alloc)._field_Binded, ._field_Directives=(*_11720_decl.alloc)._field_Directives, ._field_Generics=(*_11720_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1acaaca65_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1ac9d1e84_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1acaa087c_Param> _1ac97c44b_buildParam(jule::Ptr<_1ac9be04d_ParamDecl> _12919_decl) {
	return jule::new_ptr<_1acaa087c_Param>(_1acaa087c_Param{._field_Token=(*(_12919_decl))._field_Token, ._field_Mutable=(*_12919_decl.alloc)._field_Mutable, ._field_Variadic=(*_12919_decl.alloc)._field_Variadic, ._field_Reference=(*_12919_decl.alloc)._field_Reference, ._field_TypeSym=_1ac97b219_buildType((*_12919_decl.alloc)._field_Kind), ._field_Ident=(*_12919_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1acaa087c_Param>> _1ac97c825_buildParams(jule::Slice<jule::Ptr<_1ac9be04d_ParamDecl>>* _14021_decls) {
	jule::Slice<jule::Ptr<_1acaa087c_Param>> _1416_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa087c_Param>>::alloc(0LL, (*(_14021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa087c_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be46cad9:;
		if (it != expr_end) {
			jule::Ptr<_1ac9be04d_ParamDecl> _14214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acaa087c_Param>> &__jule_push_dest = _1416_params; __jule_push_dest.push(_1ac97c44b_buildParam(_14214_decl)); };
			}
			_iter_next_1be46cad9:;
			++it;
			goto _iter_begin_1be46cad9;
		}
		_iter_end_1be46cad9:;
	};
	return _1416_params;;
}



inline jule::Ptr<_1acaa02b6_RetType> _1ac97ca67_buildRetType(jule::Ptr<_1abc45490_RetTypeDecl> _14821_decl) {
	if ((((*(_14821_decl))._field_Idents == nullptr) && ((*_14821_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1acaa02b6_RetType>(_1acaa02b6_RetType{._field_TypeSym=_1ac97b219_buildType((*_14821_decl.alloc)._field_Kind), ._field_Idents=(*_14821_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac97cd31_buildFunc(jule::Ptr<_1ac9c04a0_FnDecl> _15818_decl) {
	return jule::new_ptr<_1acaa2351_Fn>(_1acaa2351_Fn{._field_sema=jule::Ptr<_1ac9a8c2a_sema>(nullptr), ._field_Token=(*(_15818_decl))._field_Token, ._field_Global=(*_15818_decl.alloc)._field_Global, ._field_Unsafety=(*_15818_decl.alloc)._field_Unsafety, ._field_Public=(*_15818_decl.alloc)._field_Public, ._field_Binded=(*_15818_decl.alloc)._field_Binded, ._field_Statically=(*_15818_decl.alloc)._field_Statically, ._field_Exceptional=(*_15818_decl.alloc)._field_Exceptional, ._field_Ident=(*_15818_decl.alloc)._field_Ident, ._field_Directives=(*_15818_decl.alloc)._field_Directives, ._field_Scope=(*_15818_decl.alloc)._field_Scope, ._field_Generics=(*_15818_decl.alloc)._field_Generics, ._field_Result=_1ac97ca67_buildRetType((*_15818_decl.alloc)._field_Result), ._field_Params=_1ac97c825_buildParams(&((*_15818_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1ac9ce129_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1acaa540e_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1acaa2351_Fn>> _1ac97d0ea_buildMethods(jule::Slice<jule::Ptr<_1ac9c04a0_FnDecl>>* _17622_decls) {
	jule::Slice<jule::Ptr<_1acaa2351_Fn>> _1776_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(0LL, (*(_17622_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa2351_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17622_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be472b66:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c04a0_FnDecl> _17814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acaa2351_Fn>> &__jule_push_dest = _1776_methods; __jule_push_dest.push(_1ac97cd31_buildFunc(_17814_decl)); };
			}
			_iter_next_1be472b66:;
			++it;
			goto _iter_begin_1be472b66;
		}
		_iter_end_1be472b66:;
	};
	return _1776_methods;;
}



inline jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>> _1ac97d3b4_buildTraitInherits(jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>* _18428_inherits) {
	jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>> _1856_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>>::alloc(0LL, (*(_18428_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc85a9_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18428_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be473caa:;
		if (it != expr_end) {
			jule::Ptr<_1abc4259c_TypeDecl> _18614_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1acbc85a9_TypeSym>> &__jule_push_dest = _1856_symbols; __jule_push_dest.push(_1ac97b219_buildType(_18614_it)); };
			}
			_iter_next_1be473caa:;
			++it;
			goto _iter_begin_1be473caa;
		}
		_iter_end_1be473caa:;
	};
	return _1856_symbols;;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac97d67d_buildTrait(jule::Ptr<_1ac9c9a5e_TraitDecl> _19219_decl) {
	return jule::new_ptr<_1acaaca65_Trait>(_1acaaca65_Trait{._field_Token=(*(_19219_decl))._field_Token, ._field_Ident=(*_19219_decl.alloc)._field_Ident, ._field_Public=(*_19219_decl.alloc)._field_Public, ._field_Inherits=_1ac97d3b4_buildTraitInherits(&((*_19219_decl.alloc)._field_Inherits)), ._field_Methods=_1ac97d0ea_buildMethods(&((*_19219_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1ac9ce129_Struct>>(nullptr)});;
}



inline jule::Ptr<_1acaae6b0_EnumItem> _1ac97d947_buildEnumItem(jule::Ptr<_1ac9c6b16_EnumItemDecl> _20222_decl) {
	return jule::new_ptr<_1acaae6b0_EnumItem>(_1acaae6b0_EnumItem{._field_Token=(*(_20222_decl))._field_Token, ._field_Ident=(*_20222_decl.alloc)._field_Ident, ._field_Value=_1ac97b527_buildExpr((*_20222_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _1ac97dc11_buildEnumItems(jule::Slice<jule::Ptr<_1ac9c6b16_EnumItemDecl>>* _21024_decls) {
	jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> _2116_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>>::alloc(0LL, (*(_21024_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaae6b0_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21024_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be477066:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c6b16_EnumItemDecl> _21214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acaae6b0_EnumItem>> &__jule_push_dest = _2116_items; __jule_push_dest.push(_1ac97d947_buildEnumItem(_21214_decl)); };
			}
			_iter_next_1be477066:;
			++it;
			goto _iter_begin_1be477066;
		}
		_iter_end_1be477066:;
	};
	return _2116_items;;
}



inline jule::Ptr<_1acab021b_Enum> _1ac97e20b_buildEnum(jule::Ptr<_1ac9c76c7_EnumDecl> _21818_decl) {
	return jule::new_ptr<_1acab021b_Enum>(_1acab021b_Enum{._field_Token=(*(_21818_decl))._field_Token, ._field_Public=(*_21818_decl.alloc)._field_Public, ._field_Ident=(*_21818_decl.alloc)._field_Ident, ._field_TypeSym=_1ac97b219_buildType((*_21818_decl.alloc)._field_Kind), ._field_Items=_1ac97dc11_buildEnumItems(&((*_21818_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1acab134e_TypeEnumItem> _1ac97e3d7_buildTypeEnumItem(jule::Ptr<_1ac9c8002_TypeEnumItemDecl> _22826_decl) {
	return jule::new_ptr<_1acab134e_TypeEnumItem>(_1acab134e_TypeEnumItem{._field_Token=(*(_22826_decl))._field_Token, ._field_Ident=(*_22826_decl.alloc)._field_Ident, ._field_TypeSym=_1ac97b219_buildType((*_22826_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _1ac97e67e_buildTypeEnumItems(jule::Slice<jule::Ptr<_1ac9c8002_TypeEnumItemDecl>>* _23628_decls) {
	jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> _2376_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>>::alloc(0LL, (*(_23628_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acab134e_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23628_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be47a300:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c8002_TypeEnumItemDecl> _23814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acab134e_TypeEnumItem>> &__jule_push_dest = _2376_items; __jule_push_dest.push(_1ac97e3d7_buildTypeEnumItem(_23814_decl)); };
			}
			_iter_next_1be47a300:;
			++it;
			goto _iter_begin_1be47a300;
		}
		_iter_end_1be47a300:;
	};
	return _2376_items;;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac97e948_buildTypeEnum(jule::Ptr<_1ac9c8662_TypeEnumDecl> _24422_decl) {
	return jule::new_ptr<_1acab1926_TypeEnum>(_1acab1926_TypeEnum{._field_Token=(*(_24422_decl))._field_Token, ._field_Public=(*_24422_decl.alloc)._field_Public, ._field_Ident=(*_24422_decl.alloc)._field_Ident, ._field_Items=_1ac97e67e_buildTypeEnumItems(&((*_24422_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1acb3d420_Var> _1ac97ec12_buildVar(jule::Ptr<_1ac9c165a_VarDecl> _25317_decl) {
	return jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Token=(*(_25317_decl))._field_Token, ._field_Ident=(*_25317_decl.alloc)._field_Ident, ._field_Binded=(*_25317_decl.alloc)._field_Binded, ._field_Constant=(*_25317_decl.alloc)._field_Constant, ._field_Mutable=(*_25317_decl.alloc)._field_Mutable, ._field_Public=(*_25317_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25317_decl.alloc)._field_Statically, ._field_Reference=(*_25317_decl.alloc)._field_Reference, ._field_TypeSym=_1ac97b219_buildType((*_25317_decl.alloc)._field_Kind), ._field_Value=_1ac97b527_buildExpr((*_25317_decl.alloc)._field_Expr), ._field_Refers=static__1ac979bb8_new(), ._field_Directives=(*_25317_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1acb3d420_Var>> _1ac97eecb_buildVars(jule::Slice<jule::Ptr<_1ac9c165a_VarDecl>> _27018_decls) {
	jule::Slice<jule::Ptr<_1acb3d420_Var>> _2716_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acb3d420_Var>>::alloc(0LL, _27018_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acb3d420_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27018_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be47eb40:;
		if (it != expr_end) {
			jule::Ptr<_1ac9c165a_VarDecl> _27214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = _2716_vars; __jule_push_dest.push(_1ac97ec12_buildVar(_27214_decl)); };
			}
			_iter_next_1be47eb40:;
			++it;
			goto _iter_begin_1be47eb40;
		}
		_iter_end_1be47eb40:;
	};
	return _2716_vars;;
}



inline jule::Ptr<_1ac956447_Impl> _1ac980295_buildImpl(jule::Ptr<_1ac9ca1be_Impl> _27818_decl) {
	return jule::new_ptr<_1ac956447_Impl>(_1ac956447_Impl{._field_Base=(*(_27818_decl))._field_Base, ._field_Dest=(*_27818_decl.alloc)._field_Dest, ._field_Methods=_1ac97d0ea_buildMethods(&((*_27818_decl.alloc)._field_Methods)), ._field_Statics=_1ac97eecb_buildVars((*_27818_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1ac986ab5_isImplicitImport(jule::Ptr<_1ac98b8cd_ImportInfo> _79121_imp) {
	return ((*((*(_79121_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1acaa8654_SymTab> _1ac988c1b_findVarFileInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _4430_files, jule::Ptr<_1acb3d420_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be76111e:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _4514_f = *it;
			{
				if ((_1acaaabea_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1be76111e:;
			++it;
			goto _iter_begin_1be76111e;
		}
		_iter_end_1be76111e:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acb3d420_Var> _1ac98918e_findVarInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7623d9:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1acb3d420_Var> _577_v = _1acaa906c_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1be7623d9:;
			++it;
			goto _iter_begin_1be7623d9;
		}
		_iter_end_1be7623d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1ac9895bd_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be762939:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1acbc00a6_TypeAlias> _697_ta = _1acaa9468_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1be762939:;
			++it;
			goto _iter_begin_1be762939;
		}
		_iter_end_1be762939:;
	};
	return nullptr;;
}



inline jule::Ptr<_1ac9ce129_Struct> _1ac989a74_findStructInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8c4826:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1ac9ce129_Struct> _817_s = _1acaa9864_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1be8c4826:;
			++it;
			goto _iter_begin_1be8c4826;
		}
		_iter_end_1be8c4826:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaa2351_Fn> _1ac989e70_findFnInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8c5d55:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1acaa2351_Fn> _937_f = _1acaa9c60_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1be8c5d55:;
			++it;
			goto _iter_begin_1be8c5d55;
		}
		_iter_end_1be8c5d55:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acaaca65_Trait> _1ac98a2e4_findTraitInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8c83b8:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1acaaca65_Trait> _1057_t = _1acaaa0a1_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1be8c83b8:;
			++it;
			goto _iter_begin_1be8c83b8;
		}
		_iter_end_1be8c83b8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab021b_Enum> _1ac98a668_findEnumInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8c84b7:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1acab021b_Enum> _1177_e = _1acaaa3e2_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1be8c84b7:;
			++it;
			goto _iter_begin_1be8c84b7;
		}
		_iter_end_1be8c84b7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1acab1926_TypeEnum> _1ac98aaec_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8c981a:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1acab1926_TypeEnum> _1297_e = _1acaaa733_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1be8c981a:;
			++it;
			goto _iter_begin_1be8c981a;
		}
		_iter_end_1be8c981a:;
	};
	return nullptr;;
}



inline jule::Bool _1ac99162a_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1a8e45ee0_HasPrefix((*(_33318_f)), _1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a8e59d8e_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1ac9a65da_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be8d93c9:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1be8d9440:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _207_model = (*(_1528_m)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_207_model))._field_Field != nullptr) && _1ac9a65da_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be8d94a6:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _237_unary = (*(_1528_m)).cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1acbc3a6b_Ptr((*((*_237_unary.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1acbc37d5_Sptr((*((*(_237_unary))._field_Expr))._field_Type) == nullptr)) {
					return false;;
				};
				return _1ac9a65da_isValidModelForRef(&((*(*(_237_unary))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1be8d951c:;
			{
				jule::Ptr<_1aca97995_IndexingExprModel> _377_indexing = (*(_1528_m)).cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43);;
				if ((_1acbc431e_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1ac9a65da_isValidModelForRef(&((*(*(_377_indexing))._field_Expr.alloc)._field_Model));;
			}
		}
		else {
			_case_begin_1be8d8ebc:;
			{
				return false;;
			}
		}
		_match_end_1be8d8a9e:;
	};
}



inline _1a6a6bde3_Log _1ac9a6b18_compilerErr(jule::Ptr<_1abc2ba81_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_1a6a6bde3_Log _506_log = _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_1a6a6c355_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_1abc33b21_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _1ac9a6e04_appendRetVars(jule::Slice<jule::Ptr<_1acb3d420_Var>>* _6323_dest, jule::Ptr<_1acaa540e_FnIns>* _6342_f) {
	if ((_1acaa2807_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1acbc0d98_Type>> _686_types = _1acaa6641_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*(*((*(_6342_f))))._field_Decl.alloc)._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8e998e:;
		if (it != expr_end) {
			jule::I32 _697_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _6914_ident = *it;
			{
				if ((_1abc2e468_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _1abc2e732_IsAnonIdent((*_6914_ident.alloc)._field_Kind))) {
					goto _iter_next_1be8e998e;
				};
				{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*_6914_ident.alloc)._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)})); };
			}
			_iter_next_1be8e998e:;
			++it;
			_697_i++;
			goto _iter_begin_1be8e998e;
		}
		_iter_end_1be8e998e:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1ac9a7234_appendParamVars(jule::Slice<jule::Ptr<_1acb3d420_Var>>* _9325_dest, jule::Ptr<_1acaa540e_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8ee323:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _9814_p = *it;
			{
				if ((_1abc2e468_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _1abc2e732_IsAnonIdent((*(*(_9814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1be8ee323;
				};
				jule::Ptr<_1acb3d420_Var> _1037_v = jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*(*(_9814_p))._field_Decl.alloc)._field_Reference, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
				{
					
					if (_1acaa0ecb_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_1be90328e:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_1acaa1262_IsRef((*(_9814_p))._field_Decl)));
							if (_1acaa1262_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1be902e70:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcd4b0_Slc>(_1acbcd4b0_Slc{._field_Elem=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=(*((*_9814_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9814_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1be902e09:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_1be902cc7:;
				};
				{ jule::Slice<jule::Ptr<_1acb3d420_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_1be8ee323:;
			++it;
			goto _iter_begin_1be8ee323;
		}
		_iter_end_1be8ee323:;
	};
}



inline void _1ac9a7520_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _15334_dest, jule::Ptr<_1acaa540e_FnIns>* _15359_f) {
	jule::I32 _1546_size = (*((*(_15359_f))))._field_Generics.len();;
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1546_size+=(*(*((*((*(_15359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1546_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be90b693:;
		if (it != expr_end) {
			jule::I32 _1637_i = it - expr->begin();
			jule::Ptr<_1acbbe4b2_InsGeneric> _16314_g = *it;
			{
				if ((_16314_g == nullptr)) {
					goto _iter_next_1be90b693;
				};
				jule::Ptr<_1ac9ba91d_GenericDecl> _1677_decl = (*(*((*(_15359_f))))._field_Decl.alloc)._field_Generics[_1637_i];;
				{ jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1677_decl.alloc)._field_Token, ._field_Ident=(*(_1677_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_16314_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1be90b693:;
			++it;
			_1637_i++;
			goto _iter_begin_1be90b693;
		}
		_iter_end_1be90b693:;
	};
	if (((*(*((*(_15359_f))))._field_Decl.alloc)._field_Owner != nullptr)) {
		jule::Ptr<_1ac9d1e84_StructIns> _1797_owner = (*((*(_15359_f))))._field_Owner;;
		{
			auto expr = &((*_1797_owner.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be90d079:;
			if (it != expr_end) {
				jule::I32 _1808_i = it - expr->begin();
				jule::Ptr<_1acbbe4b2_InsGeneric> _18015_g = *it;
				{
					jule::Ptr<_1ac9ba91d_GenericDecl> _1818_decl = (*((*(_1797_owner))._field_Decl))._field_Generics[_1808_i];;
					{ jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1818_decl.alloc)._field_Token, ._field_Ident=(*(_1818_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_18015_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1be90d079:;
				++it;
				_1808_i++;
				goto _iter_begin_1be90d079;
			}
			_iter_end_1be90d079:;
		};
	};
}



inline jule::Ptr<_1acaa8654_SymTab> _1ac9a7894_findFile(jule::Slice<jule::Ptr<_1acaa8654_SymTab>>* _19418_files, jule::Ptr<_1abc32636_Fileset>* _19437_handler) {
	{
		auto expr = _19418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be912127:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _19514_fl = *it;
			{
				if (((*(_19514_fl))._field_File == (*(_19437_handler)))) {
					return _19514_fl;;
				};
			}
			_iter_next_1be912127:;
			++it;
			goto _iter_begin_1be912127;
		}
		_iter_end_1be912127:;
	};
	return nullptr;;
}



inline void _1ac9a7c3a_pushSuggestion(_1a6a6bde3_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args) {
	(*(_20330_log))._field_Suggestion=_1a6a6c355_Logf(_20348_fmt, _20368_args);
}



inline void _1acb3b253_pushImplemented(jule::Ptr<_1acaaca65_Trait> _280524_t, jule::Ptr<_1ac9ce129_Struct>* _280540_d) {
	_julec_label_1be911be8:;
	{
		
		if (((*(_280524_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1be914d50:;
			{
				{
					auto expr = &((*_280524_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be9157bd:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> _280910_s = *it;
						{
							if ((_280910_s == (*(_280540_d)))) {
								goto _match_end_1be9142d3;
							};
						}
						_iter_next_1be9157bd:;
						++it;
						goto _iter_begin_1be9157bd;
					}
					_iter_end_1be9157bd:;
				};
				goto _case_begin_1be91438d;
			}
		}
		else {
			_case_begin_1be91438d:;
			{
				(*(_280524_t))._field_Implemented=jule::append((*_280524_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ce129_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_280540_d)); __jule_collection; }));
			}
		}
		_match_end_1be9142d3:;
	};
	{
		auto expr = &((*(_280524_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be915b86:;
		if (it != expr_end) {
			jule::Ptr<_1acbc85a9_TypeSym> _281814_i = *it;
			{
				_1acb3b253_pushImplemented(_1acbc4d58_Trait((*(_281814_i))._field_Type.ptr()), _280540_d);
			}
			_iter_next_1be915b86:;
			++it;
			goto _iter_begin_1be915b86;
		}
		_iter_end_1be915b86:;
	};
}



inline void _1acb3b53e_pushImplements(jule::Ptr<_1ac9ce129_Struct>* _282324_s, jule::Ptr<_1acaaca65_Trait> _282340_t) {
	_julec_label_1be914745:;
	{
		
		if (((*((*(_282324_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1be9178e1:;
			{
				{
					auto expr = &((*((*(_282324_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be91835e:;
					if (it != expr_end) {
						jule::Ptr<_1acaaca65_Trait> _282710_b = *it;
						{
							if ((_282710_b == _282340_t)) {
								goto _match_end_1be916d85;
							};
						}
						_iter_next_1be91835e:;
						++it;
						goto _iter_begin_1be91835e;
					}
					_iter_end_1be91835e:;
				};
				goto _case_begin_1be916e2e;
			}
		}
		else {
			_case_begin_1be916e2e:;
			{
				{ jule::Slice<jule::Ptr<_1acaaca65_Trait>> &__jule_push_dest = (*((*(_282324_s))))._field_Implements; __jule_push_dest.push(_282340_t); };
			}
		}
		_match_end_1be916d85:;
	};
	{
		auto expr = &((*(_282340_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be918727:;
		if (it != expr_end) {
			jule::Ptr<_1acbc85a9_TypeSym> _283614_i = *it;
			{
				_1acb3b53e_pushImplements(_282324_s, _1acbc4d58_Trait((*(_283614_i))._field_Type.ptr()));
			}
			_iter_next_1be918727:;
			++it;
			goto _iter_begin_1be918727;
		}
		_iter_end_1be918727:;
	};
}



inline void _1acb3b990_pushRuntimeToStr(jule::Ptr<_1ac9a8c2a_sema>* _284126_s, jule::Ptr<_1acbc0d98_Type>* _284141_t, jule::Ptr<_1abc2ba81_Token>* _284156_token, jule::Ptr<_1ac979855_ReferenceStack> _28426_refers) {
	if ((((*((*((*(_284126_s))))._field_meta))._field_runtime == nullptr) || _1acbc1ecb_IsNil((*(_284141_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1acaa540e_FnIns> _28466_f = _1acaa385d_instanceForce(_1abd166c6_runtimeFindFn(&((*(*((*(_284126_s))))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28466_f))._field_Generics=jule::append((*_28466_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1acbbe4b2_InsGeneric>(_1acbbe4b2_InsGeneric{._field_Type=(*(_284141_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1acbc0d98_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28482_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1acb3503d_checkGenericFn((*(_284126_s)), &(_28466_f), _284156_token);
		_28482_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28482_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2850:3"));;
	};
	if ((_28426_refers != nullptr)) {
		_1ac97a6ad_Push(_28426_refers, jule::Any(_28466_f, &__jule_any_type64));
	};
}



inline jule::Bool _1acb3bc59_isValidImpAlias(jule::Str _285924_alias) {
	jule::Bool __jule_func_result = false;
	if (_1abc2e468_IsIgnoreIdent(_285924_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1abc30733_IsKeyword(_285924_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28666_r;
	jule::I32 _286613_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_285924_alias);
		_28666_r = __jule_assign_result.__jule_result_arg0;
		_286613_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28666_r != '_') && (!(_1abc302b0_IsLetter(_28666_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285924_alias).mut_slice(_286613_size);;
			if ((_285924_alias.len() == 0LL)) {
				goto _iter_end_1be92249a;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1bb48be19_DecodeRuneStr(_285924_alias);
				_28666_r = __jule_assign_result.__jule_result_arg0;
				_286613_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28666_r != '_') && (!((('0' <= _28666_r) && (_28666_r <= '9'))))) && (!(_1abc302b0_IsLetter(_28666_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1be92249a:;
	}
	_iter_end_1be92249a:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1acb77cc8_traitHasReferenceReceiver(jule::Ptr<_1acaaca65_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdebe20c:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1bdebe20c;
				};
				jule::Ptr<_1acaa087c_Param> _233_p = (*(*(_179_f)).alloc)._field_Params[0LL];;
				if ((_1acaa1262_IsRef(_233_p.ptr()) && _1acaa0ecb_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1bdebe20c:;
			++it;
			goto _iter_begin_1bdebe20c;
		}
		_iter_end_1bdebe20c:;
	};
	return false;;
}



inline jule::Bool _1acb78191_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1acb8cded_Data>* _3133_d) {
	jule::Str _322_value = _1aa503788_FmtFloat(_1aca8b48e_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1ac924921_CheckBitFloat(_322_value, _1ac92347a_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1acb78515_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1acb8cded_Data>* _3630_d) {
	jule::F64 _372_min = _1ac929a69_Min(_3618_kind);;
	jule::F64 _382_max = _1ac929d00_Max(_3618_kind);;
	{
		
		if (_1aca8d2d7_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1bdec2c9e:;
			{
				jule::F64 _413_x = _1aca8abdb_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1aa4c9770_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1aca8ca34_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1bdec2d15:;
			{
				jule::F64 _483_x = _1aca8b48e_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1aca8c79d_IsI64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1bdec2d7b:;
			{
				jule::F64 _533_x = _1aca8b48e_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1bdec2b7d:;
	};
	return false;;
}



inline jule::Bool _1acb788cd_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1acb8cded_Data>* _5932_d) {
	jule::F64 _602_max = _1ac929d00_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1acb74962_IsAscii(static_cast<jule::I32>(_1aca8a1a2_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1aca8d2d7_IsF64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be55bcc7:;
			{
				jule::F64 _673_x = _1aca8abdb_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1aa4c9770_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1aca8ca34_IsU64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be55bd3d:;
			{
				jule::F64 _773_x = _1aca8b48e_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1aca8c79d_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1be55bda4:;
			{
				jule::F64 _823_x = _1aca8b48e_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1be558895:;
	};
	return false;;
}



inline jule::Bool _1acb78c52_intAssignable(jule::Str _8818_kind, jule::Ptr<_1acb8cded_Data>* _8830_d) {
	{
		
		if (_1ac92ae22_IsSigInt(_8818_kind)) {
			_case_begin_1be5618ae:;
			{
				return _1acb78515_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1ac92b230_IsUnsigInt(_8818_kind)) {
			_case_begin_1be561947:;
			{
				return _1acb788cd_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1be5613d6:;
			{
				return false;;
			}
		}
		_match_end_1be561309:;
	};
}



inline void _1acb85247_checkMutRiskOfStructLit(jule::Ptr<_1ac9a8c2a_sema>* _90933_s, jule::Ptr<_1aca95dd3_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be562a25:;
		if (it != expr_end) {
			jule::Ptr<_1aca95a3c_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1be562a25;
				};
				if (((!((*((*(*(_9109_arg)).alloc)._field_Expr))._field_Mutable)) && _1acbc277e_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1ac9abb2e_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*((*(_9109_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1be562a25:;
			++it;
			goto _iter_begin_1be562a25;
		}
		_iter_end_1be562a25:;
	};
}



inline jule::Ptr<_1acbc0d98_Type> _1acb8b160_lenKind(void) {
	return _1acc454c2_primInt;;
}



inline jule::Bool _1acb8b4b2_isGoodValueToInfer(jule::Ptr<_1acb8cded_Data>* _141424_d) {
	return (!(_1acb8d31b_IsNil((*(_141424_d)).ptr())));;
}



inline jule::Ptr<_1abc419b9_Directive> _1acbb7620_findDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _436523_directives, jule::Str _436554_d) {
	{
		auto expr = _436523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec351b4:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _436614_dr = *it;
			{
				if (((*((*(_436614_dr))._field_Tag))._field_Kind == _436554_d)) {
					return _436614_dr;;
				};
			}
			_iter_next_1bec351b4:;
			++it;
			goto _iter_begin_1bec351b4;
		}
		_iter_end_1bec351b4:;
	};
	return nullptr;;
}



inline jule::Any _1acbb79d8_findBuiltinsImport(jule::Str* _437424_ident, jule::Ptr<_1ac98b8cd_ImportInfo> _437436_imp) {
	return _1acc48816_findPackageBuiltinDef(&((*(_437436_imp))._field_LinkPath), _437424_ident);;
}



inline void _1acbb7c19_fitBitsize(jule::Ptr<_1acb8cded_Data>* _438320_d) {
	jule::Ptr<_1acbc8eb1_Prim> _43846_prim = _1acbc354e_Prim((*((*(_438320_d))))._field_Type.ptr());;
	jule::I32 _43852_z = _1ac92347a_BitSizeOf(_1acbc9335_Str(_43846_prim.ptr()));;
	{
		
		if (_1aca8c79d_IsI64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1bec37914:;
			{
				jule::I32 _43883_k = _1ac924ea4_BitSizeOfInt(_1aca8a1a2_ReadI64((*((*(_438320_d))))._field_Constant));;
				if (((_43883_k > _43852_z) || _1ac92b230_IsUnsigInt((*_43846_prim.alloc)._field_Kind))) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1ac9237bb_IntFromBits(_43883_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1acc47826_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1aca8ca34_IsU64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1bec3797a:;
			{
				jule::I32 _43943_k = _1ac92526d_BitSizeOfUint(_1aca8a438_ReadU64((*((*(_438320_d))))._field_Constant));;
				if (((_43943_k > _43852_z) || _1ac92ae22_IsSigInt((*_43846_prim.alloc)._field_Kind))) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1ac923a52_UintFromBits(_43943_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1acc47826_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1aca8d2d7_IsF64((*((*(_438320_d))))._field_Constant.ptr())) {
			_case_begin_1bec37a02:;
			{
				if ((_43852_z == 64LLU)) {
					return;;
				};
				jule::I32 _44043_k = _1ac924bda_BitSizeOfFloat(_1aca8abdb_ReadF64((*((*(_438320_d))))._field_Constant));;
				if ((_44043_k > _43852_z)) {
					(*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind=_1ac923d1b_FloatFromBits(_44043_k);
					(*((*(_438320_d))))._field_Type=(*((*(_1acc47826_findBuiltinTypeAlias((*(*((*(_438320_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1bec377e3:;
	};
}



inline void _1acbb8049_makeStructLitAlloc(jule::Ptr<_1acb8cded_Data>* _441228_d, jule::Ptr<_1aca95dd3_StructLitExprModel>* _441243_lit) {
	(*((*(_441228_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_441243_lit))))._field_Strct, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)});
	(*((*(_441228_d))))._field_Model=jule::Any(jule::new_ptr<_1aca961d0_AllocStructLitExprModel>(_1aca961d0_AllocStructLitExprModel{._field_Lit=(*(_441243_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1acb3d420_Var> _1acbb83bd_buildErrorVar(jule::Ptr<_1ac95aa56_Scope>* _442323_s, jule::Ptr<_1ac9b6771_FnCallExpr>* _442339_fc) {
	return jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=(*(_442323_s)), ._field_Token=(*((*(_442339_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
}



inline jule::Any _1acbb8742_findBuiltinsSema(jule::Str* _443822_ident, jule::Ptr<_1ac9a8c2a_sema> _443838_s) {
	jule::Str _44406_ppath = _1abc332b3_Dir((*((*(_443838_s))._field_file))._field_File.ptr());;
	if (_1a8e45ee0_HasPrefix(_44406_ppath, _1a8e59d8e_PathStdlib)) {
		(_44406_ppath).mut_slice(_1a8e59d8e_PathStdlib.len());;
		_44406_ppath=(jule::Str::lit("std", 3) + _1a8e4c139_ReplaceAll(_44406_ppath, jule::Str::lit("\\", 1), jule::Str::lit("/", 1)));
		return _1acc48816_findPackageBuiltinDef(&(_44406_ppath), _443822_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1acbb8a0b_isOkForShifting(jule::Ptr<_1acb8cded_Data>* _445325_d) {
	if (_1acb8d838_IsConst((*(_445325_d)).ptr())) {
		{
			
			if (_1aca8c79d_IsI64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1bec48925:;
				{
					return (_1aca8a1a2_ReadI64((*((*(_445325_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1aca8ca34_IsU64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1bec489be:;
				{
					return true;;
				}
			}
			else if (_1aca8d2d7_IsF64((*((*(_445325_d))))._field_Constant.ptr())) {
				_case_begin_1bec48a46:;
				{
					return (_1aca8abdb_ReadF64((*((*(_445325_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1bec4888c:;
				{
					return false;;
				}
			}
			_match_end_1bec487b0:;
		};
	};
	jule::Ptr<_1acbc8eb1_Prim> _44662_prim = _1acbc354e_Prim((*((*(_445325_d))))._field_Type.ptr());;
	return ((_44662_prim != nullptr) && _1ac92b4e9_IsInt(_1acbc9335_Str(_44662_prim)));;
}



inline jule::Bool _1acbb8dd5_isInstancedStruct(jule::Ptr<_1ac9d1e84_StructIns> _447022_s) {
	return ((*((*(_447022_s))._field_Decl))._field_Generics.len() == (*_447022_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1acbb91d2_isPtrArithmeticCompatible(jule::Ptr<_1acb8cded_Data>* _447435_l, jule::Ptr<_1acb8cded_Data>* _447450_r) {
	jule::Ptr<_1acbd12a4_Ptr> _44752_ptr = _1acbc3a6b_Ptr((*((*(_447450_r))))._field_Type.ptr());;
	if ((_44752_ptr != nullptr)) {
		return _1acbc15d5_Equal((*(_1acbc3a6b_Ptr((*((*(_447435_l))))._field_Type)))._field_Elem, (*_44752_ptr.alloc)._field_Elem);;
	};
	if ((_1acb8d838_IsConst((*(_447450_r)).ptr()) && (*((*(_447450_r))))._field_untyped)) {
		return (_1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _447450_r) || _1acb78c52_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _447450_r));;
	};
	_1acb7923b_typeCompatibilityChecker _44846_tcc = _1acb7923b_typeCompatibilityChecker{._field_s=jule::Ptr<_1ac9a8c2a_sema>(nullptr), ._field_dest=_1acc454c2_primInt, ._field_src=(*((*(_447450_r))))._field_Type, ._field_errorToken=jule::Ptr<_1abc2ba81_Token>(nullptr)};;
	if (_1acb7a935_check(&_44846_tcc)) {
		return true;;
	};
	_44846_tcc._field_dest=_1acc45109_primUint;
	return _1acb7a935_check(&_44846_tcc);;
}



inline void _1acbb96dd_applyRuntimeToStr(jule::Ptr<_1ac9a8c2a_sema>* _449527_s, jule::Ptr<_1acbc0d98_Type>* _449542_from, jule::Ptr<_1acbc0d98_Type>* _449560_to, jule::Ptr<_1abc2ba81_Token>* _44967_token, jule::Ptr<_1ac979855_ReferenceStack> _449633_refers) {
	jule::Ptr<_1acbc8eb1_Prim> _44972_prim = _1acbc354e_Prim((*(_449560_to)).ptr());;
	if ((_44972_prim != nullptr)) {
		if (_1acbcc712_IsAny(_44972_prim)) {
			_1acb3b990_pushRuntimeToStr(_449527_s, _449542_from, _44967_token, _449633_refers);
		};
		return;;
	};
	if ((_1acbc4088_TypeEnum((*(_449560_to)).ptr()) != nullptr)) {
		_1acb3b990_pushRuntimeToStr(_449527_s, _449542_from, _44967_token, _449633_refers);
		return;;
	};
}



inline void _1acbb9be9_applyCastKindModel(jule::Ptr<_1ac9a8c2a_sema>* _451028_s, jule::Ptr<_1acb8cded_Data>* _451043_d, jule::Ptr<_1acbc0d98_Type>* _451058_t, jule::Ptr<_1abc2ba81_Token>* _45117_token, jule::Ptr<_1ac979855_ReferenceStack> _451133_refers) {
	_1acbb96dd_applyRuntimeToStr(_451028_s, &((*((*(_451043_d))))._field_Type), _451058_t, _45117_token, _451133_refers);
	(*((*(_451043_d))))._field_Model=jule::Any(jule::new_ptr<_1aca96763_CastingExprModel>(_1aca96763_CastingExprModel{._field_Token=(*(_45117_token)), ._field_Expr=jule::new_ptr<_1acb8cded_Data>((*((*(_451043_d))))), ._field_Type=(*(_451058_t)), ._field_ExprType=(*((*(_451043_d))))._field_Type}), &__jule_any_type96);
}



inline void _1acbba205_applyCastKind(jule::Ptr<_1ac9a8c2a_sema>* _452123_s, jule::Ptr<_1acb8cded_Data>* _452138_d, jule::Ptr<_1acbc0d98_Type>* _452153_t, jule::Ptr<_1abc2ba81_Token>* _45227_token, jule::Ptr<_1ac979855_ReferenceStack> _452233_refers) {
	_1acbb9be9_applyCastKindModel(_452123_s, _452138_d, _452153_t, _45227_token, _452233_refers);
	(*((*(_452138_d))))._field_Type=(*(_452153_t));
}



inline jule::Ptr<_1acb8cded_Data> _1acbba414_buildVoidData(void) {
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc4423a_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Str _1acbba8ed_checkDataForIntegerIndexing(jule::Ptr<_1ac9a8c2a_sema>* _453337_s, jule::Ptr<_1acb8cded_Data>* _453352_d, jule::Ptr<_1abc2ba81_Token>* _45347_token, jule::Ptr<_1ac979855_ReferenceStack> _453433_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_453352_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1acbc354e_Prim((*((*(_453352_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1bec59c11:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1ac92b4e9_IsInt(_1acbc9335_Str(_1acbc354e_Prim((*((*(_453352_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1bec59c77:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1acb8d838_IsConst((*(_453352_d)).ptr())) {
			_case_begin_1bec59cdd:;
			{
				if ((_1aca8b48e_AsF64((*((*(_453352_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1acbc354e_Prim((*((*(_453352_d))))._field_Type.ptr()) == nullptr) || _1acb8d838_IsConst((*(_453352_d)).ptr()) || (_1ac9231b1_RealKindOf(_1acbc9335_Str(_1acbc354e_Prim((*((*(_453352_d))))._field_Type).ptr())) != _1ac9231b1_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1bec59d54:;
			{
				_1acbba205_applyCastKind(_453337_s, _453352_d, &(_1acc454c2_primInt), _45347_token, _453433_refers);
			}
		}
		_match_end_1bec597e3:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1acbbae09_applyCastModelByEnum(jule::Ptr<_1ac9a8c2a_sema>* _455930_s, jule::Ptr<_1acb8cded_Data>* _455945_d, jule::Ptr<_1acab021b_Enum> _455959_e, jule::Ptr<_1abc2ba81_Token>* _45607_token, jule::Ptr<_1ac979855_ReferenceStack> _456033_refers) {
	if ((_455959_e == nullptr)) {
		return;;
	};
	_1acbb9be9_applyCastKindModel(_455930_s, _455945_d, &((*((*(_455959_e))._field_TypeSym))._field_Type), _45607_token, _456033_refers);
}



inline void _1acbbb426_castConstByType(jule::Str* _456721_t, jule::Ptr<_1acb8cded_Data>* _456734_d) {
	{
		
		if (_1ac92ae22_IsSigInt((*(_456721_t)))) {
			_case_begin_1bec60ad5:;
			{
				{
					auto _match_expr{ _1ac92347a_BitSizeOf(_1ac9231b1_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bec616a7:;
						{
							_1aca8b747_SetI64((*((*(_456734_d))))._field_Constant.ptr(), _1aca8ae72_AsI64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bec61740:;
						{
							_1aca8b747_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1aca8ae72_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bec617a6:;
						{
							_1aca8b747_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I16>(_1aca8ae72_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bec6181c:;
						{
							_1aca8b747_SetI64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I8>(_1aca8ae72_AsI64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1bec61641:;
				};
			}
		}
		else if (_1ac92b230_IsUnsigInt((*(_456721_t)))) {
			_case_begin_1bec60b7e:;
			{
				{
					auto _match_expr{ _1ac92347a_BitSizeOf(_1ac9231b1_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bec61cb2:;
						{
							_1aca8ba00_SetU64((*((*(_456734_d))))._field_Constant.ptr(), _1aca8b208_AsU64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bec658dc:;
						{
							_1aca8ba00_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1aca8b208_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bec65953:;
						{
							_1aca8ba00_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U16>(_1aca8b208_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bec659b9:;
						{
							_1aca8ba00_SetU64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U8>(_1aca8b208_AsU64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1bec65843:;
				};
			}
		}
		else if (_1ac92b83a_IsFloat((*(_456721_t)))) {
			_case_begin_1bec60be5:;
			{
				{
					auto _match_expr{ _1ac92347a_BitSizeOf(_1ac9231b1_RealKindOf((*(_456721_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bec65c72:;
						{
							_1aca8c319_SetF64((*((*(_456734_d))))._field_Constant.ptr(), _1aca8b48e_AsF64((*((*(_456734_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bec69a56:;
						{
							_1aca8c319_SetF64((*((*(_456734_d))))._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F32>(_1aca8b48e_AsF64((*((*(_456734_d))))._field_Constant))));
						}
					}
					_match_end_1bec699e0:;
				};
			}
		}
		_match_end_1bec60981:;
	};
}



inline void _1acbbb602_updateModelToGenericIns(jule::Any* _460133_m, jule::Ptr<_1acaa540e_FnIns>* _460152_f) {
	{
		auto &_match_expr{ (*(_460133_m)) };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1bec69ced:;
			{
				(*(_460133_m))=jule::Any((*(_460152_f)), &__jule_any_type64);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bec61ac5:;
			{
				(*((*(_460133_m)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_460152_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bec69d64:;
			{
				(*((*(_460133_m)).cast_ptr<_1aca9a04c_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_460152_f));
			}
		}
		_match_end_1bec61ba2:;
	};
}



inline jule::Bool _1acbbb976_pushSubIdentFromExpr(jule::Any _461229_expr, jule::Ptr<_1abc42e71_SubIdentTypeDecl>* _461255_t) {
	{
		auto &_match_expr{ _461229_expr };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bec70de2:;
			{
				jule::Ptr<_1ac9b4362_IdentExpr> _46157_e = _461229_expr.unsafe_cast_ptr<_1ac9b4362_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>> &__jule_push_dest = (*((*(_461255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*(_46157_e))._field_Token, ._field_Ident=(*_46157_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bec70045:;
			{
				jule::Ptr<_1ac9b5b5a_SubIdentExpr> _46217_e = _461229_expr.unsafe_cast_ptr<_1ac9b5b5a_SubIdentExpr>();;
				if ((!(_1acbbb976_pushSubIdentFromExpr((*((*(_46217_e))._field_Expr))._field_Kind, _461255_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1abc42ba7_IdentTypeDecl>> &__jule_push_dest = (*((*(_461255_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1abc42ba7_IdentTypeDecl>(_1abc42ba7_IdentTypeDecl{._field_Token=(*_46217_e.alloc)._field_Ident, ._field_Ident=(*((*_46217_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1abc4259c_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1bec70ebe:;
			{
				return false;;
			}
		}
		_match_end_1bec70d26:;
	};
	return true;;
}



inline jule::Str _1acbbbc40_constoa(jule::Ptr<_1aca3208e_Const>* _463513_c) {
	{
		
		if (_1aca8c79d_IsI64((*(_463513_c)).ptr())) {
			_case_begin_1bec76ce9:;
			{
				return _1aa519e64_FmtInt(_1aca8a1a2_ReadI64((*(_463513_c)).ptr()), 10LL);;
			}
		}
		else if (_1aca8ca34_IsU64((*(_463513_c)).ptr())) {
			_case_begin_1bec76d82:;
			{
				return _1aa519a9b_FmtUint(_1aca8a438_ReadU64((*(_463513_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1bec758a8:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bec75644:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acbbc2d4_evalEnumStatic(jule::Ptr<_1ac9a8c2a_sema>* _464624_s, jule::Ptr<_1acab021b_Enum>* _464639_enm, jule::Ptr<_1acaae6b0_EnumItem>* _464656_item, jule::Ptr<_1abc2ba81_Token>* _46477_token, jule::Ptr<_1ac979855_ReferenceStack> _464733_refers) {
	jule::Ptr<_1acb8cded_Data> _46486_d = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_464639_enm)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if (((*(_464656_item)) != nullptr)) {
		(*(_46486_d))._field_Constant=jule::new_ptr<_1aca3208e_Const>((*(*((*((*((*(_464656_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46486_d.alloc)._field_Model=jule::Any((*_46486_d.alloc)._field_Constant, &__jule_any_type15);
		_1acbbae09_applyCastModelByEnum(_464624_s, &(_46486_d), (*(_464639_enm)), _46477_token, _464733_refers);
	};
	return _46486_d;;
}



inline jule::Ptr<_1aca95dd3_StructLitExprModel> _1acbbc59d_isLitBased(jule::Any* _466420_m) {
	{
		auto &_match_expr{ (*(_466420_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1bec7bd98:;
			{
				return (*(_466420_m)).cast_ptr<_1aca95dd3_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1bec7be0e:;
			{
				return (*((*(_466420_m)).cast_ptr<_1aca961d0_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bec7be75:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _46717_ssi = (*(_466420_m)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1acbbc59d_isLitBased(&((*((*(_46717_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bec7bedb:;
			{
				jule::Ptr<_1aca96763_CastingExprModel> _46747_c = (*(_466420_m)).cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96);;
				return _1acbbc59d_isLitBased(&((*((*(_46747_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bec7b947:;
			{
				return nullptr;;
			}
		}
		_match_end_1bec7b8d1:;
	};
}



inline void _1acbbc889_makeImplicitDeref(jule::Ptr<_1acb8cded_Data>* _468127_d, jule::Ptr<_1abc2ba81_Token> _468141_baseToken) {
	jule::Ptr<_1aca9550e_UnaryExprModel> _46826_unary = jule::new_ptr<_1aca9550e_UnaryExprModel>(_1aca9550e_UnaryExprModel{._field_Expr=jule::new_ptr<_1acb8cded_Data>((*((*(_468127_d))))), ._field_Op=jule::new_ptr<_1abc2ba81_Token>((*(_468141_baseToken)))});;
	(*((*(_46826_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_46826_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_468127_d))))._field_Model=jule::Any(_46826_unary, &__jule_any_type113);
}



inline void _1be05a2cb_updateRefer(jule::Ptr<_1ac979855_ReferenceStack> _469223_ref, jule::Ptr<_1acaa540e_FnIns>* _469246_old, jule::Ptr<_1acaa540e_FnIns>* _469259_new) {
	{
		auto expr = &((*(_469223_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be05bbd4:;
		if (it != expr_end) {
			jule::I32 _46936_i = it - expr->begin();
			jule::Any _46939_sym = *it;
			{
				if ((jule::Any((*(_469246_old)), &__jule_any_type64) == _46939_sym)) {
					(*(_469223_ref))._field_buffer[_46936_i]=jule::Any((*(_469259_new)), &__jule_any_type64);
				};
			}
			_iter_next_1be05bbd4:;
			++it;
			_46936_i++;
			goto _iter_begin_1be05bbd4;
		}
		_iter_end_1be05bbd4:;
	};
}



inline void _1acbbd01b_makeVariadic(jule::Ptr<_1acb8cded_Data>* _470022_d, jule::Ptr<_1acbc0d98_Type> _470036_elem) {
	(*((*(_470022_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=(*_470036_elem.alloc)._field_BindIdent, ._field_Generic=(*(_470036_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_470036_elem.alloc)._field_Kind});
}



inline jule::Bool _1acbbd44a_isVarCaptured(jule::Ptr<_1ac9631bd_scopeChecker> _471418_r, jule::Ptr<_1ac9631bd_scopeChecker> _471440_s, jule::Ptr<_1acb3d420_Var> _471458_v) {
	if (((*(_471458_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_471440_s))._field_scope == (*_471458_v.alloc)._field_Scope)) {
				return false;;
			};
			if ((((*_471440_s.alloc)._field_parent == nullptr) || (_471440_s == _471418_r))) {
				goto _iter_end_1bec860c2;
			};
			_471440_s=(*_471440_s.alloc)._field_parent;
		}
	_iter_next_1bec860c2:;
	}
	_iter_end_1bec860c2:;;
	return true;;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1acbbd7be_findNamespace(jule::Trait _473122_lookup, jule::Str _473138_namespace) {
	return ((_1acbe1281_LookupMptrData*)_473122_lookup.safe_type())->_1acbde56a_SelectPackage(_473122_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1ac98b8cd_ImportInfo>>((void*)__jule_anon_1bec88019, jule::Ptr<__jule_anon_1bec88019_ctx>::make(__jule_anon_1bec88019_ctx{._473138_namespace=_473138_namespace}).as<jule::Uintptr>(), __jule_anon_1bec88019_ctx_handler));;
}



inline jule::Bool _1acbdc04b_kindUsesGenerics(jule::Ptr<_1acbc0d98_Type>* _173126_k, jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>* _173137_generics) {
	{
		auto expr = _173137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee7290c:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ba91d_GenericDecl> *_17329_g = it;
			{
				if (static__1acbdbb50_exist(&((*((*(_17329_g))))._field_Ident), _173126_k)) {
					return true;;
				};
			}
			_iter_next_1bee7290c:;
			++it;
			goto _iter_begin_1bee7290c;
		}
		_iter_end_1bee7290c:;
	};
	return false;;
}



inline jule::Bool _1acbdc414_hasDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _174122_directives, jule::Str _174153_tag) {
	{
		auto expr = _174122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee72eb2:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _174214_dr = *it;
			{
				if (((*((*(_174214_dr))._field_Tag))._field_Kind == _174153_tag)) {
					return true;;
				};
			}
			_iter_next_1bee72eb2:;
			++it;
			goto _iter_begin_1bee72eb2;
		}
		_iter_end_1bee72eb2:;
	};
	return false;;
}



inline jule::Bool _1acbdc6cd_canGetPtr(jule::Ptr<_1acb8cded_Data>* _175019_d) {
	return (*((*(_175019_d))))._field_Lvalue;;
}



inline jule::Bool _1acbdca1e_isValidForSptrType(jule::Ptr<_1acbc0d98_Type>* _175328_t) {
	jule::Ptr<_1ac9d1e84_StructIns> _17546_s = _1acbc4ac2_Struct((*(_175328_t)).ptr());;
	if ((((_17546_s != nullptr) && ((*_17546_s.alloc)._field_Decl != nullptr)) && (*(*(_17546_s))._field_Decl.alloc)._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1acbdcca5_isValidForRef(jule::Ptr<_1acbc0d98_Type>* _176223_t) {
	return (_1acbc483b_Fn((*(_176223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1acbdd06e_isBuiltinStrConvertable(jule::Ptr<_1acbc0d98_Type>* _176533_t) {
	return ((((!(_1acbc2262_Void((*(_176533_t)).ptr()))) && (_1acbc483b_Fn((*(_176533_t)).ptr()) == nullptr)) && (_1acbc5375_Tup((*(_176533_t)).ptr()) == nullptr)) && (!(_1acbc560b_comptime((*(_176533_t)).ptr()))));;
}



inline jule::Ptr<_1acbc8eb1_Prim> _1acbdd338_buildPrimType(jule::Str _176918_kind) {
	return jule::new_ptr<_1acbc8eb1_Prim>(_1acbc8eb1_Prim{._field_Kind=_176918_kind});;
}



inline void _1acbddb96_applyImplicitCast(jule::Ptr<_1ac9a8c2a_sema>* _179727_s, jule::Ptr<_1acbc0d98_Type>* _179742_dest, jule::Ptr<_1acb8cded_Data>* _179760_d, jule::Ptr<_1abc2ba81_Token>* _17987_token, jule::Ptr<_1ac979855_ReferenceStack> _179833_refers) {
	if (_1acbc1ecb_IsNil((*((*(_179760_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _18022_destPrim = _1acbc354e_Prim((*(_179742_dest)).ptr());;
	if (((_18022_destPrim != nullptr) && _1acbcc712_IsAny(_18022_destPrim))) {
		jule::Ptr<_1acbc8eb1_Prim> _18043_prim = _1acbc354e_Prim((*((*(_179760_d))))._field_Type);;
		if (((_18043_prim == nullptr) || (!(_1acbcc712_IsAny(_18043_prim.ptr()))))) {
			_1acbba205_applyCastKind(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		};
		return;;
	};
	jule::Ptr<_1acaaca65_Trait> _18112_dt = _1acbc4d58_Trait((*(_179742_dest)).ptr());;
	if ((_18112_dt != nullptr)) {
		jule::Ptr<_1acaaca65_Trait> _18133_bt = _1acbc4d58_Trait((*((*(_179760_d))))._field_Type);;
		if (((_18133_bt == nullptr) || (_18133_bt != _18112_dt))) {
			_1acbb9be9_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
			return;;
		};
	};
	if (((_1acbc4088_TypeEnum((*(_179742_dest)).ptr()) != nullptr) && (_1acbc4088_TypeEnum((*((*(_179760_d))))._field_Type) == nullptr))) {
		_1acbb9be9_applyCastKindModel(_179727_s, _179760_d, _179742_dest, _17987_token, _179833_refers);
		return;;
	};
}



inline jule::Bool _1acbdde60_validTypeForXof(jule::Ptr<_1acbc0d98_Type>* _182725_t) {
	return ((((!(_1acbc2262_Void((*(_182725_t)).ptr()))) && (_1acbc483b_Fn((*(_182725_t)).ptr()) == nullptr)) && (_1acbc5375_Tup((*(_182725_t)).ptr()) == nullptr)) && (!(_1acbc560b_comptime((*(_182725_t)).ptr()))));;
}



inline __jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log _1acbe1e63_buildSymbols(jule::Ptr<_1abc40644_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1ac98085b_symBuilder> _1667_owner) {
	__jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	jule::Ptr<_1ac98085b_symBuilder> _176_sb = jule::new_ptr<_1ac98085b_symBuilder>(_1ac98085b_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1a6a6bde3_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1acaa8654_SymTab>(nullptr)});;
	_1ac9866ec_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1acbe2293_collectImplicitImports(jule::Ptr<_1ac9a8c2a_sema>* _3132_s, jule::Ptr<_1acaa8654_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0654154:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1ac986ab5_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1c0654154;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1c06553b9:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1c065495c:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1c0655001:;
				};
			}
			_iter_next_1c0654154:;
			++it;
			goto _iter_begin_1c0654154;
		}
		_iter_end_1c0654154:;
	};
}



inline __jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log _1acbe26c2_analyzePackage(jule::Slice<jule::Ptr<_1abc40644_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1acaa8654_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa8654_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acaa8654_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c06564ca:;
		if (it != expr_end) {
			jule::Ptr<_1abc40644_AST> _4814_f = *it;
			{
				jule::Ptr<_1acaa8654_SymTab> _497_table;
				jule::Slice<_1a6a6bde3_Log> _4918_errors;
				({
					__jule_tuple_x_1acaa8654_SymTab__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1acbe1e63_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1acaa8654_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1c06564ca:;
			++it;
			goto _iter_begin_1c06564ca;
		}
		_iter_end_1c06564ca:;
	};
	jule::Ptr<_1ac9a8c2a_sema> _566_sema = jule::new_ptr<_1ac9a8c2a_sema>(_1ac9a8c2a_sema{._field_errors=jule::Slice<_1a6a6bde3_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1acaa8654_SymTab>>(nullptr), ._field_file=jule::Ptr<_1acaa8654_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1ac9a8103_commonSemaMeta>(_1ac9a8103_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1ac93cebc_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1ac98b8cd_ImportInfo>(nullptr)})});;
	jule::Ptr<_1acaa8654_SymTab> _636_firstTable = _476_tables[0LL];;
	_1acbe2293_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1acb3941b_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac98e150_Package> _716_pkg = jule::new_ptr<_1ac98e150_Package>(_1ac98e150_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log _1acbe2b78_AnalyzePackage(jule::Slice<jule::Ptr<_1abc40644_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_1ac98e150_Package__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1acbe26c2_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1acaa540e_FnIns> _1acc43844_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1c0661150:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _2314_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc490b9_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1c06611b6:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _2614_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc494e8_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1c066122c:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _2914_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc49927_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1c06612a4:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _3214_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc49d56_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1c066144c:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _3514_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4a285_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1c06614b3:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _3814_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4a8e5_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1c0661529:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _4114_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4b1ed_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1c06615a1:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _4414_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4c892_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1c06616d3:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _4714_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4d145_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1c0661749:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _5014_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4da5d_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1c0660b66:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0660ec9:;
	};
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1acc43b30_primTypeAlias(jule::Ptr<_1acbc0d98_Type>* _5723_k) {
	return jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1acb3d420_Var> _1acc474d5_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1c06681ce:;
			{
				static jule::Ptr<_1acb3d420_Var> _8814_v = jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=_1acc43e3d_primNil}), ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca89a42_NewNil()})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1c0668278:;
			{
				static jule::Ptr<_1acb3d420_Var> _10314_v = jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca892a0_NewBool(true)})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1c0668300:;
			{
				static jule::Ptr<_1acb3d420_Var> _11614_v = jule::new_ptr<_1acb3d420_Var>(_1acb3d420_Var{._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1acc47826_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1acb8e075_Value>(_1acb8e075_Value{._field_Expr=jule::Ptr<_1ac9b2a47_Expr>(nullptr), ._field_Data=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aca892a0_NewBool(false)})}), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1acb3d420_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1c066792b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c06626a1:;
	};
}



inline jule::Ptr<_1acbc00a6_TypeAlias> _1acc47826_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c066d118:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _13614_t = _1acc43b30_primTypeAlias(&(_1acc444e3_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1c066d27d:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _13914_t = _1acc43b30_primTypeAlias(&(_1acc447e0_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1c066d2e4:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _14214_t = _1acc43b30_primTypeAlias(&(_1acc44a98_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c066d3c1:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _14514_t = _1acc43b30_primTypeAlias(&(_1acc44d51_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c066d437:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _14814_t = _1acc43b30_primTypeAlias(&(_1acc45109_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c066d49d:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _15114_t = _1acc43b30_primTypeAlias(&(_1acc454c2_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c066d514:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _15414_t = _1acc43b30_primTypeAlias(&(_1acc45714_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c066d57a:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _15714_t = _1acc43b30_primTypeAlias(&(_1acc459ab_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c066d657:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _16014_t = _1acc43b30_primTypeAlias(&(_1acc4601c_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c066d6ce:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _16314_t = _1acc43b30_primTypeAlias(&(_1acc4657d_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c066d756:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _16614_t = _1acc43b30_primTypeAlias(&(_1acc46836_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c066d7cd:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _16914_t = _1acc43b30_primTypeAlias(&(_1acc46d20_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c066d855:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _17214_t = _1acc43b30_primTypeAlias(&(_1acc47062_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c066d8cc:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _17514_t = _1acc43b30_primTypeAlias(&(_1acc47271_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c066d954:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _17814_t = _1acc43b30_primTypeAlias(&(_1acc462c5_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c066d9cb:;
			{
				static jule::Ptr<_1acbc00a6_TypeAlias> _18114_t = _1acc43b30_primTypeAlias(&(_1acc45c64_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1c066883e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c066891b:;
	};
}



inline jule::Any _1acc47aac_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1acb3d420_Var> _1896_v = _1acc474d5_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1acaa540e_FnIns> _1936_f = _1acc43844_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type64);;
	};
	jule::Ptr<_1acbc00a6_TypeAlias> _1976_ta = _1acc47826_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1acc47d76_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1c0678354:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _20714_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc50c08_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1c0678761:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _21014_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc51137_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1c06787d8:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _21314_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc51566_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1c0676c26:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0677188:;
	};
}



inline jule::Any _1acc48140_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1c0678a6e:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _22314_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4de8c_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1c067aa93:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _22614_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4e3bb_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1c067ab09:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _22914_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4e7ea_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1c0678ad5:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _23214_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc4ee6b_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1c0678b5c:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _23514_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc5039a_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type64);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1c067ac3b:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _23814_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1acaa2351_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc507c9_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1c0678871:;
			{
				return nullptr;;
			}
		}
		_match_end_1c067a7da:;
	};
}



inline jule::Any _1acc48519_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1c067aed3:;
			{
				static jule::Ptr<_1acaa540e_FnIns> _24814_f = jule::new_ptr<_1acaa540e_FnIns>(_1acaa540e_FnIns{._field_Owner=jule::Ptr<_1ac9d1e84_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1acaa2351_Fn>(_1acaa2351_Fn{._field_sema=jule::Ptr<_1ac9a8c2a_sema>(nullptr), ._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac9ba91d_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac9ba91d_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1acaa02b6_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa087c_Param>>(nullptr), ._field_Owner=jule::Ptr<_1ac9ce129_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1acaa540e_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1acbbe4b2_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1acaa42a9_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1acbc0d98_Type>(nullptr), ._field_Scope=jule::Ptr<_1ac95aa56_Scope>(nullptr), ._field_Refers=jule::Ptr<_1ac979855_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1acb8cded_Data>,jule::Ptr<_1acb8edbc_eval>*,jule::Ptr<_1ac9b6771_FnCallExpr>*,jule::Ptr<_1acb8cded_Data>*>(_1acc51995_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type64);;
			}
		}
		else {
			_case_begin_1c067acc4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c067eee8:;
	};
}



inline jule::Any _1acc48816_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1c0681e84:;
			{
				return _1acc48140_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1c068202d:;
			{
				return _1acc47d76_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1c0681bed:;
			{
				return _1acc48519_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_1c068169d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c06804b0:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acc48b8a_builtinCallerError(jule::Ptr<_1acb8edbc_eval>* _27328_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _2816_expr = _1acbadbaa_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_1acb8d31b_IsNil(_2816_expr.ptr())) {
		_1acb90395_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1acb29263_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_1acc444e3_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_1acbb96dd_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_1acc444e3_primAny), &(_2866_token), _1acb933cb_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_1acb8cded_Data> _2996_d = _1acbba414_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_1aca9d1c6_BuiltinErrorCallExprModel>(_1aca9d1c6_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1acaa540e_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type21);
	return _2996_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc490b9_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _30428_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _30443_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1ac9b2a47_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_1acb8cded_Data> _3146_expr = _1acbadbaa_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acbdd06e_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_1acb90395_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1acb3b990_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*_3136_arg.alloc)._field_Token), _1acb933cb_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_1acb8cded_Data> _3266_d = _1acbba414_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_1aca9aa20_BuiltinPrintCallExprModel>(_1aca9aa20_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type25);
	return _3266_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc494e8_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _33130_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _33145_fc, jule::Ptr<_1acb8cded_Data>* _33172_d) {
	(*(_33172_d))=_1acc490b9_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9ad1c_BuiltinPrintlnCallExprModel>(_1aca9ad1c_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_1aca9aa20_BuiltinPrintCallExprModel>(&__jule_any_type25)))._field_Expr}), &__jule_any_type26);
	return (*(_33172_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc49927_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _34326_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _34341_fc, jule::Ptr<_1acb8cded_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_1acb90395_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _3526_t = _1acbad1d7_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_1acb90395_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1acbdca1e_isValidForSptrType(&((*(_3526_t))._field_Type))))) {
		jule::Ptr<_1ac9d1e84_StructIns> _3637_s = _1acbc4ac2_Struct((*(_3526_t))._field_Type.ptr());;
		if ((((_3637_s != nullptr) && ((*_3637_s.alloc)._field_Decl != nullptr)) && (*(*(_3637_s))._field_Decl.alloc)._field_Binded)) {
			_1acb90395_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded structures cannot supports reference counting", 52)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1acbc0d98_Type> _3777_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*(_3526_t))._field_Type;
		jule::Ptr<_1acb8cded_Data> _3807_init = _1acbadbaa_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3777_old;
		if ((_3807_init != nullptr)) {
			jule::Ptr<_1abc2ba81_Token> _3858_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1acb29263_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (*((*(_34326_e))))._field_target._field_mutable, false, &((*(_3526_t))._field_Type), &(_3807_init), &(_3858_token));
			_1acb249cd_checkAssignType((*((*(_34326_e))))._field_s, false, &((*(_3526_t))._field_Type), &(_3807_init), _3858_token, _1acb933cb_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9b1e6_BuiltinNewCallExprModel>(_1aca9b1e6_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=(*_3807_init.alloc)._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9b1e6_BuiltinNewCallExprModel>(_1aca9b1e6_BuiltinNewCallExprModel{._field_Type=(*(_3526_t))._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc49d56_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40528_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40543_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_40543_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_40543_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_40528_e)).ptr(), (*((*((*(_40543_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _4146_expr = _1acbadbaa_evalExpr((*(_40528_e)), (*((*(_40543_fc))))._field_Args[0LL]);;
	if ((_4146_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1acbc354e_Prim((*(_4146_expr))._field_Type.ptr()) == nullptr) || (!(_1acbcc47b_IsStr(_1acbc354e_Prim((*(_4146_expr))._field_Type).ptr()))))) {
		_1acb90395_pushErr((*(_40528_e)).ptr(), (*((*(_40543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1acb8cded_Data> _4236_d = _1acbba414_buildVoidData();;
	(*(_4236_d))._field_Model=jule::Any(jule::new_ptr<_1aca9b5c0_BuiltinPanicCallExprModel>(_1aca9b5c0_BuiltinPanicCallExprModel{._field_Token=(*((*(_40543_fc))))._field_Token, ._field_Expr=(*(_4146_expr))._field_Model}), &__jule_any_type27);
	return _4236_d;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4a285_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _43127_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _43142_fc, jule::Ptr<_1acb8cded_Data>* _43169_d) {
	if (((*((*(_43142_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_43142_fc))))._field_Args.len() == 1LL)) {
			_1acb90395_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1acb90395_pushErr((*(_43127_e)).ptr(), (*((*(_43142_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_43142_fc))))._field_Args.len() > 3LL)) {
		_1acb90395_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acb8cded_Data> _4446_t = _1acbacd96_evalExprKind((*(_43127_e)), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4446_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4446_t))._field_Decl))) {
		_1acb90395_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1acbc45a5_Slc((*(_4446_t))._field_Type.ptr()) == nullptr)) {
		_1acb90395_pushErr((*(_43127_e)).ptr(), (*((*((*(_43142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_4446_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_43169_d))))._field_Type=(*(_4446_t))._field_Type;
	jule::Ptr<_1acb8cded_Data> _4596_lenExpr = _1acbadbaa_evalExpr(_1acb24071_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[1LL]);;
	if ((_4596_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1acb9914b_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4596_lenExpr), (*((*((*(_43142_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1aca9ba76_BuiltinMakeCallExprModel> _4666_model = jule::new_ptr<_1aca9ba76_BuiltinMakeCallExprModel>(_1aca9ba76_BuiltinMakeCallExprModel{._field_Type=(*(_4446_t))._field_Type, ._field_Len=(*(_4596_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_43169_d))))._field_Model=jule::Any(_4666_model, &__jule_any_type117);
	if (((*((*(_43142_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1acb8cded_Data> _4727_capExpr = _1acbadbaa_evalExpr(_1acb24071_evalp((*((*(_43127_e))))._field_s, (*((*(_43127_e))))._field_lookup, (*(_4446_t))._field_Type), (*((*(_43142_fc))))._field_Args[2LL]);;
		if ((_4727_capExpr == nullptr)) {
			return (*(_43169_d));;
		};
		_1acb9914b_checkIntegerIndexingByData((*(_43127_e)).ptr(), &(_4727_capExpr), (*((*((*(_43142_fc))))._field_Args[2LL]))._field_Token);
		(*(_4666_model))._field_Cap=(*(_4727_capExpr))._field_Model;
	};
	return (*(_43169_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4a8e5_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _48229_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _48244_fc, jule::Ptr<_1acb8cded_Data>* _48271_d) {
	if (((*((*(_48244_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_48244_fc))))._field_Args.len() == 1LL)) {
			_1acb90395_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1acb90395_pushErr((*(_48229_e)).ptr(), (*((*(_48244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1ac9b2a47_Expr> _4926_firstArg = (*((*(_48244_fc))))._field_Args[0LL];;
	jule::Ptr<_1acb8cded_Data> _4936_t = _1acbadbaa_evalExpr((*(_48229_e)), _4926_firstArg);;
	if ((_4936_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _4986_s = _1acbc45a5_Slc((*(_4936_t))._field_Type.ptr());;
	if ((_4986_s == nullptr)) {
		_1acb90395_pushErr((*(_48229_e)).ptr(), (*(_4926_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1acb29263_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4936_t))._field_Type), &(_4936_t), &((*_4926_firstArg.alloc)._field_Token))) {
		_1acb249cd_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4936_t))._field_Type), &(_4936_t), (*_4926_firstArg.alloc)._field_Token, _1acb933cb_getOwnerRefers((*(_48229_e)).ptr()));
	};
	jule::Ptr<_1acbc0d98_Type> _5136_prefix = (*((*(_48229_e))))._field_prefix;;
	(*((*(_48229_e))))._field_prefix=(*(_4936_t))._field_Type;
	__JULE_DEFER({
		(*((*(_48229_e))))._field_prefix=_5136_prefix;
	});;
	(*(_48271_d))=jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=(*(_4936_t))._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});
	jule::Ptr<_1ac9b2a47_Expr> _5216_secondArg = (*((*(_48244_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5216_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c0206b91:;
			{
				if (((*((*(_48244_fc))))._field_Args.len() > 2LL)) {
					_1acb90395_pushErr((*(_48229_e)).ptr(), (*((*((*(_48244_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1acb8cded_Data> _5287_e1 = _1acbadbaa_evalExpr((*(_48229_e)), (*((*(_5216_secondArg))._field_Kind.unsafe_cast_ptr<_1ac9b4ecd_VariadicExpr>()))._field_Expr);;
				if ((_5287_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1acbc354e_Prim((*(_4986_s))._field_Elem.ptr()) != nullptr) && _1acbca8db_IsU8(_1acbc354e_Prim((*(_4986_s))._field_Elem).ptr()))) {
					if (((_1acbc354e_Prim((*(_5287_e1))._field_Type) != nullptr) && _1acbcc47b_IsStr(_1acbc354e_Prim((*(_5287_e1))._field_Type).ptr()))) {
						_1acbbd01b_makeVariadic(&(_5287_e1), _1acc462c5_primU8);
						(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9be50_BuiltinAppendCallExprModel>(_1aca9be50_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type24);
						return (*(_48271_d));;
					};
				};
				if ((!(_1acbc32b8_Variadicable((*(_5287_e1))._field_Type)))) {
					_1acb90395_pushErr((*(_48229_e)).ptr(), (*(_5216_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_5287_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1acbbd01b_makeVariadic(&(_5287_e1), (*(_4986_s))._field_Elem);
				(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1acb29263_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5287_e1), &((*_5216_secondArg.alloc)._field_Token))) {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
					_1acb249cd_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5287_e1), (*_5216_secondArg.alloc)._field_Token, _1acb933cb_getOwnerRefers((*(_48229_e)).ptr()));
				} else {
					(*(*(_5287_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9be50_BuiltinAppendCallExprModel>(_1aca9be50_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=(*(_5287_e1))._field_Model}), &__jule_any_type24);
				return (*(_48271_d));;
			}
		}
		_match_end_1c0206b19:;
	};
	jule::Ptr<_1acb8cded_Data> _5716_e1 = _1acbadbaa_evalExpr((*(_48229_e)), _5216_secondArg);;
	if ((_5716_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aca974de_SliceExprModel> _5766_slice = jule::new_ptr<_1aca974de_SliceExprModel>(_1aca974de_SliceExprModel{._field_ElemType=(*(_4986_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_48244_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_48244_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c07968c3:;
		if (it != expr_end) {
			jule::Ptr<_1ac9b2a47_Expr> _58014_arg = *it;
			{
				_5716_e1=_1acbadbaa_evalExpr((*(_48229_e)), _58014_arg);
				if ((_5716_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5716_e1))._field_Type.alloc)._field_Variadic) {
					_1acb90395_pushErr((*(_48229_e)).ptr(), (*(_58014_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1acb29263_checkValidityForInitExpr((*((*(_48229_e))))._field_s, true, false, &((*(_4986_s))._field_Elem), &(_5716_e1), &((*_58014_arg.alloc)._field_Token))) {
					_1acb249cd_checkAssignType((*((*(_48229_e))))._field_s, false, &((*(_4986_s))._field_Elem), &(_5716_e1), (*_58014_arg.alloc)._field_Token, _1acb933cb_getOwnerRefers((*(_48229_e)).ptr()));
				};
				(*(_5766_slice))._field_Elems=jule::append((*_5766_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5716_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1c07968c3:;
			++it;
			goto _iter_begin_1c07968c3;
		}
		_iter_end_1c07968c3:;
	};
	(*((*(_48271_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9be50_BuiltinAppendCallExprModel>(_1aca9be50_BuiltinAppendCallExprModel{._field_Dest=(*(_4936_t))._field_Model, ._field_Elements=jule::Any(_5766_slice, &__jule_any_type80)}), &__jule_any_type24);
	return (*(_48271_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4acbe_callerCopySlice(jule::Ptr<_1acb8cded_Data>* _60225_dest, jule::Ptr<_1acb8edbc_eval>* _60243_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _60258_fc, jule::Ptr<_1acb8cded_Data>* _60285_d) {
	if ((!((*((*(_60225_dest))))._field_Mutable))) {
		_1acb90395_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1acb8cded_Data> _6076_src = _1acbadbaa_evalExpr((*(_60243_e)), (*((*(_60258_fc))))._field_Args[1LL]);;
	if ((_6076_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acbcd4b0_Slc> _6116_slc = _1acbc45a5_Slc((*(_6076_src))._field_Type.ptr());;
	if ((_6116_slc != nullptr)) {
		if (((!((*(_6076_src))._field_Mutable)) && _1acbc277e_Mutable((*_6116_slc.alloc)._field_Elem.ptr()))) {
			_1acb90395_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1acbc15d5_Equal((*((*(_60225_dest))))._field_Type, (*(_6076_src))._field_Type)))) {
			_1acb90395_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1acbc8eb1_Prim> _6213_destPrim = _1acbc354e_Prim((*(_1acbc45a5_Slc((*((*(_60225_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1acbc8eb1_Prim> _6223_prim = _1acbc354e_Prim((*(_6076_src))._field_Type);;
		if (((((_6213_destPrim == nullptr) || (_6223_prim == nullptr)) || (!(_1acbcc47b_IsStr(_6223_prim.ptr())))) || (!(_1acbca8db_IsU8(_6213_destPrim.ptr()))))) {
			_1acb90395_pushErr((*(_60243_e)).ptr(), (*((*((*(_60258_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*((*(_60225_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1acbc1294_Str((*(_6076_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_60285_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_60285_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9ccec_BuiltinCopyCallExprModel>(_1aca9ccec_BuiltinCopyCallExprModel{._field_Dest=(*(_60225_dest)), ._field_Src=_6076_src}), &__jule_any_type28);
	return (*(_60285_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4b1ed_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _63627_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _63642_fc, jule::Ptr<_1acb8cded_Data>* _63669_d) {
	if (((*((*(_63642_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_63642_fc))))._field_Args.len() == 1LL)) {
			_1acb90395_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1acb90395_pushErr((*(_63627_e)).ptr(), (*((*(_63642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_63642_fc))))._field_Args.len() > 2LL)) {
		_1acb90395_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _6496_dest = _1acbadbaa_evalExpr((*(_63627_e)), (*((*(_63642_fc))))._field_Args[0LL]);;
	{
		
		if ((_6496_dest == nullptr)) {
			_case_begin_1c07ac114:;
			{
				return nullptr;;
			}
		}
		else if ((_1acbc45a5_Slc((*(_6496_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07ace39:;
			{
				return _1acc4acbe_callerCopySlice(&(_6496_dest), _63627_e, _63642_fc, _63669_d);;
			}
		}
		else {
			_case_begin_1c07abc4b:;
			{
				_1acb90395_pushErr((*(_63627_e)).ptr(), (*((*((*(_63642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c07aa09b:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acc4b572_callerLenSlice(jule::Ptr<_1acb8cded_Data>* _66124_expr, jule::Ptr<_1acb8cded_Data>* _66142_d) {
	(*((*(_66142_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_66142_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9c24c_BuiltinLenCallExprModel>(_1aca9c24c_BuiltinLenCallExprModel{._field_Expr=(*(_66124_expr))}), &__jule_any_type118);
	return (*(_66142_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4b8e6_callerLenMap(jule::Ptr<_1acb8cded_Data>* _66922_expr, jule::Ptr<_1acb8cded_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_66940_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9c24c_BuiltinLenCallExprModel>(_1aca9c24c_BuiltinLenCallExprModel{._field_Expr=(*(_66922_expr))}), &__jule_any_type118);
	return (*(_66940_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4bc6a_callerLenArr(jule::Ptr<_1acb8cded_Data>* _67722_expr, jule::Ptr<_1acb8cded_Data>* _67740_d) {
	(*((*(_67740_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_67740_d))))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>((*(_1acbc431e_Arr((*((*(_67722_expr))))._field_Type.ptr())))._field_N));
	(*((*(_67740_d))))._field_Model=jule::Any((*((*(_67740_d))))._field_Constant, &__jule_any_type15);
	return (*(_67740_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4c0de_callerLenStr(jule::Ptr<_1acb8cded_Data>* _68422_expr, jule::Ptr<_1acb8cded_Data>* _68440_d) {
	(*((*(_68440_d))))._field_Type=_1acb8b160_lenKind();
	if (_1acb8d838_IsConst((*(_68422_expr)).ptr())) {
		(*((*(_68440_d))))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_1aca8a955_ReadStr((*((*(_68422_expr))))._field_Constant.ptr()).len()));
		(*((*(_68440_d))))._field_Model=jule::Any((*((*(_68440_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_68440_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9c24c_BuiltinLenCallExprModel>(_1aca9c24c_BuiltinLenCallExprModel{._field_Expr=(*(_68422_expr))}), &__jule_any_type118);
	};
	return (*(_68440_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4c463_callerLenComptime(jule::Ptr<_1acb8cded_Data>* _69727_d, jule::I32 _69737_n) {
	(*((*(_69727_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_69727_d))))._field_Constant=static__1aca88c61_NewI64(static_cast<jule::I64>(_69737_n));
	(*((*(_69727_d))))._field_Model=jule::Any((*((*(_69727_d))))._field_Constant, &__jule_any_type15);
	return (*(_69727_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4c892_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _70426_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _70441_fc, jule::Ptr<_1acb8cded_Data>* _70468_d) {
	if (((*((*(_70441_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_70426_e)).ptr(), (*((*(_70441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_70441_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _7126_dest = _1acbad869_evalExpr1((*(_70426_e)), (*((*(_70441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7126_dest == nullptr)) {
			_case_begin_1c07bc2cd:;
			{
				return nullptr;;
			}
		}
		else if ((_1acbc45a5_Slc((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd103:;
			{
				return _1acc4b572_callerLenSlice(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1acbc431e_Arr((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd169:;
			{
				return _1acc4bc6a_callerLenArr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1acbc50de_Map((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bbe7b:;
			{
				return _1acc4b8e6_callerLenMap(&(_7126_dest), _70468_d);;
			}
		}
		else if (((_1acbc354e_Prim((*(_7126_dest))._field_Type.ptr()) != nullptr) && _1acbcc47b_IsStr(_1acbc354e_Prim((*(_7126_dest))._field_Type).ptr()))) {
			_case_begin_1c07bbee2:;
			{
				return _1acc4c0de_callerLenStr(&(_7126_dest), _70468_d);;
			}
		}
		else if ((_1acbc5892_comptimeStructFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bc058:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc5892_comptimeStructFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1acbc5dae_comptimeEnumFields((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bc0be:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc5dae_comptimeEnumFields((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1acbc6b7e_comptimeTypeInfos((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd257:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc6b7e_comptimeTypeInfos((*(_7126_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1acbc63cb_comptimeParams((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd2bd:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc63cb_comptimeParams((*(_7126_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1acbc719b_comptimeStatics((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd334:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc719b_comptimeStatics((*(_7126_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1acbc8202_comptimeFiles((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd39a:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc8202_comptimeFiles((*(_7126_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1acbc7bd5_comptimeDecls((*(_7126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c07bd411:;
			{
				return _1acc4c463_callerLenComptime(_70468_d, (*(_1acbc7bd5_comptimeDecls((*(_7126_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1c07bbe15:;
			{
				_1acb90395_pushErr((*(_70426_e)).ptr(), (*((*((*(_70441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c07ba265:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acc4cc16_callerCapSlice(jule::Ptr<_1acb8cded_Data>* _74424_expr, jule::Ptr<_1acb8cded_Data>* _74442_d) {
	(*((*(_74442_d))))._field_Type=_1acb8b160_lenKind();
	(*((*(_74442_d))))._field_Model=jule::Any(jule::new_ptr<_1aca9c549_BuiltinCapCallExprModel>(_1aca9c549_BuiltinCapCallExprModel{._field_Expr=(*(_74424_expr))}), &__jule_any_type119);
	return (*(_74442_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4d145_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _75226_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _75241_fc, jule::Ptr<_1acb8cded_Data>* _75268_d) {
	if (((*((*(_75241_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_75226_e)).ptr(), (*((*(_75241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_75241_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _7606_dest = _1acbadbaa_evalExpr((*(_75226_e)), (*((*(_75241_fc))))._field_Args[0LL]);;
	{
		
		if ((_7606_dest == nullptr)) {
			_case_begin_1bd92ba9e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7606_dest))._field_Decl) {
			_case_begin_1bd92c8c4:;
			{
				_1acb90395_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acbc45a5_Slc((*(_7606_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd92c93a:;
			{
				return _1acc4cc16_callerCapSlice(&(_7606_dest), _75268_d);;
			}
		}
		else {
			_case_begin_1bd92b6d6:;
			{
				_1acb90395_pushErr((*(_75226_e)).ptr(), (*((*((*(_75241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd92823d:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acc4d62e_callerDeleteMap(jule::Ptr<_1acb8edbc_eval>* _77525_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _77540_fc, jule::Ptr<_1acb8cded_Data>* _77567_expr, jule::Ptr<_1acb8cded_Data>* _77585_d) {
	if ((!((*((*(_77567_expr))))._field_Mutable))) {
		_1acb90395_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_77585_d))=_1acbba414_buildVoidData();
	jule::Ptr<_1aca9c923_BuiltinDeleteCallExprModel> _7806_model = jule::new_ptr<_1aca9c923_BuiltinDeleteCallExprModel>(_1aca9c923_BuiltinDeleteCallExprModel{._field_Dest=(*(_77567_expr)), ._field_Key=jule::Ptr<_1acb8cded_Data>(nullptr)});;
	if (((*((*(_77540_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1acb8cded_Data> _7847_key = _1acbadbaa_evalExpr((*(_77525_e)), (*((*(_77540_fc))))._field_Args[1LL]);;
		{
			
			if ((_7847_key == nullptr)) {
				_case_begin_1bd9339c9:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7847_key))._field_Decl) {
				_case_begin_1bd932632:;
				{
					_1acb90395_pushErr((*(_77525_e)).ptr(), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1bd9325bb:;
				{
					;
					jule::Ptr<_1acbc0d98_Type> _7938_keyType = (*(_1acbc50de_Map((*((*(_77567_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1acb249cd_checkAssignType((*((*(_77525_e))))._field_s, false, &(_7938_keyType), &(_7847_key), (*((*((*(_77540_fc))))._field_Args[1LL]))._field_Token, _1acb933cb_getOwnerRefers((*(_77525_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1bd932555:;
		};
		(*(_7806_model))._field_Key=_7847_key;
	};
	(*((*(_77585_d))))._field_Model=jule::Any(_7806_model, &__jule_any_type29);
	return (*(_77585_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4da5d_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _80429_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _80444_fc, jule::Ptr<_1acb8cded_Data>* _80471_d) {
	if (((*((*(_80444_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_80429_e)).ptr(), (*((*(_80444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_80444_fc))))._field_Args.len() > 2LL)) {
		_1acb90395_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _8126_dest = _1acbadbaa_evalExpr((*(_80429_e)), (*((*(_80444_fc))))._field_Args[0LL]);;
	{
		
		if ((_8126_dest == nullptr)) {
			_case_begin_1bd93a481:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8126_dest))._field_Decl) {
			_case_begin_1bd93b2a6:;
			{
				_1acb90395_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1acbc50de_Map((*(_8126_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd93b31c:;
			{
				return _1acc4d62e_callerDeleteMap(_80429_e, _80444_fc, &(_8126_dest), _80471_d);;
			}
		}
		else {
			_case_begin_1bd93a0b8:;
			{
				_1acb90395_pushErr((*(_80429_e)).ptr(), (*((*((*(_80444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd938418:;
	};
}



inline jule::Ptr<_1acb8cded_Data> _1acc4de8c_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _82740_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _82755_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_82755_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*(_82755_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_82755_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _8366_d = _1acbacd96_evalExprKind((*(_82740_e)), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8366_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1acaa540e_FnIns> _8402_f = _1acbc483b_Fn((*(_8366_d))._field_Type.ptr());;
	if ((_8402_f != nullptr)) {
		if (_1acaa68c7_IsBuiltin(_8402_f)) {
			_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8402_f.alloc)._field_Generics.len() != (*((*_8402_f.alloc)._field_Decl))._field_Generics.len())) {
			_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1ac9d1e84_StructIns> _8512_s = _1acbc4ac2_Struct((*(_8366_d))._field_Type);;
	if (((_8512_s != nullptr) && ((*_8512_s.alloc)._field_Generics.len() != (*((*_8512_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1acbc560b_comptime((*(_8366_d))._field_Type)) {
		_1acb90395_pushErr((*(_82740_e)).ptr(), (*((*((*(_82755_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_8366_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952234_buildComptimeTypeInfoData(&((*((*(_82740_e))))._field_s), &((*(_8366_d))._field_Type));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4e3bb_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _86341_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _86356_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_86356_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_86341_e)).ptr(), (*((*(_86356_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_86356_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _8716_d = _1acbadbaa_evalExpr((*(_86341_e)), (*((*(_86356_fc))))._field_Args[0LL]);;
	if ((_8716_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acb8b4b2_isGoodValueToInfer(&(_8716_d))))) {
		_1acb90395_pushErr((*(_86341_e)).ptr(), (*((*((*(_86356_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_8716_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1ac952575_buildComptimeValue(&(_8716_d));;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4e7ea_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _88338_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _88353_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_88353_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_88338_e)).ptr(), (*((*((*(_88353_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aca3208e_Const> _8876_constant = static__1aca88c61_NewI64(static_cast<jule::I64>((*((*((*(_88353_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc454c2_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8876_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8876_constant});;
}



inline jule::Ptr<_1acb8cded_Data> _1acc4ee6b_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _89538_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _89553_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_89553_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_89538_e)).ptr(), (*((*((*(_89553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac94879c_comptimeFile>(_1ac94879c_comptimeFile{._field_file=(*((*((*(_89538_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acc5039a_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _90839_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _90854_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_90854_fc))))._field_Args.len() > 0LL)) {
		_1acb90395_pushErr((*(_90839_e)).ptr(), (*((*((*(_90854_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac946d2d_comptimeFiles>(_1ac946d2d_comptimeFiles{._field_files=(*((*((*(_90839_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
}



inline jule::Ptr<_1acb8cded_Data> _1acc507c9_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _92143_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _92158_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_92158_fc))))._field_Args.len() > 2LL)) {
		_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 0LL)) {
		_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_92158_fc))))._field_Args.len() == 1LL)) {
		_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bd959879:;
			{
				goto _match_end_1bd95ab55;
			}
		}
		else {
			_case_begin_1bd95abcc:;
			{
				_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1acb90708_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1bd95ab55:;
	};
	jule::Ptr<_1abc2ba81_Token> _9426_ident = (*((*((*((*(_92158_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1ac9b4362_IdentExpr>(&__jule_any_type42)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_92143_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1)) {
			_case_begin_1bd95d262:;
			{
				goto _match_end_1bd95d493;
			}
		}
		else {
			_case_begin_1bd95d509:;
			{
				_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*(_92158_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bd95d493:;
	};
	jule::Ptr<_1ac9631bd_scopeChecker> _9516_sc = (*((*(_92143_e))))._field_lookup.cast_ptr<_1ac9631bd_scopeChecker>((jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data1);;
	jule::Ptr<_1acbc00a6_TypeAlias> _9526_alias = jule::new_ptr<_1acbc00a6_TypeAlias>(_1acbc00a6_TypeAlias{._field_Scope=(*(_9516_sc))._field_tree, ._field_Public=_1ac9a5e25_IsPub((*(_9426_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9426_ident, ._field_Ident=(*_9426_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1acbc85a9_TypeSym>(_1acbc85a9_TypeSym{._field_Decl=jule::Ptr<_1abc4259c_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1acbc0d98_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>(nullptr)});;
	jule::Ptr<_1acb8cded_Data> _9626_t = _1acbad1d7_eval1((*(_92143_e)), (*((*(_92158_fc))))._field_Args[1LL]);;
	if ((_9626_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9626_t))._field_Decl) {
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9626_t))._field_Type;
	} else {
		jule::Ptr<_1ac93cebc_comptimeTypeInfo> _9697_cti = _1acbc6e15_comptimeTypeInfo((*(_9626_t))._field_Type.ptr());;
		if ((_9697_cti == nullptr)) {
			_1acb90395_pushErr((*(_92143_e)).ptr(), (*((*((*(_92158_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1acb90708_pushSuggestion((*(_92143_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9526_alias))._field_TypeSym))._field_Type=(*(_9697_cti))._field_base;
	};
	_1ac968338_checkTypeAlias(_9516_sc, &(_9526_alias));
	return _1acbba414_buildVoidData();;
}



inline jule::Ptr<_1acb8cded_Data> _1acc50c08_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98135_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98150_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<_1acb8cded_Data> _9826_result = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc45109_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if (((*((*(_98150_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_98135_e)).ptr(), (*((*(_98150_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9826_result;;
	};
	if (((*((*(_98150_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _9946_d = _1acbacd96_evalExprKind((*(_98135_e)), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9946_d == nullptr)) {
		return _9826_result;;
	};
	if ((!(_1acbdde60_validTypeForXof(&((*(_9946_d))._field_Type))))) {
		_1acb90395_pushErr((*(_98135_e)).ptr(), (*((*((*(_98150_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_9946_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9826_result))._field_Model=jule::Any(jule::new_ptr<_1aca9d4c3_SizeofExprModel>(_1aca9d4c3_SizeofExprModel{._field_Expr=(*(_9946_d))._field_Model}), &__jule_any_type120);
	return _9826_result;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc51137_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100636_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100651_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<_1acb8cded_Data> _10076_result = jule::new_ptr<_1acb8cded_Data>(_1acb8cded_Data{._field_untyped=false, ._field_Type=_1acc45109_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aca3208e_Const>(nullptr)});;
	if (((*((*(_100651_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_100636_e)).ptr(), (*((*(_100651_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10076_result;;
	};
	if (((*((*(_100651_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _10196_d = _1acbacd96_evalExprKind((*(_100636_e)), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10196_d == nullptr)) {
		return _10076_result;;
	};
	if ((!(_1acbdde60_validTypeForXof(&((*(_10196_d))._field_Type))))) {
		_1acb90395_pushErr((*(_100636_e)).ptr(), (*((*((*(_100651_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1acbc1294_Str((*(_10196_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10076_result))._field_Model=jule::Any(jule::new_ptr<_1aca9db77_AlignofExprModel>(_1aca9db77_AlignofExprModel{._field_Expr=(*(_10196_d))._field_Model}), &__jule_any_type121);
	return _10076_result;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc51566_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103133_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103148_fc, jule::Ptr<_1acb8cded_Data>* ) {
	if (((*((*(_103148_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_103133_e)).ptr(), (*((*(_103148_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103148_fc))))._field_Args.len() > 1LL)) {
		_1acb90395_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1acb8cded_Data> _10406_d = _1acbadbaa_evalExpr((*(_103133_e)), (*((*(_103148_fc))))._field_Args[0LL]);;
	if ((_10406_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1acbc3032_GC((*(_10406_d))._field_Type.ptr())))) {
		_1acb90395_pushErr((*(_103133_e)).ptr(), (*((*((*(_103148_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1acb8cded_Data> _10496_result = _1acbba414_buildVoidData();;
	(*(_10496_result))._field_Model=jule::Any(jule::new_ptr<_1aca9e4d5_FreeExprModel>(_1aca9e4d5_FreeExprModel{._field_Expr=(*(_10406_d))._field_Model}), &__jule_any_type30);
	return _10496_result;;
}



inline jule::Ptr<_1acb8cded_Data> _1acc51995_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105444_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105459_fc, jule::Ptr<_1acb8cded_Data>* _105486_d) {
	if ((!(_1acb90d8a_isUnsafe((*(_105444_e)).ptr())))) {
		_1acb90395_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_105459_fc))))._field_Args.len() < 1LL)) {
		_1acb90395_pushErr((*(_105444_e)).ptr(), (*((*(_105459_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1acb8cded_Data> _10646_argd = _1acbadbaa_evalExpr((*(_105444_e)), (*((*(_105459_fc))))._field_Args[0LL]);;
	if ((_10646_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1acbc354e_Prim((*(_10646_argd))._field_Type.ptr()) == nullptr) || (!(_1acbcc47b_IsStr(_1acbc354e_Prim((*(_10646_argd))._field_Type).ptr()))))) {
		_1acb90395_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1acbc1294_Str((*(_10646_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1acb8d838_IsConst(_10646_argd.ptr()))) || (!(_1aca8d051_IsStr((*(_10646_argd))._field_Constant.ptr()))))) {
		_1acb90395_pushErr((*(_105444_e)).ptr(), (*((*((*(_105459_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1acb8cded_Data> _10796_r = _1acbba414_buildVoidData();;
	jule::Ptr<_1acaa540e_FnIns> _10816_f = _1acbc483b_Fn((*((*(_105486_d))))._field_Type);;
	if (((*(_10816_f))._field_Generics.len() > 0LL)) {
		(*(_10796_r))._field_Type=(*((*(_10816_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1aca9e1d8_BackendEmitExprModel> _10866_model = jule::new_ptr<_1aca9e1d8_BackendEmitExprModel>(_1aca9e1d8_BackendEmitExprModel{._field_Code=_1aca8a955_ReadStr((*(_10646_argd))._field_Constant), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_105459_fc))))._field_Args.len() > 1LL)) {
		(*(_10866_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_105459_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_105459_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bd98a635:;
			if (it != expr_end) {
				jule::Ptr<_1ac9b2a47_Expr> _109215_arg = *it;
				{
					_10646_argd=_1acbad1d7_eval1((*(_105444_e)), _109215_arg);
					if ((_10646_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10646_argd))._field_Decl) {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_10646_argd))._field_Type, &__jule_any_type87); __jule_collection; }));
					} else {
						(*_10866_model.alloc)._field_Exprs=jule::append((*_10866_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10646_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1bd98a635:;
				++it;
				goto _iter_begin_1bd98a635;
			}
			_iter_end_1bd98a635:;
		};
	};
	(*_10796_r.alloc)._field_Model=jule::Any(_10866_model, &__jule_any_type23);
	return _10796_r;;
}



inline jule::Ptr<_1ac6ac588_FileInfo> _1ad5ce61e_ParseFile(jule::Ptr<_1abc32636_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ac6ac588_FileInfo> _276_finf = jule::new_ptr<_1ac6ac588_FileInfo>(_1ac6ac588_FileInfo{._field_Ast=jule::Ptr<_1abc40644_AST>(nullptr), ._field_Errors=jule::Slice<_1a6a6bde3_Log>(nullptr)});;
	({
		__jule_tuple_x_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = _1ad5cebe6_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log _1ad5cebe6_parseFileset(jule::Ptr<_1abc32636_Fileset> _5521_f) {
	__jule_tuple_x_1abc40644_AST__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	jule::Ptr<_1ad600398_parser> _566_p = jule::new_ptr<_1ad600398_parser>(_1ad600398_parser{._field_ast=jule::Ptr<_1abc40644_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1abc419b9_Directive>>(nullptr), ._field_errors=jule::Slice<_1a6a6bde3_Log>(nullptr), ._field_ep=jule::Ptr<_1ad5deab3_exprBuilder>(nullptr)});;
	_1ad6103ca_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1ac9bd811_ScopeTree> _1ad5d0576_newScope(void) {
	return jule::new_ptr<_1ac9bd811_ScopeTree>(_1ac9bd811_ScopeTree{._field_Parent=jule::Ptr<_1ac9bd811_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1ac9bd1a1_Stmt>(nullptr), ._field_End=jule::Ptr<_1abc2ba81_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ad5d090b_isSt(jule::Ptr<_1abc2ba81_Token> _149_current, jule::Ptr<_1abc2ba81_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ad5d0c80_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1abc2ba81_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*_263_prev.alloc)._field_Id == static_cast<jule::U32>(5LLU))) || (_1abc2c5cb_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ad5d1148_nextStPos(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1abc2ba81_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c06d9e76:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1ad5d0c80_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad5d090b_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1c06ddab2;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1c06d8a13;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c06da1b8:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad5d090b_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1c06ddab2;
							};
						};
						goto _iter_next_1c06d8a13;
					}
				}
				_match_end_1c06da11e:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1c06d8a13;
			};
			if ((_366_i > _3440_start)) {
				if (_1ad5d0c80_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1c06d8a13;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad5d090b_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ad5d090b_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1c06d8a13;
			};
			_julec_label_1c06ddab2:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1c06d8a13:;
	}
	_iter_end_1c06d8a13:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool _1ad5d14bc_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9628_tokens) {
	__jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad5d1148_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1ad5d14bc_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _1ad5d1ba4_splitStmts(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ad5d17ec_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ad5d17ec_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1abc2ba81_Token__jule_tuple_bool __jule_assign_result = _1ad5d14bc_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ad5d17ec_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1ad5d17ec_stmt>(_1ad5d17ec_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1c06e2885:;
	}
	_iter_end_1c06e2885:;;
	return _1186_stmts;;
}



inline jule::Bool _1ad5ea1ea_isTypeOp(jule::U32* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U32>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U32>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1ad5ea508_isTypeRange(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0929b00:;
		if (it != expr_end) {
			jule::I32 _8806_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I32 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1abc2ba81_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c092aa35:;
						if (it != expr_end) {
							jule::Ptr<_1abc2ba81_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1c092bd88:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1c092aa35;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1c092c273:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1c092aa35;
										}
									}
									_match_end_1c092c174:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1ad5ea1ea_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1c092aa35:;
							++it;
							goto _iter_begin_1c092aa35;
						}
						_iter_end_1c092aa35:;
					};
					return true;;
				};
				if ((!(_1ad5ea1ea_isTypeOp(&((*_8809_token.alloc)._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1c0929b00:;
			++it;
			_8806_i++;
			goto _iter_begin_1c0929b00;
		}
		_iter_end_1c0929b00:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1ad5ea7c2_getBlockExpr(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _91122_tokens) {
	jule::I32 _9126_braceN = 0LL;;
	jule::I32 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c092dd35:;
		if (it != expr_end) {
			jule::I32 _9146_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1c092ede1:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c092ee79:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1c092ed25;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c092eee0:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c0930056:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1c092ed25:;
				};
			}
			_iter_next_1c092dd35:;
			++it;
			_9146_i++;
			goto _iter_begin_1c092dd35;
		}
		_iter_end_1c092dd35:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token _1ad5eab8a_splitDelim(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _94320_tokens, jule::U32 _94345_delim) {
	__jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token __jule_func_result;
	jule::I32 _9446_func = -1LL;;
	jule::I32 _9456_rangeN = 0LL;;
	jule::I32 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1abc2ba81_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1c09349a6:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c0934a2d:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1c0933433;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c0934a94:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1c0933433;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1c0934b0a:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1c0934720:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1abc2ba81_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1c0933433:;
	}
	_iter_end_1c0933433:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1ad5eae54_findLowestPrecOp(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I32 _9886_precPos = -1LL;;
	jule::I32 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0939c97:;
		if (it != expr_end) {
			jule::I32 _9926_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c093aacd:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1c093ab66;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c093ab66:;
						{
							(_9906_braceN)++;
							goto _iter_next_1c0939c97;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c093abcc:;
						{
							(_9906_braceN)--;
							goto _iter_next_1c0939c97;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1c093ac43:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1c0939c97;
						}
					}
					_match_end_1c093aa12:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1c093c4e7:;
						{
							goto _iter_next_1c0939c97;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1c093c580:;
						{
							goto _iter_next_1c0939c97;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1c093c5e6:;
						{
							goto _iter_next_1c0939c97;
						}
					}
					else if ((!(_1abc2c5cb_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1c093c65c:;
						{
							goto _iter_next_1c0939c97;
						}
					}
					_match_end_1c093c30a:;
				};
				jule::Ptr<_1abc2ba81_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1abc2c2bd_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1c0939c97;
				};
				if (((_9926_i > 1LL) && ((*_10213_left.alloc)._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1abc2ba81_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1c0939c97;
						};
					};
				};
				jule::U8 _10383_p = _1abc2be38_Prec((*(_9929_token)));;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1c0939c97:;
			++it;
			_9926_i++;
			goto _iter_begin_1c0939c97;
		}
		_iter_end_1c0939c97:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1ac9b4362_IdentExpr> _1ad5eb21d_buildIdentExpr(jule::Ptr<_1abc2ba81_Token>* _104724_token) {
	return jule::new_ptr<_1ac9b4362_IdentExpr>(_1ac9b4362_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_int _1ad5eb4d7_getRangeExprTokens(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _105528_tokens) {
	__jule_tuple_sx_1abc2ba81_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10566_rangeN = 0LL;;
	jule::I32 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1abc2ba81_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c094439a:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c09446ca:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1c0944422:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1c0943872:;
	}
	_iter_end_1c0943872:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ad5eb8b1_isAnonFnHead(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c0945ce7:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1c09465ab;
				};
				goto _case_begin_1c09466ee;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c09466ee:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1c09465ab;
				};
				return true;;
			}
		}
		_match_end_1c09465ab:;
	};
	return false;;
}



inline jule::Bool _1ad5ec560_checkAssignTokens(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1abc31613_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c09d37d0:;
		if (it != expr_end) {
			jule::Ptr<_1abc2ba81_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c09d410a:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c09d44a1:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1c09d43a2:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1c09d5617:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1c09d567d:;
						{
							goto _iter_next_1c09d37d0;
						}
					}
					else if (_1abc31b96_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1c09d56e4:;
						{
							return true;;
						}
					}
					_match_end_1c09d55a1:;
				};
			}
			_iter_next_1c09d37d0:;
			++it;
			goto _iter_begin_1c09d37d0;
		}
		_iter_end_1c09d37d0:;
	};
	return false;;
}



inline _1a6a6bde3_Log _1ad5ed51c_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1abc32636_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1a6a6c355_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1abc2ba81_Token>> _1ad5eda4a_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1abc2ba81_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1abc2ba81_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1c09da6c7:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1c09daa3a:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1c09da9a2:;
			};
		}
	_iter_next_1c09d82c9:;
	}
	_iter_end_1c09d82c9:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token _1ad5edd14_rangeLast(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _6019_tokens) {
	__jule_tuple_sx_1abc2ba81_Token__jule_tuple_sx_1abc2ba81_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1abc2ba81_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c09de8a7:;
					{
						(_706_braceN)++;
						goto _iter_next_1c09ddbe7;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c09debd7:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1c09de92e:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c09ddbe7:;
	}
	_iter_end_1c09ddbe7:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log _1ad5ee2ba_parts(jule::Slice<jule::Ptr<_1abc2ba81_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1abc2ba81_Token__jule_tuple_s_1a6a6bde3_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c09e1c50:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_1abc2ba81_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c09e3b42:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c09e3bb9:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1c09e3c30:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1c09e1c50;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1a6a6bde3_Log _1155_err = _1ad5ed51c_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1a6a6bde3_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1c09e3a76:;
				};
			}
			_iter_next_1c09e1c50:;
			++it;
			_1046_i++;
			goto _iter_begin_1c09e1c50;
		}
		_iter_end_1c09e1c50:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1abc2ba81_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1ad5ee551_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1c09e7261:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1c09e72c7:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c09e733d:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1c09e4db8:;
			{
				return _12820_left;;
			}
		}
		_match_end_1c09e4e95:;
	};
}



inline _1a6a6bde3_Log _1ad5ee980_compilerErr(jule::Ptr<_1abc2ba81_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1a6a6c355_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1abc33b21_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1ad5eed26_pushSuggestion(_1a6a6bde3_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1a6a6c355_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1abc4259c_TypeDecl> _1ad610c8d_buildVoidType(void) {
	return jule::new_ptr<_1abc4259c_TypeDecl>(_1abc4259c_TypeDecl{._field_Token=jule::Ptr<_1abc2ba81_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1acdebd1b_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1c07e23be:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a70116_IsWindows(_1a8e5a92d_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1c07e2435:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a70424_IsDarwin(_1a8e5a92d_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1c07e20a0:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a706dd_IsLinux(_1a8e5a92d_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1c07e2116:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a71348_IsUnix(_1a8e5a92d_OS);
			}
		}
		else {
			_case_begin_1c07e1a0b:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c07e1e7e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1acdec0e6_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1c07e4932:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a70a2e_IsI386(_1a8e5abd6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1c07e4998:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a70cb5_IsAmd64(_1a8e5abd6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1c07e4613:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a7107e_IsArm64(_1a8e5abd6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1c07e4679:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a71964_Is64Bit(_1a8e5abd6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1c07e46e0:;
			{
				__jule_func_result.__jule_result_arg0=_1a6a71722_Is32Bit(_1a8e5abd6_Arch);
			}
		}
		else {
			_case_begin_1c07e406e:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c07e44e2:;
	};
	return __jule_func_result;;
}



inline void _1ace18563_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1a8e5a92d_OS); };
	if (_1a6a71348_IsUnix(_1a8e5a92d_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1ace187d8_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1a8e5abd6_Arch); };
	if (_1a6a71964_Is64Bit(_1a8e5abd6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1a6a71722_Is32Bit(_1a8e5abd6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1ace18ac4_initVars(jule::Slice<jule::Str>* _5518_vars, _1ace18244_CompileInfo* _5532_info) {
	_1ace18563_setOsVars(_5518_vars);
	_1ace187d8_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c07e900d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c07e899c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1c07e8936:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c07e8a46:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c07e9eed:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c07ea064:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1c07e9e65:;
	};
}



inline jule::I32 _1ace18e8c_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07ebdbd:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_1c07ebdbd:;
			++it;
			_886_i++;
			goto _iter_begin_1c07ebdbd;
		}
		_iter_end_1c07ebdbd:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ad6150b1_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1a6b318e2_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1bbdd1440_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1a6b4363a_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a6a6bde3_Log _1ad6152ae_flatCompilerErr(jule::Str _2820_text) {
	return _1a6a6bde3_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1acaa2351_Fn> _1acc51cb4_RuntimeFindFn(jule::Ptr<_1ac98b8cd_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_1acaa2351_Fn> _96_f = _1ac98ced9_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_1ac9ce129_Struct> _1acc5217c_RuntimeFindStruct(jule::Ptr<_1ac98b8cd_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_1ac9ce129_Struct> _186_f = _1ac98cadd_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline void _1ad619bcb_pushPasses(jule::Ptr<_1ac98e150_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c084904c:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _12414_f = *it;
			{
				_julec_label_1c0849745:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0849b85:;
					if (it != expr_end) {
						_1ac97ada6_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1c0849b85;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c084a922:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1c0849b85;
										};
									}
									_iter_next_1c084a922:;
									++it;
									goto _iter_begin_1c084a922;
								}
								_iter_end_1c084a922:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1c0849b85:;
						++it;
						goto _iter_begin_1c0849b85;
					}
					_iter_end_1c0849b85:;
				};
			}
			_iter_next_1c084904c:;
			++it;
			goto _iter_begin_1c084904c;
		}
		_iter_end_1c084904c:;
	};
}



inline jule::Slice<jule::Str> _1ad61a094_getAllUniquePasses(jule::Ptr<_1ac98e150_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1ad619bcb_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c084a1b3:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1ad619bcb_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1c084a1b3:;
			++it;
			goto _iter_begin_1c084a1b3;
		}
		_iter_end_1c084a1b3:;
	};
	return _14110_passes;;
}



inline _1ace18244_CompileInfo _1ad61a2a3_buildCompileInfo(void) {
	_1ace18244_CompileInfo _1546_info = _1ace18244_CompileInfo{._field_Prod=_1a8e61e40_Production, ._field_Test=_1a8e6157c_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1a8e5e668_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c084c99b:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c084cade:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1c084ca78:;
	};
	{
		auto &_match_expr{ _1a8e60c74_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c084cb66:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c084d271:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c084d2d7:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1c084dbbc:;
	};
	return _1546_info;;
}



inline void _1ad61a55b_pushRuntimeToAST(jule::Ptr<_1abc40644_AST>* _17926_f) {
	jule::Ptr<_1ac9c6660_UseDecl> _1806_decl = jule::new_ptr<_1ac9c6660_UseDecl>(_1ac9c6660_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1abc2ba81_Token>(_1abc2ba81_Token{._field_File=jule::Ptr<_1abc32636_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1ac9c6660_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1ad61aca9_IterPackages(jule::Ptr<_1ad618328_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1ac98e150_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0868aa5:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1c0868aa5:;
			++it;
			goto _iter_begin_1c0868aa5;
		}
		_iter_end_1c0868aa5:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1ad61b02e_IterFiles(jule::Ptr<_1ac98e150_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1acaa8654_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c086e803:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1c086e803:;
			++it;
			goto _iter_begin_1c086e803;
		}
		_iter_end_1c086e803:;
	};
}



inline void _1ad61b31a_IterTraitMethods(jule::Ptr<_1acaaca65_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1acaa2351_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08704e6:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1c08704e6:;
			++it;
			goto _iter_begin_1c08704e6;
		}
		_iter_end_1c08704e6:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08709be:;
		if (it != expr_end) {
			jule::Ptr<_1acbc85a9_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1acaaca65_Trait> _297_it = _1acbc4d58_Trait((*(_2814_inh))._field_Type.ptr());;
				_1ad61b31a_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1c08709be:;
			++it;
			goto _iter_begin_1c08709be;
		}
		_iter_end_1c08709be:;
	};
}



inline jule::Bool _1ad61d55e_IsForwarded(jule::Ptr<_1ac95aa56_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c08961ba:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1acb8cded_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c089640c:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c0897078:;
						{
							return false;;
						}
					}
					_match_end_1c0897012:;
				};
			}
		}
		else {
			_case_begin_1c0896341:;
			{
				return true;;
			}
		}
		_match_end_1c08962ca:;
	};
}



inline jule::Bool _1ad61d73a_IsExprComesFromBind(jule::Ptr<_1acb8cded_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0897ac3:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1acb3d420_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0897cd2:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1c0896b38:;
			{
				return false;;
			}
		}
		_match_end_1c0896ac2:;
	};
}



inline jule::Bool _1ad61da04_IsAny(jule::Ptr<_1acbc0d98_Type>* _4015_t) {
	if ((_1acbc4088_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _442_prim = _1acbc354e_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1acbcc712_IsAny(_442_prim));;
}



inline jule::Bool _1ad61dd45_IsClosure(jule::Ptr<_1aca97e4b_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1ad61e0cb_IsOpMethod(jule::Ptr<_1acaa2351_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1acaa540e_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*(*(_562_mi))._field_Owner.alloc)._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1ad61e450_IsTraitMethod(jule::Ptr<_1ac9d1e84_StructIns>* _6823_owner, jule::Ptr<_1acaa540e_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c089d5bd:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _6914_t = *it;
			{
				if ((_1acaad747_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c089d5bd:;
			++it;
			goto _iter_begin_1c089d5bd;
		}
		_iter_end_1c089d5bd:;
	};
	return false;;
}



inline jule::Bool _1ad61e7c4_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _1a8e45ee0_HasPrefix(_8217_f, _1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1a8e59d8e_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1abc419b9_Directive> _1ad620660_FindDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08a9d16:;
		if (it != expr_end) {
			jule::Ptr<_1abc419b9_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1c08a9d16:;
			++it;
			goto _iter_begin_1c08a9d16;
		}
		_iter_end_1c08a9d16:;
	};
	return nullptr;;
}



inline jule::Bool _1ad620a28_HasDirective(jule::Slice<jule::Ptr<_1abc419b9_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1ad620660_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::I32 _1ad621562_FindTraitTypeOffsetS(jule::Ptr<_1acaaca65_Trait> _3925_t, jule::Ptr<_1ac9d1e84_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _436_i = 0LL;;
	{
		auto expr = &((*_3925_t.alloc)._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08ad5cd:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c08ae557:;
						if (it != expr_end) {
							jule::Ptr<_1ac9d1e84_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1c08ae557:;
							++it;
							goto _iter_begin_1c08ae557;
						}
						_iter_end_1c08ae557:;
					};
					goto _iter_end_1c08ad5cd;
				} else {
					_436_i+=(*(*(_449_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_1c08ad5cd:;
			++it;
			goto _iter_begin_1c08ad5cd;
		}
		_iter_end_1c08ad5cd:;
	};
	return -1LL;;
}



inline jule::I32 _1ad6218d6_FindTraitTypeOffset(jule::Ptr<_1acaaca65_Trait> _6224_t, jule::Ptr<_1acbc0d98_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1ac9d1e84_StructIns> _6610_s = nullptr;;
	if ((_1acbc37d5_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1acbc37d5_Sptr(_6245_k)))._field_Elem;
	};
	_6610_s=_1acbc4ac2_Struct(_6245_k);
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1ad621562_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1acaa540e_FnIns> _1ad621d15_FindOperator(jule::Ptr<_1ac9d1e84_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c08b2ea6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c08b2ca8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c08b2d1e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1c08b301c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c08b3094:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c08b311b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c08b323c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c08b32a3:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c08b3319:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c08b3380:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c08b33e6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c08b346d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c08b34e5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1c08b356c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c08b35e4:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1c08b366b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c08b36e3:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c08b376a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1c08b37e2:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c08b3869:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c08b38e1:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c08b3968:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1c08b39e0:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1c08b3a67:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1c08b3ade:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1c08b28e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c08b2a22:;
	};
}



inline jule::Ptr<_1acaa540e_FnIns> _1ad622189_FindFnGenericInstance(jule::Ptr<_1acaa2351_Fn>* _14731_f, jule::Slice<jule::Ptr<_1acbc0d98_Type>> _14745_generics) {
	_julec_label_1c08bb300:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08c0546:;
		if (it != expr_end) {
			jule::Ptr<_1acaa540e_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c08c0ed6:;
					if (it != expr_end) {
						jule::I32 _1507_i = it - expr->begin();
						{
							if ((!(_1acbc15d5_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_1c08c0546;
							};
						}
						_iter_next_1c08c0ed6:;
						++it;
						_1507_i++;
						goto _iter_begin_1c08c0ed6;
					}
					_iter_end_1c08c0ed6:;
				};
				return _14914_ins;;
			}
			_iter_next_1c08c0546:;
			++it;
			goto _iter_begin_1c08c0546;
		}
		_iter_end_1c08c0546:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1ac9d1e84_StructIns> _1ad62261d_FindStructGenericInstance(jule::Ptr<_1ac9ce129_Struct>* _16335_s, jule::Slice<jule::Ptr<_1acbc0d98_Type>> _16353_generics) {
	_julec_label_1c08c08cb:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08c2647:;
		if (it != expr_end) {
			jule::Ptr<_1ac9d1e84_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c08c30d7:;
					if (it != expr_end) {
						jule::I32 _1667_i = it - expr->begin();
						{
							if ((!(_1acbc15d5_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_1c08c2647;
							};
						}
						_iter_next_1c08c30d7:;
						++it;
						_1667_i++;
						goto _iter_begin_1c08c30d7;
					}
					_iter_end_1c08c30d7:;
				};
				return _16514_ins;;
			}
			_iter_next_1c08c2647:;
			++it;
			goto _iter_begin_1c08c2647;
		}
		_iter_end_1c08c2647:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_1ac98b8cd_ImportInfo> _1ad62291a_SelectImport(jule::Slice<jule::Ptr<_1ac98b8cd_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08c29cc:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_1c08c29cc:;
			++it;
			goto _iter_begin_1c08c29cc;
		}
		_iter_end_1c08c29cc:;
	};
	return nullptr;;
}



inline jule::Bool _1c0864782_isOrdered(jule::Ptr<_1acb3d420_Var>* _1418_t, jule::Slice<jule::Ptr<_1acb3d420_Var>> _1425_s) {
	_julec_label_1c0866773:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0866bd5:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1c0867565:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1c0866bd5;
							};
						}
					}
					_match_end_1c08674dd:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0867c4c:;
					if (it != expr_end) {
						jule::Ptr<_1acb3d420_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c0866bd5;
							};
						}
						_iter_next_1c0867c4c:;
						++it;
						goto _iter_begin_1c0867c4c;
					}
					_iter_end_1c0867c4c:;
				};
				return false;;
			}
			_iter_next_1c0866bd5:;
			++it;
			goto _iter_begin_1c0866bd5;
		}
		_iter_end_1c0866bd5:;
	};
	return true;;
}

inline jule::Bool _1c086a502_isOrdered(jule::Ptr<_1ac9ce129_Struct>* _1418_t, jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _1425_s) {
	_julec_label_1c086c49e:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c086c911:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c086d35c:;
					if (it != expr_end) {
						jule::Ptr<_1ac9ce129_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c086c911;
							};
						}
						_iter_next_1c086d35c:;
						++it;
						goto _iter_begin_1c086d35c;
					}
					_iter_end_1c086d35c:;
				};
				return false;;
			}
			_iter_next_1c086c911:;
			++it;
			goto _iter_begin_1c086c911;
		}
		_iter_end_1c086c911:;
	};
	return true;;
}



inline void _1c086196b_order(jule::Slice<jule::Ptr<_1acb3d420_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1c0861e33:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1c0862bc0:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1acb3d420_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c0863e13:;
				if (it != expr_end) {
					jule::Ptr<_1acb3d420_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c0863275;
						};
					}
					_iter_next_1c0863e13:;
					++it;
					goto _iter_begin_1c0863e13;
				}
				_iter_end_1c0863e13:;
			};
			if (_1c0864782_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c0863275:;
	}
	_iter_end_1c0863275:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c0861e33;
	};
}

inline void _1c086254e_order(jule::Slice<jule::Ptr<_1ac9ce129_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1c0862285:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1c0867268:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1ac9ce129_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c0869b83:;
				if (it != expr_end) {
					jule::Ptr<_1ac9ce129_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c0868ee5;
						};
					}
					_iter_next_1c0869b83:;
					++it;
					goto _iter_begin_1c0869b83;
				}
				_iter_end_1c0869b83:;
			};
			if (_1c086a502_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c0868ee5:;
	}
	_iter_end_1c0868ee5:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c0862285;
	};
}



inline void _1bb23c8ce_EliminateDefines(jule::Ptr<_1ad618328_IR>* _36526_ir) {
	jule::Ptr<_1bb239700_ObjectDeadCode> _3666_ocd = static__1bb239bd9_new(_36526_ir);;
	_1bb23c5d2_elimanate(_3666_ocd);
}



inline jule::Bool _1bb23cbdc_isAllMethodsLive(jule::Ptr<_1ac9ce129_Struct> _37121_s) {
	return ((_37121_s == (*((*(_1ad623a2b_ProgramMeta))._field_Runtime))._field_Map) || (_37121_s == (*(*(_1ad623a2b_ProgramMeta))._field_Runtime.alloc)._field_MapIterator));;
}



inline void _1bb241a59_eliminateDeadCodeOfScope(jule::Ptr<_1ac95aa56_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1ac95d5a3_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95d5a3_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac95d5a3_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ac95dc13_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1bb23d825_scopeDeadCode> _2216_sdc = jule::new_ptr<_1bb23d825_scopeDeadCode>(_1bb23d825_scopeDeadCode{._field_parent=jule::Ptr<_1bb23d825_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1ac95d5a3_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1ac95dc13_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1bb24175c_optimizeStmts(_2216_sdc);
	};
}



inline void _1bb241cce_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1acaa2351_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c3405d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c36add:;
					if (it != expr_end) {
						jule::Ptr<_1acaa540e_FnIns> _23215_ins = *it;
						{
							_1bb241a59_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1c0c36add:;
						++it;
						goto _iter_begin_1c0c36add;
					}
					_iter_end_1c0c36add:;
				};
			}
			_iter_next_1c0c3405d:;
			++it;
			goto _iter_begin_1c0c3405d;
		}
		_iter_end_1c0c3405d:;
	};
}



inline void _1bb242010_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1ac9ce129_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c37182:;
		if (it != expr_end) {
			jule::Ptr<_1ac9ce129_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0c37bdd:;
					if (it != expr_end) {
						jule::Ptr<_1ac9d1e84_StructIns> _24115_ins = *it;
						{
							_1bb241cce_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1c0c37bdd:;
						++it;
						goto _iter_begin_1c0c37bdd;
					}
					_iter_end_1c0c37bdd:;
				};
			}
			_iter_next_1c0c37182:;
			++it;
			goto _iter_begin_1c0c37182;
		}
		_iter_end_1c0c37182:;
	};
}



inline void _1bb2422b8_eliminateFunctionsScopePackage(jule::Ptr<_1ac98e150_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c38282:;
		if (it != expr_end) {
			jule::Ptr<_1acaa8654_SymTab> _24814_f = *it;
			{
				_1bb241cce_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1bb242010_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1c0c38282:;
			++it;
			goto _iter_begin_1c0c38282;
		}
		_iter_end_1c0c38282:;
	};
}



inline void _1bb2424b6_eliminateScopePackage(jule::Ptr<_1ac98e150_Package>* _25431_pkg) {
	_1bb2422b8_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1bb2426e7_EliminateScopes(jule::Ptr<_1ad618328_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1ac98b8cd_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1bb2424b6_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1c0c3a130:;
	}
	_iter_end_1c0c3a130:;;
	_1bb2424b6_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline jule::Uintptr _1bb107b84_typeData(jule::Any* _1314_m) {
	return ((jule::Uintptr)((*(((_1bb107931_anyData*)(_1314_m))))._field_typePtr));;
}



inline jule::Bool _1bb10804c_equalConst(jule::Ptr<_1aca3208e_Const> _1715_l, jule::Ptr<_1aca3208e_Const> _1736_r) {
	{
		
		if (_1aca8c79d_IsI64(_1715_l.ptr())) {
			_case_begin_1c0ca177e:;
			{
				return (_1aca8c79d_IsI64(_1736_r.ptr()) && (_1aca8a1a2_ReadI64(_1715_l) == _1aca8a1a2_ReadI64(_1736_r)));;
			}
		}
		else if (_1aca8ca34_IsU64(_1715_l.ptr())) {
			_case_begin_1c0ca1806:;
			{
				return (_1aca8ca34_IsU64(_1736_r.ptr()) && (_1aca8a438_ReadU64(_1715_l) == _1aca8a438_ReadU64(_1736_r)));;
			}
		}
		else if (_1aca8d2d7_IsF64(_1715_l.ptr())) {
			_case_begin_1c0ca187d:;
			{
				return (_1aca8d2d7_IsF64(_1736_r.ptr()) && (_1aca8abdb_ReadF64(_1715_l) == _1aca8abdb_ReadF64(_1736_r)));;
			}
		}
		else if (_1aca8d051_IsStr(_1715_l.ptr())) {
			_case_begin_1c0ca1905:;
			{
				return (_1aca8d051_IsStr(_1736_r.ptr()) && (_1aca8a955_ReadStr(_1715_l) == _1aca8a955_ReadStr(_1736_r)));;
			}
		}
		else if (_1aca8ccba_IsBool(_1715_l.ptr())) {
			_case_begin_1c0ca197c:;
			{
				return (_1aca8ccba_IsBool(_1736_r.ptr()) && (_1aca8a6be_ReadBool(_1715_l) == _1aca8a6be_ReadBool(_1736_r)));;
			}
		}
		else if (_1aca8d56d_IsNil(_1715_l.ptr())) {
			_case_begin_1c0ca1b25:;
			{
				return _1aca8d56d_IsNil(_1736_r.ptr());;
			}
		}
		else {
			_case_begin_1c0ca1691:;
			{
				return false;;
			}
		}
		_match_end_1c0ca1592:;
	};
}



inline jule::Bool _1bb1083c1_equalCasting(jule::Ptr<_1aca96763_CastingExprModel> _3617_l, jule::Ptr<_1aca96763_CastingExprModel> _3645_r) {
	if ((!(_1acbc15d5_Equal((*(_3617_l))._field_Type, (*(_3645_r))._field_Type)))) {
		return false;;
	};
	return _1bb109306_equalModels((*((*_3617_l.alloc)._field_Expr))._field_Model, (*(*(_3645_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bb108789_equalUnary(jule::Ptr<_1aca9550e_UnaryExprModel> _4315_l, jule::Ptr<_1aca9550e_UnaryExprModel> _4341_r) {
	if ((((*((*(_4315_l))._field_Op))._field_Id != (*(*(_4341_r))._field_Op.alloc)._field_Id) || ((*(*(_4315_l))._field_Op.alloc)._field_Kind != (*(*(_4341_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1bb109306_equalModels((*((*_4315_l.alloc)._field_Expr))._field_Model, (*(*(_4341_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bb108b0d_equalIndexing(jule::Ptr<_1aca97995_IndexingExprModel> _5018_l, jule::Ptr<_1aca97995_IndexingExprModel> _5047_r) {
	return (_1bb109306_equalModels((*((*(_5018_l))._field_Expr))._field_Model, (*(*(_5047_r))._field_Expr.alloc)._field_Model) && _1bb109306_equalModels((*((*_5018_l.alloc)._field_Index))._field_Model, (*(*(_5047_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1bb108e82_equalBinary(jule::Ptr<_1aca95135_BinaryExprModel> _5516_l, jule::Ptr<_1aca95135_BinaryExprModel> _5543_r) {
	if ((((*((*(_5516_l))._field_Op))._field_Id != (*(*(_5543_r))._field_Op.alloc)._field_Id) || ((*(*(_5516_l))._field_Op.alloc)._field_Kind != (*(*(_5543_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1bb109306_equalModels((*((*_5516_l.alloc)._field_Left))._field_Model, (*(*(_5543_r))._field_Left.alloc)._field_Model) && _1bb109306_equalModels((*((*_5516_l.alloc)._field_Right))._field_Model, (*(*(_5543_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1bb109306_equalModels(jule::Any _6616_l, jule::Any _6636_r) {
	if ((_1bb107b84_typeData(&(_6616_l)) != _1bb107b84_typeData(&(_6636_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6616_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0cb04a2:;
			{
				return (_6616_l.unsafe_cast_ptr<_1acb3d420_Var>() == _6636_r.cast_ptr<_1acb3d420_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0cb1041:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _743_li = _6616_l.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>();;
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _753_ri = _6636_r.cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_743_li))._field_Field == (*(_753_ri))._field_Field) && _1bb109306_equalModels((*((*_743_li.alloc)._field_Expr))._field_Model, (*(*(_753_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0cb10a7:;
			{
				return _1bb10804c_equalConst(_6616_l.cast_ptr<_1aca3208e_Const>(&__jule_any_type15), _6636_r.cast_ptr<_1aca3208e_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c0cb0b67:;
			{
				return _1bb1083c1_equalCasting(_6616_l.cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96), _6636_r.cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0cb0bcd:;
			{
				return _1bb108789_equalUnary(_6616_l.cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113), _6636_r.cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c0cb0c44:;
			{
				return _1bb108b0d_equalIndexing(_6616_l.cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43), _6636_r.cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c0cb0caa:;
			{
				return _1bb108e82_equalBinary(_6616_l.cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114), _6636_r.cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1c0cb0b01:;
			{
				return false;;
			}
		}
		_match_end_1c0cb06e4:;
	};
}



inline void _1bb10eeaa_possibleNilRemove(jule::Ptr<_1bb10decb_nils>* _7227_n, jule::Any _7237_m) {
	if (((*(_7227_n)) != nullptr)) {
		_1bb10e7b2_removeVar((*(_7227_n)).ptr(), _1bb11097d_getNilVar(_7237_m));
	};
}



inline jule::Bool _1bb110373_isGuaranteedNonNilExpr(jule::Ptr<_1bb10decb_nils>* _7832_n, jule::Any _7842_m) {
	{
		auto &_match_expr{ _7842_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c0cb6e8c:;
			{
				return true;;
			}
		}
		_match_end_1c0cb6e26:;
	};
	return (((*(_7832_n)) != nullptr) && _1bb10eb03_isSafe((*(_7832_n)).ptr(), _1bb11097d_getNilVar(_7842_m)));;
}



inline jule::Bool _1bb11063c_isNilValidType(jule::Ptr<_1acbc0d98_Type> _8623_t) {
	return (_1acbc37d5_Sptr(_8623_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1bb11097d_getNilVar(jule::Any _8814_m) {
	if ((!(_1bb127a3e_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _8814_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0cb8543:;
			{
				jule::Ptr<_1acb3d420_Var> _943_v = _8814_m.unsafe_cast_ptr<_1acb3d420_Var>();;
				if ((!((*(_943_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_8814_m.unsafe_cast_ptr<_1acb3d420_Var>());;
				};
				return _1bb11097d_getNilVar((*((*((*_943_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0cb8994:;
			{
				return static_cast<jule::Uintptr>((*(_8814_m.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1c0cb84cc:;
	};
	return 0LLU;;
}



inline jule::Bool _1bb116a0b_isConstantValidConditionalCase(jule::Ptr<_1ac95ae74_If>* _73736_i) {
	{
		auto &_match_expr{ (*((*(_73736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0cbd966:;
			{
				jule::Ptr<_1aca3208e_Const> _7403_c = (*((*(_73736_i))))._field_Expr.unsafe_cast_ptr<_1aca3208e_Const>();;
				return (_1aca8ccba_IsBool(_7403_c.ptr()) && _1aca8a6be_ReadBool(_7403_c));;
			}
		}
		_match_end_1c0cc0c10:;
	};
	return false;;
}



inline jule::Bool _1bb116d19_isUnreachableExpr(jule::Any* _74623_expr) {
	{
		auto &_match_expr{ (*(_74623_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c0cc1914:;
			{
				jule::Ptr<_1aca3208e_Const> _7493_c = (*(_74623_expr)).cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
				return (_1aca8ccba_IsBool(_7493_c.ptr()) && (!(_1aca8a6be_ReadBool(_7493_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c0cc110b:;
			{
				jule::Ptr<_1aca95135_BinaryExprModel> _7523_m = (*(_74623_expr)).cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_7523_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1bb116d19_isUnreachableExpr(&((*((*_7523_m.alloc)._field_Left))._field_Model)) || _1bb116d19_isUnreachableExpr(&((*((*_7523_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1c0cc2360:;
	};
	return false;;
}



inline jule::Bool _1bb1170d3_isConstantValidMatchCase(jule::Ptr<_1ac960cae_Case>* _76130_case) {
	{
		auto expr = &((*((*(_76130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cc5b16:;
		if (it != expr_end) {
			jule::Ptr<_1acb8cded_Data> *_7629_expr = it;
			{
				if (((_1acb8d838_IsConst((*(_7629_expr)).ptr()) && _1aca8ccba_IsBool((*(*(_7629_expr)).alloc)._field_Constant.ptr())) && _1aca8a6be_ReadBool((*((*(_7629_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1c0cc5b16:;
			++it;
			goto _iter_begin_1c0cc5b16;
		}
		_iter_end_1c0cc5b16:;
	};
	return false;;
}



inline jule::Bool _1bb117424_isUnreachableConditionalCase(jule::Ptr<_1ac95ae74_If>* _77034_i) {
	return _1bb116d19_isUnreachableExpr(&((*((*(_77034_i))))._field_Expr));;
}



inline jule::Bool _1bb1176aa_isUnreachableMatchCase(jule::Ptr<_1ac960cae_Case>* _77428_case) {
	{
		auto expr = &((*((*(_77428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cc7b07:;
		if (it != expr_end) {
			jule::Ptr<_1acb8cded_Data> *_7759_expr = it;
			{
				if ((!(_1bb116d19_isUnreachableExpr(&((*((*(_7759_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c0cc7b07:;
			++it;
			goto _iter_begin_1c0cc7b07;
		}
		_iter_end_1c0cc7b07:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1bb11d628_checkForBitShiftOpt(jule::Ptr<_1aca94b3a_OperandExprModel>* _72925_l, jule::Ptr<_1aca94b3a_OperandExprModel>* _72954_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ac92b4e9_IsInt(_1acbc1294_Str((*((*(_72925_l))))._field_Type.ptr())))) || (!(_1ac92b4e9_IsInt(_1acbc1294_Str((*((*(_72954_r))))._field_Type)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1aca8b208_AsU64((*((*(_72954_r))))._field_Model.cast_ptr<_1aca3208e_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _7372_j = _1aa4ca078_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _7382_z = static_cast<jule::U64>(_7372_j);;
	if ((static_cast<jule::F64>(_7382_z) != _7372_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _7382_z;
	return __jule_func_result;;
}



inline jule::Bool _1bb11d9e1_areSameLvalueExprModel(jule::Any* _74628_l, jule::Any* _74649_r) {
	{
		auto &_match_expr{ (*(_74628_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0e96138:;
			{
				return ((*(_74649_r)) == (*(_74628_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0e95e4b:;
			{
				{
					auto &_match_expr{ (*(_74649_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1c0e97090:;
						{
							goto _match_end_1c0e96765;
						}
					}
					else {
						_case_begin_1c0e968ca:;
						{
							return false;;
						}
					}
					_match_end_1c0e96765:;
				};
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _7593_lsi = (*(_74628_l)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _7603_rsi = (*(_74649_r)).cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_7593_lsi))._field_Field != (*(_7603_rsi))._field_Field)) {
					return false;;
				};
				return _1bb11d9e1_areSameLvalueExprModel(&((*((*_7593_lsi.alloc)._field_Expr))._field_Model), &((*(*(_7603_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0e961b0:;
			{
				{
					auto &_match_expr{ (*(_74649_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1c0e9937d:;
						{
							jule::Ptr<_1aca9550e_UnaryExprModel> _7724_ul = (*(_74628_l)).cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1aca9550e_UnaryExprModel> _7734_ur = (*(_74649_r)).cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_7724_ul))._field_Op))._field_Id != (*(*(_7734_ur))._field_Op.alloc)._field_Id) || ((*(*(_7724_ul))._field_Op.alloc)._field_Kind != (*(*(_7734_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1bb11d9e1_areSameLvalueExprModel(&((*((*_7724_ul.alloc)._field_Expr))._field_Model), &((*(*(_7734_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1c0e987bc:;
				};
			}
		}
		_match_end_1c0e960c2:;
	};
	return false;;
}



inline void _1bb120a9d_possibleDynamicRemove(jule::Ptr<_1bb11ea14_dynamic>* _7331_d, jule::Any _7344_m) {
	if (((*(_7331_d)) != nullptr)) {
		_1bb1202ea_removeVar((*(_7331_d)).ptr(), _1bb12162b_getDynamicVar(_7344_m));
	};
}



inline jule::Bool _1bb120dab_isDynamicValidType(jule::Ptr<_1acbc0d98_Type> _7927_t) {
	return _1ad61da04_IsAny(&(_7927_t));;
}



inline jule::Ptr<_1acbc0d98_Type> _1bb1212da_isTypeGuaranteedDynamicData(jule::Ptr<_1bb11ea14_dynamic>* _8137_dy, jule::Ptr<_1acbc0d98_Type> _8155_t, jule::Any _8175_m) {
	jule::Bool _822_isAny = _1ad61da04_IsAny(&(_8155_t));;
	if (((!(_822_isAny)) && (_1acbc4d58_Trait(_8155_t.ptr()) == nullptr))) {
		return _8155_t;;
	};
	if ((!(_822_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8175_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c1059a9d:;
			{
				jule::Ptr<_1aca96763_CastingExprModel> _917_cem = _8175_m.unsafe_cast_ptr<_1aca96763_CastingExprModel>();;
				return _1bb1212da_isTypeGuaranteedDynamicData(_8137_dy, (*(_917_cem))._field_ExprType, (*((*_917_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1c1059a37:;
	};
	jule::Uintptr _942_var = _1bb12162b_getDynamicVar(_8175_m);;
	if ((_942_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8137_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c105b682:;
		if (it != expr_end) {
			_1bb11e6c3_dynamicVar _9814_v = *it;
			{
				if ((_9814_v._field_var == _942_var)) {
					return _9814_v._field_kind;;
				};
			}
			_iter_next_1c105b682:;
			++it;
			goto _iter_begin_1c105b682;
		}
		_iter_end_1c105b682:;
	};
	return nullptr;;
}



inline jule::Uintptr _1bb12162b_getDynamicVar(jule::Any _10618_m) {
	if ((!(_1bb129524_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _10618_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c105c8a3:;
			{
				jule::Ptr<_1acb3d420_Var> _1123_v = _10618_m.unsafe_cast_ptr<_1acb3d420_Var>();;
				if ((!((*(_1123_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_10618_m.unsafe_cast_ptr<_1acb3d420_Var>());;
				};
				return _1bb12162b_getDynamicVar((*((*((*_1123_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c105c9d5:;
			{
				return static_cast<jule::Uintptr>((*(_10618_m.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c105c92a:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _1233_uem = _10618_m.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>();;
				if (((*((*(_1233_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1bb12162b_getDynamicVar((*((*_1233_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c105c83c:;
	};
	return 0LLU;;
}



inline jule::Bool _1bb125245_isValidBoundaryInfo(jule::Any _8424_m) {
	return _1bb125982_fitsSize(_8424_m, _8424_m);;
}



inline jule::I32 _1bb12560d_fitsMaxSize(jule::Slice<jule::Any> _8916_max, jule::Any _8940_expr) {
	{
		auto expr = &(_8916_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c106c066:;
		if (it != expr_end) {
			jule::I32 _906_i = it - expr->begin();
			jule::Any *_909_m = it;
			{
				if (_1bb125982_fitsSize((*(_909_m)), _8940_expr)) {
					return _906_i;;
				};
			}
			_iter_next_1c106c066:;
			++it;
			_906_i++;
			goto _iter_begin_1c106c066;
		}
		_iter_end_1c106c066:;
	};
	return -1LL;;
}



inline jule::Bool _1bb125982_fitsSize(jule::Any _9813_e1, jule::Any _9834_e2) {
	if ((_1bb107b84_typeData(&(_9813_e1)) != _1bb107b84_typeData(&(_9834_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9813_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c106da18:;
			{
				jule::Ptr<_1aca3208e_Const> _1043_exprConst = _9834_e2.cast_ptr<_1aca3208e_Const>(&__jule_any_type15);;
				return ((_1aca8b48e_AsF64(_1043_exprConst.ptr()) >= 0LL) && _1aca90196_GtEq(_9813_e1.unsafe_cast_ptr<_1aca3208e_Const>().ptr(), (*(_1043_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c106da7e:;
			{
				return (_9834_e2 == _9813_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c106db06:;
			{
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _1093_ssi1 = _9813_e1.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>();;
				jule::Ptr<_1aca99ba6_StructSubIdentExprModel> _1103_ssi2 = _9834_e2.cast_ptr<_1aca99ba6_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1bb109306_equalModels((*((*(_1093_ssi1))._field_Expr))._field_Model, (*(*(_1103_ssi2))._field_Expr.alloc)._field_Model) && ((*_1093_ssi1.alloc)._field_Field == (*(_1103_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c106d6c7:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _1133_uem1 = _9813_e1.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>();;
				jule::Ptr<_1aca9550e_UnaryExprModel> _1143_uem2 = _9834_e2.cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1133_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*(_1133_uem1))._field_Op.alloc)._field_Id != (*(*(_1143_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1bb125982_fitsSize((*((*_1133_uem1.alloc)._field_Expr))._field_Model, (*(*(_1143_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1c106d661:;
			{
				return false;;
			}
		}
		_match_end_1c106d595:;
	};
}



inline void _1bb125cb2_possibleBoundaryRemove(jule::Ptr<_1bb1241cd_boundary>* _12432_b, jule::Any _12446_model) {
	{
		auto expr = &((*((*(_12432_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c10728c9:;
		if (it != expr_end) {
			_1bb123d8c_boundaryVar _12614_v = *it;
			{
				{
					auto expr = &(_12614_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1075b96:;
					if (it != expr_end) {
						jule::I32 _1277_i = it - expr->begin();
						jule::Any _12710_max = *it;
						{
							if (_1bb109306_equalModels(_12710_max, _12446_model)) {
								_12614_v._field_maxSize=jule::append(_12614_v._field_maxSize.slice(0LL, _1277_i),_12614_v._field_maxSize.slice((_1277_i + 1LL)));
								goto _iter_end_1c1075b96;
							};
						}
						_iter_next_1c1075b96:;
						++it;
						_1277_i++;
						goto _iter_begin_1c1075b96;
					}
					_iter_end_1c1075b96:;
				};
			}
			_iter_next_1c10728c9:;
			++it;
			goto _iter_begin_1c10728c9;
		}
		_iter_end_1c10728c9:;
	};
}



inline jule::Bool _1bb12607b_isBoundaryRiskyType(jule::Ptr<_1acbc0d98_Type> _13628_t) {
	return (_1acbc431e_Arr(_13628_t.ptr()) == nullptr);;
}



inline jule::Bool _1bb126345_isBoundaryValidType(jule::Ptr<_1acbc0d98_Type> _14128_t) {
	return ((_1acbc45a5_Slc(_14128_t.ptr()) != nullptr) || (_1acbc431e_Arr(_14128_t) != nullptr));;
}



inline jule::Uintptr _1bb12660e_getBoundaryVar(jule::Any _14319_m) {
	if ((!(_1bb127a3e_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14319_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c107834c:;
			{
				jule::Ptr<_1acb3d420_Var> _1493_v = _14319_m.unsafe_cast_ptr<_1acb3d420_Var>();;
				if ((!((*(_1493_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14319_m.unsafe_cast_ptr<_1acb3d420_Var>());;
				};
				return _1bb12660e_getBoundaryVar((*((*((*_1493_v.alloc)._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c107845c:;
			{
				return static_cast<jule::Uintptr>((*(_14319_m.unsafe_cast_ptr<_1aca99ba6_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c10783b3:;
			{
				jule::Ptr<_1aca9550e_UnaryExprModel> _1603_uem = _14319_m.unsafe_cast_ptr<_1aca9550e_UnaryExprModel>();;
				if (((*((*(_1603_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1bb12660e_getBoundaryVar((*((*_1603_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c10782d6:;
	};
	return 0LLU;;
}



inline void _1bb12a3e3_PushOptLevel(jule::I32 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I32>(2LL));;
	_1bb126dd4_Copy=_422_l1;
	_1bb1271d1_Deadcode=_422_l1;
	_1bb127489_Append=_422_l1;
	_1bb127786_Math=_422_l1;
	_1bb127a3e_Access=_422_l1;
	_1bb127ce7_Inline=_422_l1;
	_1bb1280a0_Ptr=_422_l1;
	_1bb128468_Cond=_422_l1;
	_1bb1286aa_Str=_422_l1;
	_1bb128952_Slice=_422_l1;
	_1bb128c0a_Assign=_422_l1;
	_1bb128eb3_Exceptional=_422_l1;
	_1bb12926b_Iter=_422_l1;
	_1bb129524_Dynamic=_422_l1;
	_1bb1297cc_Array=_422_l1;
	_1bb129cb6_Len=_422_l1;
	_1bb12a008_StdStrings=_432_l2;
	_1bb12a217_StdMathCmplx=_432_l2;
}



inline void _1bb24609c_detectEnabled(void) {
	_1bb243b38_exprEnabled=((((((((_1bb12a008_StdStrings || _1bb1280a0_Ptr) || _1bb127786_Math) || _1bb127a3e_Access) || _1bb128468_Cond) || _1bb1297cc_Array) || _1bb1286aa_Str) || _1bb129524_Dynamic) || _1bb129cb6_Len);
	_1bb243d47_scopeEnabled=(((((((((_1bb128468_Cond || _1bb127489_Append) || _1bb126dd4_Copy) || _1bb1286aa_Str) || _1bb128952_Slice) || _1bb128c0a_Assign) || _1bb128eb3_Exceptional) || _1bb12926b_Iter) || _1bb129524_Dynamic) || _1bb12a217_StdMathCmplx);
}



inline void _1c16a205d_Reverse(jule::Slice<jule::U8> _7327_s) {
	{
		auto expr = _7327_s.slice(0LL, (_7327_s.len() >> 1LL));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c16a3218:;
		if (it != expr_end) {
			jule::I32 _746_i = it - expr.begin();
			{
				({
					jule::U8 ___jule_assign_arg = _7327_s[((_7327_s.len() - _746_i) - 1LL)];
					jule::U8 _1___jule_assign_arg = _7327_s[_746_i];
					_7327_s[_746_i] = ___jule_assign_arg;
					_7327_s[((_7327_s.len() - _746_i) - 1LL)] = _1___jule_assign_arg;
				});
			}
			_iter_next_1c16a3218:;
			++it;
			_746_i++;
			goto _iter_begin_1c16a3218;
		}
		_iter_end_1c16a3218:;
	};
}



inline void _1c16a0b72_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1c16a205d_Reverse(_4222_s.slice(0LL, _4230_r));
	_1c16a205d_Reverse(_4222_s.slice(_4230_r));
	_1c16a205d_Reverse(_4222_s);
}



inline void _1c169c07a_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1c16a0b72_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1c169a71b_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::U8> _1c1696371_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7240_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7240_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7240_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1c169a71b_overlaps(_7240_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7240_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7240_v);
	_1c169c07a_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline jule::U64 _1aae3dd82_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1bb25152a_isCopyOptimizable(jule::Ptr<_1acb8cded_Data>* _117223_expr) {
	if ((!((*((*(_117223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c0e73104:;
			{
				return false;;
			}
		}
		_match_end_1c0e7308d:;
	};
	return true;;
}



inline jule::Bool _1bb2518e3_isIterCopyOptimizable(jule::Ptr<_1acb8cded_Data>* _118327_expr, jule::Ptr<_1acb3d420_Var>* _118347_v) {
	if (((!((*((*(_118327_expr))))._field_Lvalue)) && (!(_1acbc277e_Mutable((*((*(_118327_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118347_v))))._field_Mutable)) && (!((*((*(_118327_expr))))._field_Mutable)));;
}



inline jule::Bool _1bb251d22_captureVarHandling(jule::Ptr<_1aae49299_ObjectCoder>* _119028_oc, jule::Ptr<_1aca97e4b_AnonFnExprModel>* _119051_m, jule::Ptr<_1acb3d420_Var>* _119083_v) {
	{
		auto expr = &((*((*(_119051_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0e752c1:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _11919_cv = *it;
			{
				if ((_11919_cv == (*(_119083_v)))) {
					_1aae499b4_write((*(_119028_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1bb26be5d_var(&((*((*(_119028_oc))))._field_Buf), (*(_119083_v)));
					return true;;
				};
			}
			_iter_next_1c0e752c1:;
			++it;
			goto _iter_begin_1c0e752c1;
		}
		_iter_end_1c0e752c1:;
	};
	return false;;
}



inline jule::Str _1bb26441c_decomposeCommonEsq(jule::U8 _190923_b) {
	{
		auto &_match_expr{ _190923_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c1262767:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c12625d0:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c1262646:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c126213a:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c12621a1:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c1262228:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c12622a0:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c1262327:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c12627cd:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c1262844:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1c125eb0a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c1262080:;
	};
}



inline jule::Str _1bb26472a_sbtoa(jule::U8 _193610_b) {
	if ((_193610_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_193610_b < 128LLU)) {
		jule::Str _19413_seq = _1bb26441c_decomposeCommonEsq(_193610_b);;
		if (!(_19413_seq).empty()) {
			return _19413_seq;;
		};
		if (((32LL <= _193610_b) && (_193610_b <= 126LLU))) {
			return __jule_strFromByte(_193610_b);;
		};
	};
	jule::Str _19492_seq = _1aa519a9b_FmtUint(static_cast<jule::U64>(_193610_b), 8LL);;
	if ((_19492_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19492_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19492_seq);;
}



inline void _1bb264a16_cstrBytes(_1a6a5cb3c_Builder* _195619_s, jule::Str _195640_ctx) {
	{
		auto expr = &(_195640_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1267409:;
		if (it != expr_end) {
			jule::U8 *_19579_b = it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_195619_s, _1bb26472a_sbtoa((*(_19579_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1958:3"));
					(except.result);
				});
			}
			_iter_next_1c1267409:;
			++it;
			goto _iter_begin_1c1267409;
		}
		_iter_end_1c1267409:;
	};
}



inline void _1bb264d46_cstrLit(_1a6a5cb3c_Builder* _196217_s, jule::Str _196238_ctx) {
	({
		auto except = _1a6a5ddc4_WriteByte(_196217_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1963:2"));
	});
	_1bb264a16_cstrBytes(_196217_s, _196238_ctx);
	({
		auto except = _1a6a5ddc4_WriteByte(_196217_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1965:2"));
	});
}



inline void _1bb2651dc_ftoa(_1a6a5cb3c_Builder* _196814_s, jule::F64 _196835_f, jule::I32 _196843_bitsize) {
	if ((_196843_bitsize != 32LL)) {
		if ((_196835_f == static_cast<jule::F64>(static_cast<jule::I64>(_196835_f)))) {
			_1bb2654c8_itoa(_196814_s, static_cast<jule::I64>(_196835_f));
			return;;
		};
		if ((_196835_f == static_cast<jule::F64>(static_cast<jule::U64>(_196835_f)))) {
			_1bb2657b4_utoa(_196814_s, static_cast<jule::U64>(_196835_f));
			return;;
		};
	};
	jule::Str _19792_m = _1aa503788_FmtFloat(_196835_f, 'f', -1LL, _196843_bitsize);;
	({
		auto except = _1a6a5db1b_WriteStr(_196814_s, _19792_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1980:2"));
		(except.result);
	});
	if ((!(_1a8e4a830_Contains(_19792_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1a6a5db1b_WriteStr(_196814_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1982:3"));
			(except.result);
		});
	};
}



inline void _1bb2654c8_itoa(_1a6a5cb3c_Builder* _198614_s, jule::I64 _198635_x) {
	{
		
		if ((_198635_x == jule::MAX_I64)) {
			_case_begin_1c126b9a2:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_198614_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1989:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_198635_x == jule::MIN_I64)) {
			_case_begin_1c126ba4b:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_198614_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1992:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1c126b881:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(_198614_s, _1aa519e64_FmtInt(_198635_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1996:2"));
		(except.result);
	});
	if (_1a6a71964_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1a6a5ddc4_WriteByte(_198614_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1998:3"));
		});
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_198614_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2000:2"));
	});
}



inline void _1bb2657b4_utoa(_1a6a5cb3c_Builder* _200314_s, jule::U64 _200335_x) {
	{
		
		if ((_200335_x == jule::MAX_U64)) {
			_case_begin_1c126db3b:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_200314_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2006:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1c126d9e8:;
	};
	({
		auto except = _1a6a5db1b_WriteStr(_200314_s, _1aa519a9b_FmtUint(_200335_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2010:2"));
		(except.result);
	});
	if (_1a6a71964_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1a6a5ddc4_WriteByte(_200314_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2012:3"));
		});
	};
	({
		auto except = _1a6a5db1b_WriteStr(_200314_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2014:2"));
		(except.result);
	});
}



inline void _1bb265e13_operatorOverloadingBinary(_1a6a5cb3c_Builder* _201735_buf, jule::Ptr<_1ac9d1e84_StructIns>* _201763_s, jule::Str* _201785_l, jule::Str* _20183_r, jule::U32 _201811_op, jule::Str _201826_kind) {
	;
	jule::Ptr<_1acaa540e_FnIns> _20206_f = static_cast<jule::Ptr<_1acaa540e_FnIns>>(nullptr);;
	if ((_201811_op == static_cast<jule::U32>(51LLU))) {
		_20206_f=_1ad621d15_FindOperator(_201763_s, static_cast<jule::U32>(50LLU), false);
		({
			auto except = _1a6a5ddc4_WriteByte(_201735_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:3"));
		});
	} else {
		_20206_f=_1ad621d15_FindOperator(_201763_s, _201811_op, false);
	};
	if ((_20206_f == nullptr)) {
		if (((_201811_op == static_cast<jule::U32>(50LLU)) || (_201811_op == static_cast<jule::U32>(51LLU)))) {
			static__1bb26b886_structureIns(_201735_buf, _201763_s);
			({
				auto except = _1a6a5db1b_WriteStr(_201735_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2031:4"));
				(except.result);
			});
			goto _julec_label_1c127258a;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2034:3"));;
	};
	static__1bb26abd7_funcIns(_201735_buf, &(_20206_f));
	_julec_label_1c127258a:;
	({
		auto except = _1a6a5db1b_WriteStr(_201735_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2038:2"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_201735_buf, (*(_201785_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2039:2"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_201735_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2040:2"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_201735_buf, (*(_20183_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2041:2"));
		(except.result);
	});
	({
		auto except = _1a6a5ddc4_WriteByte(_201735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2042:2"));
	});
}



inline jule::Slice<jule::U8> _1aae56ce0_concatAllParts(jule::Slice<jule::Ptr<_1abc2ba81_Token>> _137519_parts) {
	jule::I32 _13766_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c156a300:;
		if (it != expr_end) {
			jule::Ptr<_1abc2ba81_Token> *_13779_part = it;
			{
				_13766_n+=(*(*(_13779_part)).alloc)._field_Kind.len();
			}
			_iter_next_1c156a300:;
			++it;
			goto _iter_begin_1c156a300;
		}
		_iter_end_1c156a300:;
	};
	if ((_13766_n == 0LL)) {
		return nullptr;;
	};
	_1a6a5cb3c_Builder _13836_s = static__1a6a5d489_New(_13766_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c156a872:;
		if (it != expr_end) {
			jule::Ptr<_1abc2ba81_Token> *_13849_p = it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_13836_s, (*((*(_13849_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1385:3"));
					(except.result);
				});
			}
			_iter_next_1c156a872:;
			++it;
			goto _iter_begin_1c156a872;
		}
		_iter_end_1c156a872:;
	};
	return _1a6a5ee4c_Buf(&_13836_s);;
}



inline jule::Bool _1aae570ed_isHeadDecl(jule::Ptr<_1acaa2351_Fn>* _139120_m) {
	if ((((*((*(_139120_m))))._field_Generics.len() > 0LL) || ((*((*(_139120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _1ad61e0cb_IsOpMethod(_139120_m);;
}



inline jule::Bool _1aae573b7_defaultEq(jule::Ptr<_1ac9d1e84_StructIns>* _139915_s) {
	return ((*((*(_139915_s))))._field_Comparable && ((*((*(_139915_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1aae6634e_ableToInit(jule::Ptr<_1acbc0d98_Type>* _44820_t) {
	return (!(_1acbc1c45_Binded((*(_44820_t)).ptr())));;
}



inline jule::Bool _1aae66629_shouldInitialized(jule::Ptr<_1acbc0d98_Type>* _45527_t) {
	if ((!(_1aae6634e_ableToInit(_45527_t)))) {
		return false;;
	};
	jule::Ptr<_1acbc8eb1_Prim> _4592_prim = _1acbc354e_Prim((*(_45527_t)).ptr());;
	if ((_4592_prim != nullptr)) {
		return ((!(_1acbcc712_IsAny(_4592_prim))) && (!(_1acbcc47b_IsStr(_4592_prim))));;
	};
	{
		
		if ((_1acbc37d5_Sptr((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b23d1:;
			{
				return false;;
			}
		}
		else if ((_1acbc50de_Map((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b315c:;
			{
				return false;;
			}
		}
		else if ((_1acbc45a5_Slc((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b2469:;
			{
				return false;;
			}
		}
		else if ((_1acbc4d58_Trait((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b24d0:;
			{
				return false;;
			}
		}
		else if ((_1acbc483b_Fn((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b32e4:;
			{
				return false;;
			}
		}
		else if ((_1acbc431e_Arr((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b335a:;
			{
				jule::Ptr<_1acbd07d1_Arr> _4757_arr = _1acbc431e_Arr((*(_45527_t)).ptr());;
				return _1aae6634e_ableToInit(&((*(_4757_arr))._field_Elem));;
			}
		}
		else if ((_1acbc4ac2_Struct((*(_45527_t)).ptr()) != nullptr)) {
			_case_begin_1c16b33c1:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c16b22d2:;
			{
				return true;;
			}
		}
		_match_end_1c16b26bc:;
	};
}



inline void _1a8e632d7_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1bbdd1440_toStr(_3022_msg));
}



inline void _1a8e6355c_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1a8e6310b_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1a8e6310b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13849ee:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1c13849ee:;
			++it;
			goto _iter_begin_1c13849ee;
		}
		_iter_end_1c13849ee:;
	};
	_1a6a5cb3c_Builder _496_s = static__1a6a5d489_New(32LL);;
	;
	{
		auto expr = &(_1a8e6310b_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13862d6:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1a6a5db1b_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_496_s, _1a8e45b27_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1a6a5ddc4_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1c13862d6:;
			++it;
			_516_i++;
			goto _iter_begin_1c13862d6;
		}
		_iter_end_1c13862d6:;
	};
	jule::println(_1c13869e0_toStr(_496_s));
}



inline void _1a8e6378d_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1bbdd1440_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1a8e6399c_toolDistos(void) {
	jule::print(_1bbdd1440_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1c1395c0d_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1bbdd1440_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c1395c0d_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1bbdd1440_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c1395c0d_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1bbdd1440_toStr(jule::Str()));
}



inline void _1a8e63b12_toolDistarch(void) {
	jule::print(_1bbdd1440_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1c139ac46_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1bbdd1440_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c139ac46_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1bbdd1440_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c139ac46_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1bbdd1440_toStr(jule::Str()));
}



inline void _1a8e63d10_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1bbdd1440_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c17c5c64:;
			{
				_1a8e6399c_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c17c46ad:;
			{
				_1a8e63b12_toolDistarch();
			}
		}
		else {
			_case_begin_1c17c44b0:;
			{
				_1a8e632d7_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1c17c458c:;
	};
}



inline void _1a8e64041_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1bbdd1440_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1bbdd1440_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_1bbdd1440_toStr(jule::Str::lit("operating system: windows", 25)));
	jule::println(_1bbdd1440_toStr((jule::Str::lit("default compiler: ", 18) + _1a8e5e668_Compiler)));
	jule::println(_1bbdd1440_toStr((jule::Str::lit("default C++ standard: ", 22) + _1a8e60c74_CppStd)));
}



inline void _1a8e64382_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1bbdd1440_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c17c96b3:;
			{
				({
					auto except = static__1a6b31c88_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1a8e632d7_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c17c8a03:;
			{
				_1a8e632d7_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c17c911e:;
	};
}



inline jule::Bool _1a8e645c4_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c17ca450:;
			{
				_1a8e6355c_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c17cab15:;
			{
				_1a8e6378d_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c17cab7b:;
			{
				_1a8e63d10_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c17cabe2:;
			{
				_1a8e64041_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c17cac58:;
			{
				_1a8e64382_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c17c9295:;
			{
				return false;;
			}
		}
		_match_end_1c17c9d12:;
	};
	return true;;
}



inline void _1a8e6476c_showInfo(void) {
	jule::println(_1bbdd1440_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1a8e648e3_main(void) {
	jule::Slice<jule::Str> _1896_args = _1a6b43a69_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1a8e6476c_showInfo();
		return;;
	};
	if (_1a8e645c4_processCommand(&(_1896_args))) {
		return;;
	};
	_1bbb031d9_compileCommand(&(_1896_args));
}



inline void _1a8e65240_enableVtp(void) {
	jule::Uintptr _192_hOut = _1bb727c76_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));;
	if ((_192_hOut == 4294967295LLU)) {
		return;;
	};
	jule::I32 _246_dwMode = 0LL;;
	if ((!(_1bb72a2ea_GetConsoleMode(_192_hOut, &(_246_dwMode))))) {
		return;;
	};
	_246_dwMode|=4LL;
	_1bb72a905_SetConsoleMode(_192_hOut, _246_dwMode);
}



inline void _1a8e6540a_init(void) {
	_1a8e65240_enableVtp();
}



inline void _1aaecc4d6_init(void) {
	_1a8e5e668_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1a6b3087a_File> _1aaecc7a0_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _1a8e52edb_Dir((*(_3016_path)));;
	({
		auto except = static__1a8e596eb_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__1a8e53948_Create(_312_dir);
				if (!except.ok()) {
					_1aa51c890_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1a6b31628_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1aa51c890_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1aaecc948_clearObjects(void) {
	({
		auto except = static__1a6b3494a_Remove(_1aaecda9d_getCompilePath());
		if (!except.ok()) {
			jule::println(_1bbdd1440_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1a8e53b79_Remove(_1aaecbb9a_OutDir);
}



inline void _1aaeccc56_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1a6b8a3eb_Cmd> _606_cmd = static__1a6b8a84c_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_1a8e4a4ab_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1a6b8aa4a_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type138) == _match_expr) {
					_case_begin_1c03eb5a0:;
					{
						static__1bb5b4ea9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type138) == _match_expr) {
					_case_begin_1c03eb6e3:;
					{
						static__1bb5b4ea9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c03eb083:;
					{
						static__1bb5b4ea9_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c03eb193:;
			};
			_1aa51c890_Throw(jule::Str());
		}
	});
	jule::I32 _732_status = ({
		auto except = _1a6b8aece_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ((jule::Str::lit("\n>>> your backend compiler (", 28) + _1a8e5e668_Compiler) + jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1bb5b4ea9_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1aa51c890_Throw(jule::Str());
	};
	_1aaecc948_clearObjects();
}



inline jule::Bool _1aaecd020_isCppSourceFile(jule::Str _8620_path) {
	jule::I32 _872_offset = _1a8e48be6_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1a6a224e7_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1aaecd251_pushCompCmdClang(_1a6a5cb3c_Builder* _9426_cmd) {
	({
		auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1a8e60c74_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bee6604e:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bee67a67:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bee67acd:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1bee85678:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_1a8e61e40_Production) {
		({
			auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a6a5db1b_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _1aaecd482_pushCompCmdGcc(_1a6a5cb3c_Builder* _12024_cmd) {
	({
		auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1a8e60c74_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1bee87aba:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1bee8845b:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1bee884c2:;
			{
				({
					auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1bee881e7:;
	};
	({
		auto except = _1a6a5ddc4_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_1a8e61e40_Production) {
		({
			auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a6a5db1b_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1aaecd916_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1ad618328_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_1a8e60a65_CompilerPath);;
	_1a6a5cb3c_Builder _1486_cmd = static__1a6a5d489_New(64LL);;
	{
		auto &_match_expr{ _1a8e5e668_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1bee8b1b7:;
			{
				_1aaecd482_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1bee8b6e5:;
			{
				_1aaecd251_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1bee8b409:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee8b99d:;
		if (it != expr_end) {
			jule::Ptr<_1ac98b8cd_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1aaecd020_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _1a6a5db1b_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _1a6a5ddc4_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1bee8b99d:;
			++it;
			goto _iter_begin_1bee8b99d;
		}
		_iter_end_1bee8b99d:;
	};
	if (!(_1aaecc32c_Out).empty()) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1a6a5db1b_WriteStr(&_1486_cmd, _1aaecc32c_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _1a6a5ddc4_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _1a6a5db1b_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0401ac2:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _1a6a5ddc4_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _1a6a5db1b_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1c0401ac2:;
			++it;
			goto _iter_begin_1c0401ac2;
		}
		_iter_end_1c0401ac2:;
	};
	if ((_1a8e5a92d_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1a6a5db1b_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1a6a5e49b_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1aaecda9d_getCompilePath(void) {
	return _1a8e522e8_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1aaecbb9a_OutDir; (*it++) = _1aaecc074_OutName; __jule_collection; }));;
}



inline void _1aaecdcce_applyTargetIndependentOptimizations(jule::Ptr<_1ad618328_IR>* _19245_ir) {
	jule::Ptr<_1bb243ece_Optimizer> _1936_opt = static__1bb244496_New(_19245_ir);;
	_1bb245d38_Optimize(_1936_opt.ptr());
}



inline void _1aaecde77_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1a8e5e668_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c0404982:;
			{
				_1aa51c890_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c0404586:;
			{
				if ((_1a8e60a65_CompilerPath).empty()) {
					_1a8e60a65_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c04045ec:;
			{
				if ((_1a8e60a65_CompilerPath).empty()) {
					_1a8e60a65_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c04040be:;
			{
				_1aa51c890_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1a8e5e668_Compiler));
			}
		}
		_match_end_1c04043cc:;
	};
}



inline void _1aaece186_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1aa51c890_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1aaece3b7_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1aa51c890_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1aaece5e8_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1aa51c890_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _1a8e4a4ab_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_1aa51c890_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1aaece3b7_checkTargetOs(_2402_os);
		_1a8e5a92d_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1aaece186_checkTargetArch(_2406_arch);
		_1a8e5abd6_Arch=_2406_arch;
	};
	_1ac925416_UpdateTarget();
}



inline void _1aaece829_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1aa51c890_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c040b8ac:;
			{
				goto _match_end_1c040b082;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c040b1e7:;
			{
				_1bb12a3e3_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1c040b25d:;
			{
				_1bb12a3e3_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1c040b170:;
			{
				_1aa51c890_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1c040b082:;
	};
}



inline void _1aaece9b1_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1a8e60c74_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c040ccba:;
			{
				goto _match_end_1c040c6c1;
			}
		}
		else {
			_case_begin_1c040b5b0:;
			{
				_1aa51c890_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1a8e60c74_CppStd));
			}
		}
		_match_end_1c040c6c1:;
	};
}



inline jule::Slice<jule::Str> _1bbb029ad_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1aaec703b_FlagSet> _2856_fs = static__1aaec735a_New();;
	_1c040e66d_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c040e66d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c040e66d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1aaecc32c_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a8e6101b_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a8e612c4_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c040e66d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1a8e5e668_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c040e66d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1a8e60a65_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a8e61e40_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a8e61835_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1a8e61bed_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c040e66d_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1a8e60c74_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb126dd4_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb1271d1_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb127489_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb127786_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb127a3e_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb127ce7_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb1280a0_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb128468_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb1286aa_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb128952_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb128c0a_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb128eb3_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb12926b_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb129524_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb1297cc_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb129cb6_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb12a008_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1c0418787_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb12a217_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _1aaec8229_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_1aa51c890_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1aaecde77_checkCompilerFlag();
	_1aaece9b1_checkCppStdFlag();
	_1aaece5e8_checkTargetFlag(&(_2836_target));
	_1aaece829_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _1bbb02bde_setupSemaFlags(jule::I32* _33024_flags) {
	if (_1a8e6101b_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1ad618328_IR> _1bbb02ea8_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _1bbb029ad_checkFlags(_33613_args);;
	jule::I32 _3396_semaFlags = static_cast<jule::I32>(0LL);;
	_1bbb02bde_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_1aa51c890_Throw(_1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_1aa51c890_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1a8e52848_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_1aa51c890_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1a6b32eba_Stat _3532_inf = ({
		auto except = static__1a8e596eb_Of(_1a8e59d8e_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1aa51c890_Throw(_1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1a6b32eba_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a6b333c7_IsDir(&_3532_inf)))) {
		_1aa51c890_Throw(_1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ad618328_IR> _3616_ir;
	jule::Slice<_1a6a6bde3_Log> _36110_logs;
	({
		__jule_tuple_x_1ad618328_IR__jule_tuple_s_1a6a6bde3_Log __jule_assign_result = static__1ad618801_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_1aa51c890_Throw(_1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__1aa51bdbc_PrintLogs(&(_36110_logs));
		_1aa51c890_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _1bbb031d9_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_1a8e6157c_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ad618328_IR> _3826_ir = _1bbb02ea8_buildIr(_37624_args);;
	_1ad623a2b_ProgramMeta=static__1ad626138_Collect(_3826_ir);
	if ((!(_1a8e6157c_Test))) {
		;
		(*(_1ad623a2b_ProgramMeta))._field_EntryPoint=_1ac990717_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1ad623a2b_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1aa51c890_Throw(_1a6a6c355_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1aaecdcce_applyTargetIndependentOptimizations(&(_3826_ir));
	_1ad619868_Order(_3826_ir);
	jule::Str _4002_compPath = _1aaecda9d_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1aaecd916_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1aae49299_ObjectCoder> _4036_oc = static__1aae4970b_New(&(_3826_ir), _1aae469e4_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_1a8e6157c_Test) {
		jule::Ptr<_1bb266b7d_TestCoder> _4087_tc = static__1bb267134_New(&(_4036_oc));;
		_1bb2684a9_Serialize(_4087_tc);
	} else {
		_1aae5695a_Serialize(_4036_oc);
	};
	jule::Ptr<_1a6b3087a_File> _4146_file = _1aaecc7a0_openOutput(&(_4002_compPath));;
	({
		auto except = _1a6b34dce_Write(_4146_file.ptr(), _1a6a5ee4c_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_1aa51c890_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1a6b32591_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_1a8e612c4_Transpilation))) {
		_1aaeccc56_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1a8e5ad29_init();
	_1ac92558c_init();
	_1a8e6540a_init();
	_1aaecc4d6_init();

}

inline jule::Bool __jule_anon1be2c7cc9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa42a9_ParamIns> _25021_p1, jule::Ptr<_1acaa42a9_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1acaa0ecb_IsSelf((*(_25021_p1))._field_Decl)) {
		if ((!(_1acaa0ecb_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1acaa1262_IsRef((*(_25021_p1))._field_Decl) != _1acaa1262_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*(*(_25021_p1))._field_Decl.alloc)._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1acbc15d5_Equal((*_25021_p1.alloc)._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be33d812(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _6521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _6536_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1be33d812_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be33d812_ctx>();
	return _1ac92e82c__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be34078c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _7221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _7236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1be34078c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be34078c_ctx>();
	return _1ac92ec28__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be359157(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _17821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _17836_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1be359157_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be359157_ctx>();
	return _1ac932a50__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be35b0d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _18521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _18536_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1be35b0d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be35b0d2_ctx>();
	return _1ac932e4b__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1be36c544(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _28321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _28336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1be36c544_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be36c544_ctx>();
	return _1ac935c62__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda394b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bda394b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bda394b4_ctx>();
	return _1ac938a9a__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda3b483(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _40921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _40936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bda3b483_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bda3b483_ctx>();
	return _1ac939392__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bda3d40d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _41621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _41636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bda3d40d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bda3d40d_ctx>();
	return _1ac938e96__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdac8c90(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _97421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _97436_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdac8c90_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdac8c90_ctx>();
	return _1ac93dd03__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdacac1a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98136_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdacac1a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdacac1a_ctx>();
	return _1ac93e1ee__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaccb95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _98821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _98836_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdaccb95_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdaccb95_ctx>();
	return _1ac93e9e6__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaceb20(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _99521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _99536_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdaceb20_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdaceb20_ctx>();
	return _1ac93ede2__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad1a9a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdad1a9a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdad1a9a_ctx>();
	return _1ac9402dd__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad3a25(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _100921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _100936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdad3a25_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdad3a25_ctx>();
	return _1ac9406d9__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad59a0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _101621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _101636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdad59a0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdad59a0_ctx>();
	return _1ac940ad5__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad792a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _102321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _102336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdad792a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdad792a_ctx>();
	return _1ac940ed1__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdad9b2a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103036_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdad9b2a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdad9b2a_ctx>();
	return _1ac9413cc__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdadbaa5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _103721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _103736_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdadbaa5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdadbaa5_ctx>();
	return _1ac9439a6__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdadda30(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _104421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _104436_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdadda30_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdadda30_ctx>();
	return _1ac9428b7__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae09aa(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105136_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdae09aa_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdae09aa_ctx>();
	return _1ac9417c8__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae2935(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _105821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _105836_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdae2935_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdae2935_ctx>();
	return _1ac941bc4__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae48b0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _106521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _106536_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdae48b0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdae48b0_ctx>();
	return _1ac9420c0__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae683a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _107221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _107236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdae683a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdae683a_ctx>();
	return _1ac9424bb__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdae87b5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _107921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _107936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdae87b5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdae87b5_ctx>();
	return _1ac942cb3__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaea740(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _108621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _108636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdaea740_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdaea740_ctx>();
	return _1ac9431ae__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaec6ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _109321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _109336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdaec6ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdaec6ba_ctx>();
	return _1ac9435aa__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdaee645(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _110021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _110036_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdaee645_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdaee645_ctx>();
	return _1ac93e5ea__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2abb0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _126221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _126236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb2abb0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb2abb0_ctx>();
	return _1ac944d2b__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2cb3a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _126921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _126936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb2cb3a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb2cb3a_ctx>();
	return _1ac945227__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb2eab5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _127621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _127636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb2eab5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb2eab5_ctx>();
	return _1ac945623__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb31a40(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _128321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _128336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb31a40_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb31a40_ctx>();
	return _1ac945a1e__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb339ba(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _129021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _129036_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb339ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb339ba_ctx>();
	return _1ac945e1a__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb35945(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _129721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _129736_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb35945_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb35945_ctx>();
	return _1ac946316__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bdb378c0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _130421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _130436_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bdb378c0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb378c0_ctx>();
	return _1ac946712__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3d768c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _142921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _142936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd3d768c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3d768c_ctx>();
	return _1ac9494b2__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3d965b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _143621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _143636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd3d965b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3d965b_ctx>();
	return _1ac9498ad__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd3db5d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _144321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _144336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd3db5d6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3db5d6_ctx>();
	return _1ac949ca9__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45166d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _194921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _194936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd45166d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd45166d_ctx>();
	return _1ac94d708__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd4535e8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _195621_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _195636_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd4535e8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd4535e8_ctx>();
	return _1ac94db04__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd455573(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _196321_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _196336_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd455573_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd455573_ctx>();
	return _1ac94e000__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd4574ed(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _197021_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _197036_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd4574ed_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd4574ed_ctx>();
	return _1ac94e3eb__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd459478(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _197721_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _197736_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd459478_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd459478_ctx>();
	return _1ac94e7e7__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45b403(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _198421_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _198436_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd45b403_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd45b403_ctx>();
	return _1ac94ebe3__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd45d37d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _199121_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _199136_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd45d37d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd45d37d_ctx>();
	return _1ac9500de__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd460308(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _199821_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _199836_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd460308_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd460308_ctx>();
	return _1ac9504da__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd462508(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _200521_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _200536_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd462508_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd462508_ctx>();
	return _1ac9508d6__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd464483(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _201221_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _201236_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd464483_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd464483_ctx>();
	return _1ac950cd2__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1acb8cded_Data> __jule_anon_1bd46640d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb8edbc_eval>* _201921_e, jule::Ptr<_1ac9b6771_FnCallExpr>* _201936_fc, jule::Ptr<_1acb8cded_Data>* ) {
	jule::Ptr<__jule_anon_1bd46640d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd46640d_ctx>();
	return _1ac9511cd__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1be4a4deb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _6415_sema, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1be4a4deb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be4a4deb_ctx>();
	{
		auto expr = &((*__jule_closure_ctx.alloc->_self_.alloc)._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4a5ec9:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1ac9ba91d_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1acbbe4b2_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1be4a5ec9;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(0LL, (*((*_6516_g.alloc)._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1acbc0d98_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*((*_6516_g.alloc)._field_Constraint))._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be4a8d12:;
					if (it != expr_end) {
						jule::Ptr<_1abc4259c_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1acbc0d98_Type> _7310_kind = _1acb218dc_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1acbe1281_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1be4aabe3:;
										{
											jule::Ptr<_1abc42ba7_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1abc42ba7_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1ac955ac8_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1be4ae312;
											};
										}
									}
									_match_end_1be4aab6b:;
								};
								return false;;
							};
							_julec_label_1be4ae312:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acbc0d98_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1be4a8d12:;
						++it;
						goto _iter_begin_1be4a8d12;
					}
					_iter_end_1be4a8d12:;
				};
			}
			_iter_next_1be4a5ec9:;
			++it;
			_659_i++;
			goto _iter_begin_1be4a5ec9;
		}
		_iter_end_1be4a5ec9:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1be7767e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _48735_spkg) {
	jule::Ptr<__jule_anon_1be7767e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be7767e9_ctx>();
	return ((!(_1ac986ab5_isImplicitImport(_48735_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48628_pkg))))._field_Path == (*(_48735_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1be7d8086(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _83442_sema) {
	jule::Ptr<__jule_anon_1be7d8086_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be7d8086_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82743_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7d9098:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _83616_p = *it;
			{
				if ((!(_1acaa0ecb_IsSelf((*(_83616_p))._field_Decl.ptr())))) {
					(*_83616_p.alloc)._field_Type=_1acb262b5_buildNonGenericType((*(_83442_sema)), &((*((*(*(_83616_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
					__jule_func_result=(__jule_func_result && ((*_83616_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1be7d9098:;
			++it;
			goto _iter_begin_1be7d9098;
		}
		_iter_end_1be7d9098:;
	};
	if ((!(_1acaa2807_IsVoid((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result=_1acb262b5_buildNonGenericType((*(_83442_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82743_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1be80105a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _93742_sema) {
	jule::Ptr<__jule_anon_1be80105a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be80105a_ctx>();
	return __jule_closure_ctx.alloc->_93046_algo(_93742_sema, &(__jule_closure_ctx.alloc->_9357_generics));;
}

inline jule::Bool __jule_anon_1be805845(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac9a8c2a_sema>* _95337_sema, jule::Slice<jule::Ptr<_1acbc00a6_TypeAlias>>* _95355_generics) {
	jule::Ptr<__jule_anon_1be805845_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be805845_ctx>();
	jule::Bool _9548_ok = true;;
	{
		auto expr = &((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be806cec:;
		if (it != expr_end) {
			jule::Ptr<_1acaa42a9_ParamIns> _95516_p = *it;
			{
				if (_1acaa0ecb_IsSelf((*(_95516_p))._field_Decl.ptr())) {
					if (((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner == nullptr)) {
						goto _iter_next_1be806cec;
					};
					if (_1acaa1262_IsRef((*(_95516_p))._field_Decl)) {
						(*_95516_p.alloc)._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)});
					} else {
						(*_95516_p.alloc)._field_Type=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Owner, (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data0)});
					};
				} else {
					(*(_95516_p))._field_Type=_1acb2303c_buildTypeWithGenerics((*(_95337_sema)), &((*((*((*_95516_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95355_generics)), (*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Refers);
					if (((*_95516_p.alloc)._field_Type != nullptr)) {
						_1acb2800e_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95516_p));
					} else {
						_9548_ok=false;
					};
				};
			}
			_iter_next_1be806cec:;
			++it;
			goto _iter_begin_1be806cec;
		}
		_iter_end_1be806cec:;
	};
	if ((!(_1acaa2807_IsVoid((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Result=_1acb2303c_buildTypeWithGenerics((*(_95337_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94937_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95355_generics)), (*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Refers);
		_9548_ok=(((*__jule_closure_ctx.alloc->_94937_f.alloc)._field_Result != nullptr) && _9548_ok);
	};
	return _9548_ok;;
}

inline jule::Str __jule_anon1be987378(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be988478:;
			{
				return (*((*(_85519_def)).cast_ptr<_1acbc00a6_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be98829c:;
			{
				return (*((*(_85519_def)).cast_ptr<_1ac9ce129_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1be987d5c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1be987ce6:;
	};
}

inline void __jule_anon_1c0c0e346(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _19031_file) {
	jule::Ptr<__jule_anon_1c0c0e346_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c0e346_ctx>();
	{
		auto expr = &((*((*(_19031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c0ecc5:;
		if (it != expr_end) {
			jule::Ptr<_1acb3d420_Var> _19116_v = *it;
			{
				if (_1ad620a28_HasDirective(&((*(_19116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1c0c04eeb_isLive(__jule_closure_ctx.alloc->_self_, &(_19116_v))))) {
						_1c0c084e9_pushLive(__jule_closure_ctx.alloc->_self_, _19116_v);
						_1bb23a844_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_19116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1c0c0ecc5:;
			++it;
			goto _iter_begin_1c0c0ecc5;
		}
		_iter_end_1c0c0ecc5:;
	};
	{
		auto expr = &((*((*(_19031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c10cc6:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _19916_f = *it;
			{
				if (_1ad620a28_HasDirective(&((*(_19916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_19916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c0c12811:;
						if (it != expr_end) {
							jule::Ptr<_1acaa540e_FnIns> _20118_ins = *it;
							{
								if ((!(_1c0bc50dc_isLive(__jule_closure_ctx.alloc->_self_, &(_20118_ins))))) {
									_1c0bc62ca_pushLive(__jule_closure_ctx.alloc->_self_, _20118_ins);
									_1bb23a844_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_20118_ins))._field_Refers));
								};
							}
							_iter_next_1c0c12811:;
							++it;
							goto _iter_begin_1c0c12811;
						}
						_iter_end_1c0c12811:;
					};
				};
			}
			_iter_next_1c0c10cc6:;
			++it;
			goto _iter_begin_1c0c10cc6;
		}
		_iter_end_1c0c10cc6:;
	};
}

inline void __jule_anon_1c0c65776(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1c0c65776_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c65776_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c0c661c2:;
			{
				jule::Ptr<_1aca97115_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1bb23e0ea_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c0c66018:;
			{
				jule::Ptr<_1aca97e4b_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1aca97e4b_AnonFnExprModel>(&__jule_any_type103);;
				_1bb241a59_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1c0c6614a:;
	};
}

inline void __jule_anon_1c1052414(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _69547_m) {
	jule::Ptr<__jule_anon_1c1052414_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1052414_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_69547_m));
	};
	{
		auto &_match_expr{ (*(_69547_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c1052ca5:;
			{
				{
					_1bb11b22a_binary(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca95135_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c1052ee7:;
			{
				{
					_1bb11b4d3_unary(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca9550e_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c1052d1b:;
			{
				{
					_1bb11b78b_structureLit(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca95dd3_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c1052d82:;
			{
				{
					_1bb11ba44_casting(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca96763_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c1052de8:;
			{
				{
					_1bb11c979_funcCall(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca97115_FnCallExprModel>(&__jule_any_type31));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c1053701:;
			{
				{
					_1bb11c6c1_lenCall(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca9c24c_BuiltinLenCallExprModel>(&__jule_any_type118));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c1053767:;
			{
				{
					_1bb11cc32_indexing(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca97995_IndexingExprModel>(&__jule_any_type43));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c10537de:;
			{
				{
					_1bb11ceda_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_69547_m)).cast_ptr<_1aca97e4b_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1c1052b95:;
	};
}

inline void __jule_anon_1c11054d9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c11054d9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c11054d9_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1c1109125(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c1109125_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1109125_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1c1128b17(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c1128b17_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1128b17_ctx>();
	_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1c112b103(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c112b103_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c112b103_ctx>();
	_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1c11451e9(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c11451e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c11451e9_ctx>();
	_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1c11ce8d2(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c11ce8d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c11ce8d2_ctx>();
	_1aae499b4_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1c11d0c13(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c11d0c13_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c11d0c13_ctx>();
	_1bb258c5d_possibleRefExpr((*(*(__jule_closure_ctx.alloc->_self_))._field_oc.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_75730_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1c1256d88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acb3d420_Var> _113367_v) {
	jule::Ptr<__jule_anon_1c1256d88_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1256d88_ctx>();
	return _1bb251d22_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_112734_m), &(_113367_v));;
}

inline void __jule_anon_1c1623100(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _83538_pkg) {
	jule::Ptr<__jule_anon_1c1623100_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1623100_ctx>();
	_1ad61b02e_IterFiles(_83538_pkg, jule::__new_closure<void,jule::Ptr<_1acaa8654_SymTab>*>((void*)__jule_anon_1c1624013, jule::Ptr<__jule_anon_1c1624013_ctx>::make(__jule_anon_1c1624013_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c1624013_ctx_handler));
}

inline void __jule_anon_1c1637dd4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c1637dd4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1637dd4_ctx>();
	_1aae499b4_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1bb262dbb_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
	_1aae499b4_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c1639ec4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c1639ec4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1639ec4_ctx>();
	_1bb258c5d_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c163c6d0(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c163c6d0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c163c6d0_ctx>();
	_1aae499b4_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c163d879(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c163d879_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c163d879_ctx>();
	_1bb264087_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92024_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1c167ca1c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _118238_pkg) {
	jule::Ptr<__jule_anon_1c167ca1c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c167ca1c_ctx>();
	_1ad61b02e_IterFiles(_118238_pkg, jule::__new_closure<void,jule::Ptr<_1acaa8654_SymTab>*>((void*)__jule_anon_1c167d930, jule::Ptr<__jule_anon_1c167d930_ctx>::make(__jule_anon_1c167d930_ctx{._118238_pkg=_118238_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c167d930_ctx_handler));
}

inline void __jule_anon_1c167de4c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _120531_file) {
	jule::Ptr<__jule_anon_1c167de4c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c167de4c_ctx>();
	{
		auto expr = &((*((*(_120531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c168324d:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _120616_f = *it;
			{
				if ((*(_120616_f))._field_Ident.equal("init", 4)) {
					_1aae4a366_indent(__jule_closure_ctx.alloc->_self_);
					static__1bb26a8eb_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120616_f));
					_1aae499b4_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1c168324d:;
			++it;
			goto _iter_begin_1c168324d;
		}
		_iter_end_1c168324d:;
	};
}

inline void __jule_anon_1c168a387(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _124438_pkg) {
	jule::Ptr<__jule_anon_1c168a387_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c168a387_ctx>();
	_1aae55250_pushInit(__jule_closure_ctx.alloc->_self_, _124438_pkg);
}

inline void __jule_anon_1c1690568(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa2351_Fn>* _128136_m) {
	jule::Ptr<__jule_anon_1c1690568_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1690568_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12777_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16910b3:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _128311_em = *it;
			{
				if ((_128311_em == (*(_128136_m)))) {
					return;;
				};
			}
			_iter_next_1c16910b3:;
			++it;
			goto _iter_begin_1c16910b3;
		}
		_iter_end_1c16910b3:;
	};
	(*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1acaa2351_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128136_m)); __jule_collection; }));
}

inline void __jule_anon_1c1692b42(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98e150_Package>* _129538_pkg) {
	jule::Ptr<__jule_anon_1c1692b42_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1692b42_ctx>();
	_1ad61b02e_IterFiles(_129538_pkg, jule::__new_closure<void,jule::Ptr<_1acaa8654_SymTab>*>((void*)__jule_anon_1c1693a55, jule::Ptr<__jule_anon_1c1693a55_ctx>::make(__jule_anon_1c1693a55_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c1693a55_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c1361734(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1aa508b34_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c13694c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1aa50867d_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1be332174(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1bec88019(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1ac98b8cd_ImportInfo> _473230_imp) {
	jule::Ptr<__jule_anon_1bec88019_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bec88019_ctx>();
	return (((*(_473230_imp))._field_Alias == __jule_closure_ctx.alloc->_473138_namespace) && (!(_1ac986ab5_isImplicitImport(_473230_imp))));;
}

inline void __jule_anon_1c1624013(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _83632_file) {
	jule::Ptr<__jule_anon_1c1624013_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1624013_ctx>();
	{
		auto expr = &((*((*(_83632_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1624992:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _83717_f = *it;
			{
				if (((!((*(_83717_f))._field_Binded)) && ((*_83717_f.alloc)._field_Token != nullptr))) {
					_1aae4ba2c_pushResult(__jule_closure_ctx.alloc->_self_, &(_83717_f));
					_1aae501a1_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83717_f), false);
				};
			}
			_iter_next_1c1624992:;
			++it;
			goto _iter_begin_1c1624992;
		}
		_iter_end_1c1624992:;
	};
}

inline void __jule_anon_1c167d930(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _118332_file) {
	jule::Ptr<__jule_anon_1c167d930_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c167d930_ctx>();
	{
		auto expr = &((*((*(_118332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c167e3ae:;
		if (it != expr_end) {
			jule::Ptr<_1acaa2351_Fn> _118417_f = *it;
			{
				if (((!(_1a8e6157c_Test)) && _1ad620a28_HasDirective(&((*(_118417_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1c167e3ae;
				};
				if (((*(__jule_closure_ctx.alloc->_118238_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118417_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1c1680d72:;
							{
								goto _iter_next_1c167e3ae;
							}
						}
						_match_end_1c1680ca6:;
					};
				};
				if (((!((*_118417_f.alloc)._field_Binded)) && ((*_118417_f.alloc)._field_Token != nullptr))) {
					_1aae526e2_func(__jule_closure_ctx.alloc->_self_, &(_118417_f));
					_1aae499b4_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c167e3ae:;
			++it;
			goto _iter_begin_1c167e3ae;
		}
		_iter_end_1c167e3ae:;
	};
}

inline void __jule_anon_1c1693a55(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1acaa8654_SymTab>* _129632_file) {
	jule::Ptr<__jule_anon_1c1693a55_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1693a55_ctx>();
	{
		auto expr = &((*((*(_129632_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c16944d4:;
		if (it != expr_end) {
			jule::Ptr<_1acaaca65_Trait> _129717_t = *it;
			{
				if (((*(_129717_t))._field_Token != nullptr)) {
					_1aae55d00_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129717_t));
				};
			}
			_iter_next_1c16944d4:;
			++it;
			goto _iter_begin_1c16944d4;
		}
		_iter_end_1c16944d4:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1a8e6310b_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1aaecbb9a_OutDir = jule::Str::lit("dist", 4);
	_1aaecc074_OutName = jule::Str::lit("ir.cpp", 6);
	_1aaecc32c_Out = jule::Str();
	_1bb72746d_STDIN = _1bb727c76_GetStdHandle(static_cast<jule::Uintptr>(4294967286LLU));
	_1bb727715_STDOUT = _1bb727c76_GetStdHandle(static_cast<jule::Uintptr>(4294967285LLU));
	_1bb727a12_STDERR = _1bb727c76_GetStdHandle(static_cast<jule::Uintptr>(4294967284LLU));
	_1bb48a841_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1bb48b28c_acceptRanges = ({ auto __jule_collection = jule::Array<_1bb48ade6_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1bb48ade6_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1bb48ade6_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1bb48ade6_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1bb48ade6_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1bb48ade6_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1bb48ade6_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1a690b03a__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1a690b623__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1a8dcee68__L = jule::new_ptr<_1a8e426b2_RangeTable>(_1a8e426b2_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1a8e41c11_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1a8e41c11_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1a8e4223e_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1a8e4223e_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1a8dd0d7b__LU = jule::new_ptr<_1a8e426b2_RangeTable>(_1a8e426b2_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1a8e41c11_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1a8e41c11_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1a8e41c11_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1a8e4223e_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1a8e4223e_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1a8e4223e_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1a8dd6d60_Letter = _1a8dcee68__L;
	_1a8ddd130_Upper = _1a8dd0d7b__LU;
	_1a8e3a820__CaseRanges = ({ auto __jule_collection = jule::Slice<_1a8e4175a_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1a8e4175a_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1a8e4175a_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1a8e3ab0b__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1a8e3c8dd_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1a8e3cbc9_caseOrbit = ({ auto __jule_collection = jule::Slice<_1a8e41260_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1a8e41260_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1a8e41260_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1a8e41260_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1a8e41260_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1a8e41260_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1a8e41260_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1a8e41260_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1a8e41260_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1a8e41260_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1a8e41260_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1a8e41260_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1a8e41260_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1a8e41260_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1a8e41260_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1a8e41260_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1a8e41260_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1a8e41260_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1a8e41260_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1a8e41260_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1a8e41260_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1a8e41260_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1a8e41260_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1a8e41260_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1a8e41260_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1a8e41260_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1a8e41260_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1a8e41260_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1a8e41260_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1a8e41260_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1a8e41260_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1a8e41260_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1a8e41260_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1a8e41260_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1a8e41260_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1a8e41260_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1a8e41260_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1a8e41260_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1a8e41260_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1a8e41260_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1a8e41260_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1a8e41260_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1a8e41260_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1a8e41260_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1a8e41260_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1a8e41260_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1a8e41260_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1a8e41260_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1a8e41260_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1a8e41260_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1a8e41260_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1a8e41260_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1a8e41260_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1a8e41260_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1a8e41260_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1a8e41260_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1a8e41260_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1a8e41260_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1a8e41260_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1a8e41260_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1a6a21738_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1a6a21947_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1a6a21b67_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1a8e59d8e_PathStdlib = jule::Str();
	_1a8e5a0e2_PathExec = jule::Str();
	_1a8e5a378_PathWd = jule::Str();
	_1a8e5a675_PathApi = jule::Str();
	_1a8e5a92d_OS = jule::Str::lit("windows", 7);
	_1a8e5abd6_Arch = jule::Str::lit("i386", 4);
	_1a8e5e668_Compiler = jule::Str();
	_1a8e60a65_CompilerPath = jule::Str();
	_1a8e60c74_CppStd = jule::Str::lit("cpp17", 5);
	_1a8e6101b_Shadowing = false;
	_1a8e612c4_Transpilation = false;
	_1a8e6157c_Test = false;
	_1a8e61835_RC = true;
	_1a8e61bed_Safety = true;
	_1a8e61e40_Production = false;
	_1aa502974_f32info = _1aa502622_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1aa502c71_f64info = _1aa502622_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1aa50a5a3_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1aa50c30d_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1aa50cdbe_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1aa50d1ee_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1aa511400_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1aa5155be_leftCheats = ({ auto __jule_collection = jule::Slice<_1aa515190_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1aa515190_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1aa515190_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1aa515190_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1aa515190_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1aa515190_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1aa515190_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1aa515190_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1aa515190_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1aa515190_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1aa515190_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1aa515190_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1aa515190_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1aa515190_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1aa515190_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1aa515190_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1aa515190_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1aa515190_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1aa515190_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1aa515190_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1aa515190_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1aa515190_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1aa515190_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1aa515190_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1aa515190_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1aa515190_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1aa515190_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1aa515190_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1aa515190_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1aa515190_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1aa515190_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1aa515190_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1aa515190_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1aa515190_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1aa515190_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1aa515190_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1aa515190_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1aa515190_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1aa515190_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1aa515190_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1aa515190_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1aa515190_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1aa515190_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1aa515190_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1aa515190_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1aa515190_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1aa515190_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1aa515190_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1aa515190_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1aa515190_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1aa515190_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1aa515190_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1aa515190_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1aa515190_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1aa515190_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1aa515190_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1aa515190_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1aa515190_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1aa515190_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1aa515190_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1aa515190_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1aa515190_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1abc25393_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1abc2565c_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1abc2598c_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1abc26064_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1abc26350_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1abc34d42_keywords = ({ auto __jule_collection = jule::Array<_1abc34957_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1abc35172_basicOps = ({ auto __jule_collection = jule::Array<_1abc34957_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1abc34957_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1ac92249b_BitSize = 0LL;
	_1ac9226dd_SysInt = jule::Str();
	_1ac922985_SysUint = jule::Str();
	_1ac95380c_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1acc43e3d_primNil = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1acc4423a_primVoid = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc444e3_primAny = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc447e0_primStr = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc44a98_primBool = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc44d51_primUintptr = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc45109_primUint = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc454c2_primInt = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc45714_primI8 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc459ab_primI16 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc45c64_primI32 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc4601c_primI64 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc462c5_primU8 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc4657d_primU16 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc46836_primU32 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc46d20_primU64 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc47062_primF32 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1acc47271_primF64 = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1acbdd338_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)});
	_1ad623a2b_ProgramMeta = static_cast<jule::Ptr<_1ad625c5e_Meta>>(nullptr);
	_1bb121e34_emptyData = jule::new_ptr<_1bb1228e6_data>(_1bb1228e6_data{._field_boundary=jule::Ptr<_1bb1241cd_boundary>(nullptr), ._field_nils=jule::Ptr<_1bb10decb_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bb11ea14_dynamic>(nullptr), ._field_flags=0LL});
	_1bb126dd4_Copy = false;
	_1bb1271d1_Deadcode = false;
	_1bb127489_Append = false;
	_1bb127786_Math = false;
	_1bb127a3e_Access = false;
	_1bb127ce7_Inline = false;
	_1bb1280a0_Ptr = false;
	_1bb128468_Cond = false;
	_1bb1286aa_Str = false;
	_1bb128952_Slice = false;
	_1bb128c0a_Assign = false;
	_1bb128eb3_Exceptional = false;
	_1bb12926b_Iter = false;
	_1bb129524_Dynamic = false;
	_1bb1297cc_Array = false;
	_1bb129cb6_Len = false;
	_1bb12a008_StdStrings = false;
	_1bb12a217_StdMathCmplx = false;
	_1bb243b38_exprEnabled = false;
	_1bb243d47_scopeEnabled = false;
	_1aae3aa2c_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1bb247895_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1aae46719_generalGCPtr = jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbcc9dc_Sptr>(_1acbcc9dc_Sptr{._field_Elem=jule::new_ptr<_1acbc0d98_Type>(_1acbc0d98_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1acbc8eb1_Prim>(_1acbc8eb1_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1acbc08e2_Kind_mptr_data23)});
	_1a8e3a534_CaseRanges = _1a8e3a820__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1a8e648e3_main();

	return EXIT_SUCCESS;
}